
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001cd28  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003f1c  0801ced8  0801ced8  0002ced8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00001962  08020df4  08020df4  00030df4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000038  08022758  08022758  00032758  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000013c  08022790  08022790  00032790  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00037a68  080228cc  080228cc  000328cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0805a334  0805a334  00070164  2**0
                  CONTENTS
  8 .ARM          00000008  0805a334  0805a334  0006a334  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0805a33c  0805a33c  00070164  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0805a33c  0805a33c  0006a33c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  0805a350  0805a350  0006a350  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000164  20000000  0805a358  00070000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000138ec  20000164  0805a4bc  00070164  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20013a50  0805a4bc  00073a50  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00070164  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  00080000  2**2
                  ALLOC
 17 .debug_line   0005ed1b  00000000  00000000  00070194  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   001037c0  00000000  00000000  000ceeaf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0001c185  00000000  00000000  001d266f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000034c0  00000000  00000000  001ee7f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0010d27f  00000000  00000000  001f1cb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00005ac8  00000000  00000000  002fef38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00032f0d  00000000  00000000  00304a00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00033cde  00000000  00000000  0033790d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000d2  00000000  00000000  0036b5eb  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00009574  00000000  00000000  0036b6c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000164 	.word	0x20000164
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801cec0 	.word	0x0801cec0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000168 	.word	0x20000168
 80001ec:	0801cec0 	.word	0x0801cec0

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b96e 	b.w	8000594 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468c      	mov	ip, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	f040 8083 	bne.w	80003e6 <__udivmoddi4+0x116>
 80002e0:	428a      	cmp	r2, r1
 80002e2:	4617      	mov	r7, r2
 80002e4:	d947      	bls.n	8000376 <__udivmoddi4+0xa6>
 80002e6:	fab2 f282 	clz	r2, r2
 80002ea:	b142      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ec:	f1c2 0020 	rsb	r0, r2, #32
 80002f0:	fa24 f000 	lsr.w	r0, r4, r0
 80002f4:	4091      	lsls	r1, r2
 80002f6:	4097      	lsls	r7, r2
 80002f8:	ea40 0c01 	orr.w	ip, r0, r1
 80002fc:	4094      	lsls	r4, r2
 80002fe:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000302:	0c23      	lsrs	r3, r4, #16
 8000304:	fbbc f6f8 	udiv	r6, ip, r8
 8000308:	fa1f fe87 	uxth.w	lr, r7
 800030c:	fb08 c116 	mls	r1, r8, r6, ip
 8000310:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000314:	fb06 f10e 	mul.w	r1, r6, lr
 8000318:	4299      	cmp	r1, r3
 800031a:	d909      	bls.n	8000330 <__udivmoddi4+0x60>
 800031c:	18fb      	adds	r3, r7, r3
 800031e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000322:	f080 8119 	bcs.w	8000558 <__udivmoddi4+0x288>
 8000326:	4299      	cmp	r1, r3
 8000328:	f240 8116 	bls.w	8000558 <__udivmoddi4+0x288>
 800032c:	3e02      	subs	r6, #2
 800032e:	443b      	add	r3, r7
 8000330:	1a5b      	subs	r3, r3, r1
 8000332:	b2a4      	uxth	r4, r4
 8000334:	fbb3 f0f8 	udiv	r0, r3, r8
 8000338:	fb08 3310 	mls	r3, r8, r0, r3
 800033c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000340:	fb00 fe0e 	mul.w	lr, r0, lr
 8000344:	45a6      	cmp	lr, r4
 8000346:	d909      	bls.n	800035c <__udivmoddi4+0x8c>
 8000348:	193c      	adds	r4, r7, r4
 800034a:	f100 33ff 	add.w	r3, r0, #4294967295
 800034e:	f080 8105 	bcs.w	800055c <__udivmoddi4+0x28c>
 8000352:	45a6      	cmp	lr, r4
 8000354:	f240 8102 	bls.w	800055c <__udivmoddi4+0x28c>
 8000358:	3802      	subs	r0, #2
 800035a:	443c      	add	r4, r7
 800035c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000360:	eba4 040e 	sub.w	r4, r4, lr
 8000364:	2600      	movs	r6, #0
 8000366:	b11d      	cbz	r5, 8000370 <__udivmoddi4+0xa0>
 8000368:	40d4      	lsrs	r4, r2
 800036a:	2300      	movs	r3, #0
 800036c:	e9c5 4300 	strd	r4, r3, [r5]
 8000370:	4631      	mov	r1, r6
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	b902      	cbnz	r2, 800037a <__udivmoddi4+0xaa>
 8000378:	deff      	udf	#255	; 0xff
 800037a:	fab2 f282 	clz	r2, r2
 800037e:	2a00      	cmp	r2, #0
 8000380:	d150      	bne.n	8000424 <__udivmoddi4+0x154>
 8000382:	1bcb      	subs	r3, r1, r7
 8000384:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000388:	fa1f f887 	uxth.w	r8, r7
 800038c:	2601      	movs	r6, #1
 800038e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000392:	0c21      	lsrs	r1, r4, #16
 8000394:	fb0e 331c 	mls	r3, lr, ip, r3
 8000398:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800039c:	fb08 f30c 	mul.w	r3, r8, ip
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d907      	bls.n	80003b4 <__udivmoddi4+0xe4>
 80003a4:	1879      	adds	r1, r7, r1
 80003a6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003aa:	d202      	bcs.n	80003b2 <__udivmoddi4+0xe2>
 80003ac:	428b      	cmp	r3, r1
 80003ae:	f200 80e9 	bhi.w	8000584 <__udivmoddi4+0x2b4>
 80003b2:	4684      	mov	ip, r0
 80003b4:	1ac9      	subs	r1, r1, r3
 80003b6:	b2a3      	uxth	r3, r4
 80003b8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003bc:	fb0e 1110 	mls	r1, lr, r0, r1
 80003c0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003c4:	fb08 f800 	mul.w	r8, r8, r0
 80003c8:	45a0      	cmp	r8, r4
 80003ca:	d907      	bls.n	80003dc <__udivmoddi4+0x10c>
 80003cc:	193c      	adds	r4, r7, r4
 80003ce:	f100 33ff 	add.w	r3, r0, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x10a>
 80003d4:	45a0      	cmp	r8, r4
 80003d6:	f200 80d9 	bhi.w	800058c <__udivmoddi4+0x2bc>
 80003da:	4618      	mov	r0, r3
 80003dc:	eba4 0408 	sub.w	r4, r4, r8
 80003e0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003e4:	e7bf      	b.n	8000366 <__udivmoddi4+0x96>
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x12e>
 80003ea:	2d00      	cmp	r5, #0
 80003ec:	f000 80b1 	beq.w	8000552 <__udivmoddi4+0x282>
 80003f0:	2600      	movs	r6, #0
 80003f2:	e9c5 0100 	strd	r0, r1, [r5]
 80003f6:	4630      	mov	r0, r6
 80003f8:	4631      	mov	r1, r6
 80003fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003fe:	fab3 f683 	clz	r6, r3
 8000402:	2e00      	cmp	r6, #0
 8000404:	d14a      	bne.n	800049c <__udivmoddi4+0x1cc>
 8000406:	428b      	cmp	r3, r1
 8000408:	d302      	bcc.n	8000410 <__udivmoddi4+0x140>
 800040a:	4282      	cmp	r2, r0
 800040c:	f200 80b8 	bhi.w	8000580 <__udivmoddi4+0x2b0>
 8000410:	1a84      	subs	r4, r0, r2
 8000412:	eb61 0103 	sbc.w	r1, r1, r3
 8000416:	2001      	movs	r0, #1
 8000418:	468c      	mov	ip, r1
 800041a:	2d00      	cmp	r5, #0
 800041c:	d0a8      	beq.n	8000370 <__udivmoddi4+0xa0>
 800041e:	e9c5 4c00 	strd	r4, ip, [r5]
 8000422:	e7a5      	b.n	8000370 <__udivmoddi4+0xa0>
 8000424:	f1c2 0320 	rsb	r3, r2, #32
 8000428:	fa20 f603 	lsr.w	r6, r0, r3
 800042c:	4097      	lsls	r7, r2
 800042e:	fa01 f002 	lsl.w	r0, r1, r2
 8000432:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000436:	40d9      	lsrs	r1, r3
 8000438:	4330      	orrs	r0, r6
 800043a:	0c03      	lsrs	r3, r0, #16
 800043c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000440:	fa1f f887 	uxth.w	r8, r7
 8000444:	fb0e 1116 	mls	r1, lr, r6, r1
 8000448:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800044c:	fb06 f108 	mul.w	r1, r6, r8
 8000450:	4299      	cmp	r1, r3
 8000452:	fa04 f402 	lsl.w	r4, r4, r2
 8000456:	d909      	bls.n	800046c <__udivmoddi4+0x19c>
 8000458:	18fb      	adds	r3, r7, r3
 800045a:	f106 3cff 	add.w	ip, r6, #4294967295
 800045e:	f080 808d 	bcs.w	800057c <__udivmoddi4+0x2ac>
 8000462:	4299      	cmp	r1, r3
 8000464:	f240 808a 	bls.w	800057c <__udivmoddi4+0x2ac>
 8000468:	3e02      	subs	r6, #2
 800046a:	443b      	add	r3, r7
 800046c:	1a5b      	subs	r3, r3, r1
 800046e:	b281      	uxth	r1, r0
 8000470:	fbb3 f0fe 	udiv	r0, r3, lr
 8000474:	fb0e 3310 	mls	r3, lr, r0, r3
 8000478:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800047c:	fb00 f308 	mul.w	r3, r0, r8
 8000480:	428b      	cmp	r3, r1
 8000482:	d907      	bls.n	8000494 <__udivmoddi4+0x1c4>
 8000484:	1879      	adds	r1, r7, r1
 8000486:	f100 3cff 	add.w	ip, r0, #4294967295
 800048a:	d273      	bcs.n	8000574 <__udivmoddi4+0x2a4>
 800048c:	428b      	cmp	r3, r1
 800048e:	d971      	bls.n	8000574 <__udivmoddi4+0x2a4>
 8000490:	3802      	subs	r0, #2
 8000492:	4439      	add	r1, r7
 8000494:	1acb      	subs	r3, r1, r3
 8000496:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800049a:	e778      	b.n	800038e <__udivmoddi4+0xbe>
 800049c:	f1c6 0c20 	rsb	ip, r6, #32
 80004a0:	fa03 f406 	lsl.w	r4, r3, r6
 80004a4:	fa22 f30c 	lsr.w	r3, r2, ip
 80004a8:	431c      	orrs	r4, r3
 80004aa:	fa20 f70c 	lsr.w	r7, r0, ip
 80004ae:	fa01 f306 	lsl.w	r3, r1, r6
 80004b2:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80004b6:	fa21 f10c 	lsr.w	r1, r1, ip
 80004ba:	431f      	orrs	r7, r3
 80004bc:	0c3b      	lsrs	r3, r7, #16
 80004be:	fbb1 f9fe 	udiv	r9, r1, lr
 80004c2:	fa1f f884 	uxth.w	r8, r4
 80004c6:	fb0e 1119 	mls	r1, lr, r9, r1
 80004ca:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004ce:	fb09 fa08 	mul.w	sl, r9, r8
 80004d2:	458a      	cmp	sl, r1
 80004d4:	fa02 f206 	lsl.w	r2, r2, r6
 80004d8:	fa00 f306 	lsl.w	r3, r0, r6
 80004dc:	d908      	bls.n	80004f0 <__udivmoddi4+0x220>
 80004de:	1861      	adds	r1, r4, r1
 80004e0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004e4:	d248      	bcs.n	8000578 <__udivmoddi4+0x2a8>
 80004e6:	458a      	cmp	sl, r1
 80004e8:	d946      	bls.n	8000578 <__udivmoddi4+0x2a8>
 80004ea:	f1a9 0902 	sub.w	r9, r9, #2
 80004ee:	4421      	add	r1, r4
 80004f0:	eba1 010a 	sub.w	r1, r1, sl
 80004f4:	b2bf      	uxth	r7, r7
 80004f6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004fa:	fb0e 1110 	mls	r1, lr, r0, r1
 80004fe:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000502:	fb00 f808 	mul.w	r8, r0, r8
 8000506:	45b8      	cmp	r8, r7
 8000508:	d907      	bls.n	800051a <__udivmoddi4+0x24a>
 800050a:	19e7      	adds	r7, r4, r7
 800050c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000510:	d22e      	bcs.n	8000570 <__udivmoddi4+0x2a0>
 8000512:	45b8      	cmp	r8, r7
 8000514:	d92c      	bls.n	8000570 <__udivmoddi4+0x2a0>
 8000516:	3802      	subs	r0, #2
 8000518:	4427      	add	r7, r4
 800051a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800051e:	eba7 0708 	sub.w	r7, r7, r8
 8000522:	fba0 8902 	umull	r8, r9, r0, r2
 8000526:	454f      	cmp	r7, r9
 8000528:	46c6      	mov	lr, r8
 800052a:	4649      	mov	r1, r9
 800052c:	d31a      	bcc.n	8000564 <__udivmoddi4+0x294>
 800052e:	d017      	beq.n	8000560 <__udivmoddi4+0x290>
 8000530:	b15d      	cbz	r5, 800054a <__udivmoddi4+0x27a>
 8000532:	ebb3 020e 	subs.w	r2, r3, lr
 8000536:	eb67 0701 	sbc.w	r7, r7, r1
 800053a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800053e:	40f2      	lsrs	r2, r6
 8000540:	ea4c 0202 	orr.w	r2, ip, r2
 8000544:	40f7      	lsrs	r7, r6
 8000546:	e9c5 2700 	strd	r2, r7, [r5]
 800054a:	2600      	movs	r6, #0
 800054c:	4631      	mov	r1, r6
 800054e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e70b      	b.n	8000370 <__udivmoddi4+0xa0>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e9      	b.n	8000330 <__udivmoddi4+0x60>
 800055c:	4618      	mov	r0, r3
 800055e:	e6fd      	b.n	800035c <__udivmoddi4+0x8c>
 8000560:	4543      	cmp	r3, r8
 8000562:	d2e5      	bcs.n	8000530 <__udivmoddi4+0x260>
 8000564:	ebb8 0e02 	subs.w	lr, r8, r2
 8000568:	eb69 0104 	sbc.w	r1, r9, r4
 800056c:	3801      	subs	r0, #1
 800056e:	e7df      	b.n	8000530 <__udivmoddi4+0x260>
 8000570:	4608      	mov	r0, r1
 8000572:	e7d2      	b.n	800051a <__udivmoddi4+0x24a>
 8000574:	4660      	mov	r0, ip
 8000576:	e78d      	b.n	8000494 <__udivmoddi4+0x1c4>
 8000578:	4681      	mov	r9, r0
 800057a:	e7b9      	b.n	80004f0 <__udivmoddi4+0x220>
 800057c:	4666      	mov	r6, ip
 800057e:	e775      	b.n	800046c <__udivmoddi4+0x19c>
 8000580:	4630      	mov	r0, r6
 8000582:	e74a      	b.n	800041a <__udivmoddi4+0x14a>
 8000584:	f1ac 0c02 	sub.w	ip, ip, #2
 8000588:	4439      	add	r1, r7
 800058a:	e713      	b.n	80003b4 <__udivmoddi4+0xe4>
 800058c:	3802      	subs	r0, #2
 800058e:	443c      	add	r4, r7
 8000590:	e724      	b.n	80003dc <__udivmoddi4+0x10c>
 8000592:	bf00      	nop

08000594 <__aeabi_idiv0>:
 8000594:	4770      	bx	lr
 8000596:	bf00      	nop

08000598 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000598:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005d0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800059c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059e:	e003      	b.n	80005a8 <LoopCopyDataInit>

080005a0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005a0:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005a2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a6:	3104      	adds	r1, #4

080005a8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a8:	480b      	ldr	r0, [pc, #44]	; (80005d8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005aa:	4b0c      	ldr	r3, [pc, #48]	; (80005dc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005ac:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ae:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005b0:	d3f6      	bcc.n	80005a0 <CopyDataInit>
  ldr  r2, =_sbss
 80005b2:	4a0b      	ldr	r2, [pc, #44]	; (80005e0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b4:	e002      	b.n	80005bc <LoopFillZerobss>

080005b6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b8:	f842 3b04 	str.w	r3, [r2], #4

080005bc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005bc:	4b09      	ldr	r3, [pc, #36]	; (80005e4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005be:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005c0:	d3f9      	bcc.n	80005b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005c2:	f004 f993 	bl	80048ec <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c6:	f01b fa73 	bl	801bab0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ca:	f000 fe09 	bl	80011e0 <main>
  bx  lr    
 80005ce:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005d0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d4:	0805a358 	.word	0x0805a358
  ldr  r0, =_sdata
 80005d8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005dc:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 80005e0:	20000164 	.word	0x20000164
  ldr  r3, = _ebss
 80005e4:	20013a50 	.word	0x20013a50

080005e8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e8:	e7fe      	b.n	80005e8 <ADC_IRQHandler>

080005ea <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005ea:	f000 bc09 	b.w	8000e00 <touchgfx_init>

080005ee <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ee:	f000 bc77 	b.w	8000ee0 <touchgfx_taskEntry>

080005f2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005f2:	4770      	bx	lr

080005f4 <_ZN20STM32TouchControllerD0Ev>:
 80005f4:	b510      	push	{r4, lr}
 80005f6:	2104      	movs	r1, #4
 80005f8:	4604      	mov	r4, r0
 80005fa:	f01b f9e0 	bl	801b9be <_ZdlPvj>
 80005fe:	4620      	mov	r0, r4
 8000600:	bd10      	pop	{r4, pc}
	...

08000604 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000604:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000606:	4b0c      	ldr	r3, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000608:	4c0c      	ldr	r4, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800060a:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 800060c:	4b0c      	ldr	r3, [pc, #48]	; (8000640 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000610:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000612:	6863      	ldr	r3, [r4, #4]
 8000614:	4798      	blx	r3
 8000616:	f640 0311 	movw	r3, #2065	; 0x811
 800061a:	4298      	cmp	r0, r3
 800061c:	d10a      	bne.n	8000634 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061e:	4d09      	ldr	r5, [pc, #36]	; (8000644 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000622:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000624:	2082      	movs	r0, #130	; 0x82
 8000626:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000628:	682b      	ldr	r3, [r5, #0]
 800062a:	2082      	movs	r0, #130	; 0x82
 800062c:	68db      	ldr	r3, [r3, #12]
 800062e:	4798      	blx	r3
 8000630:	2000      	movs	r0, #0
    }

    return ret;
}
 8000632:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000634:	2001      	movs	r0, #1
 8000636:	e7fc      	b.n	8000632 <_Z11BSP_TS_Inittt+0x2e>
 8000638:	20000180 	.word	0x20000180
 800063c:	2000004c 	.word	0x2000004c
 8000640:	20000182 	.word	0x20000182
 8000644:	20000184 	.word	0x20000184

08000648 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000648:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800064c:	20f0      	movs	r0, #240	; 0xf0
 800064e:	f7ff bfd9 	b.w	8000604 <_Z11BSP_TS_Inittt>
	...

08000654 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000654:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000656:	4d2d      	ldr	r5, [pc, #180]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000658:	682b      	ldr	r3, [r5, #0]
{
 800065a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800065c:	691b      	ldr	r3, [r3, #16]
 800065e:	2082      	movs	r0, #130	; 0x82
 8000660:	4798      	blx	r3
 8000662:	b280      	uxth	r0, r0
 8000664:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000666:	2800      	cmp	r0, #0
 8000668:	d043      	beq.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800066a:	682b      	ldr	r3, [r5, #0]
 800066c:	f10d 0206 	add.w	r2, sp, #6
 8000670:	695b      	ldr	r3, [r3, #20]
 8000672:	a901      	add	r1, sp, #4
 8000674:	2082      	movs	r0, #130	; 0x82
 8000676:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000678:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800067c:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 8000680:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000682:	2a0a      	cmp	r2, #10
 8000684:	d937      	bls.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000686:	230b      	movs	r3, #11
 8000688:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800068c:	4b20      	ldr	r3, [pc, #128]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068e:	881b      	ldrh	r3, [r3, #0]
 8000690:	429a      	cmp	r2, r3
 8000692:	d901      	bls.n	8000698 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000694:	1e5a      	subs	r2, r3, #1
 8000696:	b292      	uxth	r2, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000698:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800069c:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006a0:	428b      	cmp	r3, r1
 80006a2:	d82a      	bhi.n	80006fa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a4:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a8:	330e      	adds	r3, #14
 80006aa:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006ac:	210f      	movs	r1, #15
 80006ae:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006b2:	4918      	ldr	r1, [pc, #96]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b4:	8809      	ldrh	r1, [r1, #0]
 80006b6:	428b      	cmp	r3, r1
 80006b8:	d901      	bls.n	80006be <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006ba:	1e4b      	subs	r3, r1, #1
 80006bc:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	4e16      	ldr	r6, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	4d16      	ldr	r5, [pc, #88]	; (800071c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c4:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c6:	4283      	cmp	r3, r0
 80006c8:	b281      	uxth	r1, r0
 80006ca:	bf8c      	ite	hi
 80006cc:	1a59      	subhi	r1, r3, r1
 80006ce:	1ac9      	subls	r1, r1, r3
 80006d0:	b2b8      	uxth	r0, r7
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d2:	42ba      	cmp	r2, r7
 80006d4:	bf8c      	ite	hi
 80006d6:	1a10      	subhi	r0, r2, r0
 80006d8:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006da:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006dc:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006de:	4401      	add	r1, r0
 80006e0:	2905      	cmp	r1, #5
        {
            _x = x;
 80006e2:	bfc8      	it	gt
 80006e4:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e6:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e8:	bfc8      	it	gt
 80006ea:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006ec:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ee:	682b      	ldr	r3, [r5, #0]
 80006f0:	80a3      	strh	r3, [r4, #4]
    }
}
 80006f2:	b003      	add	sp, #12
 80006f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f6:	2200      	movs	r2, #0
 80006f8:	e7ce      	b.n	8000698 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006fa:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fe:	3308      	adds	r3, #8
 8000700:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000702:	2b0e      	cmp	r3, #14
 8000704:	d8d2      	bhi.n	80006ac <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000706:	2300      	movs	r3, #0
 8000708:	e7d9      	b.n	80006be <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 800070a:	bf00      	nop
 800070c:	20000184 	.word	0x20000184
 8000710:	20000182 	.word	0x20000182
 8000714:	20000180 	.word	0x20000180
 8000718:	20000188 	.word	0x20000188
 800071c:	2000018c 	.word	0x2000018c

08000720 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000720:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000722:	4668      	mov	r0, sp
{
 8000724:	460d      	mov	r5, r1
 8000726:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000728:	f7ff ff94 	bl	8000654 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 800072c:	f8bd 0000 	ldrh.w	r0, [sp]
 8000730:	b130      	cbz	r0, 8000740 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000732:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000736:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000738:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800073c:	6023      	str	r3, [r4, #0]
        return true;
 800073e:	2001      	movs	r0, #1
}
 8000740:	b003      	add	sp, #12
 8000742:	bd30      	pop	{r4, r5, pc}

08000744 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000746:	4770      	bx	lr

08000748 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000748:	4770      	bx	lr

0800074a <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800074a:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800074c:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000750:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000754:	4770      	bx	lr

08000756 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000756:	2000      	movs	r0, #0
 8000758:	4770      	bx	lr

0800075a <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800075a:	2000      	movs	r0, #0
 800075c:	4770      	bx	lr

0800075e <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800075e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000760:	b10b      	cbz	r3, 8000766 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000762:	4608      	mov	r0, r1
 8000764:	4718      	bx	r3
        }
    }
 8000766:	4770      	bx	lr

08000768 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000768:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800076c:	4770      	bx	lr

0800076e <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800076e:	6840      	ldr	r0, [r0, #4]
 8000770:	6803      	ldr	r3, [r0, #0]
 8000772:	699b      	ldr	r3, [r3, #24]
 8000774:	4718      	bx	r3

08000776 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000776:	4770      	bx	lr

08000778 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000778:	4770      	bx	lr

0800077a <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800077a:	4770      	bx	lr

0800077c <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800077c:	f000 bc52 	b.w	8001024 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000780 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000780:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000782:	6803      	ldr	r3, [r0, #0]
{
 8000784:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000786:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8000788:	4798      	blx	r3
    enableInterrupts();
 800078a:	6823      	ldr	r3, [r4, #0]
 800078c:	4620      	mov	r0, r4
 800078e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8000790:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000792:	f000 f8ed 	bl	8000970 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000796:	6823      	ldr	r3, [r4, #0]
 8000798:	4620      	mov	r0, r4
 800079a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800079c:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 800079e:	2029      	movs	r0, #41	; 0x29
 80007a0:	f000 ff56 	bl	8001650 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007a4:	f000 f8e4 	bl	8000970 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007a8:	6823      	ldr	r3, [r4, #0]
 80007aa:	4620      	mov	r0, r4
 80007ac:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80007ae:	4798      	blx	r3
    for (;;)
 80007b0:	e7f8      	b.n	80007a4 <_ZN11TouchGFXHAL9taskEntryEv+0x24>

080007b2 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007b2:	b510      	push	{r4, lr}
 80007b4:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007b6:	f009 ff61 	bl	800a67c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ba:	6823      	ldr	r3, [r4, #0]
 80007bc:	4620      	mov	r0, r4
 80007be:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
    }
 80007c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007c6:	4718      	bx	r3

080007c8 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007c8:	f000 bc1e 	b.w	8001008 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007cc <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007cc:	f000 bc22 	b.w	8001014 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007d0 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007d0:	f000 bc46 	b.w	8001060 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007d4 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007d4:	f000 bbf4 	b.w	8000fc0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007d8 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007d8:	f000 bc46 	b.w	8001068 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007dc <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007dc:	f000 bc4e 	b.w	800107c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007e0 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007e0:	f000 bbf8 	b.w	8000fd4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007e4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80007e4:	b508      	push	{r3, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80007e6:	b931      	cbnz	r1, 80007f6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x12>
 80007e8:	4b0a      	ldr	r3, [pc, #40]	; (8000814 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80007ea:	4a0b      	ldr	r2, [pc, #44]	; (8000818 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80007ec:	480b      	ldr	r0, [pc, #44]	; (800081c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80007ee:	f44f 712b 	mov.w	r1, #684	; 0x2ac
 80007f2:	f01b f913 	bl	801ba1c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80007f6:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80007fa:	3a00      	subs	r2, #0
 80007fc:	4908      	ldr	r1, [pc, #32]	; (8000820 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80007fe:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000800:	bf18      	it	ne
 8000802:	2201      	movne	r2, #1
 8000804:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000806:	3b00      	subs	r3, #0
 8000808:	4a06      	ldr	r2, [pc, #24]	; (8000824 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
 800080a:	bf18      	it	ne
 800080c:	2301      	movne	r3, #1
 800080e:	7013      	strb	r3, [r2, #0]
    }
 8000810:	bd08      	pop	{r3, pc}
 8000812:	bf00      	nop
 8000814:	0801cf30 	.word	0x0801cf30
 8000818:	0801cf68 	.word	0x0801cf68
 800081c:	0801cfb6 	.word	0x0801cfb6
 8000820:	20013506 	.word	0x20013506
 8000824:	20013507 	.word	0x20013507

08000828 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000828:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800082a:	4b09      	ldr	r3, [pc, #36]	; (8000850 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 800082c:	881b      	ldrh	r3, [r3, #0]
 800082e:	428b      	cmp	r3, r1
 8000830:	d803      	bhi.n	800083a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000832:	4b08      	ldr	r3, [pc, #32]	; (8000854 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000834:	881b      	ldrh	r3, [r3, #0]
 8000836:	4293      	cmp	r3, r2
 8000838:	d905      	bls.n	8000846 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800083a:	4b07      	ldr	r3, [pc, #28]	; (8000858 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 800083c:	4a07      	ldr	r2, [pc, #28]	; (800085c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 800083e:	4808      	ldr	r0, [pc, #32]	; (8000860 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000840:	219e      	movs	r1, #158	; 0x9e
 8000842:	f01b f8eb 	bl	801ba1c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000846:	4b07      	ldr	r3, [pc, #28]	; (8000864 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000848:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800084a:	4b07      	ldr	r3, [pc, #28]	; (8000868 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 800084c:	801a      	strh	r2, [r3, #0]
    }
 800084e:	bd08      	pop	{r3, pc}
 8000850:	200134fc 	.word	0x200134fc
 8000854:	200134fe 	.word	0x200134fe
 8000858:	0801cffb 	.word	0x0801cffb
 800085c:	0801d05e 	.word	0x0801d05e
 8000860:	0801cfb6 	.word	0x0801cfb6
 8000864:	20013502 	.word	0x20013502
 8000868:	20013504 	.word	0x20013504

0800086c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800086c:	f009 b8a4 	b.w	80099b8 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000870 <_ZN11TouchGFXHALD0Ev>:
 8000870:	b510      	push	{r4, lr}
 8000872:	217c      	movs	r1, #124	; 0x7c
 8000874:	4604      	mov	r4, r0
 8000876:	f01b f8a2 	bl	801b9be <_ZdlPvj>
 800087a:	4620      	mov	r0, r4
 800087c:	bd10      	pop	{r4, pc}

0800087e <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800087e:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 8000882:	b11b      	cbz	r3, 800088c <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000884:	6840      	ldr	r0, [r0, #4]
 8000886:	6803      	ldr	r3, [r0, #0]
 8000888:	681b      	ldr	r3, [r3, #0]
 800088a:	4718      	bx	r3
    }
 800088c:	4618      	mov	r0, r3
 800088e:	4770      	bx	lr

08000890 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000890:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000892:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000896:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 800089a:	4b0c      	ldr	r3, [pc, #48]	; (80008cc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
 800089c:	428c      	cmp	r4, r1
 800089e:	781a      	ldrb	r2, [r3, #0]
 80008a0:	d009      	beq.n	80008b6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80008a2:	b93a      	cbnz	r2, 80008b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008a4:	4a0a      	ldr	r2, [pc, #40]	; (80008d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80008a6:	490b      	ldr	r1, [pc, #44]	; (80008d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008a8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80008aa:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80008ac:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008ae:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80008b0:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80008b2:	701a      	strb	r2, [r3, #0]
    }
 80008b4:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80008b6:	2a00      	cmp	r2, #0
 80008b8:	d0fc      	beq.n	80008b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008ba:	4a05      	ldr	r2, [pc, #20]	; (80008d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80008bc:	4905      	ldr	r1, [pc, #20]	; (80008d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008be:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80008c0:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80008c2:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008c4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80008c6:	2200      	movs	r2, #0
 80008c8:	e7f3      	b.n	80008b2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80008ca:	bf00      	nop
 80008cc:	20013500 	.word	0x20013500
 80008d0:	200134fc 	.word	0x200134fc
 80008d4:	200134fe 	.word	0x200134fe

080008d8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008d8:	2101      	movs	r1, #1
{
 80008da:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008dc:	2200      	movs	r2, #0
 80008de:	4608      	mov	r0, r1
 80008e0:	f006 fc5e 	bl	80071a0 <osSemaphoreNew>
 80008e4:	4b0a      	ldr	r3, [pc, #40]	; (8000910 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008e6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008e8:	b928      	cbnz	r0, 80008f6 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008ea:	4b0a      	ldr	r3, [pc, #40]	; (8000914 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008ec:	4a0a      	ldr	r2, [pc, #40]	; (8000918 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008ee:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80008f0:	480a      	ldr	r0, [pc, #40]	; (800091c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80008f2:	f01b f893 	bl	801ba1c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80008f6:	2200      	movs	r2, #0
 80008f8:	2104      	movs	r1, #4
 80008fa:	2001      	movs	r0, #1
 80008fc:	f006 fd16 	bl	800732c <osMessageQueueNew>
 8000900:	4b07      	ldr	r3, [pc, #28]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000902:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000904:	b918      	cbnz	r0, 800090e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000906:	4b07      	ldr	r3, [pc, #28]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000908:	4a03      	ldr	r2, [pc, #12]	; (8000918 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800090a:	212d      	movs	r1, #45	; 0x2d
 800090c:	e7f0      	b.n	80008f0 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800090e:	bd08      	pop	{r3, pc}
 8000910:	20000194 	.word	0x20000194
 8000914:	0801d174 	.word	0x0801d174
 8000918:	0801d1bd 	.word	0x0801d1bd
 800091c:	0801d1ec 	.word	0x0801d1ec
 8000920:	20000190 	.word	0x20000190
 8000924:	0801d23c 	.word	0x0801d23c

08000928 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000928:	4b02      	ldr	r3, [pc, #8]	; (8000934 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800092a:	f04f 31ff 	mov.w	r1, #4294967295
 800092e:	6818      	ldr	r0, [r3, #0]
 8000930:	f006 bc8c 	b.w	800724c <osSemaphoreAcquire>
 8000934:	20000194 	.word	0x20000194

08000938 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000938:	4b01      	ldr	r3, [pc, #4]	; (8000940 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800093a:	6818      	ldr	r0, [r3, #0]
 800093c:	f006 bcc0 	b.w	80072c0 <osSemaphoreRelease>
 8000940:	20000194 	.word	0x20000194

08000944 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000944:	4b02      	ldr	r3, [pc, #8]	; (8000950 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000946:	2100      	movs	r1, #0
 8000948:	6818      	ldr	r0, [r3, #0]
 800094a:	f006 bc7f 	b.w	800724c <osSemaphoreAcquire>
 800094e:	bf00      	nop
 8000950:	20000194 	.word	0x20000194

08000954 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000954:	f7ff bff0 	b.w	8000938 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000958 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000958:	4803      	ldr	r0, [pc, #12]	; (8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800095a:	4904      	ldr	r1, [pc, #16]	; (800096c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800095c:	6800      	ldr	r0, [r0, #0]
 800095e:	2300      	movs	r3, #0
 8000960:	461a      	mov	r2, r3
 8000962:	f006 bd29 	b.w	80073b8 <osMessageQueuePut>
 8000966:	bf00      	nop
 8000968:	20000190 	.word	0x20000190
 800096c:	20000004 	.word	0x20000004

08000970 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000970:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000972:	4c08      	ldr	r4, [pc, #32]	; (8000994 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000974:	2300      	movs	r3, #0
 8000976:	461a      	mov	r2, r3
 8000978:	a901      	add	r1, sp, #4
 800097a:	6820      	ldr	r0, [r4, #0]
 800097c:	f006 fd5e 	bl	800743c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000980:	6820      	ldr	r0, [r4, #0]
 8000982:	f04f 33ff 	mov.w	r3, #4294967295
 8000986:	2200      	movs	r2, #0
 8000988:	a901      	add	r1, sp, #4
 800098a:	f006 fd57 	bl	800743c <osMessageQueueGet>
}
 800098e:	b002      	add	sp, #8
 8000990:	bd10      	pop	{r4, pc}
 8000992:	bf00      	nop
 8000994:	20000190 	.word	0x20000190

08000998 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000998:	6803      	ldr	r3, [r0, #0]
 800099a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800099c:	4718      	bx	r3

0800099e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 800099e:	2001      	movs	r0, #1
 80009a0:	4770      	bx	lr

080009a2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009a2:	6803      	ldr	r3, [r0, #0]
 80009a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009a6:	4718      	bx	r3

080009a8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009a8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009aa:	2300      	movs	r3, #0
 80009ac:	9301      	str	r3, [sp, #4]
 80009ae:	4b0d      	ldr	r3, [pc, #52]	; (80009e4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009b2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009b6:	631a      	str	r2, [r3, #48]	; 0x30
 80009b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ba:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009be:	9201      	str	r2, [sp, #4]
 80009c0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009c2:	691a      	ldr	r2, [r3, #16]
 80009c4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009ca:	691a      	ldr	r2, [r3, #16]
 80009cc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009d0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009d2:	4b05      	ldr	r3, [pc, #20]	; (80009e8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009d4:	4a05      	ldr	r2, [pc, #20]	; (80009ec <_ZN8STM32DMA10initializeEv+0x44>)
 80009d6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009d8:	4b05      	ldr	r3, [pc, #20]	; (80009f0 <_ZN8STM32DMA10initializeEv+0x48>)
 80009da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009de:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009e0:	b002      	add	sp, #8
 80009e2:	4770      	bx	lr
 80009e4:	40023800 	.word	0x40023800
 80009e8:	20013908 	.word	0x20013908
 80009ec:	080009fd 	.word	0x080009fd
 80009f0:	e000e100 	.word	0xe000e100

080009f4 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 80009f4:	f240 30ef 	movw	r0, #1007	; 0x3ef
 80009f8:	4770      	bx	lr
	...

080009fc <DMA2D_XferCpltCallback>:
        HAL::getInstance()->signalDMAInterrupt();
 80009fc:	4b02      	ldr	r3, [pc, #8]	; (8000a08 <DMA2D_XferCpltCallback+0xc>)
 80009fe:	681b      	ldr	r3, [r3, #0]
 8000a00:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a02:	6803      	ldr	r3, [r0, #0]
 8000a04:	695b      	ldr	r3, [r3, #20]
 8000a06:	4718      	bx	r3
 8000a08:	20013508 	.word	0x20013508

08000a0c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000a0c:	b508      	push	{r3, lr}
 8000a0e:	280b      	cmp	r0, #11
 8000a10:	d80b      	bhi.n	8000a2a <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000a12:	e8df f000 	tbb	[pc, r0]
 8000a16:	0612      	.short	0x0612
 8000a18:	0a0a0a10 	.word	0x0a0a0a10
 8000a1c:	0808080a 	.word	0x0808080a
 8000a20:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000a22:	2001      	movs	r0, #1
}
 8000a24:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000a26:	2005      	movs	r0, #5
        break;
 8000a28:	e7fc      	b.n	8000a24 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000a2a:	4b05      	ldr	r3, [pc, #20]	; (8000a40 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000a2c:	4a05      	ldr	r2, [pc, #20]	; (8000a44 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000a2e:	4806      	ldr	r0, [pc, #24]	; (8000a48 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000a30:	2167      	movs	r1, #103	; 0x67
 8000a32:	f01a fff3 	bl	801ba1c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000a36:	2000      	movs	r0, #0
 8000a38:	e7f4      	b.n	8000a24 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000a3a:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000a3c:	e7f2      	b.n	8000a24 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000a3e:	bf00      	nop
 8000a40:	0801d27e 	.word	0x0801d27e
 8000a44:	0801d299 	.word	0x0801d299
 8000a48:	0801d2e3 	.word	0x0801d2e3

08000a4c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000a4c:	b508      	push	{r3, lr}
 8000a4e:	280a      	cmp	r0, #10
 8000a50:	d809      	bhi.n	8000a66 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000a52:	e8df f000 	tbb	[pc, r0]
 8000a56:	0610      	.short	0x0610
 8000a58:	0808080e 	.word	0x0808080e
 8000a5c:	06060608 	.word	0x06060608
 8000a60:	06          	.byte	0x06
 8000a61:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000a62:	2001      	movs	r0, #1
}
 8000a64:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000a66:	4b05      	ldr	r3, [pc, #20]	; (8000a7c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000a68:	4a05      	ldr	r2, [pc, #20]	; (8000a80 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000a6a:	4806      	ldr	r0, [pc, #24]	; (8000a84 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000a6c:	2188      	movs	r1, #136	; 0x88
 8000a6e:	f01a ffd5 	bl	801ba1c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000a72:	2000      	movs	r0, #0
 8000a74:	e7f6      	b.n	8000a64 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000a76:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000a78:	e7f4      	b.n	8000a64 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000a7a:	bf00      	nop
 8000a7c:	0801d27e 	.word	0x0801d27e
 8000a80:	0801d331 	.word	0x0801d331
 8000a84:	0801d2e3 	.word	0x0801d2e3

08000a88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000a88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000a8c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000a90:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000a92:	4640      	mov	r0, r8
 8000a94:	f7ff ffba 	bl	8000a0c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000a98:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000a9a:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000a9c:	4638      	mov	r0, r7
 8000a9e:	f7ff ffb5 	bl	8000a0c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000aa2:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000aa4:	4638      	mov	r0, r7
 8000aa6:	f7ff ffd1 	bl	8000a4c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000aaa:	8aa1      	ldrh	r1, [r4, #20]
 8000aac:	8b62      	ldrh	r2, [r4, #26]
 8000aae:	4b4b      	ldr	r3, [pc, #300]	; (8000bdc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000ab0:	1a52      	subs	r2, r2, r1
 8000ab2:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000ab4:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000ab6:	8b22      	ldrh	r2, [r4, #24]
 8000ab8:	1a52      	subs	r2, r2, r1
 8000aba:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000abc:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000abe:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000ac0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000ac4:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ac6:	6921      	ldr	r1, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000ac8:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000aca:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000acc:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000ace:	f8d4 c000 	ldr.w	ip, [r4]
 8000ad2:	f894 901c 	ldrb.w	r9, [r4, #28]
 8000ad6:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 8000ada:	ea4f 6209 	mov.w	r2, r9, lsl #24
 8000ade:	469e      	mov	lr, r3
 8000ae0:	d030      	beq.n	8000b44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 8000ae2:	d814      	bhi.n	8000b0e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x86>
 8000ae4:	f1bc 0f20 	cmp.w	ip, #32
 8000ae8:	ea45 0002 	orr.w	r0, r5, r2
 8000aec:	d068      	beq.n	8000bc0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>
 8000aee:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8000af2:	d065      	beq.n	8000bc0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>
 8000af4:	f1bc 0f04 	cmp.w	ip, #4
 8000af8:	d020      	beq.n	8000b3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000afa:	4b38      	ldr	r3, [pc, #224]	; (8000bdc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000afc:	432a      	orrs	r2, r5
 8000afe:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b02:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b04:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b06:	d148      	bne.n	8000b9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x112>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000b08:	f240 2201 	movw	r2, #513	; 0x201
 8000b0c:	e014      	b.n	8000b38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
    switch (blitOp.operation)
 8000b0e:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8000b12:	d007      	beq.n	8000b24 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
 8000b14:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8000b18:	d1ef      	bne.n	8000afa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x72>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b1a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b1e:	f042 0209 	orr.w	r2, r2, #9
 8000b22:	e003      	b.n	8000b2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa4>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b24:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b28:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b2c:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000b2e:	68e2      	ldr	r2, [r4, #12]
 8000b30:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000b32:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b34:	6159      	str	r1, [r3, #20]
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000b36:	4a2a      	ldr	r2, [pc, #168]	; (8000be0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000b38:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000b3a:	e04c      	b.n	8000bd6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b3c:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000b40:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000b42:	e7f6      	b.n	8000b32 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xaa>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000b44:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b46:	432a      	orrs	r2, r5
 8000b48:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000b4c:	1d04      	adds	r4, r0, #4
 8000b4e:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b50:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000b52:	7802      	ldrb	r2, [r0, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000b54:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b56:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000b58:	b142      	cbz	r2, 8000b6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe4>
 8000b5a:	2a01      	cmp	r2, #1
 8000b5c:	d01f      	beq.n	8000b9e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
                assert(0 && "Unsupported format");
 8000b5e:	4b21      	ldr	r3, [pc, #132]	; (8000be4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>)
 8000b60:	4a21      	ldr	r2, [pc, #132]	; (8000be8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>)
 8000b62:	4822      	ldr	r0, [pc, #136]	; (8000bec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x164>)
 8000b64:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000b68:	f01a ff58 	bl	801ba1c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000b6c:	8842      	ldrh	r2, [r0, #2]
 8000b6e:	69d9      	ldr	r1, [r3, #28]
 8000b70:	1e50      	subs	r0, r2, #1
 8000b72:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000b76:	f022 0210 	bic.w	r2, r2, #16
 8000b7a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000b7e:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000b80:	2401      	movs	r4, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000b82:	4b16      	ldr	r3, [pc, #88]	; (8000bdc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000b84:	69da      	ldr	r2, [r3, #28]
 8000b86:	f042 0220 	orr.w	r2, r2, #32
 8000b8a:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000b8c:	69da      	ldr	r2, [r3, #28]
 8000b8e:	0692      	lsls	r2, r2, #26
 8000b90:	d4fc      	bmi.n	8000b8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000b92:	2210      	movs	r2, #16
 8000b94:	609a      	str	r2, [r3, #8]
            if(blend)
 8000b96:	2c00      	cmp	r4, #0
 8000b98:	d1cd      	bne.n	8000b36 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b9a:	4a15      	ldr	r2, [pc, #84]	; (8000bf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>)
 8000b9c:	e7cc      	b.n	8000b38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000b9e:	8842      	ldrh	r2, [r0, #2]
 8000ba0:	69d9      	ldr	r1, [r3, #28]
 8000ba2:	1e50      	subs	r0, r2, #1
 8000ba4:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000ba8:	f022 0210 	bic.w	r2, r2, #16
 8000bac:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if(blitOp.alpha == 255)
 8000bb0:	f1b9 04ff 	subs.w	r4, r9, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bb4:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000bb8:	bf18      	it	ne
 8000bba:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bbc:	61da      	str	r2, [r3, #28]
                break;
 8000bbe:	e7e0      	b.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000bc0:	4b07      	ldr	r3, [pc, #28]	; (8000be0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bc2:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000bc6:	f8ce 001c 	str.w	r0, [lr, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bca:	f8ce 6024 	str.w	r6, [lr, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bce:	f8ce 1014 	str.w	r1, [lr, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000bd2:	f8ce 3000 	str.w	r3, [lr]
}
 8000bd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000bda:	bf00      	nop
 8000bdc:	4002b000 	.word	0x4002b000
 8000be0:	00020201 	.word	0x00020201
 8000be4:	0801d37c 	.word	0x0801d37c
 8000be8:	0801d396 	.word	0x0801d396
 8000bec:	0801d2e3 	.word	0x0801d2e3
 8000bf0:	00010201 	.word	0x00010201

08000bf4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000bf4:	b538      	push	{r3, r4, r5, lr}
 8000bf6:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000bf8:	7f88      	ldrb	r0, [r1, #30]
 8000bfa:	f7ff ff27 	bl	8000a4c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000bfe:	8aa5      	ldrh	r5, [r4, #20]
 8000c00:	8ae1      	ldrh	r1, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c02:	4b16      	ldr	r3, [pc, #88]	; (8000c5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c04:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c06:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c08:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000c0c:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c0e:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c10:	6921      	ldr	r1, [r4, #16]
 8000c12:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c14:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c16:	6825      	ldr	r5, [r4, #0]
 8000c18:	2d08      	cmp	r5, #8
 8000c1a:	d10e      	bne.n	8000c3a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c1c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c1e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c20:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8000c22:	7f20      	ldrb	r0, [r4, #28]
 8000c24:	4a0e      	ldr	r2, [pc, #56]	; (8000c60 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c26:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c2a:	61da      	str	r2, [r3, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c2c:	68e2      	ldr	r2, [r4, #12]
 8000c2e:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c30:	4a0c      	ldr	r2, [pc, #48]	; (8000c64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c32:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c34:	60d9      	str	r1, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c36:	601a      	str	r2, [r3, #0]
    }
}
 8000c38:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c3a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c3c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c3e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000c40:	68e1      	ldr	r1, [r4, #12]
 8000c42:	0a0a      	lsrs	r2, r1, #8
 8000c44:	0948      	lsrs	r0, r1, #5
 8000c46:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000c4a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000c4e:	4302      	orrs	r2, r0
 8000c50:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000c54:	430a      	orrs	r2, r1
 8000c56:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c58:	4a03      	ldr	r2, [pc, #12]	; (8000c68 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000c5a:	e7ec      	b.n	8000c36 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000c5c:	4002b000 	.word	0x4002b000
 8000c60:	00010009 	.word	0x00010009
 8000c64:	00020201 	.word	0x00020201
 8000c68:	00030201 	.word	0x00030201

08000c6c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000c6c:	4b05      	ldr	r3, [pc, #20]	; (8000c84 <_ZN8STM32DMAD1Ev+0x18>)
 8000c6e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c70:	4b05      	ldr	r3, [pc, #20]	; (8000c88 <_ZN8STM32DMAD1Ev+0x1c>)
 8000c72:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000c76:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000c7a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000c7e:	f3bf 8f6f 	isb	sy
}
 8000c82:	4770      	bx	lr
 8000c84:	0801d3dc 	.word	0x0801d3dc
 8000c88:	e000e100 	.word	0xe000e100

08000c8c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000c8c:	b510      	push	{r4, lr}
 8000c8e:	4604      	mov	r4, r0
}
 8000c90:	f7ff ffec 	bl	8000c6c <_ZN8STM32DMAD1Ev>
 8000c94:	4620      	mov	r0, r4
 8000c96:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8000c9a:	f01a fe90 	bl	801b9be <_ZdlPvj>
 8000c9e:	4620      	mov	r0, r4
 8000ca0:	bd10      	pop	{r4, pc}
	...

08000ca4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000ca4:	b570      	push	{r4, r5, r6, lr}
 8000ca6:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000ca8:	4625      	mov	r5, r4
 8000caa:	4b0a      	ldr	r3, [pc, #40]	; (8000cd4 <_ZN8STM32DMAC1Ev+0x30>)
 8000cac:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000cae:	2600      	movs	r6, #0
 8000cb0:	6060      	str	r0, [r4, #4]
 8000cb2:	7226      	strb	r6, [r4, #8]
 8000cb4:	7266      	strb	r6, [r4, #9]
 8000cb6:	f845 3b20 	str.w	r3, [r5], #32
 8000cba:	2260      	movs	r2, #96	; 0x60
 8000cbc:	4629      	mov	r1, r5
 8000cbe:	f009 fe13 	bl	800a8e8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000cc2:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000cc6:	60ee      	str	r6, [r5, #12]
 8000cc8:	3520      	adds	r5, #32
 8000cca:	42ab      	cmp	r3, r5
 8000ccc:	d1fb      	bne.n	8000cc6 <_ZN8STM32DMAC1Ev+0x22>
}
 8000cce:	4620      	mov	r0, r4
 8000cd0:	bd70      	pop	{r4, r5, r6, pc}
 8000cd2:	bf00      	nop
 8000cd4:	0801d3dc 	.word	0x0801d3dc

08000cd8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000cd8:	2001      	movs	r0, #1
 8000cda:	4770      	bx	lr

08000cdc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000cdc:	200c      	movs	r0, #12
 8000cde:	4770      	bx	lr

08000ce0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000ce0:	230c      	movs	r3, #12
 8000ce2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000ce6:	3008      	adds	r0, #8
 8000ce8:	4770      	bx	lr

08000cea <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000cea:	230c      	movs	r3, #12
 8000cec:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000cf0:	3008      	adds	r0, #8
 8000cf2:	4770      	bx	lr

08000cf4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000cf4:	2001      	movs	r0, #1
 8000cf6:	4770      	bx	lr

08000cf8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000cf8:	f241 600c 	movw	r0, #5644	; 0x160c
 8000cfc:	4770      	bx	lr

08000cfe <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000cfe:	f241 630c 	movw	r3, #5644	; 0x160c
 8000d02:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d06:	3008      	adds	r0, #8
 8000d08:	4770      	bx	lr

08000d0a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d0a:	f241 630c 	movw	r3, #5644	; 0x160c
 8000d0e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d12:	3008      	adds	r0, #8
 8000d14:	4770      	bx	lr

08000d16 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d16:	2001      	movs	r0, #1
 8000d18:	4770      	bx	lr

08000d1a <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d1a:	2010      	movs	r0, #16
 8000d1c:	4770      	bx	lr

08000d1e <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d1e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d22:	3008      	adds	r0, #8
 8000d24:	4770      	bx	lr

08000d26 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d26:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d2a:	3008      	adds	r0, #8
 8000d2c:	4770      	bx	lr

08000d2e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotomainScreenScreenNoTransition();
 8000d2e:	4608      	mov	r0, r1
 8000d30:	f001 ba28 	b.w	8002184 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d34:	b510      	push	{r4, lr}
 8000d36:	4b03      	ldr	r3, [pc, #12]	; (8000d44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000d38:	6003      	str	r3, [r0, #0]
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	f008 fb6e 	bl	800941c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d40:	4620      	mov	r0, r4
 8000d42:	bd10      	pop	{r4, pc}
 8000d44:	0801d494 	.word	0x0801d494

08000d48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000d48:	b510      	push	{r4, lr}
 8000d4a:	4604      	mov	r4, r0
 8000d4c:	f7ff fff2 	bl	8000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000d50:	4620      	mov	r0, r4
 8000d52:	2114      	movs	r1, #20
 8000d54:	f01a fe33 	bl	801b9be <_ZdlPvj>
 8000d58:	4620      	mov	r0, r4
 8000d5a:	bd10      	pop	{r4, pc}

08000d5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000d5c:	b510      	push	{r4, lr}
 8000d5e:	4b03      	ldr	r3, [pc, #12]	; (8000d6c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000d60:	6003      	str	r3, [r0, #0]
 8000d62:	4604      	mov	r4, r0
 8000d64:	f008 fb5a 	bl	800941c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d68:	4620      	mov	r0, r4
 8000d6a:	bd10      	pop	{r4, pc}
 8000d6c:	0801d460 	.word	0x0801d460

08000d70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000d70:	b510      	push	{r4, lr}
 8000d72:	4604      	mov	r4, r0
 8000d74:	f7ff fff2 	bl	8000d5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000d78:	4620      	mov	r0, r4
 8000d7a:	f241 6114 	movw	r1, #5652	; 0x1614
 8000d7e:	f01a fe1e 	bl	801b9be <_ZdlPvj>
 8000d82:	4620      	mov	r0, r4
 8000d84:	bd10      	pop	{r4, pc}
	...

08000d88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000d88:	b510      	push	{r4, lr}
 8000d8a:	4b03      	ldr	r3, [pc, #12]	; (8000d98 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000d8c:	6003      	str	r3, [r0, #0]
 8000d8e:	4604      	mov	r4, r0
 8000d90:	f008 fb44 	bl	800941c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d94:	4620      	mov	r0, r4
 8000d96:	bd10      	pop	{r4, pc}
 8000d98:	0801d42c 	.word	0x0801d42c

08000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000d9c:	b510      	push	{r4, lr}
 8000d9e:	4604      	mov	r4, r0
 8000da0:	f7ff fff2 	bl	8000d88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000da4:	4620      	mov	r0, r4
 8000da6:	2118      	movs	r1, #24
 8000da8:	f01a fe09 	bl	801b9be <_ZdlPvj>
 8000dac:	4620      	mov	r0, r4
 8000dae:	bd10      	pop	{r4, pc}

08000db0 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000db0:	b510      	push	{r4, lr}
 8000db2:	4b08      	ldr	r3, [pc, #32]	; (8000dd4 <_ZN12FrontendHeapD1Ev+0x24>)
 8000db4:	6003      	str	r3, [r0, #0]
 8000db6:	4604      	mov	r4, r0
 8000db8:	f500 50b2 	add.w	r0, r0, #5696	; 0x1640
 8000dbc:	f7ff ffba 	bl	8000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dc0:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000dc4:	f7ff ffca 	bl	8000d5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dc8:	f104 0014 	add.w	r0, r4, #20
 8000dcc:	f7ff ffdc 	bl	8000d88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	bd10      	pop	{r4, pc}
 8000dd4:	0801d4c8 	.word	0x0801d4c8

08000dd8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000dd8:	b508      	push	{r3, lr}
 8000dda:	4802      	ldr	r0, [pc, #8]	; (8000de4 <__tcf_0+0xc>)
 8000ddc:	f7ff ffe8 	bl	8000db0 <_ZN12FrontendHeapD1Ev>
 8000de0:	bd08      	pop	{r3, pc}
 8000de2:	bf00      	nop
 8000de4:	2000019c 	.word	0x2000019c

08000de8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000de8:	b510      	push	{r4, lr}
 8000dea:	4604      	mov	r4, r0
 8000dec:	f7ff ffe0 	bl	8000db0 <_ZN12FrontendHeapD1Ev>
 8000df0:	4620      	mov	r0, r4
 8000df2:	f241 71b4 	movw	r1, #6068	; 0x17b4
 8000df6:	f01a fde2 	bl	801b9be <_ZdlPvj>
 8000dfa:	4620      	mov	r0, r4
 8000dfc:	bd10      	pop	{r4, pc}
	...

08000e00 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e00:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e04:	f001 f900 	bl	8002008 <_ZN14BitmapDatabase11getInstanceEv>
 8000e08:	4605      	mov	r5, r0
 8000e0a:	f001 f901 	bl	8002010 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e0e:	2400      	movs	r4, #0
 8000e10:	4601      	mov	r1, r0
 8000e12:	4623      	mov	r3, r4
 8000e14:	4628      	mov	r0, r5
 8000e16:	4622      	mov	r2, r4
 8000e18:	9400      	str	r4, [sp, #0]
 8000e1a:	f00e fd7f 	bl	800f91c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e1e:	4b25      	ldr	r3, [pc, #148]	; (8000eb4 <touchgfx_init+0xb4>)
 8000e20:	4a25      	ldr	r2, [pc, #148]	; (8000eb8 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8000e22:	4d26      	ldr	r5, [pc, #152]	; (8000ebc <touchgfx_init+0xbc>)
 8000e24:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e26:	4620      	mov	r0, r4
 8000e28:	f001 fcda 	bl	80027e0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e2c:	4824      	ldr	r0, [pc, #144]	; (8000ec0 <touchgfx_init+0xc0>)
 8000e2e:	f00e fcb7 	bl	800f7a0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e32:	782b      	ldrb	r3, [r5, #0]
 8000e34:	f3bf 8f5b 	dmb	ish
 8000e38:	07db      	lsls	r3, r3, #31
 8000e3a:	d434      	bmi.n	8000ea6 <touchgfx_init+0xa6>
 8000e3c:	4628      	mov	r0, r5
 8000e3e:	f01a fdc0 	bl	801b9c2 <__cxa_guard_acquire>
 8000e42:	b380      	cbz	r0, 8000ea6 <touchgfx_init+0xa6>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000e44:	4c1f      	ldr	r4, [pc, #124]	; (8000ec4 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000e46:	4b20      	ldr	r3, [pc, #128]	; (8000ec8 <touchgfx_init+0xc8>)
 8000e48:	6023      	str	r3, [r4, #0]
 8000e4a:	f504 57b2 	add.w	r7, r4, #5696	; 0x1640
 8000e4e:	f107 061c 	add.w	r6, r7, #28
 8000e52:	f104 0014 	add.w	r0, r4, #20
 8000e56:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000e5a:	6060      	str	r0, [r4, #4]
 8000e5c:	f8c4 8008 	str.w	r8, [r4, #8]
 8000e60:	60e7      	str	r7, [r4, #12]
 8000e62:	6126      	str	r6, [r4, #16]
 8000e64:	f008 fadc 	bl	8009420 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000e68:	4b18      	ldr	r3, [pc, #96]	; (8000ecc <touchgfx_init+0xcc>)
 8000e6a:	6163      	str	r3, [r4, #20]
 8000e6c:	4640      	mov	r0, r8
 8000e6e:	f008 fad7 	bl	8009420 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000e72:	4b17      	ldr	r3, [pc, #92]	; (8000ed0 <touchgfx_init+0xd0>)
 8000e74:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000e76:	4638      	mov	r0, r7
 8000e78:	f008 fad2 	bl	8009420 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000e7c:	4b15      	ldr	r3, [pc, #84]	; (8000ed4 <touchgfx_init+0xd4>)
 8000e7e:	603b      	str	r3, [r7, #0]
 8000e80:	f107 0014 	add.w	r0, r7, #20
 8000e84:	f002 fe78 	bl	8003b78 <_ZN5ModelC1Ev>
 8000e88:	4622      	mov	r2, r4
 8000e8a:	f107 0114 	add.w	r1, r7, #20
 8000e8e:	4630      	mov	r0, r6
 8000e90:	f002 fe60 	bl	8003b54 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000e94:	4630      	mov	r0, r6
 8000e96:	f001 f975 	bl	8002184 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8000e9a:	4628      	mov	r0, r5
 8000e9c:	f01a fd9d 	bl	801b9da <__cxa_guard_release>
 8000ea0:	480d      	ldr	r0, [pc, #52]	; (8000ed8 <touchgfx_init+0xd8>)
 8000ea2:	f01a fdd9 	bl	801ba58 <atexit>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000ea6:	480d      	ldr	r0, [pc, #52]	; (8000edc <touchgfx_init+0xdc>)
}
 8000ea8:	b002      	add	sp, #8
 8000eaa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000eae:	f7ff bc65 	b.w	800077c <_ZN11TouchGFXHAL10initializeEv>
 8000eb2:	bf00      	nop
 8000eb4:	20013564 	.word	0x20013564
 8000eb8:	200025f0 	.word	0x200025f0
 8000ebc:	20000198 	.word	0x20000198
 8000ec0:	20000008 	.word	0x20000008
 8000ec4:	2000019c 	.word	0x2000019c
 8000ec8:	0801d4c8 	.word	0x0801d4c8
 8000ecc:	0801d42c 	.word	0x0801d42c
 8000ed0:	0801d460 	.word	0x0801d460
 8000ed4:	0801d494 	.word	0x0801d494
 8000ed8:	08000dd9 	.word	0x08000dd9
 8000edc:	20002574 	.word	0x20002574

08000ee0 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000ee0:	4801      	ldr	r0, [pc, #4]	; (8000ee8 <touchgfx_taskEntry+0x8>)
 8000ee2:	f7ff bc4d 	b.w	8000780 <_ZN11TouchGFXHAL9taskEntryEv>
 8000ee6:	bf00      	nop
 8000ee8:	20002574 	.word	0x20002574

08000eec <_GLOBAL__sub_I_touchgfx_init>:
}
 8000eec:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000eee:	4c24      	ldr	r4, [pc, #144]	; (8000f80 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static STM32DMA dma;
 8000ef0:	4e24      	ldr	r6, [pc, #144]	; (8000f84 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000ef2:	4b25      	ldr	r3, [pc, #148]	; (8000f88 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static LCD16bpp display;
 8000ef4:	4d25      	ldr	r5, [pc, #148]	; (8000f8c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 8000ef6:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000ef8:	4630      	mov	r0, r6
 8000efa:	f7ff fed3 	bl	8000ca4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000efe:	4628      	mov	r0, r5
 8000f00:	f011 fddc 	bl	8012abc <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f04:	4b22      	ldr	r3, [pc, #136]	; (8000f90 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
        instance = this;
 8000f06:	4823      	ldr	r0, [pc, #140]	; (8000f94 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          lastRenderMethod(HARDWARE)
 8000f08:	60dc      	str	r4, [r3, #12]
 8000f0a:	2200      	movs	r2, #0
 8000f0c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000f10:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f14:	4c20      	ldr	r4, [pc, #128]	; (8000f98 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f16:	4921      	ldr	r1, [pc, #132]	; (8000f9c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        instance = this;
 8000f18:	6003      	str	r3, [r0, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f1a:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f1c:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f20:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f22:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f26:	4c1e      	ldr	r4, [pc, #120]	; (8000fa0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 8000f28:	6759      	str	r1, [r3, #116]	; 0x74
 8000f2a:	2101      	movs	r1, #1
 8000f2c:	e9c3 2204 	strd	r2, r2, [r3, #16]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 8000f30:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000f34:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000f38:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000f3c:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000f40:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000f44:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000f48:	851a      	strh	r2, [r3, #40]	; 0x28
 8000f4a:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f4e:	62da      	str	r2, [r3, #44]	; 0x2c
 8000f50:	861a      	strh	r2, [r3, #48]	; 0x30
 8000f52:	661a      	str	r2, [r3, #96]	; 0x60
 8000f54:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000f58:	671a      	str	r2, [r3, #112]	; 0x70
 8000f5a:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000f5e:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f62:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f64:	4c0f      	ldr	r4, [pc, #60]	; (8000fa4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000f66:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f6a:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8000f6e:	8020      	strh	r0, [r4, #0]
 8000f70:	4c0d      	ldr	r4, [pc, #52]	; (8000fa8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000f72:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000f74:	480d      	ldr	r0, [pc, #52]	; (8000fac <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000f76:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000f78:	4a0d      	ldr	r2, [pc, #52]	; (8000fb0 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 8000f7a:	601a      	str	r2, [r3, #0]
}
 8000f7c:	bd70      	pop	{r4, r5, r6, pc}
 8000f7e:	bf00      	nop
 8000f80:	20001950 	.word	0x20001950
 8000f84:	20001954 	.word	0x20001954
 8000f88:	0801cf20 	.word	0x0801cf20
 8000f8c:	200025f4 	.word	0x200025f4
 8000f90:	20002574 	.word	0x20002574
 8000f94:	20013508 	.word	0x20013508
 8000f98:	200134fc 	.word	0x200134fc
 8000f9c:	01000001 	.word	0x01000001
 8000fa0:	20013502 	.word	0x20013502
 8000fa4:	200134fe 	.word	0x200134fe
 8000fa8:	20013504 	.word	0x20013504
 8000fac:	20013500 	.word	0x20013500
 8000fb0:	0801d0ac 	.word	0x0801d0ac

08000fb4 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8000fb4:	4801      	ldr	r0, [pc, #4]	; (8000fbc <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8000fb6:	f7ff be59 	b.w	8000c6c <_ZN8STM32DMAD1Ev>
 8000fba:	bf00      	nop
 8000fbc:	20001954 	.word	0x20001954

08000fc0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000fc0:	4b03      	ldr	r3, [pc, #12]	; (8000fd0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8000fc2:	2290      	movs	r2, #144	; 0x90
 8000fc4:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8000fc8:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8000fcc:	4770      	bx	lr
 8000fce:	bf00      	nop
 8000fd0:	e000e100 	.word	0xe000e100

08000fd4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000fd4:	4a09      	ldr	r2, [pc, #36]	; (8000ffc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8000fd6:	490a      	ldr	r1, [pc, #40]	; (8001000 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8000fd8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000fda:	480a      	ldr	r0, [pc, #40]	; (8001004 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000fdc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000fe0:	3b01      	subs	r3, #1
 8000fe2:	b29b      	uxth	r3, r3
 8000fe4:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000fe6:	6911      	ldr	r1, [r2, #16]
 8000fe8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000fec:	3901      	subs	r1, #1
 8000fee:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8000ff0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8000ff2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000ff4:	f043 0301 	orr.w	r3, r3, #1
 8000ff8:	6353      	str	r3, [r2, #52]	; 0x34
}
 8000ffa:	4770      	bx	lr
 8000ffc:	40016800 	.word	0x40016800
 8001000:	2000266e 	.word	0x2000266e
 8001004:	2000266c 	.word	0x2000266c

08001008 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001008:	4b01      	ldr	r3, [pc, #4]	; (8001010 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800100a:	6a98      	ldr	r0, [r3, #40]	; 0x28
}
 800100c:	4770      	bx	lr
 800100e:	bf00      	nop
 8001010:	40016884 	.word	0x40016884

08001014 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001014:	4b02      	ldr	r3, [pc, #8]	; (8001020 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001016:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001018:	6299      	str	r1, [r3, #40]	; 0x28
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800101a:	f843 2c60 	str.w	r2, [r3, #-96]
}
 800101e:	4770      	bx	lr
 8001020:	40016884 	.word	0x40016884

08001024 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001024:	b570      	push	{r4, r5, r6, lr}
 8001026:	4604      	mov	r4, r0
    HAL::initialize();
 8001028:	f008 fd1b 	bl	8009a62 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800102c:	6823      	ldr	r3, [r4, #0]
 800102e:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 8001030:	f00b fcb4 	bl	800c99c <_ZN8touchgfx11Application11getInstanceEv>
 8001034:	4601      	mov	r1, r0
 8001036:	4620      	mov	r0, r4
 8001038:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800103a:	6823      	ldr	r3, [r4, #0]
 800103c:	4a05      	ldr	r2, [pc, #20]	; (8001054 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800103e:	f8d3 5084 	ldr.w	r5, [r3, #132]	; 0x84
 8001042:	4620      	mov	r0, r4
 8001044:	46ac      	mov	ip, r5
 8001046:	2300      	movs	r3, #0
}
 8001048:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800104c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001050:	4760      	bx	ip
 8001052:	bf00      	nop
 8001054:	d0025800 	.word	0xd0025800

08001058 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001058:	f008 bcea 	b.w	8009a30 <_ZN8touchgfx3HAL10beginFrameEv>

0800105c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800105c:	f008 bcf4 	b.w	8009a48 <_ZN8touchgfx3HAL8endFrameEv>

08001060 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001060:	f008 bcb0 	b.w	80099c4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001064 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001064:	f008 be0b 	b.w	8009c7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001068 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001068:	4b03      	ldr	r3, [pc, #12]	; (8001078 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800106a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800106e:	609a      	str	r2, [r3, #8]
 8001070:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001074:	609a      	str	r2, [r3, #8]
}
 8001076:	4770      	bx	lr
 8001078:	e000e100 	.word	0xe000e100

0800107c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800107c:	4b08      	ldr	r3, [pc, #32]	; (80010a0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800107e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001082:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001086:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800108a:	f3bf 8f6f 	isb	sy
 800108e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001092:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001096:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800109a:	f3bf 8f6f 	isb	sy
}
 800109e:	4770      	bx	lr
 80010a0:	e000e100 	.word	0xe000e100

080010a4 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
        if (LTDC->LIPCR == lcd_int_active_line)
 80010a4:	4b13      	ldr	r3, [pc, #76]	; (80010f4 <HAL_LTDC_LineEventCallback+0x50>)
 80010a6:	4a14      	ldr	r2, [pc, #80]	; (80010f8 <HAL_LTDC_LineEventCallback+0x54>)
 80010a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80010aa:	8811      	ldrh	r1, [r2, #0]
 80010ac:	428b      	cmp	r3, r1
    {
 80010ae:	b510      	push	{r4, lr}
 80010b0:	4c12      	ldr	r4, [pc, #72]	; (80010fc <HAL_LTDC_LineEventCallback+0x58>)
        if (LTDC->LIPCR == lcd_int_active_line)
 80010b2:	d113      	bne.n	80010dc <HAL_LTDC_LineEventCallback+0x38>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80010b4:	4b12      	ldr	r3, [pc, #72]	; (8001100 <HAL_LTDC_LineEventCallback+0x5c>)
 80010b6:	8819      	ldrh	r1, [r3, #0]
 80010b8:	f004 fc9e 	bl	80059f8 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80010bc:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80010be:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 80010c2:	3301      	adds	r3, #1
 80010c4:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80010c8:	f7ff fc46 	bl	8000958 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80010cc:	6820      	ldr	r0, [r4, #0]
 80010ce:	f009 fad5 	bl	800a67c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 80010d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80010d6:	2000      	movs	r0, #0
 80010d8:	f7ff bb34 	b.w	8000744 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80010dc:	f004 fc8c 	bl	80059f8 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 80010e0:	2000      	movs	r0, #0
 80010e2:	f7ff fb30 	bl	8000746 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
        return instance;
 80010e6:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80010e8:	6803      	ldr	r3, [r0, #0]
    }
 80010ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80010ee:	6a1b      	ldr	r3, [r3, #32]
 80010f0:	4718      	bx	r3
 80010f2:	bf00      	nop
 80010f4:	40016800 	.word	0x40016800
 80010f8:	2000266e 	.word	0x2000266e
 80010fc:	20013508 	.word	0x20013508
 8001100:	2000266c 	.word	0x2000266c

08001104 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001104:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001106:	4b06      	ldr	r3, [pc, #24]	; (8001120 <SPI5_Write+0x1c>)
{
 8001108:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800110c:	681b      	ldr	r3, [r3, #0]
 800110e:	4805      	ldr	r0, [pc, #20]	; (8001124 <SPI5_Write+0x20>)
 8001110:	2201      	movs	r2, #1
 8001112:	f10d 0106 	add.w	r1, sp, #6
 8001116:	f005 f97e 	bl	8006416 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800111a:	b003      	add	sp, #12
 800111c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001120:	20000010 	.word	0x20000010
 8001124:	200137f8 	.word	0x200137f8

08001128 <SystemClock_Config>:
{
 8001128:	b5f0      	push	{r4, r5, r6, r7, lr}
 800112a:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800112c:	2210      	movs	r2, #16
 800112e:	2100      	movs	r1, #0
 8001130:	a80a      	add	r0, sp, #40	; 0x28
 8001132:	f01a fcff 	bl	801bb34 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001136:	2214      	movs	r2, #20
 8001138:	2100      	movs	r1, #0
 800113a:	a803      	add	r0, sp, #12
 800113c:	f01a fcfa 	bl	801bb34 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001140:	2100      	movs	r1, #0
 8001142:	2230      	movs	r2, #48	; 0x30
 8001144:	a814      	add	r0, sp, #80	; 0x50
 8001146:	f01a fcf5 	bl	801bb34 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800114a:	2400      	movs	r4, #0
 800114c:	4b22      	ldr	r3, [pc, #136]	; (80011d8 <SystemClock_Config+0xb0>)
 800114e:	9401      	str	r4, [sp, #4]
 8001150:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001152:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001156:	641a      	str	r2, [r3, #64]	; 0x40
 8001158:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800115a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800115e:	9301      	str	r3, [sp, #4]
 8001160:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001162:	4b1e      	ldr	r3, [pc, #120]	; (80011dc <SystemClock_Config+0xb4>)
 8001164:	9402      	str	r4, [sp, #8]
 8001166:	681a      	ldr	r2, [r3, #0]
 8001168:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800116c:	601a      	str	r2, [r3, #0]
 800116e:	681b      	ldr	r3, [r3, #0]
 8001170:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001174:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001176:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001178:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800117a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800117e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001182:	2502      	movs	r5, #2
 8001184:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001188:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800118c:	2708      	movs	r7, #8
 800118e:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001192:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001194:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001196:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800119a:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800119c:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800119e:	f004 fc49 	bl	8005a34 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80011a2:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80011a4:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80011a8:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80011ac:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80011b0:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80011b4:	a803      	add	r0, sp, #12
 80011b6:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80011b8:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80011ba:	f004 fe11 	bl	8005de0 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80011be:	23c0      	movs	r3, #192	; 0xc0
 80011c0:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80011c2:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80011c4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80011c8:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80011ca:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80011cc:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80011ce:	f004 fee1 	bl	8005f94 <HAL_RCCEx_PeriphCLKConfig>
}
 80011d2:	b021      	add	sp, #132	; 0x84
 80011d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011d6:	bf00      	nop
 80011d8:	40023800 	.word	0x40023800
 80011dc:	40007000 	.word	0x40007000

080011e0 <main>:
{
 80011e0:	b580      	push	{r7, lr}
 80011e2:	b09a      	sub	sp, #104	; 0x68
  HAL_Init();
 80011e4:	f003 fb90 	bl	8004908 <HAL_Init>
  SystemClock_Config();
 80011e8:	f7ff ff9e 	bl	8001128 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80011ec:	2214      	movs	r2, #20
 80011ee:	2100      	movs	r1, #0
 80011f0:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80011f2:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80011f4:	f01a fc9e 	bl	801bb34 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80011f8:	4bbf      	ldr	r3, [pc, #764]	; (80014f8 <main+0x318>)
 80011fa:	9400      	str	r4, [sp, #0]
 80011fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011fe:	48bf      	ldr	r0, [pc, #764]	; (80014fc <main+0x31c>)
  hi2c3.Instance = I2C3;
 8001200:	4dbf      	ldr	r5, [pc, #764]	; (8001500 <main+0x320>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001202:	f042 0220 	orr.w	r2, r2, #32
 8001206:	631a      	str	r2, [r3, #48]	; 0x30
 8001208:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800120a:	f002 0220 	and.w	r2, r2, #32
 800120e:	9200      	str	r2, [sp, #0]
 8001210:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001212:	9401      	str	r4, [sp, #4]
 8001214:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001216:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800121a:	631a      	str	r2, [r3, #48]	; 0x30
 800121c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800121e:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001222:	9201      	str	r2, [sp, #4]
 8001224:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001226:	9402      	str	r4, [sp, #8]
 8001228:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800122a:	f042 0204 	orr.w	r2, r2, #4
 800122e:	631a      	str	r2, [r3, #48]	; 0x30
 8001230:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001232:	f002 0204 	and.w	r2, r2, #4
 8001236:	9202      	str	r2, [sp, #8]
 8001238:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800123a:	9403      	str	r4, [sp, #12]
 800123c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800123e:	f042 0201 	orr.w	r2, r2, #1
 8001242:	631a      	str	r2, [r3, #48]	; 0x30
 8001244:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001246:	f002 0201 	and.w	r2, r2, #1
 800124a:	9203      	str	r2, [sp, #12]
 800124c:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800124e:	9404      	str	r4, [sp, #16]
 8001250:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001252:	f042 0202 	orr.w	r2, r2, #2
 8001256:	631a      	str	r2, [r3, #48]	; 0x30
 8001258:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800125a:	f002 0202 	and.w	r2, r2, #2
 800125e:	9204      	str	r2, [sp, #16]
 8001260:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001262:	9405      	str	r4, [sp, #20]
 8001264:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001266:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800126a:	631a      	str	r2, [r3, #48]	; 0x30
 800126c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800126e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001272:	9205      	str	r2, [sp, #20]
 8001274:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001276:	9406      	str	r4, [sp, #24]
 8001278:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800127a:	f042 0210 	orr.w	r2, r2, #16
 800127e:	631a      	str	r2, [r3, #48]	; 0x30
 8001280:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001282:	f002 0210 	and.w	r2, r2, #16
 8001286:	9206      	str	r2, [sp, #24]
 8001288:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800128a:	9407      	str	r4, [sp, #28]
 800128c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800128e:	f042 0208 	orr.w	r2, r2, #8
 8001292:	631a      	str	r2, [r3, #48]	; 0x30
 8001294:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001296:	f003 0308 	and.w	r3, r3, #8
 800129a:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800129c:	4622      	mov	r2, r4
 800129e:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80012a0:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80012a2:	f003 fdcb 	bl	8004e3c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80012a6:	4622      	mov	r2, r4
 80012a8:	4896      	ldr	r0, [pc, #600]	; (8001504 <main+0x324>)
 80012aa:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80012ae:	f003 fdc5 	bl	8004e3c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012b2:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80012b4:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012b6:	f04f 0804 	mov.w	r8, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012ba:	4890      	ldr	r0, [pc, #576]	; (80014fc <main+0x31c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012bc:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012be:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012c0:	e9cd 860d 	strd	r8, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80012c4:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012c6:	f003 fccf 	bl	8004c68 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80012ca:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80012cc:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80012d0:	488c      	ldr	r0, [pc, #560]	; (8001504 <main+0x324>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012d2:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80012d6:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80012da:	f003 fcc5 	bl	8004c68 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80012de:	488a      	ldr	r0, [pc, #552]	; (8001508 <main+0x328>)
 80012e0:	4b8a      	ldr	r3, [pc, #552]	; (800150c <main+0x32c>)
 80012e2:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80012e4:	f003 fba2 	bl	8004a2c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80012e8:	4a89      	ldr	r2, [pc, #548]	; (8001510 <main+0x330>)
 80012ea:	4b8a      	ldr	r3, [pc, #552]	; (8001514 <main+0x334>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80012ec:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80012ee:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80012f2:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80012f4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80012f8:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80012fc:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001300:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001304:	f003 ff7c 	bl	8005200 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001308:	2110      	movs	r1, #16
 800130a:	4628      	mov	r0, r5
 800130c:	f004 f9b8 	bl	8005680 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001310:	4621      	mov	r1, r4
 8001312:	4628      	mov	r0, r5
 8001314:	f004 f9d3 	bl	80056be <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001318:	487f      	ldr	r0, [pc, #508]	; (8001518 <main+0x338>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800131a:	4980      	ldr	r1, [pc, #512]	; (800151c <main+0x33c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800131c:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800131e:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001322:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001326:	f44f 7500 	mov.w	r5, #512	; 0x200
 800132a:	2318      	movs	r3, #24
 800132c:	e9c0 5306 	strd	r5, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001330:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001332:	4d7b      	ldr	r5, [pc, #492]	; (8001520 <main+0x340>)
  hspi5.Init.CRCPolynomial = 10;
 8001334:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001336:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800133a:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 800133e:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001342:	f005 f82b 	bl	800639c <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001346:	4b77      	ldr	r3, [pc, #476]	; (8001524 <main+0x344>)
  SdramTiming.LoadToActiveDelay = 2;
 8001348:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800134a:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 800134e:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001352:	2340      	movs	r3, #64	; 0x40
 8001354:	e9c5 c304 	strd	ip, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001358:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800135c:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001360:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001364:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001368:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  SdramTiming.WriteRecoveryTime = 3;
 800136c:	f04f 0a03 	mov.w	sl, #3
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001370:	62ab      	str	r3, [r5, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001372:	a90d      	add	r1, sp, #52	; 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001374:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001376:	4628      	mov	r0, r5
  SdramTiming.SelfRefreshTime = 4;
 8001378:	e9cd 380e 	strd	r3, r8, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 800137c:	9310      	str	r3, [sp, #64]	; 0x40
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800137e:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001382:	e9c5 4802 	strd	r4, r8, [r5, #8]
  SdramTiming.RPDelay = 2;
 8001386:	e9cd a711 	strd	sl, r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 800138a:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800138c:	f004 ff2c 	bl	80061e8 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001390:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001394:	a909      	add	r1, sp, #36	; 0x24
 8001396:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001398:	e9cd 960a 	strd	r9, r6, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 800139c:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 800139e:	9609      	str	r6, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80013a0:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80013a2:	f004 ff41 	bl	8006228 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80013a6:	4630      	mov	r0, r6
 80013a8:	f003 fada 	bl	8004960 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80013ac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80013b0:	a909      	add	r1, sp, #36	; 0x24
 80013b2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80013b4:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80013b8:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80013bc:	f004 ff34 	bl	8006228 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80013c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80013c4:	a909      	add	r1, sp, #36	; 0x24
 80013c6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80013c8:	e9cd a909 	strd	sl, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80013cc:	e9cd 840b 	strd	r8, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80013d0:	f004 ff2a 	bl	8006228 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80013d4:	f44f 730c 	mov.w	r3, #560	; 0x230
 80013d8:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80013da:	9b08      	ldr	r3, [sp, #32]
 80013dc:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80013de:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80013e2:	a909      	add	r1, sp, #36	; 0x24
 80013e4:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80013e6:	e9cd 8909 	strd	r8, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80013ea:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80013ec:	f004 ff1c 	bl	8006228 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 80013f0:	f240 516a 	movw	r1, #1386	; 0x56a
 80013f4:	4628      	mov	r0, r5
 80013f6:	f004 ff2e 	bl	8006256 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80013fa:	2234      	movs	r2, #52	; 0x34
 80013fc:	4621      	mov	r1, r4
 80013fe:	eb0d 0002 	add.w	r0, sp, r2
 8001402:	f01a fb97 	bl	801bb34 <memset>
  hltdc.Instance = LTDC;
 8001406:	4d48      	ldr	r5, [pc, #288]	; (8001528 <main+0x348>)
 8001408:	4b48      	ldr	r3, [pc, #288]	; (800152c <main+0x34c>)
  hltdc.Init.Backcolor.Blue = 0;
 800140a:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800140c:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001410:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001412:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001416:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 8001418:	f240 1e0d 	movw	lr, #269	; 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 800141c:	e9c5 3a07 	strd	r3, sl, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001420:	f240 1343 	movw	r3, #323	; 0x143
 8001424:	e9c5 e309 	strd	lr, r3, [r5, #36]	; 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001428:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800142a:	f240 1347 	movw	r3, #327	; 0x147
 800142e:	f240 1817 	movw	r8, #279	; 0x117
 8001432:	e9c5 830b 	strd	r8, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001436:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800143a:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 800143c:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001440:	f004 f9e2 	bl	8005808 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001444:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8001446:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 8001448:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800144c:	f44f 6980 	mov.w	r9, #1024	; 0x400
 8001450:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001452:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 8001456:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800145a:	e9cd 9114 	strd	r9, r1, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 800145e:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001462:	a90d      	add	r1, sp, #52	; 0x34
 8001464:	4622      	mov	r2, r4
 8001466:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001468:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 800146c:	4d30      	ldr	r5, [pc, #192]	; (8001530 <main+0x350>)
  pLayerCfg.ImageHeight = 320;
 800146e:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 8001470:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001472:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001476:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800147a:	f004 fa90 	bl	800599e <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800147e:	4b2d      	ldr	r3, [pc, #180]	; (8001534 <main+0x354>)
 8001480:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001482:	681b      	ldr	r3, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8001484:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800155c <main+0x37c>
  LcdDrv->Init();
 8001488:	4798      	blx	r3
  LcdDrv->DisplayOff();
 800148a:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 800148c:	4d2a      	ldr	r5, [pc, #168]	; (8001538 <main+0x358>)
  LcdDrv->DisplayOff();
 800148e:	68db      	ldr	r3, [r3, #12]
 8001490:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001492:	4b2a      	ldr	r3, [pc, #168]	; (800153c <main+0x35c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001494:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001498:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800149c:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 800149e:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 80014a2:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80014a6:	f003 fae3 	bl	8004a70 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80014aa:	4631      	mov	r1, r6
 80014ac:	4628      	mov	r0, r5
 80014ae:	f003 fb97 	bl	8004be0 <HAL_DMA2D_ConfigLayer>
  huart2.Instance = USART2;
 80014b2:	4823      	ldr	r0, [pc, #140]	; (8001540 <main+0x360>)
  huart2.Init.BaudRate = 9600;
 80014b4:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80014b8:	e9c0 a300 	strd	sl, r3, [r0]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80014bc:	230c      	movs	r3, #12
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80014be:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80014c2:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart2.Init.Parity = UART_PARITY_NONE;
 80014c6:	6104      	str	r4, [r0, #16]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80014c8:	61c4      	str	r4, [r0, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80014ca:	f005 fbab 	bl	8006c24 <HAL_UART_Init>
  MX_TouchGFX_Init();
 80014ce:	f7ff f88c 	bl	80005ea <MX_TouchGFX_Init>
  osKernelInitialize();
 80014d2:	f005 fdbb 	bl	800704c <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80014d6:	4a1b      	ldr	r2, [pc, #108]	; (8001544 <main+0x364>)
 80014d8:	481b      	ldr	r0, [pc, #108]	; (8001548 <main+0x368>)
 80014da:	4621      	mov	r1, r4
 80014dc:	f005 fdf0 	bl	80070c0 <osThreadNew>
 80014e0:	4b1a      	ldr	r3, [pc, #104]	; (800154c <main+0x36c>)
  sendRequestTaskHandle = osThreadNew(StartsendRequestTask, NULL, &sendRequestTask_attributes);
 80014e2:	4a1b      	ldr	r2, [pc, #108]	; (8001550 <main+0x370>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80014e4:	6018      	str	r0, [r3, #0]
  sendRequestTaskHandle = osThreadNew(StartsendRequestTask, NULL, &sendRequestTask_attributes);
 80014e6:	4621      	mov	r1, r4
 80014e8:	481a      	ldr	r0, [pc, #104]	; (8001554 <main+0x374>)
 80014ea:	f005 fde9 	bl	80070c0 <osThreadNew>
 80014ee:	4b1a      	ldr	r3, [pc, #104]	; (8001558 <main+0x378>)
 80014f0:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80014f2:	f005 fdc5 	bl	8007080 <osKernelStart>
  while (1)
 80014f6:	e7fe      	b.n	80014f6 <main+0x316>
 80014f8:	40023800 	.word	0x40023800
 80014fc:	40020800 	.word	0x40020800
 8001500:	200137a4 	.word	0x200137a4
 8001504:	40020c00 	.word	0x40020c00
 8001508:	20013850 	.word	0x20013850
 800150c:	40023000 	.word	0x40023000
 8001510:	40005c00 	.word	0x40005c00
 8001514:	000186a0 	.word	0x000186a0
 8001518:	200137f8 	.word	0x200137f8
 800151c:	40015000 	.word	0x40015000
 8001520:	20013988 	.word	0x20013988
 8001524:	a0000140 	.word	0xa0000140
 8001528:	2001385c 	.word	0x2001385c
 800152c:	40016800 	.word	0x40016800
 8001530:	20002670 	.word	0x20002670
 8001534:	20000014 	.word	0x20000014
 8001538:	20013908 	.word	0x20013908
 800153c:	4002b000 	.word	0x4002b000
 8001540:	20013948 	.word	0x20013948
 8001544:	0801d4f8 	.word	0x0801d4f8
 8001548:	080005ef 	.word	0x080005ef
 800154c:	20013904 	.word	0x20013904
 8001550:	0801d51c 	.word	0x0801d51c
 8001554:	08001915 	.word	0x08001915
 8001558:	20013858 	.word	0x20013858
 800155c:	40004400 	.word	0x40004400

08001560 <IOE_Init>:
 8001560:	4770      	bx	lr

08001562 <IOE_ITConfig>:
 8001562:	4770      	bx	lr

08001564 <IOE_Write>:
{
 8001564:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 8001566:	4b09      	ldr	r3, [pc, #36]	; (800158c <IOE_Write+0x28>)
 8001568:	f88d 2017 	strb.w	r2, [sp, #23]
 800156c:	681b      	ldr	r3, [r3, #0]
 800156e:	9302      	str	r3, [sp, #8]
 8001570:	f10d 0217 	add.w	r2, sp, #23
 8001574:	2301      	movs	r3, #1
 8001576:	9200      	str	r2, [sp, #0]
 8001578:	9301      	str	r3, [sp, #4]
 800157a:	460a      	mov	r2, r1
 800157c:	4601      	mov	r1, r0
 800157e:	4804      	ldr	r0, [pc, #16]	; (8001590 <IOE_Write+0x2c>)
 8001580:	f003 fee6 	bl	8005350 <HAL_I2C_Mem_Write>
}
 8001584:	b007      	add	sp, #28
 8001586:	f85d fb04 	ldr.w	pc, [sp], #4
 800158a:	bf00      	nop
 800158c:	2000000c 	.word	0x2000000c
 8001590:	200137a4 	.word	0x200137a4

08001594 <IOE_Read>:
{
 8001594:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001596:	2300      	movs	r3, #0
 8001598:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800159c:	4b08      	ldr	r3, [pc, #32]	; (80015c0 <IOE_Read+0x2c>)
 800159e:	681b      	ldr	r3, [r3, #0]
 80015a0:	9302      	str	r3, [sp, #8]
{
 80015a2:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80015a4:	2301      	movs	r3, #1
 80015a6:	f10d 0117 	add.w	r1, sp, #23
 80015aa:	9100      	str	r1, [sp, #0]
 80015ac:	9301      	str	r3, [sp, #4]
 80015ae:	4601      	mov	r1, r0
 80015b0:	4804      	ldr	r0, [pc, #16]	; (80015c4 <IOE_Read+0x30>)
 80015b2:	f003 ff5d 	bl	8005470 <HAL_I2C_Mem_Read>
}
 80015b6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80015ba:	b007      	add	sp, #28
 80015bc:	f85d fb04 	ldr.w	pc, [sp], #4
 80015c0:	2000000c 	.word	0x2000000c
 80015c4:	200137a4 	.word	0x200137a4

080015c8 <IOE_ReadMultiple>:
{
 80015c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80015ca:	4c08      	ldr	r4, [pc, #32]	; (80015ec <IOE_ReadMultiple+0x24>)
 80015cc:	6824      	ldr	r4, [r4, #0]
 80015ce:	9200      	str	r2, [sp, #0]
 80015d0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80015d4:	460a      	mov	r2, r1
 80015d6:	2301      	movs	r3, #1
 80015d8:	4601      	mov	r1, r0
 80015da:	4805      	ldr	r0, [pc, #20]	; (80015f0 <IOE_ReadMultiple+0x28>)
 80015dc:	f003 ff48 	bl	8005470 <HAL_I2C_Mem_Read>
}
 80015e0:	3800      	subs	r0, #0
 80015e2:	bf18      	it	ne
 80015e4:	2001      	movne	r0, #1
 80015e6:	b004      	add	sp, #16
 80015e8:	bd10      	pop	{r4, pc}
 80015ea:	bf00      	nop
 80015ec:	2000000c 	.word	0x2000000c
 80015f0:	200137a4 	.word	0x200137a4

080015f4 <IOE_Delay>:
 80015f4:	f003 b9b4 	b.w	8004960 <HAL_Delay>

080015f8 <LCD_IO_Init>:
  /* Re- Initialize the SPI communication BUS */
  //SPIx_Init();
}

void LCD_IO_Init(void)
{
 80015f8:	b508      	push	{r3, lr}
  /* Set or Reset the control line */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80015fa:	4806      	ldr	r0, [pc, #24]	; (8001614 <LCD_IO_Init+0x1c>)
 80015fc:	2200      	movs	r2, #0
 80015fe:	2104      	movs	r1, #4
 8001600:	f003 fc1c 	bl	8004e3c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
}
 8001604:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001608:	4802      	ldr	r0, [pc, #8]	; (8001614 <LCD_IO_Init+0x1c>)
 800160a:	2201      	movs	r2, #1
 800160c:	2104      	movs	r1, #4
 800160e:	f003 bc15 	b.w	8004e3c <HAL_GPIO_WritePin>
 8001612:	bf00      	nop
 8001614:	40020800 	.word	0x40020800

08001618 <LCD_IO_WriteData>:

/**
  * @brief  Writes register value.
  */
void LCD_IO_WriteData(uint16_t RegValue) 
{
 8001618:	b538      	push	{r3, r4, r5, lr}
  /* Set WRX to send data */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
  
  /* Reset LCD control line(/CS) and Send data */  
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800161a:	4d0b      	ldr	r5, [pc, #44]	; (8001648 <LCD_IO_WriteData+0x30>)
{
 800161c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800161e:	2201      	movs	r2, #1
 8001620:	480a      	ldr	r0, [pc, #40]	; (800164c <LCD_IO_WriteData+0x34>)
 8001622:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001626:	f003 fc09 	bl	8004e3c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800162a:	2200      	movs	r2, #0
 800162c:	2104      	movs	r1, #4
 800162e:	4628      	mov	r0, r5
 8001630:	f003 fc04 	bl	8004e3c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001634:	4620      	mov	r0, r4
 8001636:	f7ff fd65 	bl	8001104 <SPI5_Write>
  
  /* Deselect: Chip Select high */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800163a:	4628      	mov	r0, r5
 800163c:	2201      	movs	r2, #1
}
 800163e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001642:	2104      	movs	r1, #4
 8001644:	f003 bbfa 	b.w	8004e3c <HAL_GPIO_WritePin>
 8001648:	40020800 	.word	0x40020800
 800164c:	40020c00 	.word	0x40020c00

08001650 <LCD_IO_WriteReg>:

/**
  * @brief  Writes register address.
  */
void LCD_IO_WriteReg(uint8_t Reg) 
{
 8001650:	b538      	push	{r3, r4, r5, lr}
  /* Reset WRX to send command */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
  
  /* Reset LCD control line(/CS) and Send command */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001652:	4d0b      	ldr	r5, [pc, #44]	; (8001680 <LCD_IO_WriteReg+0x30>)
{
 8001654:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001656:	2200      	movs	r2, #0
 8001658:	480a      	ldr	r0, [pc, #40]	; (8001684 <LCD_IO_WriteReg+0x34>)
 800165a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800165e:	f003 fbed 	bl	8004e3c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001662:	2200      	movs	r2, #0
 8001664:	2104      	movs	r1, #4
 8001666:	4628      	mov	r0, r5
 8001668:	f003 fbe8 	bl	8004e3c <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 800166c:	4620      	mov	r0, r4
 800166e:	f7ff fd49 	bl	8001104 <SPI5_Write>
  
  /* Deselect: Chip Select high */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001672:	4628      	mov	r0, r5
 8001674:	2201      	movs	r2, #1
}
 8001676:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800167a:	2104      	movs	r1, #4
 800167c:	f003 bbde 	b.w	8004e3c <HAL_GPIO_WritePin>
 8001680:	40020800 	.word	0x40020800
 8001684:	40020c00 	.word	0x40020c00

08001688 <LCD_IO_ReadData>:
  * @param  RegValue Address of the register to read
  * @param  ReadSize Number of bytes to read
  * @retval Content of the register value
  */
uint32_t LCD_IO_ReadData(uint16_t RegValue, uint8_t ReadSize) 
{
 8001688:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  uint32_t readvalue = 0;

  /* Select: Chip Select low */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800168a:	4e14      	ldr	r6, [pc, #80]	; (80016dc <LCD_IO_ReadData+0x54>)

  /* Reset WRX to send command */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800168c:	4f14      	ldr	r7, [pc, #80]	; (80016e0 <LCD_IO_ReadData+0x58>)
{
 800168e:	4605      	mov	r5, r0
 8001690:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001692:	4630      	mov	r0, r6
 8001694:	2200      	movs	r2, #0
 8001696:	2104      	movs	r1, #4
 8001698:	f003 fbd0 	bl	8004e3c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800169c:	2200      	movs	r2, #0
 800169e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80016a2:	4638      	mov	r0, r7
 80016a4:	f003 fbca 	bl	8004e3c <HAL_GPIO_WritePin>
  
  SPI5_Write(RegValue);
 80016a8:	4628      	mov	r0, r5
 80016aa:	f7ff fd2b 	bl	8001104 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80016ae:	4b0d      	ldr	r3, [pc, #52]	; (80016e4 <LCD_IO_ReadData+0x5c>)
 80016b0:	480d      	ldr	r0, [pc, #52]	; (80016e8 <LCD_IO_ReadData+0x60>)
 80016b2:	681b      	ldr	r3, [r3, #0]
 80016b4:	4622      	mov	r2, r4
 80016b6:	a901      	add	r1, sp, #4
 80016b8:	f005 f840 	bl	800673c <HAL_SPI_Receive>
  
  readvalue = SPI5_Read(ReadSize);

  /* Set WRX to send data */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80016bc:	4638      	mov	r0, r7
 80016be:	2201      	movs	r2, #1
 80016c0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 80016c4:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80016c6:	f003 fbb9 	bl	8004e3c <HAL_GPIO_WritePin>

  /* Deselect: Chip Select high */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80016ca:	4630      	mov	r0, r6
 80016cc:	2201      	movs	r2, #1
 80016ce:	2104      	movs	r1, #4
 80016d0:	f003 fbb4 	bl	8004e3c <HAL_GPIO_WritePin>
  
  return readvalue;
}
 80016d4:	4620      	mov	r0, r4
 80016d6:	b003      	add	sp, #12
 80016d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80016da:	bf00      	nop
 80016dc:	40020800 	.word	0x40020800
 80016e0:	40020c00 	.word	0x40020c00
 80016e4:	20000010 	.word	0x20000010
 80016e8:	200137f8 	.word	0x200137f8

080016ec <LCD_Delay>:
  * @brief  Wait for loop in ms.
  * @param  Delay in ms.
  */
void LCD_Delay(uint32_t Delay)
{
  HAL_Delay(Delay);
 80016ec:	f003 b938 	b.w	8004960 <HAL_Delay>

080016f0 <checkSum>:
#include <stdlib.h>
#include "task.h"
#include "queue.h"

char *checkSum(char *str)
{
 80016f0:	b570      	push	{r4, r5, r6, lr}
 80016f2:	4604      	mov	r4, r0
    int l = strlen(str);
 80016f4:	f7fe fd7c 	bl	80001f0 <strlen>
    unsigned char b = 0, j, k;
    char ch;

    for (int i = 0; i < l; i++)
 80016f8:	2200      	movs	r2, #0
    unsigned char b = 0, j, k;
 80016fa:	4613      	mov	r3, r2
    for (int i = 0; i < l; i++)
 80016fc:	4282      	cmp	r2, r0
 80016fe:	db18      	blt.n	8001732 <checkSum+0x42>
        ch = str[i];
        j = ch;
        b = b - j;
    }

    j = b / 16;
 8001700:	091d      	lsrs	r5, r3, #4
    if (j < 10) j += 48;
 8001702:	2b9f      	cmp	r3, #159	; 0x9f
    else j += 55;

    k = b % 16;
 8001704:	f003 030f 	and.w	r3, r3, #15
    if (j < 10) j += 48;
 8001708:	bf94      	ite	ls
 800170a:	3530      	addls	r5, #48	; 0x30
    else j += 55;
 800170c:	3537      	addhi	r5, #55	; 0x37
    if (k < 10) k += 48;
    else k+= 55;
    char *string = malloc(3);
 800170e:	2003      	movs	r0, #3
    if (k < 10) k += 48;
 8001710:	2b09      	cmp	r3, #9
 8001712:	bf94      	ite	ls
 8001714:	f103 0430 	addls.w	r4, r3, #48	; 0x30
    else k+= 55;
 8001718:	f103 0437 	addhi.w	r4, r3, #55	; 0x37
    char *string = malloc(3);
 800171c:	f01a f9ec 	bl	801baf8 <malloc>
    else j += 55;
 8001720:	b2ed      	uxtb	r5, r5
    char *string = malloc(3);
 8001722:	4606      	mov	r6, r0
    sprintf(string, "%c%c", (char) j, (char) k);
 8001724:	4905      	ldr	r1, [pc, #20]	; (800173c <checkSum+0x4c>)
 8001726:	4623      	mov	r3, r4
 8001728:	462a      	mov	r2, r5
 800172a:	f01a fdf7 	bl	801c31c <siprintf>
    return string;
}
 800172e:	4630      	mov	r0, r6
 8001730:	bd70      	pop	{r4, r5, r6, pc}
        b = b - j;
 8001732:	5ca1      	ldrb	r1, [r4, r2]
 8001734:	1a5b      	subs	r3, r3, r1
 8001736:	b2db      	uxtb	r3, r3
    for (int i = 0; i < l; i++)
 8001738:	3201      	adds	r2, #1
 800173a:	e7df      	b.n	80016fc <checkSum+0xc>
 800173c:	0801d4d4 	.word	0x0801d4d4

08001740 <tempToChar>:
const unsigned char CHAR_TO_NUMBER = 48;
const unsigned char STX = 2;
const unsigned char ETX = 3;

char *tempToChar(float val)
{
 8001740:	b500      	push	{lr}
 8001742:	ed2d 8b02 	vpush	{d8}
	char *temp = malloc(4);
 8001746:	2004      	movs	r0, #4
{
 8001748:	b083      	sub	sp, #12
 800174a:	eeb0 8a40 	vmov.f32	s16, s0
	char *temp = malloc(4);
 800174e:	f01a f9d3 	bl	801baf8 <malloc>
	temp[0] = (char) val / 100;
 8001752:	eefc 7ac8 	vcvt.u32.f32	s15, s16
 8001756:	2164      	movs	r1, #100	; 0x64
 8001758:	edcd 7a01 	vstr	s15, [sp, #4]
 800175c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001760:	fbb3 f3f1 	udiv	r3, r3, r1
 8001764:	7003      	strb	r3, [r0, #0]
	temp[1] = (char) (val - temp[0] * 100) / 10;
 8001766:	fb13 f301 	smulbb	r3, r3, r1
 800176a:	ee00 3a10 	vmov	s0, r3
 800176e:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8001772:	210a      	movs	r1, #10
 8001774:	ee38 0a40 	vsub.f32	s0, s16, s0
 8001778:	eefc 7ac0 	vcvt.u32.f32	s15, s0
 800177c:	edcd 7a01 	vstr	s15, [sp, #4]
 8001780:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001784:	fbb3 f3f1 	udiv	r3, r3, r1
 8001788:	7043      	strb	r3, [r0, #1]
	temp[2] = (char) (val - temp[0] * 100 - temp[1] * 10);
 800178a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800178e:	005b      	lsls	r3, r3, #1
 8001790:	ee07 3a90 	vmov	s15, r3
 8001794:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001798:	ee30 0a67 	vsub.f32	s0, s0, s15
 800179c:	eefc 7ac0 	vcvt.u32.f32	s15, s0
 80017a0:	edcd 7a01 	vstr	s15, [sp, #4]
 80017a4:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80017a8:	7083      	strb	r3, [r0, #2]
	temp[3] = (char) (val - temp[0] * 100 - temp[1] * 10 - temp[2]) * 10;
 80017aa:	ee07 3a90 	vmov	s15, r3
 80017ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80017b2:	ee30 0a67 	vsub.f32	s0, s0, s15
 80017b6:	eefc 7ac0 	vcvt.u32.f32	s15, s0
 80017ba:	ee17 3a90 	vmov	r3, s15
 80017be:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80017c2:	005b      	lsls	r3, r3, #1
 80017c4:	70c3      	strb	r3, [r0, #3]
	return temp;
}
 80017c6:	b003      	add	sp, #12
 80017c8:	ecbd 8b02 	vpop	{d8}
 80017cc:	f85d fb04 	ldr.w	pc, [sp], #4

080017d0 <humToChar>:

char *humToChar(float val)
{
 80017d0:	b500      	push	{lr}
 80017d2:	ed2d 8b02 	vpush	{d8}
	char *hum = malloc(2);
 80017d6:	2002      	movs	r0, #2
{
 80017d8:	b083      	sub	sp, #12
 80017da:	eeb0 8a40 	vmov.f32	s16, s0
	char *hum = malloc(2);
 80017de:	f01a f98b 	bl	801baf8 <malloc>
	if (val == -1) return "--";
 80017e2:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 80017e6:	eeb4 8a67 	vcmp.f32	s16, s15
 80017ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80017ee:	d020      	beq.n	8001832 <humToChar+0x62>
	hum[0] = (char) val / 100;
 80017f0:	eefc 7ac8 	vcvt.u32.f32	s15, s16
 80017f4:	2264      	movs	r2, #100	; 0x64
 80017f6:	edcd 7a01 	vstr	s15, [sp, #4]
 80017fa:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80017fe:	fbb3 f3f2 	udiv	r3, r3, r2
 8001802:	7003      	strb	r3, [r0, #0]
	hum[1] = (char) (val - hum[0] * 100) / 10;
 8001804:	fb13 f302 	smulbb	r3, r3, r2
 8001808:	ee07 3a90 	vmov	s15, r3
 800180c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001810:	220a      	movs	r2, #10
 8001812:	ee78 7a67 	vsub.f32	s15, s16, s15
 8001816:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800181a:	edcd 7a01 	vstr	s15, [sp, #4]
 800181e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001822:	fbb3 f3f2 	udiv	r3, r3, r2
 8001826:	7043      	strb	r3, [r0, #1]
	return hum;
}
 8001828:	b003      	add	sp, #12
 800182a:	ecbd 8b02 	vpop	{d8}
 800182e:	f85d fb04 	ldr.w	pc, [sp], #4
	if (val == -1) return "--";
 8001832:	4801      	ldr	r0, [pc, #4]	; (8001838 <humToChar+0x68>)
 8001834:	e7f8      	b.n	8001828 <humToChar+0x58>
 8001836:	bf00      	nop
 8001838:	0801d4d9 	.word	0x0801d4d9

0800183c <prepareRequestString>:

char *prepareRequestString(int isRequestForData, float *data)
{
 800183c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800183e:	460c      	mov	r4, r1
	char *rs = NULL;
	if (isRequestForData == 0)
 8001840:	4605      	mov	r5, r0
 8001842:	b9d8      	cbnz	r0, 800187c <prepareRequestString+0x40>
	{
		rs = malloc(6);
 8001844:	2006      	movs	r0, #6
 8001846:	f01a f957 	bl	801baf8 <malloc>
		rs[0] = STX;
		rs[1] = 0; // co to jest
		rs[2] = 63;
 800184a:	273f      	movs	r7, #63	; 0x3f
		rs[0] = STX;
 800184c:	2302      	movs	r3, #2
		rs = malloc(6);
 800184e:	4604      	mov	r4, r0
		rs[0] = STX;
 8001850:	8003      	strh	r3, [r0, #0]
		rs[2] = 63;
 8001852:	7087      	strb	r7, [r0, #2]

		char *str = malloc(3);
 8001854:	2003      	movs	r0, #3
 8001856:	f01a f94f 	bl	801baf8 <malloc>
		sprintf(str, "%c%c", rs[1], rs[2]);
 800185a:	463b      	mov	r3, r7
 800185c:	492c      	ldr	r1, [pc, #176]	; (8001910 <prepareRequestString+0xd4>)
		char *str = malloc(3);
 800185e:	4606      	mov	r6, r0
		sprintf(str, "%c%c", rs[1], rs[2]);
 8001860:	462a      	mov	r2, r5
 8001862:	f01a fd5b 	bl	801c31c <siprintf>
		char *cs = checkSum(str);
 8001866:	4630      	mov	r0, r6
 8001868:	f7ff ff42 	bl	80016f0 <checkSum>

		rs[3] = cs[0];
 800186c:	7803      	ldrb	r3, [r0, #0]
 800186e:	70e3      	strb	r3, [r4, #3]
		rs[4] = cs[1];
 8001870:	7843      	ldrb	r3, [r0, #1]
 8001872:	7123      	strb	r3, [r4, #4]
		rs[5] = ETX;
 8001874:	2303      	movs	r3, #3
 8001876:	7163      	strb	r3, [r4, #5]
		free(temp);
		free(hum);
	}

	return rs;
}
 8001878:	4620      	mov	r0, r4
 800187a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if (isRequestForData == 1)
 800187c:	2801      	cmp	r0, #1
 800187e:	d144      	bne.n	800190a <prepareRequestString+0xce>
		char *temp = tempToChar(data[0]);
 8001880:	ed91 0a00 	vldr	s0, [r1]
 8001884:	f7ff ff5c 	bl	8001740 <tempToChar>
		char *hum = humToChar(data[1]);
 8001888:	ed94 0a01 	vldr	s0, [r4, #4]
		char *temp = tempToChar(data[0]);
 800188c:	4605      	mov	r5, r0
		char *hum = humToChar(data[1]);
 800188e:	f7ff ff9f 	bl	80017d0 <humToChar>
 8001892:	4606      	mov	r6, r0
		rs = malloc(6);
 8001894:	2006      	movs	r0, #6
 8001896:	f01a f92f 	bl	801baf8 <malloc>
		rs[0] = STX;
 800189a:	2302      	movs	r3, #2
 800189c:	8003      	strh	r3, [r0, #0]
		rs[2] = 'T';
 800189e:	2354      	movs	r3, #84	; 0x54
 80018a0:	7083      	strb	r3, [r0, #2]
		rs[3] = temp[0];
 80018a2:	782b      	ldrb	r3, [r5, #0]
 80018a4:	70c3      	strb	r3, [r0, #3]
		rs[4] = temp[1];
 80018a6:	786b      	ldrb	r3, [r5, #1]
 80018a8:	7103      	strb	r3, [r0, #4]
		rs[5] = temp[2];
 80018aa:	78ab      	ldrb	r3, [r5, #2]
 80018ac:	7143      	strb	r3, [r0, #5]
		rs[6] = '.';
 80018ae:	232e      	movs	r3, #46	; 0x2e
 80018b0:	7183      	strb	r3, [r0, #6]
		rs[7] = temp[3];
 80018b2:	78eb      	ldrb	r3, [r5, #3]
 80018b4:	71c3      	strb	r3, [r0, #7]
		rs[8] = 'F';
 80018b6:	2346      	movs	r3, #70	; 0x46
 80018b8:	7203      	strb	r3, [r0, #8]
		rs[9] = hum[0];
 80018ba:	7833      	ldrb	r3, [r6, #0]
 80018bc:	7243      	strb	r3, [r0, #9]
		rs[10] = hum[1];
 80018be:	7873      	ldrb	r3, [r6, #1]
 80018c0:	7283      	strb	r3, [r0, #10]
		rs[11] = 'R';
 80018c2:	4603      	mov	r3, r0
 80018c4:	2252      	movs	r2, #82	; 0x52
 80018c6:	f803 2f0b 	strb.w	r2, [r3, #11]!
		rs = malloc(6);
 80018ca:	4604      	mov	r4, r0
		for (int i = 12; i < 28; i++)
 80018cc:	f100 021b 	add.w	r2, r0, #27
			rs[i] = '0';
 80018d0:	2130      	movs	r1, #48	; 0x30
 80018d2:	f803 1f01 	strb.w	r1, [r3, #1]!
		for (int i = 12; i < 28; i++)
 80018d6:	429a      	cmp	r2, r3
 80018d8:	d1fb      	bne.n	80018d2 <prepareRequestString+0x96>
		char *str = malloc(27);
 80018da:	201b      	movs	r0, #27
 80018dc:	f01a f90c 	bl	801baf8 <malloc>
		strncpy(str, rs+1, 27);
 80018e0:	221b      	movs	r2, #27
 80018e2:	1c61      	adds	r1, r4, #1
		char *str = malloc(27);
 80018e4:	4607      	mov	r7, r0
		strncpy(str, rs+1, 27);
 80018e6:	f01a fd39 	bl	801c35c <strncpy>
		char *cs = checkSum(str);
 80018ea:	4638      	mov	r0, r7
 80018ec:	f7ff ff00 	bl	80016f0 <checkSum>
		rs[28] = cs[0];
 80018f0:	7803      	ldrb	r3, [r0, #0]
 80018f2:	7723      	strb	r3, [r4, #28]
		rs[29] = cs[1];
 80018f4:	7843      	ldrb	r3, [r0, #1]
 80018f6:	7763      	strb	r3, [r4, #29]
		rs[30] = ETX;
 80018f8:	2303      	movs	r3, #3
		free(temp);
 80018fa:	4628      	mov	r0, r5
		rs[30] = ETX;
 80018fc:	77a3      	strb	r3, [r4, #30]
		free(temp);
 80018fe:	f01a f903 	bl	801bb08 <free>
		free(hum);
 8001902:	4630      	mov	r0, r6
 8001904:	f01a f900 	bl	801bb08 <free>
	return rs;
 8001908:	e7b6      	b.n	8001878 <prepareRequestString+0x3c>
	char *rs = NULL;
 800190a:	2400      	movs	r4, #0
	return rs;
 800190c:	e7b4      	b.n	8001878 <prepareRequestString+0x3c>
 800190e:	bf00      	nop
 8001910:	0801d4d4 	.word	0x0801d4d4

08001914 <StartsendRequestTask>:
extern xQueueHandle messageQ;
extern xQueueHandle messageQ2;

/* USER CODE END Header_StartsendRequestTask */
void StartsendRequestTask(void *argument)
{
 8001914:	b530      	push	{r4, r5, lr}
	float r[2];
	int isChangeRequest = 0;
	char *Tx;
	for(;;)
	{
		isChangeRequest = (int) xQueueReceive(messageQ2, &r, 0);
 8001916:	4d0d      	ldr	r5, [pc, #52]	; (800194c <StartsendRequestTask+0x38>)
		Tx = prepareRequestString(isChangeRequest, r);
		HAL_UART_Transmit(&huart2, (uint8_t *) Tx, strlen(Tx), 1000);
 8001918:	4c0d      	ldr	r4, [pc, #52]	; (8001950 <StartsendRequestTask+0x3c>)
{
 800191a:	b085      	sub	sp, #20
		isChangeRequest = (int) xQueueReceive(messageQ2, &r, 0);
 800191c:	2200      	movs	r2, #0
 800191e:	a902      	add	r1, sp, #8
 8001920:	6828      	ldr	r0, [r5, #0]
 8001922:	f006 fbad 	bl	8008080 <xQueueReceive>
		Tx = prepareRequestString(isChangeRequest, r);
 8001926:	a902      	add	r1, sp, #8
 8001928:	f7ff ff88 	bl	800183c <prepareRequestString>
 800192c:	9001      	str	r0, [sp, #4]
		HAL_UART_Transmit(&huart2, (uint8_t *) Tx, strlen(Tx), 1000);
 800192e:	f7fe fc5f 	bl	80001f0 <strlen>
 8001932:	9901      	ldr	r1, [sp, #4]
 8001934:	b282      	uxth	r2, r0
 8001936:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800193a:	4620      	mov	r0, r4
 800193c:	f005 f9a0 	bl	8006c80 <HAL_UART_Transmit>
		osDelay(1000);
 8001940:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001944:	f005 fc12 	bl	800716c <osDelay>
	for(;;)
 8001948:	e7e8      	b.n	800191c <StartsendRequestTask+0x8>
 800194a:	bf00      	nop
 800194c:	200027e0 	.word	0x200027e0
 8001950:	20013948 	.word	0x20013948

08001954 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001954:	6802      	ldr	r2, [r0, #0]
 8001956:	4b03      	ldr	r3, [pc, #12]	; (8001964 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001958:	429a      	cmp	r2, r3
 800195a:	d101      	bne.n	8001960 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 800195c:	f002 bfee 	b.w	800493c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001960:	4770      	bx	lr
 8001962:	bf00      	nop
 8001964:	40001000 	.word	0x40001000

08001968 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001968:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800196a:	4b0e      	ldr	r3, [pc, #56]	; (80019a4 <HAL_MspInit+0x3c>)
 800196c:	2200      	movs	r2, #0
 800196e:	9200      	str	r2, [sp, #0]
 8001970:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001972:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001976:	6459      	str	r1, [r3, #68]	; 0x44
 8001978:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800197a:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800197e:	9100      	str	r1, [sp, #0]
 8001980:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001982:	9201      	str	r2, [sp, #4]
 8001984:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001986:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800198a:	6419      	str	r1, [r3, #64]	; 0x40
 800198c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800198e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001992:	9301      	str	r3, [sp, #4]
 8001994:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001996:	210f      	movs	r1, #15
 8001998:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800199c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800199e:	f003 b805 	b.w	80049ac <HAL_NVIC_SetPriority>
 80019a2:	bf00      	nop
 80019a4:	40023800 	.word	0x40023800

080019a8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80019a8:	6802      	ldr	r2, [r0, #0]
 80019aa:	4b09      	ldr	r3, [pc, #36]	; (80019d0 <HAL_CRC_MspInit+0x28>)
 80019ac:	429a      	cmp	r2, r3
{
 80019ae:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80019b0:	d10b      	bne.n	80019ca <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019b2:	2300      	movs	r3, #0
 80019b4:	9301      	str	r3, [sp, #4]
 80019b6:	4b07      	ldr	r3, [pc, #28]	; (80019d4 <HAL_CRC_MspInit+0x2c>)
 80019b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019ba:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80019be:	631a      	str	r2, [r3, #48]	; 0x30
 80019c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019c2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80019c6:	9301      	str	r3, [sp, #4]
 80019c8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80019ca:	b002      	add	sp, #8
 80019cc:	4770      	bx	lr
 80019ce:	bf00      	nop
 80019d0:	40023000 	.word	0x40023000
 80019d4:	40023800 	.word	0x40023800

080019d8 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80019d8:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80019da:	4b0f      	ldr	r3, [pc, #60]	; (8001a18 <HAL_DMA2D_MspInit+0x40>)
 80019dc:	6802      	ldr	r2, [r0, #0]
 80019de:	429a      	cmp	r2, r3
 80019e0:	d116      	bne.n	8001a10 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80019e2:	2200      	movs	r2, #0
 80019e4:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 80019e8:	9201      	str	r2, [sp, #4]
 80019ea:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80019ec:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80019f0:	6319      	str	r1, [r3, #48]	; 0x30
 80019f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019f4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80019f8:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80019fa:	2105      	movs	r1, #5
 80019fc:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80019fe:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a00:	f002 ffd4 	bl	80049ac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a04:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a06:	b003      	add	sp, #12
 8001a08:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a0c:	f003 b800 	b.w	8004a10 <HAL_NVIC_EnableIRQ>
}
 8001a10:	b003      	add	sp, #12
 8001a12:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a16:	bf00      	nop
 8001a18:	4002b000 	.word	0x4002b000

08001a1c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001a1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001a20:	4604      	mov	r4, r0
 8001a22:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a24:	2214      	movs	r2, #20
 8001a26:	2100      	movs	r1, #0
 8001a28:	a803      	add	r0, sp, #12
 8001a2a:	f01a f883 	bl	801bb34 <memset>
  if(hi2c->Instance==I2C3)
 8001a2e:	6822      	ldr	r2, [r4, #0]
 8001a30:	4b24      	ldr	r3, [pc, #144]	; (8001ac4 <HAL_I2C_MspInit+0xa8>)
 8001a32:	429a      	cmp	r2, r3
 8001a34:	d143      	bne.n	8001abe <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a36:	4c24      	ldr	r4, [pc, #144]	; (8001ac8 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a38:	4824      	ldr	r0, [pc, #144]	; (8001acc <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a3a:	2500      	movs	r5, #0
 8001a3c:	9500      	str	r5, [sp, #0]
 8001a3e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001a40:	f043 0304 	orr.w	r3, r3, #4
 8001a44:	6323      	str	r3, [r4, #48]	; 0x30
 8001a46:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001a48:	f003 0304 	and.w	r3, r3, #4
 8001a4c:	9300      	str	r3, [sp, #0]
 8001a4e:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a50:	9501      	str	r5, [sp, #4]
 8001a52:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001a54:	f043 0301 	orr.w	r3, r3, #1
 8001a58:	6323      	str	r3, [r4, #48]	; 0x30
 8001a5a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001a5c:	f003 0301 	and.w	r3, r3, #1
 8001a60:	9301      	str	r3, [sp, #4]
 8001a62:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a64:	f04f 0912 	mov.w	r9, #18
 8001a68:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a6c:	f04f 0801 	mov.w	r8, #1
 8001a70:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001a72:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a74:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a76:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a7a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001a7e:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a80:	f003 f8f2 	bl	8004c68 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001a84:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a88:	4811      	ldr	r0, [pc, #68]	; (8001ad0 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001a8a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a8c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a8e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a92:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a96:	f003 f8e7 	bl	8004c68 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001a9a:	9502      	str	r5, [sp, #8]
 8001a9c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001a9e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001aa2:	6423      	str	r3, [r4, #64]	; 0x40
 8001aa4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001aa6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001aaa:	9302      	str	r3, [sp, #8]
 8001aac:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001aae:	6a23      	ldr	r3, [r4, #32]
 8001ab0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001ab4:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001ab6:	6a23      	ldr	r3, [r4, #32]
 8001ab8:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001abc:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001abe:	b009      	add	sp, #36	; 0x24
 8001ac0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001ac4:	40005c00 	.word	0x40005c00
 8001ac8:	40023800 	.word	0x40023800
 8001acc:	40020800 	.word	0x40020800
 8001ad0:	40020000 	.word	0x40020000

08001ad4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001ad4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001ad6:	4604      	mov	r4, r0
 8001ad8:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ada:	2214      	movs	r2, #20
 8001adc:	2100      	movs	r1, #0
 8001ade:	a807      	add	r0, sp, #28
 8001ae0:	f01a f828 	bl	801bb34 <memset>
  if(hltdc->Instance==LTDC)
 8001ae4:	6822      	ldr	r2, [r4, #0]
 8001ae6:	4b57      	ldr	r3, [pc, #348]	; (8001c44 <HAL_LTDC_MspInit+0x170>)
 8001ae8:	429a      	cmp	r2, r3
 8001aea:	f040 80a9 	bne.w	8001c40 <HAL_LTDC_MspInit+0x16c>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001aee:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001af2:	2400      	movs	r4, #0
 8001af4:	9400      	str	r4, [sp, #0]
 8001af6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001af8:	4853      	ldr	r0, [pc, #332]	; (8001c48 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001afa:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001afe:	645a      	str	r2, [r3, #68]	; 0x44
 8001b00:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b02:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001b06:	9200      	str	r2, [sp, #0]
 8001b08:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b0a:	9401      	str	r4, [sp, #4]
 8001b0c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b0e:	f042 0220 	orr.w	r2, r2, #32
 8001b12:	631a      	str	r2, [r3, #48]	; 0x30
 8001b14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b16:	f002 0220 	and.w	r2, r2, #32
 8001b1a:	9201      	str	r2, [sp, #4]
 8001b1c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b1e:	9402      	str	r4, [sp, #8]
 8001b20:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b22:	f042 0201 	orr.w	r2, r2, #1
 8001b26:	631a      	str	r2, [r3, #48]	; 0x30
 8001b28:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b2a:	f002 0201 	and.w	r2, r2, #1
 8001b2e:	9202      	str	r2, [sp, #8]
 8001b30:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b32:	9403      	str	r4, [sp, #12]
 8001b34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b36:	f042 0202 	orr.w	r2, r2, #2
 8001b3a:	631a      	str	r2, [r3, #48]	; 0x30
 8001b3c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b3e:	f002 0202 	and.w	r2, r2, #2
 8001b42:	9203      	str	r2, [sp, #12]
 8001b44:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001b46:	9404      	str	r4, [sp, #16]
 8001b48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b4a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001b4e:	631a      	str	r2, [r3, #48]	; 0x30
 8001b50:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b52:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001b56:	9204      	str	r2, [sp, #16]
 8001b58:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b5a:	9405      	str	r4, [sp, #20]
 8001b5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b5e:	f042 0204 	orr.w	r2, r2, #4
 8001b62:	631a      	str	r2, [r3, #48]	; 0x30
 8001b64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b66:	f002 0204 	and.w	r2, r2, #4
 8001b6a:	9205      	str	r2, [sp, #20]
 8001b6c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001b6e:	9406      	str	r4, [sp, #24]
 8001b70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b72:	f042 0208 	orr.w	r2, r2, #8
 8001b76:	631a      	str	r2, [r3, #48]	; 0x30
 8001b78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b7a:	f003 0308 	and.w	r3, r3, #8
 8001b7e:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b80:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b82:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001b84:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b86:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b88:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b8c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b8e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b92:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b96:	f003 f867 	bl	8004c68 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001b9a:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b9e:	482b      	ldr	r0, [pc, #172]	; (8001c4c <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ba0:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ba2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ba4:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001ba8:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001baa:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bae:	f003 f85b 	bl	8004c68 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001bb2:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bb4:	4826      	ldr	r0, [pc, #152]	; (8001c50 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001bb6:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bb8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bba:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bbe:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bc2:	f003 f851 	bl	8004c68 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001bc6:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bca:	4821      	ldr	r0, [pc, #132]	; (8001c50 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bcc:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bce:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bd0:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bd4:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bd8:	f003 f846 	bl	8004c68 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001bdc:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001be0:	481c      	ldr	r0, [pc, #112]	; (8001c54 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001be2:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001be4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001be6:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bea:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001bee:	f003 f83b 	bl	8004c68 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001bf2:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bf4:	4818      	ldr	r0, [pc, #96]	; (8001c58 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bf6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bf8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bfa:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bfe:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c02:	f003 f831 	bl	8004c68 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001c06:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c08:	4814      	ldr	r0, [pc, #80]	; (8001c5c <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c0a:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c0c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c0e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c12:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c16:	f003 f827 	bl	8004c68 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001c1a:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c1e:	480d      	ldr	r0, [pc, #52]	; (8001c54 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c20:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c22:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c24:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c28:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c2c:	f003 f81c 	bl	8004c68 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c30:	2058      	movs	r0, #88	; 0x58
 8001c32:	4622      	mov	r2, r4
 8001c34:	2105      	movs	r1, #5
 8001c36:	f002 feb9 	bl	80049ac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c3a:	2058      	movs	r0, #88	; 0x58
 8001c3c:	f002 fee8 	bl	8004a10 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c40:	b00d      	add	sp, #52	; 0x34
 8001c42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c44:	40016800 	.word	0x40016800
 8001c48:	40021400 	.word	0x40021400
 8001c4c:	40020000 	.word	0x40020000
 8001c50:	40020400 	.word	0x40020400
 8001c54:	40021800 	.word	0x40021800
 8001c58:	40020800 	.word	0x40020800
 8001c5c:	40020c00 	.word	0x40020c00

08001c60 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001c60:	b510      	push	{r4, lr}
 8001c62:	4604      	mov	r4, r0
 8001c64:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c66:	2214      	movs	r2, #20
 8001c68:	2100      	movs	r1, #0
 8001c6a:	a803      	add	r0, sp, #12
 8001c6c:	f019 ff62 	bl	801bb34 <memset>
  if(hspi->Instance==SPI5)
 8001c70:	6822      	ldr	r2, [r4, #0]
 8001c72:	4b15      	ldr	r3, [pc, #84]	; (8001cc8 <HAL_SPI_MspInit+0x68>)
 8001c74:	429a      	cmp	r2, r3
 8001c76:	d124      	bne.n	8001cc2 <HAL_SPI_MspInit+0x62>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001c78:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001c7c:	2200      	movs	r2, #0
 8001c7e:	9201      	str	r2, [sp, #4]
 8001c80:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001c82:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8001c86:	6459      	str	r1, [r3, #68]	; 0x44
 8001c88:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001c8a:	f401 1180 	and.w	r1, r1, #1048576	; 0x100000
 8001c8e:	9101      	str	r1, [sp, #4]
 8001c90:	9901      	ldr	r1, [sp, #4]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c92:	9202      	str	r2, [sp, #8]
 8001c94:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001c96:	f041 0120 	orr.w	r1, r1, #32
 8001c9a:	6319      	str	r1, [r3, #48]	; 0x30
 8001c9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    PF8     ------> SPI5_MISO
    PF9     ------> SPI5_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c9e:	9205      	str	r2, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001ca0:	f003 0320 	and.w	r3, r3, #32
 8001ca4:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca6:	f44f 7160 	mov.w	r1, #896	; 0x380
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001caa:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cac:	2302      	movs	r3, #2
 8001cae:	e9cd 1303 	strd	r1, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001cb2:	2003      	movs	r0, #3
 8001cb4:	2305      	movs	r3, #5
 8001cb6:	e9cd 0306 	strd	r0, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cba:	a903      	add	r1, sp, #12
 8001cbc:	4803      	ldr	r0, [pc, #12]	; (8001ccc <HAL_SPI_MspInit+0x6c>)
 8001cbe:	f002 ffd3 	bl	8004c68 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001cc2:	b008      	add	sp, #32
 8001cc4:	bd10      	pop	{r4, pc}
 8001cc6:	bf00      	nop
 8001cc8:	40015000 	.word	0x40015000
 8001ccc:	40021400 	.word	0x40021400

08001cd0 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001cd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cd2:	4604      	mov	r4, r0
 8001cd4:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cd6:	2214      	movs	r2, #20
 8001cd8:	2100      	movs	r1, #0
 8001cda:	a803      	add	r0, sp, #12
 8001cdc:	f019 ff2a 	bl	801bb34 <memset>
  if(huart->Instance==USART2)
 8001ce0:	6822      	ldr	r2, [r4, #0]
 8001ce2:	4b22      	ldr	r3, [pc, #136]	; (8001d6c <HAL_UART_MspInit+0x9c>)
 8001ce4:	429a      	cmp	r2, r3
 8001ce6:	d13f      	bne.n	8001d68 <HAL_UART_MspInit+0x98>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8001ce8:	f503 33fa 	add.w	r3, r3, #128000	; 0x1f400
 8001cec:	2400      	movs	r4, #0
 8001cee:	9400      	str	r4, [sp, #0]
 8001cf0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cf2:	481f      	ldr	r0, [pc, #124]	; (8001d70 <HAL_UART_MspInit+0xa0>)
    __HAL_RCC_USART2_CLK_ENABLE();
 8001cf4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001cf8:	641a      	str	r2, [r3, #64]	; 0x40
 8001cfa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001cfc:	f402 3200 	and.w	r2, r2, #131072	; 0x20000
 8001d00:	9200      	str	r2, [sp, #0]
 8001d02:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d04:	9401      	str	r4, [sp, #4]
 8001d06:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d08:	f042 0201 	orr.w	r2, r2, #1
 8001d0c:	631a      	str	r2, [r3, #48]	; 0x30
 8001d0e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d10:	f002 0201 	and.w	r2, r2, #1
 8001d14:	9201      	str	r2, [sp, #4]
 8001d16:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001d18:	9402      	str	r4, [sp, #8]
 8001d1a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d1c:	f042 0208 	orr.w	r2, r2, #8
 8001d20:	631a      	str	r2, [r3, #48]	; 0x30
 8001d22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d24:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001d26:	f003 0308 	and.w	r3, r3, #8
 8001d2a:	9302      	str	r3, [sp, #8]
 8001d2c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d2e:	2702      	movs	r7, #2
 8001d30:	2304      	movs	r3, #4
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001d32:	2603      	movs	r6, #3
 8001d34:	2507      	movs	r5, #7
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d36:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d38:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001d3c:	e9cd 6506 	strd	r6, r5, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d40:	f002 ff92 	bl	8004c68 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001d44:	2340      	movs	r3, #64	; 0x40
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d46:	480b      	ldr	r0, [pc, #44]	; (8001d74 <HAL_UART_MspInit+0xa4>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001d48:	9507      	str	r5, [sp, #28]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d4a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d4c:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d50:	e9cd 4605 	strd	r4, r6, [sp, #20]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d54:	f002 ff88 	bl	8004c68 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 5, 0);
 8001d58:	2026      	movs	r0, #38	; 0x26
 8001d5a:	4622      	mov	r2, r4
 8001d5c:	2105      	movs	r1, #5
 8001d5e:	f002 fe25 	bl	80049ac <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8001d62:	2026      	movs	r0, #38	; 0x26
 8001d64:	f002 fe54 	bl	8004a10 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8001d68:	b009      	add	sp, #36	; 0x24
 8001d6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d6c:	40004400 	.word	0x40004400
 8001d70:	40020000 	.word	0x40020000
 8001d74:	40020c00 	.word	0x40020c00

08001d78 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (FMC_Initialized) {
 8001d7c:	4b2c      	ldr	r3, [pc, #176]	; (8001e30 <HAL_SDRAM_MspInit+0xb8>)
 8001d7e:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d80:	b086      	sub	sp, #24
  if (FMC_Initialized) {
 8001d82:	2c00      	cmp	r4, #0
 8001d84:	d150      	bne.n	8001e28 <HAL_SDRAM_MspInit+0xb0>
  FMC_Initialized = 1;
 8001d86:	f04f 0801 	mov.w	r8, #1
 8001d8a:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d8e:	4b29      	ldr	r3, [pc, #164]	; (8001e34 <HAL_SDRAM_MspInit+0xbc>)
 8001d90:	9400      	str	r4, [sp, #0]
 8001d92:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d94:	4828      	ldr	r0, [pc, #160]	; (8001e38 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d96:	ea42 0208 	orr.w	r2, r2, r8
 8001d9a:	639a      	str	r2, [r3, #56]	; 0x38
 8001d9c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d9e:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001da0:	ea03 0308 	and.w	r3, r3, r8
 8001da4:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001da6:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001da8:	2603      	movs	r6, #3
 8001daa:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dac:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dae:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001db0:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001db4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001db8:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dbc:	f002 ff54 	bl	8004c68 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dc0:	481e      	ldr	r0, [pc, #120]	; (8001e3c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dc2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dc4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dc6:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dca:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dce:	f002 ff4b 	bl	8004c68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001dd2:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001dd6:	481a      	ldr	r0, [pc, #104]	; (8001e40 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dd8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001dda:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ddc:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001de0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001de4:	f002 ff40 	bl	8004c68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001de8:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001dec:	4815      	ldr	r0, [pc, #84]	; (8001e44 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dee:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001df0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001df2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001df6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001dfa:	f002 ff35 	bl	8004c68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001dfe:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e02:	4811      	ldr	r0, [pc, #68]	; (8001e48 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e04:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e06:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e08:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e0c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e10:	f002 ff2a 	bl	8004c68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001e14:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e16:	480d      	ldr	r0, [pc, #52]	; (8001e4c <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e18:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e1a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e1c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e20:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e24:	f002 ff20 	bl	8004c68 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001e28:	b006      	add	sp, #24
 8001e2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e2e:	bf00      	nop
 8001e30:	20002674 	.word	0x20002674
 8001e34:	40023800 	.word	0x40023800
 8001e38:	40021400 	.word	0x40021400
 8001e3c:	40020800 	.word	0x40020800
 8001e40:	40021800 	.word	0x40021800
 8001e44:	40021000 	.word	0x40021000
 8001e48:	40020c00 	.word	0x40020c00
 8001e4c:	40020400 	.word	0x40020400

08001e50 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e50:	b530      	push	{r4, r5, lr}
 8001e52:	4601      	mov	r1, r0
 8001e54:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e56:	2200      	movs	r2, #0
 8001e58:	2036      	movs	r0, #54	; 0x36
 8001e5a:	f002 fda7 	bl	80049ac <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001e5e:	2036      	movs	r0, #54	; 0x36
 8001e60:	f002 fdd6 	bl	8004a10 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e64:	2500      	movs	r5, #0
 8001e66:	4b15      	ldr	r3, [pc, #84]	; (8001ebc <HAL_InitTick+0x6c>)
 8001e68:	9502      	str	r5, [sp, #8]
 8001e6a:	6c1a      	ldr	r2, [r3, #64]	; 0x40

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001e6c:	4c14      	ldr	r4, [pc, #80]	; (8001ec0 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e6e:	f042 0210 	orr.w	r2, r2, #16
 8001e72:	641a      	str	r2, [r3, #64]	; 0x40
 8001e74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e76:	f003 0310 	and.w	r3, r3, #16
 8001e7a:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e7c:	a901      	add	r1, sp, #4
 8001e7e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e80:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e82:	f004 f869 	bl	8005f58 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e86:	f004 f847 	bl	8005f18 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001e8a:	4b0e      	ldr	r3, [pc, #56]	; (8001ec4 <HAL_InitTick+0x74>)
 8001e8c:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 8001e8e:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001e92:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e94:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001e96:	4b0c      	ldr	r3, [pc, #48]	; (8001ec8 <HAL_InitTick+0x78>)
 8001e98:	fbb0 f0f3 	udiv	r0, r0, r3
 8001e9c:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001e9e:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ea0:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001ea2:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ea4:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ea6:	f004 fdfd 	bl	8006aa4 <HAL_TIM_Base_Init>
 8001eaa:	b920      	cbnz	r0, 8001eb6 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001eac:	4620      	mov	r0, r4
 8001eae:	f004 fcdd 	bl	800686c <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001eb2:	b009      	add	sp, #36	; 0x24
 8001eb4:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001eb6:	2001      	movs	r0, #1
 8001eb8:	e7fb      	b.n	8001eb2 <HAL_InitTick+0x62>
 8001eba:	bf00      	nop
 8001ebc:	40023800 	.word	0x40023800
 8001ec0:	200139bc 	.word	0x200139bc
 8001ec4:	40001000 	.word	0x40001000
 8001ec8:	000f4240 	.word	0x000f4240

08001ecc <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001ecc:	4770      	bx	lr

08001ece <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001ece:	e7fe      	b.n	8001ece <HardFault_Handler>

08001ed0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001ed0:	e7fe      	b.n	8001ed0 <MemManage_Handler>

08001ed2 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001ed2:	e7fe      	b.n	8001ed2 <BusFault_Handler>

08001ed4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001ed4:	e7fe      	b.n	8001ed4 <UsageFault_Handler>

08001ed6 <DebugMon_Handler>:
 8001ed6:	4770      	bx	lr

08001ed8 <USART2_IRQHandler>:
void USART2_IRQHandler(void)
{
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8001ed8:	4801      	ldr	r0, [pc, #4]	; (8001ee0 <USART2_IRQHandler+0x8>)
 8001eda:	f004 bf6b 	b.w	8006db4 <HAL_UART_IRQHandler>
 8001ede:	bf00      	nop
 8001ee0:	20013948 	.word	0x20013948

08001ee4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001ee4:	4801      	ldr	r0, [pc, #4]	; (8001eec <TIM6_DAC_IRQHandler+0x8>)
 8001ee6:	f004 bcd5 	b.w	8006894 <HAL_TIM_IRQHandler>
 8001eea:	bf00      	nop
 8001eec:	200139bc 	.word	0x200139bc

08001ef0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001ef0:	4801      	ldr	r0, [pc, #4]	; (8001ef8 <LTDC_IRQHandler+0x8>)
 8001ef2:	f003 bcf7 	b.w	80058e4 <HAL_LTDC_IRQHandler>
 8001ef6:	bf00      	nop
 8001ef8:	2001385c 	.word	0x2001385c

08001efc <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001efc:	4801      	ldr	r0, [pc, #4]	; (8001f04 <DMA2D_IRQHandler+0x8>)
 8001efe:	f002 bde5 	b.w	8004acc <HAL_DMA2D_IRQHandler>
 8001f02:	bf00      	nop
 8001f04:	20013908 	.word	0x20013908

08001f08 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f08:	2001      	movs	r0, #1
 8001f0a:	4770      	bx	lr

08001f0c <_kill>:

int _kill(int pid, int sig)
{
 8001f0c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f0e:	f019 fdb7 	bl	801ba80 <__errno>
 8001f12:	2316      	movs	r3, #22
 8001f14:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f16:	f04f 30ff 	mov.w	r0, #4294967295
 8001f1a:	bd08      	pop	{r3, pc}

08001f1c <_exit>:

void _exit (int status)
{
 8001f1c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f1e:	f019 fdaf 	bl	801ba80 <__errno>
 8001f22:	2316      	movs	r3, #22
 8001f24:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f26:	e7fe      	b.n	8001f26 <_exit+0xa>

08001f28 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f28:	b570      	push	{r4, r5, r6, lr}
 8001f2a:	460e      	mov	r6, r1
 8001f2c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f2e:	2500      	movs	r5, #0
 8001f30:	42a5      	cmp	r5, r4
 8001f32:	db01      	blt.n	8001f38 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f34:	4620      	mov	r0, r4
 8001f36:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f38:	f3af 8000 	nop.w
 8001f3c:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f3e:	3501      	adds	r5, #1
 8001f40:	e7f6      	b.n	8001f30 <_read+0x8>

08001f42 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f42:	b570      	push	{r4, r5, r6, lr}
 8001f44:	460e      	mov	r6, r1
 8001f46:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f48:	2500      	movs	r5, #0
 8001f4a:	42a5      	cmp	r5, r4
 8001f4c:	db01      	blt.n	8001f52 <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f4e:	4620      	mov	r0, r4
 8001f50:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f52:	5d70      	ldrb	r0, [r6, r5]
 8001f54:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f58:	3501      	adds	r5, #1
 8001f5a:	e7f6      	b.n	8001f4a <_write+0x8>

08001f5c <_close>:

int _close(int file)
{
	return -1;
}
 8001f5c:	f04f 30ff 	mov.w	r0, #4294967295
 8001f60:	4770      	bx	lr

08001f62 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001f62:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001f66:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001f68:	2000      	movs	r0, #0
 8001f6a:	4770      	bx	lr

08001f6c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001f6c:	2001      	movs	r0, #1
 8001f6e:	4770      	bx	lr

08001f70 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001f70:	2000      	movs	r0, #0
 8001f72:	4770      	bx	lr

08001f74 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001f74:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001f76:	4b0a      	ldr	r3, [pc, #40]	; (8001fa0 <_sbrk+0x2c>)
 8001f78:	6819      	ldr	r1, [r3, #0]
{
 8001f7a:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001f7c:	b909      	cbnz	r1, 8001f82 <_sbrk+0xe>
		heap_end = &end;
 8001f7e:	4909      	ldr	r1, [pc, #36]	; (8001fa4 <_sbrk+0x30>)
 8001f80:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001f82:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001f84:	4669      	mov	r1, sp
 8001f86:	4402      	add	r2, r0
 8001f88:	428a      	cmp	r2, r1
 8001f8a:	d906      	bls.n	8001f9a <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001f8c:	f019 fd78 	bl	801ba80 <__errno>
 8001f90:	230c      	movs	r3, #12
 8001f92:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001f94:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001f98:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001f9a:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8001f9c:	e7fc      	b.n	8001f98 <_sbrk+0x24>
 8001f9e:	bf00      	nop
 8001fa0:	20002678 	.word	0x20002678
 8001fa4:	20013a50 	.word	0x20013a50

08001fa8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId ANNOTATIONS = 5; // consola_14_4bpp
    static const touchgfx::FontId FLOAT = 6;       // consola_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 7;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001fa8:	4770      	bx	lr

08001faa <_ZN23ApplicationFontProviderD0Ev>:
 8001faa:	b510      	push	{r4, lr}
 8001fac:	2104      	movs	r1, #4
 8001fae:	4604      	mov	r4, r0
 8001fb0:	f019 fd05 	bl	801b9be <_ZdlPvj>
 8001fb4:	4620      	mov	r0, r4
 8001fb6:	bd10      	pop	{r4, pc}

08001fb8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8001fb8:	b508      	push	{r3, lr}
 8001fba:	2906      	cmp	r1, #6
 8001fbc:	d821      	bhi.n	8002002 <_ZN23ApplicationFontProvider7getFontEt+0x4a>
 8001fbe:	e8df f001 	tbb	[pc, r1]
 8001fc2:	0804      	.short	0x0804
 8001fc4:	1814100c 	.word	0x1814100c
 8001fc8:	1c          	.byte	0x1c
 8001fc9:	00          	.byte	0x00
    switch (typography)
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001fca:	f000 fc55 	bl	8002878 <_ZN17TypedTextDatabase8getFontsEv>
 8001fce:	6800      	ldr	r0, [r0, #0]
        // consola_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
    default:
        return 0;
    }
}
 8001fd0:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001fd2:	f000 fc51 	bl	8002878 <_ZN17TypedTextDatabase8getFontsEv>
 8001fd6:	6840      	ldr	r0, [r0, #4]
 8001fd8:	e7fa      	b.n	8001fd0 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001fda:	f000 fc4d 	bl	8002878 <_ZN17TypedTextDatabase8getFontsEv>
 8001fde:	6880      	ldr	r0, [r0, #8]
 8001fe0:	e7f6      	b.n	8001fd0 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8001fe2:	f000 fc49 	bl	8002878 <_ZN17TypedTextDatabase8getFontsEv>
 8001fe6:	68c0      	ldr	r0, [r0, #12]
 8001fe8:	e7f2      	b.n	8001fd0 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 8001fea:	f000 fc45 	bl	8002878 <_ZN17TypedTextDatabase8getFontsEv>
 8001fee:	6900      	ldr	r0, [r0, #16]
 8001ff0:	e7ee      	b.n	8001fd0 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
 8001ff2:	f000 fc41 	bl	8002878 <_ZN17TypedTextDatabase8getFontsEv>
 8001ff6:	6940      	ldr	r0, [r0, #20]
 8001ff8:	e7ea      	b.n	8001fd0 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
 8001ffa:	f000 fc3d 	bl	8002878 <_ZN17TypedTextDatabase8getFontsEv>
 8001ffe:	6980      	ldr	r0, [r0, #24]
 8002000:	e7e6      	b.n	8001fd0 <_ZN23ApplicationFontProvider7getFontEt+0x18>
{
 8002002:	2000      	movs	r0, #0
 8002004:	e7e4      	b.n	8001fd0 <_ZN23ApplicationFontProvider7getFontEt+0x18>
	...

08002008 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002008:	4800      	ldr	r0, [pc, #0]	; (800200c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800200a:	4770      	bx	lr
 800200c:	0801d554 	.word	0x0801d554

08002010 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002010:	2011      	movs	r0, #17
 8002012:	4770      	bx	lr

08002014 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002014:	b513      	push	{r0, r1, r4, lr}
 8002016:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002018:	b151      	cbz	r1, 8002030 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800201a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800201c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800201e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002022:	aa01      	add	r2, sp, #4
 8002024:	689c      	ldr	r4, [r3, #8]
 8002026:	f10d 0303 	add.w	r3, sp, #3
 800202a:	47a0      	blx	r4
        return glyph;
    }
 800202c:	b002      	add	sp, #8
 800202e:	bd10      	pop	{r4, pc}
            return 0;
 8002030:	4608      	mov	r0, r1
 8002032:	e7fb      	b.n	800202c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002034 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002034:	8940      	ldrh	r0, [r0, #10]
 8002036:	4770      	bx	lr

08002038 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002038:	8980      	ldrh	r0, [r0, #12]
 800203a:	4770      	bx	lr

0800203c <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 800203c:	8880      	ldrh	r0, [r0, #4]
 800203e:	4770      	bx	lr

08002040 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002040:	7983      	ldrb	r3, [r0, #6]
 8002042:	8880      	ldrh	r0, [r0, #4]
 8002044:	4418      	add	r0, r3
    }
 8002046:	b280      	uxth	r0, r0
 8002048:	4770      	bx	lr

0800204a <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800204a:	79c0      	ldrb	r0, [r0, #7]
    }
 800204c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002050:	4770      	bx	lr

08002052 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002052:	79c0      	ldrb	r0, [r0, #7]
    }
 8002054:	09c0      	lsrs	r0, r0, #7
 8002056:	4770      	bx	lr

08002058 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002058:	4770      	bx	lr

0800205a <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800205a:	b510      	push	{r4, lr}
    }
 800205c:	2108      	movs	r1, #8
    virtual ~TypedText()
 800205e:	4604      	mov	r4, r0
    }
 8002060:	f019 fcad 	bl	801b9be <_ZdlPvj>
 8002064:	4620      	mov	r0, r4
 8002066:	bd10      	pop	{r4, pc}

08002068 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002068:	4770      	bx	lr

0800206a <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800206a:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800206e:	6808      	ldr	r0, [r1, #0]
 8002070:	6849      	ldr	r1, [r1, #4]
 8002072:	c303      	stmia	r3!, {r0, r1}
    }
 8002074:	4770      	bx	lr

08002076 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002076:	4770      	bx	lr

08002078 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002078:	4770      	bx	lr

0800207a <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800207a:	6041      	str	r1, [r0, #4]
    }
 800207c:	4770      	bx	lr

0800207e <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800207e:	4770      	bx	lr

08002080 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002080:	2301      	movs	r3, #1
 8002082:	7203      	strb	r3, [r0, #8]
    }
 8002084:	4770      	bx	lr

08002086 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002086:	4770      	bx	lr

08002088 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002088:	4770      	bx	lr

0800208a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800208a:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 800208c:	68c2      	ldr	r2, [r0, #12]
 800208e:	6841      	ldr	r1, [r0, #4]
 8002090:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002092:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002094:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002098:	07d2      	lsls	r2, r2, #31
 800209a:	bf48      	it	mi
 800209c:	590a      	ldrmi	r2, [r1, r4]
 800209e:	689b      	ldr	r3, [r3, #8]
    }
 80020a0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 80020a4:	bf48      	it	mi
 80020a6:	58d3      	ldrmi	r3, [r2, r3]
 80020a8:	4718      	bx	r3

080020aa <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80020aa:	6843      	ldr	r3, [r0, #4]
 80020ac:	b12b      	cbz	r3, 80020ba <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80020ae:	6883      	ldr	r3, [r0, #8]
 80020b0:	b92b      	cbnz	r3, 80020be <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80020b2:	68c0      	ldr	r0, [r0, #12]
 80020b4:	f000 0001 	and.w	r0, r0, #1
 80020b8:	4770      	bx	lr
 80020ba:	4618      	mov	r0, r3
 80020bc:	4770      	bx	lr
 80020be:	2001      	movs	r0, #1
    }
 80020c0:	4770      	bx	lr

080020c2 <_ZN8touchgfx12NoTransitionD0Ev>:
 80020c2:	b510      	push	{r4, lr}
 80020c4:	210c      	movs	r1, #12
 80020c6:	4604      	mov	r4, r0
 80020c8:	f019 fc79 	bl	801b9be <_ZdlPvj>
 80020cc:	4620      	mov	r0, r4
 80020ce:	bd10      	pop	{r4, pc}

080020d0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80020d0:	b510      	push	{r4, lr}
 80020d2:	2110      	movs	r1, #16
 80020d4:	4604      	mov	r4, r0
 80020d6:	f019 fc72 	bl	801b9be <_ZdlPvj>
 80020da:	4620      	mov	r0, r4
 80020dc:	bd10      	pop	{r4, pc}

080020de <_ZN23FrontendApplicationBaseD0Ev>:
 80020de:	b510      	push	{r4, lr}
 80020e0:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80020e4:	4604      	mov	r4, r0
 80020e6:	f019 fc6a 	bl	801b9be <_ZdlPvj>
 80020ea:	4620      	mov	r0, r4
 80020ec:	bd10      	pop	{r4, pc}

080020ee <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80020ee:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 80020f0:	f00a fc54 	bl	800c99c <_ZN8touchgfx11Application11getInstanceEv>
 80020f4:	6803      	ldr	r3, [r0, #0]
    }
 80020f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 80020fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020fc:	4718      	bx	r3

080020fe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80020fe:	b510      	push	{r4, lr}
 8002100:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002102:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002106:	b158      	cbz	r0, 8002120 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002108:	6803      	ldr	r3, [r0, #0]
 800210a:	68db      	ldr	r3, [r3, #12]
 800210c:	4798      	blx	r3
 800210e:	b138      	cbz	r0, 8002120 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002110:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002114:	6803      	ldr	r3, [r0, #0]
 8002116:	689b      	ldr	r3, [r3, #8]
 8002118:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800211a:	2300      	movs	r3, #0
 800211c:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002120:	bd10      	pop	{r4, pc}
	...

08002124 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/mainscreen_screen/mainScreenView.hpp>
#include <gui/mainscreen_screen/mainScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002124:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002126:	4604      	mov	r4, r0
 8002128:	4617      	mov	r7, r2
 800212a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800212c:	f00a fc56 	bl	800c9dc <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002130:	4b10      	ldr	r3, [pc, #64]	; (8002174 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8002132:	2500      	movs	r5, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8002134:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 8002138:	4e0f      	ldr	r6, [pc, #60]	; (8002178 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 800213a:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 800213c:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002140:	4b0e      	ldr	r3, [pc, #56]	; (800217c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002142:	6830      	ldr	r0, [r6, #0]
 8002144:	6023      	str	r3, [r4, #0]
 8002146:	4b0e      	ldr	r3, [pc, #56]	; (8002180 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002148:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800214c:	6803      	ldr	r3, [r0, #0]
 800214e:	2101      	movs	r1, #1
 8002150:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002152:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8002156:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002158:	4628      	mov	r0, r5
 800215a:	f000 fb41 	bl	80027e0 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800215e:	6833      	ldr	r3, [r6, #0]
 8002160:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002164:	b10a      	cbz	r2, 800216a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8002166:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002168:	b900      	cbnz	r0, 800216c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 800216a:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800216c:	f012 faf1 	bl	8014752 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002170:	4620      	mov	r0, r4
 8002172:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002174:	20013554 	.word	0x20013554
 8002178:	20013508 	.word	0x20013508
 800217c:	0801da00 	.word	0x0801da00
 8002180:	0801d9e8 	.word	0x0801d9e8

08002184 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002184:	4b06      	ldr	r3, [pc, #24]	; (80021a0 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv+0x1c>)
 8002186:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800218a:	2300      	movs	r3, #0
 800218c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// mainScreen

void FrontendApplicationBase::gotomainScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotomainScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002190:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002194:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002198:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800219c:	4770      	bx	lr
 800219e:	bf00      	nop
 80021a0:	080022e5 	.word	0x080022e5

080021a4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80021a4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80021a8:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80021aa:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80021ac:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80021b0:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80021b2:	6803      	ldr	r3, [r0, #0]
 80021b4:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80021b6:	4688      	mov	r8, r1
 80021b8:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80021ba:	4798      	blx	r3
 80021bc:	f241 630b 	movw	r3, #5643	; 0x160b
 80021c0:	4298      	cmp	r0, r3
 80021c2:	d805      	bhi.n	80021d0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2c>
 80021c4:	4b41      	ldr	r3, [pc, #260]	; (80022cc <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 80021c6:	4a42      	ldr	r2, [pc, #264]	; (80022d0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80021c8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80021ca:	4842      	ldr	r0, [pc, #264]	; (80022d4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 80021cc:	f019 fc26 	bl	801ba1c <__assert_func>
 80021d0:	6860      	ldr	r0, [r4, #4]
 80021d2:	6803      	ldr	r3, [r0, #0]
 80021d4:	6a1b      	ldr	r3, [r3, #32]
 80021d6:	4798      	blx	r3
 80021d8:	280f      	cmp	r0, #15
 80021da:	d803      	bhi.n	80021e4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x40>
 80021dc:	4b3e      	ldr	r3, [pc, #248]	; (80022d8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 80021de:	4a3c      	ldr	r2, [pc, #240]	; (80022d0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80021e0:	21a4      	movs	r1, #164	; 0xa4
 80021e2:	e7f2      	b.n	80021ca <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80021e4:	68e0      	ldr	r0, [r4, #12]
 80021e6:	6803      	ldr	r3, [r0, #0]
 80021e8:	6a1b      	ldr	r3, [r3, #32]
 80021ea:	4798      	blx	r3
 80021ec:	280b      	cmp	r0, #11
 80021ee:	d803      	bhi.n	80021f8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
 80021f0:	4b3a      	ldr	r3, [pc, #232]	; (80022dc <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 80021f2:	4a37      	ldr	r2, [pc, #220]	; (80022d0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80021f4:	21a5      	movs	r1, #165	; 0xa5
 80021f6:	e7e8      	b.n	80021ca <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    Application::getInstance()->clearAllTimerWidgets();
 80021f8:	f00a fbd0 	bl	800c99c <_ZN8touchgfx11Application11getInstanceEv>
 80021fc:	f00a fbd4 	bl	800c9a8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002200:	f8d9 0000 	ldr.w	r0, [r9]
 8002204:	b110      	cbz	r0, 800220c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x68>
        (*currentTrans)->tearDown();
 8002206:	6803      	ldr	r3, [r0, #0]
 8002208:	68db      	ldr	r3, [r3, #12]
 800220a:	4798      	blx	r3
    if (*currentTrans)
 800220c:	f8d9 0000 	ldr.w	r0, [r9]
 8002210:	b110      	cbz	r0, 8002218 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x74>
        (*currentTrans)->~Transition();
 8002212:	6803      	ldr	r3, [r0, #0]
 8002214:	681b      	ldr	r3, [r3, #0]
 8002216:	4798      	blx	r3
    if (*currentScreen)
 8002218:	6838      	ldr	r0, [r7, #0]
 800221a:	b110      	cbz	r0, 8002222 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
        (*currentScreen)->tearDownScreen();
 800221c:	6803      	ldr	r3, [r0, #0]
 800221e:	695b      	ldr	r3, [r3, #20]
 8002220:	4798      	blx	r3
    if (*currentPresenter)
 8002222:	f8d8 0000 	ldr.w	r0, [r8]
 8002226:	b110      	cbz	r0, 800222e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8a>
        (*currentPresenter)->deactivate();
 8002228:	6803      	ldr	r3, [r0, #0]
 800222a:	685b      	ldr	r3, [r3, #4]
 800222c:	4798      	blx	r3
    if (*currentScreen)
 800222e:	6838      	ldr	r0, [r7, #0]
 8002230:	b110      	cbz	r0, 8002238 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x94>
        (*currentScreen)->~Screen();
 8002232:	6803      	ldr	r3, [r0, #0]
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	4798      	blx	r3
    if (*currentPresenter)
 8002238:	f8d8 0000 	ldr.w	r0, [r8]
 800223c:	b110      	cbz	r0, 8002244 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xa0>
        (*currentPresenter)->~Presenter();
 800223e:	6803      	ldr	r3, [r0, #0]
 8002240:	689b      	ldr	r3, [r3, #8]
 8002242:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002244:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002246:	6803      	ldr	r3, [r0, #0]
 8002248:	2100      	movs	r1, #0
 800224a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800224c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800224e:	f04f 0b00 	mov.w	fp, #0
 8002252:	4b23      	ldr	r3, [pc, #140]	; (80022e0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8002254:	6003      	str	r3, [r0, #0]
 8002256:	4605      	mov	r5, r0
 8002258:	f8c0 b004 	str.w	fp, [r0, #4]
 800225c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002260:	68a0      	ldr	r0, [r4, #8]
 8002262:	6803      	ldr	r3, [r0, #0]
 8002264:	4659      	mov	r1, fp
 8002266:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002268:	4798      	blx	r3
 800226a:	4606      	mov	r6, r0
 800226c:	f002 f80c 	bl	8004288 <_ZN14mainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002270:	6860      	ldr	r0, [r4, #4]
 8002272:	6803      	ldr	r3, [r0, #0]
 8002274:	4659      	mov	r1, fp
 8002276:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002278:	4798      	blx	r3
 800227a:	4631      	mov	r1, r6
 800227c:	4604      	mov	r4, r0
 800227e:	f001 ff7b 	bl	8004178 <_ZN19mainScreenPresenterC1ER14mainScreenView>
    *currentTrans = newTransition;
 8002282:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002286:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 800228a:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 800228c:	b1e4      	cbz	r4, 80022c8 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
 800228e:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002290:	f8ca 3004 	str.w	r3, [sl, #4]
    newScreen->setupScreen();
 8002294:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002296:	f8c4 a008 	str.w	sl, [r4, #8]
 800229a:	4630      	mov	r0, r6
 800229c:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 800229e:	63f4      	str	r4, [r6, #60]	; 0x3c
 80022a0:	4798      	blx	r3
    newPresenter->activate();
 80022a2:	6823      	ldr	r3, [r4, #0]
 80022a4:	4620      	mov	r0, r4
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80022aa:	4629      	mov	r1, r5
 80022ac:	4630      	mov	r0, r6
 80022ae:	f00b ff41 	bl	800e134 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80022b2:	682b      	ldr	r3, [r5, #0]
 80022b4:	4628      	mov	r0, r5
 80022b6:	691b      	ldr	r3, [r3, #16]
 80022b8:	4798      	blx	r3
    newTransition->invalidate();
 80022ba:	682b      	ldr	r3, [r5, #0]
 80022bc:	4628      	mov	r0, r5
 80022be:	695b      	ldr	r3, [r3, #20]
 80022c0:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 80022c2:	4620      	mov	r0, r4
 80022c4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 80022c8:	4623      	mov	r3, r4
 80022ca:	e7e1      	b.n	8002290 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xec>
 80022cc:	0801d6b8 	.word	0x0801d6b8
 80022d0:	0801d746 	.word	0x0801d746
 80022d4:	0801d850 	.word	0x0801d850
 80022d8:	0801d897 	.word	0x0801d897
 80022dc:	0801d93a 	.word	0x0801d93a
 80022e0:	0801da44 	.word	0x0801da44

080022e4 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotomainScreenScreenNoTransitionImpl()
{
 80022e4:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80022e6:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 80022ea:	9300      	str	r3, [sp, #0]
 80022ec:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80022f0:	4b04      	ldr	r3, [pc, #16]	; (8002304 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x20>)
 80022f2:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80022f6:	4804      	ldr	r0, [pc, #16]	; (8002308 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x24>)
 80022f8:	f7ff ff54 	bl	80021a4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80022fc:	b003      	add	sp, #12
 80022fe:	f85d fb04 	ldr.w	pc, [sp], #4
 8002302:	bf00      	nop
 8002304:	20013548 	.word	0x20013548
 8002308:	20013544 	.word	0x20013544

0800230c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800230c:	6a00      	ldr	r0, [r0, #32]
 800230e:	4770      	bx	lr

08002310 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002310:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002312:	4770      	bx	lr

08002314 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002314:	4770      	bx	lr

08002316 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002316:	888b      	ldrh	r3, [r1, #4]
 8002318:	6980      	ldr	r0, [r0, #24]
 800231a:	680a      	ldr	r2, [r1, #0]
 800231c:	0adb      	lsrs	r3, r3, #11
 800231e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002322:	4410      	add	r0, r2
 8002324:	4770      	bx	lr

08002326 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002326:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002328:	b1c2      	cbz	r2, 800235c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800232a:	7b13      	ldrb	r3, [r2, #12]
 800232c:	b1b3      	cbz	r3, 800235c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800232e:	7b54      	ldrb	r4, [r2, #13]
 8002330:	7ad2      	ldrb	r2, [r2, #11]
 8002332:	0224      	lsls	r4, r4, #8
 8002334:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002338:	4314      	orrs	r4, r2
 800233a:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800233c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800233e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002342:	8813      	ldrh	r3, [r2, #0]
 8002344:	428b      	cmp	r3, r1
 8002346:	d102      	bne.n	800234e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002348:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 800234c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800234e:	d805      	bhi.n	800235c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002350:	3801      	subs	r0, #1
 8002352:	b280      	uxth	r0, r0
 8002354:	3204      	adds	r2, #4
 8002356:	2800      	cmp	r0, #0
 8002358:	d1f3      	bne.n	8002342 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800235a:	e7f7      	b.n	800234c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800235c:	2000      	movs	r0, #0
 800235e:	e7f5      	b.n	800234c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002360 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002360:	b510      	push	{r4, lr}
 8002362:	2128      	movs	r1, #40	; 0x28
 8002364:	4604      	mov	r4, r0
 8002366:	f019 fb2a 	bl	801b9be <_ZdlPvj>
 800236a:	4620      	mov	r0, r4
 800236c:	bd10      	pop	{r4, pc}
	...

08002370 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002370:	b530      	push	{r4, r5, lr}
 8002372:	b089      	sub	sp, #36	; 0x24
 8002374:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002376:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800237a:	9506      	str	r5, [sp, #24]
 800237c:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002380:	9505      	str	r5, [sp, #20]
 8002382:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002386:	9504      	str	r5, [sp, #16]
 8002388:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 800238c:	9503      	str	r5, [sp, #12]
 800238e:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002392:	9502      	str	r5, [sp, #8]
 8002394:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002398:	9501      	str	r5, [sp, #4]
 800239a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 800239e:	9500      	str	r5, [sp, #0]
 80023a0:	f00b fb28 	bl	800d9f4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80023a4:	4b06      	ldr	r3, [pc, #24]	; (80023c0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 80023a6:	6023      	str	r3, [r4, #0]
 80023a8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80023aa:	61a3      	str	r3, [r4, #24]
 80023ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80023ae:	61e3      	str	r3, [r4, #28]
 80023b0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80023b2:	6223      	str	r3, [r4, #32]
 80023b4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80023b6:	6263      	str	r3, [r4, #36]	; 0x24
}
 80023b8:	4620      	mov	r0, r4
 80023ba:	b009      	add	sp, #36	; 0x24
 80023bc:	bd30      	pop	{r4, r5, pc}
 80023be:	bf00      	nop
 80023c0:	0801da68 	.word	0x0801da68

080023c4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_consola_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_consola_12_4bpp();

touchgfx::GeneratedFont& getFont_consola_12_4bpp()
{
    static touchgfx::GeneratedFont consola_12_4bpp(glyphs_consola_12_4bpp, 12, 12, 0, 4, 1, 0, 0, unicodes_consola_12_4bpp, kerning_consola_12_4bpp, 63, 0, 0, 0);
 80023c4:	4770      	bx	lr
	...

080023c8 <_Z23getFont_consola_12_4bppv>:
{
 80023c8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont consola_12_4bpp(glyphs_consola_12_4bpp, 12, 12, 0, 4, 1, 0, 0, unicodes_consola_12_4bpp, kerning_consola_12_4bpp, 63, 0, 0, 0);
 80023ca:	4d15      	ldr	r5, [pc, #84]	; (8002420 <_Z23getFont_consola_12_4bppv+0x58>)
 80023cc:	782c      	ldrb	r4, [r5, #0]
 80023ce:	f3bf 8f5b 	dmb	ish
 80023d2:	f014 0401 	ands.w	r4, r4, #1
{
 80023d6:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont consola_12_4bpp(glyphs_consola_12_4bpp, 12, 12, 0, 4, 1, 0, 0, unicodes_consola_12_4bpp, kerning_consola_12_4bpp, 63, 0, 0, 0);
 80023d8:	d11f      	bne.n	800241a <_Z23getFont_consola_12_4bppv+0x52>
 80023da:	4628      	mov	r0, r5
 80023dc:	f019 faf1 	bl	801b9c2 <__cxa_guard_acquire>
 80023e0:	b1d8      	cbz	r0, 800241a <_Z23getFont_consola_12_4bppv+0x52>
 80023e2:	233f      	movs	r3, #63	; 0x3f
 80023e4:	9307      	str	r3, [sp, #28]
 80023e6:	4b0f      	ldr	r3, [pc, #60]	; (8002424 <_Z23getFont_consola_12_4bppv+0x5c>)
 80023e8:	9306      	str	r3, [sp, #24]
 80023ea:	4b0f      	ldr	r3, [pc, #60]	; (8002428 <_Z23getFont_consola_12_4bppv+0x60>)
 80023ec:	490f      	ldr	r1, [pc, #60]	; (800242c <_Z23getFont_consola_12_4bppv+0x64>)
 80023ee:	4810      	ldr	r0, [pc, #64]	; (8002430 <_Z23getFont_consola_12_4bppv+0x68>)
 80023f0:	9408      	str	r4, [sp, #32]
 80023f2:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80023f6:	2201      	movs	r2, #1
 80023f8:	2304      	movs	r3, #4
 80023fa:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80023fe:	230c      	movs	r3, #12
 8002400:	461a      	mov	r2, r3
 8002402:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002406:	9403      	str	r4, [sp, #12]
 8002408:	9400      	str	r4, [sp, #0]
 800240a:	f7ff ffb1 	bl	8002370 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800240e:	4628      	mov	r0, r5
 8002410:	f019 fae3 	bl	801b9da <__cxa_guard_release>
 8002414:	4807      	ldr	r0, [pc, #28]	; (8002434 <_Z23getFont_consola_12_4bppv+0x6c>)
 8002416:	f019 fb1f 	bl	801ba58 <atexit>
    return consola_12_4bpp;
}
 800241a:	4805      	ldr	r0, [pc, #20]	; (8002430 <_Z23getFont_consola_12_4bppv+0x68>)
 800241c:	b00d      	add	sp, #52	; 0x34
 800241e:	bd30      	pop	{r4, r5, pc}
 8002420:	2000267c 	.word	0x2000267c
 8002424:	08022758 	.word	0x08022758
 8002428:	08022774 	.word	0x08022774
 800242c:	08022494 	.word	0x08022494
 8002430:	20002680 	.word	0x20002680
 8002434:	080023c5 	.word	0x080023c5

08002438 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_consola_14_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_consola_14_4bpp();

touchgfx::GeneratedFont& getFont_consola_14_4bpp()
{
    static touchgfx::GeneratedFont consola_14_4bpp(glyphs_consola_14_4bpp, 4, 14, 0, 4, 1, 0, 0, unicodes_consola_14_4bpp, kerning_consola_14_4bpp, 63, 0, 0, 0);
 8002438:	4770      	bx	lr
	...

0800243c <_Z23getFont_consola_14_4bppv>:
{
 800243c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont consola_14_4bpp(glyphs_consola_14_4bpp, 4, 14, 0, 4, 1, 0, 0, unicodes_consola_14_4bpp, kerning_consola_14_4bpp, 63, 0, 0, 0);
 800243e:	4d15      	ldr	r5, [pc, #84]	; (8002494 <_Z23getFont_consola_14_4bppv+0x58>)
 8002440:	782c      	ldrb	r4, [r5, #0]
 8002442:	f3bf 8f5b 	dmb	ish
 8002446:	f014 0401 	ands.w	r4, r4, #1
{
 800244a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont consola_14_4bpp(glyphs_consola_14_4bpp, 4, 14, 0, 4, 1, 0, 0, unicodes_consola_14_4bpp, kerning_consola_14_4bpp, 63, 0, 0, 0);
 800244c:	d11e      	bne.n	800248c <_Z23getFont_consola_14_4bppv+0x50>
 800244e:	4628      	mov	r0, r5
 8002450:	f019 fab7 	bl	801b9c2 <__cxa_guard_acquire>
 8002454:	b1d0      	cbz	r0, 800248c <_Z23getFont_consola_14_4bppv+0x50>
 8002456:	233f      	movs	r3, #63	; 0x3f
 8002458:	9307      	str	r3, [sp, #28]
 800245a:	4b0f      	ldr	r3, [pc, #60]	; (8002498 <_Z23getFont_consola_14_4bppv+0x5c>)
 800245c:	9306      	str	r3, [sp, #24]
 800245e:	4b0f      	ldr	r3, [pc, #60]	; (800249c <_Z23getFont_consola_14_4bppv+0x60>)
 8002460:	490f      	ldr	r1, [pc, #60]	; (80024a0 <_Z23getFont_consola_14_4bppv+0x64>)
 8002462:	4810      	ldr	r0, [pc, #64]	; (80024a4 <_Z23getFont_consola_14_4bppv+0x68>)
 8002464:	9408      	str	r4, [sp, #32]
 8002466:	2204      	movs	r2, #4
 8002468:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800246c:	2301      	movs	r3, #1
 800246e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8002472:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002476:	230e      	movs	r3, #14
 8002478:	9403      	str	r4, [sp, #12]
 800247a:	9400      	str	r4, [sp, #0]
 800247c:	f7ff ff78 	bl	8002370 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002480:	4628      	mov	r0, r5
 8002482:	f019 faaa 	bl	801b9da <__cxa_guard_release>
 8002486:	4808      	ldr	r0, [pc, #32]	; (80024a8 <_Z23getFont_consola_14_4bppv+0x6c>)
 8002488:	f019 fae6 	bl	801ba58 <atexit>
    return consola_14_4bpp;
}
 800248c:	4805      	ldr	r0, [pc, #20]	; (80024a4 <_Z23getFont_consola_14_4bppv+0x68>)
 800248e:	b00d      	add	sp, #52	; 0x34
 8002490:	bd30      	pop	{r4, r5, pc}
 8002492:	bf00      	nop
 8002494:	200026a8 	.word	0x200026a8
 8002498:	0802275c 	.word	0x0802275c
 800249c:	08022778 	.word	0x08022778
 80024a0:	0802253c 	.word	0x0802253c
 80024a4:	200026ac 	.word	0x200026ac
 80024a8:	08002439 	.word	0x08002439

080024ac <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_consola_28_8bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_consola_28_8bpp();

touchgfx::GeneratedFont& getFont_consola_28_8bpp()
{
    static touchgfx::GeneratedFont consola_28_8bpp(glyphs_consola_28_8bpp, 18, 28, 0, 8, 0, 0, 0, unicodes_consola_28_8bpp, kerning_consola_28_8bpp, 63, 0, 0, 0);
 80024ac:	4770      	bx	lr
	...

080024b0 <_Z23getFont_consola_28_8bppv>:
{
 80024b0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont consola_28_8bpp(glyphs_consola_28_8bpp, 18, 28, 0, 8, 0, 0, 0, unicodes_consola_28_8bpp, kerning_consola_28_8bpp, 63, 0, 0, 0);
 80024b2:	4d15      	ldr	r5, [pc, #84]	; (8002508 <_Z23getFont_consola_28_8bppv+0x58>)
 80024b4:	782c      	ldrb	r4, [r5, #0]
 80024b6:	f3bf 8f5b 	dmb	ish
 80024ba:	f014 0401 	ands.w	r4, r4, #1
{
 80024be:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont consola_28_8bpp(glyphs_consola_28_8bpp, 18, 28, 0, 8, 0, 0, 0, unicodes_consola_28_8bpp, kerning_consola_28_8bpp, 63, 0, 0, 0);
 80024c0:	d11e      	bne.n	8002500 <_Z23getFont_consola_28_8bppv+0x50>
 80024c2:	4628      	mov	r0, r5
 80024c4:	f019 fa7d 	bl	801b9c2 <__cxa_guard_acquire>
 80024c8:	b1d0      	cbz	r0, 8002500 <_Z23getFont_consola_28_8bppv+0x50>
 80024ca:	233f      	movs	r3, #63	; 0x3f
 80024cc:	9307      	str	r3, [sp, #28]
 80024ce:	4b0f      	ldr	r3, [pc, #60]	; (800250c <_Z23getFont_consola_28_8bppv+0x5c>)
 80024d0:	9306      	str	r3, [sp, #24]
 80024d2:	4b0f      	ldr	r3, [pc, #60]	; (8002510 <_Z23getFont_consola_28_8bppv+0x60>)
 80024d4:	490f      	ldr	r1, [pc, #60]	; (8002514 <_Z23getFont_consola_28_8bppv+0x64>)
 80024d6:	4810      	ldr	r0, [pc, #64]	; (8002518 <_Z23getFont_consola_28_8bppv+0x68>)
 80024d8:	9408      	str	r4, [sp, #32]
 80024da:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80024de:	2308      	movs	r3, #8
 80024e0:	e9cd 4300 	strd	r4, r3, [sp]
 80024e4:	2212      	movs	r2, #18
 80024e6:	231c      	movs	r3, #28
 80024e8:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80024ec:	e9cd 4402 	strd	r4, r4, [sp, #8]
 80024f0:	f7ff ff3e 	bl	8002370 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80024f4:	4628      	mov	r0, r5
 80024f6:	f019 fa70 	bl	801b9da <__cxa_guard_release>
 80024fa:	4808      	ldr	r0, [pc, #32]	; (800251c <_Z23getFont_consola_28_8bppv+0x6c>)
 80024fc:	f019 faac 	bl	801ba58 <atexit>
    return consola_28_8bpp;
}
 8002500:	4805      	ldr	r0, [pc, #20]	; (8002518 <_Z23getFont_consola_28_8bppv+0x68>)
 8002502:	b00d      	add	sp, #52	; 0x34
 8002504:	bd30      	pop	{r4, r5, pc}
 8002506:	bf00      	nop
 8002508:	200026d4 	.word	0x200026d4
 800250c:	08022760 	.word	0x08022760
 8002510:	0802277c 	.word	0x0802277c
 8002514:	08022574 	.word	0x08022574
 8002518:	200026d8 	.word	0x200026d8
 800251c:	080024ad 	.word	0x080024ad

08002520 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_consolab_24_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_consolab_24_4bpp();

touchgfx::GeneratedFont& getFont_consolab_24_4bpp()
{
    static touchgfx::GeneratedFont consolab_24_4bpp(glyphs_consolab_24_4bpp, 13, 24, 5, 4, 1, 0, 0, unicodes_consolab_24_4bpp, kerning_consolab_24_4bpp, 63, 0, 0, 0);
 8002520:	4770      	bx	lr
	...

08002524 <_Z24getFont_consolab_24_4bppv>:
{
 8002524:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont consolab_24_4bpp(glyphs_consolab_24_4bpp, 13, 24, 5, 4, 1, 0, 0, unicodes_consolab_24_4bpp, kerning_consolab_24_4bpp, 63, 0, 0, 0);
 8002526:	4d16      	ldr	r5, [pc, #88]	; (8002580 <_Z24getFont_consolab_24_4bppv+0x5c>)
 8002528:	782c      	ldrb	r4, [r5, #0]
 800252a:	f3bf 8f5b 	dmb	ish
 800252e:	f014 0401 	ands.w	r4, r4, #1
{
 8002532:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont consolab_24_4bpp(glyphs_consolab_24_4bpp, 13, 24, 5, 4, 1, 0, 0, unicodes_consolab_24_4bpp, kerning_consolab_24_4bpp, 63, 0, 0, 0);
 8002534:	d120      	bne.n	8002578 <_Z24getFont_consolab_24_4bppv+0x54>
 8002536:	4628      	mov	r0, r5
 8002538:	f019 fa43 	bl	801b9c2 <__cxa_guard_acquire>
 800253c:	b1e0      	cbz	r0, 8002578 <_Z24getFont_consolab_24_4bppv+0x54>
 800253e:	233f      	movs	r3, #63	; 0x3f
 8002540:	9307      	str	r3, [sp, #28]
 8002542:	4b10      	ldr	r3, [pc, #64]	; (8002584 <_Z24getFont_consolab_24_4bppv+0x60>)
 8002544:	9306      	str	r3, [sp, #24]
 8002546:	4b10      	ldr	r3, [pc, #64]	; (8002588 <_Z24getFont_consolab_24_4bppv+0x64>)
 8002548:	4910      	ldr	r1, [pc, #64]	; (800258c <_Z24getFont_consolab_24_4bppv+0x68>)
 800254a:	4811      	ldr	r0, [pc, #68]	; (8002590 <_Z24getFont_consolab_24_4bppv+0x6c>)
 800254c:	9408      	str	r4, [sp, #32]
 800254e:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002552:	2201      	movs	r2, #1
 8002554:	2304      	movs	r3, #4
 8002556:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800255a:	2305      	movs	r3, #5
 800255c:	9300      	str	r3, [sp, #0]
 800255e:	220d      	movs	r2, #13
 8002560:	2318      	movs	r3, #24
 8002562:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002566:	9403      	str	r4, [sp, #12]
 8002568:	f7ff ff02 	bl	8002370 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800256c:	4628      	mov	r0, r5
 800256e:	f019 fa34 	bl	801b9da <__cxa_guard_release>
 8002572:	4808      	ldr	r0, [pc, #32]	; (8002594 <_Z24getFont_consolab_24_4bppv+0x70>)
 8002574:	f019 fa70 	bl	801ba58 <atexit>
    return consolab_24_4bpp;
}
 8002578:	4805      	ldr	r0, [pc, #20]	; (8002590 <_Z24getFont_consolab_24_4bppv+0x6c>)
 800257a:	b00d      	add	sp, #52	; 0x34
 800257c:	bd30      	pop	{r4, r5, pc}
 800257e:	bf00      	nop
 8002580:	20002700 	.word	0x20002700
 8002584:	08022764 	.word	0x08022764
 8002588:	08022780 	.word	0x08022780
 800258c:	08022670 	.word	0x08022670
 8002590:	20002704 	.word	0x20002704
 8002594:	08002521 	.word	0x08002521

08002598 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002598:	4770      	bx	lr
	...

0800259c <_Z23getFont_verdana_10_4bppv>:
{
 800259c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800259e:	4d15      	ldr	r5, [pc, #84]	; (80025f4 <_Z23getFont_verdana_10_4bppv+0x58>)
 80025a0:	782c      	ldrb	r4, [r5, #0]
 80025a2:	f3bf 8f5b 	dmb	ish
 80025a6:	f014 0401 	ands.w	r4, r4, #1
{
 80025aa:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80025ac:	d11e      	bne.n	80025ec <_Z23getFont_verdana_10_4bppv+0x50>
 80025ae:	4628      	mov	r0, r5
 80025b0:	f019 fa07 	bl	801b9c2 <__cxa_guard_acquire>
 80025b4:	b1d0      	cbz	r0, 80025ec <_Z23getFont_verdana_10_4bppv+0x50>
 80025b6:	233f      	movs	r3, #63	; 0x3f
 80025b8:	9307      	str	r3, [sp, #28]
 80025ba:	4b0f      	ldr	r3, [pc, #60]	; (80025f8 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80025bc:	9306      	str	r3, [sp, #24]
 80025be:	4b0f      	ldr	r3, [pc, #60]	; (80025fc <_Z23getFont_verdana_10_4bppv+0x60>)
 80025c0:	490f      	ldr	r1, [pc, #60]	; (8002600 <_Z23getFont_verdana_10_4bppv+0x64>)
 80025c2:	4810      	ldr	r0, [pc, #64]	; (8002604 <_Z23getFont_verdana_10_4bppv+0x68>)
 80025c4:	9408      	str	r4, [sp, #32]
 80025c6:	2201      	movs	r2, #1
 80025c8:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80025cc:	2304      	movs	r3, #4
 80025ce:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80025d2:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80025d6:	230a      	movs	r3, #10
 80025d8:	9403      	str	r4, [sp, #12]
 80025da:	9400      	str	r4, [sp, #0]
 80025dc:	f7ff fec8 	bl	8002370 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80025e0:	4628      	mov	r0, r5
 80025e2:	f019 f9fa 	bl	801b9da <__cxa_guard_release>
 80025e6:	4808      	ldr	r0, [pc, #32]	; (8002608 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80025e8:	f019 fa36 	bl	801ba58 <atexit>
    return verdana_10_4bpp;
}
 80025ec:	4805      	ldr	r0, [pc, #20]	; (8002604 <_Z23getFont_verdana_10_4bppv+0x68>)
 80025ee:	b00d      	add	sp, #52	; 0x34
 80025f0:	bd30      	pop	{r4, r5, pc}
 80025f2:	bf00      	nop
 80025f4:	2000272c 	.word	0x2000272c
 80025f8:	08022768 	.word	0x08022768
 80025fc:	08022784 	.word	0x08022784
 8002600:	08022728 	.word	0x08022728
 8002604:	20002730 	.word	0x20002730
 8002608:	08002599 	.word	0x08002599

0800260c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800260c:	4770      	bx	lr
	...

08002610 <_Z23getFont_verdana_20_4bppv>:
{
 8002610:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002612:	4d15      	ldr	r5, [pc, #84]	; (8002668 <_Z23getFont_verdana_20_4bppv+0x58>)
 8002614:	782c      	ldrb	r4, [r5, #0]
 8002616:	f3bf 8f5b 	dmb	ish
 800261a:	f014 0401 	ands.w	r4, r4, #1
{
 800261e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002620:	d11e      	bne.n	8002660 <_Z23getFont_verdana_20_4bppv+0x50>
 8002622:	4628      	mov	r0, r5
 8002624:	f019 f9cd 	bl	801b9c2 <__cxa_guard_acquire>
 8002628:	b1d0      	cbz	r0, 8002660 <_Z23getFont_verdana_20_4bppv+0x50>
 800262a:	233f      	movs	r3, #63	; 0x3f
 800262c:	9307      	str	r3, [sp, #28]
 800262e:	4b0f      	ldr	r3, [pc, #60]	; (800266c <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002630:	9306      	str	r3, [sp, #24]
 8002632:	4b0f      	ldr	r3, [pc, #60]	; (8002670 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002634:	490f      	ldr	r1, [pc, #60]	; (8002674 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002636:	4810      	ldr	r0, [pc, #64]	; (8002678 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002638:	9408      	str	r4, [sp, #32]
 800263a:	2201      	movs	r2, #1
 800263c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002640:	2304      	movs	r3, #4
 8002642:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002646:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800264a:	2314      	movs	r3, #20
 800264c:	9403      	str	r4, [sp, #12]
 800264e:	9400      	str	r4, [sp, #0]
 8002650:	f7ff fe8e 	bl	8002370 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002654:	4628      	mov	r0, r5
 8002656:	f019 f9c0 	bl	801b9da <__cxa_guard_release>
 800265a:	4808      	ldr	r0, [pc, #32]	; (800267c <_Z23getFont_verdana_20_4bppv+0x6c>)
 800265c:	f019 f9fc 	bl	801ba58 <atexit>
    return verdana_20_4bpp;
}
 8002660:	4805      	ldr	r0, [pc, #20]	; (8002678 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002662:	b00d      	add	sp, #52	; 0x34
 8002664:	bd30      	pop	{r4, r5, pc}
 8002666:	bf00      	nop
 8002668:	20002758 	.word	0x20002758
 800266c:	0802276c 	.word	0x0802276c
 8002670:	08022788 	.word	0x08022788
 8002674:	08022738 	.word	0x08022738
 8002678:	2000275c 	.word	0x2000275c
 800267c:	0800260d 	.word	0x0800260d

08002680 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002680:	4770      	bx	lr
	...

08002684 <_Z23getFont_verdana_40_4bppv>:
{
 8002684:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002686:	4d15      	ldr	r5, [pc, #84]	; (80026dc <_Z23getFont_verdana_40_4bppv+0x58>)
 8002688:	782c      	ldrb	r4, [r5, #0]
 800268a:	f3bf 8f5b 	dmb	ish
 800268e:	f014 0401 	ands.w	r4, r4, #1
{
 8002692:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002694:	d11e      	bne.n	80026d4 <_Z23getFont_verdana_40_4bppv+0x50>
 8002696:	4628      	mov	r0, r5
 8002698:	f019 f993 	bl	801b9c2 <__cxa_guard_acquire>
 800269c:	b1d0      	cbz	r0, 80026d4 <_Z23getFont_verdana_40_4bppv+0x50>
 800269e:	233f      	movs	r3, #63	; 0x3f
 80026a0:	9307      	str	r3, [sp, #28]
 80026a2:	4b0f      	ldr	r3, [pc, #60]	; (80026e0 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80026a4:	9306      	str	r3, [sp, #24]
 80026a6:	4b0f      	ldr	r3, [pc, #60]	; (80026e4 <_Z23getFont_verdana_40_4bppv+0x60>)
 80026a8:	490f      	ldr	r1, [pc, #60]	; (80026e8 <_Z23getFont_verdana_40_4bppv+0x64>)
 80026aa:	4810      	ldr	r0, [pc, #64]	; (80026ec <_Z23getFont_verdana_40_4bppv+0x68>)
 80026ac:	9408      	str	r4, [sp, #32]
 80026ae:	2201      	movs	r2, #1
 80026b0:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80026b4:	2304      	movs	r3, #4
 80026b6:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80026ba:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80026be:	2328      	movs	r3, #40	; 0x28
 80026c0:	9403      	str	r4, [sp, #12]
 80026c2:	9400      	str	r4, [sp, #0]
 80026c4:	f7ff fe54 	bl	8002370 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80026c8:	4628      	mov	r0, r5
 80026ca:	f019 f986 	bl	801b9da <__cxa_guard_release>
 80026ce:	4808      	ldr	r0, [pc, #32]	; (80026f0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80026d0:	f019 f9c2 	bl	801ba58 <atexit>
    return verdana_40_4bpp;
}
 80026d4:	4805      	ldr	r0, [pc, #20]	; (80026ec <_Z23getFont_verdana_40_4bppv+0x68>)
 80026d6:	b00d      	add	sp, #52	; 0x34
 80026d8:	bd30      	pop	{r4, r5, pc}
 80026da:	bf00      	nop
 80026dc:	20002784 	.word	0x20002784
 80026e0:	08022770 	.word	0x08022770
 80026e4:	0802278c 	.word	0x0802278c
 80026e8:	08022748 	.word	0x08022748
 80026ec:	20002788 	.word	0x20002788
 80026f0:	08002681 	.word	0x08002681

080026f4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80026f4:	2000      	movs	r0, #0
 80026f6:	4770      	bx	lr

080026f8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80026f8:	2000      	movs	r0, #0
 80026fa:	4770      	bx	lr

080026fc <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80026fc:	b40e      	push	{r1, r2, r3}
 80026fe:	b503      	push	{r0, r1, lr}
 8002700:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002702:	2100      	movs	r1, #0
{
 8002704:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002708:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800270a:	f00a ffa9 	bl	800d660 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800270e:	b002      	add	sp, #8
 8002710:	f85d eb04 	ldr.w	lr, [sp], #4
 8002714:	b003      	add	sp, #12
 8002716:	4770      	bx	lr

08002718 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002718:	b40c      	push	{r2, r3}
 800271a:	b507      	push	{r0, r1, r2, lr}
 800271c:	ab04      	add	r3, sp, #16
 800271e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002722:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002724:	f00a ff9c 	bl	800d660 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002728:	b003      	add	sp, #12
 800272a:	f85d eb04 	ldr.w	lr, [sp], #4
 800272e:	b002      	add	sp, #8
 8002730:	4770      	bx	lr
	...

08002734 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002734:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8002736:	b510      	push	{r4, lr}
 8002738:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800273a:	b373      	cbz	r3, 800279a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800273c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800273e:	b92b      	cbnz	r3, 800274c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002740:	4b18      	ldr	r3, [pc, #96]	; (80027a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002742:	4a19      	ldr	r2, [pc, #100]	; (80027a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002744:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002746:	4819      	ldr	r0, [pc, #100]	; (80027ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002748:	f019 f968 	bl	801ba1c <__assert_func>
            return buffer[pos];
 800274c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800274e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002752:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8002754:	b30b      	cbz	r3, 800279a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002756:	f00c fa5b 	bl	800ec10 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800275a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800275c:	2b01      	cmp	r3, #1
 800275e:	d803      	bhi.n	8002768 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002760:	4b13      	ldr	r3, [pc, #76]	; (80027b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002762:	4a14      	ldr	r2, [pc, #80]	; (80027b4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002764:	21c5      	movs	r1, #197	; 0xc5
 8002766:	e7ee      	b.n	8002746 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002768:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800276a:	1c53      	adds	r3, r2, #1
 800276c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800276e:	2b09      	cmp	r3, #9
 8002770:	4619      	mov	r1, r3
 8002772:	bf88      	it	hi
 8002774:	f1a3 010a 	subhi.w	r1, r3, #10
 8002778:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800277c:	f640 103f 	movw	r0, #2367	; 0x93f
 8002780:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8002782:	4281      	cmp	r1, r0
 8002784:	d109      	bne.n	800279a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8002786:	2b0a      	cmp	r3, #10
 8002788:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800278c:	bf28      	it	cs
 800278e:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002790:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002794:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8002796:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8002798:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800279a:	4620      	mov	r0, r4
}
 800279c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80027a0:	f00c b91a 	b.w	800e9d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80027a4:	0801dab8 	.word	0x0801dab8
 80027a8:	0801dac1 	.word	0x0801dac1
 80027ac:	0801db6c 	.word	0x0801db6c
 80027b0:	0801dbb6 	.word	0x0801dbb6
 80027b4:	0801dbc4 	.word	0x0801dbc4

080027b8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80027b8:	f00c b8c6 	b.w	800e948 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080027bc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80027bc:	b510      	push	{r4, lr}
 80027be:	b086      	sub	sp, #24
 80027c0:	ac02      	add	r4, sp, #8
 80027c2:	e884 0006 	stmia.w	r4, {r1, r2}
 80027c6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80027c8:	ab0a      	add	r3, sp, #40	; 0x28
 80027ca:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80027cc:	9301      	str	r3, [sp, #4]
 80027ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80027d0:	9300      	str	r3, [sp, #0]
 80027d2:	4621      	mov	r1, r4
 80027d4:	9b08      	ldr	r3, [sp, #32]
 80027d6:	f009 fc58 	bl	800c08a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80027da:	b006      	add	sp, #24
 80027dc:	bd10      	pop	{r4, pc}
	...

080027e0 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80027e0:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80027e2:	bb18      	cbnz	r0, 800282c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80027e4:	4b12      	ldr	r3, [pc, #72]	; (8002830 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80027e6:	4813      	ldr	r0, [pc, #76]	; (8002834 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80027e8:	681b      	ldr	r3, [r3, #0]
 80027ea:	4913      	ldr	r1, [pc, #76]	; (8002838 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80027ec:	b1b3      	cbz	r3, 800281c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80027ee:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80027f0:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80027f2:	441a      	add	r2, r3
 80027f4:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80027f6:	685a      	ldr	r2, [r3, #4]
 80027f8:	441a      	add	r2, r3
 80027fa:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80027fc:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80027fe:	4b0f      	ldr	r3, [pc, #60]	; (800283c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002800:	2200      	movs	r2, #0
 8002802:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002804:	f000 f838 	bl	8002878 <_ZN17TypedTextDatabase8getFontsEv>
 8002808:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800280a:	f000 f833 	bl	8002874 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800280e:	4b0c      	ldr	r3, [pc, #48]	; (8002840 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002810:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002812:	4b0c      	ldr	r3, [pc, #48]	; (8002844 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002814:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002816:	4b0c      	ldr	r3, [pc, #48]	; (8002848 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002818:	8018      	strh	r0, [r3, #0]
    }
}
 800281a:	e007      	b.n	800282c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800281c:	4b0b      	ldr	r3, [pc, #44]	; (800284c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800281e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002820:	4b0b      	ldr	r3, [pc, #44]	; (8002850 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002822:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002824:	4b0b      	ldr	r3, [pc, #44]	; (8002854 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002826:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002828:	2c00      	cmp	r4, #0
 800282a:	d1e8      	bne.n	80027fe <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800282c:	bd38      	pop	{r3, r4, r5, pc}
 800282e:	bf00      	nop
 8002830:	200027b0 	.word	0x200027b0
 8002834:	200027b4 	.word	0x200027b4
 8002838:	200027b8 	.word	0x200027b8
 800283c:	200027bc 	.word	0x200027bc
 8002840:	20013558 	.word	0x20013558
 8002844:	20013560 	.word	0x20013560
 8002848:	2001355c 	.word	0x2001355c
 800284c:	08022824 	.word	0x08022824
 8002850:	08022790 	.word	0x08022790
 8002854:	080228c8 	.word	0x080228c8

08002858 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002858:	4b04      	ldr	r3, [pc, #16]	; (800286c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800285a:	681b      	ldr	r3, [r3, #0]
 800285c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002860:	4b03      	ldr	r3, [pc, #12]	; (8002870 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002862:	681b      	ldr	r3, [r3, #0]
}
 8002864:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002868:	4770      	bx	lr
 800286a:	bf00      	nop
 800286c:	200027b8 	.word	0x200027b8
 8002870:	200027b4 	.word	0x200027b4

08002874 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8002874:	2025      	movs	r0, #37	; 0x25
 8002876:	4770      	bx	lr

08002878 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002878:	4800      	ldr	r0, [pc, #0]	; (800287c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800287a:	4770      	bx	lr
 800287c:	200027c0 	.word	0x200027c0

08002880 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 6:
        touchgfx_fonts[6] = &(getFont_consola_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8002880:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8002882:	f7ff fec5 	bl	8002610 <_Z23getFont_verdana_20_4bppv>
};
 8002886:	4c0a      	ldr	r4, [pc, #40]	; (80028b0 <_GLOBAL__sub_I_touchgfx_fonts+0x30>)
 8002888:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800288a:	f7ff fefb 	bl	8002684 <_Z23getFont_verdana_40_4bppv>
};
 800288e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8002890:	f7ff fe84 	bl	800259c <_Z23getFont_verdana_10_4bppv>
};
 8002894:	60a0      	str	r0, [r4, #8]
    &(getFont_consola_28_8bpp()),
 8002896:	f7ff fe0b 	bl	80024b0 <_Z23getFont_consola_28_8bppv>
};
 800289a:	60e0      	str	r0, [r4, #12]
    &(getFont_consolab_24_4bpp()),
 800289c:	f7ff fe42 	bl	8002524 <_Z24getFont_consolab_24_4bppv>
};
 80028a0:	6120      	str	r0, [r4, #16]
    &(getFont_consola_14_4bpp()),
 80028a2:	f7ff fdcb 	bl	800243c <_Z23getFont_consola_14_4bppv>
};
 80028a6:	6160      	str	r0, [r4, #20]
    &(getFont_consola_12_4bpp())
 80028a8:	f7ff fd8e 	bl	80023c8 <_Z23getFont_consola_12_4bppv>
};
 80028ac:	61a0      	str	r0, [r4, #24]
} // namespace TypedTextDatabase
 80028ae:	bd10      	pop	{r4, pc}
 80028b0:	200027c0 	.word	0x200027c0

080028b4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80028b4:	2000      	movs	r0, #0
 80028b6:	4770      	bx	lr

080028b8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80028b8:	8081      	strh	r1, [r0, #4]
    }
 80028ba:	4770      	bx	lr

080028bc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80028bc:	80c1      	strh	r1, [r0, #6]
    }
 80028be:	4770      	bx	lr

080028c0 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80028c0:	8101      	strh	r1, [r0, #8]
    }
 80028c2:	4770      	bx	lr

080028c4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80028c4:	8141      	strh	r1, [r0, #10]
    }
 80028c6:	4770      	bx	lr

080028c8 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80028c8:	4770      	bx	lr

080028ca <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 80028ca:	4770      	bx	lr

080028cc <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 80028cc:	4770      	bx	lr

080028ce <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 80028ce:	4770      	bx	lr

080028d0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80028d0:	4770      	bx	lr

080028d2 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80028d2:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80028d4:	88c4      	ldrh	r4, [r0, #6]
 80028d6:	6803      	ldr	r3, [r0, #0]
 80028d8:	1b12      	subs	r2, r2, r4
 80028da:	8884      	ldrh	r4, [r0, #4]
 80028dc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80028de:	1b09      	subs	r1, r1, r4
 80028e0:	b212      	sxth	r2, r2
    }
 80028e2:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80028e6:	b209      	sxth	r1, r1
 80028e8:	4718      	bx	r3

080028ea <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80028ea:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80028ee:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80028f0:	f04f 33ff 	mov.w	r3, #4294967295
 80028f4:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80028f6:	6813      	ldr	r3, [r2, #0]
 80028f8:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80028fa:	6010      	str	r0, [r2, #0]
    }
 80028fc:	4770      	bx	lr

080028fe <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80028fe:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002900:	4770      	bx	lr

08002902 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 8002902:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002906:	b11a      	cbz	r2, 8002910 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002908:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 800290c:	b102      	cbz	r2, 8002910 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800290e:	6018      	str	r0, [r3, #0]
        }
    }
 8002910:	4770      	bx	lr

08002912 <_ZN10digitsBaseD1Ev>:

class digitsBase : public touchgfx::Container
{
public:
    digitsBase();
    virtual ~digitsBase() {}
 8002912:	4770      	bx	lr

08002914 <_ZN10digitsBase10initializeEv>:
}

void digitsBase::initialize()
{

}
 8002914:	4770      	bx	lr

08002916 <_ZN10digitsBaseD0Ev>:
 8002916:	b510      	push	{r4, lr}
 8002918:	f44f 711a 	mov.w	r1, #616	; 0x268
 800291c:	4604      	mov	r4, r0
 800291e:	f019 f84e 	bl	801b9be <_ZdlPvj>
 8002922:	4620      	mov	r0, r4
 8002924:	bd10      	pop	{r4, pc}
	...

08002928 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8002928:	4a07      	ldr	r2, [pc, #28]	; (8002948 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 800292a:	6002      	str	r2, [r0, #0]
 800292c:	2200      	movs	r2, #0
 800292e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002932:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8002936:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800293a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800293e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002942:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 8002944:	4770      	bx	lr
 8002946:	bf00      	nop
 8002948:	0801f8d4 	.word	0x0801f8d4

0800294c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800294c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800294e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002950:	4604      	mov	r4, r0
        setX(x);
 8002952:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 8002954:	4615      	mov	r5, r2
        setX(x);
 8002956:	4798      	blx	r3
        setY(y);
 8002958:	6823      	ldr	r3, [r4, #0]
 800295a:	4629      	mov	r1, r5
 800295c:	4620      	mov	r0, r4
 800295e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 8002960:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002964:	4718      	bx	r3
	...

08002968 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param  bitmap (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bitmap = Bitmap())
 8002968:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bitmap), alpha(255)
 800296a:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bitmap = Bitmap())
 800296c:	4604      	mov	r4, r0
 800296e:	460d      	mov	r5, r1
        : Widget(), bitmap(bitmap), alpha(255)
 8002970:	2100      	movs	r1, #0
 8002972:	f019 f8df 	bl	801bb34 <memset>
class Widget : public Drawable
 8002976:	4620      	mov	r0, r4
 8002978:	f7ff ffd6 	bl	8002928 <_ZN8touchgfx8DrawableC1Ev>
 800297c:	4b06      	ldr	r3, [pc, #24]	; (8002998 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 800297e:	6023      	str	r3, [r4, #0]
 8002980:	882b      	ldrh	r3, [r5, #0]
 8002982:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002984:	23ff      	movs	r3, #255	; 0xff
    {
        Image::setBitmap(bitmap);
 8002986:	4620      	mov	r0, r4
        : Widget(), bitmap(bitmap), alpha(255)
 8002988:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bitmap);
 800298c:	4629      	mov	r1, r5
 800298e:	f008 fae8 	bl	800af62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002992:	4620      	mov	r0, r4
 8002994:	bd38      	pop	{r3, r4, r5, pc}
 8002996:	bf00      	nop
 8002998:	0801f610 	.word	0x0801f610

0800299c <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800299c:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800299e:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80029a0:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80029a2:	2100      	movs	r1, #0
 80029a4:	f019 f8c6 	bl	801bb34 <memset>
 80029a8:	4620      	mov	r0, r4
 80029aa:	f7ff ffbd 	bl	8002928 <_ZN8touchgfx8DrawableC1Ev>
 80029ae:	4b07      	ldr	r3, [pc, #28]	; (80029cc <_ZN8touchgfx8TextAreaC1Ev+0x30>)
 80029b0:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80029b2:	4b07      	ldr	r3, [pc, #28]	; (80029d0 <_ZN8touchgfx8TextAreaC1Ev+0x34>)
 80029b4:	62a3      	str	r3, [r4, #40]	; 0x28
 80029b6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80029ba:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80029bc:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80029c0:	2300      	movs	r3, #0
 80029c2:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 80029c6:	8723      	strh	r3, [r4, #56]	; 0x38
    {
    }
 80029c8:	4620      	mov	r0, r4
 80029ca:	bd10      	pop	{r4, pc}
 80029cc:	0801f45c 	.word	0x0801f45c
 80029d0:	0801d6b0 	.word	0x0801d6b0

080029d4 <_ZN10digitsBaseC1Ev>:
digitsBase::digitsBase()
 80029d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80029d8:	ed2d 8b04 	vpush	{d8-d9}
 80029dc:	4604      	mov	r4, r0
 80029de:	b083      	sub	sp, #12
 80029e0:	4626      	mov	r6, r4
          firstChild(0)
 80029e2:	2500      	movs	r5, #0
 80029e4:	f7ff ffa0 	bl	8002928 <_ZN8touchgfx8DrawableC1Ev>
 80029e8:	4bce      	ldr	r3, [pc, #824]	; (8002d24 <_ZN10digitsBaseC1Ev+0x350>)
 80029ea:	62a5      	str	r5, [r4, #40]	; 0x28
 80029ec:	f846 3b2c 	str.w	r3, [r6], #44
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80029f0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80029f4:	4669      	mov	r1, sp
 80029f6:	4630      	mov	r0, r6
 80029f8:	f8ad 7000 	strh.w	r7, [sp]
 80029fc:	f7ff ffb4 	bl	8002968 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a00:	f104 0358 	add.w	r3, r4, #88	; 0x58
 8002a04:	4669      	mov	r1, sp
 8002a06:	4618      	mov	r0, r3
 8002a08:	ee08 3a10 	vmov	s16, r3
 8002a0c:	f8ad 7000 	strh.w	r7, [sp]
 8002a10:	f7ff ffaa 	bl	8002968 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a14:	f104 0384 	add.w	r3, r4, #132	; 0x84
 8002a18:	4669      	mov	r1, sp
 8002a1a:	4618      	mov	r0, r3
 8002a1c:	ee08 3a90 	vmov	s17, r3
 8002a20:	f8ad 7000 	strh.w	r7, [sp]
 8002a24:	f7ff ffa0 	bl	8002968 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a28:	f104 03b0 	add.w	r3, r4, #176	; 0xb0
 8002a2c:	4669      	mov	r1, sp
 8002a2e:	4618      	mov	r0, r3
 8002a30:	f104 0adc 	add.w	sl, r4, #220	; 0xdc
 8002a34:	ee09 3a10 	vmov	s18, r3
 8002a38:	f8ad 7000 	strh.w	r7, [sp]
 8002a3c:	f7ff ff94 	bl	8002968 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
        : TextArea(), wildcard(0)
 8002a40:	4650      	mov	r0, sl
 8002a42:	f7ff ffab 	bl	800299c <_ZN8touchgfx8TextAreaC1Ev>
 8002a46:	f8df b308 	ldr.w	fp, [pc, #776]	; 8002d50 <_ZN10digitsBaseC1Ev+0x37c>
 8002a4a:	f8c4 b0dc 	str.w	fp, [r4, #220]	; 0xdc
 8002a4e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002a52:	4618      	mov	r0, r3
 8002a54:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 8002a58:	f504 79ac 	add.w	r9, r4, #344	; 0x158
 8002a5c:	ee09 3a90 	vmov	s19, r3
 8002a60:	f504 78cc 	add.w	r8, r4, #408	; 0x198
 8002a64:	f7ff ff9a 	bl	800299c <_ZN8touchgfx8TextAreaC1Ev>
 8002a68:	4648      	mov	r0, r9
 8002a6a:	f7ff ff97 	bl	800299c <_ZN8touchgfx8TextAreaC1Ev>
 8002a6e:	f504 77ec 	add.w	r7, r4, #472	; 0x1d8
 8002a72:	f8c4 b158 	str.w	fp, [r4, #344]	; 0x158
 8002a76:	f8c4 5194 	str.w	r5, [r4, #404]	; 0x194
 8002a7a:	4640      	mov	r0, r8
 8002a7c:	f7ff ff8e 	bl	800299c <_ZN8touchgfx8TextAreaC1Ev>
 8002a80:	f8c4 b198 	str.w	fp, [r4, #408]	; 0x198
 8002a84:	f8c4 51d4 	str.w	r5, [r4, #468]	; 0x1d4
 8002a88:	4638      	mov	r0, r7
 8002a8a:	f7ff ff87 	bl	800299c <_ZN8touchgfx8TextAreaC1Ev>
        rect.width = width;
 8002a8e:	4ba6      	ldr	r3, [pc, #664]	; (8002d28 <_ZN10digitsBaseC1Ev+0x354>)
 8002a90:	f8c4 b1d8 	str.w	fp, [r4, #472]	; 0x1d8
    decimalsBox.setXY(49, 16);
 8002a94:	2210      	movs	r2, #16
 8002a96:	60a3      	str	r3, [r4, #8]
 8002a98:	2131      	movs	r1, #49	; 0x31
 8002a9a:	4630      	mov	r0, r6
 8002a9c:	f8c4 5214 	str.w	r5, [r4, #532]	; 0x214
 8002aa0:	f7ff ff54 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 8002aa4:	2307      	movs	r3, #7
    decimalsBox.setBitmap(touchgfx::Bitmap(BITMAP_CURSOR_DECIMALS_ID));
 8002aa6:	4669      	mov	r1, sp
 8002aa8:	4630      	mov	r0, r6
        visible = vis;
 8002aaa:	f884 5051 	strb.w	r5, [r4, #81]	; 0x51
 8002aae:	f8ad 3000 	strh.w	r3, [sp]
 8002ab2:	f008 fa56 	bl	800af62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    onesBox.setXY(30, 5);
 8002ab6:	2205      	movs	r2, #5
 8002ab8:	ee18 0a10 	vmov	r0, s16
 8002abc:	211e      	movs	r1, #30
 8002abe:	f7ff ff45 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 8002ac2:	f04f 0b06 	mov.w	fp, #6
    onesBox.setBitmap(touchgfx::Bitmap(BITMAP_CURSOR_ID));
 8002ac6:	ee18 0a10 	vmov	r0, s16
 8002aca:	4669      	mov	r1, sp
 8002acc:	f884 507d 	strb.w	r5, [r4, #125]	; 0x7d
 8002ad0:	f8ad b000 	strh.w	fp, [sp]
 8002ad4:	f008 fa45 	bl	800af62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    tensBox.setXY(15, 5);
 8002ad8:	2205      	movs	r2, #5
 8002ada:	ee18 0a90 	vmov	r0, s17
 8002ade:	210f      	movs	r1, #15
 8002ae0:	f7ff ff34 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
    tensBox.setBitmap(touchgfx::Bitmap(BITMAP_CURSOR_ID));
 8002ae4:	ee18 0a90 	vmov	r0, s17
 8002ae8:	4669      	mov	r1, sp
 8002aea:	f884 50a9 	strb.w	r5, [r4, #169]	; 0xa9
 8002aee:	f8ad b000 	strh.w	fp, [sp]
 8002af2:	f008 fa36 	bl	800af62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    hundredsBox.setXY(0, 5);
 8002af6:	2205      	movs	r2, #5
 8002af8:	ee19 0a10 	vmov	r0, s18
 8002afc:	4629      	mov	r1, r5
 8002afe:	f7ff ff25 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
    hundredsBox.setBitmap(touchgfx::Bitmap(BITMAP_CURSOR_ID));
 8002b02:	ee19 0a10 	vmov	r0, s18
 8002b06:	4669      	mov	r1, sp
 8002b08:	f884 50d5 	strb.w	r5, [r4, #213]	; 0xd5
 8002b0c:	f8ad b000 	strh.w	fp, [sp]
 8002b10:	f008 fa27 	bl	800af62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    decimals.setXY(49, 15);
 8002b14:	220f      	movs	r2, #15
 8002b16:	2131      	movs	r1, #49	; 0x31
 8002b18:	4650      	mov	r0, sl
 8002b1a:	f7ff ff17 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 8002b1e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002b22:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002b26:	4b81      	ldr	r3, [pc, #516]	; (8002d2c <_ZN10digitsBaseC1Ev+0x358>)
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8002b28:	f8a4 5110 	strh.w	r5, [r4, #272]	; 0x110
 8002b2c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(decimalsBuffer, DECIMALS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ATWK).getText());
 8002b2e:	f504 7b06 	add.w	fp, r4, #536	; 0x218
 8002b32:	b92b      	cbnz	r3, 8002b40 <_ZN10digitsBaseC1Ev+0x16c>
 8002b34:	4b7e      	ldr	r3, [pc, #504]	; (8002d30 <_ZN10digitsBaseC1Ev+0x35c>)
 8002b36:	4a7f      	ldr	r2, [pc, #508]	; (8002d34 <_ZN10digitsBaseC1Ev+0x360>)
 8002b38:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002b3a:	487f      	ldr	r0, [pc, #508]	; (8002d38 <_ZN10digitsBaseC1Ev+0x364>)
 8002b3c:	f018 ff6e 	bl	801ba1c <__assert_func>
 8002b40:	4b7e      	ldr	r3, [pc, #504]	; (8002d3c <_ZN10digitsBaseC1Ev+0x368>)
 8002b42:	881b      	ldrh	r3, [r3, #0]
 8002b44:	2b22      	cmp	r3, #34	; 0x22
 8002b46:	d803      	bhi.n	8002b50 <_ZN10digitsBaseC1Ev+0x17c>
 8002b48:	4b7d      	ldr	r3, [pc, #500]	; (8002d40 <_ZN10digitsBaseC1Ev+0x36c>)
 8002b4a:	4a7a      	ldr	r2, [pc, #488]	; (8002d34 <_ZN10digitsBaseC1Ev+0x360>)
 8002b4c:	21af      	movs	r1, #175	; 0xaf
 8002b4e:	e7f4      	b.n	8002b3a <_ZN10digitsBaseC1Ev+0x166>
        return texts->getText(typedTextId);
 8002b50:	4b7c      	ldr	r3, [pc, #496]	; (8002d44 <_ZN10digitsBaseC1Ev+0x370>)
 8002b52:	2122      	movs	r1, #34	; 0x22
 8002b54:	6818      	ldr	r0, [r3, #0]
 8002b56:	f7ff fe7f 	bl	8002858 <_ZNK8touchgfx5Texts7getTextEt>
 8002b5a:	4a7b      	ldr	r2, [pc, #492]	; (8002d48 <_ZN10digitsBaseC1Ev+0x374>)
 8002b5c:	4603      	mov	r3, r0
 8002b5e:	210a      	movs	r1, #10
 8002b60:	4658      	mov	r0, fp
 8002b62:	f00c fe0f 	bl	800f784 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
    {
        wildcard = value;
 8002b66:	f8c4 b118 	str.w	fp, [r4, #280]	; 0x118
    decimals.resizeToCurrentText();
 8002b6a:	4650      	mov	r0, sl
 8002b6c:	f008 f89c 	bl	800aca8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002b70:	4b76      	ldr	r3, [pc, #472]	; (8002d4c <_ZN10digitsBaseC1Ev+0x378>)
 8002b72:	9300      	str	r3, [sp, #0]
    decimals.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YVJJ));
 8002b74:	4669      	mov	r1, sp
 8002b76:	2321      	movs	r3, #33	; 0x21
 8002b78:	4650      	mov	r0, sl
 8002b7a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002b7e:	f008 f8b0 	bl	800ace2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    dot.setXY(44, 15);
 8002b82:	220f      	movs	r2, #15
 8002b84:	ee19 0a90 	vmov	r0, s19
 8002b88:	212c      	movs	r1, #44	; 0x2c
 8002b8a:	f7ff fedf 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 8002b8e:	4b6f      	ldr	r3, [pc, #444]	; (8002d4c <_ZN10digitsBaseC1Ev+0x378>)
 8002b90:	9300      	str	r3, [sp, #0]
        this->color = color;
 8002b92:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8002b96:	2320      	movs	r3, #32
    dot.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4DSA));
 8002b98:	ee19 0a90 	vmov	r0, s19
 8002b9c:	f8c4 114c 	str.w	r1, [r4, #332]	; 0x14c
        linespace = space;
 8002ba0:	f8a4 5150 	strh.w	r5, [r4, #336]	; 0x150
 8002ba4:	4669      	mov	r1, sp
 8002ba6:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002baa:	f008 f89a 	bl	800ace2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    ones.setXY(30, 0);
 8002bae:	211e      	movs	r1, #30
 8002bb0:	462a      	mov	r2, r5
 8002bb2:	4648      	mov	r0, r9
 8002bb4:	f7ff feca 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8002bb8:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8002bbc:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002bc0:	495a      	ldr	r1, [pc, #360]	; (8002d2c <_ZN10digitsBaseC1Ev+0x358>)
        linespace = space;
 8002bc2:	f8a4 518c 	strh.w	r5, [r4, #396]	; 0x18c
 8002bc6:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(onesBuffer, ONES_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UIUJ).getText());
 8002bc8:	f504 7b0b 	add.w	fp, r4, #556	; 0x22c
 8002bcc:	2b00      	cmp	r3, #0
 8002bce:	d0b1      	beq.n	8002b34 <_ZN10digitsBaseC1Ev+0x160>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002bd0:	485a      	ldr	r0, [pc, #360]	; (8002d3c <_ZN10digitsBaseC1Ev+0x368>)
 8002bd2:	8803      	ldrh	r3, [r0, #0]
 8002bd4:	2b1f      	cmp	r3, #31
 8002bd6:	d9b7      	bls.n	8002b48 <_ZN10digitsBaseC1Ev+0x174>
        return texts->getText(typedTextId);
 8002bd8:	4a5a      	ldr	r2, [pc, #360]	; (8002d44 <_ZN10digitsBaseC1Ev+0x370>)
 8002bda:	211f      	movs	r1, #31
 8002bdc:	6810      	ldr	r0, [r2, #0]
 8002bde:	f7ff fe3b 	bl	8002858 <_ZNK8touchgfx5Texts7getTextEt>
 8002be2:	4a59      	ldr	r2, [pc, #356]	; (8002d48 <_ZN10digitsBaseC1Ev+0x374>)
 8002be4:	4603      	mov	r3, r0
 8002be6:	210a      	movs	r1, #10
 8002be8:	4658      	mov	r0, fp
 8002bea:	f00c fdcb 	bl	800f784 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8002bee:	f8c4 b194 	str.w	fp, [r4, #404]	; 0x194
    ones.resizeToCurrentText();
 8002bf2:	4648      	mov	r0, r9
 8002bf4:	f008 f858 	bl	800aca8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002bf8:	4b54      	ldr	r3, [pc, #336]	; (8002d4c <_ZN10digitsBaseC1Ev+0x378>)
 8002bfa:	9300      	str	r3, [sp, #0]
    ones.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R12E));
 8002bfc:	4669      	mov	r1, sp
 8002bfe:	231e      	movs	r3, #30
 8002c00:	4648      	mov	r0, r9
 8002c02:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002c06:	f008 f86c 	bl	800ace2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    tens.setXY(15, 0);
 8002c0a:	210f      	movs	r1, #15
 8002c0c:	462a      	mov	r2, r5
 8002c0e:	4640      	mov	r0, r8
 8002c10:	f7ff fe9c 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002c14:	4945      	ldr	r1, [pc, #276]	; (8002d2c <_ZN10digitsBaseC1Ev+0x358>)
 8002c16:	f8a4 51cc 	strh.w	r5, [r4, #460]	; 0x1cc
 8002c1a:	680b      	ldr	r3, [r1, #0]
        this->color = color;
 8002c1c:	f04f 4c7f 	mov.w	ip, #4278190080	; 0xff000000
 8002c20:	f8c4 c1c8 	str.w	ip, [r4, #456]	; 0x1c8
    Unicode::snprintf(tensBuffer, TENS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6T83).getText());
 8002c24:	f504 7b10 	add.w	fp, r4, #576	; 0x240
 8002c28:	2b00      	cmp	r3, #0
 8002c2a:	d083      	beq.n	8002b34 <_ZN10digitsBaseC1Ev+0x160>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002c2c:	4843      	ldr	r0, [pc, #268]	; (8002d3c <_ZN10digitsBaseC1Ev+0x368>)
 8002c2e:	8803      	ldrh	r3, [r0, #0]
 8002c30:	2b24      	cmp	r3, #36	; 0x24
 8002c32:	d989      	bls.n	8002b48 <_ZN10digitsBaseC1Ev+0x174>
        return texts->getText(typedTextId);
 8002c34:	4a43      	ldr	r2, [pc, #268]	; (8002d44 <_ZN10digitsBaseC1Ev+0x370>)
 8002c36:	2124      	movs	r1, #36	; 0x24
 8002c38:	6810      	ldr	r0, [r2, #0]
 8002c3a:	f7ff fe0d 	bl	8002858 <_ZNK8touchgfx5Texts7getTextEt>
 8002c3e:	4a42      	ldr	r2, [pc, #264]	; (8002d48 <_ZN10digitsBaseC1Ev+0x374>)
 8002c40:	4603      	mov	r3, r0
 8002c42:	210a      	movs	r1, #10
 8002c44:	4658      	mov	r0, fp
 8002c46:	f00c fd9d 	bl	800f784 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    tens.resizeToCurrentText();
 8002c4a:	4640      	mov	r0, r8
 8002c4c:	f8c4 b1d4 	str.w	fp, [r4, #468]	; 0x1d4
 8002c50:	f008 f82a 	bl	800aca8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002c54:	4b3d      	ldr	r3, [pc, #244]	; (8002d4c <_ZN10digitsBaseC1Ev+0x378>)
 8002c56:	9300      	str	r3, [sp, #0]
    tens.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KLYP));
 8002c58:	4669      	mov	r1, sp
 8002c5a:	231d      	movs	r3, #29
 8002c5c:	4640      	mov	r0, r8
 8002c5e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002c62:	f008 f83e 	bl	800ace2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    hundreds.setXY(0, 0);
 8002c66:	4629      	mov	r1, r5
 8002c68:	462a      	mov	r2, r5
 8002c6a:	4638      	mov	r0, r7
 8002c6c:	f7ff fe6e 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002c70:	492e      	ldr	r1, [pc, #184]	; (8002d2c <_ZN10digitsBaseC1Ev+0x358>)
        linespace = space;
 8002c72:	f8a4 520c 	strh.w	r5, [r4, #524]	; 0x20c
 8002c76:	680b      	ldr	r3, [r1, #0]
        this->color = color;
 8002c78:	f04f 4c7f 	mov.w	ip, #4278190080	; 0xff000000
 8002c7c:	f8c4 c208 	str.w	ip, [r4, #520]	; 0x208
    Unicode::snprintf(hundredsBuffer, HUNDREDS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KFJL).getText());
 8002c80:	f504 7515 	add.w	r5, r4, #596	; 0x254
 8002c84:	2b00      	cmp	r3, #0
 8002c86:	f43f af55 	beq.w	8002b34 <_ZN10digitsBaseC1Ev+0x160>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002c8a:	482c      	ldr	r0, [pc, #176]	; (8002d3c <_ZN10digitsBaseC1Ev+0x368>)
 8002c8c:	8803      	ldrh	r3, [r0, #0]
 8002c8e:	2b23      	cmp	r3, #35	; 0x23
 8002c90:	f67f af5a 	bls.w	8002b48 <_ZN10digitsBaseC1Ev+0x174>
        return texts->getText(typedTextId);
 8002c94:	4a2b      	ldr	r2, [pc, #172]	; (8002d44 <_ZN10digitsBaseC1Ev+0x370>)
 8002c96:	2123      	movs	r1, #35	; 0x23
 8002c98:	6810      	ldr	r0, [r2, #0]
 8002c9a:	f7ff fddd 	bl	8002858 <_ZNK8touchgfx5Texts7getTextEt>
 8002c9e:	4a2a      	ldr	r2, [pc, #168]	; (8002d48 <_ZN10digitsBaseC1Ev+0x374>)
 8002ca0:	4603      	mov	r3, r0
 8002ca2:	210a      	movs	r1, #10
 8002ca4:	4628      	mov	r0, r5
 8002ca6:	f00c fd6d 	bl	800f784 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    hundreds.resizeToCurrentText();
 8002caa:	4638      	mov	r0, r7
 8002cac:	f8c4 5214 	str.w	r5, [r4, #532]	; 0x214
 8002cb0:	f007 fffa 	bl	800aca8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002cb4:	4b25      	ldr	r3, [pc, #148]	; (8002d4c <_ZN10digitsBaseC1Ev+0x378>)
 8002cb6:	9300      	str	r3, [sp, #0]
    hundreds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VEFE));
 8002cb8:	4669      	mov	r1, sp
 8002cba:	231c      	movs	r3, #28
 8002cbc:	4638      	mov	r0, r7
 8002cbe:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002cc2:	f008 f80e 	bl	800ace2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(decimalsBox);
 8002cc6:	4631      	mov	r1, r6
 8002cc8:	4620      	mov	r0, r4
 8002cca:	f006 fc21 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(onesBox);
 8002cce:	ee18 1a10 	vmov	r1, s16
 8002cd2:	4620      	mov	r0, r4
 8002cd4:	f006 fc1c 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(tensBox);
 8002cd8:	ee18 1a90 	vmov	r1, s17
 8002cdc:	4620      	mov	r0, r4
 8002cde:	f006 fc17 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(hundredsBox);
 8002ce2:	ee19 1a10 	vmov	r1, s18
 8002ce6:	4620      	mov	r0, r4
 8002ce8:	f006 fc12 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(decimals);
 8002cec:	4651      	mov	r1, sl
 8002cee:	4620      	mov	r0, r4
 8002cf0:	f006 fc0e 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(dot);
 8002cf4:	ee19 1a90 	vmov	r1, s19
 8002cf8:	4620      	mov	r0, r4
 8002cfa:	f006 fc09 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(ones);
 8002cfe:	4649      	mov	r1, r9
 8002d00:	4620      	mov	r0, r4
 8002d02:	f006 fc05 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(tens);
 8002d06:	4641      	mov	r1, r8
 8002d08:	4620      	mov	r0, r4
 8002d0a:	f006 fc01 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(hundreds);
 8002d0e:	4620      	mov	r0, r4
 8002d10:	4639      	mov	r1, r7
 8002d12:	f006 fbfd 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002d16:	4620      	mov	r0, r4
 8002d18:	b003      	add	sp, #12
 8002d1a:	ecbd 8b04 	vpop	{d8-d9}
 8002d1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002d22:	bf00      	nop
 8002d24:	0801ddac 	.word	0x0801ddac
 8002d28:	00210045 	.word	0x00210045
 8002d2c:	20013558 	.word	0x20013558
 8002d30:	0801dc96 	.word	0x0801dc96
 8002d34:	0801dcd8 	.word	0x0801dcd8
 8002d38:	0801dd06 	.word	0x0801dd06
 8002d3c:	2001355c 	.word	0x2001355c
 8002d40:	0801dd4d 	.word	0x0801dd4d
 8002d44:	20013564 	.word	0x20013564
 8002d48:	0801dd9f 	.word	0x0801dd9f
 8002d4c:	0801d6b0 	.word	0x0801d6b0
 8002d50:	0801f568 	.word	0x0801f568

08002d54 <_ZN11humDispBase10initializeEv>:
    add(digits1);
}

void humDispBase::initialize()
{
    digits1.initialize();
 8002d54:	3068      	adds	r0, #104	; 0x68
 8002d56:	f001 b8f7 	b.w	8003f48 <_ZN6digits10initializeEv>
	...

08002d5c <_ZN11humDispBaseD1Ev>:

class humDispBase : public touchgfx::Container
{
public:
    humDispBase();
    virtual ~humDispBase() {}
 8002d5c:	b538      	push	{r3, r4, r5, lr}
 8002d5e:	4b08      	ldr	r3, [pc, #32]	; (8002d80 <_ZN11humDispBaseD1Ev+0x24>)
 8002d60:	6003      	str	r3, [r0, #0]

class digits : public digitsBase
{
public:
    digits();
    virtual ~digits() {}
 8002d62:	4b08      	ldr	r3, [pc, #32]	; (8002d84 <_ZN11humDispBaseD1Ev+0x28>)
 8002d64:	6683      	str	r3, [r0, #104]	; 0x68
 8002d66:	4604      	mov	r4, r0
 8002d68:	f44f 7569 	mov.w	r5, #932	; 0x3a4
 *
 * @tparam T        The type of objects this container works on.
 * @tparam capacity The maximum number of objects this container can store.
 */
template <class T, uint16_t capacity>
class Vector
 8002d6c:	5963      	ldr	r3, [r4, r5]
 8002d6e:	1960      	adds	r0, r4, r5
 8002d70:	681b      	ldr	r3, [r3, #0]
 8002d72:	3d40      	subs	r5, #64	; 0x40
 8002d74:	4798      	blx	r3
 8002d76:	f5b5 7f29 	cmp.w	r5, #676	; 0x2a4
 8002d7a:	d1f7      	bne.n	8002d6c <_ZN11humDispBaseD1Ev+0x10>
 8002d7c:	4620      	mov	r0, r4
 8002d7e:	bd38      	pop	{r3, r4, r5, pc}
 8002d80:	0801de3c 	.word	0x0801de3c
 8002d84:	0801e554 	.word	0x0801e554

08002d88 <_ZN11humDispBaseD0Ev>:
 8002d88:	b510      	push	{r4, lr}
 8002d8a:	4604      	mov	r4, r0
 8002d8c:	f7ff ffe6 	bl	8002d5c <_ZN11humDispBaseD1Ev>
 8002d90:	4620      	mov	r0, r4
 8002d92:	f240 410c 	movw	r1, #1036	; 0x40c
 8002d96:	f018 fe12 	bl	801b9be <_ZdlPvj>
 8002d9a:	4620      	mov	r0, r4
 8002d9c:	bd10      	pop	{r4, pc}
	...

08002da0 <_ZN11humDispBaseC1Ev>:
humDispBase::humDispBase()
 8002da0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8002da4:	4606      	mov	r6, r0
        : x(0), y(0), width(0), height(0)
 8002da6:	2500      	movs	r5, #0
 8002da8:	4a2a      	ldr	r2, [pc, #168]	; (8002e54 <_ZN11humDispBaseC1Ev+0xb4>)
 8002daa:	6285      	str	r5, [r0, #40]	; 0x28
          visible(true)
 8002dac:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002db0:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002db4:	e9c0 5503 	strd	r5, r5, [r0, #12]
 8002db8:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002dbc:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002dc0:	8483      	strh	r3, [r0, #36]	; 0x24
 8002dc2:	f846 2b2c 	str.w	r2, [r6], #44
 8002dc6:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002dca:	4b23      	ldr	r3, [pc, #140]	; (8002e58 <_ZN11humDispBaseC1Ev+0xb8>)
 8002dcc:	62c3      	str	r3, [r0, #44]	; 0x2c
 8002dce:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002dd2:	f8df 8090 	ldr.w	r8, [pc, #144]	; 8002e64 <_ZN11humDispBaseC1Ev+0xc4>
 8002dd6:	f8a0 3058 	strh.w	r3, [r0, #88]	; 0x58
 8002dda:	f100 0768 	add.w	r7, r0, #104	; 0x68
 8002dde:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8002de2:	4604      	mov	r4, r0
 8002de4:	e9c0 550c 	strd	r5, r5, [r0, #48]	; 0x30
 8002de8:	e9c0 550e 	strd	r5, r5, [r0, #56]	; 0x38
 8002dec:	e9c0 5510 	strd	r5, r5, [r0, #64]	; 0x40
 8002df0:	e9c0 5512 	strd	r5, r5, [r0, #72]	; 0x48
 8002df4:	f8c0 8054 	str.w	r8, [r0, #84]	; 0x54
        : color(col)
 8002df8:	65c5      	str	r5, [r0, #92]	; 0x5c
 8002dfa:	6603      	str	r3, [r0, #96]	; 0x60
 8002dfc:	f8a0 5064 	strh.w	r5, [r0, #100]	; 0x64
 8002e00:	4638      	mov	r0, r7
 8002e02:	f000 ffc5 	bl	8003d90 <_ZN6digitsC1Ev>
        rect.width = width;
 8002e06:	4b15      	ldr	r3, [pc, #84]	; (8002e5c <_ZN11humDispBaseC1Ev+0xbc>)
 8002e08:	60a3      	str	r3, [r4, #8]
        setX(x);
 8002e0a:	4630      	mov	r0, r6
 8002e0c:	2144      	movs	r1, #68	; 0x44
 8002e0e:	f7ff fd53 	bl	80028b8 <_ZN8touchgfx8Drawable4setXEs>
        setY(y);
 8002e12:	4630      	mov	r0, r6
 8002e14:	2103      	movs	r1, #3
 8002e16:	f7ff fd51 	bl	80028bc <_ZN8touchgfx8Drawable4setYEs>
        this->color = color;
 8002e1a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002e1e:	65e3      	str	r3, [r4, #92]	; 0x5c
    unit.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A5L9));
 8002e20:	4669      	mov	r1, sp
 8002e22:	2301      	movs	r3, #1
 8002e24:	4630      	mov	r0, r6
        linespace = space;
 8002e26:	f8a4 5060 	strh.w	r5, [r4, #96]	; 0x60
 8002e2a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002e2e:	f8cd 8000 	str.w	r8, [sp]
 8002e32:	f007 ff56 	bl	800ace2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        rect.x = x;
 8002e36:	4b0a      	ldr	r3, [pc, #40]	; (8002e60 <_ZN11humDispBaseC1Ev+0xc0>)
 8002e38:	66e3      	str	r3, [r4, #108]	; 0x6c
    add(unit);
 8002e3a:	4631      	mov	r1, r6
 8002e3c:	4620      	mov	r0, r4
 8002e3e:	f006 fb67 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(digits1);
 8002e42:	4620      	mov	r0, r4
 8002e44:	4639      	mov	r1, r7
 8002e46:	f006 fb63 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002e4a:	4620      	mov	r0, r4
 8002e4c:	b002      	add	sp, #8
 8002e4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002e52:	bf00      	nop
 8002e54:	0801de3c 	.word	0x0801de3c
 8002e58:	0801f45c 	.word	0x0801f45c
 8002e5c:	00240056 	.word	0x00240056
 8002e60:	0002000f 	.word	0x0002000f
 8002e64:	0801d6b0 	.word	0x0801d6b0

08002e68 <_ZN13humWindowBase12toggleHumBtnEv>:
     * Virtual Action Handlers
     */
    virtual void toggleHumBtn()
    {
        // Override and implement this function in humWindow
    }
 8002e68:	4770      	bx	lr

08002e6a <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class ImageButtonStyle : public T
 8002e6a:	4770      	bx	lr

08002e6c <_ZN8touchgfx8CallbackI13humWindowBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002e6c:	4770      	bx	lr

08002e6e <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the text can be adjusted with setTextXY (default is centered).
 *
 * @see AbstractButtonContainer
 */
template <class T>
class TextButtonStyle : public T
 8002e6e:	4770      	bx	lr

08002e70 <_ZN8touchgfx8CallbackI13humWindowBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002e70:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002e72:	68c2      	ldr	r2, [r0, #12]
 8002e74:	6844      	ldr	r4, [r0, #4]
 8002e76:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002e78:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002e7a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002e7e:	07d2      	lsls	r2, r2, #31
 8002e80:	bf48      	it	mi
 8002e82:	5962      	ldrmi	r2, [r4, r5]
 8002e84:	689b      	ldr	r3, [r3, #8]
    }
 8002e86:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002e88:	bf48      	it	mi
 8002e8a:	58d3      	ldrmi	r3, [r2, r3]
 8002e8c:	4718      	bx	r3

08002e8e <_ZNK8touchgfx8CallbackI13humWindowBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002e8e:	6843      	ldr	r3, [r0, #4]
 8002e90:	b12b      	cbz	r3, 8002e9e <_ZNK8touchgfx8CallbackI13humWindowBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002e92:	6883      	ldr	r3, [r0, #8]
 8002e94:	b92b      	cbnz	r3, 8002ea2 <_ZNK8touchgfx8CallbackI13humWindowBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002e96:	68c0      	ldr	r0, [r0, #12]
 8002e98:	f000 0001 	and.w	r0, r0, #1
 8002e9c:	4770      	bx	lr
 8002e9e:	4618      	mov	r0, r3
 8002ea0:	4770      	bx	lr
 8002ea2:	2001      	movs	r0, #1
    }
 8002ea4:	4770      	bx	lr

08002ea6 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        text.setAlpha(T::getAlpha());
 8002ea6:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 8002eaa:	f880 309a 	strb.w	r3, [r0, #154]	; 0x9a
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002eae:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
        T::handleAlphaUpdated();
    }
 8002eb2:	4770      	bx	lr

08002eb4 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002eb4:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002eb8:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        buttonImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002ebc:	4770      	bx	lr

08002ebe <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002ebe:	4601      	mov	r1, r0
        buttonImage.setBitmap(T::getPressed() ? down : up);
 8002ec0:	3034      	adds	r0, #52	; 0x34
 8002ec2:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8002ec6:	b113      	cbz	r3, 8002ece <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x10>
 8002ec8:	3162      	adds	r1, #98	; 0x62
 8002eca:	f008 b84a 	b.w	800af62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002ece:	3160      	adds	r1, #96	; 0x60
 8002ed0:	e7fb      	b.n	8002eca <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xc>

08002ed2 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002ed2:	b508      	push	{r3, lr}
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 8002ed4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8002ed8:	b133      	cbz	r3, 8002ee8 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x16>
 8002eda:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
        this->color = color;
 8002ede:	f8c0 3094 	str.w	r3, [r0, #148]	; 0x94
        T::handlePressedUpdated();
 8002ee2:	f7ff ffec 	bl	8002ebe <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002ee6:	bd08      	pop	{r3, pc}
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 8002ee8:	f8d0 30a0 	ldr.w	r3, [r0, #160]	; 0xa0
 8002eec:	e7f7      	b.n	8002ede <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

08002eee <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class ImageButtonStyle : public T
 8002eee:	b510      	push	{r4, lr}
 8002ef0:	2164      	movs	r1, #100	; 0x64
 8002ef2:	4604      	mov	r4, r0
 8002ef4:	f018 fd63 	bl	801b9be <_ZdlPvj>
 8002ef8:	4620      	mov	r0, r4
 8002efa:	bd10      	pop	{r4, pc}

08002efc <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TextButtonStyle : public T
 8002efc:	b510      	push	{r4, lr}
 8002efe:	21a8      	movs	r1, #168	; 0xa8
 8002f00:	4604      	mov	r4, r0
 8002f02:	f018 fd5c 	bl	801b9be <_ZdlPvj>
 8002f06:	4620      	mov	r0, r4
 8002f08:	bd10      	pop	{r4, pc}

08002f0a <_ZN8touchgfx8CallbackI13humWindowBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f0a:	b510      	push	{r4, lr}
 8002f0c:	2110      	movs	r1, #16
 8002f0e:	4604      	mov	r4, r0
 8002f10:	f018 fd55 	bl	801b9be <_ZdlPvj>
 8002f14:	4620      	mov	r0, r4
 8002f16:	bd10      	pop	{r4, pc}

08002f18 <_ZN13humWindowBase10initializeEv>:
    add(humDisp2);
    add(humDisp1);
}

void humWindowBase::initialize()
{
 8002f18:	b510      	push	{r4, lr}
 8002f1a:	4604      	mov	r4, r0
    humDisp2.initialize();
 8002f1c:	f500 70ac 	add.w	r0, r0, #344	; 0x158
 8002f20:	f001 f889 	bl	8004036 <_ZN7humDisp10initializeEv>
    humDisp1.initialize();
 8002f24:	f204 5064 	addw	r0, r4, #1380	; 0x564
}
 8002f28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    humDisp1.initialize();
 8002f2c:	f001 b883 	b.w	8004036 <_ZN7humDisp10initializeEv>

08002f30 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002f30:	b510      	push	{r4, lr}
 8002f32:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002f34:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002f36:	b150      	cbz	r0, 8002f4e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002f38:	6803      	ldr	r3, [r0, #0]
 8002f3a:	68db      	ldr	r3, [r3, #12]
 8002f3c:	4798      	blx	r3
 8002f3e:	b130      	cbz	r0, 8002f4e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002f40:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002f42:	6803      	ldr	r3, [r0, #0]
 8002f44:	4621      	mov	r1, r4
 8002f46:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002f48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002f4c:	4718      	bx	r3
    }
 8002f4e:	bd10      	pop	{r4, pc}

08002f50 <_ZN13humWindowBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void humWindowBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
 8002f50:	f100 02b0 	add.w	r2, r0, #176	; 0xb0
 8002f54:	428a      	cmp	r2, r1
 8002f56:	d103      	bne.n	8002f60 <_ZN13humWindowBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    {
        //Interaction1
        //When flexButton1 clicked call virtual function
        //Call toggleHumBtn
        toggleHumBtn();
 8002f58:	6803      	ldr	r3, [r0, #0]
 8002f5a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002f5e:	4718      	bx	r3
    }
}
 8002f60:	4770      	bx	lr

08002f62 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002f62:	790b      	ldrb	r3, [r1, #4]
    virtual void handleClickEvent(const ClickEvent& event)
 8002f64:	b570      	push	{r4, r5, r6, lr}
        bool wasPressed = getPressed();
 8002f66:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
 8002f6a:	4604      	mov	r4, r0
 8002f6c:	460d      	mov	r5, r1
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002f6e:	b99b      	cbnz	r3, 8002f98 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002f70:	b98e      	cbnz	r6, 8002f96 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002f72:	fab3 f383 	clz	r3, r3
 8002f76:	095b      	lsrs	r3, r3, #5
 8002f78:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002f7c:	6823      	ldr	r3, [r4, #0]
 8002f7e:	4620      	mov	r0, r4
 8002f80:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002f84:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002f86:	6823      	ldr	r3, [r4, #0]
 8002f88:	4620      	mov	r0, r4
 8002f8a:	695b      	ldr	r3, [r3, #20]
 8002f8c:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002f8e:	b116      	cbz	r6, 8002f96 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002f90:	792b      	ldrb	r3, [r5, #4]
 8002f92:	2b01      	cmp	r3, #1
 8002f94:	d003      	beq.n	8002f9e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002f96:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002f98:	2e00      	cmp	r6, #0
 8002f9a:	d0fc      	beq.n	8002f96 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002f9c:	e7e9      	b.n	8002f72 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002f9e:	6823      	ldr	r3, [r4, #0]
 8002fa0:	4620      	mov	r0, r4
 8002fa2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    }
 8002fa6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002faa:	4718      	bx	r3

08002fac <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 8002fac:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 8002fae:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 8002fb0:	4604      	mov	r4, r0
        setWidth(width);
 8002fb2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    void setWidthHeight(int16_t width, int16_t height)
 8002fb4:	4615      	mov	r5, r2
        setWidth(width);
 8002fb6:	4798      	blx	r3
        setHeight(height);
 8002fb8:	6823      	ldr	r3, [r4, #0]
 8002fba:	4629      	mov	r1, r5
 8002fbc:	4620      	mov	r0, r4
 8002fbe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 8002fc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002fc4:	4718      	bx	r3

08002fc6 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>:
        up = bmpReleased;
 8002fc6:	880b      	ldrh	r3, [r1, #0]
    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
 8002fc8:	b570      	push	{r4, r5, r6, lr}
        up = bmpReleased;
 8002fca:	f8a0 3060 	strh.w	r3, [r0, #96]	; 0x60
        down = bmpPressed;
 8002fce:	4605      	mov	r5, r0
 8002fd0:	8813      	ldrh	r3, [r2, #0]
 8002fd2:	f825 3f62 	strh.w	r3, [r5, #98]!
    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
 8002fd6:	4604      	mov	r4, r0
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
 8002fd8:	4628      	mov	r0, r5
 8002fda:	f00c fcb3 	bl	800f944 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002fde:	4606      	mov	r6, r0
 8002fe0:	4628      	mov	r0, r5
 8002fe2:	f00c fce9 	bl	800f9b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002fe6:	b231      	sxth	r1, r6
 8002fe8:	b202      	sxth	r2, r0
 8002fea:	4620      	mov	r0, r4
 8002fec:	f7ff ffde 	bl	8002fac <_ZN8touchgfx8Drawable14setWidthHeightEss>
        handlePressedUpdated();
 8002ff0:	6823      	ldr	r3, [r4, #0]
 8002ff2:	4620      	mov	r0, r4
 8002ff4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002ff8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        handlePressedUpdated();
 8002ffc:	4718      	bx	r3

08002ffe <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EED1Ev>:
class Vector
 8002ffe:	b538      	push	{r3, r4, r5, lr}
 8003000:	4604      	mov	r4, r0
 8003002:	25c0      	movs	r5, #192	; 0xc0
 8003004:	5963      	ldr	r3, [r4, r5]
 8003006:	1960      	adds	r0, r4, r5
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	3d40      	subs	r5, #64	; 0x40
 800300c:	4798      	blx	r3
 800300e:	f115 0f40 	cmn.w	r5, #64	; 0x40
 8003012:	d1f7      	bne.n	8003004 <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EED1Ev+0x6>
 8003014:	4620      	mov	r0, r4
 8003016:	bd38      	pop	{r3, r4, r5, pc}

08003018 <_ZN13humWindowBaseD1Ev>:
    virtual ~humWindowBase() {}
 8003018:	b570      	push	{r4, r5, r6, lr}
 800301a:	4b0b      	ldr	r3, [pc, #44]	; (8003048 <_ZN13humWindowBaseD1Ev+0x30>)
 800301c:	4e0b      	ldr	r6, [pc, #44]	; (800304c <_ZN13humWindowBaseD1Ev+0x34>)
 800301e:	4d0c      	ldr	r5, [pc, #48]	; (8003050 <_ZN13humWindowBaseD1Ev+0x38>)
 8003020:	6003      	str	r3, [r0, #0]
 8003022:	4604      	mov	r4, r0
 8003024:	f8c0 6564 	str.w	r6, [r0, #1380]	; 0x564
 8003028:	f8c0 55cc 	str.w	r5, [r0, #1484]	; 0x5cc
 800302c:	f600 0048 	addw	r0, r0, #2120	; 0x848
 8003030:	f7ff ffe5 	bl	8002ffe <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EED1Ev>
 8003034:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
 8003038:	f8c4 51c0 	str.w	r5, [r4, #448]	; 0x1c0
 800303c:	f204 403c 	addw	r0, r4, #1084	; 0x43c
 8003040:	f7ff ffdd 	bl	8002ffe <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EED1Ev>
 8003044:	4620      	mov	r0, r4
 8003046:	bd70      	pop	{r4, r5, r6, pc}
 8003048:	0801e01c 	.word	0x0801e01c
 800304c:	0801de3c 	.word	0x0801de3c
 8003050:	0801e554 	.word	0x0801e554

08003054 <_ZN13humWindowBaseD0Ev>:
 8003054:	b510      	push	{r4, lr}
 8003056:	4604      	mov	r4, r0
 8003058:	f7ff ffde 	bl	8003018 <_ZN13humWindowBaseD1Ev>
 800305c:	4620      	mov	r0, r4
 800305e:	f44f 6118 	mov.w	r1, #2432	; 0x980
 8003062:	f018 fcac 	bl	801b9be <_ZdlPvj>
 8003066:	4620      	mov	r0, r4
 8003068:	bd10      	pop	{r4, pc}
	...

0800306c <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    TextButtonStyle()
 800306c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800306e:	4604      	mov	r4, r0
 8003070:	f7ff fc5a 	bl	8002928 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 8003074:	f44f 437f 	mov.w	r3, #65280	; 0xff00
        : T(), up(), down()
 8003078:	4626      	mov	r6, r4
 800307a:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 800307c:	2301      	movs	r3, #1
 800307e:	2500      	movs	r5, #0
 8003080:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8003084:	4b1e      	ldr	r3, [pc, #120]	; (8003100 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x94>)
 8003086:	62a5      	str	r5, [r4, #40]	; 0x28
 8003088:	6325      	str	r5, [r4, #48]	; 0x30
 800308a:	f846 3b34 	str.w	r3, [r6], #52
 800308e:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8003092:	a901      	add	r1, sp, #4
 8003094:	4630      	mov	r0, r6
 8003096:	f8ad 7004 	strh.w	r7, [sp, #4]
 800309a:	f7ff fc65 	bl	8002968 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        buttonImage.setXY(0, 0);
 800309e:	462a      	mov	r2, r5
 80030a0:	4629      	mov	r1, r5
 80030a2:	4630      	mov	r0, r6
 80030a4:	f8a4 7060 	strh.w	r7, [r4, #96]	; 0x60
 80030a8:	f8a4 7062 	strh.w	r7, [r4, #98]	; 0x62
 80030ac:	f7ff fc4e 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
        T::add(buttonImage);
 80030b0:	4631      	mov	r1, r6
 80030b2:	4620      	mov	r0, r4
        : T()
 80030b4:	4626      	mov	r6, r4
 80030b6:	f006 fa2b 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80030ba:	4b12      	ldr	r3, [pc, #72]	; (8003104 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x98>)
 80030bc:	f846 3b64 	str.w	r3, [r6], #100
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80030c0:	2226      	movs	r2, #38	; 0x26
 80030c2:	4629      	mov	r1, r5
 80030c4:	4630      	mov	r0, r6
 80030c6:	f018 fd35 	bl	801bb34 <memset>
 80030ca:	4630      	mov	r0, r6
 80030cc:	f7ff fc2c 	bl	8002928 <_ZN8touchgfx8DrawableC1Ev>
 80030d0:	4b0d      	ldr	r3, [pc, #52]	; (8003108 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x9c>)
 80030d2:	6663      	str	r3, [r4, #100]	; 0x64
 80030d4:	4b0d      	ldr	r3, [pc, #52]	; (800310c <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xa0>)
 80030d6:	f8c4 308c 	str.w	r3, [r4, #140]	; 0x8c
 80030da:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
        T::add(text);
 80030de:	4620      	mov	r0, r4
        : color(0)
 80030e0:	e9c4 5528 	strd	r5, r5, [r4, #160]	; 0xa0
 80030e4:	f8a4 7090 	strh.w	r7, [r4, #144]	; 0x90
        : color(col)
 80030e8:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 80030ec:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80030f0:	f8a4 509c 	strh.w	r5, [r4, #156]	; 0x9c
 80030f4:	4631      	mov	r1, r6
 80030f6:	f006 fa0b 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80030fa:	4620      	mov	r0, r4
 80030fc:	b003      	add	sp, #12
 80030fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003100:	0801decc 	.word	0x0801decc
 8003104:	0801df68 	.word	0x0801df68
 8003108:	0801f45c 	.word	0x0801f45c
 800310c:	0801d6b0 	.word	0x0801d6b0

08003110 <_ZN13humWindowBaseC1Ev>:
humWindowBase::humWindowBase() :
 8003110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003114:	4604      	mov	r4, r0
 8003116:	b087      	sub	sp, #28
    flexButtonCallback(this, &humWindowBase::flexButtonCallbackHandler)
 8003118:	4627      	mov	r7, r4
 800311a:	2500      	movs	r5, #0
 800311c:	f7ff fc04 	bl	8002928 <_ZN8touchgfx8DrawableC1Ev>
 8003120:	4b61      	ldr	r3, [pc, #388]	; (80032a8 <_ZN13humWindowBaseC1Ev+0x198>)
 8003122:	62a5      	str	r5, [r4, #40]	; 0x28
 8003124:	f847 3b2c 	str.w	r3, [r7], #44
 8003128:	f104 0958 	add.w	r9, r4, #88	; 0x58
 800312c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8003130:	a904      	add	r1, sp, #16
 8003132:	4638      	mov	r0, r7
 8003134:	f104 0884 	add.w	r8, r4, #132	; 0x84
 8003138:	f8ad 6010 	strh.w	r6, [sp, #16]
 800313c:	f7ff fc14 	bl	8002968 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003140:	a904      	add	r1, sp, #16
 8003142:	4648      	mov	r0, r9
 8003144:	f8ad 6010 	strh.w	r6, [sp, #16]
 8003148:	f7ff fc0e 	bl	8002968 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800314c:	a904      	add	r1, sp, #16
 800314e:	f8ad 6010 	strh.w	r6, [sp, #16]
 8003152:	4640      	mov	r0, r8
 8003154:	f104 06b0 	add.w	r6, r4, #176	; 0xb0
 8003158:	f7ff fc06 	bl	8002968 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800315c:	f504 7bac 	add.w	fp, r4, #344	; 0x158
 8003160:	4630      	mov	r0, r6
 8003162:	f7ff ff83 	bl	800306c <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003166:	f204 5a64 	addw	sl, r4, #1380	; 0x564
 800316a:	4658      	mov	r0, fp
 800316c:	f000 ff94 	bl	8004098 <_ZN7humDispC1Ev>
 8003170:	4650      	mov	r0, sl
 8003172:	f000 ff91 	bl	8004098 <_ZN7humDispC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003176:	4b4d      	ldr	r3, [pc, #308]	; (80032ac <_ZN13humWindowBaseC1Ev+0x19c>)
 8003178:	f8c4 3970 	str.w	r3, [r4, #2416]	; 0x970
 800317c:	4b4c      	ldr	r3, [pc, #304]	; (80032b0 <_ZN13humWindowBaseC1Ev+0x1a0>)
 800317e:	f8c4 3978 	str.w	r3, [r4, #2424]	; 0x978
        rect.width = width;
 8003182:	4b4c      	ldr	r3, [pc, #304]	; (80032b4 <_ZN13humWindowBaseC1Ev+0x1a4>)
 8003184:	60a3      	str	r3, [r4, #8]
    image1.setXY(0, 30);
 8003186:	221e      	movs	r2, #30
 8003188:	4629      	mov	r1, r5
 800318a:	4638      	mov	r0, r7
 800318c:	f8c4 4974 	str.w	r4, [r4, #2420]	; 0x974
 8003190:	f8c4 597c 	str.w	r5, [r4, #2428]	; 0x97c
 8003194:	f7ff fbda 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 8003198:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DISP_BACK_ID));
 800319a:	a904      	add	r1, sp, #16
 800319c:	4638      	mov	r0, r7
 800319e:	f8ad 3010 	strh.w	r3, [sp, #16]
 80031a2:	f007 fede 	bl	800af62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(107, 37);
 80031a6:	2225      	movs	r2, #37	; 0x25
 80031a8:	4648      	mov	r0, r9
 80031aa:	216b      	movs	r1, #107	; 0x6b
 80031ac:	f7ff fbce 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 80031b0:	230a      	movs	r3, #10
    image3.setBitmap(touchgfx::Bitmap(BITMAP_DISP_RIGHT_ID));
 80031b2:	a904      	add	r1, sp, #16
 80031b4:	4648      	mov	r0, r9
 80031b6:	f8ad 3010 	strh.w	r3, [sp, #16]
 80031ba:	f007 fed2 	bl	800af62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image2.setXY(7, 37);
 80031be:	2225      	movs	r2, #37	; 0x25
 80031c0:	4640      	mov	r0, r8
 80031c2:	2107      	movs	r1, #7
 80031c4:	f7ff fbc2 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 80031c8:	2309      	movs	r3, #9
    image2.setBitmap(touchgfx::Bitmap(BITMAP_DISP_LEFT_ID));
 80031ca:	a904      	add	r1, sp, #16
 80031cc:	4640      	mov	r0, r8
 80031ce:	f8ad 3010 	strh.w	r3, [sp, #16]
 80031d2:	f007 fec6 	bl	800af62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031d6:	230b      	movs	r3, #11
 80031d8:	f8ad 300c 	strh.w	r3, [sp, #12]
 80031dc:	230c      	movs	r3, #12
    flexButton1.setBitmaps(Bitmap(BITMAP_LABEL_BACGROUND_ID), Bitmap(BITMAP_LABEL_BACGROUND_CLICKED_ID));
 80031de:	eb0d 0103 	add.w	r1, sp, r3
 80031e2:	aa04      	add	r2, sp, #16
 80031e4:	4630      	mov	r0, r6
 80031e6:	f8ad 3010 	strh.w	r3, [sp, #16]
 80031ea:	f7ff feec 	bl	8002fc6 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>
        buttonImage.setXY(x, y);
 80031ee:	462a      	mov	r2, r5
 80031f0:	4629      	mov	r1, r5
 80031f2:	f104 00e4 	add.w	r0, r4, #228	; 0xe4
 80031f6:	f7ff fba9 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 80031fa:	4b2f      	ldr	r3, [pc, #188]	; (80032b8 <_ZN13humWindowBaseC1Ev+0x1a8>)
 80031fc:	9304      	str	r3, [sp, #16]
        text.setTypedText(t);
 80031fe:	f504 708a 	add.w	r0, r4, #276	; 0x114
 8003202:	2306      	movs	r3, #6
 8003204:	a904      	add	r1, sp, #16
 8003206:	f8ad 3014 	strh.w	r3, [sp, #20]
 800320a:	9001      	str	r0, [sp, #4]
 800320c:	f007 fd69 	bl	800ace2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        setWidthHeight(drawable.getWidth(), drawable.getHeight());
 8003210:	f9b4 20ba 	ldrsh.w	r2, [r4, #186]	; 0xba
 8003214:	f9b4 10b8 	ldrsh.w	r1, [r4, #184]	; 0xb8
 8003218:	9801      	ldr	r0, [sp, #4]
 800321a:	f7ff fec7 	bl	8002fac <_ZN8touchgfx8Drawable14setWidthHeightEss>
        setXY(x, y);
 800321e:	9801      	ldr	r0, [sp, #4]
 8003220:	462a      	mov	r2, r5
 8003222:	4629      	mov	r1, r5
 8003224:	f7ff fb92 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8003228:	9801      	ldr	r0, [sp, #4]
 800322a:	221e      	movs	r2, #30
 800322c:	21c8      	movs	r1, #200	; 0xc8
 800322e:	f7ff febd 	bl	8002fac <_ZN8touchgfx8Drawable14setWidthHeightEss>
        colorReleased = newColorReleased;
 8003232:	4b22      	ldr	r3, [pc, #136]	; (80032bc <_ZN13humWindowBaseC1Ev+0x1ac>)
        handlePressedUpdated();
 8003234:	4630      	mov	r0, r6
        colorPressed = newColorPressed;
 8003236:	e9c4 3354 	strd	r3, r3, [r4, #336]	; 0x150
        handlePressedUpdated();
 800323a:	f7ff fe4a 	bl	8002ed2 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
        setXY(x, y);
 800323e:	462a      	mov	r2, r5
 8003240:	4629      	mov	r1, r5
 8003242:	4630      	mov	r0, r6
 8003244:	f7ff fb82 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8003248:	4630      	mov	r0, r6
 800324a:	221e      	movs	r2, #30
 800324c:	21c8      	movs	r1, #200	; 0xc8
 800324e:	f7ff fead 	bl	8002fac <_ZN8touchgfx8Drawable14setWidthHeightEss>
    flexButton1.setAction(flexButtonCallback);
 8003252:	f504 6317 	add.w	r3, r4, #2416	; 0x970
        action = &callback;
 8003256:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
    humDisp2.setXY(107, 37);
 800325a:	4658      	mov	r0, fp
 800325c:	2225      	movs	r2, #37	; 0x25
 800325e:	216b      	movs	r1, #107	; 0x6b
 8003260:	f7ff fb74 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
    humDisp1.setXY(7, 37);
 8003264:	2225      	movs	r2, #37	; 0x25
 8003266:	4650      	mov	r0, sl
 8003268:	2107      	movs	r1, #7
 800326a:	f7ff fb6f 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
    add(image1);
 800326e:	4639      	mov	r1, r7
 8003270:	4620      	mov	r0, r4
 8003272:	f006 f94d 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(image3);
 8003276:	4649      	mov	r1, r9
 8003278:	4620      	mov	r0, r4
 800327a:	f006 f949 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(image2);
 800327e:	4641      	mov	r1, r8
 8003280:	4620      	mov	r0, r4
 8003282:	f006 f945 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton1);
 8003286:	4631      	mov	r1, r6
 8003288:	4620      	mov	r0, r4
 800328a:	f006 f941 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(humDisp2);
 800328e:	4659      	mov	r1, fp
 8003290:	4620      	mov	r0, r4
 8003292:	f006 f93d 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(humDisp1);
 8003296:	4620      	mov	r0, r4
 8003298:	4651      	mov	r1, sl
 800329a:	f006 f939 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800329e:	4620      	mov	r0, r4
 80032a0:	b007      	add	sp, #28
 80032a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032a6:	bf00      	nop
 80032a8:	0801e01c 	.word	0x0801e01c
 80032ac:	0801e004 	.word	0x0801e004
 80032b0:	08002f51 	.word	0x08002f51
 80032b4:	005000c8 	.word	0x005000c8
 80032b8:	0801d6b0 	.word	0x0801d6b0
 80032bc:	ff0a0a0a 	.word	0xff0a0a0a

080032c0 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80032c0:	4770      	bx	lr

080032c2 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80032c2:	4770      	bx	lr

080032c4 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80032c4:	4770      	bx	lr

080032c6 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80032c6:	4770      	bx	lr

080032c8 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80032c8:	4770      	bx	lr

080032ca <_ZN18mainScreenViewBase12upBtnClickedEv>:
     * Virtual Action Handlers
     */
    virtual void upBtnClicked()
    {
        // Override and implement this function in mainScreen
    }
 80032ca:	4770      	bx	lr

080032cc <_ZN18mainScreenViewBase14downBtnClickedEv>:

    virtual void downBtnClicked()
    {
        // Override and implement this function in mainScreen
    }
 80032cc:	4770      	bx	lr

080032ce <_ZN18mainScreenViewBase15rightBtnClickedEv>:

    virtual void rightBtnClicked()
    {
        // Override and implement this function in mainScreen
    }
 80032ce:	4770      	bx	lr

080032d0 <_ZN18mainScreenViewBase14leftBtnClickedEv>:

    virtual void leftBtnClicked()
    {
        // Override and implement this function in mainScreen
    }
 80032d0:	4770      	bx	lr

080032d2 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80032d2:	4770      	bx	lr

080032d4 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 80032d4:	4770      	bx	lr

080032d6 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80032d6:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80032d8:	68c2      	ldr	r2, [r0, #12]
 80032da:	6844      	ldr	r4, [r0, #4]
 80032dc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80032de:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80032e0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80032e4:	07d2      	lsls	r2, r2, #31
 80032e6:	bf48      	it	mi
 80032e8:	5962      	ldrmi	r2, [r4, r5]
 80032ea:	689b      	ldr	r3, [r3, #8]
    }
 80032ec:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80032ee:	bf48      	it	mi
 80032f0:	58d3      	ldrmi	r3, [r2, r3]
 80032f2:	4718      	bx	r3

080032f4 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80032f4:	6843      	ldr	r3, [r0, #4]
 80032f6:	b12b      	cbz	r3, 8003304 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 80032f8:	6883      	ldr	r3, [r0, #8]
 80032fa:	b92b      	cbnz	r3, 8003308 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80032fc:	68c0      	ldr	r0, [r0, #12]
 80032fe:	f000 0001 	and.w	r0, r0, #1
 8003302:	4770      	bx	lr
 8003304:	4618      	mov	r0, r3
 8003306:	4770      	bx	lr
 8003308:	2001      	movs	r0, #1
    }
 800330a:	4770      	bx	lr

0800330c <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
 800330c:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8003310:	f880 3090 	strb.w	r3, [r0, #144]	; 0x90
 8003314:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
        T::handleAlphaUpdated();
    }
 8003318:	4770      	bx	lr

0800331a <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 800331a:	b510      	push	{r4, lr}
 800331c:	2194      	movs	r1, #148	; 0x94
 800331e:	4604      	mov	r4, r0
 8003320:	f018 fb4d 	bl	801b9be <_ZdlPvj>
 8003324:	4620      	mov	r0, r4
 8003326:	bd10      	pop	{r4, pc}

08003328 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003328:	b510      	push	{r4, lr}
 800332a:	2110      	movs	r1, #16
 800332c:	4604      	mov	r4, r0
 800332e:	f018 fb46 	bl	801b9be <_ZdlPvj>
 8003332:	4620      	mov	r0, r4
 8003334:	bd10      	pop	{r4, pc}

08003336 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8003336:	b510      	push	{r4, lr}
 8003338:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 800333a:	3068      	adds	r0, #104	; 0x68
 800333c:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8003340:	b13b      	cbz	r3, 8003352 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8003342:	f104 0166 	add.w	r1, r4, #102	; 0x66
 8003346:	f007 fe0c 	bl	800af62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 800334a:	4620      	mov	r0, r4
 800334c:	f7ff fdb7 	bl	8002ebe <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8003350:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8003352:	f104 0164 	add.w	r1, r4, #100	; 0x64
 8003356:	e7f6      	b.n	8003346 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08003358 <_ZN18mainScreenViewBase11setupScreenEv>:
    add(humWindow1);
    add(tempWindow1);
}

void mainScreenViewBase::setupScreen()
{
 8003358:	b510      	push	{r4, lr}
 800335a:	4604      	mov	r4, r0
    humWindow1.initialize();
 800335c:	f500 703a 	add.w	r0, r0, #744	; 0x2e8
 8003360:	f000 fea7 	bl	80040b2 <_ZN9humWindow10initializeEv>
    tempWindow1.initialize();
 8003364:	f504 6047 	add.w	r0, r4, #3184	; 0xc70
}
 8003368:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    tempWindow1.initialize();
 800336c:	f000 bfd3 	b.w	8004316 <_ZN10tempWindow10initializeEv>

08003370 <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void mainScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &left)
 8003370:	f100 0298 	add.w	r2, r0, #152	; 0x98
 8003374:	4291      	cmp	r1, r2
 8003376:	d102      	bne.n	800337e <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //Interaction4
        //When left clicked call virtual function
        //Call leftBtnClicked
        leftBtnClicked();
 8003378:	6803      	ldr	r3, [r0, #0]
 800337a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    else if (&src == &down)
    {
        //Interaction2
        //When down clicked call virtual function
        //Call downBtnClicked
        downBtnClicked();
 800337c:	4718      	bx	r3
    else if (&src == &right)
 800337e:	f500 7296 	add.w	r2, r0, #300	; 0x12c
 8003382:	4291      	cmp	r1, r2
 8003384:	d102      	bne.n	800338c <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        rightBtnClicked();
 8003386:	6803      	ldr	r3, [r0, #0]
 8003388:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800338a:	e7f7      	b.n	800337c <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &up)
 800338c:	f500 72e0 	add.w	r2, r0, #448	; 0x1c0
 8003390:	4291      	cmp	r1, r2
 8003392:	d102      	bne.n	800339a <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
        upBtnClicked();
 8003394:	6803      	ldr	r3, [r0, #0]
 8003396:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003398:	e7f0      	b.n	800337c <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &down)
 800339a:	f500 7215 	add.w	r2, r0, #596	; 0x254
 800339e:	4291      	cmp	r1, r2
 80033a0:	d102      	bne.n	80033a8 <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
        downBtnClicked();
 80033a2:	6803      	ldr	r3, [r0, #0]
 80033a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033a6:	e7e9      	b.n	800337c <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 80033a8:	4770      	bx	lr

080033aa <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 80033aa:	880b      	ldrh	r3, [r1, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 80033ac:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 80033b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 80033b4:	f8a0 3064 	strh.w	r3, [r0, #100]	; 0x64
        iconPressed = newIconPressed;
 80033b8:	8813      	ldrh	r3, [r2, #0]
 80033ba:	f8a0 3066 	strh.w	r3, [r0, #102]	; 0x66
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 80033be:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 80033c0:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80033c4:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 80033c6:	4617      	mov	r7, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 80033c8:	f3c1 054f 	ubfx	r5, r1, #1, #16
 80033cc:	f00c faba 	bl	800f944 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80033d0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80033d4:	4680      	mov	r8, r0
 80033d6:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80033da:	4638      	mov	r0, r7
 80033dc:	f3c3 064f 	ubfx	r6, r3, #1, #16
 80033e0:	f00c faea 	bl	800f9b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80033e4:	eba5 0158 	sub.w	r1, r5, r8, lsr #1
 80033e8:	eba6 0250 	sub.w	r2, r6, r0, lsr #1
 80033ec:	b212      	sxth	r2, r2
 80033ee:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80033f2:	b209      	sxth	r1, r1
 80033f4:	f7ff faaa 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 80033f8:	6823      	ldr	r3, [r4, #0]
 80033fa:	4620      	mov	r0, r4
 80033fc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8003400:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8003404:	4718      	bx	r3

08003406 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003406:	b538      	push	{r3, r4, r5, lr}
 8003408:	4604      	mov	r4, r0
 800340a:	461d      	mov	r5, r3
        setXY(x, y);
 800340c:	f7ff fa9e 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8003410:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8003414:	4629      	mov	r1, r5
 8003416:	4620      	mov	r0, r4
 8003418:	f7ff fdc8 	bl	8002fac <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800341c:	bd38      	pop	{r3, r4, r5, pc}
	...

08003420 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8003420:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8003422:	2226      	movs	r2, #38	; 0x26
    Box()
 8003424:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8003426:	2100      	movs	r1, #0
 8003428:	f018 fb84 	bl	801bb34 <memset>
 800342c:	4620      	mov	r0, r4
 800342e:	f7ff fa7b 	bl	8002928 <_ZN8touchgfx8DrawableC1Ev>
 8003432:	4b04      	ldr	r3, [pc, #16]	; (8003444 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8003434:	6023      	str	r3, [r4, #0]
 8003436:	23ff      	movs	r3, #255	; 0xff
 8003438:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
 800343c:	2300      	movs	r3, #0
 800343e:	62a3      	str	r3, [r4, #40]	; 0x28
    {
    }
 8003440:	4620      	mov	r0, r4
 8003442:	bd10      	pop	{r4, pc}
 8003444:	0801f504 	.word	0x0801f504

08003448 <_ZN14tempWindowBaseD1Ev>:

class tempWindowBase : public touchgfx::Container
{
public:
    tempWindowBase();
    virtual ~tempWindowBase() {}
 8003448:	b570      	push	{r4, r5, r6, lr}
 800344a:	4b0b      	ldr	r3, [pc, #44]	; (8003478 <_ZN14tempWindowBaseD1Ev+0x30>)

class tempDispBase : public touchgfx::Container
{
public:
    tempDispBase();
    virtual ~tempDispBase() {}
 800344c:	4e0b      	ldr	r6, [pc, #44]	; (800347c <_ZN14tempWindowBaseD1Ev+0x34>)
 800344e:	4d0c      	ldr	r5, [pc, #48]	; (8003480 <_ZN14tempWindowBaseD1Ev+0x38>)
 8003450:	6003      	str	r3, [r0, #0]
 8003452:	4604      	mov	r4, r0
 8003454:	f8c0 64bc 	str.w	r6, [r0, #1212]	; 0x4bc
 8003458:	f8c0 5524 	str.w	r5, [r0, #1316]	; 0x524
 800345c:	f500 60f4 	add.w	r0, r0, #1952	; 0x7a0
 8003460:	f7ff fdcd 	bl	8002ffe <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EED1Ev>
 8003464:	f8c4 60b0 	str.w	r6, [r4, #176]	; 0xb0
 8003468:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800346c:	f504 7065 	add.w	r0, r4, #916	; 0x394
 8003470:	f7ff fdc5 	bl	8002ffe <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EED1Ev>
 8003474:	4620      	mov	r0, r4
 8003476:	bd70      	pop	{r4, r5, r6, pc}
 8003478:	0801e254 	.word	0x0801e254
 800347c:	0801e1ac 	.word	0x0801e1ac
 8003480:	0801e554 	.word	0x0801e554

08003484 <_ZN18mainScreenViewBaseD1Ev>:
    virtual ~mainScreenViewBase() {}
 8003484:	b510      	push	{r4, lr}
 8003486:	4b09      	ldr	r3, [pc, #36]	; (80034ac <_ZN18mainScreenViewBaseD1Ev+0x28>)
 8003488:	6003      	str	r3, [r0, #0]

class tempWindow : public tempWindowBase
{
public:
    tempWindow();
    virtual ~tempWindow() {}
 800348a:	4b09      	ldr	r3, [pc, #36]	; (80034b0 <_ZN18mainScreenViewBaseD1Ev+0x2c>)
 800348c:	f8c0 3c70 	str.w	r3, [r0, #3184]	; 0xc70
 8003490:	4604      	mov	r4, r0
 8003492:	f500 6047 	add.w	r0, r0, #3184	; 0xc70
 8003496:	f7ff ffd7 	bl	8003448 <_ZN14tempWindowBaseD1Ev>

class humWindow : public humWindowBase
{
public:
    humWindow();
    virtual ~humWindow() {}
 800349a:	4b06      	ldr	r3, [pc, #24]	; (80034b4 <_ZN18mainScreenViewBaseD1Ev+0x30>)
 800349c:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
 80034a0:	f504 703a 	add.w	r0, r4, #744	; 0x2e8
 80034a4:	f7ff fdb8 	bl	8003018 <_ZN13humWindowBaseD1Ev>
 80034a8:	4620      	mov	r0, r4
 80034aa:	bd10      	pop	{r4, pc}
 80034ac:	0801e168 	.word	0x0801e168
 80034b0:	0801e85c 	.word	0x0801e85c
 80034b4:	0801e6a0 	.word	0x0801e6a0

080034b8 <_ZN18mainScreenViewBaseD0Ev>:
 80034b8:	b510      	push	{r4, lr}
 80034ba:	4604      	mov	r4, r0
 80034bc:	f7ff ffe2 	bl	8003484 <_ZN18mainScreenViewBaseD1Ev>
 80034c0:	4620      	mov	r0, r4
 80034c2:	f241 6108 	movw	r1, #5640	; 0x1608
 80034c6:	f018 fa7a 	bl	801b9be <_ZdlPvj>
 80034ca:	4620      	mov	r0, r4
 80034cc:	bd10      	pop	{r4, pc}

080034ce <_ZN14tempWindowBaseD0Ev>:
 80034ce:	b510      	push	{r4, lr}
 80034d0:	4604      	mov	r4, r0
 80034d2:	f7ff ffb9 	bl	8003448 <_ZN14tempWindowBaseD1Ev>
 80034d6:	4620      	mov	r0, r4
 80034d8:	f44f 6118 	mov.w	r1, #2432	; 0x980
 80034dc:	f018 fa6f 	bl	801b9be <_ZdlPvj>
 80034e0:	4620      	mov	r0, r4
 80034e2:	bd10      	pop	{r4, pc}

080034e4 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    IconButtonStyle()
 80034e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80034e6:	4604      	mov	r4, r0
 80034e8:	f7ff fa1e 	bl	8002928 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 80034ec:	f44f 437f 	mov.w	r3, #65280	; 0xff00
        : T(), up(), down()
 80034f0:	4626      	mov	r6, r4
 80034f2:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 80034f4:	2301      	movs	r3, #1
 80034f6:	2700      	movs	r7, #0
 80034f8:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 80034fc:	4b17      	ldr	r3, [pc, #92]	; (800355c <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x78>)
 80034fe:	62a7      	str	r7, [r4, #40]	; 0x28
 8003500:	6327      	str	r7, [r4, #48]	; 0x30
 8003502:	f846 3b34 	str.w	r3, [r6], #52
 8003506:	f64f 75ff 	movw	r5, #65535	; 0xffff
 800350a:	a901      	add	r1, sp, #4
 800350c:	4630      	mov	r0, r6
 800350e:	f8ad 5004 	strh.w	r5, [sp, #4]
 8003512:	f7ff fa29 	bl	8002968 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        buttonImage.setXY(0, 0);
 8003516:	463a      	mov	r2, r7
 8003518:	4639      	mov	r1, r7
 800351a:	4630      	mov	r0, r6
 800351c:	f8a4 5060 	strh.w	r5, [r4, #96]	; 0x60
 8003520:	f8a4 5062 	strh.w	r5, [r4, #98]	; 0x62
 8003524:	f7ff fa12 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
        T::add(buttonImage);
 8003528:	4631      	mov	r1, r6
 800352a:	4620      	mov	r0, r4
 800352c:	f005 fff0 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8003530:	f104 0668 	add.w	r6, r4, #104	; 0x68
 8003534:	4b0a      	ldr	r3, [pc, #40]	; (8003560 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x7c>)
 8003536:	6023      	str	r3, [r4, #0]
 8003538:	a901      	add	r1, sp, #4
 800353a:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 800353e:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8003542:	4630      	mov	r0, r6
 8003544:	f8ad 5004 	strh.w	r5, [sp, #4]
 8003548:	f7ff fa0e 	bl	8002968 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 800354c:	4620      	mov	r0, r4
 800354e:	4631      	mov	r1, r6
 8003550:	f005 ffde 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8003554:	4620      	mov	r0, r4
 8003556:	b003      	add	sp, #12
 8003558:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800355a:	bf00      	nop
 800355c:	0801decc 	.word	0x0801decc
 8003560:	0801e0b0 	.word	0x0801e0b0

08003564 <_ZN18mainScreenViewBaseC1Ev>:
mainScreenViewBase::mainScreenViewBase() :
 8003564:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003568:	ed2d 8b04 	vpush	{d8-d9}
 800356c:	4604      	mov	r4, r0
 800356e:	b087      	sub	sp, #28
    flexButtonCallback(this, &mainScreenViewBase::flexButtonCallbackHandler)
 8003570:	46a2      	mov	sl, r4
        : presenter(0)
 8003572:	2500      	movs	r5, #0
 8003574:	f00a fc32 	bl	800dddc <_ZN8touchgfx6ScreenC1Ev>
 8003578:	4b9b      	ldr	r3, [pc, #620]	; (80037e8 <_ZN18mainScreenViewBaseC1Ev+0x284>)
 800357a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800357c:	f84a 3b40 	str.w	r3, [sl], #64
 8003580:	4650      	mov	r0, sl
 8003582:	f7ff ff4d 	bl	8003420 <_ZN8touchgfx3BoxC1Ev>
 8003586:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 800358a:	4618      	mov	r0, r3
 800358c:	f104 0998 	add.w	r9, r4, #152	; 0x98
 8003590:	ee08 3a10 	vmov	s16, r3
 8003594:	f504 7896 	add.w	r8, r4, #300	; 0x12c
 8003598:	f7ff ff42 	bl	8003420 <_ZN8touchgfx3BoxC1Ev>
 800359c:	4648      	mov	r0, r9
 800359e:	f7ff ffa1 	bl	80034e4 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80035a2:	f504 77e0 	add.w	r7, r4, #448	; 0x1c0
 80035a6:	4640      	mov	r0, r8
 80035a8:	f7ff ff9c 	bl	80034e4 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80035ac:	f504 7615 	add.w	r6, r4, #596	; 0x254
 80035b0:	4638      	mov	r0, r7
 80035b2:	f7ff ff97 	bl	80034e4 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80035b6:	4630      	mov	r0, r6
 80035b8:	f7ff ff94 	bl	80034e4 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80035bc:	f504 733a 	add.w	r3, r4, #744	; 0x2e8
 80035c0:	4618      	mov	r0, r3
 80035c2:	ee08 3a90 	vmov	s17, r3
 80035c6:	f000 fdb7 	bl	8004138 <_ZN9humWindowC1Ev>
 80035ca:	f504 6347 	add.w	r3, r4, #3184	; 0xc70
 80035ce:	4618      	mov	r0, r3
 80035d0:	ee09 3a10 	vmov	s18, r3
 80035d4:	f000 fee0 	bl	8004398 <_ZN10tempWindowC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80035d8:	f241 53f8 	movw	r3, #5624	; 0x15f8
 80035dc:	18e2      	adds	r2, r4, r3
 80035de:	9203      	str	r2, [sp, #12]
 80035e0:	4a82      	ldr	r2, [pc, #520]	; (80037ec <_ZN18mainScreenViewBaseC1Ev+0x288>)
 80035e2:	50e2      	str	r2, [r4, r3]
 80035e4:	9b03      	ldr	r3, [sp, #12]
 80035e6:	4a82      	ldr	r2, [pc, #520]	; (80037f0 <_ZN18mainScreenViewBaseC1Ev+0x28c>)
 80035e8:	605c      	str	r4, [r3, #4]
 80035ea:	f504 53b0 	add.w	r3, r4, #5632	; 0x1600
    __background.setPosition(0, 0, 240, 320);
 80035ee:	f44f 7ba0 	mov.w	fp, #320	; 0x140
 80035f2:	601a      	str	r2, [r3, #0]
 80035f4:	f241 6304 	movw	r3, #5636	; 0x1604
 80035f8:	f8cd b000 	str.w	fp, [sp]
 80035fc:	50e5      	str	r5, [r4, r3]
 80035fe:	462a      	mov	r2, r5
 8003600:	4629      	mov	r1, r5
 8003602:	4650      	mov	r0, sl
 8003604:	23f0      	movs	r3, #240	; 0xf0
 8003606:	f7ff fefe 	bl	8003406 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 800360a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    background.setPosition(0, 0, 240, 320);
 800360e:	ee18 0a10 	vmov	r0, s16
 8003612:	66a3      	str	r3, [r4, #104]	; 0x68
 8003614:	f8cd b000 	str.w	fp, [sp]
 8003618:	462a      	mov	r2, r5
 800361a:	4629      	mov	r1, r5
 800361c:	23f0      	movs	r3, #240	; 0xf0
 800361e:	f7ff fef2 	bl	8003406 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003622:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003626:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    left.setBitmaps(Bitmap(BITMAP_BTN_LEFT_ID), Bitmap(BITMAP_BTN_LEFT_CLICKED_ID));
 800362a:	aa05      	add	r2, sp, #20
 800362c:	2301      	movs	r3, #1
 800362e:	a904      	add	r1, sp, #16
 8003630:	4648      	mov	r0, r9
 8003632:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003636:	f8ad 5010 	strh.w	r5, [sp, #16]
 800363a:	f7ff fcc4 	bl	8002fc6 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>
        buttonImage.setXY(x, y);
 800363e:	462a      	mov	r2, r5
 8003640:	4629      	mov	r1, r5
 8003642:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8003646:	f7ff f981 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 800364a:	230d      	movs	r3, #13
    left.setIconBitmaps(Bitmap(BITMAP_LEFT_ID), Bitmap(BITMAP_LEFT_ID));
 800364c:	aa05      	add	r2, sp, #20
 800364e:	a904      	add	r1, sp, #16
 8003650:	4648      	mov	r0, r9
 8003652:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003656:	f8ad 3014 	strh.w	r3, [sp, #20]
    left.setPosition(20, 220, 60, 80);
 800365a:	f04f 0b50 	mov.w	fp, #80	; 0x50
    left.setIconBitmaps(Bitmap(BITMAP_LEFT_ID), Bitmap(BITMAP_LEFT_ID));
 800365e:	f7ff fea4 	bl	80033aa <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
        rect.x = x;
 8003662:	4b64      	ldr	r3, [pc, #400]	; (80037f4 <_ZN18mainScreenViewBaseC1Ev+0x290>)
 8003664:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
    left.setPosition(20, 220, 60, 80);
 8003668:	f8cd b000 	str.w	fp, [sp]
 800366c:	4648      	mov	r0, r9
 800366e:	233c      	movs	r3, #60	; 0x3c
 8003670:	22dc      	movs	r2, #220	; 0xdc
 8003672:	2114      	movs	r1, #20
 8003674:	f7ff fec7 	bl	8003406 <_ZN8touchgfx8Drawable11setPositionEssss>
        action = &callback;
 8003678:	9a03      	ldr	r2, [sp, #12]
 800367a:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
 800367e:	2302      	movs	r3, #2
 8003680:	f8ad 3010 	strh.w	r3, [sp, #16]
    right.setBitmaps(Bitmap(BITMAP_BTN_RIGHT_ID), Bitmap(BITMAP_BTN_RIGHT_CLICKED_ID));
 8003684:	aa05      	add	r2, sp, #20
 8003686:	2303      	movs	r3, #3
 8003688:	a904      	add	r1, sp, #16
 800368a:	4640      	mov	r0, r8
 800368c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003690:	f7ff fc99 	bl	8002fc6 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>
 8003694:	462a      	mov	r2, r5
 8003696:	4629      	mov	r1, r5
 8003698:	f504 70b0 	add.w	r0, r4, #352	; 0x160
 800369c:	f7ff f956 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 80036a0:	2310      	movs	r3, #16
    right.setIconBitmaps(Bitmap(BITMAP_RIGHT_ID), Bitmap(BITMAP_RIGHT_ID));
 80036a2:	eb0d 0103 	add.w	r1, sp, r3
 80036a6:	aa05      	add	r2, sp, #20
 80036a8:	4640      	mov	r0, r8
 80036aa:	f8ad 3010 	strh.w	r3, [sp, #16]
 80036ae:	f8ad 3014 	strh.w	r3, [sp, #20]
 80036b2:	f7ff fe7a 	bl	80033aa <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 80036b6:	4b4f      	ldr	r3, [pc, #316]	; (80037f4 <_ZN18mainScreenViewBaseC1Ev+0x290>)
 80036b8:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
    right.setPosition(160, 220, 60, 80);
 80036bc:	f8cd b000 	str.w	fp, [sp]
 80036c0:	4640      	mov	r0, r8
 80036c2:	233c      	movs	r3, #60	; 0x3c
 80036c4:	22dc      	movs	r2, #220	; 0xdc
 80036c6:	21a0      	movs	r1, #160	; 0xa0
 80036c8:	f7ff fe9d 	bl	8003406 <_ZN8touchgfx8Drawable11setPositionEssss>
 80036cc:	9b03      	ldr	r3, [sp, #12]
 80036ce:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80036d2:	f04f 0b05 	mov.w	fp, #5
 80036d6:	f04f 0304 	mov.w	r3, #4
    up.setBitmaps(Bitmap(BITMAP_BTN_UP_DOWN_ID), Bitmap(BITMAP_BTN_UP_DOWN_CLICKED_ID));
 80036da:	aa05      	add	r2, sp, #20
 80036dc:	a904      	add	r1, sp, #16
 80036de:	4638      	mov	r0, r7
 80036e0:	f8ad 3010 	strh.w	r3, [sp, #16]
 80036e4:	f8ad b014 	strh.w	fp, [sp, #20]
 80036e8:	f7ff fc6d 	bl	8002fc6 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>
 80036ec:	462a      	mov	r2, r5
 80036ee:	4629      	mov	r1, r5
 80036f0:	f504 70fa 	add.w	r0, r4, #500	; 0x1f4
 80036f4:	f7ff f92a 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 80036f8:	230f      	movs	r3, #15
    up.setIconBitmaps(Bitmap(BITMAP_PLUS_ID), Bitmap(BITMAP_PLUS_ID));
 80036fa:	aa05      	add	r2, sp, #20
 80036fc:	a904      	add	r1, sp, #16
 80036fe:	4638      	mov	r0, r7
 8003700:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003704:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003708:	f7ff fe4f 	bl	80033aa <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 800370c:	2212      	movs	r2, #18
 800370e:	f8c4 222c 	str.w	r2, [r4, #556]	; 0x22c
    up.setPosition(82, 220, 76, 39);
 8003712:	2227      	movs	r2, #39	; 0x27
 8003714:	9200      	str	r2, [sp, #0]
 8003716:	4638      	mov	r0, r7
 8003718:	234c      	movs	r3, #76	; 0x4c
 800371a:	22dc      	movs	r2, #220	; 0xdc
 800371c:	2152      	movs	r1, #82	; 0x52
 800371e:	f7ff fe72 	bl	8003406 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003722:	9b03      	ldr	r3, [sp, #12]
 8003724:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
    down.setBitmaps(Bitmap(BITMAP_BTN_UP_DOWN_ID), Bitmap(BITMAP_BTN_UP_DOWN_CLICKED_ID));
 8003728:	aa05      	add	r2, sp, #20
 800372a:	f04f 0304 	mov.w	r3, #4
 800372e:	a904      	add	r1, sp, #16
 8003730:	4630      	mov	r0, r6
 8003732:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003736:	f8ad b014 	strh.w	fp, [sp, #20]
 800373a:	f7ff fc44 	bl	8002fc6 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>
 800373e:	462a      	mov	r2, r5
 8003740:	4629      	mov	r1, r5
 8003742:	f504 7022 	add.w	r0, r4, #648	; 0x288
 8003746:	f7ff f901 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 800374a:	230e      	movs	r3, #14
    down.setIconBitmaps(Bitmap(BITMAP_MINUS_ID), Bitmap(BITMAP_MINUS_ID));
 800374c:	aa05      	add	r2, sp, #20
 800374e:	a904      	add	r1, sp, #16
 8003750:	4630      	mov	r0, r6
 8003752:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003756:	f8ad 3014 	strh.w	r3, [sp, #20]
 800375a:	f7ff fe26 	bl	80033aa <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 800375e:	2312      	movs	r3, #18
 8003760:	f8c4 32c0 	str.w	r3, [r4, #704]	; 0x2c0
    down.setPosition(82, 261, 76, 39);
 8003764:	2327      	movs	r3, #39	; 0x27
 8003766:	9300      	str	r3, [sp, #0]
 8003768:	4630      	mov	r0, r6
 800376a:	234c      	movs	r3, #76	; 0x4c
 800376c:	f240 1205 	movw	r2, #261	; 0x105
 8003770:	2152      	movs	r1, #82	; 0x52
 8003772:	f7ff fe48 	bl	8003406 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003776:	9b03      	ldr	r3, [sp, #12]
 8003778:	f8c4 3284 	str.w	r3, [r4, #644]	; 0x284
    humWindow1.setXY(20, 120);
 800377c:	ee18 0a90 	vmov	r0, s17
 8003780:	2278      	movs	r2, #120	; 0x78
 8003782:	2114      	movs	r1, #20
 8003784:	f7ff f8e2 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
    tempWindow1.setXY(20, 20);
 8003788:	2214      	movs	r2, #20
 800378a:	4611      	mov	r1, r2
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800378c:	1d25      	adds	r5, r4, #4
 800378e:	ee19 0a10 	vmov	r0, s18
 8003792:	f7ff f8db 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 8003796:	4651      	mov	r1, sl
 8003798:	4628      	mov	r0, r5
 800379a:	f005 feb9 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800379e:	ee18 1a10 	vmov	r1, s16
 80037a2:	4628      	mov	r0, r5
 80037a4:	f005 feb4 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037a8:	4649      	mov	r1, r9
 80037aa:	4628      	mov	r0, r5
 80037ac:	f005 feb0 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037b0:	4641      	mov	r1, r8
 80037b2:	4628      	mov	r0, r5
 80037b4:	f005 feac 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037b8:	4639      	mov	r1, r7
 80037ba:	4628      	mov	r0, r5
 80037bc:	f005 fea8 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037c0:	4631      	mov	r1, r6
 80037c2:	4628      	mov	r0, r5
 80037c4:	f005 fea4 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037c8:	ee18 1a90 	vmov	r1, s17
 80037cc:	4628      	mov	r0, r5
 80037ce:	f005 fe9f 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037d2:	4628      	mov	r0, r5
 80037d4:	ee19 1a10 	vmov	r1, s18
 80037d8:	f005 fe9a 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80037dc:	4620      	mov	r0, r4
 80037de:	b007      	add	sp, #28
 80037e0:	ecbd 8b04 	vpop	{d8-d9}
 80037e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037e8:	0801e168 	.word	0x0801e168
 80037ec:	0801e150 	.word	0x0801e150
 80037f0:	08003371 	.word	0x08003371
 80037f4:	0014000a 	.word	0x0014000a

080037f8 <_ZN12tempDispBase10initializeEv>:
    add(digits1);
}

void tempDispBase::initialize()
{
    digits1.initialize();
 80037f8:	3068      	adds	r0, #104	; 0x68
 80037fa:	f000 bba5 	b.w	8003f48 <_ZN6digits10initializeEv>
	...

08003800 <_ZN12tempDispBaseD1Ev>:
 8003800:	b538      	push	{r3, r4, r5, lr}
 8003802:	4b08      	ldr	r3, [pc, #32]	; (8003824 <_ZN12tempDispBaseD1Ev+0x24>)
 8003804:	6003      	str	r3, [r0, #0]
 8003806:	4b08      	ldr	r3, [pc, #32]	; (8003828 <_ZN12tempDispBaseD1Ev+0x28>)
 8003808:	6683      	str	r3, [r0, #104]	; 0x68
 800380a:	4604      	mov	r4, r0
 800380c:	f44f 7569 	mov.w	r5, #932	; 0x3a4
class Vector
 8003810:	5963      	ldr	r3, [r4, r5]
 8003812:	1960      	adds	r0, r4, r5
 8003814:	681b      	ldr	r3, [r3, #0]
 8003816:	3d40      	subs	r5, #64	; 0x40
 8003818:	4798      	blx	r3
 800381a:	f5b5 7f29 	cmp.w	r5, #676	; 0x2a4
 800381e:	d1f7      	bne.n	8003810 <_ZN12tempDispBaseD1Ev+0x10>
 8003820:	4620      	mov	r0, r4
 8003822:	bd38      	pop	{r3, r4, r5, pc}
 8003824:	0801e1ac 	.word	0x0801e1ac
 8003828:	0801e554 	.word	0x0801e554

0800382c <_ZN12tempDispBaseD0Ev>:
 800382c:	b510      	push	{r4, lr}
 800382e:	4604      	mov	r4, r0
 8003830:	f7ff ffe6 	bl	8003800 <_ZN12tempDispBaseD1Ev>
 8003834:	4620      	mov	r0, r4
 8003836:	f240 410c 	movw	r1, #1036	; 0x40c
 800383a:	f018 f8c0 	bl	801b9be <_ZdlPvj>
 800383e:	4620      	mov	r0, r4
 8003840:	bd10      	pop	{r4, pc}
	...

08003844 <_ZN12tempDispBaseC1Ev>:
tempDispBase::tempDispBase()
 8003844:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8003848:	4606      	mov	r6, r0
        : x(0), y(0), width(0), height(0)
 800384a:	2500      	movs	r5, #0
 800384c:	4a29      	ldr	r2, [pc, #164]	; (80038f4 <_ZN12tempDispBaseC1Ev+0xb0>)
 800384e:	6285      	str	r5, [r0, #40]	; 0x28
          visible(true)
 8003850:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003854:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8003858:	e9c0 5503 	strd	r5, r5, [r0, #12]
 800385c:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8003860:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8003864:	8483      	strh	r3, [r0, #36]	; 0x24
 8003866:	f846 2b2c 	str.w	r2, [r6], #44
 800386a:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800386e:	4b22      	ldr	r3, [pc, #136]	; (80038f8 <_ZN12tempDispBaseC1Ev+0xb4>)
 8003870:	62c3      	str	r3, [r0, #44]	; 0x2c
 8003872:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003876:	f8df 808c 	ldr.w	r8, [pc, #140]	; 8003904 <_ZN12tempDispBaseC1Ev+0xc0>
 800387a:	f8a0 3058 	strh.w	r3, [r0, #88]	; 0x58
 800387e:	f100 0768 	add.w	r7, r0, #104	; 0x68
 8003882:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8003886:	4604      	mov	r4, r0
 8003888:	e9c0 550c 	strd	r5, r5, [r0, #48]	; 0x30
 800388c:	e9c0 550e 	strd	r5, r5, [r0, #56]	; 0x38
 8003890:	e9c0 5510 	strd	r5, r5, [r0, #64]	; 0x40
 8003894:	e9c0 5512 	strd	r5, r5, [r0, #72]	; 0x48
 8003898:	f8c0 8054 	str.w	r8, [r0, #84]	; 0x54
        : color(col)
 800389c:	65c5      	str	r5, [r0, #92]	; 0x5c
 800389e:	6603      	str	r3, [r0, #96]	; 0x60
 80038a0:	f8a0 5064 	strh.w	r5, [r0, #100]	; 0x64
 80038a4:	4638      	mov	r0, r7
 80038a6:	f000 fa73 	bl	8003d90 <_ZN6digitsC1Ev>
        rect.width = width;
 80038aa:	4b14      	ldr	r3, [pc, #80]	; (80038fc <_ZN12tempDispBaseC1Ev+0xb8>)
 80038ac:	60a3      	str	r3, [r4, #8]
        setX(x);
 80038ae:	4630      	mov	r0, r6
 80038b0:	2144      	movs	r1, #68	; 0x44
 80038b2:	f7ff f801 	bl	80028b8 <_ZN8touchgfx8Drawable4setXEs>
        setY(y);
 80038b6:	4630      	mov	r0, r6
 80038b8:	2103      	movs	r1, #3
 80038ba:	f7fe ffff 	bl	80028bc <_ZN8touchgfx8Drawable4setYEs>
        this->color = color;
 80038be:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80038c2:	65e3      	str	r3, [r4, #92]	; 0x5c
    unit.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4FSJ));
 80038c4:	4669      	mov	r1, sp
 80038c6:	4630      	mov	r0, r6
        linespace = space;
 80038c8:	f8a4 5060 	strh.w	r5, [r4, #96]	; 0x60
 80038cc:	f8cd 8000 	str.w	r8, [sp]
 80038d0:	f8ad 5004 	strh.w	r5, [sp, #4]
 80038d4:	f007 fa05 	bl	800ace2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        rect.x = x;
 80038d8:	4b09      	ldr	r3, [pc, #36]	; (8003900 <_ZN12tempDispBaseC1Ev+0xbc>)
 80038da:	66e3      	str	r3, [r4, #108]	; 0x6c
    add(unit);
 80038dc:	4631      	mov	r1, r6
 80038de:	4620      	mov	r0, r4
 80038e0:	f005 fe16 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(digits1);
 80038e4:	4620      	mov	r0, r4
 80038e6:	4639      	mov	r1, r7
 80038e8:	f005 fe12 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80038ec:	4620      	mov	r0, r4
 80038ee:	b002      	add	sp, #8
 80038f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80038f4:	0801e1ac 	.word	0x0801e1ac
 80038f8:	0801f45c 	.word	0x0801f45c
 80038fc:	00240056 	.word	0x00240056
 8003900:	0002000f 	.word	0x0002000f
 8003904:	0801d6b0 	.word	0x0801d6b0

08003908 <_ZN14tempWindowBase13toggleTempBtnEv>:
     * Virtual Action Handlers
     */
    virtual void toggleTempBtn()
    {
        // Override and implement this function in tempWindow
    }
 8003908:	4770      	bx	lr

0800390a <_ZN8touchgfx8CallbackI14tempWindowBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800390a:	4770      	bx	lr

0800390c <_ZN8touchgfx8CallbackI14tempWindowBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800390c:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800390e:	68c2      	ldr	r2, [r0, #12]
 8003910:	6844      	ldr	r4, [r0, #4]
 8003912:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003914:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003916:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800391a:	07d2      	lsls	r2, r2, #31
 800391c:	bf48      	it	mi
 800391e:	5962      	ldrmi	r2, [r4, r5]
 8003920:	689b      	ldr	r3, [r3, #8]
    }
 8003922:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003924:	bf48      	it	mi
 8003926:	58d3      	ldrmi	r3, [r2, r3]
 8003928:	4718      	bx	r3

0800392a <_ZNK8touchgfx8CallbackI14tempWindowBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800392a:	6843      	ldr	r3, [r0, #4]
 800392c:	b12b      	cbz	r3, 800393a <_ZNK8touchgfx8CallbackI14tempWindowBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 800392e:	6883      	ldr	r3, [r0, #8]
 8003930:	b92b      	cbnz	r3, 800393e <_ZNK8touchgfx8CallbackI14tempWindowBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8003932:	68c0      	ldr	r0, [r0, #12]
 8003934:	f000 0001 	and.w	r0, r0, #1
 8003938:	4770      	bx	lr
 800393a:	4618      	mov	r0, r3
 800393c:	4770      	bx	lr
 800393e:	2001      	movs	r0, #1
    }
 8003940:	4770      	bx	lr

08003942 <_ZN8touchgfx8CallbackI14tempWindowBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003942:	b510      	push	{r4, lr}
 8003944:	2110      	movs	r1, #16
 8003946:	4604      	mov	r4, r0
 8003948:	f018 f839 	bl	801b9be <_ZdlPvj>
 800394c:	4620      	mov	r0, r4
 800394e:	bd10      	pop	{r4, pc}

08003950 <_ZN14tempWindowBase10initializeEv>:
    add(tempDisp2);
    add(flexButton1);
}

void tempWindowBase::initialize()
{
 8003950:	b510      	push	{r4, lr}
 8003952:	4604      	mov	r4, r0
    tempDisp1.initialize();
 8003954:	30b0      	adds	r0, #176	; 0xb0
 8003956:	f000 fca1 	bl	800429c <_ZN8tempDisp10initializeEv>
    tempDisp2.initialize();
 800395a:	f204 40bc 	addw	r0, r4, #1212	; 0x4bc
}
 800395e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    tempDisp2.initialize();
 8003962:	f000 bc9b 	b.w	800429c <_ZN8tempDisp10initializeEv>

08003966 <_ZN14tempWindowBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void tempWindowBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
 8003966:	f600 02c8 	addw	r2, r0, #2248	; 0x8c8
 800396a:	428a      	cmp	r2, r1
 800396c:	d103      	bne.n	8003976 <_ZN14tempWindowBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    {
        //Interaction1
        //When flexButton1 clicked call virtual function
        //Call toggleTempBtn
        toggleTempBtn();
 800396e:	6803      	ldr	r3, [r0, #0]
 8003970:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003974:	4718      	bx	r3
    }
}
 8003976:	4770      	bx	lr

08003978 <_ZN14tempWindowBaseC1Ev>:
tempWindowBase::tempWindowBase() :
 8003978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800397c:	4604      	mov	r4, r0
 800397e:	b087      	sub	sp, #28
    flexButtonCallback(this, &tempWindowBase::flexButtonCallbackHandler)
 8003980:	4627      	mov	r7, r4
 8003982:	2500      	movs	r5, #0
 8003984:	f7fe ffd0 	bl	8002928 <_ZN8touchgfx8DrawableC1Ev>
 8003988:	4b62      	ldr	r3, [pc, #392]	; (8003b14 <_ZN14tempWindowBaseC1Ev+0x19c>)
 800398a:	62a5      	str	r5, [r4, #40]	; 0x28
 800398c:	f847 3b2c 	str.w	r3, [r7], #44
 8003990:	f104 0958 	add.w	r9, r4, #88	; 0x58
 8003994:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8003998:	a904      	add	r1, sp, #16
 800399a:	4638      	mov	r0, r7
 800399c:	f104 0884 	add.w	r8, r4, #132	; 0x84
 80039a0:	f8ad 6010 	strh.w	r6, [sp, #16]
 80039a4:	f7fe ffe0 	bl	8002968 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80039a8:	a904      	add	r1, sp, #16
 80039aa:	4648      	mov	r0, r9
 80039ac:	f104 0bb0 	add.w	fp, r4, #176	; 0xb0
 80039b0:	f8ad 6010 	strh.w	r6, [sp, #16]
 80039b4:	f7fe ffd8 	bl	8002968 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80039b8:	a904      	add	r1, sp, #16
 80039ba:	4640      	mov	r0, r8
 80039bc:	f204 4abc 	addw	sl, r4, #1212	; 0x4bc
 80039c0:	f8ad 6010 	strh.w	r6, [sp, #16]
 80039c4:	f7fe ffd0 	bl	8002968 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80039c8:	4658      	mov	r0, fp
 80039ca:	f604 06c8 	addw	r6, r4, #2248	; 0x8c8
 80039ce:	f000 fc95 	bl	80042fc <_ZN8tempDispC1Ev>
 80039d2:	4650      	mov	r0, sl
 80039d4:	f000 fc92 	bl	80042fc <_ZN8tempDispC1Ev>
 80039d8:	4630      	mov	r0, r6
 80039da:	f7ff fb47 	bl	800306c <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80039de:	4b4e      	ldr	r3, [pc, #312]	; (8003b18 <_ZN14tempWindowBaseC1Ev+0x1a0>)
 80039e0:	f8c4 3970 	str.w	r3, [r4, #2416]	; 0x970
 80039e4:	4b4d      	ldr	r3, [pc, #308]	; (8003b1c <_ZN14tempWindowBaseC1Ev+0x1a4>)
 80039e6:	f8c4 3978 	str.w	r3, [r4, #2424]	; 0x978
        rect.width = width;
 80039ea:	4b4d      	ldr	r3, [pc, #308]	; (8003b20 <_ZN14tempWindowBaseC1Ev+0x1a8>)
 80039ec:	60a3      	str	r3, [r4, #8]
    image1.setXY(0, 30);
 80039ee:	221e      	movs	r2, #30
 80039f0:	4629      	mov	r1, r5
 80039f2:	4638      	mov	r0, r7
 80039f4:	f8c4 4974 	str.w	r4, [r4, #2420]	; 0x974
 80039f8:	f8c4 597c 	str.w	r5, [r4, #2428]	; 0x97c
 80039fc:	f7fe ffa6 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 8003a00:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DISP_BACK_ID));
 8003a02:	a904      	add	r1, sp, #16
 8003a04:	4638      	mov	r0, r7
 8003a06:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003a0a:	f007 faaa 	bl	800af62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(107, 37);
 8003a0e:	2225      	movs	r2, #37	; 0x25
 8003a10:	4648      	mov	r0, r9
 8003a12:	216b      	movs	r1, #107	; 0x6b
 8003a14:	f7fe ff9a 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 8003a18:	230a      	movs	r3, #10
    image3.setBitmap(touchgfx::Bitmap(BITMAP_DISP_RIGHT_ID));
 8003a1a:	a904      	add	r1, sp, #16
 8003a1c:	4648      	mov	r0, r9
 8003a1e:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003a22:	f007 fa9e 	bl	800af62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image2.setXY(7, 37);
 8003a26:	2225      	movs	r2, #37	; 0x25
 8003a28:	4640      	mov	r0, r8
 8003a2a:	2107      	movs	r1, #7
 8003a2c:	f7fe ff8e 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 8003a30:	2309      	movs	r3, #9
    image2.setBitmap(touchgfx::Bitmap(BITMAP_DISP_LEFT_ID));
 8003a32:	a904      	add	r1, sp, #16
 8003a34:	4640      	mov	r0, r8
 8003a36:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003a3a:	f007 fa92 	bl	800af62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    tempDisp1.setXY(7, 37);
 8003a3e:	4658      	mov	r0, fp
 8003a40:	2225      	movs	r2, #37	; 0x25
 8003a42:	2107      	movs	r1, #7
 8003a44:	f7fe ff82 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
    tempDisp2.setXY(107, 37);
 8003a48:	4650      	mov	r0, sl
 8003a4a:	2225      	movs	r2, #37	; 0x25
 8003a4c:	216b      	movs	r1, #107	; 0x6b
 8003a4e:	f7fe ff7d 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 8003a52:	230b      	movs	r3, #11
 8003a54:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003a58:	230c      	movs	r3, #12
    flexButton1.setBitmaps(Bitmap(BITMAP_LABEL_BACGROUND_ID), Bitmap(BITMAP_LABEL_BACGROUND_CLICKED_ID));
 8003a5a:	eb0d 0103 	add.w	r1, sp, r3
 8003a5e:	aa04      	add	r2, sp, #16
 8003a60:	4630      	mov	r0, r6
 8003a62:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003a66:	f7ff faae 	bl	8002fc6 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>
 8003a6a:	462a      	mov	r2, r5
 8003a6c:	4629      	mov	r1, r5
 8003a6e:	f604 00fc 	addw	r0, r4, #2300	; 0x8fc
 8003a72:	f7fe ff6b 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 8003a76:	4b2b      	ldr	r3, [pc, #172]	; (8003b24 <_ZN14tempWindowBaseC1Ev+0x1ac>)
 8003a78:	9304      	str	r3, [sp, #16]
        text.setTypedText(t);
 8003a7a:	f604 102c 	addw	r0, r4, #2348	; 0x92c
 8003a7e:	231b      	movs	r3, #27
 8003a80:	a904      	add	r1, sp, #16
 8003a82:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003a86:	9001      	str	r0, [sp, #4]
 8003a88:	f007 f92b 	bl	800ace2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        setWidthHeight(drawable.getWidth(), drawable.getHeight());
 8003a8c:	f9b4 28d2 	ldrsh.w	r2, [r4, #2258]	; 0x8d2
 8003a90:	f9b4 18d0 	ldrsh.w	r1, [r4, #2256]	; 0x8d0
 8003a94:	9801      	ldr	r0, [sp, #4]
 8003a96:	f7ff fa89 	bl	8002fac <_ZN8touchgfx8Drawable14setWidthHeightEss>
        setXY(x, y);
 8003a9a:	9801      	ldr	r0, [sp, #4]
 8003a9c:	462a      	mov	r2, r5
 8003a9e:	4629      	mov	r1, r5
 8003aa0:	f7fe ff54 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8003aa4:	9801      	ldr	r0, [sp, #4]
 8003aa6:	221e      	movs	r2, #30
 8003aa8:	21c8      	movs	r1, #200	; 0xc8
 8003aaa:	f7ff fa7f 	bl	8002fac <_ZN8touchgfx8Drawable14setWidthHeightEss>
        colorReleased = newColorReleased;
 8003aae:	4b1e      	ldr	r3, [pc, #120]	; (8003b28 <_ZN14tempWindowBaseC1Ev+0x1b0>)
 8003ab0:	f8c4 3968 	str.w	r3, [r4, #2408]	; 0x968
        colorPressed = newColorPressed;
 8003ab4:	f8c4 396c 	str.w	r3, [r4, #2412]	; 0x96c
        handlePressedUpdated();
 8003ab8:	4630      	mov	r0, r6
 8003aba:	f7ff fa0a 	bl	8002ed2 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
        setXY(x, y);
 8003abe:	462a      	mov	r2, r5
 8003ac0:	4629      	mov	r1, r5
 8003ac2:	4630      	mov	r0, r6
 8003ac4:	f7fe ff42 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8003ac8:	221e      	movs	r2, #30
 8003aca:	4630      	mov	r0, r6
 8003acc:	21c8      	movs	r1, #200	; 0xc8
 8003ace:	f7ff fa6d 	bl	8002fac <_ZN8touchgfx8Drawable14setWidthHeightEss>
    flexButton1.setAction(flexButtonCallback);
 8003ad2:	f504 6317 	add.w	r3, r4, #2416	; 0x970
 8003ad6:	f8c4 38f8 	str.w	r3, [r4, #2296]	; 0x8f8
    add(image1);
 8003ada:	4639      	mov	r1, r7
 8003adc:	4620      	mov	r0, r4
 8003ade:	f005 fd17 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(image3);
 8003ae2:	4649      	mov	r1, r9
 8003ae4:	4620      	mov	r0, r4
 8003ae6:	f005 fd13 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(image2);
 8003aea:	4641      	mov	r1, r8
 8003aec:	4620      	mov	r0, r4
 8003aee:	f005 fd0f 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(tempDisp1);
 8003af2:	4659      	mov	r1, fp
 8003af4:	4620      	mov	r0, r4
 8003af6:	f005 fd0b 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(tempDisp2);
 8003afa:	4651      	mov	r1, sl
 8003afc:	4620      	mov	r0, r4
 8003afe:	f005 fd07 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton1);
 8003b02:	4620      	mov	r0, r4
 8003b04:	4631      	mov	r1, r6
 8003b06:	f005 fd03 	bl	8009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003b0a:	4620      	mov	r0, r4
 8003b0c:	b007      	add	sp, #28
 8003b0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b12:	bf00      	nop
 8003b14:	0801e254 	.word	0x0801e254
 8003b18:	0801e23c 	.word	0x0801e23c
 8003b1c:	08003967 	.word	0x08003967
 8003b20:	005000c8 	.word	0x005000c8
 8003b24:	0801d6b0 	.word	0x0801d6b0
 8003b28:	ff0a0a0a 	.word	0xff0a0a0a

08003b2c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003b2c:	4770      	bx	lr

08003b2e <_ZN19FrontendApplicationD0Ev>:
 8003b2e:	b510      	push	{r4, lr}
 8003b30:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8003b34:	4604      	mov	r4, r0
 8003b36:	f017 ff42 	bl	801b9be <_ZdlPvj>
 8003b3a:	4620      	mov	r0, r4
 8003b3c:	bd10      	pop	{r4, pc}

08003b3e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003b3e:	b510      	push	{r4, lr}
 8003b40:	4604      	mov	r4, r0
    {
        model.tick();
 8003b42:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8003b46:	f000 f833 	bl	8003bb0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003b4a:	4620      	mov	r0, r4
    }
 8003b4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003b50:	f008 bdf8 	b.w	800c744 <_ZN8touchgfx11Application15handleTickEventEv>

08003b54 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003b54:	b510      	push	{r4, lr}
 8003b56:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003b58:	f7fe fae4 	bl	8002124 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003b5c:	4b01      	ldr	r3, [pc, #4]	; (8003b64 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8003b5e:	6023      	str	r3, [r4, #0]
{

}
 8003b60:	4620      	mov	r0, r4
 8003b62:	bd10      	pop	{r4, pc}
 8003b64:	0801e2e8 	.word	0x0801e2e8

08003b68 <_ZN5Model11sendRequestEPf>:
	}
}

void Model::sendRequest(float *data)
{
	xQueueSend(messageQ2, data, 0);
 8003b68:	4802      	ldr	r0, [pc, #8]	; (8003b74 <_ZN5Model11sendRequestEPf+0xc>)
 8003b6a:	2300      	movs	r3, #0
 8003b6c:	6800      	ldr	r0, [r0, #0]
 8003b6e:	461a      	mov	r2, r3
 8003b70:	f004 b91e 	b.w	8007db0 <xQueueGenericSend>
 8003b74:	200027e0 	.word	0x200027e0

08003b78 <_ZN5ModelC1Ev>:
Model::Model() : modelListener(0)
 8003b78:	4b0a      	ldr	r3, [pc, #40]	; (8003ba4 <_ZN5ModelC1Ev+0x2c>)
 8003b7a:	2200      	movs	r2, #0
 8003b7c:	b510      	push	{r4, lr}
	messageQ = xQueueGenericCreate(3, sizeof(float), 0);
 8003b7e:	2104      	movs	r1, #4
Model::Model() : modelListener(0)
 8003b80:	4604      	mov	r4, r0
 8003b82:	6003      	str	r3, [r0, #0]
 8003b84:	6042      	str	r2, [r0, #4]
	messageQ = xQueueGenericCreate(3, sizeof(float), 0);
 8003b86:	2003      	movs	r0, #3
 8003b88:	f004 f8aa 	bl	8007ce0 <xQueueGenericCreate>
 8003b8c:	4b06      	ldr	r3, [pc, #24]	; (8003ba8 <_ZN5ModelC1Ev+0x30>)
	messageQ2 = xQueueGenericCreate(3, sizeof(float), 0);
 8003b8e:	2200      	movs	r2, #0
	messageQ = xQueueGenericCreate(3, sizeof(float), 0);
 8003b90:	6018      	str	r0, [r3, #0]
	messageQ2 = xQueueGenericCreate(3, sizeof(float), 0);
 8003b92:	2104      	movs	r1, #4
 8003b94:	2003      	movs	r0, #3
 8003b96:	f004 f8a3 	bl	8007ce0 <xQueueGenericCreate>
 8003b9a:	4b04      	ldr	r3, [pc, #16]	; (8003bac <_ZN5ModelC1Ev+0x34>)
 8003b9c:	6018      	str	r0, [r3, #0]
}
 8003b9e:	4620      	mov	r0, r4
 8003ba0:	bd10      	pop	{r4, pc}
 8003ba2:	bf00      	nop
 8003ba4:	0801e32c 	.word	0x0801e32c
 8003ba8:	200027dc 	.word	0x200027dc
 8003bac:	200027e0 	.word	0x200027e0

08003bb0 <_ZN5Model4tickEv>:
	if (xQueueReceive(messageQ, &r, 0) == pdTRUE)
 8003bb0:	4b02      	ldr	r3, [pc, #8]	; (8003bbc <_ZN5Model4tickEv+0xc>)
 8003bb2:	4903      	ldr	r1, [pc, #12]	; (8003bc0 <_ZN5Model4tickEv+0x10>)
 8003bb4:	6818      	ldr	r0, [r3, #0]
 8003bb6:	2200      	movs	r2, #0
 8003bb8:	f004 ba62 	b.w	8008080 <xQueueReceive>
 8003bbc:	200027dc 	.word	0x200027dc
 8003bc0:	200027e4 	.word	0x200027e4

08003bc4 <_ZN6digitsD1Ev>:
 8003bc4:	b538      	push	{r3, r4, r5, lr}
 8003bc6:	4b07      	ldr	r3, [pc, #28]	; (8003be4 <_ZN6digitsD1Ev+0x20>)
 8003bc8:	6003      	str	r3, [r0, #0]
 8003bca:	4604      	mov	r4, r0
 8003bcc:	f44f 754f 	mov.w	r5, #828	; 0x33c
class Vector
 8003bd0:	5963      	ldr	r3, [r4, r5]
 8003bd2:	1960      	adds	r0, r4, r5
 8003bd4:	681b      	ldr	r3, [r3, #0]
 8003bd6:	3d40      	subs	r5, #64	; 0x40
 8003bd8:	4798      	blx	r3
 8003bda:	f5b5 7f0f 	cmp.w	r5, #572	; 0x23c
 8003bde:	d1f7      	bne.n	8003bd0 <_ZN6digitsD1Ev+0xc>
 8003be0:	4620      	mov	r0, r4
 8003be2:	bd38      	pop	{r3, r4, r5, pc}
 8003be4:	0801e554 	.word	0x0801e554

08003be8 <_ZN6digits20changeCursorPositionEi>:
	this->decimalsBox.invalidate();
}

void digits::changeCursorPosition(int direction)
{
	this->resetCursor();
 8003be8:	6803      	ldr	r3, [r0, #0]
{
 8003bea:	b570      	push	{r4, r5, r6, lr}
 8003bec:	4604      	mov	r4, r0
	this->resetCursor();
 8003bee:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
{
 8003bf2:	460d      	mov	r5, r1
	this->resetCursor();
 8003bf4:	4798      	blx	r3

	this->newCursorPosition += direction;
 8003bf6:	f8d4 1398 	ldr.w	r1, [r4, #920]	; 0x398
 8003bfa:	4429      	add	r1, r5

	if (this->newCursorPosition == -1) this->newCursorPosition = 0;
 8003bfc:	1c4b      	adds	r3, r1, #1
 8003bfe:	d103      	bne.n	8003c08 <_ZN6digits20changeCursorPositionEi+0x20>
 8003c00:	2300      	movs	r3, #0
	else if (this->newCursorPosition == 4) this->newCursorPosition = 3;
 8003c02:	f8c4 3398 	str.w	r3, [r4, #920]	; 0x398
 8003c06:	e003      	b.n	8003c10 <_ZN6digits20changeCursorPositionEi+0x28>
 8003c08:	2904      	cmp	r1, #4
 8003c0a:	d008      	beq.n	8003c1e <_ZN6digits20changeCursorPositionEi+0x36>
	this->newCursorPosition += direction;
 8003c0c:	f8c4 1398 	str.w	r1, [r4, #920]	; 0x398

	this->showCursor();
 8003c10:	6823      	ldr	r3, [r4, #0]
 8003c12:	4620      	mov	r0, r4
 8003c14:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
}
 8003c18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	this->showCursor();
 8003c1c:	4718      	bx	r3
	else if (this->newCursorPosition == 4) this->newCursorPosition = 3;
 8003c1e:	2303      	movs	r3, #3
 8003c20:	e7ef      	b.n	8003c02 <_ZN6digits20changeCursorPositionEi+0x1a>

08003c22 <_ZN6digits11changeValueEi>:

void digits::changeValue(int value)
{
	switch (value) {
 8003c22:	1c4b      	adds	r3, r1, #1
 8003c24:	d010      	beq.n	8003c48 <_ZN6digits11changeValueEi+0x26>
 8003c26:	2901      	cmp	r1, #1
 8003c28:	d10a      	bne.n	8003c40 <_ZN6digits11changeValueEi+0x1e>
	case 1:
		if (this->values[newCursorPosition] < 9) this->values[newCursorPosition]++;
 8003c2a:	f8b0 3398 	ldrh.w	r3, [r0, #920]	; 0x398
 8003c2e:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8003c32:	f8d3 2380 	ldr.w	r2, [r3, #896]	; 0x380
 8003c36:	2a08      	cmp	r2, #8
 8003c38:	dc02      	bgt.n	8003c40 <_ZN6digits11changeValueEi+0x1e>
 8003c3a:	3201      	adds	r2, #1
		break;
	case -1:
		if (this->values[newCursorPosition] > 0) this->values[newCursorPosition]--;
 8003c3c:	f8c3 2380 	str.w	r2, [r3, #896]	; 0x380
		break;
	}
	this->updateValue();
 8003c40:	6803      	ldr	r3, [r0, #0]
 8003c42:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8003c46:	4718      	bx	r3
		if (this->values[newCursorPosition] > 0) this->values[newCursorPosition]--;
 8003c48:	f8b0 3398 	ldrh.w	r3, [r0, #920]	; 0x398
 8003c4c:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8003c50:	f8d3 2380 	ldr.w	r2, [r3, #896]	; 0x380
 8003c54:	2a00      	cmp	r2, #0
 8003c56:	ddf3      	ble.n	8003c40 <_ZN6digits11changeValueEi+0x1e>
 8003c58:	3a01      	subs	r2, #1
 8003c5a:	e7ef      	b.n	8003c3c <_ZN6digits11changeValueEi+0x1a>

08003c5c <_ZN6digits15initializeValueEf>:
}

void digits::initializeValue(float value)
{
	int hundreds = (int) value / 100;
 8003c5c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
{
 8003c60:	b537      	push	{r0, r1, r2, r4, r5, lr}
	int hundreds = (int) value / 100;
 8003c62:	ee17 1a90 	vmov	r1, s15
 8003c66:	2364      	movs	r3, #100	; 0x64
 8003c68:	fb91 f1f3 	sdiv	r1, r1, r3
	int tens = (int) (value - hundreds * 100) / 10;
 8003c6c:	434b      	muls	r3, r1
 8003c6e:	ee07 3a90 	vmov	s15, r3
 8003c72:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003c76:	230a      	movs	r3, #10
 8003c78:	ee30 0a67 	vsub.f32	s0, s0, s15
 8003c7c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003c80:	ee17 2a90 	vmov	r2, s15
 8003c84:	fb92 f2f3 	sdiv	r2, r2, r3
	int ones = (int) (value - hundreds * 100 - tens * 10);
 8003c88:	fb03 f402 	mul.w	r4, r3, r2
 8003c8c:	ee07 4a90 	vmov	s15, r4
 8003c90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	int decimals = (int) (value - hundreds * 100 - tens * 10 - ones) * 10;

	uploadValue(hundreds, tens, ones, decimals);
 8003c94:	6804      	ldr	r4, [r0, #0]
	int ones = (int) (value - hundreds * 100 - tens * 10);
 8003c96:	ee30 0a67 	vsub.f32	s0, s0, s15
 8003c9a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
	int decimals = (int) (value - hundreds * 100 - tens * 10 - ones) * 10;
 8003c9e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003ca2:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003ca6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003caa:	ee10 5a10 	vmov	r5, s0
 8003cae:	436b      	muls	r3, r5
	uploadValue(hundreds, tens, ones, decimals);
 8003cb0:	9300      	str	r3, [sp, #0]
 8003cb2:	f8d4 4088 	ldr.w	r4, [r4, #136]	; 0x88
 8003cb6:	ee17 3a90 	vmov	r3, s15
 8003cba:	47a0      	blx	r4
}
 8003cbc:	b003      	add	sp, #12
 8003cbe:	bd30      	pop	{r4, r5, pc}

08003cc0 <_ZN6digits11uploadValueEiiii>:

void digits::uploadValue(int hundreds, int tens, int ones, int decimals)
{
 8003cc0:	b410      	push	{r4}
	this->values[3] = hundreds;
	this->values[2] = tens;
	this->values[1] = ones;
 8003cc2:	f8c0 3384 	str.w	r3, [r0, #900]	; 0x384
	this->values[0] = decimals;
 8003cc6:	9b01      	ldr	r3, [sp, #4]
 8003cc8:	f8c0 3380 	str.w	r3, [r0, #896]	; 0x380

	this->updateValue();
 8003ccc:	6803      	ldr	r3, [r0, #0]
}
 8003cce:	f85d 4b04 	ldr.w	r4, [sp], #4
	this->updateValue();
 8003cd2:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
	this->values[2] = tens;
 8003cd6:	e9c0 21e2 	strd	r2, r1, [r0, #904]	; 0x388
	this->updateValue();
 8003cda:	4718      	bx	r3

08003cdc <_ZN6digits10showCursorEv>:
	this->decimals.invalidate();
}

void digits::showCursor()
{
	this->boxes[newCursorPosition]->setVisible(true);
 8003cdc:	f8b0 3398 	ldrh.w	r3, [r0, #920]	; 0x398
 8003ce0:	eb00 0083 	add.w	r0, r0, r3, lsl #2
        visible = vis;
 8003ce4:	2301      	movs	r3, #1
 8003ce6:	f8d0 0268 	ldr.w	r0, [r0, #616]	; 0x268
 8003cea:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
	this->boxes[newCursorPosition]->invalidate();
 8003cee:	6803      	ldr	r3, [r0, #0]
 8003cf0:	695b      	ldr	r3, [r3, #20]
 8003cf2:	4718      	bx	r3

08003cf4 <_ZN6digits11resetCursorEv>:
}

void digits::resetCursor()
{
	this->boxes[newCursorPosition]->setVisible(false);
 8003cf4:	f8b0 3398 	ldrh.w	r3, [r0, #920]	; 0x398
 8003cf8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8003cfc:	2300      	movs	r3, #0
 8003cfe:	f8d0 0268 	ldr.w	r0, [r0, #616]	; 0x268
 8003d02:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
	this->boxes[newCursorPosition]->invalidate();
 8003d06:	6803      	ldr	r3, [r0, #0]
 8003d08:	695b      	ldr	r3, [r3, #20]
 8003d0a:	4718      	bx	r3

08003d0c <_ZN6digitsD0Ev>:
 8003d0c:	b510      	push	{r4, lr}
 8003d0e:	4604      	mov	r4, r0
 8003d10:	f7ff ff58 	bl	8003bc4 <_ZN6digitsD1Ev>
 8003d14:	4620      	mov	r0, r4
 8003d16:	f44f 7169 	mov.w	r1, #932	; 0x3a4
 8003d1a:	f017 fe50 	bl	801b9be <_ZdlPvj>
 8003d1e:	4620      	mov	r0, r4
 8003d20:	bd10      	pop	{r4, pc}
	...

08003d24 <_ZN6digits11updateValueEv>:
{
 8003d24:	b510      	push	{r4, lr}
 8003d26:	4604      	mov	r4, r0
	touchgfx::Unicode::snprintf(decimalsBuffer, DECIMALS_SIZE, "%d", this->values[0]);
 8003d28:	f8d0 3380 	ldr.w	r3, [r0, #896]	; 0x380
 8003d2c:	4a17      	ldr	r2, [pc, #92]	; (8003d8c <_ZN6digits11updateValueEv+0x68>)
 8003d2e:	210a      	movs	r1, #10
 8003d30:	f500 7006 	add.w	r0, r0, #536	; 0x218
 8003d34:	f00b fd26 	bl	800f784 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	touchgfx::Unicode::snprintf(onesBuffer, ONES_SIZE, "%d", this->values[1]);
 8003d38:	f8d4 3384 	ldr.w	r3, [r4, #900]	; 0x384
 8003d3c:	4a13      	ldr	r2, [pc, #76]	; (8003d8c <_ZN6digits11updateValueEv+0x68>)
 8003d3e:	210a      	movs	r1, #10
 8003d40:	f504 700b 	add.w	r0, r4, #556	; 0x22c
 8003d44:	f00b fd1e 	bl	800f784 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	touchgfx::Unicode::snprintf(tensBuffer, TENS_SIZE, "%d", this->values[2]);
 8003d48:	f8d4 3388 	ldr.w	r3, [r4, #904]	; 0x388
 8003d4c:	4a0f      	ldr	r2, [pc, #60]	; (8003d8c <_ZN6digits11updateValueEv+0x68>)
 8003d4e:	210a      	movs	r1, #10
 8003d50:	f504 7010 	add.w	r0, r4, #576	; 0x240
 8003d54:	f00b fd16 	bl	800f784 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	touchgfx::Unicode::snprintf(hundredsBuffer, HUNDREDS_SIZE, "%d", this->values[3]);
 8003d58:	f8d4 338c 	ldr.w	r3, [r4, #908]	; 0x38c
 8003d5c:	4a0b      	ldr	r2, [pc, #44]	; (8003d8c <_ZN6digits11updateValueEv+0x68>)
 8003d5e:	210a      	movs	r1, #10
 8003d60:	f504 7015 	add.w	r0, r4, #596	; 0x254
 8003d64:	f00b fd0e 	bl	800f784 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	this->hundreds.invalidate();
 8003d68:	f504 70ec 	add.w	r0, r4, #472	; 0x1d8
 8003d6c:	f009 fd99 	bl	800d8a2 <_ZNK8touchgfx8Drawable10invalidateEv>
	this->tens.invalidate();
 8003d70:	f504 70cc 	add.w	r0, r4, #408	; 0x198
 8003d74:	f009 fd95 	bl	800d8a2 <_ZNK8touchgfx8Drawable10invalidateEv>
	this->ones.invalidate();
 8003d78:	f504 70ac 	add.w	r0, r4, #344	; 0x158
 8003d7c:	f009 fd91 	bl	800d8a2 <_ZNK8touchgfx8Drawable10invalidateEv>
	this->decimals.invalidate();
 8003d80:	f104 00dc 	add.w	r0, r4, #220	; 0xdc
}
 8003d84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	this->decimals.invalidate();
 8003d88:	f009 bd8b 	b.w	800d8a2 <_ZNK8touchgfx8Drawable10invalidateEv>
 8003d8c:	0801e330 	.word	0x0801e330

08003d90 <_ZN6digitsC1Ev>:
digits::digits()
 8003d90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d92:	4604      	mov	r4, r0
 8003d94:	4e1e      	ldr	r6, [pc, #120]	; (8003e10 <_ZN6digitsC1Ev+0x80>)
        : TextArea(), wildcard(0)
 8003d96:	4d1f      	ldr	r5, [pc, #124]	; (8003e14 <_ZN6digitsC1Ev+0x84>)
 8003d98:	f7fe fe1c 	bl	80029d4 <_ZN10digitsBaseC1Ev>
 8003d9c:	4b1e      	ldr	r3, [pc, #120]	; (8003e18 <_ZN6digitsC1Ev+0x88>)
 8003d9e:	6023      	str	r3, [r4, #0]
{
public:
    /** Default constructor. Constructs an empty vector. */
    Vector()
        : _size(0)
 8003da0:	2200      	movs	r2, #0
 8003da2:	f8a4 2278 	strh.w	r2, [r4, #632]	; 0x278
 8003da6:	f504 731f 	add.w	r3, r4, #636	; 0x27c
 8003daa:	f504 705f 	add.w	r0, r4, #892	; 0x37c
          visible(true)
 8003dae:	2701      	movs	r7, #1
 8003db0:	f64f 71ff 	movw	r1, #65535	; 0xffff
        : x(0), y(0), width(0), height(0)
 8003db4:	809a      	strh	r2, [r3, #4]
 8003db6:	80da      	strh	r2, [r3, #6]
 8003db8:	811a      	strh	r2, [r3, #8]
 8003dba:	815a      	strh	r2, [r3, #10]
 8003dbc:	819a      	strh	r2, [r3, #12]
 8003dbe:	81da      	strh	r2, [r3, #14]
 8003dc0:	821a      	strh	r2, [r3, #16]
 8003dc2:	825a      	strh	r2, [r3, #18]
 8003dc4:	61da      	str	r2, [r3, #28]
 8003dc6:	841a      	strh	r2, [r3, #32]
 8003dc8:	845a      	strh	r2, [r3, #34]	; 0x22
 8003dca:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8003dce:	f883 7025 	strb.w	r7, [r3, #37]	; 0x25
 8003dd2:	629e      	str	r6, [r3, #40]	; 0x28
 8003dd4:	8599      	strh	r1, [r3, #44]	; 0x2c
        : color(col)
 8003dd6:	631a      	str	r2, [r3, #48]	; 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8003dd8:	869a      	strh	r2, [r3, #52]	; 0x34
 8003dda:	f883 1036 	strb.w	r1, [r3, #54]	; 0x36
 8003dde:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 8003de2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8003de6:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8003dea:	601d      	str	r5, [r3, #0]
 8003dec:	63da      	str	r2, [r3, #60]	; 0x3c
 8003dee:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8003df2:	3340      	adds	r3, #64	; 0x40
        : _size(0)
 8003df4:	4283      	cmp	r3, r0
 8003df6:	d1dd      	bne.n	8003db4 <_ZN6digitsC1Ev+0x24>
 8003df8:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
 8003dfc:	f8a4 237c 	strh.w	r2, [r4, #892]	; 0x37c
 8003e00:	f8a4 2390 	strh.w	r2, [r4, #912]	; 0x390
 8003e04:	f8c4 339c 	str.w	r3, [r4, #924]	; 0x39c
 8003e08:	f8a4 13a0 	strh.w	r1, [r4, #928]	; 0x3a0
}
 8003e0c:	4620      	mov	r0, r4
 8003e0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003e10:	0801d6b0 	.word	0x0801d6b0
 8003e14:	0801f568 	.word	0x0801f568
 8003e18:	0801e554 	.word	0x0801e554

08003e1c <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_>:
class TextAreaWithOneWildcard : public TextArea
 8003e1c:	4603      	mov	r3, r0
 8003e1e:	460a      	mov	r2, r1
 8003e20:	b510      	push	{r4, lr}
class Drawable
 8003e22:	1d04      	adds	r4, r0, #4
 8003e24:	e9d1 0101 	ldrd	r0, r1, [r1, #4]
 8003e28:	e884 0003 	stmia.w	r4, {r0, r1}
 8003e2c:	e9d2 0103 	ldrd	r0, r1, [r2, #12]
 8003e30:	f103 040c 	add.w	r4, r3, #12
 8003e34:	e884 0003 	stmia.w	r4, {r0, r1}
 8003e38:	e9d2 0106 	ldrd	r0, r1, [r2, #24]
 8003e3c:	61d9      	str	r1, [r3, #28]
 8003e3e:	6a11      	ldr	r1, [r2, #32]
 8003e40:	6219      	str	r1, [r3, #32]
 8003e42:	8c91      	ldrh	r1, [r2, #36]	; 0x24
 8003e44:	6954      	ldr	r4, [r2, #20]
 8003e46:	8499      	strh	r1, [r3, #36]	; 0x24
 8003e48:	490a      	ldr	r1, [pc, #40]	; (8003e74 <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_+0x58>)
 8003e4a:	6019      	str	r1, [r3, #0]
class TypedText
 8003e4c:	490a      	ldr	r1, [pc, #40]	; (8003e78 <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_+0x5c>)
 8003e4e:	6299      	str	r1, [r3, #40]	; 0x28
 8003e50:	e9c3 4005 	strd	r4, r0, [r3, #20]
 8003e54:	8d91      	ldrh	r1, [r2, #44]	; 0x2c
 8003e56:	8599      	strh	r1, [r3, #44]	; 0x2c
class TextArea : public Widget
 8003e58:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8003e5a:	6319      	str	r1, [r3, #48]	; 0x30
 8003e5c:	8e91      	ldrh	r1, [r2, #52]	; 0x34
 8003e5e:	8699      	strh	r1, [r3, #52]	; 0x34
 8003e60:	8ed1      	ldrh	r1, [r2, #54]	; 0x36
 8003e62:	86d9      	strh	r1, [r3, #54]	; 0x36
 8003e64:	8f11      	ldrh	r1, [r2, #56]	; 0x38
 8003e66:	8719      	strh	r1, [r3, #56]	; 0x38
 8003e68:	4904      	ldr	r1, [pc, #16]	; (8003e7c <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_+0x60>)
 8003e6a:	6019      	str	r1, [r3, #0]
 8003e6c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8003e6e:	63da      	str	r2, [r3, #60]	; 0x3c
 8003e70:	4618      	mov	r0, r3
 8003e72:	bd10      	pop	{r4, pc}
 8003e74:	0801e4f0 	.word	0x0801e4f0
 8003e78:	0801d6b0 	.word	0x0801d6b0
 8003e7c:	0801f568 	.word	0x0801f568

08003e80 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_>:
     * Adds an element to the Vector if the Vector is not full. Does nothing if the Vector
     * is full.
     *
     * @param  e The element to add to the Vector.
     */
    void add(T e)
 8003e80:	b508      	push	{r3, lr}
    {
        assert(_size < capacity && "Vector capacity exceeded");
 8003e82:	8a03      	ldrh	r3, [r0, #16]
 8003e84:	2b03      	cmp	r3, #3
 8003e86:	d906      	bls.n	8003e96 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_+0x16>
 8003e88:	4b05      	ldr	r3, [pc, #20]	; (8003ea0 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_+0x20>)
 8003e8a:	4a06      	ldr	r2, [pc, #24]	; (8003ea4 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_+0x24>)
 8003e8c:	4806      	ldr	r0, [pc, #24]	; (8003ea8 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_+0x28>)
 8003e8e:	f44f 71c1 	mov.w	r1, #386	; 0x182
 8003e92:	f017 fdc3 	bl	801ba1c <__assert_func>
        if (_size < capacity)
        {
            _elem[_size++] = e;
 8003e96:	1c5a      	adds	r2, r3, #1
 8003e98:	8202      	strh	r2, [r0, #16]
 8003e9a:	f840 1023 	str.w	r1, [r0, r3, lsl #2]
        }
    }
 8003e9e:	bd08      	pop	{r3, pc}
 8003ea0:	0801e333 	.word	0x0801e333
 8003ea4:	0801e362 	.word	0x0801e362
 8003ea8:	0801e3ca 	.word	0x0801e3ca

08003eac <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_>:
        assert(_size < capacity && "Vector capacity exceeded");
 8003eac:	f8b0 3100 	ldrh.w	r3, [r0, #256]	; 0x100
 8003eb0:	2b03      	cmp	r3, #3
    void add(T e)
 8003eb2:	b510      	push	{r4, lr}
 8003eb4:	460a      	mov	r2, r1
        assert(_size < capacity && "Vector capacity exceeded");
 8003eb6:	d906      	bls.n	8003ec6 <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_+0x1a>
 8003eb8:	4b15      	ldr	r3, [pc, #84]	; (8003f10 <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_+0x64>)
 8003eba:	4a16      	ldr	r2, [pc, #88]	; (8003f14 <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_+0x68>)
 8003ebc:	4816      	ldr	r0, [pc, #88]	; (8003f18 <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_+0x6c>)
 8003ebe:	f44f 71c1 	mov.w	r1, #386	; 0x182
 8003ec2:	f017 fdab 	bl	801ba1c <__assert_func>
            _elem[_size++] = e;
 8003ec6:	1c59      	adds	r1, r3, #1
 8003ec8:	f8a0 1100 	strh.w	r1, [r0, #256]	; 0x100
 8003ecc:	eb00 1383 	add.w	r3, r0, r3, lsl #6
 8003ed0:	e9d2 0101 	ldrd	r0, r1, [r2, #4]
 8003ed4:	1d1c      	adds	r4, r3, #4
 8003ed6:	e884 0003 	stmia.w	r4, {r0, r1}
 8003eda:	e9d2 0103 	ldrd	r0, r1, [r2, #12]
 8003ede:	f103 040c 	add.w	r4, r3, #12
 8003ee2:	e884 0003 	stmia.w	r4, {r0, r1}
 8003ee6:	e9d2 0106 	ldrd	r0, r1, [r2, #24]
 8003eea:	61d9      	str	r1, [r3, #28]
 8003eec:	6a11      	ldr	r1, [r2, #32]
 8003eee:	6219      	str	r1, [r3, #32]
 8003ef0:	8c91      	ldrh	r1, [r2, #36]	; 0x24
 8003ef2:	8499      	strh	r1, [r3, #36]	; 0x24
 8003ef4:	8d91      	ldrh	r1, [r2, #44]	; 0x2c
 8003ef6:	8599      	strh	r1, [r3, #44]	; 0x2c
 8003ef8:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8003efa:	6954      	ldr	r4, [r2, #20]
 8003efc:	6319      	str	r1, [r3, #48]	; 0x30
 8003efe:	6b51      	ldr	r1, [r2, #52]	; 0x34
 8003f00:	6359      	str	r1, [r3, #52]	; 0x34
 8003f02:	8f11      	ldrh	r1, [r2, #56]	; 0x38
 8003f04:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8003f06:	8719      	strh	r1, [r3, #56]	; 0x38
 8003f08:	e9c3 4005 	strd	r4, r0, [r3, #20]
 8003f0c:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8003f0e:	bd10      	pop	{r4, pc}
 8003f10:	0801e333 	.word	0x0801e333
 8003f14:	0801e411 	.word	0x0801e411
 8003f18:	0801e3ca 	.word	0x0801e3ca

08003f1c <_ZN8touchgfx6VectorIiLt4EE3addEi>:
    void add(T e)
 8003f1c:	b508      	push	{r3, lr}
        assert(_size < capacity && "Vector capacity exceeded");
 8003f1e:	8a03      	ldrh	r3, [r0, #16]
 8003f20:	2b03      	cmp	r3, #3
 8003f22:	d906      	bls.n	8003f32 <_ZN8touchgfx6VectorIiLt4EE3addEi+0x16>
 8003f24:	4b05      	ldr	r3, [pc, #20]	; (8003f3c <_ZN8touchgfx6VectorIiLt4EE3addEi+0x20>)
 8003f26:	4a06      	ldr	r2, [pc, #24]	; (8003f40 <_ZN8touchgfx6VectorIiLt4EE3addEi+0x24>)
 8003f28:	4806      	ldr	r0, [pc, #24]	; (8003f44 <_ZN8touchgfx6VectorIiLt4EE3addEi+0x28>)
 8003f2a:	f44f 71c1 	mov.w	r1, #386	; 0x182
 8003f2e:	f017 fd75 	bl	801ba1c <__assert_func>
            _elem[_size++] = e;
 8003f32:	1c5a      	adds	r2, r3, #1
 8003f34:	8202      	strh	r2, [r0, #16]
 8003f36:	f840 1023 	str.w	r1, [r0, r3, lsl #2]
    }
 8003f3a:	bd08      	pop	{r3, pc}
 8003f3c:	0801e333 	.word	0x0801e333
 8003f40:	0801e48a 	.word	0x0801e48a
 8003f44:	0801e3ca 	.word	0x0801e3ca

08003f48 <_ZN6digits10initializeEv>:
{
 8003f48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f4c:	4604      	mov	r4, r0
 8003f4e:	b092      	sub	sp, #72	; 0x48
	this->oldCursorPosition = 0;
 8003f50:	2500      	movs	r5, #0
    this->boxes.add(&this->decimalsBox);
 8003f52:	f104 072c 	add.w	r7, r4, #44	; 0x2c
    digitsBase::initialize();
 8003f56:	f7fe fcdd 	bl	8002914 <_ZN10digitsBase10initializeEv>
    this->boxes.add(&this->onesBox);
 8003f5a:	f104 0a58 	add.w	sl, r4, #88	; 0x58
    this->boxes.add(&this->decimalsBox);
 8003f5e:	f504 701a 	add.w	r0, r4, #616	; 0x268
 8003f62:	4639      	mov	r1, r7
	this->newCursorPosition = 0;
 8003f64:	e9c4 55e5 	strd	r5, r5, [r4, #916]	; 0x394
    this->boxes.add(&this->decimalsBox);
 8003f68:	9001      	str	r0, [sp, #4]
    this->boxes.add(&this->tensBox);
 8003f6a:	f104 0984 	add.w	r9, r4, #132	; 0x84
    this->boxes.add(&this->decimalsBox);
 8003f6e:	f7ff ff87 	bl	8003e80 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_>
    this->boxes.add(&this->onesBox);
 8003f72:	9801      	ldr	r0, [sp, #4]
 8003f74:	4651      	mov	r1, sl
 8003f76:	f7ff ff83 	bl	8003e80 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_>
    this->boxes.add(&this->hundredsBox);
 8003f7a:	f104 08b0 	add.w	r8, r4, #176	; 0xb0
    this->boxes.add(&this->tensBox);
 8003f7e:	9801      	ldr	r0, [sp, #4]
 8003f80:	4649      	mov	r1, r9
 8003f82:	f7ff ff7d 	bl	8003e80 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_>
    this->boxes.add(&this->hundredsBox);
 8003f86:	9801      	ldr	r0, [sp, #4]
 8003f88:	4641      	mov	r1, r8
 8003f8a:	f7ff ff79 	bl	8003e80 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_>
    this->digitsTab.add(this->decimals);
 8003f8e:	f504 761f 	add.w	r6, r4, #636	; 0x27c
 8003f92:	f104 01dc 	add.w	r1, r4, #220	; 0xdc
 8003f96:	a802      	add	r0, sp, #8
 8003f98:	f7ff ff40 	bl	8003e1c <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_>
 8003f9c:	a902      	add	r1, sp, #8
 8003f9e:	4630      	mov	r0, r6
 8003fa0:	f7ff ff84 	bl	8003eac <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_>
    this->digitsTab.add(this->ones);
 8003fa4:	f504 71ac 	add.w	r1, r4, #344	; 0x158
 8003fa8:	a802      	add	r0, sp, #8
 8003faa:	f7ff ff37 	bl	8003e1c <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_>
 8003fae:	a902      	add	r1, sp, #8
 8003fb0:	4630      	mov	r0, r6
 8003fb2:	f7ff ff7b 	bl	8003eac <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_>
    this->digitsTab.add(this->tens);
 8003fb6:	f504 71cc 	add.w	r1, r4, #408	; 0x198
 8003fba:	a802      	add	r0, sp, #8
 8003fbc:	f7ff ff2e 	bl	8003e1c <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_>
 8003fc0:	a902      	add	r1, sp, #8
 8003fc2:	4630      	mov	r0, r6
 8003fc4:	f7ff ff72 	bl	8003eac <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_>
    this->digitsTab.add(this->hundreds);
 8003fc8:	f504 71ec 	add.w	r1, r4, #472	; 0x1d8
 8003fcc:	a802      	add	r0, sp, #8
 8003fce:	f7ff ff25 	bl	8003e1c <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_>
 8003fd2:	a902      	add	r1, sp, #8
 8003fd4:	4630      	mov	r0, r6
 8003fd6:	f7ff ff69 	bl	8003eac <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_>
    this->values.add(1);
 8003fda:	f504 7060 	add.w	r0, r4, #896	; 0x380
 8003fde:	2101      	movs	r1, #1
 8003fe0:	9001      	str	r0, [sp, #4]
 8003fe2:	f7ff ff9b 	bl	8003f1c <_ZN8touchgfx6VectorIiLt4EE3addEi>
    this->values.add(2);
 8003fe6:	9801      	ldr	r0, [sp, #4]
 8003fe8:	2102      	movs	r1, #2
 8003fea:	f7ff ff97 	bl	8003f1c <_ZN8touchgfx6VectorIiLt4EE3addEi>
    this->values.add(3);
 8003fee:	9801      	ldr	r0, [sp, #4]
 8003ff0:	2103      	movs	r1, #3
 8003ff2:	f7ff ff93 	bl	8003f1c <_ZN8touchgfx6VectorIiLt4EE3addEi>
    this->values.add(4);
 8003ff6:	2104      	movs	r1, #4
 8003ff8:	9801      	ldr	r0, [sp, #4]
 8003ffa:	f7ff ff8f 	bl	8003f1c <_ZN8touchgfx6VectorIiLt4EE3addEi>
    this->updateValue();
 8003ffe:	6823      	ldr	r3, [r4, #0]
 8004000:	4620      	mov	r0, r4
 8004002:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8004006:	4798      	blx	r3
	this->onesBox.invalidate();
 8004008:	4650      	mov	r0, sl
        visible = vis;
 800400a:	f884 507d 	strb.w	r5, [r4, #125]	; 0x7d
 800400e:	f884 50a9 	strb.w	r5, [r4, #169]	; 0xa9
 8004012:	f884 50d5 	strb.w	r5, [r4, #213]	; 0xd5
 8004016:	f884 5051 	strb.w	r5, [r4, #81]	; 0x51
 800401a:	f009 fc42 	bl	800d8a2 <_ZNK8touchgfx8Drawable10invalidateEv>
	this->tensBox.invalidate();
 800401e:	4648      	mov	r0, r9
 8004020:	f009 fc3f 	bl	800d8a2 <_ZNK8touchgfx8Drawable10invalidateEv>
	this->hundredsBox.invalidate();
 8004024:	4640      	mov	r0, r8
 8004026:	f009 fc3c 	bl	800d8a2 <_ZNK8touchgfx8Drawable10invalidateEv>
	this->decimalsBox.invalidate();
 800402a:	4638      	mov	r0, r7
 800402c:	f009 fc39 	bl	800d8a2 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8004030:	b012      	add	sp, #72	; 0x48
 8004032:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08004036 <_ZN7humDisp10initializeEv>:

}

void humDisp::initialize()
{
    humDispBase::initialize();
 8004036:	f7fe be8d 	b.w	8002d54 <_ZN11humDispBase10initializeEv>

0800403a <_ZN7humDisp11changeValueEi>:
}

void humDisp::changeValue(int value)
{
	this->digits1.changeValue(value);
 800403a:	3068      	adds	r0, #104	; 0x68
 800403c:	f7ff bdf1 	b.w	8003c22 <_ZN6digits11changeValueEi>

08004040 <_ZN7humDisp20changeCursorPositionEi>:
}

void humDisp::changeCursorPosition(int direction)
{
	this->digits1.changeCursorPosition(direction);
 8004040:	3068      	adds	r0, #104	; 0x68
 8004042:	f7ff bdd1 	b.w	8003be8 <_ZN6digits20changeCursorPositionEi>

08004046 <_ZN7humDisp10showCursorEv>:
}

void humDisp::showCursor()
{
	this->digits1.showCursor();
 8004046:	3068      	adds	r0, #104	; 0x68
 8004048:	f7ff be48 	b.w	8003cdc <_ZN6digits10showCursorEv>

0800404c <_ZN7humDisp11resetCursorEv>:
}

void humDisp::resetCursor()
{
	this->digits1.resetCursor();
 800404c:	3068      	adds	r0, #104	; 0x68
 800404e:	f7ff be51 	b.w	8003cf4 <_ZN6digits11resetCursorEv>
	...

08004054 <_ZN7humDispD1Ev>:

class humDisp : public humDispBase
{
public:
    humDisp();
    virtual ~humDisp() {}
 8004054:	b538      	push	{r3, r4, r5, lr}
 8004056:	4b08      	ldr	r3, [pc, #32]	; (8004078 <_ZN7humDispD1Ev+0x24>)
 8004058:	6003      	str	r3, [r0, #0]
 800405a:	4b08      	ldr	r3, [pc, #32]	; (800407c <_ZN7humDispD1Ev+0x28>)
 800405c:	6683      	str	r3, [r0, #104]	; 0x68
 800405e:	4604      	mov	r4, r0
 8004060:	f44f 7569 	mov.w	r5, #932	; 0x3a4
class Vector
 8004064:	5963      	ldr	r3, [r4, r5]
 8004066:	1960      	adds	r0, r4, r5
 8004068:	681b      	ldr	r3, [r3, #0]
 800406a:	3d40      	subs	r5, #64	; 0x40
 800406c:	4798      	blx	r3
 800406e:	f5b5 7f29 	cmp.w	r5, #676	; 0x2a4
 8004072:	d1f7      	bne.n	8004064 <_ZN7humDispD1Ev+0x10>
 8004074:	4620      	mov	r0, r4
 8004076:	bd38      	pop	{r3, r4, r5, pc}
 8004078:	0801de3c 	.word	0x0801de3c
 800407c:	0801e554 	.word	0x0801e554

08004080 <_ZN7humDispD0Ev>:
 8004080:	b510      	push	{r4, lr}
 8004082:	4604      	mov	r4, r0
 8004084:	f7ff ffe6 	bl	8004054 <_ZN7humDispD1Ev>
 8004088:	4620      	mov	r0, r4
 800408a:	f240 410c 	movw	r1, #1036	; 0x40c
 800408e:	f017 fc96 	bl	801b9be <_ZdlPvj>
 8004092:	4620      	mov	r0, r4
 8004094:	bd10      	pop	{r4, pc}
	...

08004098 <_ZN7humDispC1Ev>:
humDisp::humDisp()
 8004098:	b510      	push	{r4, lr}
 800409a:	4604      	mov	r4, r0
 800409c:	f7fe fe80 	bl	8002da0 <_ZN11humDispBaseC1Ev>
 80040a0:	4b01      	ldr	r3, [pc, #4]	; (80040a8 <_ZN7humDispC1Ev+0x10>)
 80040a2:	6023      	str	r3, [r4, #0]
}
 80040a4:	4620      	mov	r0, r4
 80040a6:	bd10      	pop	{r4, pc}
 80040a8:	0801e600 	.word	0x0801e600

080040ac <_ZN9humWindow13setTempWindowEP10tempWindow>:
    this->checked = false;
}

void humWindow::setTempWindow(tempWindow *tW)
{
	this->tempWindow1 = tW;
 80040ac:	f8c0 1984 	str.w	r1, [r0, #2436]	; 0x984
}
 80040b0:	4770      	bx	lr

080040b2 <_ZN9humWindow10initializeEv>:
{
 80040b2:	b510      	push	{r4, lr}
 80040b4:	4604      	mov	r4, r0
	humWindowBase::initialize();
 80040b6:	f7fe ff2f 	bl	8002f18 <_ZN13humWindowBase10initializeEv>
    this->checked = false;
 80040ba:	2300      	movs	r3, #0
 80040bc:	f884 3980 	strb.w	r3, [r4, #2432]	; 0x980
}
 80040c0:	bd10      	pop	{r4, pc}

080040c2 <_ZN9humWindow11changeValueEi>:
	}
}

void humWindow::changeValue(int value)
{
	this->humDisp1.changeValue(value);
 80040c2:	f200 5064 	addw	r0, r0, #1380	; 0x564
 80040c6:	f7ff bfb8 	b.w	800403a <_ZN7humDisp11changeValueEi>

080040ca <_ZN9humWindow20changeCursorPositionEi>:
}

void humWindow::changeCursorPosition(int direction)
{
	this->humDisp1.changeCursorPosition(direction);
 80040ca:	f200 5064 	addw	r0, r0, #1380	; 0x564
 80040ce:	f7ff bfb7 	b.w	8004040 <_ZN7humDisp20changeCursorPositionEi>

080040d2 <_ZN9humWindow12toggleHumBtnEv>:
	this->checked = !this->checked;
 80040d2:	f890 3980 	ldrb.w	r3, [r0, #2432]	; 0x980
 80040d6:	f083 0301 	eor.w	r3, r3, #1
{
 80040da:	b510      	push	{r4, lr}
	this->checked = !this->checked;
 80040dc:	f880 3980 	strb.w	r3, [r0, #2432]	; 0x980
	if (this->checked)
 80040e0:	f200 5464 	addw	r4, r0, #1380	; 0x564
 80040e4:	b16b      	cbz	r3, 8004102 <_ZN9humWindow12toggleHumBtnEv+0x30>
		if (this->tempWindow1->isChecked())
 80040e6:	f8d0 0984 	ldr.w	r0, [r0, #2436]	; 0x984
 80040ea:	f890 3980 	ldrb.w	r3, [r0, #2432]	; 0x980
 80040ee:	b11b      	cbz	r3, 80040f8 <_ZN9humWindow12toggleHumBtnEv+0x26>
			this->tempWindow1->toggleTempBtn();
 80040f0:	6803      	ldr	r3, [r0, #0]
 80040f2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80040f6:	4798      	blx	r3
		this->humDisp1.showCursor();
 80040f8:	4620      	mov	r0, r4
}
 80040fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		this->humDisp1.showCursor();
 80040fe:	f7ff bfa2 	b.w	8004046 <_ZN7humDisp10showCursorEv>
		this->humDisp1.resetCursor();
 8004102:	4620      	mov	r0, r4
}
 8004104:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		this->humDisp1.resetCursor();
 8004108:	f7ff bfa0 	b.w	800404c <_ZN7humDisp11resetCursorEv>

0800410c <_ZN9humWindowD1Ev>:
 800410c:	b510      	push	{r4, lr}
 800410e:	4b03      	ldr	r3, [pc, #12]	; (800411c <_ZN9humWindowD1Ev+0x10>)
 8004110:	6003      	str	r3, [r0, #0]
 8004112:	4604      	mov	r4, r0
 8004114:	f7fe ff80 	bl	8003018 <_ZN13humWindowBaseD1Ev>
 8004118:	4620      	mov	r0, r4
 800411a:	bd10      	pop	{r4, pc}
 800411c:	0801e6a0 	.word	0x0801e6a0

08004120 <_ZN9humWindowD0Ev>:
 8004120:	b510      	push	{r4, lr}
 8004122:	4604      	mov	r4, r0
 8004124:	f7ff fff2 	bl	800410c <_ZN9humWindowD1Ev>
 8004128:	4620      	mov	r0, r4
 800412a:	f640 1188 	movw	r1, #2440	; 0x988
 800412e:	f017 fc46 	bl	801b9be <_ZdlPvj>
 8004132:	4620      	mov	r0, r4
 8004134:	bd10      	pop	{r4, pc}
	...

08004138 <_ZN9humWindowC1Ev>:
humWindow::humWindow()
 8004138:	b510      	push	{r4, lr}
 800413a:	4604      	mov	r4, r0
 800413c:	f7fe ffe8 	bl	8003110 <_ZN13humWindowBaseC1Ev>
 8004140:	4b01      	ldr	r3, [pc, #4]	; (8004148 <_ZN9humWindowC1Ev+0x10>)
 8004142:	6023      	str	r3, [r4, #0]
}
 8004144:	4620      	mov	r0, r4
 8004146:	bd10      	pop	{r4, pc}
 8004148:	0801e6a0 	.word	0x0801e6a0

0800414c <_ZN19mainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~mainScreenPresenter() {};
 800414c:	4770      	bx	lr

0800414e <_ZThn4_N19mainScreenPresenterD1Ev>:
 800414e:	3804      	subs	r0, #4
 8004150:	4770      	bx	lr

08004152 <_ZN19mainScreenPresenter10deactivateEv>:
}

void mainScreenPresenter::activate()
{

}
 8004152:	4770      	bx	lr

08004154 <_ZN19mainScreenPresenter10updateDataEPf>:

}

void mainScreenPresenter::updateData(float *data)
{
	this->view.updateData(data);
 8004154:	68c0      	ldr	r0, [r0, #12]
 8004156:	6803      	ldr	r3, [r0, #0]
 8004158:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800415a:	4718      	bx	r3

0800415c <_ZN19mainScreenPresenter11sendRequestEPf>:
}

void mainScreenPresenter::sendRequest(float *data)
{
	this->model->sendRequest(data);
 800415c:	6880      	ldr	r0, [r0, #8]
 800415e:	6803      	ldr	r3, [r0, #0]
 8004160:	681b      	ldr	r3, [r3, #0]
 8004162:	4718      	bx	r3

08004164 <_ZN19mainScreenPresenterD0Ev>:
 8004164:	b510      	push	{r4, lr}
 8004166:	2110      	movs	r1, #16
 8004168:	4604      	mov	r4, r0
 800416a:	f017 fc28 	bl	801b9be <_ZdlPvj>
 800416e:	4620      	mov	r0, r4
 8004170:	bd10      	pop	{r4, pc}

08004172 <_ZThn4_N19mainScreenPresenterD0Ev>:
 8004172:	f1a0 0004 	sub.w	r0, r0, #4
 8004176:	e7f5      	b.n	8004164 <_ZN19mainScreenPresenterD0Ev>

08004178 <_ZN19mainScreenPresenterC1ER14mainScreenView>:
mainScreenPresenter::mainScreenPresenter(mainScreenView& v)
 8004178:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800417a:	2200      	movs	r2, #0
 800417c:	6082      	str	r2, [r0, #8]
    : view(v)
 800417e:	4a04      	ldr	r2, [pc, #16]	; (8004190 <_ZN19mainScreenPresenterC1ER14mainScreenView+0x18>)
 8004180:	60c1      	str	r1, [r0, #12]
 8004182:	f102 0408 	add.w	r4, r2, #8
 8004186:	3228      	adds	r2, #40	; 0x28
 8004188:	6004      	str	r4, [r0, #0]
 800418a:	6042      	str	r2, [r0, #4]
}
 800418c:	bd10      	pop	{r4, pc}
 800418e:	bf00      	nop
 8004190:	0801e738 	.word	0x0801e738

08004194 <_ZN14mainScreenView14tearDownScreenEv>:
}

void mainScreenView::tearDownScreen()
{
    mainScreenViewBase::tearDownScreen();
}
 8004194:	4770      	bx	lr

08004196 <_ZN14mainScreenView10updateDataEPf>:
}

void mainScreenView::updateData(float *data)
{

}
 8004196:	4770      	bx	lr

08004198 <_ZN14mainScreenView11sendRequestEPf>:

void mainScreenView::sendRequest(float *data)
{
	this->presenter->sendRequest(data);
 8004198:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800419a:	6803      	ldr	r3, [r0, #0]
 800419c:	695b      	ldr	r3, [r3, #20]
 800419e:	4718      	bx	r3

080041a0 <_ZN14mainScreenView11setupScreenEv>:
{
 80041a0:	b538      	push	{r3, r4, r5, lr}
 80041a2:	4604      	mov	r4, r0
    this->tempWindow1.setHumWindow(&(this->humWindow1));
 80041a4:	f504 6547 	add.w	r5, r4, #3184	; 0xc70
 80041a8:	f504 743a 	add.w	r4, r4, #744	; 0x2e8
    mainScreenViewBase::setupScreen();
 80041ac:	f7ff f8d4 	bl	8003358 <_ZN18mainScreenViewBase11setupScreenEv>
    this->tempWindow1.setHumWindow(&(this->humWindow1));
 80041b0:	4621      	mov	r1, r4
 80041b2:	4628      	mov	r0, r5
 80041b4:	f000 f8ac 	bl	8004310 <_ZN10tempWindow12setHumWindowEP9humWindow>
    this->humWindow1.setTempWindow(&(this->tempWindow1));
 80041b8:	4629      	mov	r1, r5
 80041ba:	4620      	mov	r0, r4
}
 80041bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    this->humWindow1.setTempWindow(&(this->tempWindow1));
 80041c0:	f7ff bf74 	b.w	80040ac <_ZN9humWindow13setTempWindowEP10tempWindow>

080041c4 <_ZN14mainScreenView12upBtnClickedEv>:
	if (this->tempWindow1.isChecked())
 80041c4:	f241 53f0 	movw	r3, #5616	; 0x15f0
 80041c8:	5cc3      	ldrb	r3, [r0, r3]
 80041ca:	b123      	cbz	r3, 80041d6 <_ZN14mainScreenView12upBtnClickedEv+0x12>
		this->tempWindow1.changeValue(1);
 80041cc:	2101      	movs	r1, #1
 80041ce:	f500 6047 	add.w	r0, r0, #3184	; 0xc70
 80041d2:	f000 b8a8 	b.w	8004326 <_ZN10tempWindow11changeValueEi>
	else if (this->humWindow1.isChecked())
 80041d6:	f890 3c68 	ldrb.w	r3, [r0, #3176]	; 0xc68
 80041da:	b123      	cbz	r3, 80041e6 <_ZN14mainScreenView12upBtnClickedEv+0x22>
		this->humWindow1.changeValue(1);
 80041dc:	2101      	movs	r1, #1
 80041de:	f500 703a 	add.w	r0, r0, #744	; 0x2e8
 80041e2:	f7ff bf6e 	b.w	80040c2 <_ZN9humWindow11changeValueEi>
}
 80041e6:	4770      	bx	lr

080041e8 <_ZN14mainScreenView14downBtnClickedEv>:
	if (this->tempWindow1.isChecked())
 80041e8:	f241 53f0 	movw	r3, #5616	; 0x15f0
 80041ec:	5cc3      	ldrb	r3, [r0, r3]
 80041ee:	b12b      	cbz	r3, 80041fc <_ZN14mainScreenView14downBtnClickedEv+0x14>
		this->tempWindow1.changeValue(-1);
 80041f0:	f04f 31ff 	mov.w	r1, #4294967295
 80041f4:	f500 6047 	add.w	r0, r0, #3184	; 0xc70
 80041f8:	f000 b895 	b.w	8004326 <_ZN10tempWindow11changeValueEi>
	else if (this->humWindow1.isChecked())
 80041fc:	f890 3c68 	ldrb.w	r3, [r0, #3176]	; 0xc68
 8004200:	b12b      	cbz	r3, 800420e <_ZN14mainScreenView14downBtnClickedEv+0x26>
		this->humWindow1.changeValue(-1);
 8004202:	f04f 31ff 	mov.w	r1, #4294967295
 8004206:	f500 703a 	add.w	r0, r0, #744	; 0x2e8
 800420a:	f7ff bf5a 	b.w	80040c2 <_ZN9humWindow11changeValueEi>
}
 800420e:	4770      	bx	lr

08004210 <_ZN14mainScreenView15rightBtnClickedEv>:
	if (this->tempWindow1.isChecked())
 8004210:	f241 53f0 	movw	r3, #5616	; 0x15f0
 8004214:	5cc3      	ldrb	r3, [r0, r3]
 8004216:	b12b      	cbz	r3, 8004224 <_ZN14mainScreenView15rightBtnClickedEv+0x14>
		this->tempWindow1.changeCursorPosition(-1);
 8004218:	f04f 31ff 	mov.w	r1, #4294967295
 800421c:	f500 6047 	add.w	r0, r0, #3184	; 0xc70
 8004220:	f000 b884 	b.w	800432c <_ZN10tempWindow20changeCursorPositionEi>
	else if (this->humWindow1.isChecked())
 8004224:	f890 3c68 	ldrb.w	r3, [r0, #3176]	; 0xc68
 8004228:	b12b      	cbz	r3, 8004236 <_ZN14mainScreenView15rightBtnClickedEv+0x26>
		this->humWindow1.changeCursorPosition(-1);
 800422a:	f04f 31ff 	mov.w	r1, #4294967295
 800422e:	f500 703a 	add.w	r0, r0, #744	; 0x2e8
 8004232:	f7ff bf4a 	b.w	80040ca <_ZN9humWindow20changeCursorPositionEi>
}
 8004236:	4770      	bx	lr

08004238 <_ZN14mainScreenView14leftBtnClickedEv>:
	if (this->tempWindow1.isChecked())
 8004238:	f241 53f0 	movw	r3, #5616	; 0x15f0
 800423c:	5cc3      	ldrb	r3, [r0, r3]
 800423e:	b123      	cbz	r3, 800424a <_ZN14mainScreenView14leftBtnClickedEv+0x12>
		this->tempWindow1.changeCursorPosition(1);
 8004240:	2101      	movs	r1, #1
 8004242:	f500 6047 	add.w	r0, r0, #3184	; 0xc70
 8004246:	f000 b871 	b.w	800432c <_ZN10tempWindow20changeCursorPositionEi>
	else if (this->humWindow1.isChecked())
 800424a:	f890 3c68 	ldrb.w	r3, [r0, #3176]	; 0xc68
 800424e:	b123      	cbz	r3, 800425a <_ZN14mainScreenView14leftBtnClickedEv+0x22>
		this->humWindow1.changeCursorPosition(1);
 8004250:	2101      	movs	r1, #1
 8004252:	f500 703a 	add.w	r0, r0, #744	; 0x2e8
 8004256:	f7ff bf38 	b.w	80040ca <_ZN9humWindow20changeCursorPositionEi>
}
 800425a:	4770      	bx	lr

0800425c <_ZN14mainScreenViewD1Ev>:

class mainScreenView : public mainScreenViewBase
{
public:
    mainScreenView();
    virtual ~mainScreenView() {}
 800425c:	b510      	push	{r4, lr}
 800425e:	4b03      	ldr	r3, [pc, #12]	; (800426c <_ZN14mainScreenViewD1Ev+0x10>)
 8004260:	6003      	str	r3, [r0, #0]
 8004262:	4604      	mov	r4, r0
 8004264:	f7ff f90e 	bl	8003484 <_ZN18mainScreenViewBaseD1Ev>
 8004268:	4620      	mov	r0, r4
 800426a:	bd10      	pop	{r4, pc}
 800426c:	0801e770 	.word	0x0801e770

08004270 <_ZN14mainScreenViewD0Ev>:
 8004270:	b510      	push	{r4, lr}
 8004272:	4604      	mov	r4, r0
 8004274:	f7ff fff2 	bl	800425c <_ZN14mainScreenViewD1Ev>
 8004278:	4620      	mov	r0, r4
 800427a:	f241 610c 	movw	r1, #5644	; 0x160c
 800427e:	f017 fb9e 	bl	801b9be <_ZdlPvj>
 8004282:	4620      	mov	r0, r4
 8004284:	bd10      	pop	{r4, pc}
	...

08004288 <_ZN14mainScreenViewC1Ev>:
mainScreenView::mainScreenView()
 8004288:	b510      	push	{r4, lr}
 800428a:	4604      	mov	r4, r0
 800428c:	f7ff f96a 	bl	8003564 <_ZN18mainScreenViewBaseC1Ev>
 8004290:	4b01      	ldr	r3, [pc, #4]	; (8004298 <_ZN14mainScreenViewC1Ev+0x10>)
 8004292:	6023      	str	r3, [r4, #0]
}
 8004294:	4620      	mov	r0, r4
 8004296:	bd10      	pop	{r4, pc}
 8004298:	0801e770 	.word	0x0801e770

0800429c <_ZN8tempDisp10initializeEv>:

}

void tempDisp::initialize()
{
    tempDispBase::initialize();
 800429c:	f7ff baac 	b.w	80037f8 <_ZN12tempDispBase10initializeEv>

080042a0 <_ZN8tempDisp11changeValueEi>:
}

void tempDisp::changeValue(int value)
{
	this->digits1.changeValue(value);
 80042a0:	3068      	adds	r0, #104	; 0x68
 80042a2:	f7ff bcbe 	b.w	8003c22 <_ZN6digits11changeValueEi>

080042a6 <_ZN8tempDisp20changeCursorPositionEi>:
}

void tempDisp::changeCursorPosition(int direction)
{
	this->digits1.changeCursorPosition(direction);
 80042a6:	3068      	adds	r0, #104	; 0x68
 80042a8:	f7ff bc9e 	b.w	8003be8 <_ZN6digits20changeCursorPositionEi>

080042ac <_ZN8tempDisp10showCursorEv>:
}

void tempDisp::showCursor()
{
	this->digits1.showCursor();
 80042ac:	3068      	adds	r0, #104	; 0x68
 80042ae:	f7ff bd15 	b.w	8003cdc <_ZN6digits10showCursorEv>

080042b2 <_ZN8tempDisp11resetCursorEv>:
}

void tempDisp::resetCursor()
{
	this->digits1.resetCursor();
 80042b2:	3068      	adds	r0, #104	; 0x68
 80042b4:	f7ff bd1e 	b.w	8003cf4 <_ZN6digits11resetCursorEv>

080042b8 <_ZN8tempDispD1Ev>:

class tempDisp : public tempDispBase
{
public:
    tempDisp();
    virtual ~tempDisp() {}
 80042b8:	b538      	push	{r3, r4, r5, lr}
 80042ba:	4b08      	ldr	r3, [pc, #32]	; (80042dc <_ZN8tempDispD1Ev+0x24>)
 80042bc:	6003      	str	r3, [r0, #0]
 80042be:	4b08      	ldr	r3, [pc, #32]	; (80042e0 <_ZN8tempDispD1Ev+0x28>)
 80042c0:	6683      	str	r3, [r0, #104]	; 0x68
 80042c2:	4604      	mov	r4, r0
 80042c4:	f44f 7569 	mov.w	r5, #932	; 0x3a4
 80042c8:	5963      	ldr	r3, [r4, r5]
 80042ca:	1960      	adds	r0, r4, r5
 80042cc:	681b      	ldr	r3, [r3, #0]
 80042ce:	3d40      	subs	r5, #64	; 0x40
 80042d0:	4798      	blx	r3
 80042d2:	f5b5 7f29 	cmp.w	r5, #676	; 0x2a4
 80042d6:	d1f7      	bne.n	80042c8 <_ZN8tempDispD1Ev+0x10>
 80042d8:	4620      	mov	r0, r4
 80042da:	bd38      	pop	{r3, r4, r5, pc}
 80042dc:	0801e1ac 	.word	0x0801e1ac
 80042e0:	0801e554 	.word	0x0801e554

080042e4 <_ZN8tempDispD0Ev>:
 80042e4:	b510      	push	{r4, lr}
 80042e6:	4604      	mov	r4, r0
 80042e8:	f7ff ffe6 	bl	80042b8 <_ZN8tempDispD1Ev>
 80042ec:	4620      	mov	r0, r4
 80042ee:	f240 410c 	movw	r1, #1036	; 0x40c
 80042f2:	f017 fb64 	bl	801b9be <_ZdlPvj>
 80042f6:	4620      	mov	r0, r4
 80042f8:	bd10      	pop	{r4, pc}
	...

080042fc <_ZN8tempDispC1Ev>:
tempDisp::tempDisp()
 80042fc:	b510      	push	{r4, lr}
 80042fe:	4604      	mov	r4, r0
 8004300:	f7ff faa0 	bl	8003844 <_ZN12tempDispBaseC1Ev>
 8004304:	4b01      	ldr	r3, [pc, #4]	; (800430c <_ZN8tempDispC1Ev+0x10>)
 8004306:	6023      	str	r3, [r4, #0]
}
 8004308:	4620      	mov	r0, r4
 800430a:	bd10      	pop	{r4, pc}
 800430c:	0801e7bc 	.word	0x0801e7bc

08004310 <_ZN10tempWindow12setHumWindowEP9humWindow>:
    this->checked = false;
}

void tempWindow::setHumWindow(humWindow *hW)
{
	this->humWindow1 = hW;
 8004310:	f8c0 1984 	str.w	r1, [r0, #2436]	; 0x984
}
 8004314:	4770      	bx	lr

08004316 <_ZN10tempWindow10initializeEv>:
{
 8004316:	b510      	push	{r4, lr}
 8004318:	4604      	mov	r4, r0
    tempWindowBase::initialize();
 800431a:	f7ff fb19 	bl	8003950 <_ZN14tempWindowBase10initializeEv>
    this->checked = false;
 800431e:	2300      	movs	r3, #0
 8004320:	f884 3980 	strb.w	r3, [r4, #2432]	; 0x980
}
 8004324:	bd10      	pop	{r4, pc}

08004326 <_ZN10tempWindow11changeValueEi>:
	}
}

void tempWindow::changeValue(int value)
{
	this->tempDisp1.changeValue(value);
 8004326:	30b0      	adds	r0, #176	; 0xb0
 8004328:	f7ff bfba 	b.w	80042a0 <_ZN8tempDisp11changeValueEi>

0800432c <_ZN10tempWindow20changeCursorPositionEi>:
}

void tempWindow::changeCursorPosition(int direction)
{
	this->tempDisp1.changeCursorPosition(direction);
 800432c:	30b0      	adds	r0, #176	; 0xb0
 800432e:	f7ff bfba 	b.w	80042a6 <_ZN8tempDisp20changeCursorPositionEi>

08004332 <_ZN10tempWindow13toggleTempBtnEv>:
	this->checked = !this->checked;
 8004332:	f890 3980 	ldrb.w	r3, [r0, #2432]	; 0x980
 8004336:	f083 0301 	eor.w	r3, r3, #1
{
 800433a:	b510      	push	{r4, lr}
	this->checked = !this->checked;
 800433c:	f880 3980 	strb.w	r3, [r0, #2432]	; 0x980
	if (this->checked)
 8004340:	f100 04b0 	add.w	r4, r0, #176	; 0xb0
 8004344:	b16b      	cbz	r3, 8004362 <_ZN10tempWindow13toggleTempBtnEv+0x30>
		if (this->humWindow1->isChecked())
 8004346:	f8d0 0984 	ldr.w	r0, [r0, #2436]	; 0x984
 800434a:	f890 3980 	ldrb.w	r3, [r0, #2432]	; 0x980
 800434e:	b11b      	cbz	r3, 8004358 <_ZN10tempWindow13toggleTempBtnEv+0x26>
			this->humWindow1->toggleHumBtn();
 8004350:	6803      	ldr	r3, [r0, #0]
 8004352:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004356:	4798      	blx	r3
		this->tempDisp1.showCursor();
 8004358:	4620      	mov	r0, r4
}
 800435a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		this->tempDisp1.showCursor();
 800435e:	f7ff bfa5 	b.w	80042ac <_ZN8tempDisp10showCursorEv>
		this->tempDisp1.resetCursor();
 8004362:	4620      	mov	r0, r4
}
 8004364:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		this->tempDisp1.resetCursor();
 8004368:	f7ff bfa3 	b.w	80042b2 <_ZN8tempDisp11resetCursorEv>

0800436c <_ZN10tempWindowD1Ev>:
 800436c:	b510      	push	{r4, lr}
 800436e:	4b03      	ldr	r3, [pc, #12]	; (800437c <_ZN10tempWindowD1Ev+0x10>)
 8004370:	6003      	str	r3, [r0, #0]
 8004372:	4604      	mov	r4, r0
 8004374:	f7ff f868 	bl	8003448 <_ZN14tempWindowBaseD1Ev>
 8004378:	4620      	mov	r0, r4
 800437a:	bd10      	pop	{r4, pc}
 800437c:	0801e85c 	.word	0x0801e85c

08004380 <_ZN10tempWindowD0Ev>:
 8004380:	b510      	push	{r4, lr}
 8004382:	4604      	mov	r4, r0
 8004384:	f7ff fff2 	bl	800436c <_ZN10tempWindowD1Ev>
 8004388:	4620      	mov	r0, r4
 800438a:	f640 1188 	movw	r1, #2440	; 0x988
 800438e:	f017 fb16 	bl	801b9be <_ZdlPvj>
 8004392:	4620      	mov	r0, r4
 8004394:	bd10      	pop	{r4, pc}
	...

08004398 <_ZN10tempWindowC1Ev>:
tempWindow::tempWindow()
 8004398:	b510      	push	{r4, lr}
 800439a:	4604      	mov	r4, r0
 800439c:	f7ff faec 	bl	8003978 <_ZN14tempWindowBaseC1Ev>
 80043a0:	4b01      	ldr	r3, [pc, #4]	; (80043a8 <_ZN10tempWindowC1Ev+0x10>)
 80043a2:	6023      	str	r3, [r4, #0]
}
 80043a4:	4620      	mov	r0, r4
 80043a6:	bd10      	pop	{r4, pc}
 80043a8:	0801e85c 	.word	0x0801e85c

080043ac <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80043ac:	20f0      	movs	r0, #240	; 0xf0
 80043ae:	4770      	bx	lr

080043b0 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80043b0:	f44f 70a0 	mov.w	r0, #320	; 0x140
 80043b4:	4770      	bx	lr

080043b6 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80043b6:	2029      	movs	r0, #41	; 0x29
 80043b8:	f7fd b94a 	b.w	8001650 <LCD_IO_WriteReg>

080043bc <ili9341_DisplayOff>:
 80043bc:	2028      	movs	r0, #40	; 0x28
 80043be:	f7fd b947 	b.w	8001650 <LCD_IO_WriteReg>

080043c2 <ili9341_Init>:
{
 80043c2:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80043c4:	f7fd f918 	bl	80015f8 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80043c8:	20ca      	movs	r0, #202	; 0xca
 80043ca:	f7fd f941 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80043ce:	20c3      	movs	r0, #195	; 0xc3
 80043d0:	f7fd f922 	bl	8001618 <LCD_IO_WriteData>
 80043d4:	2008      	movs	r0, #8
 80043d6:	f7fd f91f 	bl	8001618 <LCD_IO_WriteData>
 80043da:	2050      	movs	r0, #80	; 0x50
 80043dc:	f7fd f91c 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80043e0:	20cf      	movs	r0, #207	; 0xcf
 80043e2:	f7fd f935 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80043e6:	2000      	movs	r0, #0
 80043e8:	f7fd f916 	bl	8001618 <LCD_IO_WriteData>
 80043ec:	20c1      	movs	r0, #193	; 0xc1
 80043ee:	f7fd f913 	bl	8001618 <LCD_IO_WriteData>
 80043f2:	2030      	movs	r0, #48	; 0x30
 80043f4:	f7fd f910 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80043f8:	20ed      	movs	r0, #237	; 0xed
 80043fa:	f7fd f929 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80043fe:	2064      	movs	r0, #100	; 0x64
 8004400:	f7fd f90a 	bl	8001618 <LCD_IO_WriteData>
 8004404:	2003      	movs	r0, #3
 8004406:	f7fd f907 	bl	8001618 <LCD_IO_WriteData>
 800440a:	2012      	movs	r0, #18
 800440c:	f7fd f904 	bl	8001618 <LCD_IO_WriteData>
 8004410:	2081      	movs	r0, #129	; 0x81
 8004412:	f7fd f901 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004416:	20e8      	movs	r0, #232	; 0xe8
 8004418:	f7fd f91a 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800441c:	2085      	movs	r0, #133	; 0x85
 800441e:	f7fd f8fb 	bl	8001618 <LCD_IO_WriteData>
 8004422:	2000      	movs	r0, #0
 8004424:	f7fd f8f8 	bl	8001618 <LCD_IO_WriteData>
 8004428:	2078      	movs	r0, #120	; 0x78
 800442a:	f7fd f8f5 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800442e:	20cb      	movs	r0, #203	; 0xcb
 8004430:	f7fd f90e 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004434:	2039      	movs	r0, #57	; 0x39
 8004436:	f7fd f8ef 	bl	8001618 <LCD_IO_WriteData>
 800443a:	202c      	movs	r0, #44	; 0x2c
 800443c:	f7fd f8ec 	bl	8001618 <LCD_IO_WriteData>
 8004440:	2000      	movs	r0, #0
 8004442:	f7fd f8e9 	bl	8001618 <LCD_IO_WriteData>
 8004446:	2034      	movs	r0, #52	; 0x34
 8004448:	f7fd f8e6 	bl	8001618 <LCD_IO_WriteData>
 800444c:	2002      	movs	r0, #2
 800444e:	f7fd f8e3 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004452:	20f7      	movs	r0, #247	; 0xf7
 8004454:	f7fd f8fc 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004458:	2020      	movs	r0, #32
 800445a:	f7fd f8dd 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800445e:	20ea      	movs	r0, #234	; 0xea
 8004460:	f7fd f8f6 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004464:	2000      	movs	r0, #0
 8004466:	f7fd f8d7 	bl	8001618 <LCD_IO_WriteData>
 800446a:	2000      	movs	r0, #0
 800446c:	f7fd f8d4 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004470:	20b1      	movs	r0, #177	; 0xb1
 8004472:	f7fd f8ed 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004476:	2000      	movs	r0, #0
 8004478:	f7fd f8ce 	bl	8001618 <LCD_IO_WriteData>
 800447c:	201b      	movs	r0, #27
 800447e:	f7fd f8cb 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004482:	20b6      	movs	r0, #182	; 0xb6
 8004484:	f7fd f8e4 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004488:	200a      	movs	r0, #10
 800448a:	f7fd f8c5 	bl	8001618 <LCD_IO_WriteData>
 800448e:	20a2      	movs	r0, #162	; 0xa2
 8004490:	f7fd f8c2 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004494:	20c0      	movs	r0, #192	; 0xc0
 8004496:	f7fd f8db 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800449a:	2010      	movs	r0, #16
 800449c:	f7fd f8bc 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044a0:	20c1      	movs	r0, #193	; 0xc1
 80044a2:	f7fd f8d5 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044a6:	2010      	movs	r0, #16
 80044a8:	f7fd f8b6 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044ac:	20c5      	movs	r0, #197	; 0xc5
 80044ae:	f7fd f8cf 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044b2:	2045      	movs	r0, #69	; 0x45
 80044b4:	f7fd f8b0 	bl	8001618 <LCD_IO_WriteData>
 80044b8:	2015      	movs	r0, #21
 80044ba:	f7fd f8ad 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044be:	20c7      	movs	r0, #199	; 0xc7
 80044c0:	f7fd f8c6 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044c4:	2090      	movs	r0, #144	; 0x90
 80044c6:	f7fd f8a7 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044ca:	2036      	movs	r0, #54	; 0x36
 80044cc:	f7fd f8c0 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044d0:	20c8      	movs	r0, #200	; 0xc8
 80044d2:	f7fd f8a1 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044d6:	20f2      	movs	r0, #242	; 0xf2
 80044d8:	f7fd f8ba 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044dc:	2000      	movs	r0, #0
 80044de:	f7fd f89b 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044e2:	20b0      	movs	r0, #176	; 0xb0
 80044e4:	f7fd f8b4 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044e8:	20c2      	movs	r0, #194	; 0xc2
 80044ea:	f7fd f895 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044ee:	20b6      	movs	r0, #182	; 0xb6
 80044f0:	f7fd f8ae 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044f4:	200a      	movs	r0, #10
 80044f6:	f7fd f88f 	bl	8001618 <LCD_IO_WriteData>
 80044fa:	20a7      	movs	r0, #167	; 0xa7
 80044fc:	f7fd f88c 	bl	8001618 <LCD_IO_WriteData>
 8004500:	2027      	movs	r0, #39	; 0x27
 8004502:	f7fd f889 	bl	8001618 <LCD_IO_WriteData>
 8004506:	2004      	movs	r0, #4
 8004508:	f7fd f886 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800450c:	202a      	movs	r0, #42	; 0x2a
 800450e:	f7fd f89f 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004512:	2000      	movs	r0, #0
 8004514:	f7fd f880 	bl	8001618 <LCD_IO_WriteData>
 8004518:	2000      	movs	r0, #0
 800451a:	f7fd f87d 	bl	8001618 <LCD_IO_WriteData>
 800451e:	2000      	movs	r0, #0
 8004520:	f7fd f87a 	bl	8001618 <LCD_IO_WriteData>
 8004524:	20ef      	movs	r0, #239	; 0xef
 8004526:	f7fd f877 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800452a:	202b      	movs	r0, #43	; 0x2b
 800452c:	f7fd f890 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004530:	2000      	movs	r0, #0
 8004532:	f7fd f871 	bl	8001618 <LCD_IO_WriteData>
 8004536:	2000      	movs	r0, #0
 8004538:	f7fd f86e 	bl	8001618 <LCD_IO_WriteData>
 800453c:	2001      	movs	r0, #1
 800453e:	f7fd f86b 	bl	8001618 <LCD_IO_WriteData>
 8004542:	203f      	movs	r0, #63	; 0x3f
 8004544:	f7fd f868 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004548:	20f6      	movs	r0, #246	; 0xf6
 800454a:	f7fd f881 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800454e:	2001      	movs	r0, #1
 8004550:	f7fd f862 	bl	8001618 <LCD_IO_WriteData>
 8004554:	2000      	movs	r0, #0
 8004556:	f7fd f85f 	bl	8001618 <LCD_IO_WriteData>
 800455a:	2006      	movs	r0, #6
 800455c:	f7fd f85c 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004560:	202c      	movs	r0, #44	; 0x2c
 8004562:	f7fd f875 	bl	8001650 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8004566:	20c8      	movs	r0, #200	; 0xc8
 8004568:	f7fd f8c0 	bl	80016ec <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800456c:	2026      	movs	r0, #38	; 0x26
 800456e:	f7fd f86f 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004572:	2001      	movs	r0, #1
 8004574:	f7fd f850 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004578:	20e0      	movs	r0, #224	; 0xe0
 800457a:	f7fd f869 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800457e:	200f      	movs	r0, #15
 8004580:	f7fd f84a 	bl	8001618 <LCD_IO_WriteData>
 8004584:	2029      	movs	r0, #41	; 0x29
 8004586:	f7fd f847 	bl	8001618 <LCD_IO_WriteData>
 800458a:	2024      	movs	r0, #36	; 0x24
 800458c:	f7fd f844 	bl	8001618 <LCD_IO_WriteData>
 8004590:	200c      	movs	r0, #12
 8004592:	f7fd f841 	bl	8001618 <LCD_IO_WriteData>
 8004596:	200e      	movs	r0, #14
 8004598:	f7fd f83e 	bl	8001618 <LCD_IO_WriteData>
 800459c:	2009      	movs	r0, #9
 800459e:	f7fd f83b 	bl	8001618 <LCD_IO_WriteData>
 80045a2:	204e      	movs	r0, #78	; 0x4e
 80045a4:	f7fd f838 	bl	8001618 <LCD_IO_WriteData>
 80045a8:	2078      	movs	r0, #120	; 0x78
 80045aa:	f7fd f835 	bl	8001618 <LCD_IO_WriteData>
 80045ae:	203c      	movs	r0, #60	; 0x3c
 80045b0:	f7fd f832 	bl	8001618 <LCD_IO_WriteData>
 80045b4:	2009      	movs	r0, #9
 80045b6:	f7fd f82f 	bl	8001618 <LCD_IO_WriteData>
 80045ba:	2013      	movs	r0, #19
 80045bc:	f7fd f82c 	bl	8001618 <LCD_IO_WriteData>
 80045c0:	2005      	movs	r0, #5
 80045c2:	f7fd f829 	bl	8001618 <LCD_IO_WriteData>
 80045c6:	2017      	movs	r0, #23
 80045c8:	f7fd f826 	bl	8001618 <LCD_IO_WriteData>
 80045cc:	2011      	movs	r0, #17
 80045ce:	f7fd f823 	bl	8001618 <LCD_IO_WriteData>
 80045d2:	2000      	movs	r0, #0
 80045d4:	f7fd f820 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80045d8:	20e1      	movs	r0, #225	; 0xe1
 80045da:	f7fd f839 	bl	8001650 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80045de:	2000      	movs	r0, #0
 80045e0:	f7fd f81a 	bl	8001618 <LCD_IO_WriteData>
 80045e4:	2016      	movs	r0, #22
 80045e6:	f7fd f817 	bl	8001618 <LCD_IO_WriteData>
 80045ea:	201b      	movs	r0, #27
 80045ec:	f7fd f814 	bl	8001618 <LCD_IO_WriteData>
 80045f0:	2004      	movs	r0, #4
 80045f2:	f7fd f811 	bl	8001618 <LCD_IO_WriteData>
 80045f6:	2011      	movs	r0, #17
 80045f8:	f7fd f80e 	bl	8001618 <LCD_IO_WriteData>
 80045fc:	2007      	movs	r0, #7
 80045fe:	f7fd f80b 	bl	8001618 <LCD_IO_WriteData>
 8004602:	2031      	movs	r0, #49	; 0x31
 8004604:	f7fd f808 	bl	8001618 <LCD_IO_WriteData>
 8004608:	2033      	movs	r0, #51	; 0x33
 800460a:	f7fd f805 	bl	8001618 <LCD_IO_WriteData>
 800460e:	2042      	movs	r0, #66	; 0x42
 8004610:	f7fd f802 	bl	8001618 <LCD_IO_WriteData>
 8004614:	2005      	movs	r0, #5
 8004616:	f7fc ffff 	bl	8001618 <LCD_IO_WriteData>
 800461a:	200c      	movs	r0, #12
 800461c:	f7fc fffc 	bl	8001618 <LCD_IO_WriteData>
 8004620:	200a      	movs	r0, #10
 8004622:	f7fc fff9 	bl	8001618 <LCD_IO_WriteData>
 8004626:	2028      	movs	r0, #40	; 0x28
 8004628:	f7fc fff6 	bl	8001618 <LCD_IO_WriteData>
 800462c:	202f      	movs	r0, #47	; 0x2f
 800462e:	f7fc fff3 	bl	8001618 <LCD_IO_WriteData>
 8004632:	200f      	movs	r0, #15
 8004634:	f7fc fff0 	bl	8001618 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004638:	2011      	movs	r0, #17
 800463a:	f7fd f809 	bl	8001650 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800463e:	20c8      	movs	r0, #200	; 0xc8
 8004640:	f7fd f854 	bl	80016ec <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8004644:	2029      	movs	r0, #41	; 0x29
 8004646:	f7fd f803 	bl	8001650 <LCD_IO_WriteReg>
}
 800464a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800464e:	202c      	movs	r0, #44	; 0x2c
 8004650:	f7fc bffe 	b.w	8001650 <LCD_IO_WriteReg>

08004654 <ili9341_ReadID>:
{
 8004654:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004656:	f7fc ffcf 	bl	80015f8 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800465a:	2103      	movs	r1, #3
 800465c:	20d3      	movs	r0, #211	; 0xd3
 800465e:	f7fd f813 	bl	8001688 <LCD_IO_ReadData>
}
 8004662:	b280      	uxth	r0, r0
 8004664:	bd08      	pop	{r3, pc}

08004666 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8004666:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8004668:	b2c4      	uxtb	r4, r0
 800466a:	2202      	movs	r2, #2
 800466c:	2103      	movs	r1, #3
 800466e:	4620      	mov	r0, r4
 8004670:	f7fc ff78 	bl	8001564 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8004674:	200a      	movs	r0, #10
 8004676:	f7fc ffbd 	bl	80015f4 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800467a:	4620      	mov	r0, r4
 800467c:	2200      	movs	r2, #0
 800467e:	2103      	movs	r1, #3
 8004680:	f7fc ff70 	bl	8001564 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8004684:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8004688:	2002      	movs	r0, #2
 800468a:	f7fc bfb3 	b.w	80015f4 <IOE_Delay>

0800468e <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 800468e:	b538      	push	{r3, r4, r5, lr}
 8004690:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004692:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8004694:	f7fc ff64 	bl	8001560 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8004698:	2100      	movs	r1, #0
 800469a:	4620      	mov	r0, r4
 800469c:	f7fc ff7a 	bl	8001594 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80046a0:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80046a2:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80046a4:	4620      	mov	r0, r4
 80046a6:	f7fc ff75 	bl	8001594 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80046aa:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80046ae:	b280      	uxth	r0, r0
 80046b0:	bd38      	pop	{r3, r4, r5, pc}

080046b2 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80046b2:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80046b4:	b2c4      	uxtb	r4, r0
 80046b6:	2140      	movs	r1, #64	; 0x40
 80046b8:	4620      	mov	r0, r4
 80046ba:	f7fc ff6b 	bl	8001594 <IOE_Read>
  
  if(state > 0)
 80046be:	0603      	lsls	r3, r0, #24
 80046c0:	d507      	bpl.n	80046d2 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80046c2:	214c      	movs	r1, #76	; 0x4c
 80046c4:	4620      	mov	r0, r4
 80046c6:	f7fc ff65 	bl	8001594 <IOE_Read>
    {
      ret = 1;
 80046ca:	3800      	subs	r0, #0
 80046cc:	bf18      	it	ne
 80046ce:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80046d0:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80046d2:	2201      	movs	r2, #1
 80046d4:	214b      	movs	r1, #75	; 0x4b
 80046d6:	4620      	mov	r0, r4
 80046d8:	f7fc ff44 	bl	8001564 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80046dc:	4620      	mov	r0, r4
 80046de:	2200      	movs	r2, #0
 80046e0:	214b      	movs	r1, #75	; 0x4b
 80046e2:	f7fc ff3f 	bl	8001564 <IOE_Write>
  uint8_t ret = 0;
 80046e6:	2000      	movs	r0, #0
 80046e8:	e7f2      	b.n	80046d0 <stmpe811_TS_DetectTouch+0x1e>

080046ea <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 80046ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80046ec:	2304      	movs	r3, #4
 80046ee:	b2c4      	uxtb	r4, r0
{
 80046f0:	460e      	mov	r6, r1
 80046f2:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80046f4:	21d7      	movs	r1, #215	; 0xd7
 80046f6:	eb0d 0203 	add.w	r2, sp, r3
 80046fa:	4620      	mov	r0, r4
 80046fc:	f7fc ff64 	bl	80015c8 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8004700:	9b01      	ldr	r3, [sp, #4]
 8004702:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004704:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004706:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800470a:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800470c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800470e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004710:	2201      	movs	r2, #1
 8004712:	214b      	movs	r1, #75	; 0x4b
 8004714:	f7fc ff26 	bl	8001564 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004718:	2200      	movs	r2, #0
 800471a:	214b      	movs	r1, #75	; 0x4b
 800471c:	4620      	mov	r0, r4
 800471e:	f7fc ff21 	bl	8001564 <IOE_Write>
}
 8004722:	b002      	add	sp, #8
 8004724:	bd70      	pop	{r4, r5, r6, pc}
	...

08004728 <stmpe811_Init>:
{
 8004728:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800472a:	4b0a      	ldr	r3, [pc, #40]	; (8004754 <stmpe811_Init+0x2c>)
 800472c:	781a      	ldrb	r2, [r3, #0]
 800472e:	4290      	cmp	r0, r2
{
 8004730:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8004732:	d00d      	beq.n	8004750 <stmpe811_Init+0x28>
 8004734:	7859      	ldrb	r1, [r3, #1]
 8004736:	4288      	cmp	r0, r1
 8004738:	d00a      	beq.n	8004750 <stmpe811_Init+0x28>
 800473a:	b10a      	cbz	r2, 8004740 <stmpe811_Init+0x18>
 800473c:	b941      	cbnz	r1, 8004750 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800473e:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8004740:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8004742:	f7fc ff0d 	bl	8001560 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8004746:	4620      	mov	r0, r4
}
 8004748:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 800474c:	f7ff bf8b 	b.w	8004666 <stmpe811_Reset>
}
 8004750:	bd10      	pop	{r4, pc}
 8004752:	bf00      	nop
 8004754:	200027ec 	.word	0x200027ec

08004758 <stmpe811_EnableGlobalIT>:
{
 8004758:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800475a:	b2c4      	uxtb	r4, r0
 800475c:	2109      	movs	r1, #9
 800475e:	4620      	mov	r0, r4
 8004760:	f7fc ff18 	bl	8001594 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8004764:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004768:	b2c2      	uxtb	r2, r0
 800476a:	2109      	movs	r1, #9
 800476c:	4620      	mov	r0, r4
}
 800476e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004772:	f7fc bef7 	b.w	8001564 <IOE_Write>

08004776 <stmpe811_DisableGlobalIT>:
{
 8004776:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004778:	b2c4      	uxtb	r4, r0
 800477a:	2109      	movs	r1, #9
 800477c:	4620      	mov	r0, r4
 800477e:	f7fc ff09 	bl	8001594 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8004782:	2109      	movs	r1, #9
 8004784:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8004788:	4620      	mov	r0, r4
}
 800478a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800478e:	f7fc bee9 	b.w	8001564 <IOE_Write>

08004792 <stmpe811_EnableITSource>:
{
 8004792:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004794:	b2c4      	uxtb	r4, r0
{
 8004796:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004798:	4620      	mov	r0, r4
 800479a:	210a      	movs	r1, #10
 800479c:	f7fc fefa 	bl	8001594 <IOE_Read>
  tmp |= Source; 
 80047a0:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80047a4:	b2d2      	uxtb	r2, r2
 80047a6:	4620      	mov	r0, r4
 80047a8:	210a      	movs	r1, #10
}
 80047aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80047ae:	f7fc bed9 	b.w	8001564 <IOE_Write>

080047b2 <stmpe811_TS_EnableIT>:
{
 80047b2:	b507      	push	{r0, r1, r2, lr}
 80047b4:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 80047b6:	f7fc fed4 	bl	8001562 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 80047ba:	9801      	ldr	r0, [sp, #4]
 80047bc:	211f      	movs	r1, #31
 80047be:	f7ff ffe8 	bl	8004792 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 80047c2:	9801      	ldr	r0, [sp, #4]
}
 80047c4:	b003      	add	sp, #12
 80047c6:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 80047ca:	f7ff bfc5 	b.w	8004758 <stmpe811_EnableGlobalIT>

080047ce <stmpe811_DisableITSource>:
{
 80047ce:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80047d0:	b2c4      	uxtb	r4, r0
{
 80047d2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80047d4:	4620      	mov	r0, r4
 80047d6:	210a      	movs	r1, #10
 80047d8:	f7fc fedc 	bl	8001594 <IOE_Read>
  tmp &= ~Source; 
 80047dc:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80047e0:	b2d2      	uxtb	r2, r2
 80047e2:	4620      	mov	r0, r4
 80047e4:	210a      	movs	r1, #10
}
 80047e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80047ea:	f7fc bebb 	b.w	8001564 <IOE_Write>

080047ee <stmpe811_TS_DisableIT>:
{
 80047ee:	b510      	push	{r4, lr}
 80047f0:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 80047f2:	f7ff ffc0 	bl	8004776 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80047f6:	4620      	mov	r0, r4
 80047f8:	211f      	movs	r1, #31
}
 80047fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80047fe:	f7ff bfe6 	b.w	80047ce <stmpe811_DisableITSource>

08004802 <stmpe811_ReadGITStatus>:
{
 8004802:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004804:	b2c0      	uxtb	r0, r0
{
 8004806:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004808:	210b      	movs	r1, #11
 800480a:	f7fc fec3 	bl	8001594 <IOE_Read>
}
 800480e:	4020      	ands	r0, r4
 8004810:	bd10      	pop	{r4, pc}

08004812 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8004812:	211f      	movs	r1, #31
 8004814:	f7ff bff5 	b.w	8004802 <stmpe811_ReadGITStatus>

08004818 <stmpe811_ClearGlobalIT>:
{
 8004818:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800481a:	b2c0      	uxtb	r0, r0
 800481c:	210b      	movs	r1, #11
 800481e:	f7fc bea1 	b.w	8001564 <IOE_Write>

08004822 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8004822:	211f      	movs	r1, #31
 8004824:	f7ff bff8 	b.w	8004818 <stmpe811_ClearGlobalIT>

08004828 <stmpe811_IO_EnableAF>:
{
 8004828:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800482a:	b2c4      	uxtb	r4, r0
{
 800482c:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800482e:	4620      	mov	r0, r4
 8004830:	2117      	movs	r1, #23
 8004832:	f7fc feaf 	bl	8001594 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8004836:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800483a:	b2d2      	uxtb	r2, r2
 800483c:	4620      	mov	r0, r4
 800483e:	2117      	movs	r1, #23
}
 8004840:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8004844:	f7fc be8e 	b.w	8001564 <IOE_Write>

08004848 <stmpe811_TS_Start>:
{
 8004848:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800484a:	b2c4      	uxtb	r4, r0
{
 800484c:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800484e:	2104      	movs	r1, #4
 8004850:	4620      	mov	r0, r4
 8004852:	f7fc fe9f 	bl	8001594 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004856:	2104      	movs	r1, #4
 8004858:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800485c:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800485e:	4620      	mov	r0, r4
 8004860:	f7fc fe80 	bl	8001564 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8004864:	4630      	mov	r0, r6
 8004866:	21f0      	movs	r1, #240	; 0xf0
 8004868:	f7ff ffde 	bl	8004828 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800486c:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8004870:	4620      	mov	r0, r4
 8004872:	2104      	movs	r1, #4
 8004874:	f7fc fe76 	bl	8001564 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8004878:	2249      	movs	r2, #73	; 0x49
 800487a:	2120      	movs	r1, #32
 800487c:	4620      	mov	r0, r4
 800487e:	f7fc fe71 	bl	8001564 <IOE_Write>
  IOE_Delay(2); 
 8004882:	2002      	movs	r0, #2
 8004884:	f7fc feb6 	bl	80015f4 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8004888:	4620      	mov	r0, r4
 800488a:	2201      	movs	r2, #1
 800488c:	2121      	movs	r1, #33	; 0x21
 800488e:	f7fc fe69 	bl	8001564 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8004892:	4620      	mov	r0, r4
 8004894:	229a      	movs	r2, #154	; 0x9a
 8004896:	2141      	movs	r1, #65	; 0x41
 8004898:	f7fc fe64 	bl	8001564 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800489c:	4620      	mov	r0, r4
 800489e:	2201      	movs	r2, #1
 80048a0:	214a      	movs	r1, #74	; 0x4a
 80048a2:	f7fc fe5f 	bl	8001564 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80048a6:	4620      	mov	r0, r4
 80048a8:	2201      	movs	r2, #1
 80048aa:	214b      	movs	r1, #75	; 0x4b
 80048ac:	f7fc fe5a 	bl	8001564 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80048b0:	4620      	mov	r0, r4
 80048b2:	2200      	movs	r2, #0
 80048b4:	214b      	movs	r1, #75	; 0x4b
 80048b6:	f7fc fe55 	bl	8001564 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80048ba:	4620      	mov	r0, r4
 80048bc:	2201      	movs	r2, #1
 80048be:	2156      	movs	r1, #86	; 0x56
 80048c0:	f7fc fe50 	bl	8001564 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80048c4:	4620      	mov	r0, r4
 80048c6:	2201      	movs	r2, #1
 80048c8:	2158      	movs	r1, #88	; 0x58
 80048ca:	f7fc fe4b 	bl	8001564 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80048ce:	4620      	mov	r0, r4
 80048d0:	2201      	movs	r2, #1
 80048d2:	2140      	movs	r1, #64	; 0x40
 80048d4:	f7fc fe46 	bl	8001564 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80048d8:	4620      	mov	r0, r4
 80048da:	22ff      	movs	r2, #255	; 0xff
 80048dc:	210b      	movs	r1, #11
 80048de:	f7fc fe41 	bl	8001564 <IOE_Write>
}
 80048e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 80048e6:	2002      	movs	r0, #2
 80048e8:	f7fc be84 	b.w	80015f4 <IOE_Delay>

080048ec <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80048ec:	4b05      	ldr	r3, [pc, #20]	; (8004904 <SystemInit+0x18>)
 80048ee:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 80048f2:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80048f6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80048fa:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80048fe:	609a      	str	r2, [r3, #8]
#endif
}
 8004900:	4770      	bx	lr
 8004902:	bf00      	nop
 8004904:	e000ed00 	.word	0xe000ed00

08004908 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004908:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800490a:	4b0b      	ldr	r3, [pc, #44]	; (8004938 <HAL_Init+0x30>)
 800490c:	681a      	ldr	r2, [r3, #0]
 800490e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004912:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004914:	681a      	ldr	r2, [r3, #0]
 8004916:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800491a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800491c:	681a      	ldr	r2, [r3, #0]
 800491e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004922:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004924:	2003      	movs	r0, #3
 8004926:	f000 f82f 	bl	8004988 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800492a:	2000      	movs	r0, #0
 800492c:	f7fd fa90 	bl	8001e50 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004930:	f7fd f81a 	bl	8001968 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004934:	2000      	movs	r0, #0
 8004936:	bd08      	pop	{r3, pc}
 8004938:	40023c00 	.word	0x40023c00

0800493c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800493c:	4a03      	ldr	r2, [pc, #12]	; (800494c <HAL_IncTick+0x10>)
 800493e:	4b04      	ldr	r3, [pc, #16]	; (8004950 <HAL_IncTick+0x14>)
 8004940:	6811      	ldr	r1, [r2, #0]
 8004942:	781b      	ldrb	r3, [r3, #0]
 8004944:	440b      	add	r3, r1
 8004946:	6013      	str	r3, [r2, #0]
}
 8004948:	4770      	bx	lr
 800494a:	bf00      	nop
 800494c:	200139fc 	.word	0x200139fc
 8004950:	20000078 	.word	0x20000078

08004954 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004954:	4b01      	ldr	r3, [pc, #4]	; (800495c <HAL_GetTick+0x8>)
 8004956:	6818      	ldr	r0, [r3, #0]
}
 8004958:	4770      	bx	lr
 800495a:	bf00      	nop
 800495c:	200139fc 	.word	0x200139fc

08004960 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004960:	b538      	push	{r3, r4, r5, lr}
 8004962:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004964:	f7ff fff6 	bl	8004954 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004968:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800496a:	bf1c      	itt	ne
 800496c:	4b05      	ldrne	r3, [pc, #20]	; (8004984 <HAL_Delay+0x24>)
 800496e:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8004970:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8004972:	bf18      	it	ne
 8004974:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8004976:	f7ff ffed 	bl	8004954 <HAL_GetTick>
 800497a:	1b43      	subs	r3, r0, r5
 800497c:	42a3      	cmp	r3, r4
 800497e:	d3fa      	bcc.n	8004976 <HAL_Delay+0x16>
  {
  }
}
 8004980:	bd38      	pop	{r3, r4, r5, pc}
 8004982:	bf00      	nop
 8004984:	20000078 	.word	0x20000078

08004988 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004988:	4907      	ldr	r1, [pc, #28]	; (80049a8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800498a:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800498c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004990:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004992:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004994:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004998:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800499a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800499c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80049a0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80049a4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80049a6:	4770      	bx	lr
 80049a8:	e000ed00 	.word	0xe000ed00

080049ac <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80049ac:	4b16      	ldr	r3, [pc, #88]	; (8004a08 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80049ae:	b530      	push	{r4, r5, lr}
 80049b0:	68dc      	ldr	r4, [r3, #12]
 80049b2:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80049b6:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80049ba:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80049bc:	2d04      	cmp	r5, #4
 80049be:	bf28      	it	cs
 80049c0:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80049c2:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80049c4:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80049c8:	bf8c      	ite	hi
 80049ca:	3c03      	subhi	r4, #3
 80049cc:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80049ce:	fa03 f505 	lsl.w	r5, r3, r5
 80049d2:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80049d6:	40a3      	lsls	r3, r4
 80049d8:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80049dc:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 80049de:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80049e0:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80049e4:	bfac      	ite	ge
 80049e6:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80049ea:	4a08      	ldrlt	r2, [pc, #32]	; (8004a0c <HAL_NVIC_SetPriority+0x60>)
 80049ec:	ea4f 1303 	mov.w	r3, r3, lsl #4
 80049f0:	bfb8      	it	lt
 80049f2:	f000 000f 	andlt.w	r0, r0, #15
 80049f6:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80049f8:	bfaa      	itet	ge
 80049fa:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80049fe:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004a00:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004a04:	bd30      	pop	{r4, r5, pc}
 8004a06:	bf00      	nop
 8004a08:	e000ed00 	.word	0xe000ed00
 8004a0c:	e000ed14 	.word	0xe000ed14

08004a10 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004a10:	2800      	cmp	r0, #0
 8004a12:	db08      	blt.n	8004a26 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004a14:	0942      	lsrs	r2, r0, #5
 8004a16:	2301      	movs	r3, #1
 8004a18:	f000 001f 	and.w	r0, r0, #31
 8004a1c:	fa03 f000 	lsl.w	r0, r3, r0
 8004a20:	4b01      	ldr	r3, [pc, #4]	; (8004a28 <HAL_NVIC_EnableIRQ+0x18>)
 8004a22:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004a26:	4770      	bx	lr
 8004a28:	e000e100 	.word	0xe000e100

08004a2c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004a2c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004a2e:	4604      	mov	r4, r0
 8004a30:	b150      	cbz	r0, 8004a48 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004a32:	7943      	ldrb	r3, [r0, #5]
 8004a34:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004a38:	b913      	cbnz	r3, 8004a40 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8004a3a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004a3c:	f7fc ffb4 	bl	80019a8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004a40:	2301      	movs	r3, #1
 8004a42:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004a44:	2000      	movs	r0, #0
}
 8004a46:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004a48:	2001      	movs	r0, #1
 8004a4a:	e7fc      	b.n	8004a46 <HAL_CRC_Init+0x1a>

08004a4c <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004a4c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8004a50:	2b02      	cmp	r3, #2
 8004a52:	d003      	beq.n	8004a5c <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004a54:	2380      	movs	r3, #128	; 0x80
 8004a56:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8004a58:	2001      	movs	r0, #1
 8004a5a:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8004a5c:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8004a5e:	2305      	movs	r3, #5
 8004a60:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8004a64:	6813      	ldr	r3, [r2, #0]
 8004a66:	f023 0301 	bic.w	r3, r3, #1
 8004a6a:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 8004a6c:	2000      	movs	r0, #0
}
 8004a6e:	4770      	bx	lr

08004a70 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004a70:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8004a72:	4604      	mov	r4, r0
 8004a74:	b330      	cbz	r0, 8004ac4 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004a76:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004a7a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004a7e:	b91b      	cbnz	r3, 8004a88 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004a80:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004a84:	f7fc ffa8 	bl	80019d8 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004a88:	6822      	ldr	r2, [r4, #0]
 8004a8a:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004a8c:	2302      	movs	r3, #2
 8004a8e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004a92:	6813      	ldr	r3, [r2, #0]
 8004a94:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8004a98:	430b      	orrs	r3, r1
 8004a9a:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004a9c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004a9e:	68a1      	ldr	r1, [r4, #8]
 8004aa0:	f023 0307 	bic.w	r3, r3, #7
 8004aa4:	430b      	orrs	r3, r1
 8004aa6:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004aa8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8004aaa:	68e1      	ldr	r1, [r4, #12]
 8004aac:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8004ab0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004ab4:	430b      	orrs	r3, r1
 8004ab6:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004ab8:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004aba:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004abc:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004abe:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8004ac2:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8004ac4:	2001      	movs	r0, #1
 8004ac6:	e7fc      	b.n	8004ac2 <HAL_DMA2D_Init+0x52>

08004ac8 <HAL_DMA2D_LineEventCallback>:
 8004ac8:	4770      	bx	lr

08004aca <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8004aca:	4770      	bx	lr

08004acc <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004acc:	6803      	ldr	r3, [r0, #0]
{
 8004ace:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004ad0:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004ad2:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004ad4:	07f2      	lsls	r2, r6, #31
{
 8004ad6:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004ad8:	d514      	bpl.n	8004b04 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004ada:	05e9      	lsls	r1, r5, #23
 8004adc:	d512      	bpl.n	8004b04 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004ade:	681a      	ldr	r2, [r3, #0]
 8004ae0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004ae4:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004ae6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8004ae8:	f042 0201 	orr.w	r2, r2, #1
 8004aec:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004aee:	2201      	movs	r2, #1
 8004af0:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004af2:	2304      	movs	r3, #4
 8004af4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004af8:	2300      	movs	r3, #0
 8004afa:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8004afe:	6943      	ldr	r3, [r0, #20]
 8004b00:	b103      	cbz	r3, 8004b04 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004b02:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004b04:	06b2      	lsls	r2, r6, #26
 8004b06:	d516      	bpl.n	8004b36 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004b08:	04ab      	lsls	r3, r5, #18
 8004b0a:	d514      	bpl.n	8004b36 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004b0c:	6823      	ldr	r3, [r4, #0]
 8004b0e:	681a      	ldr	r2, [r3, #0]
 8004b10:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004b14:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004b16:	2220      	movs	r2, #32
 8004b18:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004b1a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004b1c:	f043 0302 	orr.w	r3, r3, #2
 8004b20:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004b22:	2304      	movs	r3, #4
 8004b24:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004b28:	2300      	movs	r3, #0
 8004b2a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8004b2e:	6963      	ldr	r3, [r4, #20]
 8004b30:	b10b      	cbz	r3, 8004b36 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004b32:	4620      	mov	r0, r4
 8004b34:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004b36:	0730      	lsls	r0, r6, #28
 8004b38:	d516      	bpl.n	8004b68 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004b3a:	0529      	lsls	r1, r5, #20
 8004b3c:	d514      	bpl.n	8004b68 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004b3e:	6823      	ldr	r3, [r4, #0]
 8004b40:	681a      	ldr	r2, [r3, #0]
 8004b42:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004b46:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004b48:	2208      	movs	r2, #8
 8004b4a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004b4c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004b4e:	f043 0304 	orr.w	r3, r3, #4
 8004b52:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004b54:	2304      	movs	r3, #4
 8004b56:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004b5a:	2300      	movs	r3, #0
 8004b5c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8004b60:	6963      	ldr	r3, [r4, #20]
 8004b62:	b10b      	cbz	r3, 8004b68 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004b64:	4620      	mov	r0, r4
 8004b66:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004b68:	0772      	lsls	r2, r6, #29
 8004b6a:	d50b      	bpl.n	8004b84 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004b6c:	056b      	lsls	r3, r5, #21
 8004b6e:	d509      	bpl.n	8004b84 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004b70:	6823      	ldr	r3, [r4, #0]
 8004b72:	681a      	ldr	r2, [r3, #0]
 8004b74:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004b78:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004b7a:	2204      	movs	r2, #4
 8004b7c:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004b7e:	4620      	mov	r0, r4
 8004b80:	f7ff ffa2 	bl	8004ac8 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004b84:	07b0      	lsls	r0, r6, #30
 8004b86:	d514      	bpl.n	8004bb2 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004b88:	05a9      	lsls	r1, r5, #22
 8004b8a:	d512      	bpl.n	8004bb2 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004b8c:	6823      	ldr	r3, [r4, #0]
 8004b8e:	681a      	ldr	r2, [r3, #0]
 8004b90:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004b94:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004b96:	2202      	movs	r2, #2
 8004b98:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004b9a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004b9c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004b9e:	2301      	movs	r3, #1
 8004ba0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004ba4:	2300      	movs	r3, #0
 8004ba6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8004baa:	6923      	ldr	r3, [r4, #16]
 8004bac:	b10b      	cbz	r3, 8004bb2 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8004bae:	4620      	mov	r0, r4
 8004bb0:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004bb2:	06f2      	lsls	r2, r6, #27
 8004bb4:	d513      	bpl.n	8004bde <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004bb6:	04eb      	lsls	r3, r5, #19
 8004bb8:	d511      	bpl.n	8004bde <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004bba:	6823      	ldr	r3, [r4, #0]
 8004bbc:	681a      	ldr	r2, [r3, #0]
 8004bbe:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004bc2:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004bc4:	2210      	movs	r2, #16
 8004bc6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004bc8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004bca:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004bcc:	2301      	movs	r3, #1
 8004bce:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004bd2:	2300      	movs	r3, #0
 8004bd4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004bd8:	4620      	mov	r0, r4
 8004bda:	f7ff ff76 	bl	8004aca <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8004bde:	bd70      	pop	{r4, r5, r6, pc}

08004be0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004be0:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8004be2:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8004be6:	2b01      	cmp	r3, #1
 8004be8:	f04f 0302 	mov.w	r3, #2
 8004bec:	d02b      	beq.n	8004c46 <HAL_DMA2D_ConfigLayer+0x66>
 8004bee:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004bf0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8004bf4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004bf8:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8004bfc:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8004c00:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8004c02:	4f18      	ldr	r7, [pc, #96]	; (8004c64 <HAL_DMA2D_ConfigLayer+0x84>)
 8004c04:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004c08:	3c09      	subs	r4, #9
 8004c0a:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004c0c:	bf9c      	itt	ls
 8004c0e:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8004c12:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004c14:	ea4f 1601 	mov.w	r6, r1, lsl #4
 8004c18:	6803      	ldr	r3, [r0, #0]
  }
  else
  {
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004c1a:	bf88      	it	hi
 8004c1c:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004c20:	b999      	cbnz	r1, 8004c4a <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004c22:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004c24:	4039      	ands	r1, r7
 8004c26:	430a      	orrs	r2, r1
 8004c28:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004c2a:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004c2c:	6982      	ldr	r2, [r0, #24]
 8004c2e:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004c30:	d803      	bhi.n	8004c3a <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8004c32:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8004c34:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8004c38:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004c3a:	2301      	movs	r3, #1
 8004c3c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004c40:	2300      	movs	r3, #0
 8004c42:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8004c46:	4618      	mov	r0, r3

  return HAL_OK;
}
 8004c48:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004c4a:	69d9      	ldr	r1, [r3, #28]
 8004c4c:	4039      	ands	r1, r7
 8004c4e:	430a      	orrs	r2, r1
 8004c50:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004c52:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004c54:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004c56:	6992      	ldr	r2, [r2, #24]
 8004c58:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8004c5a:	bf9c      	itt	ls
 8004c5c:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8004c60:	621d      	strls	r5, [r3, #32]
 8004c62:	e7ea      	b.n	8004c3a <HAL_DMA2D_ConfigLayer+0x5a>
 8004c64:	00fcfff0 	.word	0x00fcfff0

08004c68 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004c68:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004c6c:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8004e34 <HAL_GPIO_Init+0x1cc>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004c70:	4a6e      	ldr	r2, [pc, #440]	; (8004e2c <HAL_GPIO_Init+0x1c4>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004c72:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 8004e38 <HAL_GPIO_Init+0x1d0>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004c76:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004c78:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8004c7a:	2401      	movs	r4, #1
 8004c7c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004c7e:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8004c82:	43ac      	bics	r4, r5
 8004c84:	f040 80b8 	bne.w	8004df8 <HAL_GPIO_Init+0x190>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8004c88:	684c      	ldr	r4, [r1, #4]
 8004c8a:	f024 0c10 	bic.w	ip, r4, #16
 8004c8e:	ea4f 0e43 	mov.w	lr, r3, lsl #1
 8004c92:	2503      	movs	r5, #3
 8004c94:	f10c 37ff 	add.w	r7, ip, #4294967295
 8004c98:	fa05 f50e 	lsl.w	r5, r5, lr
 8004c9c:	2f01      	cmp	r7, #1
 8004c9e:	ea6f 0505 	mvn.w	r5, r5
 8004ca2:	d811      	bhi.n	8004cc8 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8004ca4:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004ca6:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004caa:	68cf      	ldr	r7, [r1, #12]
 8004cac:	fa07 f70e 	lsl.w	r7, r7, lr
 8004cb0:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8004cb4:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004cb6:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004cb8:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8004cbc:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8004cc0:	409f      	lsls	r7, r3
 8004cc2:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8004cc6:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8004cc8:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004cca:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004cce:	688f      	ldr	r7, [r1, #8]
 8004cd0:	fa07 f70e 	lsl.w	r7, r7, lr
 8004cd4:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004cd8:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 8004cdc:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004cde:	d116      	bne.n	8004d0e <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 8004ce0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8004ce4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004ce8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8004cec:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004cf0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8004cf4:	f04f 0c0f 	mov.w	ip, #15
 8004cf8:	fa0c fc0b 	lsl.w	ip, ip, fp
 8004cfc:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004d00:	690f      	ldr	r7, [r1, #16]
 8004d02:	fa07 f70b 	lsl.w	r7, r7, fp
 8004d06:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 8004d0a:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 8004d0e:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004d10:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004d12:	f004 0703 	and.w	r7, r4, #3
 8004d16:	fa07 fe0e 	lsl.w	lr, r7, lr
 8004d1a:	ea4e 0505 	orr.w	r5, lr, r5
      GPIOx->MODER = temp;
 8004d1e:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8004d20:	00e5      	lsls	r5, r4, #3
 8004d22:	d569      	bpl.n	8004df8 <HAL_GPIO_Init+0x190>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004d24:	f04f 0b00 	mov.w	fp, #0
 8004d28:	f8cd b004 	str.w	fp, [sp, #4]
 8004d2c:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004d30:	4d3f      	ldr	r5, [pc, #252]	; (8004e30 <HAL_GPIO_Init+0x1c8>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004d32:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8004d36:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8004d3a:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8004d3e:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8004d42:	9701      	str	r7, [sp, #4]
 8004d44:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8004d46:	f023 0703 	bic.w	r7, r3, #3
 8004d4a:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8004d4e:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004d52:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8004d56:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004d5a:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8004d5e:	f04f 0c0f 	mov.w	ip, #15
 8004d62:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004d66:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004d68:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004d6c:	d04b      	beq.n	8004e06 <HAL_GPIO_Init+0x19e>
 8004d6e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004d72:	42a8      	cmp	r0, r5
 8004d74:	d049      	beq.n	8004e0a <HAL_GPIO_Init+0x1a2>
 8004d76:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004d7a:	42a8      	cmp	r0, r5
 8004d7c:	d047      	beq.n	8004e0e <HAL_GPIO_Init+0x1a6>
 8004d7e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004d82:	42a8      	cmp	r0, r5
 8004d84:	d045      	beq.n	8004e12 <HAL_GPIO_Init+0x1aa>
 8004d86:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004d8a:	42a8      	cmp	r0, r5
 8004d8c:	d043      	beq.n	8004e16 <HAL_GPIO_Init+0x1ae>
 8004d8e:	4548      	cmp	r0, r9
 8004d90:	d043      	beq.n	8004e1a <HAL_GPIO_Init+0x1b2>
 8004d92:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8004d96:	42a8      	cmp	r0, r5
 8004d98:	d041      	beq.n	8004e1e <HAL_GPIO_Init+0x1b6>
 8004d9a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004d9e:	42a8      	cmp	r0, r5
 8004da0:	d03f      	beq.n	8004e22 <HAL_GPIO_Init+0x1ba>
 8004da2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004da6:	42a8      	cmp	r0, r5
 8004da8:	d03d      	beq.n	8004e26 <HAL_GPIO_Init+0x1be>
 8004daa:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004dae:	42a8      	cmp	r0, r5
 8004db0:	bf0c      	ite	eq
 8004db2:	2509      	moveq	r5, #9
 8004db4:	250a      	movne	r5, #10
 8004db6:	fa05 f50e 	lsl.w	r5, r5, lr
 8004dba:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004dbe:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 8004dc0:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8004dc2:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8004dc4:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8004dc8:	bf0c      	ite	eq
 8004dca:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8004dcc:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8004dce:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 8004dd0:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8004dd2:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8004dd6:	bf0c      	ite	eq
 8004dd8:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8004dda:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 8004ddc:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004dde:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8004de0:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8004de4:	bf0c      	ite	eq
 8004de6:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8004de8:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 8004dea:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 8004dec:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8004dee:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 8004df0:	bf54      	ite	pl
 8004df2:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 8004df4:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 8004df6:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004df8:	3301      	adds	r3, #1
 8004dfa:	2b10      	cmp	r3, #16
 8004dfc:	f47f af3c 	bne.w	8004c78 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 8004e00:	b003      	add	sp, #12
 8004e02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004e06:	465d      	mov	r5, fp
 8004e08:	e7d5      	b.n	8004db6 <HAL_GPIO_Init+0x14e>
 8004e0a:	2501      	movs	r5, #1
 8004e0c:	e7d3      	b.n	8004db6 <HAL_GPIO_Init+0x14e>
 8004e0e:	2502      	movs	r5, #2
 8004e10:	e7d1      	b.n	8004db6 <HAL_GPIO_Init+0x14e>
 8004e12:	2503      	movs	r5, #3
 8004e14:	e7cf      	b.n	8004db6 <HAL_GPIO_Init+0x14e>
 8004e16:	2504      	movs	r5, #4
 8004e18:	e7cd      	b.n	8004db6 <HAL_GPIO_Init+0x14e>
 8004e1a:	2505      	movs	r5, #5
 8004e1c:	e7cb      	b.n	8004db6 <HAL_GPIO_Init+0x14e>
 8004e1e:	2506      	movs	r5, #6
 8004e20:	e7c9      	b.n	8004db6 <HAL_GPIO_Init+0x14e>
 8004e22:	2507      	movs	r5, #7
 8004e24:	e7c7      	b.n	8004db6 <HAL_GPIO_Init+0x14e>
 8004e26:	2508      	movs	r5, #8
 8004e28:	e7c5      	b.n	8004db6 <HAL_GPIO_Init+0x14e>
 8004e2a:	bf00      	nop
 8004e2c:	40013c00 	.word	0x40013c00
 8004e30:	40020000 	.word	0x40020000
 8004e34:	40023800 	.word	0x40023800
 8004e38:	40021400 	.word	0x40021400

08004e3c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004e3c:	b10a      	cbz	r2, 8004e42 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004e3e:	6181      	str	r1, [r0, #24]
  }
}
 8004e40:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004e42:	0409      	lsls	r1, r1, #16
 8004e44:	e7fb      	b.n	8004e3e <HAL_GPIO_WritePin+0x2>

08004e46 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004e46:	6801      	ldr	r1, [r0, #0]
 8004e48:	694b      	ldr	r3, [r1, #20]
 8004e4a:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8004e4e:	f04f 0200 	mov.w	r2, #0
 8004e52:	d010      	beq.n	8004e76 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004e54:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004e58:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8004e5a:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8004e5c:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8004e5e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004e62:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004e66:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004e68:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004e6c:	f043 0304 	orr.w	r3, r3, #4
 8004e70:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8004e72:	2001      	movs	r0, #1
 8004e74:	4770      	bx	lr
  }
  return HAL_OK;
 8004e76:	4618      	mov	r0, r3
}
 8004e78:	4770      	bx	lr

08004e7a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8004e7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e7e:	4604      	mov	r4, r0
 8004e80:	460f      	mov	r7, r1
 8004e82:	4616      	mov	r6, r2
 8004e84:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004e86:	6825      	ldr	r5, [r4, #0]
 8004e88:	6968      	ldr	r0, [r5, #20]
 8004e8a:	ea27 0000 	bic.w	r0, r7, r0
 8004e8e:	b280      	uxth	r0, r0
 8004e90:	b1b8      	cbz	r0, 8004ec2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004e92:	696b      	ldr	r3, [r5, #20]
 8004e94:	055a      	lsls	r2, r3, #21
 8004e96:	d516      	bpl.n	8004ec6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004e98:	682b      	ldr	r3, [r5, #0]
 8004e9a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004e9e:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004ea0:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004ea4:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004ea6:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004ea8:	2300      	movs	r3, #0
 8004eaa:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004eac:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004eb0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004eb4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004eb6:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004eba:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004ebc:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8004ec0:	2001      	movs	r0, #1
}
 8004ec2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004ec6:	1c73      	adds	r3, r6, #1
 8004ec8:	d0de      	beq.n	8004e88 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004eca:	f7ff fd43 	bl	8004954 <HAL_GetTick>
 8004ece:	eba0 0008 	sub.w	r0, r0, r8
 8004ed2:	42b0      	cmp	r0, r6
 8004ed4:	d801      	bhi.n	8004eda <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8004ed6:	2e00      	cmp	r6, #0
 8004ed8:	d1d5      	bne.n	8004e86 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004eda:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004edc:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004ede:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004ee0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004ee4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004ee8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004eea:	f042 0220 	orr.w	r2, r2, #32
 8004eee:	e7e4      	b.n	8004eba <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08004ef0 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8004ef0:	b570      	push	{r4, r5, r6, lr}
 8004ef2:	4604      	mov	r4, r0
 8004ef4:	460d      	mov	r5, r1
 8004ef6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004ef8:	6823      	ldr	r3, [r4, #0]
 8004efa:	695b      	ldr	r3, [r3, #20]
 8004efc:	075b      	lsls	r3, r3, #29
 8004efe:	d501      	bpl.n	8004f04 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8004f00:	2000      	movs	r0, #0
}
 8004f02:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004f04:	4620      	mov	r0, r4
 8004f06:	f7ff ff9e 	bl	8004e46 <I2C_IsAcknowledgeFailed>
 8004f0a:	b9a8      	cbnz	r0, 8004f38 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004f0c:	1c6a      	adds	r2, r5, #1
 8004f0e:	d0f3      	beq.n	8004ef8 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f10:	f7ff fd20 	bl	8004954 <HAL_GetTick>
 8004f14:	1b80      	subs	r0, r0, r6
 8004f16:	42a8      	cmp	r0, r5
 8004f18:	d801      	bhi.n	8004f1e <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004f1a:	2d00      	cmp	r5, #0
 8004f1c:	d1ec      	bne.n	8004ef8 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004f1e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004f20:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004f22:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004f24:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004f28:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004f2c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004f2e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004f32:	f042 0220 	orr.w	r2, r2, #32
 8004f36:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004f38:	2001      	movs	r0, #1
 8004f3a:	e7e2      	b.n	8004f02 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08004f3c <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8004f3c:	b570      	push	{r4, r5, r6, lr}
 8004f3e:	4604      	mov	r4, r0
 8004f40:	460d      	mov	r5, r1
 8004f42:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004f44:	6821      	ldr	r1, [r4, #0]
 8004f46:	694b      	ldr	r3, [r1, #20]
 8004f48:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8004f4c:	d001      	beq.n	8004f52 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8004f4e:	2000      	movs	r0, #0
 8004f50:	e010      	b.n	8004f74 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004f52:	694a      	ldr	r2, [r1, #20]
 8004f54:	06d2      	lsls	r2, r2, #27
 8004f56:	d50e      	bpl.n	8004f76 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004f58:	f06f 0210 	mvn.w	r2, #16
 8004f5c:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004f5e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004f60:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004f62:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004f66:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004f6a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004f6c:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004f6e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8004f72:	2001      	movs	r0, #1
}
 8004f74:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f76:	f7ff fced 	bl	8004954 <HAL_GetTick>
 8004f7a:	1b80      	subs	r0, r0, r6
 8004f7c:	42a8      	cmp	r0, r5
 8004f7e:	d801      	bhi.n	8004f84 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8004f80:	2d00      	cmp	r5, #0
 8004f82:	d1df      	bne.n	8004f44 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004f84:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004f86:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004f88:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004f8a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004f8e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004f92:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004f94:	f042 0220 	orr.w	r2, r2, #32
 8004f98:	e7e8      	b.n	8004f6c <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08004f9a <I2C_WaitOnFlagUntilTimeout>:
{
 8004f9a:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8004f9e:	4606      	mov	r6, r0
 8004fa0:	460f      	mov	r7, r1
 8004fa2:	4691      	mov	r9, r2
 8004fa4:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004fa6:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8004faa:	6833      	ldr	r3, [r6, #0]
 8004fac:	f1ba 0f01 	cmp.w	sl, #1
 8004fb0:	bf0c      	ite	eq
 8004fb2:	695c      	ldreq	r4, [r3, #20]
 8004fb4:	699c      	ldrne	r4, [r3, #24]
 8004fb6:	ea27 0404 	bic.w	r4, r7, r4
 8004fba:	b2a4      	uxth	r4, r4
 8004fbc:	fab4 f484 	clz	r4, r4
 8004fc0:	0964      	lsrs	r4, r4, #5
 8004fc2:	45a1      	cmp	r9, r4
 8004fc4:	d001      	beq.n	8004fca <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8004fc6:	2000      	movs	r0, #0
 8004fc8:	e017      	b.n	8004ffa <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8004fca:	1c6a      	adds	r2, r5, #1
 8004fcc:	d0ee      	beq.n	8004fac <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004fce:	f7ff fcc1 	bl	8004954 <HAL_GetTick>
 8004fd2:	9b08      	ldr	r3, [sp, #32]
 8004fd4:	1ac0      	subs	r0, r0, r3
 8004fd6:	42a8      	cmp	r0, r5
 8004fd8:	d801      	bhi.n	8004fde <I2C_WaitOnFlagUntilTimeout+0x44>
 8004fda:	2d00      	cmp	r5, #0
 8004fdc:	d1e5      	bne.n	8004faa <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004fde:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004fe0:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004fe2:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004fe4:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004fe8:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004fec:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004fee:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004ff2:	f042 0220 	orr.w	r2, r2, #32
 8004ff6:	6432      	str	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004ff8:	2001      	movs	r0, #1
}
 8004ffa:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08004ffe <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8004ffe:	b570      	push	{r4, r5, r6, lr}
 8005000:	4604      	mov	r4, r0
 8005002:	460d      	mov	r5, r1
 8005004:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005006:	6823      	ldr	r3, [r4, #0]
 8005008:	695b      	ldr	r3, [r3, #20]
 800500a:	061b      	lsls	r3, r3, #24
 800500c:	d501      	bpl.n	8005012 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800500e:	2000      	movs	r0, #0
}
 8005010:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005012:	4620      	mov	r0, r4
 8005014:	f7ff ff17 	bl	8004e46 <I2C_IsAcknowledgeFailed>
 8005018:	b9a8      	cbnz	r0, 8005046 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800501a:	1c6a      	adds	r2, r5, #1
 800501c:	d0f3      	beq.n	8005006 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800501e:	f7ff fc99 	bl	8004954 <HAL_GetTick>
 8005022:	1b80      	subs	r0, r0, r6
 8005024:	42a8      	cmp	r0, r5
 8005026:	d801      	bhi.n	800502c <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8005028:	2d00      	cmp	r5, #0
 800502a:	d1ec      	bne.n	8005006 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800502c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800502e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005030:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005032:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005036:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800503a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800503c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005040:	f042 0220 	orr.w	r2, r2, #32
 8005044:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005046:	2001      	movs	r0, #1
 8005048:	e7e2      	b.n	8005010 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

0800504c <I2C_RequestMemoryWrite>:
{
 800504c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005050:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005052:	6802      	ldr	r2, [r0, #0]
{
 8005054:	b085      	sub	sp, #20
 8005056:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800505a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800505c:	6813      	ldr	r3, [r2, #0]
 800505e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005062:	6013      	str	r3, [r2, #0]
{
 8005064:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005066:	463b      	mov	r3, r7
 8005068:	f8cd 8000 	str.w	r8, [sp]
 800506c:	2200      	movs	r2, #0
 800506e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005072:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005074:	f7ff ff91 	bl	8004f9a <I2C_WaitOnFlagUntilTimeout>
 8005078:	6823      	ldr	r3, [r4, #0]
 800507a:	b138      	cbz	r0, 800508c <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800507c:	681b      	ldr	r3, [r3, #0]
 800507e:	05db      	lsls	r3, r3, #23
 8005080:	d502      	bpl.n	8005088 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005082:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005086:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005088:	2003      	movs	r0, #3
 800508a:	e00a      	b.n	80050a2 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800508c:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8005090:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005092:	4919      	ldr	r1, [pc, #100]	; (80050f8 <I2C_RequestMemoryWrite+0xac>)
 8005094:	4643      	mov	r3, r8
 8005096:	463a      	mov	r2, r7
 8005098:	4620      	mov	r0, r4
 800509a:	f7ff feee 	bl	8004e7a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800509e:	b118      	cbz	r0, 80050a8 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 80050a0:	2001      	movs	r0, #1
}
 80050a2:	b005      	add	sp, #20
 80050a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80050a8:	6823      	ldr	r3, [r4, #0]
 80050aa:	9003      	str	r0, [sp, #12]
 80050ac:	695a      	ldr	r2, [r3, #20]
 80050ae:	9203      	str	r2, [sp, #12]
 80050b0:	699b      	ldr	r3, [r3, #24]
 80050b2:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80050b4:	4642      	mov	r2, r8
 80050b6:	4639      	mov	r1, r7
 80050b8:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80050ba:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80050bc:	f7ff ff9f 	bl	8004ffe <I2C_WaitOnTXEFlagUntilTimeout>
 80050c0:	b140      	cbz	r0, 80050d4 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80050c2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80050c4:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80050c6:	bf01      	itttt	eq
 80050c8:	6822      	ldreq	r2, [r4, #0]
 80050ca:	6813      	ldreq	r3, [r2, #0]
 80050cc:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80050d0:	6013      	streq	r3, [r2, #0]
 80050d2:	e7e5      	b.n	80050a0 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80050d4:	f1b9 0f01 	cmp.w	r9, #1
 80050d8:	6823      	ldr	r3, [r4, #0]
 80050da:	d102      	bne.n	80050e2 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80050dc:	b2ed      	uxtb	r5, r5
 80050de:	611d      	str	r5, [r3, #16]
 80050e0:	e7df      	b.n	80050a2 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80050e2:	0a2a      	lsrs	r2, r5, #8
 80050e4:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80050e6:	4639      	mov	r1, r7
 80050e8:	4642      	mov	r2, r8
 80050ea:	4620      	mov	r0, r4
 80050ec:	f7ff ff87 	bl	8004ffe <I2C_WaitOnTXEFlagUntilTimeout>
 80050f0:	2800      	cmp	r0, #0
 80050f2:	d1e6      	bne.n	80050c2 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80050f4:	6823      	ldr	r3, [r4, #0]
 80050f6:	e7f1      	b.n	80050dc <I2C_RequestMemoryWrite+0x90>
 80050f8:	00010002 	.word	0x00010002

080050fc <I2C_RequestMemoryRead>:
{
 80050fc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005100:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005102:	6803      	ldr	r3, [r0, #0]
{
 8005104:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005106:	681a      	ldr	r2, [r3, #0]
 8005108:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800510c:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800510e:	681a      	ldr	r2, [r3, #0]
{
 8005110:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005114:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005118:	601a      	str	r2, [r3, #0]
{
 800511a:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800511c:	463b      	mov	r3, r7
 800511e:	f8cd 8000 	str.w	r8, [sp]
 8005122:	2200      	movs	r2, #0
 8005124:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005128:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800512a:	f7ff ff36 	bl	8004f9a <I2C_WaitOnFlagUntilTimeout>
 800512e:	6823      	ldr	r3, [r4, #0]
 8005130:	b148      	cbz	r0, 8005146 <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005132:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005134:	05db      	lsls	r3, r3, #23
 8005136:	d502      	bpl.n	800513e <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005138:	f44f 7300 	mov.w	r3, #512	; 0x200
 800513c:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800513e:	2003      	movs	r0, #3
}
 8005140:	b004      	add	sp, #16
 8005142:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005146:	fa5f f986 	uxtb.w	r9, r6
 800514a:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800514e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005150:	492a      	ldr	r1, [pc, #168]	; (80051fc <I2C_RequestMemoryRead+0x100>)
 8005152:	4643      	mov	r3, r8
 8005154:	463a      	mov	r2, r7
 8005156:	4620      	mov	r0, r4
 8005158:	f7ff fe8f 	bl	8004e7a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800515c:	b108      	cbz	r0, 8005162 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800515e:	2001      	movs	r0, #1
 8005160:	e7ee      	b.n	8005140 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005162:	6823      	ldr	r3, [r4, #0]
 8005164:	9003      	str	r0, [sp, #12]
 8005166:	695a      	ldr	r2, [r3, #20]
 8005168:	9203      	str	r2, [sp, #12]
 800516a:	699b      	ldr	r3, [r3, #24]
 800516c:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800516e:	4642      	mov	r2, r8
 8005170:	4639      	mov	r1, r7
 8005172:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005174:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005176:	f7ff ff42 	bl	8004ffe <I2C_WaitOnTXEFlagUntilTimeout>
 800517a:	b140      	cbz	r0, 800518e <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800517c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800517e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005180:	bf01      	itttt	eq
 8005182:	6822      	ldreq	r2, [r4, #0]
 8005184:	6813      	ldreq	r3, [r2, #0]
 8005186:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800518a:	6013      	streq	r3, [r2, #0]
 800518c:	e7e7      	b.n	800515e <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800518e:	f1ba 0f01 	cmp.w	sl, #1
 8005192:	6823      	ldr	r3, [r4, #0]
 8005194:	d11a      	bne.n	80051cc <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005196:	b2ed      	uxtb	r5, r5
 8005198:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800519a:	4642      	mov	r2, r8
 800519c:	4639      	mov	r1, r7
 800519e:	4620      	mov	r0, r4
 80051a0:	f7ff ff2d 	bl	8004ffe <I2C_WaitOnTXEFlagUntilTimeout>
 80051a4:	2800      	cmp	r0, #0
 80051a6:	d1e9      	bne.n	800517c <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80051a8:	6822      	ldr	r2, [r4, #0]
 80051aa:	6813      	ldr	r3, [r2, #0]
 80051ac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80051b0:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80051b2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80051b6:	4602      	mov	r2, r0
 80051b8:	f8cd 8000 	str.w	r8, [sp]
 80051bc:	463b      	mov	r3, r7
 80051be:	4620      	mov	r0, r4
 80051c0:	f7ff feeb 	bl	8004f9a <I2C_WaitOnFlagUntilTimeout>
 80051c4:	6822      	ldr	r2, [r4, #0]
 80051c6:	b160      	cbz	r0, 80051e2 <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80051c8:	6813      	ldr	r3, [r2, #0]
 80051ca:	e7b3      	b.n	8005134 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80051cc:	0a2a      	lsrs	r2, r5, #8
 80051ce:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80051d0:	4639      	mov	r1, r7
 80051d2:	4642      	mov	r2, r8
 80051d4:	4620      	mov	r0, r4
 80051d6:	f7ff ff12 	bl	8004ffe <I2C_WaitOnTXEFlagUntilTimeout>
 80051da:	2800      	cmp	r0, #0
 80051dc:	d1ce      	bne.n	800517c <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80051de:	6823      	ldr	r3, [r4, #0]
 80051e0:	e7d9      	b.n	8005196 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80051e2:	f049 0301 	orr.w	r3, r9, #1
 80051e6:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80051e8:	4904      	ldr	r1, [pc, #16]	; (80051fc <I2C_RequestMemoryRead+0x100>)
 80051ea:	4643      	mov	r3, r8
 80051ec:	463a      	mov	r2, r7
 80051ee:	4620      	mov	r0, r4
 80051f0:	f7ff fe43 	bl	8004e7a <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80051f4:	3800      	subs	r0, #0
 80051f6:	bf18      	it	ne
 80051f8:	2001      	movne	r0, #1
 80051fa:	e7a1      	b.n	8005140 <I2C_RequestMemoryRead+0x44>
 80051fc:	00010002 	.word	0x00010002

08005200 <HAL_I2C_Init>:
{
 8005200:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8005202:	4604      	mov	r4, r0
 8005204:	b908      	cbnz	r0, 800520a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8005206:	2001      	movs	r0, #1
}
 8005208:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800520a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800520e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005212:	b91b      	cbnz	r3, 800521c <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8005214:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8005218:	f7fc fc00 	bl	8001a1c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800521c:	2324      	movs	r3, #36	; 0x24
 800521e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005222:	6823      	ldr	r3, [r4, #0]
 8005224:	681a      	ldr	r2, [r3, #0]
 8005226:	f022 0201 	bic.w	r2, r2, #1
 800522a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800522c:	681a      	ldr	r2, [r3, #0]
 800522e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005232:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005234:	681a      	ldr	r2, [r3, #0]
 8005236:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800523a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800523c:	f000 fe6c 	bl	8005f18 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005240:	4a3f      	ldr	r2, [pc, #252]	; (8005340 <HAL_I2C_Init+0x140>)
 8005242:	6863      	ldr	r3, [r4, #4]
 8005244:	4293      	cmp	r3, r2
 8005246:	bf94      	ite	ls
 8005248:	4a3e      	ldrls	r2, [pc, #248]	; (8005344 <HAL_I2C_Init+0x144>)
 800524a:	4a3f      	ldrhi	r2, [pc, #252]	; (8005348 <HAL_I2C_Init+0x148>)
 800524c:	4290      	cmp	r0, r2
 800524e:	bf8c      	ite	hi
 8005250:	2200      	movhi	r2, #0
 8005252:	2201      	movls	r2, #1
 8005254:	2a00      	cmp	r2, #0
 8005256:	d1d6      	bne.n	8005206 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005258:	6821      	ldr	r1, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800525a:	4e3c      	ldr	r6, [pc, #240]	; (800534c <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800525c:	684a      	ldr	r2, [r1, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800525e:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005262:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8005266:	4332      	orrs	r2, r6
 8005268:	604a      	str	r2, [r1, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800526a:	4a35      	ldr	r2, [pc, #212]	; (8005340 <HAL_I2C_Init+0x140>)
 800526c:	6a0d      	ldr	r5, [r1, #32]
 800526e:	4293      	cmp	r3, r2
 8005270:	bf84      	itt	hi
 8005272:	f44f 7296 	movhi.w	r2, #300	; 0x12c
 8005276:	4372      	mulhi	r2, r6
 8005278:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 800527c:	bf91      	iteee	ls
 800527e:	1c72      	addls	r2, r6, #1
 8005280:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8005284:	fbb2 f2f6 	udivhi	r2, r2, r6
 8005288:	3201      	addhi	r2, #1
 800528a:	432a      	orrs	r2, r5
 800528c:	620a      	str	r2, [r1, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800528e:	69cd      	ldr	r5, [r1, #28]
 8005290:	1e42      	subs	r2, r0, #1
 8005292:	482b      	ldr	r0, [pc, #172]	; (8005340 <HAL_I2C_Init+0x140>)
 8005294:	f425 454f 	bic.w	r5, r5, #52992	; 0xcf00
 8005298:	4283      	cmp	r3, r0
 800529a:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800529e:	d832      	bhi.n	8005306 <HAL_I2C_Init+0x106>
 80052a0:	005b      	lsls	r3, r3, #1
 80052a2:	fbb2 f3f3 	udiv	r3, r2, r3
 80052a6:	f640 72fc 	movw	r2, #4092	; 0xffc
 80052aa:	3301      	adds	r3, #1
 80052ac:	4213      	tst	r3, r2
 80052ae:	d042      	beq.n	8005336 <HAL_I2C_Init+0x136>
 80052b0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80052b4:	432b      	orrs	r3, r5
 80052b6:	61cb      	str	r3, [r1, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80052b8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80052bc:	680a      	ldr	r2, [r1, #0]
 80052be:	4303      	orrs	r3, r0
 80052c0:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 80052c4:	4313      	orrs	r3, r2
 80052c6:	600b      	str	r3, [r1, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80052c8:	688a      	ldr	r2, [r1, #8]
 80052ca:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80052ce:	f422 4203 	bic.w	r2, r2, #33536	; 0x8300
 80052d2:	4303      	orrs	r3, r0
 80052d4:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80052d8:	4313      	orrs	r3, r2
 80052da:	608b      	str	r3, [r1, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80052dc:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80052e0:	68ca      	ldr	r2, [r1, #12]
 80052e2:	4303      	orrs	r3, r0
 80052e4:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80052e8:	4313      	orrs	r3, r2
 80052ea:	60cb      	str	r3, [r1, #12]
  __HAL_I2C_ENABLE(hi2c);
 80052ec:	680b      	ldr	r3, [r1, #0]
 80052ee:	f043 0301 	orr.w	r3, r3, #1
 80052f2:	600b      	str	r3, [r1, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80052f4:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80052f6:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80052f8:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80052fa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80052fe:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005300:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8005304:	e780      	b.n	8005208 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005306:	68a0      	ldr	r0, [r4, #8]
 8005308:	b950      	cbnz	r0, 8005320 <HAL_I2C_Init+0x120>
 800530a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800530e:	fbb2 f3f3 	udiv	r3, r2, r3
 8005312:	3301      	adds	r3, #1
 8005314:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005318:	b17b      	cbz	r3, 800533a <HAL_I2C_Init+0x13a>
 800531a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800531e:	e7c9      	b.n	80052b4 <HAL_I2C_Init+0xb4>
 8005320:	2019      	movs	r0, #25
 8005322:	4343      	muls	r3, r0
 8005324:	fbb2 f3f3 	udiv	r3, r2, r3
 8005328:	3301      	adds	r3, #1
 800532a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800532e:	b123      	cbz	r3, 800533a <HAL_I2C_Init+0x13a>
 8005330:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005334:	e7be      	b.n	80052b4 <HAL_I2C_Init+0xb4>
 8005336:	2304      	movs	r3, #4
 8005338:	e7bc      	b.n	80052b4 <HAL_I2C_Init+0xb4>
 800533a:	2301      	movs	r3, #1
 800533c:	e7ba      	b.n	80052b4 <HAL_I2C_Init+0xb4>
 800533e:	bf00      	nop
 8005340:	000186a0 	.word	0x000186a0
 8005344:	001e847f 	.word	0x001e847f
 8005348:	003d08ff 	.word	0x003d08ff
 800534c:	000f4240 	.word	0x000f4240

08005350 <HAL_I2C_Mem_Write>:
{
 8005350:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005354:	4604      	mov	r4, r0
 8005356:	4699      	mov	r9, r3
 8005358:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800535a:	460f      	mov	r7, r1
 800535c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800535e:	f7ff faf9 	bl	8004954 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005362:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005366:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005368:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800536a:	d003      	beq.n	8005374 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800536c:	2002      	movs	r0, #2
}
 800536e:	b003      	add	sp, #12
 8005370:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005374:	9000      	str	r0, [sp, #0]
 8005376:	493c      	ldr	r1, [pc, #240]	; (8005468 <HAL_I2C_Mem_Write+0x118>)
 8005378:	2319      	movs	r3, #25
 800537a:	2201      	movs	r2, #1
 800537c:	4620      	mov	r0, r4
 800537e:	f7ff fe0c 	bl	8004f9a <I2C_WaitOnFlagUntilTimeout>
 8005382:	2800      	cmp	r0, #0
 8005384:	d1f2      	bne.n	800536c <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8005386:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800538a:	2b01      	cmp	r3, #1
 800538c:	d0ee      	beq.n	800536c <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800538e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005390:	2301      	movs	r3, #1
 8005392:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005396:	6803      	ldr	r3, [r0, #0]
 8005398:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800539a:	bf5e      	ittt	pl
 800539c:	6803      	ldrpl	r3, [r0, #0]
 800539e:	f043 0301 	orrpl.w	r3, r3, #1
 80053a2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80053a4:	6803      	ldr	r3, [r0, #0]
 80053a6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80053aa:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80053ac:	2321      	movs	r3, #33	; 0x21
 80053ae:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80053b2:	2340      	movs	r3, #64	; 0x40
 80053b4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80053b8:	2300      	movs	r3, #0
 80053ba:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80053bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80053be:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80053c0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80053c4:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80053c6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80053c8:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80053ca:	4b28      	ldr	r3, [pc, #160]	; (800546c <HAL_I2C_Mem_Write+0x11c>)
 80053cc:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80053ce:	e9cd 6500 	strd	r6, r5, [sp]
 80053d2:	464b      	mov	r3, r9
 80053d4:	4642      	mov	r2, r8
 80053d6:	4639      	mov	r1, r7
 80053d8:	4620      	mov	r0, r4
 80053da:	f7ff fe37 	bl	800504c <I2C_RequestMemoryWrite>
 80053de:	2800      	cmp	r0, #0
 80053e0:	d02a      	beq.n	8005438 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80053e2:	2001      	movs	r0, #1
 80053e4:	e7c3      	b.n	800536e <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80053e6:	f7ff fe0a 	bl	8004ffe <I2C_WaitOnTXEFlagUntilTimeout>
 80053ea:	b140      	cbz	r0, 80053fe <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80053ec:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80053ee:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80053f0:	bf01      	itttt	eq
 80053f2:	6822      	ldreq	r2, [r4, #0]
 80053f4:	6813      	ldreq	r3, [r2, #0]
 80053f6:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80053fa:	6013      	streq	r3, [r2, #0]
 80053fc:	e7f1      	b.n	80053e2 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80053fe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005400:	6827      	ldr	r7, [r4, #0]
 8005402:	461a      	mov	r2, r3
 8005404:	f812 1b01 	ldrb.w	r1, [r2], #1
 8005408:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800540a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800540c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800540e:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005410:	3a01      	subs	r2, #1
 8005412:	b292      	uxth	r2, r2
 8005414:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005416:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8005418:	1e48      	subs	r0, r1, #1
 800541a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800541c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800541e:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005420:	d50a      	bpl.n	8005438 <HAL_I2C_Mem_Write+0xe8>
 8005422:	b148      	cbz	r0, 8005438 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005424:	785a      	ldrb	r2, [r3, #1]
 8005426:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005428:	3302      	adds	r3, #2
 800542a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800542c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800542e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005430:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8005432:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005434:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005436:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005438:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800543a:	462a      	mov	r2, r5
 800543c:	4631      	mov	r1, r6
 800543e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005440:	2b00      	cmp	r3, #0
 8005442:	d1d0      	bne.n	80053e6 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005444:	f7ff fd54 	bl	8004ef0 <I2C_WaitOnBTFFlagUntilTimeout>
 8005448:	2800      	cmp	r0, #0
 800544a:	d1cf      	bne.n	80053ec <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800544c:	6822      	ldr	r2, [r4, #0]
 800544e:	6813      	ldr	r3, [r2, #0]
 8005450:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005454:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005456:	2320      	movs	r3, #32
 8005458:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800545c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005460:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8005464:	e783      	b.n	800536e <HAL_I2C_Mem_Write+0x1e>
 8005466:	bf00      	nop
 8005468:	00100002 	.word	0x00100002
 800546c:	ffff0000 	.word	0xffff0000

08005470 <HAL_I2C_Mem_Read>:
{
 8005470:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005474:	4604      	mov	r4, r0
 8005476:	b087      	sub	sp, #28
 8005478:	4699      	mov	r9, r3
 800547a:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800547c:	460d      	mov	r5, r1
 800547e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005480:	f7ff fa68 	bl	8004954 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005484:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005488:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800548a:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800548c:	d004      	beq.n	8005498 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800548e:	2502      	movs	r5, #2
}
 8005490:	4628      	mov	r0, r5
 8005492:	b007      	add	sp, #28
 8005494:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005498:	9000      	str	r0, [sp, #0]
 800549a:	4976      	ldr	r1, [pc, #472]	; (8005674 <HAL_I2C_Mem_Read+0x204>)
 800549c:	2319      	movs	r3, #25
 800549e:	2201      	movs	r2, #1
 80054a0:	4620      	mov	r0, r4
 80054a2:	f7ff fd7a 	bl	8004f9a <I2C_WaitOnFlagUntilTimeout>
 80054a6:	2800      	cmp	r0, #0
 80054a8:	d1f1      	bne.n	800548e <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80054aa:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80054ae:	2b01      	cmp	r3, #1
 80054b0:	d0ed      	beq.n	800548e <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80054b2:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80054b4:	2301      	movs	r3, #1
 80054b6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80054ba:	6803      	ldr	r3, [r0, #0]
 80054bc:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80054be:	bf5e      	ittt	pl
 80054c0:	6803      	ldrpl	r3, [r0, #0]
 80054c2:	f043 0301 	orrpl.w	r3, r3, #1
 80054c6:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80054c8:	6803      	ldr	r3, [r0, #0]
 80054ca:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80054ce:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80054d0:	2322      	movs	r3, #34	; 0x22
 80054d2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80054d6:	2340      	movs	r3, #64	; 0x40
 80054d8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80054dc:	2300      	movs	r3, #0
 80054de:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80054e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80054e2:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80054e4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80054e8:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80054ea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80054ec:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80054ee:	4b62      	ldr	r3, [pc, #392]	; (8005678 <HAL_I2C_Mem_Read+0x208>)
 80054f0:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80054f2:	4629      	mov	r1, r5
 80054f4:	e9cd 7600 	strd	r7, r6, [sp]
 80054f8:	464b      	mov	r3, r9
 80054fa:	4642      	mov	r2, r8
 80054fc:	4620      	mov	r0, r4
 80054fe:	f7ff fdfd 	bl	80050fc <I2C_RequestMemoryRead>
 8005502:	4605      	mov	r5, r0
 8005504:	b108      	cbz	r0, 800550a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8005506:	2501      	movs	r5, #1
 8005508:	e7c2      	b.n	8005490 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800550a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800550c:	6823      	ldr	r3, [r4, #0]
 800550e:	b9b2      	cbnz	r2, 800553e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005510:	9002      	str	r0, [sp, #8]
 8005512:	695a      	ldr	r2, [r3, #20]
 8005514:	9202      	str	r2, [sp, #8]
 8005516:	699a      	ldr	r2, [r3, #24]
 8005518:	9202      	str	r2, [sp, #8]
 800551a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800551c:	681a      	ldr	r2, [r3, #0]
 800551e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005522:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005524:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800567c <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8005528:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800552a:	2b00      	cmp	r3, #0
 800552c:	d12c      	bne.n	8005588 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800552e:	2220      	movs	r2, #32
 8005530:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005534:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005538:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800553c:	e7a8      	b.n	8005490 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800553e:	2a01      	cmp	r2, #1
 8005540:	d10a      	bne.n	8005558 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005542:	681a      	ldr	r2, [r3, #0]
 8005544:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005548:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800554a:	9003      	str	r0, [sp, #12]
 800554c:	695a      	ldr	r2, [r3, #20]
 800554e:	9203      	str	r2, [sp, #12]
 8005550:	699a      	ldr	r2, [r3, #24]
 8005552:	9203      	str	r2, [sp, #12]
 8005554:	9a03      	ldr	r2, [sp, #12]
 8005556:	e7e1      	b.n	800551c <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005558:	2a02      	cmp	r2, #2
 800555a:	d10e      	bne.n	800557a <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800555c:	681a      	ldr	r2, [r3, #0]
 800555e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005562:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005564:	681a      	ldr	r2, [r3, #0]
 8005566:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800556a:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800556c:	9004      	str	r0, [sp, #16]
 800556e:	695a      	ldr	r2, [r3, #20]
 8005570:	9204      	str	r2, [sp, #16]
 8005572:	699b      	ldr	r3, [r3, #24]
 8005574:	9304      	str	r3, [sp, #16]
 8005576:	9b04      	ldr	r3, [sp, #16]
 8005578:	e7d4      	b.n	8005524 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800557a:	9005      	str	r0, [sp, #20]
 800557c:	695a      	ldr	r2, [r3, #20]
 800557e:	9205      	str	r2, [sp, #20]
 8005580:	699b      	ldr	r3, [r3, #24]
 8005582:	9305      	str	r3, [sp, #20]
 8005584:	9b05      	ldr	r3, [sp, #20]
 8005586:	e7cd      	b.n	8005524 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005588:	2b03      	cmp	r3, #3
 800558a:	d856      	bhi.n	800563a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800558c:	2b01      	cmp	r3, #1
 800558e:	d115      	bne.n	80055bc <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005590:	4632      	mov	r2, r6
 8005592:	4639      	mov	r1, r7
 8005594:	4620      	mov	r0, r4
 8005596:	f7ff fcd1 	bl	8004f3c <I2C_WaitOnRXNEFlagUntilTimeout>
 800559a:	2800      	cmp	r0, #0
 800559c:	d1b3      	bne.n	8005506 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800559e:	6823      	ldr	r3, [r4, #0]
 80055a0:	691a      	ldr	r2, [r3, #16]
 80055a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80055a4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80055a6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80055a8:	3301      	adds	r3, #1
 80055aa:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80055ac:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80055ae:	3b01      	subs	r3, #1
 80055b0:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80055b2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80055b4:	3b01      	subs	r3, #1
 80055b6:	b29b      	uxth	r3, r3
 80055b8:	8563      	strh	r3, [r4, #42]	; 0x2a
 80055ba:	e7b5      	b.n	8005528 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80055bc:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80055be:	9600      	str	r6, [sp, #0]
 80055c0:	463b      	mov	r3, r7
 80055c2:	f04f 0200 	mov.w	r2, #0
 80055c6:	4641      	mov	r1, r8
 80055c8:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80055ca:	d119      	bne.n	8005600 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80055cc:	f7ff fce5 	bl	8004f9a <I2C_WaitOnFlagUntilTimeout>
 80055d0:	2800      	cmp	r0, #0
 80055d2:	d198      	bne.n	8005506 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80055d4:	6823      	ldr	r3, [r4, #0]
 80055d6:	681a      	ldr	r2, [r3, #0]
 80055d8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80055dc:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055de:	691a      	ldr	r2, [r3, #16]
 80055e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80055e2:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80055e4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80055e6:	1c53      	adds	r3, r2, #1
 80055e8:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80055ea:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80055ec:	3b01      	subs	r3, #1
 80055ee:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80055f0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80055f2:	3b01      	subs	r3, #1
 80055f4:	b29b      	uxth	r3, r3
 80055f6:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055f8:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055fa:	691b      	ldr	r3, [r3, #16]
 80055fc:	7053      	strb	r3, [r2, #1]
 80055fe:	e7d2      	b.n	80055a6 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005600:	f7ff fccb 	bl	8004f9a <I2C_WaitOnFlagUntilTimeout>
 8005604:	2800      	cmp	r0, #0
 8005606:	f47f af7e 	bne.w	8005506 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800560a:	6823      	ldr	r3, [r4, #0]
 800560c:	681a      	ldr	r2, [r3, #0]
 800560e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005612:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005614:	691a      	ldr	r2, [r3, #16]
 8005616:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005618:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800561a:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800561c:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800561e:	3301      	adds	r3, #1
 8005620:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005622:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005624:	3b01      	subs	r3, #1
 8005626:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005628:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800562a:	3b01      	subs	r3, #1
 800562c:	b29b      	uxth	r3, r3
 800562e:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005630:	4602      	mov	r2, r0
 8005632:	463b      	mov	r3, r7
 8005634:	4641      	mov	r1, r8
 8005636:	4620      	mov	r0, r4
 8005638:	e7c8      	b.n	80055cc <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800563a:	4632      	mov	r2, r6
 800563c:	4639      	mov	r1, r7
 800563e:	4620      	mov	r0, r4
 8005640:	f7ff fc7c 	bl	8004f3c <I2C_WaitOnRXNEFlagUntilTimeout>
 8005644:	2800      	cmp	r0, #0
 8005646:	f47f af5e 	bne.w	8005506 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800564a:	6823      	ldr	r3, [r4, #0]
 800564c:	691a      	ldr	r2, [r3, #16]
 800564e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005650:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8005652:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005654:	1c53      	adds	r3, r2, #1
 8005656:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8005658:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800565a:	3b01      	subs	r3, #1
 800565c:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800565e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005660:	3b01      	subs	r3, #1
 8005662:	b29b      	uxth	r3, r3
 8005664:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005666:	6823      	ldr	r3, [r4, #0]
 8005668:	6959      	ldr	r1, [r3, #20]
 800566a:	0749      	lsls	r1, r1, #29
 800566c:	f57f af5c 	bpl.w	8005528 <HAL_I2C_Mem_Read+0xb8>
 8005670:	e7c3      	b.n	80055fa <HAL_I2C_Mem_Read+0x18a>
 8005672:	bf00      	nop
 8005674:	00100002 	.word	0x00100002
 8005678:	ffff0000 	.word	0xffff0000
 800567c:	00010004 	.word	0x00010004

08005680 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005680:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005682:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005686:	2b20      	cmp	r3, #32
 8005688:	b2dc      	uxtb	r4, r3
 800568a:	d116      	bne.n	80056ba <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 800568c:	2324      	movs	r3, #36	; 0x24
 800568e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005692:	6803      	ldr	r3, [r0, #0]
 8005694:	681a      	ldr	r2, [r3, #0]
 8005696:	f022 0201 	bic.w	r2, r2, #1
 800569a:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800569c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800569e:	f022 0210 	bic.w	r2, r2, #16
 80056a2:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80056a4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80056a6:	4311      	orrs	r1, r2
 80056a8:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80056aa:	681a      	ldr	r2, [r3, #0]
 80056ac:	f042 0201 	orr.w	r2, r2, #1
 80056b0:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80056b2:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80056b6:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80056b8:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80056ba:	2002      	movs	r0, #2
 80056bc:	e7fc      	b.n	80056b8 <HAL_I2CEx_ConfigAnalogFilter+0x38>

080056be <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80056be:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80056c0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80056c4:	2b20      	cmp	r3, #32
 80056c6:	b2dc      	uxtb	r4, r3
 80056c8:	d116      	bne.n	80056f8 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80056ca:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 80056cc:	2324      	movs	r3, #36	; 0x24
 80056ce:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80056d2:	6813      	ldr	r3, [r2, #0]
 80056d4:	f023 0301 	bic.w	r3, r3, #1
 80056d8:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80056da:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 80056dc:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 80056e0:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 80056e2:	4319      	orrs	r1, r3

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 80056e4:	b289      	uxth	r1, r1
 80056e6:	6251      	str	r1, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80056e8:	6813      	ldr	r3, [r2, #0]
 80056ea:	f043 0301 	orr.w	r3, r3, #1
 80056ee:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80056f0:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80056f4:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80056f6:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 80056f8:	2002      	movs	r0, #2
 80056fa:	e7fc      	b.n	80056f6 <HAL_I2CEx_ConfigDigitalFilter+0x38>

080056fc <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80056fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005700:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005702:	6804      	ldr	r4, [r0, #0]
 8005704:	684f      	ldr	r7, [r1, #4]
 8005706:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005708:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800570c:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005710:	3284      	adds	r2, #132	; 0x84
 8005712:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005714:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005718:	6858      	ldr	r0, [r3, #4]
 800571a:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800571e:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005720:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005722:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005726:	f3c0 400b 	ubfx	r0, r0, #16, #12
 800572a:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800572c:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800572e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005732:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005734:	68e0      	ldr	r0, [r4, #12]
 8005736:	68cd      	ldr	r5, [r1, #12]
 8005738:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800573c:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800573e:	6898      	ldr	r0, [r3, #8]
 8005740:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8005744:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005746:	68e6      	ldr	r6, [r4, #12]
 8005748:	6888      	ldr	r0, [r1, #8]
 800574a:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800574e:	3001      	adds	r0, #1
 8005750:	4430      	add	r0, r6
 8005752:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005756:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005758:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800575a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800575c:	f020 0007 	bic.w	r0, r0, #7
 8005760:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005762:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005766:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005768:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800576a:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800576e:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005772:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005776:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800577a:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800577e:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005782:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8005786:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005788:	6958      	ldr	r0, [r3, #20]
 800578a:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 800578e:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005790:	6948      	ldr	r0, [r1, #20]
 8005792:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005794:	69d8      	ldr	r0, [r3, #28]
 8005796:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 800579a:	f020 0007 	bic.w	r0, r0, #7
 800579e:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80057a0:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 80057a4:	4305      	orrs	r5, r0
 80057a6:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80057a8:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80057aa:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80057ac:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80057b0:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80057b2:	b31e      	cbz	r6, 80057fc <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80057b4:	2e01      	cmp	r6, #1
 80057b6:	d023      	beq.n	8005800 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80057b8:	1eb0      	subs	r0, r6, #2
 80057ba:	2802      	cmp	r0, #2
 80057bc:	d922      	bls.n	8005804 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80057be:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80057c0:	bf0c      	ite	eq
 80057c2:	2002      	moveq	r0, #2
 80057c4:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80057c6:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80057c8:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 80057cc:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80057ce:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80057d0:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80057d2:	eba7 070c 	sub.w	r7, r7, ip
 80057d6:	4345      	muls	r5, r0
 80057d8:	4378      	muls	r0, r7
 80057da:	3003      	adds	r0, #3
 80057dc:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80057e0:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80057e2:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80057e4:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 80057e8:	f020 0007 	bic.w	r0, r0, #7
 80057ec:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80057ee:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80057f0:	58a3      	ldr	r3, [r4, r2]
 80057f2:	f043 0301 	orr.w	r3, r3, #1
 80057f6:	50a3      	str	r3, [r4, r2]
}
 80057f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80057fc:	2004      	movs	r0, #4
 80057fe:	e7e2      	b.n	80057c6 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005800:	2003      	movs	r0, #3
 8005802:	e7e0      	b.n	80057c6 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005804:	2002      	movs	r0, #2
 8005806:	e7de      	b.n	80057c6 <LTDC_SetConfig+0xca>

08005808 <HAL_LTDC_Init>:
{
 8005808:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800580a:	4604      	mov	r4, r0
 800580c:	2800      	cmp	r0, #0
 800580e:	d063      	beq.n	80058d8 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005810:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005814:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005818:	b91b      	cbnz	r3, 8005822 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800581a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800581e:	f7fc f959 	bl	8001ad4 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005822:	2302      	movs	r3, #2
 8005824:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005828:	6823      	ldr	r3, [r4, #0]
 800582a:	699a      	ldr	r2, [r3, #24]
 800582c:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005830:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005832:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005836:	4302      	orrs	r2, r0
 8005838:	68e0      	ldr	r0, [r4, #12]
 800583a:	6999      	ldr	r1, [r3, #24]
 800583c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800583e:	6920      	ldr	r0, [r4, #16]
 8005840:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005842:	430a      	orrs	r2, r1
 8005844:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005846:	689a      	ldr	r2, [r3, #8]
 8005848:	4924      	ldr	r1, [pc, #144]	; (80058dc <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800584a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800584c:	400a      	ands	r2, r1
 800584e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005850:	689a      	ldr	r2, [r3, #8]
 8005852:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005856:	69a0      	ldr	r0, [r4, #24]
 8005858:	4302      	orrs	r2, r0
 800585a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800585c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800585e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005860:	400a      	ands	r2, r1
 8005862:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005864:	68da      	ldr	r2, [r3, #12]
 8005866:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800586a:	6a20      	ldr	r0, [r4, #32]
 800586c:	4302      	orrs	r2, r0
 800586e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005870:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005872:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005874:	400a      	ands	r2, r1
 8005876:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005878:	691a      	ldr	r2, [r3, #16]
 800587a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800587e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005880:	4302      	orrs	r2, r0
 8005882:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005884:	695a      	ldr	r2, [r3, #20]
 8005886:	4011      	ands	r1, r2
 8005888:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800588a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800588c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800588e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005892:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005894:	430a      	orrs	r2, r1
 8005896:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005898:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800589a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800589e:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80058a2:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 80058a6:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80058a8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80058aa:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80058ae:	430a      	orrs	r2, r1
 80058b0:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80058b4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80058b8:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80058ba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80058bc:	f042 0206 	orr.w	r2, r2, #6
 80058c0:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80058c2:	699a      	ldr	r2, [r3, #24]
 80058c4:	f042 0201 	orr.w	r2, r2, #1
 80058c8:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80058ca:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80058cc:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80058ce:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80058d2:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80058d6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80058d8:	2001      	movs	r0, #1
 80058da:	e7fc      	b.n	80058d6 <HAL_LTDC_Init+0xce>
 80058dc:	f000f800 	.word	0xf000f800

080058e0 <HAL_LTDC_ErrorCallback>:
 80058e0:	4770      	bx	lr

080058e2 <HAL_LTDC_ReloadEventCallback>:
 80058e2:	4770      	bx	lr

080058e4 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80058e4:	6803      	ldr	r3, [r0, #0]
{
 80058e6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80058e8:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80058ea:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80058ec:	0772      	lsls	r2, r6, #29
{
 80058ee:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80058f0:	d514      	bpl.n	800591c <HAL_LTDC_IRQHandler+0x38>
 80058f2:	0769      	lsls	r1, r5, #29
 80058f4:	d512      	bpl.n	800591c <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80058f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80058f8:	f022 0204 	bic.w	r2, r2, #4
 80058fc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80058fe:	2204      	movs	r2, #4
 8005900:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005902:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005906:	f043 0301 	orr.w	r3, r3, #1
 800590a:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800590e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005910:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005914:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005918:	f7ff ffe2 	bl	80058e0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800591c:	07b2      	lsls	r2, r6, #30
 800591e:	d516      	bpl.n	800594e <HAL_LTDC_IRQHandler+0x6a>
 8005920:	07ab      	lsls	r3, r5, #30
 8005922:	d514      	bpl.n	800594e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005924:	6823      	ldr	r3, [r4, #0]
 8005926:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005928:	f022 0202 	bic.w	r2, r2, #2
 800592c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800592e:	2202      	movs	r2, #2
 8005930:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005932:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8005936:	4313      	orrs	r3, r2
 8005938:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800593c:	2304      	movs	r3, #4
 800593e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005942:	2300      	movs	r3, #0
 8005944:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005948:	4620      	mov	r0, r4
 800594a:	f7ff ffc9 	bl	80058e0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800594e:	07f0      	lsls	r0, r6, #31
 8005950:	d510      	bpl.n	8005974 <HAL_LTDC_IRQHandler+0x90>
 8005952:	07e9      	lsls	r1, r5, #31
 8005954:	d50e      	bpl.n	8005974 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005956:	6823      	ldr	r3, [r4, #0]
 8005958:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800595a:	f022 0201 	bic.w	r2, r2, #1
 800595e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005960:	2201      	movs	r2, #1
 8005962:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8005964:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005966:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800596a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800596e:	4620      	mov	r0, r4
 8005970:	f7fb fb98 	bl	80010a4 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005974:	0732      	lsls	r2, r6, #28
 8005976:	d511      	bpl.n	800599c <HAL_LTDC_IRQHandler+0xb8>
 8005978:	072b      	lsls	r3, r5, #28
 800597a:	d50f      	bpl.n	800599c <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800597c:	6823      	ldr	r3, [r4, #0]
 800597e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005980:	f022 0208 	bic.w	r2, r2, #8
 8005984:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005986:	2208      	movs	r2, #8
 8005988:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800598a:	2301      	movs	r3, #1
 800598c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005990:	2300      	movs	r3, #0
 8005992:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005996:	4620      	mov	r0, r4
 8005998:	f7ff ffa3 	bl	80058e2 <HAL_LTDC_ReloadEventCallback>
}
 800599c:	bd70      	pop	{r4, r5, r6, pc}

0800599e <HAL_LTDC_ConfigLayer>:
{
 800599e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80059a2:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80059a6:	2b01      	cmp	r3, #1
{
 80059a8:	4606      	mov	r6, r0
 80059aa:	460f      	mov	r7, r1
 80059ac:	4694      	mov	ip, r2
 80059ae:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80059b2:	d01f      	beq.n	80059f4 <HAL_LTDC_ConfigLayer+0x56>
 80059b4:	f04f 0801 	mov.w	r8, #1
 80059b8:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80059bc:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80059c0:	2434      	movs	r4, #52	; 0x34
 80059c2:	460d      	mov	r5, r1
 80059c4:	fb04 6402 	mla	r4, r4, r2, r6
 80059c8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80059ca:	3438      	adds	r4, #56	; 0x38
 80059cc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80059ce:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80059d0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80059d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80059d4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80059d6:	682b      	ldr	r3, [r5, #0]
 80059d8:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80059da:	4630      	mov	r0, r6
 80059dc:	4662      	mov	r2, ip
 80059de:	4639      	mov	r1, r7
 80059e0:	f7ff fe8c 	bl	80056fc <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80059e4:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80059e6:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80059e8:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80059ec:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80059f0:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80059f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080059f8 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80059f8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80059fc:	2b01      	cmp	r3, #1
 80059fe:	f04f 0302 	mov.w	r3, #2
 8005a02:	d012      	beq.n	8005a2a <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005a04:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005a08:	6803      	ldr	r3, [r0, #0]
 8005a0a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005a0c:	f022 0201 	bic.w	r2, r2, #1
 8005a10:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005a12:	4a07      	ldr	r2, [pc, #28]	; (8005a30 <HAL_LTDC_ProgramLineEvent+0x38>)
 8005a14:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005a16:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005a18:	f042 0201 	orr.w	r2, r2, #1
 8005a1c:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8005a1e:	2301      	movs	r3, #1
 8005a20:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005a24:	2300      	movs	r3, #0
 8005a26:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8005a2a:	4618      	mov	r0, r3
}
 8005a2c:	4770      	bx	lr
 8005a2e:	bf00      	nop
 8005a30:	40016800 	.word	0x40016800

08005a34 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005a34:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8005a38:	4604      	mov	r4, r0
 8005a3a:	b340      	cbz	r0, 8005a8e <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005a3c:	6803      	ldr	r3, [r0, #0]
 8005a3e:	07dd      	lsls	r5, r3, #31
 8005a40:	d410      	bmi.n	8005a64 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005a42:	6823      	ldr	r3, [r4, #0]
 8005a44:	0798      	lsls	r0, r3, #30
 8005a46:	d45e      	bmi.n	8005b06 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005a48:	6823      	ldr	r3, [r4, #0]
 8005a4a:	071a      	lsls	r2, r3, #28
 8005a4c:	f100 80a0 	bmi.w	8005b90 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005a50:	6823      	ldr	r3, [r4, #0]
 8005a52:	075b      	lsls	r3, r3, #29
 8005a54:	f100 80be 	bmi.w	8005bd4 <HAL_RCC_OscConfig+0x1a0>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005a58:	69a0      	ldr	r0, [r4, #24]
 8005a5a:	2800      	cmp	r0, #0
 8005a5c:	f040 811f 	bne.w	8005c9e <HAL_RCC_OscConfig+0x26a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8005a60:	2000      	movs	r0, #0
 8005a62:	e02b      	b.n	8005abc <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005a64:	4ba6      	ldr	r3, [pc, #664]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
 8005a66:	689a      	ldr	r2, [r3, #8]
 8005a68:	f002 020c 	and.w	r2, r2, #12
 8005a6c:	2a04      	cmp	r2, #4
 8005a6e:	d007      	beq.n	8005a80 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005a70:	689a      	ldr	r2, [r3, #8]
 8005a72:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005a76:	2a08      	cmp	r2, #8
 8005a78:	d10b      	bne.n	8005a92 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005a7a:	685a      	ldr	r2, [r3, #4]
 8005a7c:	0251      	lsls	r1, r2, #9
 8005a7e:	d508      	bpl.n	8005a92 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005a80:	4b9f      	ldr	r3, [pc, #636]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
 8005a82:	681b      	ldr	r3, [r3, #0]
 8005a84:	039a      	lsls	r2, r3, #14
 8005a86:	d5dc      	bpl.n	8005a42 <HAL_RCC_OscConfig+0xe>
 8005a88:	6863      	ldr	r3, [r4, #4]
 8005a8a:	2b00      	cmp	r3, #0
 8005a8c:	d1d9      	bne.n	8005a42 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8005a8e:	2001      	movs	r0, #1
 8005a90:	e014      	b.n	8005abc <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005a92:	6862      	ldr	r2, [r4, #4]
 8005a94:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8005a98:	d113      	bne.n	8005ac2 <HAL_RCC_OscConfig+0x8e>
 8005a9a:	681a      	ldr	r2, [r3, #0]
 8005a9c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8005aa0:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005aa2:	f7fe ff57 	bl	8004954 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005aa6:	4e96      	ldr	r6, [pc, #600]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
        tickstart = HAL_GetTick();
 8005aa8:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005aaa:	6833      	ldr	r3, [r6, #0]
 8005aac:	039b      	lsls	r3, r3, #14
 8005aae:	d4c8      	bmi.n	8005a42 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005ab0:	f7fe ff50 	bl	8004954 <HAL_GetTick>
 8005ab4:	1b40      	subs	r0, r0, r5
 8005ab6:	2864      	cmp	r0, #100	; 0x64
 8005ab8:	d9f7      	bls.n	8005aaa <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8005aba:	2003      	movs	r0, #3
}
 8005abc:	b002      	add	sp, #8
 8005abe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005ac2:	4d8f      	ldr	r5, [pc, #572]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
 8005ac4:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8005ac8:	682b      	ldr	r3, [r5, #0]
 8005aca:	d107      	bne.n	8005adc <HAL_RCC_OscConfig+0xa8>
 8005acc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005ad0:	602b      	str	r3, [r5, #0]
 8005ad2:	682b      	ldr	r3, [r5, #0]
 8005ad4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005ad8:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005ada:	e7e2      	b.n	8005aa2 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005adc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005ae0:	602b      	str	r3, [r5, #0]
 8005ae2:	682b      	ldr	r3, [r5, #0]
 8005ae4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005ae8:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005aea:	2a00      	cmp	r2, #0
 8005aec:	d1d9      	bne.n	8005aa2 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8005aee:	f7fe ff31 	bl	8004954 <HAL_GetTick>
 8005af2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005af4:	682b      	ldr	r3, [r5, #0]
 8005af6:	039f      	lsls	r7, r3, #14
 8005af8:	d5a3      	bpl.n	8005a42 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005afa:	f7fe ff2b 	bl	8004954 <HAL_GetTick>
 8005afe:	1b80      	subs	r0, r0, r6
 8005b00:	2864      	cmp	r0, #100	; 0x64
 8005b02:	d9f7      	bls.n	8005af4 <HAL_RCC_OscConfig+0xc0>
 8005b04:	e7d9      	b.n	8005aba <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005b06:	4b7e      	ldr	r3, [pc, #504]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
 8005b08:	689a      	ldr	r2, [r3, #8]
 8005b0a:	f012 0f0c 	tst.w	r2, #12
 8005b0e:	d007      	beq.n	8005b20 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005b10:	689a      	ldr	r2, [r3, #8]
 8005b12:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005b16:	2a08      	cmp	r2, #8
 8005b18:	d111      	bne.n	8005b3e <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005b1a:	685b      	ldr	r3, [r3, #4]
 8005b1c:	025e      	lsls	r6, r3, #9
 8005b1e:	d40e      	bmi.n	8005b3e <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005b20:	4b77      	ldr	r3, [pc, #476]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
 8005b22:	681a      	ldr	r2, [r3, #0]
 8005b24:	0795      	lsls	r5, r2, #30
 8005b26:	d502      	bpl.n	8005b2e <HAL_RCC_OscConfig+0xfa>
 8005b28:	68e2      	ldr	r2, [r4, #12]
 8005b2a:	2a01      	cmp	r2, #1
 8005b2c:	d1af      	bne.n	8005a8e <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005b2e:	681a      	ldr	r2, [r3, #0]
 8005b30:	6921      	ldr	r1, [r4, #16]
 8005b32:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8005b36:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 8005b3a:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005b3c:	e784      	b.n	8005a48 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8005b3e:	68e2      	ldr	r2, [r4, #12]
 8005b40:	4b70      	ldr	r3, [pc, #448]	; (8005d04 <HAL_RCC_OscConfig+0x2d0>)
 8005b42:	b1b2      	cbz	r2, 8005b72 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8005b44:	2201      	movs	r2, #1
 8005b46:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005b48:	f7fe ff04 	bl	8004954 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005b4c:	4d6c      	ldr	r5, [pc, #432]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
        tickstart = HAL_GetTick();
 8005b4e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005b50:	682b      	ldr	r3, [r5, #0]
 8005b52:	0798      	lsls	r0, r3, #30
 8005b54:	d507      	bpl.n	8005b66 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005b56:	682b      	ldr	r3, [r5, #0]
 8005b58:	6922      	ldr	r2, [r4, #16]
 8005b5a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8005b5e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005b62:	602b      	str	r3, [r5, #0]
 8005b64:	e770      	b.n	8005a48 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005b66:	f7fe fef5 	bl	8004954 <HAL_GetTick>
 8005b6a:	1b80      	subs	r0, r0, r6
 8005b6c:	2802      	cmp	r0, #2
 8005b6e:	d9ef      	bls.n	8005b50 <HAL_RCC_OscConfig+0x11c>
 8005b70:	e7a3      	b.n	8005aba <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8005b72:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005b74:	f7fe feee 	bl	8004954 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005b78:	4e61      	ldr	r6, [pc, #388]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
        tickstart = HAL_GetTick();
 8005b7a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005b7c:	6833      	ldr	r3, [r6, #0]
 8005b7e:	0799      	lsls	r1, r3, #30
 8005b80:	f57f af62 	bpl.w	8005a48 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005b84:	f7fe fee6 	bl	8004954 <HAL_GetTick>
 8005b88:	1b40      	subs	r0, r0, r5
 8005b8a:	2802      	cmp	r0, #2
 8005b8c:	d9f6      	bls.n	8005b7c <HAL_RCC_OscConfig+0x148>
 8005b8e:	e794      	b.n	8005aba <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8005b90:	6962      	ldr	r2, [r4, #20]
 8005b92:	4b5d      	ldr	r3, [pc, #372]	; (8005d08 <HAL_RCC_OscConfig+0x2d4>)
 8005b94:	b17a      	cbz	r2, 8005bb6 <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 8005b96:	2201      	movs	r2, #1
 8005b98:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8005b9a:	f7fe fedb 	bl	8004954 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005b9e:	4e58      	ldr	r6, [pc, #352]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
      tickstart = HAL_GetTick();
 8005ba0:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005ba2:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8005ba4:	079f      	lsls	r7, r3, #30
 8005ba6:	f53f af53 	bmi.w	8005a50 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005baa:	f7fe fed3 	bl	8004954 <HAL_GetTick>
 8005bae:	1b40      	subs	r0, r0, r5
 8005bb0:	2802      	cmp	r0, #2
 8005bb2:	d9f6      	bls.n	8005ba2 <HAL_RCC_OscConfig+0x16e>
 8005bb4:	e781      	b.n	8005aba <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8005bb6:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8005bb8:	f7fe fecc 	bl	8004954 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005bbc:	4e50      	ldr	r6, [pc, #320]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
      tickstart = HAL_GetTick();
 8005bbe:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005bc0:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8005bc2:	0798      	lsls	r0, r3, #30
 8005bc4:	f57f af44 	bpl.w	8005a50 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005bc8:	f7fe fec4 	bl	8004954 <HAL_GetTick>
 8005bcc:	1b40      	subs	r0, r0, r5
 8005bce:	2802      	cmp	r0, #2
 8005bd0:	d9f6      	bls.n	8005bc0 <HAL_RCC_OscConfig+0x18c>
 8005bd2:	e772      	b.n	8005aba <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005bd4:	4b4a      	ldr	r3, [pc, #296]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
 8005bd6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005bd8:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8005bdc:	d128      	bne.n	8005c30 <HAL_RCC_OscConfig+0x1fc>
      __HAL_RCC_PWR_CLK_ENABLE();
 8005bde:	9201      	str	r2, [sp, #4]
 8005be0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005be2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005be6:	641a      	str	r2, [r3, #64]	; 0x40
 8005be8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005bea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005bee:	9301      	str	r3, [sp, #4]
 8005bf0:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8005bf2:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005bf4:	4d45      	ldr	r5, [pc, #276]	; (8005d0c <HAL_RCC_OscConfig+0x2d8>)
 8005bf6:	682b      	ldr	r3, [r5, #0]
 8005bf8:	05d9      	lsls	r1, r3, #23
 8005bfa:	d51b      	bpl.n	8005c34 <HAL_RCC_OscConfig+0x200>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005bfc:	68a3      	ldr	r3, [r4, #8]
 8005bfe:	4d40      	ldr	r5, [pc, #256]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
 8005c00:	2b01      	cmp	r3, #1
 8005c02:	d127      	bne.n	8005c54 <HAL_RCC_OscConfig+0x220>
 8005c04:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005c06:	f043 0301 	orr.w	r3, r3, #1
 8005c0a:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8005c0c:	f7fe fea2 	bl	8004954 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005c10:	4e3b      	ldr	r6, [pc, #236]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
      tickstart = HAL_GetTick();
 8005c12:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005c14:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005c18:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8005c1a:	079b      	lsls	r3, r3, #30
 8005c1c:	d539      	bpl.n	8005c92 <HAL_RCC_OscConfig+0x25e>
    if(pwrclkchanged == SET)
 8005c1e:	2f00      	cmp	r7, #0
 8005c20:	f43f af1a 	beq.w	8005a58 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8005c24:	4a36      	ldr	r2, [pc, #216]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
 8005c26:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8005c28:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005c2c:	6413      	str	r3, [r2, #64]	; 0x40
 8005c2e:	e713      	b.n	8005a58 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8005c30:	2700      	movs	r7, #0
 8005c32:	e7df      	b.n	8005bf4 <HAL_RCC_OscConfig+0x1c0>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005c34:	682b      	ldr	r3, [r5, #0]
 8005c36:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005c3a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8005c3c:	f7fe fe8a 	bl	8004954 <HAL_GetTick>
 8005c40:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005c42:	682b      	ldr	r3, [r5, #0]
 8005c44:	05da      	lsls	r2, r3, #23
 8005c46:	d4d9      	bmi.n	8005bfc <HAL_RCC_OscConfig+0x1c8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005c48:	f7fe fe84 	bl	8004954 <HAL_GetTick>
 8005c4c:	1b80      	subs	r0, r0, r6
 8005c4e:	2802      	cmp	r0, #2
 8005c50:	d9f7      	bls.n	8005c42 <HAL_RCC_OscConfig+0x20e>
 8005c52:	e732      	b.n	8005aba <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005c54:	2b05      	cmp	r3, #5
 8005c56:	d104      	bne.n	8005c62 <HAL_RCC_OscConfig+0x22e>
 8005c58:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005c5a:	f043 0304 	orr.w	r3, r3, #4
 8005c5e:	672b      	str	r3, [r5, #112]	; 0x70
 8005c60:	e7d0      	b.n	8005c04 <HAL_RCC_OscConfig+0x1d0>
 8005c62:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8005c64:	f022 0201 	bic.w	r2, r2, #1
 8005c68:	672a      	str	r2, [r5, #112]	; 0x70
 8005c6a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8005c6c:	f022 0204 	bic.w	r2, r2, #4
 8005c70:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005c72:	2b00      	cmp	r3, #0
 8005c74:	d1ca      	bne.n	8005c0c <HAL_RCC_OscConfig+0x1d8>
      tickstart = HAL_GetTick();
 8005c76:	f7fe fe6d 	bl	8004954 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005c7a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8005c7e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005c80:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005c82:	0798      	lsls	r0, r3, #30
 8005c84:	d5cb      	bpl.n	8005c1e <HAL_RCC_OscConfig+0x1ea>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005c86:	f7fe fe65 	bl	8004954 <HAL_GetTick>
 8005c8a:	1b80      	subs	r0, r0, r6
 8005c8c:	4540      	cmp	r0, r8
 8005c8e:	d9f7      	bls.n	8005c80 <HAL_RCC_OscConfig+0x24c>
 8005c90:	e713      	b.n	8005aba <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005c92:	f7fe fe5f 	bl	8004954 <HAL_GetTick>
 8005c96:	1b40      	subs	r0, r0, r5
 8005c98:	4540      	cmp	r0, r8
 8005c9a:	d9bd      	bls.n	8005c18 <HAL_RCC_OscConfig+0x1e4>
 8005c9c:	e70d      	b.n	8005aba <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005c9e:	4d18      	ldr	r5, [pc, #96]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
 8005ca0:	68ab      	ldr	r3, [r5, #8]
 8005ca2:	f003 030c 	and.w	r3, r3, #12
 8005ca6:	2b08      	cmp	r3, #8
 8005ca8:	d047      	beq.n	8005d3a <HAL_RCC_OscConfig+0x306>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005caa:	4e19      	ldr	r6, [pc, #100]	; (8005d10 <HAL_RCC_OscConfig+0x2dc>)
 8005cac:	2300      	movs	r3, #0
 8005cae:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8005cb0:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005cb2:	d135      	bne.n	8005d20 <HAL_RCC_OscConfig+0x2ec>
        tickstart = HAL_GetTick();
 8005cb4:	f7fe fe4e 	bl	8004954 <HAL_GetTick>
 8005cb8:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005cba:	682b      	ldr	r3, [r5, #0]
 8005cbc:	0199      	lsls	r1, r3, #6
 8005cbe:	d429      	bmi.n	8005d14 <HAL_RCC_OscConfig+0x2e0>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005cc0:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8005cc4:	4313      	orrs	r3, r2
 8005cc6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005cc8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005ccc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005cce:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8005cd2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005cd4:	0852      	lsrs	r2, r2, #1
 8005cd6:	3a01      	subs	r2, #1
 8005cd8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005cdc:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8005cde:	2301      	movs	r3, #1
 8005ce0:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8005ce2:	f7fe fe37 	bl	8004954 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005ce6:	4d06      	ldr	r5, [pc, #24]	; (8005d00 <HAL_RCC_OscConfig+0x2cc>)
        tickstart = HAL_GetTick();
 8005ce8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005cea:	682b      	ldr	r3, [r5, #0]
 8005cec:	019a      	lsls	r2, r3, #6
 8005cee:	f53f aeb7 	bmi.w	8005a60 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005cf2:	f7fe fe2f 	bl	8004954 <HAL_GetTick>
 8005cf6:	1b00      	subs	r0, r0, r4
 8005cf8:	2802      	cmp	r0, #2
 8005cfa:	d9f6      	bls.n	8005cea <HAL_RCC_OscConfig+0x2b6>
 8005cfc:	e6dd      	b.n	8005aba <HAL_RCC_OscConfig+0x86>
 8005cfe:	bf00      	nop
 8005d00:	40023800 	.word	0x40023800
 8005d04:	42470000 	.word	0x42470000
 8005d08:	42470e80 	.word	0x42470e80
 8005d0c:	40007000 	.word	0x40007000
 8005d10:	42470060 	.word	0x42470060
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005d14:	f7fe fe1e 	bl	8004954 <HAL_GetTick>
 8005d18:	1bc0      	subs	r0, r0, r7
 8005d1a:	2802      	cmp	r0, #2
 8005d1c:	d9cd      	bls.n	8005cba <HAL_RCC_OscConfig+0x286>
 8005d1e:	e6cc      	b.n	8005aba <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8005d20:	f7fe fe18 	bl	8004954 <HAL_GetTick>
 8005d24:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005d26:	682b      	ldr	r3, [r5, #0]
 8005d28:	019b      	lsls	r3, r3, #6
 8005d2a:	f57f ae99 	bpl.w	8005a60 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005d2e:	f7fe fe11 	bl	8004954 <HAL_GetTick>
 8005d32:	1b00      	subs	r0, r0, r4
 8005d34:	2802      	cmp	r0, #2
 8005d36:	d9f6      	bls.n	8005d26 <HAL_RCC_OscConfig+0x2f2>
 8005d38:	e6bf      	b.n	8005aba <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005d3a:	2801      	cmp	r0, #1
 8005d3c:	f43f aebe 	beq.w	8005abc <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8005d40:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005d42:	69e2      	ldr	r2, [r4, #28]
 8005d44:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 8005d48:	4291      	cmp	r1, r2
 8005d4a:	f47f aea0 	bne.w	8005a8e <HAL_RCC_OscConfig+0x5a>
 8005d4e:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005d50:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005d54:	428a      	cmp	r2, r1
 8005d56:	f47f ae9a 	bne.w	8005a8e <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005d5a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8005d5c:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8005d60:	401a      	ands	r2, r3
 8005d62:	428a      	cmp	r2, r1
 8005d64:	f47f ae93 	bne.w	8005a8e <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8005d68:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8005d6a:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8005d6e:	428a      	cmp	r2, r1
 8005d70:	f47f ae8d 	bne.w	8005a8e <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8005d74:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8005d76:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8005d7a:	4293      	cmp	r3, r2
 8005d7c:	f43f ae70 	beq.w	8005a60 <HAL_RCC_OscConfig+0x2c>
 8005d80:	e685      	b.n	8005a8e <HAL_RCC_OscConfig+0x5a>
 8005d82:	bf00      	nop

08005d84 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005d84:	4913      	ldr	r1, [pc, #76]	; (8005dd4 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005d86:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005d88:	688b      	ldr	r3, [r1, #8]
 8005d8a:	f003 030c 	and.w	r3, r3, #12
 8005d8e:	2b04      	cmp	r3, #4
 8005d90:	d01c      	beq.n	8005dcc <HAL_RCC_GetSysClockFreq+0x48>
 8005d92:	2b08      	cmp	r3, #8
 8005d94:	d11c      	bne.n	8005dd0 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005d96:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005d98:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005d9a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005d9c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005da0:	bf14      	ite	ne
 8005da2:	480d      	ldrne	r0, [pc, #52]	; (8005dd8 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005da4:	480d      	ldreq	r0, [pc, #52]	; (8005ddc <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005da6:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005daa:	bf18      	it	ne
 8005dac:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005dae:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005db2:	fba1 0100 	umull	r0, r1, r1, r0
 8005db6:	f7fa fa73 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8005dba:	4b06      	ldr	r3, [pc, #24]	; (8005dd4 <HAL_RCC_GetSysClockFreq+0x50>)
 8005dbc:	685b      	ldr	r3, [r3, #4]
 8005dbe:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8005dc2:	3301      	adds	r3, #1
 8005dc4:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8005dc6:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005dca:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005dcc:	4802      	ldr	r0, [pc, #8]	; (8005dd8 <HAL_RCC_GetSysClockFreq+0x54>)
 8005dce:	e7fc      	b.n	8005dca <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8005dd0:	4802      	ldr	r0, [pc, #8]	; (8005ddc <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8005dd2:	e7fa      	b.n	8005dca <HAL_RCC_GetSysClockFreq+0x46>
 8005dd4:	40023800 	.word	0x40023800
 8005dd8:	007a1200 	.word	0x007a1200
 8005ddc:	00f42400 	.word	0x00f42400

08005de0 <HAL_RCC_ClockConfig>:
{
 8005de0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005de4:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8005de6:	4604      	mov	r4, r0
 8005de8:	b910      	cbnz	r0, 8005df0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005dea:	2001      	movs	r0, #1
}
 8005dec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8005df0:	4b44      	ldr	r3, [pc, #272]	; (8005f04 <HAL_RCC_ClockConfig+0x124>)
 8005df2:	681a      	ldr	r2, [r3, #0]
 8005df4:	f002 020f 	and.w	r2, r2, #15
 8005df8:	428a      	cmp	r2, r1
 8005dfa:	d328      	bcc.n	8005e4e <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005dfc:	6822      	ldr	r2, [r4, #0]
 8005dfe:	0797      	lsls	r7, r2, #30
 8005e00:	d42d      	bmi.n	8005e5e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005e02:	07d0      	lsls	r0, r2, #31
 8005e04:	d441      	bmi.n	8005e8a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8005e06:	4b3f      	ldr	r3, [pc, #252]	; (8005f04 <HAL_RCC_ClockConfig+0x124>)
 8005e08:	681a      	ldr	r2, [r3, #0]
 8005e0a:	f002 020f 	and.w	r2, r2, #15
 8005e0e:	42aa      	cmp	r2, r5
 8005e10:	d866      	bhi.n	8005ee0 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005e12:	6822      	ldr	r2, [r4, #0]
 8005e14:	0751      	lsls	r1, r2, #29
 8005e16:	d46c      	bmi.n	8005ef2 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005e18:	0713      	lsls	r3, r2, #28
 8005e1a:	d507      	bpl.n	8005e2c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005e1c:	4a3a      	ldr	r2, [pc, #232]	; (8005f08 <HAL_RCC_ClockConfig+0x128>)
 8005e1e:	6921      	ldr	r1, [r4, #16]
 8005e20:	6893      	ldr	r3, [r2, #8]
 8005e22:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8005e26:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005e2a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005e2c:	f7ff ffaa 	bl	8005d84 <HAL_RCC_GetSysClockFreq>
 8005e30:	4b35      	ldr	r3, [pc, #212]	; (8005f08 <HAL_RCC_ClockConfig+0x128>)
 8005e32:	4a36      	ldr	r2, [pc, #216]	; (8005f0c <HAL_RCC_ClockConfig+0x12c>)
 8005e34:	689b      	ldr	r3, [r3, #8]
 8005e36:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005e3a:	5cd3      	ldrb	r3, [r2, r3]
 8005e3c:	40d8      	lsrs	r0, r3
 8005e3e:	4b34      	ldr	r3, [pc, #208]	; (8005f10 <HAL_RCC_ClockConfig+0x130>)
 8005e40:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8005e42:	4b34      	ldr	r3, [pc, #208]	; (8005f14 <HAL_RCC_ClockConfig+0x134>)
 8005e44:	6818      	ldr	r0, [r3, #0]
 8005e46:	f7fc f803 	bl	8001e50 <HAL_InitTick>
  return HAL_OK;
 8005e4a:	2000      	movs	r0, #0
 8005e4c:	e7ce      	b.n	8005dec <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005e4e:	b2ca      	uxtb	r2, r1
 8005e50:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005e52:	681b      	ldr	r3, [r3, #0]
 8005e54:	f003 030f 	and.w	r3, r3, #15
 8005e58:	428b      	cmp	r3, r1
 8005e5a:	d1c6      	bne.n	8005dea <HAL_RCC_ClockConfig+0xa>
 8005e5c:	e7ce      	b.n	8005dfc <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005e5e:	4b2a      	ldr	r3, [pc, #168]	; (8005f08 <HAL_RCC_ClockConfig+0x128>)
 8005e60:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005e64:	bf1e      	ittt	ne
 8005e66:	6899      	ldrne	r1, [r3, #8]
 8005e68:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8005e6c:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005e6e:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005e70:	bf42      	ittt	mi
 8005e72:	6899      	ldrmi	r1, [r3, #8]
 8005e74:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8005e78:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005e7a:	4923      	ldr	r1, [pc, #140]	; (8005f08 <HAL_RCC_ClockConfig+0x128>)
 8005e7c:	68a0      	ldr	r0, [r4, #8]
 8005e7e:	688b      	ldr	r3, [r1, #8]
 8005e80:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005e84:	4303      	orrs	r3, r0
 8005e86:	608b      	str	r3, [r1, #8]
 8005e88:	e7bb      	b.n	8005e02 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005e8a:	6862      	ldr	r2, [r4, #4]
 8005e8c:	4b1e      	ldr	r3, [pc, #120]	; (8005f08 <HAL_RCC_ClockConfig+0x128>)
 8005e8e:	2a01      	cmp	r2, #1
 8005e90:	d11c      	bne.n	8005ecc <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005e92:	681b      	ldr	r3, [r3, #0]
 8005e94:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005e98:	d0a7      	beq.n	8005dea <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005e9a:	4e1b      	ldr	r6, [pc, #108]	; (8005f08 <HAL_RCC_ClockConfig+0x128>)
 8005e9c:	68b3      	ldr	r3, [r6, #8]
 8005e9e:	f023 0303 	bic.w	r3, r3, #3
 8005ea2:	4313      	orrs	r3, r2
 8005ea4:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8005ea6:	f7fe fd55 	bl	8004954 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005eaa:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8005eae:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005eb0:	68b3      	ldr	r3, [r6, #8]
 8005eb2:	6862      	ldr	r2, [r4, #4]
 8005eb4:	f003 030c 	and.w	r3, r3, #12
 8005eb8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005ebc:	d0a3      	beq.n	8005e06 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005ebe:	f7fe fd49 	bl	8004954 <HAL_GetTick>
 8005ec2:	1bc0      	subs	r0, r0, r7
 8005ec4:	4540      	cmp	r0, r8
 8005ec6:	d9f3      	bls.n	8005eb0 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8005ec8:	2003      	movs	r0, #3
 8005eca:	e78f      	b.n	8005dec <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005ecc:	1e91      	subs	r1, r2, #2
 8005ece:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005ed0:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005ed2:	d802      	bhi.n	8005eda <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005ed4:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8005ed8:	e7de      	b.n	8005e98 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005eda:	f013 0f02 	tst.w	r3, #2
 8005ede:	e7db      	b.n	8005e98 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005ee0:	b2ea      	uxtb	r2, r5
 8005ee2:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005ee4:	681b      	ldr	r3, [r3, #0]
 8005ee6:	f003 030f 	and.w	r3, r3, #15
 8005eea:	42ab      	cmp	r3, r5
 8005eec:	f47f af7d 	bne.w	8005dea <HAL_RCC_ClockConfig+0xa>
 8005ef0:	e78f      	b.n	8005e12 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005ef2:	4905      	ldr	r1, [pc, #20]	; (8005f08 <HAL_RCC_ClockConfig+0x128>)
 8005ef4:	68e0      	ldr	r0, [r4, #12]
 8005ef6:	688b      	ldr	r3, [r1, #8]
 8005ef8:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8005efc:	4303      	orrs	r3, r0
 8005efe:	608b      	str	r3, [r1, #8]
 8005f00:	e78a      	b.n	8005e18 <HAL_RCC_ClockConfig+0x38>
 8005f02:	bf00      	nop
 8005f04:	40023c00 	.word	0x40023c00
 8005f08:	40023800 	.word	0x40023800
 8005f0c:	0801e8f4 	.word	0x0801e8f4
 8005f10:	20000074 	.word	0x20000074
 8005f14:	2000007c 	.word	0x2000007c

08005f18 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8005f18:	4b04      	ldr	r3, [pc, #16]	; (8005f2c <HAL_RCC_GetPCLK1Freq+0x14>)
 8005f1a:	4a05      	ldr	r2, [pc, #20]	; (8005f30 <HAL_RCC_GetPCLK1Freq+0x18>)
 8005f1c:	689b      	ldr	r3, [r3, #8]
 8005f1e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005f22:	5cd3      	ldrb	r3, [r2, r3]
 8005f24:	4a03      	ldr	r2, [pc, #12]	; (8005f34 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005f26:	6810      	ldr	r0, [r2, #0]
}
 8005f28:	40d8      	lsrs	r0, r3
 8005f2a:	4770      	bx	lr
 8005f2c:	40023800 	.word	0x40023800
 8005f30:	0801e904 	.word	0x0801e904
 8005f34:	20000074 	.word	0x20000074

08005f38 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8005f38:	4b04      	ldr	r3, [pc, #16]	; (8005f4c <HAL_RCC_GetPCLK2Freq+0x14>)
 8005f3a:	4a05      	ldr	r2, [pc, #20]	; (8005f50 <HAL_RCC_GetPCLK2Freq+0x18>)
 8005f3c:	689b      	ldr	r3, [r3, #8]
 8005f3e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8005f42:	5cd3      	ldrb	r3, [r2, r3]
 8005f44:	4a03      	ldr	r2, [pc, #12]	; (8005f54 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8005f46:	6810      	ldr	r0, [r2, #0]
}
 8005f48:	40d8      	lsrs	r0, r3
 8005f4a:	4770      	bx	lr
 8005f4c:	40023800 	.word	0x40023800
 8005f50:	0801e904 	.word	0x0801e904
 8005f54:	20000074 	.word	0x20000074

08005f58 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005f58:	230f      	movs	r3, #15
 8005f5a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005f5c:	4b0b      	ldr	r3, [pc, #44]	; (8005f8c <HAL_RCC_GetClockConfig+0x34>)
 8005f5e:	689a      	ldr	r2, [r3, #8]
 8005f60:	f002 0203 	and.w	r2, r2, #3
 8005f64:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8005f66:	689a      	ldr	r2, [r3, #8]
 8005f68:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8005f6c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8005f6e:	689a      	ldr	r2, [r3, #8]
 8005f70:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8005f74:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8005f76:	689b      	ldr	r3, [r3, #8]
 8005f78:	08db      	lsrs	r3, r3, #3
 8005f7a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8005f7e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8005f80:	4b03      	ldr	r3, [pc, #12]	; (8005f90 <HAL_RCC_GetClockConfig+0x38>)
 8005f82:	681b      	ldr	r3, [r3, #0]
 8005f84:	f003 030f 	and.w	r3, r3, #15
 8005f88:	600b      	str	r3, [r1, #0]
}
 8005f8a:	4770      	bx	lr
 8005f8c:	40023800 	.word	0x40023800
 8005f90:	40023c00 	.word	0x40023c00

08005f94 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005f94:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005f96:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8005f9a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005f9c:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005f9e:	f040 808a 	bne.w	80060b6 <HAL_RCCEx_PeriphCLKConfig+0x122>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005fa2:	6823      	ldr	r3, [r4, #0]
 8005fa4:	f013 0f0c 	tst.w	r3, #12
 8005fa8:	d044      	beq.n	8006034 <HAL_RCCEx_PeriphCLKConfig+0xa0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8005faa:	4d89      	ldr	r5, [pc, #548]	; (80061d0 <HAL_RCCEx_PeriphCLKConfig+0x23c>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005fac:	4e89      	ldr	r6, [pc, #548]	; (80061d4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLSAI_DISABLE();
 8005fae:	2300      	movs	r3, #0
 8005fb0:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005fb2:	f7fe fccf 	bl	8004954 <HAL_GetTick>
 8005fb6:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005fb8:	6833      	ldr	r3, [r6, #0]
 8005fba:	009b      	lsls	r3, r3, #2
 8005fbc:	f100 80cc 	bmi.w	8006158 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8005fc0:	6821      	ldr	r1, [r4, #0]
 8005fc2:	074f      	lsls	r7, r1, #29
 8005fc4:	d515      	bpl.n	8005ff2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005fc6:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005fca:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005fce:	061b      	lsls	r3, r3, #24
 8005fd0:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8005fd4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005fd8:	4313      	orrs	r3, r2
 8005fda:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8005fde:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 8005fe2:	6a22      	ldr	r2, [r4, #32]
 8005fe4:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8005fe8:	3a01      	subs	r2, #1
 8005fea:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8005fee:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005ff2:	070e      	lsls	r6, r1, #28
 8005ff4:	d514      	bpl.n	8006020 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005ff6:	4a77      	ldr	r2, [pc, #476]	; (80061d4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8005ff8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005ffa:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8005ffe:	6920      	ldr	r0, [r4, #16]
 8006000:	071b      	lsls	r3, r3, #28
 8006002:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8006006:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800600a:	430b      	orrs	r3, r1
 800600c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006010:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8006014:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006016:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800601a:	430b      	orrs	r3, r1
 800601c:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006020:	2301      	movs	r3, #1
 8006022:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8006024:	f7fe fc96 	bl	8004954 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006028:	4e6a      	ldr	r6, [pc, #424]	; (80061d4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 800602a:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800602c:	6833      	ldr	r3, [r6, #0]
 800602e:	0098      	lsls	r0, r3, #2
 8006030:	f140 8099 	bpl.w	8006166 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006034:	6823      	ldr	r3, [r4, #0]
 8006036:	069a      	lsls	r2, r3, #26
 8006038:	d533      	bpl.n	80060a2 <HAL_RCCEx_PeriphCLKConfig+0x10e>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800603a:	2300      	movs	r3, #0
 800603c:	9301      	str	r3, [sp, #4]
 800603e:	4b65      	ldr	r3, [pc, #404]	; (80061d4 <HAL_RCCEx_PeriphCLKConfig+0x240>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8006040:	4d65      	ldr	r5, [pc, #404]	; (80061d8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006042:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006044:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006048:	641a      	str	r2, [r3, #64]	; 0x40
 800604a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800604c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006050:	9301      	str	r3, [sp, #4]
 8006052:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8006054:	682b      	ldr	r3, [r5, #0]
 8006056:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800605a:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800605c:	f7fe fc7a 	bl	8004954 <HAL_GetTick>
 8006060:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006062:	682b      	ldr	r3, [r5, #0]
 8006064:	05d9      	lsls	r1, r3, #23
 8006066:	f140 8085 	bpl.w	8006174 <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800606a:	4d5a      	ldr	r5, [pc, #360]	; (80061d4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800606c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800606e:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8006072:	f040 8086 	bne.w	8006182 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006076:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8006078:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800607c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8006080:	4a54      	ldr	r2, [pc, #336]	; (80061d4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8006082:	f040 80a0 	bne.w	80061c6 <HAL_RCCEx_PeriphCLKConfig+0x232>
 8006086:	6891      	ldr	r1, [r2, #8]
 8006088:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800608c:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006090:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8006094:	4301      	orrs	r1, r0
 8006096:	6091      	str	r1, [r2, #8]
 8006098:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800609a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800609e:	430b      	orrs	r3, r1
 80060a0:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80060a2:	6820      	ldr	r0, [r4, #0]
 80060a4:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80060a8:	bf1f      	itttt	ne
 80060aa:	4b4c      	ldrne	r3, [pc, #304]	; (80061dc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80060ac:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 80060b0:	601a      	strne	r2, [r3, #0]
  }
  return HAL_OK;
 80060b2:	2000      	movne	r0, #0
 80060b4:	e04e      	b.n	8006154 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    __HAL_RCC_PLLI2S_DISABLE();
 80060b6:	4d4a      	ldr	r5, [pc, #296]	; (80061e0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80060b8:	4f46      	ldr	r7, [pc, #280]	; (80061d4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLI2S_DISABLE();
 80060ba:	2300      	movs	r3, #0
 80060bc:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80060be:	f7fe fc49 	bl	8004954 <HAL_GetTick>
 80060c2:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80060c4:	683b      	ldr	r3, [r7, #0]
 80060c6:	011a      	lsls	r2, r3, #4
 80060c8:	d43e      	bmi.n	8006148 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80060ca:	6821      	ldr	r1, [r4, #0]
 80060cc:	07cb      	lsls	r3, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80060ce:	bf41      	itttt	mi
 80060d0:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80060d4:	071b      	lslmi	r3, r3, #28
 80060d6:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80060da:	f8c7 3084 	strmi.w	r3, [r7, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80060de:	078e      	lsls	r6, r1, #30
 80060e0:	d515      	bpl.n	800610e <HAL_RCCEx_PeriphCLKConfig+0x17a>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80060e2:	4a3c      	ldr	r2, [pc, #240]	; (80061d4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80060e4:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80060e6:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80060ea:	6866      	ldr	r6, [r4, #4]
 80060ec:	061b      	lsls	r3, r3, #24
 80060ee:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80060f2:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 80060f6:	4303      	orrs	r3, r0
 80060f8:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80060fc:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8006100:	69e3      	ldr	r3, [r4, #28]
 8006102:	f020 001f 	bic.w	r0, r0, #31
 8006106:	3b01      	subs	r3, #1
 8006108:	4303      	orrs	r3, r0
 800610a:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800610e:	0648      	lsls	r0, r1, #25
 8006110:	d50a      	bpl.n	8006128 <HAL_RCCEx_PeriphCLKConfig+0x194>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006112:	68e3      	ldr	r3, [r4, #12]
 8006114:	6862      	ldr	r2, [r4, #4]
 8006116:	061b      	lsls	r3, r3, #24
 8006118:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800611c:	68a2      	ldr	r2, [r4, #8]
 800611e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006122:	4a2c      	ldr	r2, [pc, #176]	; (80061d4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8006124:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8006128:	2301      	movs	r3, #1
 800612a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800612c:	f7fe fc12 	bl	8004954 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006130:	4e28      	ldr	r6, [pc, #160]	; (80061d4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 8006132:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006134:	6833      	ldr	r3, [r6, #0]
 8006136:	0119      	lsls	r1, r3, #4
 8006138:	f53f af33 	bmi.w	8005fa2 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800613c:	f7fe fc0a 	bl	8004954 <HAL_GetTick>
 8006140:	1b40      	subs	r0, r0, r5
 8006142:	2802      	cmp	r0, #2
 8006144:	d9f6      	bls.n	8006134 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8006146:	e004      	b.n	8006152 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006148:	f7fe fc04 	bl	8004954 <HAL_GetTick>
 800614c:	1b80      	subs	r0, r0, r6
 800614e:	2802      	cmp	r0, #2
 8006150:	d9b8      	bls.n	80060c4 <HAL_RCCEx_PeriphCLKConfig+0x130>
        return HAL_TIMEOUT;
 8006152:	2003      	movs	r0, #3
}
 8006154:	b003      	add	sp, #12
 8006156:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006158:	f7fe fbfc 	bl	8004954 <HAL_GetTick>
 800615c:	1bc0      	subs	r0, r0, r7
 800615e:	2802      	cmp	r0, #2
 8006160:	f67f af2a 	bls.w	8005fb8 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8006164:	e7f5      	b.n	8006152 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006166:	f7fe fbf5 	bl	8004954 <HAL_GetTick>
 800616a:	1b40      	subs	r0, r0, r5
 800616c:	2802      	cmp	r0, #2
 800616e:	f67f af5d 	bls.w	800602c <HAL_RCCEx_PeriphCLKConfig+0x98>
 8006172:	e7ee      	b.n	8006152 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8006174:	f7fe fbee 	bl	8004954 <HAL_GetTick>
 8006178:	1b80      	subs	r0, r0, r6
 800617a:	2802      	cmp	r0, #2
 800617c:	f67f af71 	bls.w	8006062 <HAL_RCCEx_PeriphCLKConfig+0xce>
 8006180:	e7e7      	b.n	8006152 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006182:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006184:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8006188:	4293      	cmp	r3, r2
 800618a:	f43f af74 	beq.w	8006076 <HAL_RCCEx_PeriphCLKConfig+0xe2>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800618e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006190:	4a14      	ldr	r2, [pc, #80]	; (80061e4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8006192:	2101      	movs	r1, #1
 8006194:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006196:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800619a:	2100      	movs	r1, #0
 800619c:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 800619e:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80061a0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80061a2:	07da      	lsls	r2, r3, #31
 80061a4:	f57f af67 	bpl.w	8006076 <HAL_RCCEx_PeriphCLKConfig+0xe2>
        tickstart = HAL_GetTick();
 80061a8:	f7fe fbd4 	bl	8004954 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80061ac:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 80061b0:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80061b2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80061b4:	079b      	lsls	r3, r3, #30
 80061b6:	f53f af5e 	bmi.w	8006076 <HAL_RCCEx_PeriphCLKConfig+0xe2>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80061ba:	f7fe fbcb 	bl	8004954 <HAL_GetTick>
 80061be:	1b80      	subs	r0, r0, r6
 80061c0:	42b8      	cmp	r0, r7
 80061c2:	d9f6      	bls.n	80061b2 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 80061c4:	e7c5      	b.n	8006152 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80061c6:	6891      	ldr	r1, [r2, #8]
 80061c8:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80061cc:	e763      	b.n	8006096 <HAL_RCCEx_PeriphCLKConfig+0x102>
 80061ce:	bf00      	nop
 80061d0:	42470070 	.word	0x42470070
 80061d4:	40023800 	.word	0x40023800
 80061d8:	40007000 	.word	0x40007000
 80061dc:	424711e0 	.word	0x424711e0
 80061e0:	42470068 	.word	0x42470068
 80061e4:	42470e40 	.word	0x42470e40

080061e8 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 80061e8:	b538      	push	{r3, r4, r5, lr}
 80061ea:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 80061ec:	4604      	mov	r4, r0
 80061ee:	b1c8      	cbz	r0, 8006224 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 80061f0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80061f4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80061f8:	b91b      	cbnz	r3, 8006202 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80061fa:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80061fe:	f7fb fdbb 	bl	8001d78 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006202:	2302      	movs	r3, #2
 8006204:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006208:	1d21      	adds	r1, r4, #4
 800620a:	6820      	ldr	r0, [r4, #0]
 800620c:	f000 fe7e 	bl	8006f0c <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8006210:	6862      	ldr	r2, [r4, #4]
 8006212:	6820      	ldr	r0, [r4, #0]
 8006214:	4629      	mov	r1, r5
 8006216:	f000 feaf 	bl	8006f78 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800621a:	2301      	movs	r3, #1
 800621c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8006220:	2000      	movs	r0, #0
}
 8006222:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006224:	2001      	movs	r0, #1
 8006226:	e7fc      	b.n	8006222 <HAL_SDRAM_Init+0x3a>

08006228 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006228:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800622a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800622e:	2b02      	cmp	r3, #2
{
 8006230:	4604      	mov	r4, r0
 8006232:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006234:	b2d8      	uxtb	r0, r3
 8006236:	d00d      	beq.n	8006254 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006238:	2302      	movs	r3, #2
 800623a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800623e:	6820      	ldr	r0, [r4, #0]
 8006240:	f000 fed6 	bl	8006ff0 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006244:	682b      	ldr	r3, [r5, #0]
 8006246:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006248:	bf0c      	ite	eq
 800624a:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 800624c:	2301      	movne	r3, #1
 800624e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8006252:	2000      	movs	r0, #0
}
 8006254:	bd38      	pop	{r3, r4, r5, pc}

08006256 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006256:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006258:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800625c:	2b02      	cmp	r3, #2
{
 800625e:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006260:	b2d8      	uxtb	r0, r3
 8006262:	d009      	beq.n	8006278 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006264:	2302      	movs	r3, #2
 8006266:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800626a:	6820      	ldr	r0, [r4, #0]
 800626c:	f000 fee7 	bl	800703e <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006270:	2301      	movs	r3, #1
 8006272:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8006276:	2000      	movs	r0, #0
}
 8006278:	bd10      	pop	{r4, pc}

0800627a <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800627a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800627c:	4604      	mov	r4, r0
 800627e:	460e      	mov	r6, r1
 8006280:	4615      	mov	r5, r2
 8006282:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006284:	6822      	ldr	r2, [r4, #0]
 8006286:	6893      	ldr	r3, [r2, #8]
 8006288:	ea36 0303 	bics.w	r3, r6, r3
 800628c:	d001      	beq.n	8006292 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800628e:	2000      	movs	r0, #0
 8006290:	e02d      	b.n	80062ee <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8006292:	1c6b      	adds	r3, r5, #1
 8006294:	d0f7      	beq.n	8006286 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8006296:	f7fe fb5d 	bl	8004954 <HAL_GetTick>
 800629a:	1bc0      	subs	r0, r0, r7
 800629c:	4285      	cmp	r5, r0
 800629e:	d8f1      	bhi.n	8006284 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80062a0:	6823      	ldr	r3, [r4, #0]
 80062a2:	685a      	ldr	r2, [r3, #4]
 80062a4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80062a8:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80062aa:	6862      	ldr	r2, [r4, #4]
 80062ac:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80062b0:	d10a      	bne.n	80062c8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 80062b2:	68a2      	ldr	r2, [r4, #8]
 80062b4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80062b8:	d002      	beq.n	80062c0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80062ba:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80062be:	d103      	bne.n	80062c8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 80062c0:	681a      	ldr	r2, [r3, #0]
 80062c2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80062c6:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80062c8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80062ca:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 80062ce:	d107      	bne.n	80062e0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 80062d0:	681a      	ldr	r2, [r3, #0]
 80062d2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80062d6:	601a      	str	r2, [r3, #0]
 80062d8:	681a      	ldr	r2, [r3, #0]
 80062da:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80062de:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80062e0:	2301      	movs	r3, #1
 80062e2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 80062e6:	2300      	movs	r3, #0
 80062e8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 80062ec:	2003      	movs	r0, #3
}
 80062ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080062f0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 80062f0:	b538      	push	{r3, r4, r5, lr}
 80062f2:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80062f4:	6842      	ldr	r2, [r0, #4]
 80062f6:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 80062fa:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80062fc:	d11f      	bne.n	800633e <SPI_EndRxTransaction+0x4e>
 80062fe:	6882      	ldr	r2, [r0, #8]
 8006300:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8006304:	d002      	beq.n	800630c <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006306:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800630a:	d107      	bne.n	800631c <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 800630c:	6825      	ldr	r5, [r4, #0]
 800630e:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006310:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8006314:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8006318:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800631a:	d007      	beq.n	800632c <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800631c:	460a      	mov	r2, r1
 800631e:	2180      	movs	r1, #128	; 0x80
 8006320:	4620      	mov	r0, r4
 8006322:	f7ff ffaa 	bl	800627a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8006326:	b920      	cbnz	r0, 8006332 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8006328:	2000      	movs	r0, #0
}
 800632a:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800632c:	460a      	mov	r2, r1
 800632e:	2101      	movs	r1, #1
 8006330:	e7f6      	b.n	8006320 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006332:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006334:	f043 0320 	orr.w	r3, r3, #32
 8006338:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800633a:	2003      	movs	r0, #3
 800633c:	e7f5      	b.n	800632a <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800633e:	460a      	mov	r2, r1
 8006340:	2101      	movs	r1, #1
 8006342:	e7ee      	b.n	8006322 <SPI_EndRxTransaction+0x32>

08006344 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006344:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006346:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006348:	4a12      	ldr	r2, [pc, #72]	; (8006394 <SPI_EndRxTxTransaction+0x50>)
 800634a:	4d13      	ldr	r5, [pc, #76]	; (8006398 <SPI_EndRxTxTransaction+0x54>)
 800634c:	6812      	ldr	r2, [r2, #0]
 800634e:	fbb2 f5f5 	udiv	r5, r2, r5
 8006352:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006356:	436a      	muls	r2, r5
 8006358:	9201      	str	r2, [sp, #4]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800635a:	6842      	ldr	r2, [r0, #4]
 800635c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8006360:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006362:	d10b      	bne.n	800637c <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006364:	460a      	mov	r2, r1
 8006366:	2180      	movs	r1, #128	; 0x80
 8006368:	f7ff ff87 	bl	800627a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800636c:	b178      	cbz	r0, 800638e <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800636e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006370:	f043 0320 	orr.w	r3, r3, #32
 8006374:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8006376:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8006378:	b003      	add	sp, #12
 800637a:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 800637c:	9b01      	ldr	r3, [sp, #4]
 800637e:	b133      	cbz	r3, 800638e <SPI_EndRxTxTransaction+0x4a>
      count--;
 8006380:	9b01      	ldr	r3, [sp, #4]
 8006382:	3b01      	subs	r3, #1
 8006384:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006386:	6823      	ldr	r3, [r4, #0]
 8006388:	689b      	ldr	r3, [r3, #8]
 800638a:	061b      	lsls	r3, r3, #24
 800638c:	d4f6      	bmi.n	800637c <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 800638e:	2000      	movs	r0, #0
 8006390:	e7f2      	b.n	8006378 <SPI_EndRxTxTransaction+0x34>
 8006392:	bf00      	nop
 8006394:	20000074 	.word	0x20000074
 8006398:	016e3600 	.word	0x016e3600

0800639c <HAL_SPI_Init>:
{
 800639c:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800639e:	4604      	mov	r4, r0
 80063a0:	2800      	cmp	r0, #0
 80063a2:	d036      	beq.n	8006412 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80063a4:	2300      	movs	r3, #0
 80063a6:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80063a8:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 80063ac:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80063b0:	b91b      	cbnz	r3, 80063ba <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 80063b2:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 80063b6:	f7fb fc53 	bl	8001c60 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 80063ba:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 80063bc:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 80063be:	2302      	movs	r3, #2
 80063c0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 80063c4:	680b      	ldr	r3, [r1, #0]
 80063c6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80063ca:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 80063cc:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 80063d0:	4303      	orrs	r3, r0
 80063d2:	68e0      	ldr	r0, [r4, #12]
 80063d4:	4303      	orrs	r3, r0
 80063d6:	6920      	ldr	r0, [r4, #16]
 80063d8:	4303      	orrs	r3, r0
 80063da:	6960      	ldr	r0, [r4, #20]
 80063dc:	4303      	orrs	r3, r0
 80063de:	69e0      	ldr	r0, [r4, #28]
 80063e0:	4303      	orrs	r3, r0
 80063e2:	6a20      	ldr	r0, [r4, #32]
 80063e4:	4303      	orrs	r3, r0
 80063e6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80063e8:	4303      	orrs	r3, r0
 80063ea:	f402 7000 	and.w	r0, r2, #512	; 0x200
 80063ee:	4303      	orrs	r3, r0
 80063f0:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 80063f2:	0c12      	lsrs	r2, r2, #16
 80063f4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80063f6:	f002 0204 	and.w	r2, r2, #4
 80063fa:	431a      	orrs	r2, r3
 80063fc:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80063fe:	69cb      	ldr	r3, [r1, #28]
 8006400:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006404:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006406:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8006408:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800640a:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800640c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8006410:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006412:	2001      	movs	r0, #1
 8006414:	e7fc      	b.n	8006410 <HAL_SPI_Init+0x74>

08006416 <HAL_SPI_Transmit>:
{
 8006416:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800641a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 800641c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8006420:	2b01      	cmp	r3, #1
{
 8006422:	4604      	mov	r4, r0
 8006424:	460d      	mov	r5, r1
 8006426:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8006428:	f000 8097 	beq.w	800655a <HAL_SPI_Transmit+0x144>
 800642c:	2301      	movs	r3, #1
 800642e:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006432:	f7fe fa8f 	bl	8004954 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8006436:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800643a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800643c:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800643e:	b2d8      	uxtb	r0, r3
 8006440:	f040 8089 	bne.w	8006556 <HAL_SPI_Transmit+0x140>
  if ((pData == NULL) || (Size == 0U))
 8006444:	2d00      	cmp	r5, #0
 8006446:	d05a      	beq.n	80064fe <HAL_SPI_Transmit+0xe8>
 8006448:	2f00      	cmp	r7, #0
 800644a:	d058      	beq.n	80064fe <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800644c:	2303      	movs	r3, #3
 800644e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006452:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8006454:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006456:	2300      	movs	r3, #0
 8006458:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 800645a:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 800645e:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006460:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8006462:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8006464:	87a3      	strh	r3, [r4, #60]	; 0x3c
 8006466:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8006468:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800646a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 800646e:	bf08      	it	eq
 8006470:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006472:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8006474:	bf04      	itt	eq
 8006476:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 800647a:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800647c:	681a      	ldr	r2, [r3, #0]
 800647e:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8006480:	bf5e      	ittt	pl
 8006482:	681a      	ldrpl	r2, [r3, #0]
 8006484:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8006488:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800648a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800648e:	6862      	ldr	r2, [r4, #4]
 8006490:	d13e      	bne.n	8006510 <HAL_SPI_Transmit+0xfa>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006492:	b10a      	cbz	r2, 8006498 <HAL_SPI_Transmit+0x82>
 8006494:	2f01      	cmp	r7, #1
 8006496:	d107      	bne.n	80064a8 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006498:	f835 2b02 	ldrh.w	r2, [r5], #2
 800649c:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800649e:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80064a0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80064a2:	3b01      	subs	r3, #1
 80064a4:	b29b      	uxth	r3, r3
 80064a6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 80064a8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80064aa:	b29b      	uxth	r3, r3
 80064ac:	b9a3      	cbnz	r3, 80064d8 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80064ae:	4642      	mov	r2, r8
 80064b0:	4631      	mov	r1, r6
 80064b2:	4620      	mov	r0, r4
 80064b4:	f7ff ff46 	bl	8006344 <SPI_EndRxTxTransaction>
 80064b8:	2800      	cmp	r0, #0
 80064ba:	d149      	bne.n	8006550 <HAL_SPI_Transmit+0x13a>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80064bc:	68a3      	ldr	r3, [r4, #8]
 80064be:	b933      	cbnz	r3, 80064ce <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80064c0:	9301      	str	r3, [sp, #4]
 80064c2:	6823      	ldr	r3, [r4, #0]
 80064c4:	68da      	ldr	r2, [r3, #12]
 80064c6:	9201      	str	r2, [sp, #4]
 80064c8:	689b      	ldr	r3, [r3, #8]
 80064ca:	9301      	str	r3, [sp, #4]
 80064cc:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80064ce:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 80064d0:	3800      	subs	r0, #0
 80064d2:	bf18      	it	ne
 80064d4:	2001      	movne	r0, #1
error:
 80064d6:	e012      	b.n	80064fe <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80064d8:	6822      	ldr	r2, [r4, #0]
 80064da:	6893      	ldr	r3, [r2, #8]
 80064dc:	0798      	lsls	r0, r3, #30
 80064de:	d505      	bpl.n	80064ec <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80064e0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80064e2:	f833 1b02 	ldrh.w	r1, [r3], #2
 80064e6:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80064e8:	6323      	str	r3, [r4, #48]	; 0x30
 80064ea:	e7d9      	b.n	80064a0 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80064ec:	f7fe fa32 	bl	8004954 <HAL_GetTick>
 80064f0:	eba0 0008 	sub.w	r0, r0, r8
 80064f4:	42b0      	cmp	r0, r6
 80064f6:	d3d7      	bcc.n	80064a8 <HAL_SPI_Transmit+0x92>
 80064f8:	1c71      	adds	r1, r6, #1
 80064fa:	d0d5      	beq.n	80064a8 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 80064fc:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80064fe:	2301      	movs	r3, #1
 8006500:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006504:	2300      	movs	r3, #0
 8006506:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800650a:	b002      	add	sp, #8
 800650c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006510:	b10a      	cbz	r2, 8006516 <HAL_SPI_Transmit+0x100>
 8006512:	2f01      	cmp	r7, #1
 8006514:	d108      	bne.n	8006528 <HAL_SPI_Transmit+0x112>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006516:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006518:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800651a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800651c:	3301      	adds	r3, #1
 800651e:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006520:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006522:	3b01      	subs	r3, #1
 8006524:	b29b      	uxth	r3, r3
 8006526:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8006528:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800652a:	b29b      	uxth	r3, r3
 800652c:	2b00      	cmp	r3, #0
 800652e:	d0be      	beq.n	80064ae <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006530:	6823      	ldr	r3, [r4, #0]
 8006532:	689a      	ldr	r2, [r3, #8]
 8006534:	0792      	lsls	r2, r2, #30
 8006536:	d502      	bpl.n	800653e <HAL_SPI_Transmit+0x128>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006538:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800653a:	7812      	ldrb	r2, [r2, #0]
 800653c:	e7ec      	b.n	8006518 <HAL_SPI_Transmit+0x102>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800653e:	f7fe fa09 	bl	8004954 <HAL_GetTick>
 8006542:	eba0 0008 	sub.w	r0, r0, r8
 8006546:	42b0      	cmp	r0, r6
 8006548:	d3ee      	bcc.n	8006528 <HAL_SPI_Transmit+0x112>
 800654a:	1c73      	adds	r3, r6, #1
 800654c:	d0ec      	beq.n	8006528 <HAL_SPI_Transmit+0x112>
 800654e:	e7d5      	b.n	80064fc <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006550:	2320      	movs	r3, #32
 8006552:	6563      	str	r3, [r4, #84]	; 0x54
 8006554:	e7b2      	b.n	80064bc <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8006556:	2002      	movs	r0, #2
 8006558:	e7d1      	b.n	80064fe <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 800655a:	2002      	movs	r0, #2
 800655c:	e7d5      	b.n	800650a <HAL_SPI_Transmit+0xf4>

0800655e <HAL_SPI_TransmitReceive>:
{
 800655e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006562:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8006564:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8006568:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 800656c:	2b01      	cmp	r3, #1
{
 800656e:	4604      	mov	r4, r0
 8006570:	460d      	mov	r5, r1
 8006572:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8006574:	f000 80e0 	beq.w	8006738 <HAL_SPI_TransmitReceive+0x1da>
 8006578:	2301      	movs	r3, #1
 800657a:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800657e:	f7fe f9e9 	bl	8004954 <HAL_GetTick>
  tmp_state           = hspi->State;
 8006582:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8006586:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006588:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800658a:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 800658c:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800658e:	d00a      	beq.n	80065a6 <HAL_SPI_TransmitReceive+0x48>
 8006590:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8006594:	f040 80ce 	bne.w	8006734 <HAL_SPI_TransmitReceive+0x1d6>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8006598:	68a3      	ldr	r3, [r4, #8]
 800659a:	2b00      	cmp	r3, #0
 800659c:	f040 80ca 	bne.w	8006734 <HAL_SPI_TransmitReceive+0x1d6>
 80065a0:	2904      	cmp	r1, #4
 80065a2:	f040 80c7 	bne.w	8006734 <HAL_SPI_TransmitReceive+0x1d6>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80065a6:	2d00      	cmp	r5, #0
 80065a8:	d03f      	beq.n	800662a <HAL_SPI_TransmitReceive+0xcc>
 80065aa:	f1b9 0f00 	cmp.w	r9, #0
 80065ae:	d03c      	beq.n	800662a <HAL_SPI_TransmitReceive+0xcc>
 80065b0:	2e00      	cmp	r6, #0
 80065b2:	d03a      	beq.n	800662a <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80065b4:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 80065b8:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80065bc:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 80065be:	bf1c      	itt	ne
 80065c0:	2305      	movne	r3, #5
 80065c2:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80065c6:	2300      	movs	r3, #0
 80065c8:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 80065ca:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80065ce:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 80065d0:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 80065d2:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80065d4:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 80065d6:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80065d8:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 80065da:	bf58      	it	pl
 80065dc:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 80065de:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 80065e0:	bf58      	it	pl
 80065e2:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 80065e6:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 80065e8:	bf58      	it	pl
 80065ea:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80065ec:	68e1      	ldr	r1, [r4, #12]
 80065ee:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 80065f2:	d151      	bne.n	8006698 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80065f4:	b10a      	cbz	r2, 80065fa <HAL_SPI_TransmitReceive+0x9c>
 80065f6:	2e01      	cmp	r6, #1
 80065f8:	d107      	bne.n	800660a <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80065fa:	f835 2b02 	ldrh.w	r2, [r5], #2
 80065fe:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8006600:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006602:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8006604:	3b01      	subs	r3, #1
 8006606:	b29b      	uxth	r3, r3
 8006608:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800660a:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800660c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800660e:	b29b      	uxth	r3, r3
 8006610:	b96b      	cbnz	r3, 800662e <HAL_SPI_TransmitReceive+0xd0>
 8006612:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006614:	b29b      	uxth	r3, r3
 8006616:	b953      	cbnz	r3, 800662e <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006618:	463a      	mov	r2, r7
 800661a:	4641      	mov	r1, r8
 800661c:	4620      	mov	r0, r4
 800661e:	f7ff fe91 	bl	8006344 <SPI_EndRxTxTransaction>
 8006622:	2800      	cmp	r0, #0
 8006624:	d07b      	beq.n	800671e <HAL_SPI_TransmitReceive+0x1c0>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006626:	2320      	movs	r3, #32
 8006628:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800662a:	2001      	movs	r0, #1
 800662c:	e02b      	b.n	8006686 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800662e:	6821      	ldr	r1, [r4, #0]
 8006630:	688b      	ldr	r3, [r1, #8]
 8006632:	079a      	lsls	r2, r3, #30
 8006634:	d50d      	bpl.n	8006652 <HAL_SPI_TransmitReceive+0xf4>
 8006636:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006638:	b29b      	uxth	r3, r3
 800663a:	b153      	cbz	r3, 8006652 <HAL_SPI_TransmitReceive+0xf4>
 800663c:	b14d      	cbz	r5, 8006652 <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800663e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006640:	f833 2b02 	ldrh.w	r2, [r3], #2
 8006644:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006646:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006648:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800664a:	3b01      	subs	r3, #1
 800664c:	b29b      	uxth	r3, r3
 800664e:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8006650:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006652:	688a      	ldr	r2, [r1, #8]
 8006654:	f012 0201 	ands.w	r2, r2, #1
 8006658:	d00c      	beq.n	8006674 <HAL_SPI_TransmitReceive+0x116>
 800665a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800665c:	b29b      	uxth	r3, r3
 800665e:	b14b      	cbz	r3, 8006674 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006660:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006662:	68c9      	ldr	r1, [r1, #12]
 8006664:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006668:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800666a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800666c:	3b01      	subs	r3, #1
 800666e:	b29b      	uxth	r3, r3
 8006670:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8006672:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006674:	f7fe f96e 	bl	8004954 <HAL_GetTick>
 8006678:	1bc0      	subs	r0, r0, r7
 800667a:	4540      	cmp	r0, r8
 800667c:	d3c6      	bcc.n	800660c <HAL_SPI_TransmitReceive+0xae>
 800667e:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006682:	d0c3      	beq.n	800660c <HAL_SPI_TransmitReceive+0xae>
        errorcode = HAL_TIMEOUT;
 8006684:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006686:	2301      	movs	r3, #1
 8006688:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800668c:	2300      	movs	r3, #0
 800668e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8006692:	b003      	add	sp, #12
 8006694:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006698:	b10a      	cbz	r2, 800669e <HAL_SPI_TransmitReceive+0x140>
 800669a:	2e01      	cmp	r6, #1
 800669c:	d108      	bne.n	80066b0 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800669e:	782a      	ldrb	r2, [r5, #0]
 80066a0:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80066a2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80066a4:	3301      	adds	r3, #1
 80066a6:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 80066a8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80066aa:	3b01      	subs	r3, #1
 80066ac:	b29b      	uxth	r3, r3
 80066ae:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 80066b0:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80066b2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80066b4:	b29b      	uxth	r3, r3
 80066b6:	b91b      	cbnz	r3, 80066c0 <HAL_SPI_TransmitReceive+0x162>
 80066b8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80066ba:	b29b      	uxth	r3, r3
 80066bc:	2b00      	cmp	r3, #0
 80066be:	d0ab      	beq.n	8006618 <HAL_SPI_TransmitReceive+0xba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80066c0:	6822      	ldr	r2, [r4, #0]
 80066c2:	6893      	ldr	r3, [r2, #8]
 80066c4:	079b      	lsls	r3, r3, #30
 80066c6:	d50e      	bpl.n	80066e6 <HAL_SPI_TransmitReceive+0x188>
 80066c8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80066ca:	b29b      	uxth	r3, r3
 80066cc:	b15b      	cbz	r3, 80066e6 <HAL_SPI_TransmitReceive+0x188>
 80066ce:	b155      	cbz	r5, 80066e6 <HAL_SPI_TransmitReceive+0x188>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 80066d0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80066d2:	781b      	ldrb	r3, [r3, #0]
 80066d4:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 80066d6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80066d8:	3301      	adds	r3, #1
 80066da:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80066dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80066de:	3b01      	subs	r3, #1
 80066e0:	b29b      	uxth	r3, r3
 80066e2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 80066e4:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80066e6:	6822      	ldr	r2, [r4, #0]
 80066e8:	6891      	ldr	r1, [r2, #8]
 80066ea:	f011 0101 	ands.w	r1, r1, #1
 80066ee:	d00d      	beq.n	800670c <HAL_SPI_TransmitReceive+0x1ae>
 80066f0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80066f2:	b29b      	uxth	r3, r3
 80066f4:	b153      	cbz	r3, 800670c <HAL_SPI_TransmitReceive+0x1ae>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80066f6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80066f8:	68d2      	ldr	r2, [r2, #12]
 80066fa:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80066fc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80066fe:	3301      	adds	r3, #1
 8006700:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006702:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006704:	3b01      	subs	r3, #1
 8006706:	b29b      	uxth	r3, r3
 8006708:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800670a:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800670c:	f7fe f922 	bl	8004954 <HAL_GetTick>
 8006710:	1bc0      	subs	r0, r0, r7
 8006712:	4540      	cmp	r0, r8
 8006714:	d3cd      	bcc.n	80066b2 <HAL_SPI_TransmitReceive+0x154>
 8006716:	f1b8 3fff 	cmp.w	r8, #4294967295
 800671a:	d0ca      	beq.n	80066b2 <HAL_SPI_TransmitReceive+0x154>
 800671c:	e7b2      	b.n	8006684 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800671e:	68a3      	ldr	r3, [r4, #8]
 8006720:	2b00      	cmp	r3, #0
 8006722:	d1b0      	bne.n	8006686 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006724:	6823      	ldr	r3, [r4, #0]
 8006726:	9001      	str	r0, [sp, #4]
 8006728:	68da      	ldr	r2, [r3, #12]
 800672a:	9201      	str	r2, [sp, #4]
 800672c:	689b      	ldr	r3, [r3, #8]
 800672e:	9301      	str	r3, [sp, #4]
 8006730:	9b01      	ldr	r3, [sp, #4]
 8006732:	e7a8      	b.n	8006686 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8006734:	2002      	movs	r0, #2
 8006736:	e7a6      	b.n	8006686 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8006738:	2002      	movs	r0, #2
 800673a:	e7aa      	b.n	8006692 <HAL_SPI_TransmitReceive+0x134>

0800673c <HAL_SPI_Receive>:
{
 800673c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006740:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006742:	6843      	ldr	r3, [r0, #4]
 8006744:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8006748:	4604      	mov	r4, r0
 800674a:	4688      	mov	r8, r1
 800674c:	4616      	mov	r6, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800674e:	d10c      	bne.n	800676a <HAL_SPI_Receive+0x2e>
 8006750:	6883      	ldr	r3, [r0, #8]
 8006752:	b953      	cbnz	r3, 800676a <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006754:	2304      	movs	r3, #4
 8006756:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800675a:	4613      	mov	r3, r2
 800675c:	9500      	str	r5, [sp, #0]
 800675e:	460a      	mov	r2, r1
 8006760:	f7ff fefd 	bl	800655e <HAL_SPI_TransmitReceive>
}
 8006764:	b002      	add	sp, #8
 8006766:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_LOCK(hspi);
 800676a:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800676e:	2b01      	cmp	r3, #1
 8006770:	d079      	beq.n	8006866 <HAL_SPI_Receive+0x12a>
 8006772:	2301      	movs	r3, #1
 8006774:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006778:	f7fe f8ec 	bl	8004954 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800677c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8006780:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006782:	4607      	mov	r7, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006784:	b2d8      	uxtb	r0, r3
 8006786:	d16c      	bne.n	8006862 <HAL_SPI_Receive+0x126>
  if ((pData == NULL) || (Size == 0U))
 8006788:	f1b8 0f00 	cmp.w	r8, #0
 800678c:	d057      	beq.n	800683e <HAL_SPI_Receive+0x102>
 800678e:	2e00      	cmp	r6, #0
 8006790:	d055      	beq.n	800683e <HAL_SPI_Receive+0x102>
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006792:	2304      	movs	r3, #4
 8006794:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006798:	68a2      	ldr	r2, [r4, #8]
  hspi->RxXferSize  = Size;
 800679a:	87a6      	strh	r6, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800679c:	2300      	movs	r3, #0
 800679e:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 80067a0:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->RxXferCount = Size;
 80067a4:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80067a6:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferCount = 0U;
 80067a8:	86e3      	strh	r3, [r4, #54]	; 0x36
  hspi->TxXferSize  = 0U;
 80067aa:	86a3      	strh	r3, [r4, #52]	; 0x34
 80067ac:	6823      	ldr	r3, [r4, #0]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80067ae:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80067b2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_RX(hspi);
 80067b6:	bf02      	ittt	eq
 80067b8:	681a      	ldreq	r2, [r3, #0]
 80067ba:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
 80067be:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80067c0:	681a      	ldr	r2, [r3, #0]
 80067c2:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80067c4:	bf5e      	ittt	pl
 80067c6:	681a      	ldrpl	r2, [r3, #0]
 80067c8:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 80067cc:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80067ce:	68e3      	ldr	r3, [r4, #12]
 80067d0:	b1f3      	cbz	r3, 8006810 <HAL_SPI_Receive+0xd4>
    while (hspi->RxXferCount > 0U)
 80067d2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80067d4:	b29b      	uxth	r3, r3
 80067d6:	b1fb      	cbz	r3, 8006818 <HAL_SPI_Receive+0xdc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80067d8:	6823      	ldr	r3, [r4, #0]
 80067da:	689a      	ldr	r2, [r3, #8]
 80067dc:	07d2      	lsls	r2, r2, #31
 80067de:	d535      	bpl.n	800684c <HAL_SPI_Receive+0x110>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80067e0:	68da      	ldr	r2, [r3, #12]
 80067e2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80067e4:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80067e8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80067ea:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80067ec:	3b01      	subs	r3, #1
 80067ee:	b29b      	uxth	r3, r3
 80067f0:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80067f2:	e7ee      	b.n	80067d2 <HAL_SPI_Receive+0x96>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80067f4:	6823      	ldr	r3, [r4, #0]
 80067f6:	689a      	ldr	r2, [r3, #8]
 80067f8:	07d0      	lsls	r0, r2, #31
 80067fa:	d518      	bpl.n	800682e <HAL_SPI_Receive+0xf2>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80067fc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80067fe:	7b1b      	ldrb	r3, [r3, #12]
 8006800:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8006802:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006804:	3301      	adds	r3, #1
 8006806:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006808:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800680a:	3b01      	subs	r3, #1
 800680c:	b29b      	uxth	r3, r3
 800680e:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8006810:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006812:	b29b      	uxth	r3, r3
 8006814:	2b00      	cmp	r3, #0
 8006816:	d1ed      	bne.n	80067f4 <HAL_SPI_Receive+0xb8>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006818:	463a      	mov	r2, r7
 800681a:	4629      	mov	r1, r5
 800681c:	4620      	mov	r0, r4
 800681e:	f7ff fd67 	bl	80062f0 <SPI_EndRxTransaction>
 8006822:	b9d8      	cbnz	r0, 800685c <HAL_SPI_Receive+0x120>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006824:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8006826:	3800      	subs	r0, #0
 8006828:	bf18      	it	ne
 800682a:	2001      	movne	r0, #1
error :
 800682c:	e007      	b.n	800683e <HAL_SPI_Receive+0x102>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800682e:	f7fe f891 	bl	8004954 <HAL_GetTick>
 8006832:	1bc0      	subs	r0, r0, r7
 8006834:	42a8      	cmp	r0, r5
 8006836:	d3eb      	bcc.n	8006810 <HAL_SPI_Receive+0xd4>
 8006838:	1c69      	adds	r1, r5, #1
 800683a:	d0e9      	beq.n	8006810 <HAL_SPI_Receive+0xd4>
          errorcode = HAL_TIMEOUT;
 800683c:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800683e:	2301      	movs	r3, #1
 8006840:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006844:	2300      	movs	r3, #0
 8006846:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 800684a:	e78b      	b.n	8006764 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800684c:	f7fe f882 	bl	8004954 <HAL_GetTick>
 8006850:	1bc0      	subs	r0, r0, r7
 8006852:	42a8      	cmp	r0, r5
 8006854:	d3bd      	bcc.n	80067d2 <HAL_SPI_Receive+0x96>
 8006856:	1c6b      	adds	r3, r5, #1
 8006858:	d0bb      	beq.n	80067d2 <HAL_SPI_Receive+0x96>
 800685a:	e7ef      	b.n	800683c <HAL_SPI_Receive+0x100>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800685c:	2320      	movs	r3, #32
 800685e:	6563      	str	r3, [r4, #84]	; 0x54
 8006860:	e7e0      	b.n	8006824 <HAL_SPI_Receive+0xe8>
    errorcode = HAL_BUSY;
 8006862:	2002      	movs	r0, #2
 8006864:	e7eb      	b.n	800683e <HAL_SPI_Receive+0x102>
  __HAL_LOCK(hspi);
 8006866:	2002      	movs	r0, #2
 8006868:	e77c      	b.n	8006764 <HAL_SPI_Receive+0x28>

0800686a <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800686a:	4770      	bx	lr

0800686c <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800686c:	6803      	ldr	r3, [r0, #0]
 800686e:	68da      	ldr	r2, [r3, #12]
 8006870:	f042 0201 	orr.w	r2, r2, #1
 8006874:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006876:	689a      	ldr	r2, [r3, #8]
 8006878:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800687c:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 800687e:	bf1e      	ittt	ne
 8006880:	681a      	ldrne	r2, [r3, #0]
 8006882:	f042 0201 	orrne.w	r2, r2, #1
 8006886:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8006888:	2000      	movs	r0, #0
 800688a:	4770      	bx	lr

0800688c <HAL_TIM_OC_DelayElapsedCallback>:
 800688c:	4770      	bx	lr

0800688e <HAL_TIM_IC_CaptureCallback>:
 800688e:	4770      	bx	lr

08006890 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006890:	4770      	bx	lr

08006892 <HAL_TIM_TriggerCallback>:
 8006892:	4770      	bx	lr

08006894 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006894:	6803      	ldr	r3, [r0, #0]
 8006896:	691a      	ldr	r2, [r3, #16]
 8006898:	0791      	lsls	r1, r2, #30
{
 800689a:	b510      	push	{r4, lr}
 800689c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800689e:	d50e      	bpl.n	80068be <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80068a0:	68da      	ldr	r2, [r3, #12]
 80068a2:	0792      	lsls	r2, r2, #30
 80068a4:	d50b      	bpl.n	80068be <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80068a6:	f06f 0202 	mvn.w	r2, #2
 80068aa:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80068ac:	2201      	movs	r2, #1
 80068ae:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80068b0:	699b      	ldr	r3, [r3, #24]
 80068b2:	079b      	lsls	r3, r3, #30
 80068b4:	d077      	beq.n	80069a6 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80068b6:	f7ff ffea 	bl	800688e <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80068ba:	2300      	movs	r3, #0
 80068bc:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80068be:	6823      	ldr	r3, [r4, #0]
 80068c0:	691a      	ldr	r2, [r3, #16]
 80068c2:	0750      	lsls	r0, r2, #29
 80068c4:	d510      	bpl.n	80068e8 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80068c6:	68da      	ldr	r2, [r3, #12]
 80068c8:	0751      	lsls	r1, r2, #29
 80068ca:	d50d      	bpl.n	80068e8 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80068cc:	f06f 0204 	mvn.w	r2, #4
 80068d0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80068d2:	2202      	movs	r2, #2
 80068d4:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80068d6:	699b      	ldr	r3, [r3, #24]
 80068d8:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80068dc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80068de:	d068      	beq.n	80069b2 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80068e0:	f7ff ffd5 	bl	800688e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80068e4:	2300      	movs	r3, #0
 80068e6:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80068e8:	6823      	ldr	r3, [r4, #0]
 80068ea:	691a      	ldr	r2, [r3, #16]
 80068ec:	0712      	lsls	r2, r2, #28
 80068ee:	d50f      	bpl.n	8006910 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80068f0:	68da      	ldr	r2, [r3, #12]
 80068f2:	0710      	lsls	r0, r2, #28
 80068f4:	d50c      	bpl.n	8006910 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80068f6:	f06f 0208 	mvn.w	r2, #8
 80068fa:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80068fc:	2204      	movs	r2, #4
 80068fe:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006900:	69db      	ldr	r3, [r3, #28]
 8006902:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006904:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006906:	d05a      	beq.n	80069be <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006908:	f7ff ffc1 	bl	800688e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800690c:	2300      	movs	r3, #0
 800690e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8006910:	6823      	ldr	r3, [r4, #0]
 8006912:	691a      	ldr	r2, [r3, #16]
 8006914:	06d2      	lsls	r2, r2, #27
 8006916:	d510      	bpl.n	800693a <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006918:	68da      	ldr	r2, [r3, #12]
 800691a:	06d0      	lsls	r0, r2, #27
 800691c:	d50d      	bpl.n	800693a <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800691e:	f06f 0210 	mvn.w	r2, #16
 8006922:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006924:	2208      	movs	r2, #8
 8006926:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006928:	69db      	ldr	r3, [r3, #28]
 800692a:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800692e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006930:	d04b      	beq.n	80069ca <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8006932:	f7ff ffac 	bl	800688e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006936:	2300      	movs	r3, #0
 8006938:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800693a:	6823      	ldr	r3, [r4, #0]
 800693c:	691a      	ldr	r2, [r3, #16]
 800693e:	07d1      	lsls	r1, r2, #31
 8006940:	d508      	bpl.n	8006954 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006942:	68da      	ldr	r2, [r3, #12]
 8006944:	07d2      	lsls	r2, r2, #31
 8006946:	d505      	bpl.n	8006954 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006948:	f06f 0201 	mvn.w	r2, #1
 800694c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800694e:	4620      	mov	r0, r4
 8006950:	f7fb f800 	bl	8001954 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006954:	6823      	ldr	r3, [r4, #0]
 8006956:	691a      	ldr	r2, [r3, #16]
 8006958:	0610      	lsls	r0, r2, #24
 800695a:	d508      	bpl.n	800696e <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800695c:	68da      	ldr	r2, [r3, #12]
 800695e:	0611      	lsls	r1, r2, #24
 8006960:	d505      	bpl.n	800696e <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006962:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006966:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8006968:	4620      	mov	r0, r4
 800696a:	f000 f8b6 	bl	8006ada <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800696e:	6823      	ldr	r3, [r4, #0]
 8006970:	691a      	ldr	r2, [r3, #16]
 8006972:	0652      	lsls	r2, r2, #25
 8006974:	d508      	bpl.n	8006988 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006976:	68da      	ldr	r2, [r3, #12]
 8006978:	0650      	lsls	r0, r2, #25
 800697a:	d505      	bpl.n	8006988 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800697c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006980:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006982:	4620      	mov	r0, r4
 8006984:	f7ff ff85 	bl	8006892 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006988:	6823      	ldr	r3, [r4, #0]
 800698a:	691a      	ldr	r2, [r3, #16]
 800698c:	0691      	lsls	r1, r2, #26
 800698e:	d522      	bpl.n	80069d6 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006990:	68da      	ldr	r2, [r3, #12]
 8006992:	0692      	lsls	r2, r2, #26
 8006994:	d51f      	bpl.n	80069d6 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006996:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800699a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800699c:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800699e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80069a2:	f000 b899 	b.w	8006ad8 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80069a6:	f7ff ff71 	bl	800688c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80069aa:	4620      	mov	r0, r4
 80069ac:	f7ff ff70 	bl	8006890 <HAL_TIM_PWM_PulseFinishedCallback>
 80069b0:	e783      	b.n	80068ba <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80069b2:	f7ff ff6b 	bl	800688c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80069b6:	4620      	mov	r0, r4
 80069b8:	f7ff ff6a 	bl	8006890 <HAL_TIM_PWM_PulseFinishedCallback>
 80069bc:	e792      	b.n	80068e4 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80069be:	f7ff ff65 	bl	800688c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80069c2:	4620      	mov	r0, r4
 80069c4:	f7ff ff64 	bl	8006890 <HAL_TIM_PWM_PulseFinishedCallback>
 80069c8:	e7a0      	b.n	800690c <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80069ca:	f7ff ff5f 	bl	800688c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80069ce:	4620      	mov	r0, r4
 80069d0:	f7ff ff5e 	bl	8006890 <HAL_TIM_PWM_PulseFinishedCallback>
 80069d4:	e7af      	b.n	8006936 <HAL_TIM_IRQHandler+0xa2>
}
 80069d6:	bd10      	pop	{r4, pc}

080069d8 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80069d8:	4a30      	ldr	r2, [pc, #192]	; (8006a9c <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80069da:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80069dc:	4290      	cmp	r0, r2
 80069de:	d012      	beq.n	8006a06 <TIM_Base_SetConfig+0x2e>
 80069e0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80069e4:	d00f      	beq.n	8006a06 <TIM_Base_SetConfig+0x2e>
 80069e6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80069ea:	4290      	cmp	r0, r2
 80069ec:	d00b      	beq.n	8006a06 <TIM_Base_SetConfig+0x2e>
 80069ee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80069f2:	4290      	cmp	r0, r2
 80069f4:	d007      	beq.n	8006a06 <TIM_Base_SetConfig+0x2e>
 80069f6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80069fa:	4290      	cmp	r0, r2
 80069fc:	d003      	beq.n	8006a06 <TIM_Base_SetConfig+0x2e>
 80069fe:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006a02:	4290      	cmp	r0, r2
 8006a04:	d119      	bne.n	8006a3a <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006a06:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006a08:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8006a0c:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006a0e:	4a23      	ldr	r2, [pc, #140]	; (8006a9c <TIM_Base_SetConfig+0xc4>)
 8006a10:	4290      	cmp	r0, r2
 8006a12:	d029      	beq.n	8006a68 <TIM_Base_SetConfig+0x90>
 8006a14:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006a18:	d026      	beq.n	8006a68 <TIM_Base_SetConfig+0x90>
 8006a1a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006a1e:	4290      	cmp	r0, r2
 8006a20:	d022      	beq.n	8006a68 <TIM_Base_SetConfig+0x90>
 8006a22:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006a26:	4290      	cmp	r0, r2
 8006a28:	d01e      	beq.n	8006a68 <TIM_Base_SetConfig+0x90>
 8006a2a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006a2e:	4290      	cmp	r0, r2
 8006a30:	d01a      	beq.n	8006a68 <TIM_Base_SetConfig+0x90>
 8006a32:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006a36:	4290      	cmp	r0, r2
 8006a38:	d016      	beq.n	8006a68 <TIM_Base_SetConfig+0x90>
 8006a3a:	4a19      	ldr	r2, [pc, #100]	; (8006aa0 <TIM_Base_SetConfig+0xc8>)
 8006a3c:	4290      	cmp	r0, r2
 8006a3e:	d013      	beq.n	8006a68 <TIM_Base_SetConfig+0x90>
 8006a40:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006a44:	4290      	cmp	r0, r2
 8006a46:	d00f      	beq.n	8006a68 <TIM_Base_SetConfig+0x90>
 8006a48:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006a4c:	4290      	cmp	r0, r2
 8006a4e:	d00b      	beq.n	8006a68 <TIM_Base_SetConfig+0x90>
 8006a50:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8006a54:	4290      	cmp	r0, r2
 8006a56:	d007      	beq.n	8006a68 <TIM_Base_SetConfig+0x90>
 8006a58:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006a5c:	4290      	cmp	r0, r2
 8006a5e:	d003      	beq.n	8006a68 <TIM_Base_SetConfig+0x90>
 8006a60:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006a64:	4290      	cmp	r0, r2
 8006a66:	d103      	bne.n	8006a70 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006a68:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006a6a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006a6e:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006a70:	694a      	ldr	r2, [r1, #20]
 8006a72:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006a76:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006a78:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006a7a:	688b      	ldr	r3, [r1, #8]
 8006a7c:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006a7e:	680b      	ldr	r3, [r1, #0]
 8006a80:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006a82:	4b06      	ldr	r3, [pc, #24]	; (8006a9c <TIM_Base_SetConfig+0xc4>)
 8006a84:	4298      	cmp	r0, r3
 8006a86:	d003      	beq.n	8006a90 <TIM_Base_SetConfig+0xb8>
 8006a88:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006a8c:	4298      	cmp	r0, r3
 8006a8e:	d101      	bne.n	8006a94 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006a90:	690b      	ldr	r3, [r1, #16]
 8006a92:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006a94:	2301      	movs	r3, #1
 8006a96:	6143      	str	r3, [r0, #20]
}
 8006a98:	4770      	bx	lr
 8006a9a:	bf00      	nop
 8006a9c:	40010000 	.word	0x40010000
 8006aa0:	40014000 	.word	0x40014000

08006aa4 <HAL_TIM_Base_Init>:
{
 8006aa4:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006aa6:	4604      	mov	r4, r0
 8006aa8:	b1a0      	cbz	r0, 8006ad4 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006aaa:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006aae:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006ab2:	b91b      	cbnz	r3, 8006abc <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006ab4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006ab8:	f7ff fed7 	bl	800686a <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006abc:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006abe:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006ac0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006ac4:	1d21      	adds	r1, r4, #4
 8006ac6:	f7ff ff87 	bl	80069d8 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8006aca:	2301      	movs	r3, #1
 8006acc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8006ad0:	2000      	movs	r0, #0
}
 8006ad2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006ad4:	2001      	movs	r0, #1
 8006ad6:	e7fc      	b.n	8006ad2 <HAL_TIM_Base_Init+0x2e>

08006ad8 <HAL_TIMEx_CommutCallback>:
 8006ad8:	4770      	bx	lr

08006ada <HAL_TIMEx_BreakCallback>:
 8006ada:	4770      	bx	lr

08006adc <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006adc:	6803      	ldr	r3, [r0, #0]
 8006ade:	68da      	ldr	r2, [r3, #12]
 8006ae0:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8006ae4:	60da      	str	r2, [r3, #12]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006ae6:	695a      	ldr	r2, [r3, #20]
 8006ae8:	f022 0201 	bic.w	r2, r2, #1
 8006aec:	615a      	str	r2, [r3, #20]

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8006aee:	2320      	movs	r3, #32
 8006af0:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
}
 8006af4:	4770      	bx	lr
	...

08006af8 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8006af8:	b538      	push	{r3, r4, r5, lr}
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006afa:	6803      	ldr	r3, [r0, #0]
 8006afc:	68c1      	ldr	r1, [r0, #12]
 8006afe:	691a      	ldr	r2, [r3, #16]
{
 8006b00:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006b02:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8006b06:	430a      	orrs	r2, r1
 8006b08:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006b0a:	6925      	ldr	r5, [r4, #16]
 8006b0c:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1,
 8006b0e:	68d9      	ldr	r1, [r3, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006b10:	69c0      	ldr	r0, [r0, #28]
 8006b12:	432a      	orrs	r2, r5
 8006b14:	6965      	ldr	r5, [r4, #20]
  MODIFY_REG(huart->Instance->CR1,
 8006b16:	f421 4116 	bic.w	r1, r1, #38400	; 0x9600
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006b1a:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1,
 8006b1c:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006b20:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1,
 8006b22:	430a      	orrs	r2, r1
 8006b24:	60da      	str	r2, [r3, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8006b26:	695a      	ldr	r2, [r3, #20]
 8006b28:	69a1      	ldr	r1, [r4, #24]
 8006b2a:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8006b2e:	430a      	orrs	r2, r1

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006b30:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8006b34:	615a      	str	r2, [r3, #20]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006b36:	4a25      	ldr	r2, [pc, #148]	; (8006bcc <UART_SetConfig+0xd4>)
 8006b38:	d128      	bne.n	8006b8c <UART_SetConfig+0x94>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8006b3a:	4293      	cmp	r3, r2
 8006b3c:	d003      	beq.n	8006b46 <UART_SetConfig+0x4e>
 8006b3e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006b42:	4293      	cmp	r3, r2
 8006b44:	d11f      	bne.n	8006b86 <UART_SetConfig+0x8e>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8006b46:	f7ff f9f7 	bl	8005f38 <HAL_RCC_GetPCLK2Freq>
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006b4a:	6862      	ldr	r2, [r4, #4]
 8006b4c:	2300      	movs	r3, #0
 8006b4e:	1892      	adds	r2, r2, r2
 8006b50:	f04f 0119 	mov.w	r1, #25
 8006b54:	415b      	adcs	r3, r3
 8006b56:	fba0 0101 	umull	r0, r1, r0, r1
 8006b5a:	f7f9 fba1 	bl	80002a0 <__aeabi_uldivmod>
 8006b5e:	2164      	movs	r1, #100	; 0x64
 8006b60:	fbb0 f5f1 	udiv	r5, r0, r1
 8006b64:	fb01 0315 	mls	r3, r1, r5, r0
 8006b68:	00db      	lsls	r3, r3, #3
 8006b6a:	3332      	adds	r3, #50	; 0x32
 8006b6c:	fbb3 f3f1 	udiv	r3, r3, r1
 8006b70:	f003 0207 	and.w	r2, r3, #7
 8006b74:	005b      	lsls	r3, r3, #1
 8006b76:	6821      	ldr	r1, [r4, #0]
 8006b78:	eb02 1205 	add.w	r2, r2, r5, lsl #4
 8006b7c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8006b80:	4413      	add	r3, r2
 8006b82:	608b      	str	r3, [r1, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
 8006b84:	bd38      	pop	{r3, r4, r5, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 8006b86:	f7ff f9c7 	bl	8005f18 <HAL_RCC_GetPCLK1Freq>
 8006b8a:	e7de      	b.n	8006b4a <UART_SetConfig+0x52>
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8006b8c:	4293      	cmp	r3, r2
 8006b8e:	d002      	beq.n	8006b96 <UART_SetConfig+0x9e>
 8006b90:	4a0f      	ldr	r2, [pc, #60]	; (8006bd0 <UART_SetConfig+0xd8>)
 8006b92:	4293      	cmp	r3, r2
 8006b94:	d117      	bne.n	8006bc6 <UART_SetConfig+0xce>
      pclk = HAL_RCC_GetPCLK2Freq();
 8006b96:	f7ff f9cf 	bl	8005f38 <HAL_RCC_GetPCLK2Freq>
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8006b9a:	6863      	ldr	r3, [r4, #4]
 8006b9c:	2119      	movs	r1, #25
 8006b9e:	009a      	lsls	r2, r3, #2
 8006ba0:	fba0 0101 	umull	r0, r1, r0, r1
 8006ba4:	0f9b      	lsrs	r3, r3, #30
 8006ba6:	f7f9 fb7b 	bl	80002a0 <__aeabi_uldivmod>
 8006baa:	2264      	movs	r2, #100	; 0x64
 8006bac:	fbb0 f1f2 	udiv	r1, r0, r2
 8006bb0:	fb02 0311 	mls	r3, r2, r1, r0
 8006bb4:	6824      	ldr	r4, [r4, #0]
 8006bb6:	011b      	lsls	r3, r3, #4
 8006bb8:	3332      	adds	r3, #50	; 0x32
 8006bba:	fbb3 f3f2 	udiv	r3, r3, r2
 8006bbe:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8006bc2:	60a3      	str	r3, [r4, #8]
}
 8006bc4:	e7de      	b.n	8006b84 <UART_SetConfig+0x8c>
      pclk = HAL_RCC_GetPCLK1Freq();
 8006bc6:	f7ff f9a7 	bl	8005f18 <HAL_RCC_GetPCLK1Freq>
 8006bca:	e7e6      	b.n	8006b9a <UART_SetConfig+0xa2>
 8006bcc:	40011000 	.word	0x40011000
 8006bd0:	40011400 	.word	0x40011400

08006bd4 <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
 8006bd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006bd6:	4604      	mov	r4, r0
 8006bd8:	460e      	mov	r6, r1
 8006bda:	4617      	mov	r7, r2
 8006bdc:	461d      	mov	r5, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8006bde:	6822      	ldr	r2, [r4, #0]
 8006be0:	6813      	ldr	r3, [r2, #0]
 8006be2:	ea36 0303 	bics.w	r3, r6, r3
 8006be6:	d101      	bne.n	8006bec <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 8006be8:	2000      	movs	r0, #0
 8006bea:	e014      	b.n	8006c16 <UART_WaitOnFlagUntilTimeout.constprop.0+0x42>
    if (Timeout != HAL_MAX_DELAY)
 8006bec:	1c6b      	adds	r3, r5, #1
 8006bee:	d0f7      	beq.n	8006be0 <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 8006bf0:	b995      	cbnz	r5, 8006c18 <UART_WaitOnFlagUntilTimeout.constprop.0+0x44>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8006bf2:	6823      	ldr	r3, [r4, #0]
 8006bf4:	68da      	ldr	r2, [r3, #12]
 8006bf6:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8006bfa:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006bfc:	695a      	ldr	r2, [r3, #20]
 8006bfe:	f022 0201 	bic.w	r2, r2, #1
 8006c02:	615a      	str	r2, [r3, #20]
        huart->gState  = HAL_UART_STATE_READY;
 8006c04:	2320      	movs	r3, #32
 8006c06:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
        huart->RxState = HAL_UART_STATE_READY;
 8006c0a:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
        __HAL_UNLOCK(huart);
 8006c0e:	2300      	movs	r3, #0
 8006c10:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8006c14:	2003      	movs	r0, #3
}
 8006c16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 8006c18:	f7fd fe9c 	bl	8004954 <HAL_GetTick>
 8006c1c:	1bc0      	subs	r0, r0, r7
 8006c1e:	4285      	cmp	r5, r0
 8006c20:	d2dd      	bcs.n	8006bde <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 8006c22:	e7e6      	b.n	8006bf2 <UART_WaitOnFlagUntilTimeout.constprop.0+0x1e>

08006c24 <HAL_UART_Init>:
{
 8006c24:	b510      	push	{r4, lr}
  if (huart == NULL)
 8006c26:	4604      	mov	r4, r0
 8006c28:	b340      	cbz	r0, 8006c7c <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8006c2a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006c2e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006c32:	b91b      	cbnz	r3, 8006c3c <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8006c34:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_UART_MspInit(huart);
 8006c38:	f7fb f84a 	bl	8001cd0 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8006c3c:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8006c3e:	2324      	movs	r3, #36	; 0x24
 8006c40:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UART_DISABLE(huart);
 8006c44:	68d3      	ldr	r3, [r2, #12]
 8006c46:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006c4a:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8006c4c:	4620      	mov	r0, r4
 8006c4e:	f7ff ff53 	bl	8006af8 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8006c52:	6823      	ldr	r3, [r4, #0]
 8006c54:	691a      	ldr	r2, [r3, #16]
 8006c56:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8006c5a:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8006c5c:	695a      	ldr	r2, [r3, #20]
 8006c5e:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8006c62:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8006c64:	68da      	ldr	r2, [r3, #12]
 8006c66:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006c6a:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006c6c:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8006c6e:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006c70:	63e0      	str	r0, [r4, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 8006c72:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 8006c76:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
}
 8006c7a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006c7c:	2001      	movs	r0, #1
 8006c7e:	e7fc      	b.n	8006c7a <HAL_UART_Init+0x56>

08006c80 <HAL_UART_Transmit>:
{
 8006c80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006c82:	4616      	mov	r6, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8006c84:	f890 2039 	ldrb.w	r2, [r0, #57]	; 0x39
{
 8006c88:	9300      	str	r3, [sp, #0]
  if (huart->gState == HAL_UART_STATE_READY)
 8006c8a:	2a20      	cmp	r2, #32
{
 8006c8c:	4604      	mov	r4, r0
 8006c8e:	460d      	mov	r5, r1
  if (huart->gState == HAL_UART_STATE_READY)
 8006c90:	d150      	bne.n	8006d34 <HAL_UART_Transmit+0xb4>
    if ((pData == NULL) || (Size == 0U))
 8006c92:	2900      	cmp	r1, #0
 8006c94:	d04c      	beq.n	8006d30 <HAL_UART_Transmit+0xb0>
 8006c96:	2e00      	cmp	r6, #0
 8006c98:	d04a      	beq.n	8006d30 <HAL_UART_Transmit+0xb0>
    __HAL_LOCK(huart);
 8006c9a:	f890 2038 	ldrb.w	r2, [r0, #56]	; 0x38
 8006c9e:	2a01      	cmp	r2, #1
 8006ca0:	d048      	beq.n	8006d34 <HAL_UART_Transmit+0xb4>
 8006ca2:	2201      	movs	r2, #1
 8006ca4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006ca8:	2700      	movs	r7, #0
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006caa:	2221      	movs	r2, #33	; 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006cac:	63c7      	str	r7, [r0, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006cae:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
    tickstart = HAL_GetTick();
 8006cb2:	f7fd fe4f 	bl	8004954 <HAL_GetTick>
    while (huart->TxXferCount > 0U)
 8006cb6:	9b00      	ldr	r3, [sp, #0]
    huart->TxXferSize = Size;
 8006cb8:	84a6      	strh	r6, [r4, #36]	; 0x24
    tickstart = HAL_GetTick();
 8006cba:	4602      	mov	r2, r0
    huart->TxXferCount = Size;
 8006cbc:	84e6      	strh	r6, [r4, #38]	; 0x26
    __HAL_UNLOCK(huart);
 8006cbe:	f884 7038 	strb.w	r7, [r4, #56]	; 0x38
    while (huart->TxXferCount > 0U)
 8006cc2:	8ce1      	ldrh	r1, [r4, #38]	; 0x26
 8006cc4:	b289      	uxth	r1, r1
 8006cc6:	b941      	cbnz	r1, 8006cda <HAL_UART_Transmit+0x5a>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8006cc8:	2140      	movs	r1, #64	; 0x40
 8006cca:	4620      	mov	r0, r4
 8006ccc:	f7ff ff82 	bl	8006bd4 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8006cd0:	b9a8      	cbnz	r0, 8006cfe <HAL_UART_Transmit+0x7e>
    huart->gState = HAL_UART_STATE_READY;
 8006cd2:	2320      	movs	r3, #32
 8006cd4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    return HAL_OK;
 8006cd8:	e012      	b.n	8006d00 <HAL_UART_Transmit+0x80>
      huart->TxXferCount--;
 8006cda:	8ce1      	ldrh	r1, [r4, #38]	; 0x26
 8006cdc:	3901      	subs	r1, #1
 8006cde:	b289      	uxth	r1, r1
 8006ce0:	84e1      	strh	r1, [r4, #38]	; 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8006ce2:	68a1      	ldr	r1, [r4, #8]
 8006ce4:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8006ce8:	e9cd 2300 	strd	r2, r3, [sp]
 8006cec:	f04f 0180 	mov.w	r1, #128	; 0x80
 8006cf0:	4620      	mov	r0, r4
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8006cf2:	d112      	bne.n	8006d1a <HAL_UART_Transmit+0x9a>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8006cf4:	f7ff ff6e 	bl	8006bd4 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8006cf8:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006cfc:	b110      	cbz	r0, 8006d04 <HAL_UART_Transmit+0x84>
          return HAL_TIMEOUT;
 8006cfe:	2003      	movs	r0, #3
}
 8006d00:	b003      	add	sp, #12
 8006d02:	bdf0      	pop	{r4, r5, r6, r7, pc}
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 8006d04:	8829      	ldrh	r1, [r5, #0]
 8006d06:	6820      	ldr	r0, [r4, #0]
 8006d08:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8006d0c:	6041      	str	r1, [r0, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 8006d0e:	6921      	ldr	r1, [r4, #16]
 8006d10:	b909      	cbnz	r1, 8006d16 <HAL_UART_Transmit+0x96>
          pData += 2U;
 8006d12:	3502      	adds	r5, #2
 8006d14:	e7d5      	b.n	8006cc2 <HAL_UART_Transmit+0x42>
          pData += 1U;
 8006d16:	3501      	adds	r5, #1
 8006d18:	e7d3      	b.n	8006cc2 <HAL_UART_Transmit+0x42>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8006d1a:	f7ff ff5b 	bl	8006bd4 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8006d1e:	2800      	cmp	r0, #0
 8006d20:	d1ed      	bne.n	8006cfe <HAL_UART_Transmit+0x7e>
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 8006d22:	6821      	ldr	r1, [r4, #0]
 8006d24:	f815 0b01 	ldrb.w	r0, [r5], #1
 8006d28:	6048      	str	r0, [r1, #4]
 8006d2a:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006d2e:	e7c8      	b.n	8006cc2 <HAL_UART_Transmit+0x42>
      return  HAL_ERROR;
 8006d30:	2001      	movs	r0, #1
 8006d32:	e7e5      	b.n	8006d00 <HAL_UART_Transmit+0x80>
    return HAL_BUSY;
 8006d34:	2002      	movs	r0, #2
 8006d36:	e7e3      	b.n	8006d00 <HAL_UART_Transmit+0x80>

08006d38 <HAL_UART_TxCpltCallback>:
 8006d38:	4770      	bx	lr

08006d3a <HAL_UART_RxCpltCallback>:
 8006d3a:	4770      	bx	lr

08006d3c <UART_Receive_IT>:
{
 8006d3c:	b510      	push	{r4, lr}
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8006d3e:	f890 303a 	ldrb.w	r3, [r0, #58]	; 0x3a
 8006d42:	2b22      	cmp	r3, #34	; 0x22
 8006d44:	d133      	bne.n	8006dae <UART_Receive_IT+0x72>
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8006d46:	6881      	ldr	r1, [r0, #8]
 8006d48:	6904      	ldr	r4, [r0, #16]
 8006d4a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8006d4c:	6802      	ldr	r2, [r0, #0]
 8006d4e:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 8006d52:	d123      	bne.n	8006d9c <UART_Receive_IT+0x60>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8006d54:	6852      	ldr	r2, [r2, #4]
      if (huart->Init.Parity == UART_PARITY_NONE)
 8006d56:	b9ec      	cbnz	r4, 8006d94 <UART_Receive_IT+0x58>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8006d58:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006d5c:	f823 2b02 	strh.w	r2, [r3], #2
        huart->pRxBuffPtr += 1U;
 8006d60:	6283      	str	r3, [r0, #40]	; 0x28
    if (--huart->RxXferCount == 0U)
 8006d62:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 8006d64:	3c01      	subs	r4, #1
 8006d66:	b2a4      	uxth	r4, r4
 8006d68:	85c4      	strh	r4, [r0, #46]	; 0x2e
 8006d6a:	b98c      	cbnz	r4, 8006d90 <UART_Receive_IT+0x54>
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 8006d6c:	6803      	ldr	r3, [r0, #0]
 8006d6e:	68da      	ldr	r2, [r3, #12]
 8006d70:	f022 0220 	bic.w	r2, r2, #32
 8006d74:	60da      	str	r2, [r3, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8006d76:	68da      	ldr	r2, [r3, #12]
 8006d78:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006d7c:	60da      	str	r2, [r3, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8006d7e:	695a      	ldr	r2, [r3, #20]
 8006d80:	f022 0201 	bic.w	r2, r2, #1
 8006d84:	615a      	str	r2, [r3, #20]
      huart->RxState = HAL_UART_STATE_READY;
 8006d86:	2320      	movs	r3, #32
 8006d88:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
      HAL_UART_RxCpltCallback(huart);
 8006d8c:	f7ff ffd5 	bl	8006d3a <HAL_UART_RxCpltCallback>
      return HAL_OK;
 8006d90:	2000      	movs	r0, #0
 8006d92:	e00d      	b.n	8006db0 <UART_Receive_IT+0x74>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 8006d94:	b2d2      	uxtb	r2, r2
 8006d96:	f823 2b01 	strh.w	r2, [r3], #1
 8006d9a:	e7e1      	b.n	8006d60 <UART_Receive_IT+0x24>
      if (huart->Init.Parity == UART_PARITY_NONE)
 8006d9c:	1c59      	adds	r1, r3, #1
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8006d9e:	6852      	ldr	r2, [r2, #4]
 8006da0:	6281      	str	r1, [r0, #40]	; 0x28
      if (huart->Init.Parity == UART_PARITY_NONE)
 8006da2:	b90c      	cbnz	r4, 8006da8 <UART_Receive_IT+0x6c>
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8006da4:	701a      	strb	r2, [r3, #0]
 8006da6:	e7dc      	b.n	8006d62 <UART_Receive_IT+0x26>
 8006da8:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8006dac:	e7fa      	b.n	8006da4 <UART_Receive_IT+0x68>
    return HAL_BUSY;
 8006dae:	2002      	movs	r0, #2
}
 8006db0:	bd10      	pop	{r4, pc}

08006db2 <HAL_UART_ErrorCallback>:
 8006db2:	4770      	bx	lr

08006db4 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8006db4:	6803      	ldr	r3, [r0, #0]
 8006db6:	681a      	ldr	r2, [r3, #0]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8006db8:	68d9      	ldr	r1, [r3, #12]
{
 8006dba:	b570      	push	{r4, r5, r6, lr}
  if (errorflags == RESET)
 8006dbc:	0716      	lsls	r6, r2, #28
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8006dbe:	695d      	ldr	r5, [r3, #20]
{
 8006dc0:	4604      	mov	r4, r0
  if (errorflags == RESET)
 8006dc2:	d107      	bne.n	8006dd4 <HAL_UART_IRQHandler+0x20>
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8006dc4:	0696      	lsls	r6, r2, #26
 8006dc6:	d55c      	bpl.n	8006e82 <HAL_UART_IRQHandler+0xce>
 8006dc8:	068d      	lsls	r5, r1, #26
 8006dca:	d55a      	bpl.n	8006e82 <HAL_UART_IRQHandler+0xce>
}
 8006dcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      UART_Receive_IT(huart);
 8006dd0:	f7ff bfb4 	b.w	8006d3c <UART_Receive_IT>
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8006dd4:	f005 0001 	and.w	r0, r5, #1
 8006dd8:	f401 7590 	and.w	r5, r1, #288	; 0x120
 8006ddc:	4305      	orrs	r5, r0
 8006dde:	d050      	beq.n	8006e82 <HAL_UART_IRQHandler+0xce>
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8006de0:	07d6      	lsls	r6, r2, #31
 8006de2:	d505      	bpl.n	8006df0 <HAL_UART_IRQHandler+0x3c>
 8006de4:	05cd      	lsls	r5, r1, #23
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8006de6:	bf42      	ittt	mi
 8006de8:	6be3      	ldrmi	r3, [r4, #60]	; 0x3c
 8006dea:	f043 0301 	orrmi.w	r3, r3, #1
 8006dee:	63e3      	strmi	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8006df0:	0753      	lsls	r3, r2, #29
 8006df2:	d504      	bpl.n	8006dfe <HAL_UART_IRQHandler+0x4a>
 8006df4:	b118      	cbz	r0, 8006dfe <HAL_UART_IRQHandler+0x4a>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8006df6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006df8:	f043 0302 	orr.w	r3, r3, #2
 8006dfc:	63e3      	str	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8006dfe:	0796      	lsls	r6, r2, #30
 8006e00:	d504      	bpl.n	8006e0c <HAL_UART_IRQHandler+0x58>
 8006e02:	b118      	cbz	r0, 8006e0c <HAL_UART_IRQHandler+0x58>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8006e04:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006e06:	f043 0304 	orr.w	r3, r3, #4
 8006e0a:	63e3      	str	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 8006e0c:	0715      	lsls	r5, r2, #28
 8006e0e:	d507      	bpl.n	8006e20 <HAL_UART_IRQHandler+0x6c>
 8006e10:	f001 0320 	and.w	r3, r1, #32
 8006e14:	4303      	orrs	r3, r0
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8006e16:	bf1e      	ittt	ne
 8006e18:	6be3      	ldrne	r3, [r4, #60]	; 0x3c
 8006e1a:	f043 0308 	orrne.w	r3, r3, #8
 8006e1e:	63e3      	strne	r3, [r4, #60]	; 0x3c
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8006e20:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006e22:	b34b      	cbz	r3, 8006e78 <HAL_UART_IRQHandler+0xc4>
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8006e24:	0690      	lsls	r0, r2, #26
 8006e26:	d504      	bpl.n	8006e32 <HAL_UART_IRQHandler+0x7e>
 8006e28:	0689      	lsls	r1, r1, #26
 8006e2a:	d502      	bpl.n	8006e32 <HAL_UART_IRQHandler+0x7e>
        UART_Receive_IT(huart);
 8006e2c:	4620      	mov	r0, r4
 8006e2e:	f7ff ff85 	bl	8006d3c <UART_Receive_IT>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8006e32:	6823      	ldr	r3, [r4, #0]
 8006e34:	695b      	ldr	r3, [r3, #20]
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8006e36:	6be5      	ldr	r5, [r4, #60]	; 0x3c
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8006e38:	f003 0340 	and.w	r3, r3, #64	; 0x40
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8006e3c:	f005 0508 	and.w	r5, r5, #8
 8006e40:	431d      	orrs	r5, r3
        UART_EndRxTransfer(huart);
 8006e42:	4620      	mov	r0, r4
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8006e44:	d019      	beq.n	8006e7a <HAL_UART_IRQHandler+0xc6>
        UART_EndRxTransfer(huart);
 8006e46:	f7ff fe49 	bl	8006adc <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8006e4a:	6823      	ldr	r3, [r4, #0]
 8006e4c:	695a      	ldr	r2, [r3, #20]
 8006e4e:	0652      	lsls	r2, r2, #25
 8006e50:	d50f      	bpl.n	8006e72 <HAL_UART_IRQHandler+0xbe>
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8006e52:	695a      	ldr	r2, [r3, #20]
          if (huart->hdmarx != NULL)
 8006e54:	6b60      	ldr	r0, [r4, #52]	; 0x34
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8006e56:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006e5a:	615a      	str	r2, [r3, #20]
          if (huart->hdmarx != NULL)
 8006e5c:	b148      	cbz	r0, 8006e72 <HAL_UART_IRQHandler+0xbe>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8006e5e:	4b26      	ldr	r3, [pc, #152]	; (8006ef8 <HAL_UART_IRQHandler+0x144>)
 8006e60:	6503      	str	r3, [r0, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8006e62:	f7fd fdf3 	bl	8004a4c <HAL_DMA_Abort_IT>
 8006e66:	b138      	cbz	r0, 8006e78 <HAL_UART_IRQHandler+0xc4>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8006e68:	6b60      	ldr	r0, [r4, #52]	; 0x34
}
 8006e6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8006e6e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8006e70:	4718      	bx	r3
            HAL_UART_ErrorCallback(huart);
 8006e72:	4620      	mov	r0, r4
 8006e74:	f7ff ff9d 	bl	8006db2 <HAL_UART_ErrorCallback>
}
 8006e78:	bd70      	pop	{r4, r5, r6, pc}
        HAL_UART_ErrorCallback(huart);
 8006e7a:	f7ff ff9a 	bl	8006db2 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006e7e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006e80:	e7fa      	b.n	8006e78 <HAL_UART_IRQHandler+0xc4>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 8006e82:	0616      	lsls	r6, r2, #24
 8006e84:	d528      	bpl.n	8006ed8 <HAL_UART_IRQHandler+0x124>
 8006e86:	060d      	lsls	r5, r1, #24
 8006e88:	d526      	bpl.n	8006ed8 <HAL_UART_IRQHandler+0x124>
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8006e8a:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8006e8e:	2a21      	cmp	r2, #33	; 0x21
 8006e90:	d1f2      	bne.n	8006e78 <HAL_UART_IRQHandler+0xc4>
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8006e92:	68a1      	ldr	r1, [r4, #8]
 8006e94:	6a22      	ldr	r2, [r4, #32]
 8006e96:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 8006e9a:	d118      	bne.n	8006ece <HAL_UART_IRQHandler+0x11a>
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8006e9c:	8811      	ldrh	r1, [r2, #0]
 8006e9e:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8006ea2:	6059      	str	r1, [r3, #4]
      if (huart->Init.Parity == UART_PARITY_NONE)
 8006ea4:	6921      	ldr	r1, [r4, #16]
 8006ea6:	b981      	cbnz	r1, 8006eca <HAL_UART_IRQHandler+0x116>
        huart->pTxBuffPtr += 2U;
 8006ea8:	3202      	adds	r2, #2
        huart->pTxBuffPtr += 1U;
 8006eaa:	6222      	str	r2, [r4, #32]
    if (--huart->TxXferCount == 0U)
 8006eac:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8006eae:	3a01      	subs	r2, #1
 8006eb0:	b292      	uxth	r2, r2
 8006eb2:	84e2      	strh	r2, [r4, #38]	; 0x26
 8006eb4:	2a00      	cmp	r2, #0
 8006eb6:	d1df      	bne.n	8006e78 <HAL_UART_IRQHandler+0xc4>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 8006eb8:	68da      	ldr	r2, [r3, #12]
 8006eba:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006ebe:	60da      	str	r2, [r3, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 8006ec0:	68da      	ldr	r2, [r3, #12]
 8006ec2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006ec6:	60da      	str	r2, [r3, #12]
 8006ec8:	e7d6      	b.n	8006e78 <HAL_UART_IRQHandler+0xc4>
        huart->pTxBuffPtr += 1U;
 8006eca:	3201      	adds	r2, #1
 8006ecc:	e7ed      	b.n	8006eaa <HAL_UART_IRQHandler+0xf6>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 8006ece:	1c51      	adds	r1, r2, #1
 8006ed0:	6221      	str	r1, [r4, #32]
 8006ed2:	7812      	ldrb	r2, [r2, #0]
 8006ed4:	605a      	str	r2, [r3, #4]
 8006ed6:	e7e9      	b.n	8006eac <HAL_UART_IRQHandler+0xf8>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 8006ed8:	0650      	lsls	r0, r2, #25
 8006eda:	d5cd      	bpl.n	8006e78 <HAL_UART_IRQHandler+0xc4>
 8006edc:	064a      	lsls	r2, r1, #25
 8006ede:	d5cb      	bpl.n	8006e78 <HAL_UART_IRQHandler+0xc4>
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8006ee0:	68da      	ldr	r2, [r3, #12]
 8006ee2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006ee6:	60da      	str	r2, [r3, #12]
  huart->gState = HAL_UART_STATE_READY;
 8006ee8:	2320      	movs	r3, #32
 8006eea:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  HAL_UART_TxCpltCallback(huart);
 8006eee:	4620      	mov	r0, r4
 8006ef0:	f7ff ff22 	bl	8006d38 <HAL_UART_TxCpltCallback>
  return HAL_OK;
 8006ef4:	e7c0      	b.n	8006e78 <HAL_UART_IRQHandler+0xc4>
 8006ef6:	bf00      	nop
 8006ef8:	08006efd 	.word	0x08006efd

08006efc <UART_DMAAbortOnError>:
{
 8006efc:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8006efe:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 8006f00:	2300      	movs	r3, #0
 8006f02:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 8006f04:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 8006f06:	f7ff ff54 	bl	8006db2 <HAL_UART_ErrorCallback>
}
 8006f0a:	bd08      	pop	{r3, pc}

08006f0c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8006f0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006f10:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8006f12:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 8006f16:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8006f1a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8006f1e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8006f22:	6809      	ldr	r1, [r1, #0]
 8006f24:	2901      	cmp	r1, #1
 8006f26:	ea43 0304 	orr.w	r3, r3, r4
 8006f2a:	4912      	ldr	r1, [pc, #72]	; (8006f74 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8006f2c:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8006f2e:	d00f      	beq.n	8006f50 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006f30:	431a      	orrs	r2, r3
 8006f32:	432a      	orrs	r2, r5
 8006f34:	ea42 0308 	orr.w	r3, r2, r8
 8006f38:	ea43 030e 	orr.w	r3, r3, lr
 8006f3c:	ea43 030c 	orr.w	r3, r3, ip
 8006f40:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8006f42:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006f44:	4333      	orrs	r3, r6
 8006f46:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006f48:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8006f4a:	2000      	movs	r0, #0
 8006f4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8006f50:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8006f52:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8006f54:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006f56:	ea45 0208 	orr.w	r2, r5, r8
 8006f5a:	ea42 020e 	orr.w	r2, r2, lr
 8006f5e:	ea42 020c 	orr.w	r2, r2, ip
 8006f62:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8006f64:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006f68:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8006f6a:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006f6c:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006f6e:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8006f70:	6042      	str	r2, [r0, #4]
 8006f72:	e7ea      	b.n	8006f4a <FMC_SDRAM_Init+0x3e>
 8006f74:	ffff8000 	.word	0xffff8000

08006f78 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 8006f78:	68cb      	ldr	r3, [r1, #12]
{
 8006f7a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006f7c:	680c      	ldr	r4, [r1, #0]
 8006f7e:	688e      	ldr	r6, [r1, #8]
 8006f80:	690d      	ldr	r5, [r1, #16]
 8006f82:	1e5f      	subs	r7, r3, #1
 8006f84:	694b      	ldr	r3, [r1, #20]
 8006f86:	f104 3cff 	add.w	ip, r4, #4294967295
 8006f8a:	684c      	ldr	r4, [r1, #4]
 8006f8c:	6989      	ldr	r1, [r1, #24]
 8006f8e:	3b01      	subs	r3, #1
 8006f90:	051b      	lsls	r3, r3, #20
 8006f92:	3c01      	subs	r4, #1
 8006f94:	3e01      	subs	r6, #1
 8006f96:	3d01      	subs	r5, #1
 8006f98:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8006f9a:	2a01      	cmp	r2, #1
 8006f9c:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8006fa0:	ea4f 2606 	mov.w	r6, r6, lsl #8
 8006fa4:	ea4f 4505 	mov.w	r5, r5, lsl #16
 8006fa8:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8006fac:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 8006fb0:	d00c      	beq.n	8006fcc <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006fb2:	ea43 030c 	orr.w	r3, r3, ip
 8006fb6:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006fb8:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006fba:	4333      	orrs	r3, r6
 8006fbc:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8006fbe:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006fc2:	430b      	orrs	r3, r1
 8006fc4:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8006fc6:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8006fc8:	2000      	movs	r0, #0
 8006fca:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006fcc:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8006fce:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8006fd2:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006fd6:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8006fd8:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006fda:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8006fde:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8006fe0:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006fe2:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8006fe4:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006fe8:	430a      	orrs	r2, r1
 8006fea:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8006fec:	60c2      	str	r2, [r0, #12]
 8006fee:	e7eb      	b.n	8006fc8 <FMC_SDRAM_Timing_Init+0x50>

08006ff0 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006ff0:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8006ff2:	2300      	movs	r3, #0
 8006ff4:	9301      	str	r3, [sp, #4]
{
 8006ff6:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006ff8:	e9d1 3200 	ldrd	r3, r2, [r1]
 8006ffc:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8006ffe:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007000:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8007004:	688a      	ldr	r2, [r1, #8]
 8007006:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007008:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800700c:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 800700e:	9b01      	ldr	r3, [sp, #4]
 8007010:	6103      	str	r3, [r0, #16]
{
 8007012:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8007014:	f7fd fc9e 	bl	8004954 <HAL_GetTick>
 8007018:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800701a:	69a3      	ldr	r3, [r4, #24]
 800701c:	f013 0320 	ands.w	r3, r3, #32
 8007020:	d101      	bne.n	8007026 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007022:	4618      	mov	r0, r3
 8007024:	e003      	b.n	800702e <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 8007026:	1c6b      	adds	r3, r5, #1
 8007028:	d0f7      	beq.n	800701a <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800702a:	b915      	cbnz	r5, 8007032 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 800702c:	2003      	movs	r0, #3
}
 800702e:	b002      	add	sp, #8
 8007030:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007032:	f7fd fc8f 	bl	8004954 <HAL_GetTick>
 8007036:	1b80      	subs	r0, r0, r6
 8007038:	42a8      	cmp	r0, r5
 800703a:	d9ee      	bls.n	800701a <FMC_SDRAM_SendCommand+0x2a>
 800703c:	e7f6      	b.n	800702c <FMC_SDRAM_SendCommand+0x3c>

0800703e <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 800703e:	6943      	ldr	r3, [r0, #20]
 8007040:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8007044:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8007046:	2000      	movs	r0, #0
 8007048:	4770      	bx	lr
	...

0800704c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800704c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007050:	b113      	cbz	r3, 8007058 <osKernelInitialize+0xc>
    stat = osErrorISR;
 8007052:	f06f 0005 	mvn.w	r0, #5
 8007056:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007058:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 800705c:	4b07      	ldr	r3, [pc, #28]	; (800707c <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 800705e:	b912      	cbnz	r2, 8007066 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007060:	f3ef 8211 	mrs	r2, BASEPRI
 8007064:	b112      	cbz	r2, 800706c <osKernelInitialize+0x20>
 8007066:	681a      	ldr	r2, [r3, #0]
 8007068:	2a02      	cmp	r2, #2
 800706a:	d0f2      	beq.n	8007052 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 800706c:	6818      	ldr	r0, [r3, #0]
 800706e:	b910      	cbnz	r0, 8007076 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007070:	2201      	movs	r2, #1
 8007072:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007074:	4770      	bx	lr
    } else {
      stat = osError;
 8007076:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800707a:	4770      	bx	lr
 800707c:	20002a50 	.word	0x20002a50

08007080 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007080:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007082:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007086:	b113      	cbz	r3, 800708e <osKernelStart+0xe>
    stat = osErrorISR;
 8007088:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 800708c:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800708e:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007092:	4b0a      	ldr	r3, [pc, #40]	; (80070bc <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8007094:	b912      	cbnz	r2, 800709c <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007096:	f3ef 8211 	mrs	r2, BASEPRI
 800709a:	b112      	cbz	r2, 80070a2 <osKernelStart+0x22>
 800709c:	681a      	ldr	r2, [r3, #0]
 800709e:	2a02      	cmp	r2, #2
 80070a0:	d0f2      	beq.n	8007088 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 80070a2:	681a      	ldr	r2, [r3, #0]
 80070a4:	2a01      	cmp	r2, #1
 80070a6:	d105      	bne.n	80070b4 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 80070a8:	2202      	movs	r2, #2
 80070aa:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 80070ac:	f001 fbce 	bl	800884c <vTaskStartScheduler>
      stat = osOK;
 80070b0:	2000      	movs	r0, #0
 80070b2:	e7eb      	b.n	800708c <osKernelStart+0xc>
      stat = osError;
 80070b4:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80070b8:	e7e8      	b.n	800708c <osKernelStart+0xc>
 80070ba:	bf00      	nop
 80070bc:	20002a50 	.word	0x20002a50

080070c0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80070c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80070c2:	b087      	sub	sp, #28
 80070c4:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80070c6:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80070c8:	460b      	mov	r3, r1
  hTask = NULL;
 80070ca:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80070cc:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80070d0:	bb22      	cbnz	r2, 800711c <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80070d2:	f3ef 8210 	mrs	r2, PRIMASK
 80070d6:	b912      	cbnz	r2, 80070de <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80070d8:	f3ef 8211 	mrs	r2, BASEPRI
 80070dc:	b11a      	cbz	r2, 80070e6 <osThreadNew+0x26>
 80070de:	4a22      	ldr	r2, [pc, #136]	; (8007168 <osThreadNew+0xa8>)
 80070e0:	6812      	ldr	r2, [r2, #0]
 80070e2:	2a02      	cmp	r2, #2
 80070e4:	d01a      	beq.n	800711c <osThreadNew+0x5c>
 80070e6:	b1c8      	cbz	r0, 800711c <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80070e8:	2c00      	cmp	r4, #0
 80070ea:	d02f      	beq.n	800714c <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80070ec:	69a5      	ldr	r5, [r4, #24]
 80070ee:	2d00      	cmp	r5, #0
 80070f0:	bf08      	it	eq
 80070f2:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80070f4:	1e6a      	subs	r2, r5, #1
 80070f6:	2a37      	cmp	r2, #55	; 0x37
 80070f8:	46ac      	mov	ip, r5
 80070fa:	d82b      	bhi.n	8007154 <osThreadNew+0x94>
 80070fc:	6862      	ldr	r2, [r4, #4]
 80070fe:	07d2      	lsls	r2, r2, #31
 8007100:	d428      	bmi.n	8007154 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8007102:	6966      	ldr	r6, [r4, #20]
 8007104:	b16e      	cbz	r6, 8007122 <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007106:	08b2      	lsrs	r2, r6, #2
 8007108:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800710c:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800710e:	b157      	cbz	r7, 8007126 <osThreadNew+0x66>
 8007110:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8007114:	d902      	bls.n	800711c <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007116:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007118:	b104      	cbz	r4, 800711c <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800711a:	b9ee      	cbnz	r6, 8007158 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 800711c:	9805      	ldr	r0, [sp, #20]
}
 800711e:	b007      	add	sp, #28
 8007120:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007122:	2280      	movs	r2, #128	; 0x80
 8007124:	e7f0      	b.n	8007108 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007126:	f1be 0f00 	cmp.w	lr, #0
 800712a:	d1f7      	bne.n	800711c <osThreadNew+0x5c>
      if (mem == 0) {
 800712c:	6924      	ldr	r4, [r4, #16]
 800712e:	2c00      	cmp	r4, #0
 8007130:	d1f4      	bne.n	800711c <osThreadNew+0x5c>
 8007132:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007134:	a905      	add	r1, sp, #20
 8007136:	e9cd c100 	strd	ip, r1, [sp]
 800713a:	b292      	uxth	r2, r2
 800713c:	4621      	mov	r1, r4
 800713e:	f001 fb57 	bl	80087f0 <xTaskCreate>
 8007142:	2801      	cmp	r0, #1
          hTask = NULL;
 8007144:	bf1c      	itt	ne
 8007146:	2300      	movne	r3, #0
 8007148:	9305      	strne	r3, [sp, #20]
 800714a:	e7e7      	b.n	800711c <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 800714c:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8007150:	2280      	movs	r2, #128	; 0x80
 8007152:	e7ef      	b.n	8007134 <osThreadNew+0x74>
        return (NULL);
 8007154:	2000      	movs	r0, #0
 8007156:	e7e2      	b.n	800711e <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8007158:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800715c:	9500      	str	r5, [sp, #0]
 800715e:	f001 fb0f 	bl	8008780 <xTaskCreateStatic>
 8007162:	9005      	str	r0, [sp, #20]
 8007164:	e7da      	b.n	800711c <osThreadNew+0x5c>
 8007166:	bf00      	nop
 8007168:	20002a50 	.word	0x20002a50

0800716c <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 800716c:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800716e:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007172:	b113      	cbz	r3, 800717a <osDelay+0xe>
    stat = osErrorISR;
 8007174:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8007178:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800717a:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800717e:	b913      	cbnz	r3, 8007186 <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007180:	f3ef 8311 	mrs	r3, BASEPRI
 8007184:	b11b      	cbz	r3, 800718e <osDelay+0x22>
 8007186:	4b05      	ldr	r3, [pc, #20]	; (800719c <osDelay+0x30>)
 8007188:	681b      	ldr	r3, [r3, #0]
 800718a:	2b02      	cmp	r3, #2
 800718c:	d0f2      	beq.n	8007174 <osDelay+0x8>
    if (ticks != 0U) {
 800718e:	2800      	cmp	r0, #0
 8007190:	d0f2      	beq.n	8007178 <osDelay+0xc>
      vTaskDelay(ticks);
 8007192:	f001 fcb7 	bl	8008b04 <vTaskDelay>
    stat = osOK;
 8007196:	2000      	movs	r0, #0
 8007198:	e7ee      	b.n	8007178 <osDelay+0xc>
 800719a:	bf00      	nop
 800719c:	20002a50 	.word	0x20002a50

080071a0 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80071a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80071a2:	460e      	mov	r6, r1
 80071a4:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80071a6:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80071aa:	b11b      	cbz	r3, 80071b4 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80071ac:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80071ae:	4620      	mov	r0, r4
 80071b0:	b002      	add	sp, #8
 80071b2:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80071b4:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80071b8:	b913      	cbnz	r3, 80071c0 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80071ba:	f3ef 8311 	mrs	r3, BASEPRI
 80071be:	b11b      	cbz	r3, 80071c8 <osSemaphoreNew+0x28>
 80071c0:	4b21      	ldr	r3, [pc, #132]	; (8007248 <osSemaphoreNew+0xa8>)
 80071c2:	681b      	ldr	r3, [r3, #0]
 80071c4:	2b02      	cmp	r3, #2
 80071c6:	d0f1      	beq.n	80071ac <osSemaphoreNew+0xc>
 80071c8:	2800      	cmp	r0, #0
 80071ca:	d0ef      	beq.n	80071ac <osSemaphoreNew+0xc>
 80071cc:	42b0      	cmp	r0, r6
 80071ce:	d3ed      	bcc.n	80071ac <osSemaphoreNew+0xc>
    if (attr != NULL) {
 80071d0:	b1ed      	cbz	r5, 800720e <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80071d2:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 80071d6:	b1c3      	cbz	r3, 800720a <osSemaphoreNew+0x6a>
 80071d8:	2a4f      	cmp	r2, #79	; 0x4f
 80071da:	d9e7      	bls.n	80071ac <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 80071dc:	2801      	cmp	r0, #1
 80071de:	d129      	bne.n	8007234 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80071e0:	2203      	movs	r2, #3
 80071e2:	9200      	str	r2, [sp, #0]
 80071e4:	2200      	movs	r2, #0
 80071e6:	4611      	mov	r1, r2
 80071e8:	f000 fd2c 	bl	8007c44 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 80071ec:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80071ee:	2800      	cmp	r0, #0
 80071f0:	d0dc      	beq.n	80071ac <osSemaphoreNew+0xc>
 80071f2:	b1ce      	cbz	r6, 8007228 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80071f4:	2300      	movs	r3, #0
 80071f6:	461a      	mov	r2, r3
 80071f8:	4619      	mov	r1, r3
 80071fa:	f000 fdd9 	bl	8007db0 <xQueueGenericSend>
 80071fe:	2801      	cmp	r0, #1
 8007200:	d012      	beq.n	8007228 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8007202:	4620      	mov	r0, r4
 8007204:	f001 f91a 	bl	800843c <vQueueDelete>
 8007208:	e7d0      	b.n	80071ac <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800720a:	2a00      	cmp	r2, #0
 800720c:	d1ce      	bne.n	80071ac <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800720e:	2801      	cmp	r0, #1
 8007210:	d104      	bne.n	800721c <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8007212:	2203      	movs	r2, #3
 8007214:	2100      	movs	r1, #0
 8007216:	f000 fd63 	bl	8007ce0 <xQueueGenericCreate>
 800721a:	e7e7      	b.n	80071ec <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800721c:	4631      	mov	r1, r6
 800721e:	f000 fda8 	bl	8007d72 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007222:	4604      	mov	r4, r0
 8007224:	2800      	cmp	r0, #0
 8007226:	d0c1      	beq.n	80071ac <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8007228:	b95d      	cbnz	r5, 8007242 <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 800722a:	4629      	mov	r1, r5
 800722c:	4620      	mov	r0, r4
 800722e:	f001 f8db 	bl	80083e8 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8007232:	e7bc      	b.n	80071ae <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8007234:	461a      	mov	r2, r3
 8007236:	4631      	mov	r1, r6
 8007238:	f000 fd79 	bl	8007d2e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800723c:	4604      	mov	r4, r0
 800723e:	2800      	cmp	r0, #0
 8007240:	d0b4      	beq.n	80071ac <osSemaphoreNew+0xc>
          name = attr->name;
 8007242:	682d      	ldr	r5, [r5, #0]
 8007244:	e7f1      	b.n	800722a <osSemaphoreNew+0x8a>
 8007246:	bf00      	nop
 8007248:	20002a50 	.word	0x20002a50

0800724c <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800724c:	b513      	push	{r0, r1, r4, lr}
 800724e:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007250:	b918      	cbnz	r0, 800725a <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8007252:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007256:	b002      	add	sp, #8
 8007258:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800725a:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 800725e:	b163      	cbz	r3, 800727a <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8007260:	2c00      	cmp	r4, #0
 8007262:	d1f6      	bne.n	8007252 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007264:	aa01      	add	r2, sp, #4
 8007266:	4621      	mov	r1, r4
      yield = pdFALSE;
 8007268:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800726a:	f001 f86d 	bl	8008348 <xQueueReceiveFromISR>
 800726e:	2801      	cmp	r0, #1
 8007270:	d113      	bne.n	800729a <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 8007272:	9b01      	ldr	r3, [sp, #4]
 8007274:	b9a3      	cbnz	r3, 80072a0 <osSemaphoreAcquire+0x54>
  stat = osOK;
 8007276:	2000      	movs	r0, #0
 8007278:	e7ed      	b.n	8007256 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800727a:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800727e:	b913      	cbnz	r3, 8007286 <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007280:	f3ef 8311 	mrs	r3, BASEPRI
 8007284:	b11b      	cbz	r3, 800728e <osSemaphoreAcquire+0x42>
 8007286:	4b0c      	ldr	r3, [pc, #48]	; (80072b8 <osSemaphoreAcquire+0x6c>)
 8007288:	681b      	ldr	r3, [r3, #0]
 800728a:	2b02      	cmp	r3, #2
 800728c:	d0e8      	beq.n	8007260 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800728e:	4621      	mov	r1, r4
 8007290:	f000 ff96 	bl	80081c0 <xQueueSemaphoreTake>
 8007294:	2801      	cmp	r0, #1
 8007296:	d0ee      	beq.n	8007276 <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 8007298:	b95c      	cbnz	r4, 80072b2 <osSemaphoreAcquire+0x66>
        stat = osErrorResource;
 800729a:	f06f 0002 	mvn.w	r0, #2
 800729e:	e7da      	b.n	8007256 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 80072a0:	4b06      	ldr	r3, [pc, #24]	; (80072bc <osSemaphoreAcquire+0x70>)
 80072a2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80072a6:	601a      	str	r2, [r3, #0]
 80072a8:	f3bf 8f4f 	dsb	sy
 80072ac:	f3bf 8f6f 	isb	sy
 80072b0:	e7e1      	b.n	8007276 <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 80072b2:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80072b6:	e7ce      	b.n	8007256 <osSemaphoreAcquire+0xa>
 80072b8:	20002a50 	.word	0x20002a50
 80072bc:	e000ed04 	.word	0xe000ed04

080072c0 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80072c0:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80072c2:	b360      	cbz	r0, 800731e <osSemaphoreRelease+0x5e>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80072c4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80072c8:	b14b      	cbz	r3, 80072de <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 80072ca:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80072cc:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80072ce:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80072d0:	f000 fe81 	bl	8007fd6 <xQueueGiveFromISR>
 80072d4:	2801      	cmp	r0, #1
 80072d6:	d014      	beq.n	8007302 <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 80072d8:	f06f 0002 	mvn.w	r0, #2
 80072dc:	e014      	b.n	8007308 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80072de:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80072e2:	b913      	cbnz	r3, 80072ea <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80072e4:	f3ef 8311 	mrs	r3, BASEPRI
 80072e8:	b11b      	cbz	r3, 80072f2 <osSemaphoreRelease+0x32>
 80072ea:	4b0e      	ldr	r3, [pc, #56]	; (8007324 <osSemaphoreRelease+0x64>)
 80072ec:	681b      	ldr	r3, [r3, #0]
 80072ee:	2b02      	cmp	r3, #2
 80072f0:	d0eb      	beq.n	80072ca <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80072f2:	2300      	movs	r3, #0
 80072f4:	461a      	mov	r2, r3
 80072f6:	4619      	mov	r1, r3
 80072f8:	f000 fd5a 	bl	8007db0 <xQueueGenericSend>
 80072fc:	2801      	cmp	r0, #1
 80072fe:	d002      	beq.n	8007306 <osSemaphoreRelease+0x46>
 8007300:	e7ea      	b.n	80072d8 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8007302:	9b01      	ldr	r3, [sp, #4]
 8007304:	b913      	cbnz	r3, 800730c <osSemaphoreRelease+0x4c>
  stat = osOK;
 8007306:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8007308:	b002      	add	sp, #8
 800730a:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800730c:	4b06      	ldr	r3, [pc, #24]	; (8007328 <osSemaphoreRelease+0x68>)
 800730e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007312:	601a      	str	r2, [r3, #0]
 8007314:	f3bf 8f4f 	dsb	sy
 8007318:	f3bf 8f6f 	isb	sy
 800731c:	e7f3      	b.n	8007306 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800731e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007322:	e7f1      	b.n	8007308 <osSemaphoreRelease+0x48>
 8007324:	20002a50 	.word	0x20002a50
 8007328:	e000ed04 	.word	0xe000ed04

0800732c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800732c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800732e:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007330:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007334:	b11b      	cbz	r3, 800733e <osMessageQueueNew+0x12>
  hQueue = NULL;
 8007336:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007338:	4628      	mov	r0, r5
 800733a:	b002      	add	sp, #8
 800733c:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800733e:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007342:	b913      	cbnz	r3, 800734a <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007344:	f3ef 8311 	mrs	r3, BASEPRI
 8007348:	b11b      	cbz	r3, 8007352 <osMessageQueueNew+0x26>
 800734a:	4b1a      	ldr	r3, [pc, #104]	; (80073b4 <osMessageQueueNew+0x88>)
 800734c:	681b      	ldr	r3, [r3, #0]
 800734e:	2b02      	cmp	r3, #2
 8007350:	d0f1      	beq.n	8007336 <osMessageQueueNew+0xa>
 8007352:	2800      	cmp	r0, #0
 8007354:	d0ef      	beq.n	8007336 <osMessageQueueNew+0xa>
 8007356:	2900      	cmp	r1, #0
 8007358:	d0ed      	beq.n	8007336 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800735a:	b1ec      	cbz	r4, 8007398 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800735c:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8007360:	b193      	cbz	r3, 8007388 <osMessageQueueNew+0x5c>
 8007362:	2a4f      	cmp	r2, #79	; 0x4f
 8007364:	d9e7      	bls.n	8007336 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007366:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007368:	2a00      	cmp	r2, #0
 800736a:	d0e4      	beq.n	8007336 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800736c:	6966      	ldr	r6, [r4, #20]
 800736e:	fb01 f500 	mul.w	r5, r1, r0
 8007372:	42ae      	cmp	r6, r5
 8007374:	d3df      	bcc.n	8007336 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007376:	2500      	movs	r5, #0
 8007378:	9500      	str	r5, [sp, #0]
 800737a:	f000 fc63 	bl	8007c44 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800737e:	4605      	mov	r5, r0
 8007380:	2800      	cmp	r0, #0
 8007382:	d0d8      	beq.n	8007336 <osMessageQueueNew+0xa>
        name = attr->name;
 8007384:	6824      	ldr	r4, [r4, #0]
 8007386:	e00f      	b.n	80073a8 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007388:	2a00      	cmp	r2, #0
 800738a:	d1d4      	bne.n	8007336 <osMessageQueueNew+0xa>
 800738c:	6923      	ldr	r3, [r4, #16]
 800738e:	2b00      	cmp	r3, #0
 8007390:	d1d1      	bne.n	8007336 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007392:	6963      	ldr	r3, [r4, #20]
 8007394:	2b00      	cmp	r3, #0
 8007396:	d1ce      	bne.n	8007336 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8007398:	2200      	movs	r2, #0
 800739a:	f000 fca1 	bl	8007ce0 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800739e:	4605      	mov	r5, r0
 80073a0:	2800      	cmp	r0, #0
 80073a2:	d0c8      	beq.n	8007336 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 80073a4:	2c00      	cmp	r4, #0
 80073a6:	d1ed      	bne.n	8007384 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 80073a8:	4621      	mov	r1, r4
 80073aa:	4628      	mov	r0, r5
 80073ac:	f001 f81c 	bl	80083e8 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80073b0:	e7c2      	b.n	8007338 <osMessageQueueNew+0xc>
 80073b2:	bf00      	nop
 80073b4:	20002a50 	.word	0x20002a50

080073b8 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80073b8:	b513      	push	{r0, r1, r4, lr}
 80073ba:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80073bc:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80073c0:	b123      	cbz	r3, 80073cc <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80073c2:	b9d8      	cbnz	r0, 80073fc <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 80073c4:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80073c8:	b002      	add	sp, #8
 80073ca:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80073cc:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80073d0:	b913      	cbnz	r3, 80073d8 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80073d2:	f3ef 8311 	mrs	r3, BASEPRI
 80073d6:	b11b      	cbz	r3, 80073e0 <osMessageQueuePut+0x28>
 80073d8:	4b16      	ldr	r3, [pc, #88]	; (8007434 <osMessageQueuePut+0x7c>)
 80073da:	681b      	ldr	r3, [r3, #0]
 80073dc:	2b02      	cmp	r3, #2
 80073de:	d0f0      	beq.n	80073c2 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80073e0:	2800      	cmp	r0, #0
 80073e2:	d0ef      	beq.n	80073c4 <osMessageQueuePut+0xc>
 80073e4:	2900      	cmp	r1, #0
 80073e6:	d0ed      	beq.n	80073c4 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80073e8:	2300      	movs	r3, #0
 80073ea:	4622      	mov	r2, r4
 80073ec:	f000 fce0 	bl	8007db0 <xQueueGenericSend>
 80073f0:	2801      	cmp	r0, #1
 80073f2:	d010      	beq.n	8007416 <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 80073f4:	b9d4      	cbnz	r4, 800742c <osMessageQueuePut+0x74>
          stat = osErrorResource;
 80073f6:	f06f 0002 	mvn.w	r0, #2
 80073fa:	e7e5      	b.n	80073c8 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80073fc:	2900      	cmp	r1, #0
 80073fe:	d0e1      	beq.n	80073c4 <osMessageQueuePut+0xc>
 8007400:	2c00      	cmp	r4, #0
 8007402:	d1df      	bne.n	80073c4 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007404:	4623      	mov	r3, r4
 8007406:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007408:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800740a:	f000 fd83 	bl	8007f14 <xQueueGenericSendFromISR>
 800740e:	2801      	cmp	r0, #1
 8007410:	d1f1      	bne.n	80073f6 <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8007412:	9b01      	ldr	r3, [sp, #4]
 8007414:	b90b      	cbnz	r3, 800741a <osMessageQueuePut+0x62>
  stat = osOK;
 8007416:	2000      	movs	r0, #0
 8007418:	e7d6      	b.n	80073c8 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 800741a:	4b07      	ldr	r3, [pc, #28]	; (8007438 <osMessageQueuePut+0x80>)
 800741c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007420:	601a      	str	r2, [r3, #0]
 8007422:	f3bf 8f4f 	dsb	sy
 8007426:	f3bf 8f6f 	isb	sy
 800742a:	e7f4      	b.n	8007416 <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 800742c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007430:	e7ca      	b.n	80073c8 <osMessageQueuePut+0x10>
 8007432:	bf00      	nop
 8007434:	20002a50 	.word	0x20002a50
 8007438:	e000ed04 	.word	0xe000ed04

0800743c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800743c:	b513      	push	{r0, r1, r4, lr}
 800743e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007440:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007444:	b123      	cbz	r3, 8007450 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007446:	b9d0      	cbnz	r0, 800747e <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8007448:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800744c:	b002      	add	sp, #8
 800744e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007450:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007454:	b913      	cbnz	r3, 800745c <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007456:	f3ef 8311 	mrs	r3, BASEPRI
 800745a:	b11b      	cbz	r3, 8007464 <osMessageQueueGet+0x28>
 800745c:	4b15      	ldr	r3, [pc, #84]	; (80074b4 <osMessageQueueGet+0x78>)
 800745e:	681b      	ldr	r3, [r3, #0]
 8007460:	2b02      	cmp	r3, #2
 8007462:	d0f0      	beq.n	8007446 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007464:	2800      	cmp	r0, #0
 8007466:	d0ef      	beq.n	8007448 <osMessageQueueGet+0xc>
 8007468:	2900      	cmp	r1, #0
 800746a:	d0ed      	beq.n	8007448 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800746c:	4622      	mov	r2, r4
 800746e:	f000 fe07 	bl	8008080 <xQueueReceive>
 8007472:	2801      	cmp	r0, #1
 8007474:	d00f      	beq.n	8007496 <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 8007476:	b9cc      	cbnz	r4, 80074ac <osMessageQueueGet+0x70>
          stat = osErrorResource;
 8007478:	f06f 0002 	mvn.w	r0, #2
 800747c:	e7e6      	b.n	800744c <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800747e:	2900      	cmp	r1, #0
 8007480:	d0e2      	beq.n	8007448 <osMessageQueueGet+0xc>
 8007482:	2c00      	cmp	r4, #0
 8007484:	d1e0      	bne.n	8007448 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007486:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007488:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800748a:	f000 ff5d 	bl	8008348 <xQueueReceiveFromISR>
 800748e:	2801      	cmp	r0, #1
 8007490:	d1f2      	bne.n	8007478 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8007492:	9b01      	ldr	r3, [sp, #4]
 8007494:	b90b      	cbnz	r3, 800749a <osMessageQueueGet+0x5e>
  stat = osOK;
 8007496:	2000      	movs	r0, #0
 8007498:	e7d8      	b.n	800744c <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 800749a:	4b07      	ldr	r3, [pc, #28]	; (80074b8 <osMessageQueueGet+0x7c>)
 800749c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80074a0:	601a      	str	r2, [r3, #0]
 80074a2:	f3bf 8f4f 	dsb	sy
 80074a6:	f3bf 8f6f 	isb	sy
 80074aa:	e7f4      	b.n	8007496 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 80074ac:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80074b0:	e7cc      	b.n	800744c <osMessageQueueGet+0x10>
 80074b2:	bf00      	nop
 80074b4:	20002a50 	.word	0x20002a50
 80074b8:	e000ed04 	.word	0xe000ed04

080074bc <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80074bc:	4b03      	ldr	r3, [pc, #12]	; (80074cc <vApplicationGetIdleTaskMemory+0x10>)
 80074be:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80074c0:	4b03      	ldr	r3, [pc, #12]	; (80074d0 <vApplicationGetIdleTaskMemory+0x14>)
 80074c2:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80074c4:	2380      	movs	r3, #128	; 0x80
 80074c6:	6013      	str	r3, [r2, #0]
}
 80074c8:	4770      	bx	lr
 80074ca:	bf00      	nop
 80074cc:	200029f0 	.word	0x200029f0
 80074d0:	200027f0 	.word	0x200027f0

080074d4 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80074d4:	4b03      	ldr	r3, [pc, #12]	; (80074e4 <vApplicationGetTimerTaskMemory+0x10>)
 80074d6:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80074d8:	4b03      	ldr	r3, [pc, #12]	; (80074e8 <vApplicationGetTimerTaskMemory+0x14>)
 80074da:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80074dc:	f44f 7380 	mov.w	r3, #256	; 0x100
 80074e0:	6013      	str	r3, [r2, #0]
}
 80074e2:	4770      	bx	lr
 80074e4:	20002e54 	.word	0x20002e54
 80074e8:	20002a54 	.word	0x20002a54

080074ec <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80074ec:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80074ee:	4b0f      	ldr	r3, [pc, #60]	; (800752c <prvInsertBlockIntoFreeList+0x40>)
 80074f0:	461a      	mov	r2, r3
 80074f2:	681b      	ldr	r3, [r3, #0]
 80074f4:	4283      	cmp	r3, r0
 80074f6:	d3fb      	bcc.n	80074f0 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80074f8:	6854      	ldr	r4, [r2, #4]
 80074fa:	1911      	adds	r1, r2, r4
 80074fc:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80074fe:	bf01      	itttt	eq
 8007500:	6841      	ldreq	r1, [r0, #4]
 8007502:	4610      	moveq	r0, r2
 8007504:	1909      	addeq	r1, r1, r4
 8007506:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007508:	6844      	ldr	r4, [r0, #4]
 800750a:	1901      	adds	r1, r0, r4
 800750c:	428b      	cmp	r3, r1
 800750e:	d107      	bne.n	8007520 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007510:	4907      	ldr	r1, [pc, #28]	; (8007530 <prvInsertBlockIntoFreeList+0x44>)
 8007512:	6809      	ldr	r1, [r1, #0]
 8007514:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007516:	bf1f      	itttt	ne
 8007518:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800751a:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800751c:	1909      	addne	r1, r1, r4
 800751e:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007520:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8007522:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007524:	bf18      	it	ne
 8007526:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8007528:	bd10      	pop	{r4, pc}
 800752a:	bf00      	nop
 800752c:	20012ec4 	.word	0x20012ec4
 8007530:	20002eb4 	.word	0x20002eb4

08007534 <pvPortMalloc>:
{
 8007534:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007538:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800753a:	f001 f9cb 	bl	80088d4 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800753e:	4b3c      	ldr	r3, [pc, #240]	; (8007630 <pvPortMalloc+0xfc>)
 8007540:	483c      	ldr	r0, [pc, #240]	; (8007634 <pvPortMalloc+0x100>)
 8007542:	681a      	ldr	r2, [r3, #0]
 8007544:	469c      	mov	ip, r3
 8007546:	b9d2      	cbnz	r2, 800757e <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
 8007548:	4a3b      	ldr	r2, [pc, #236]	; (8007638 <pvPortMalloc+0x104>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800754a:	4b3c      	ldr	r3, [pc, #240]	; (800763c <pvPortMalloc+0x108>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800754c:	0755      	lsls	r5, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800754e:	bf1c      	itt	ne
 8007550:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007552:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8007556:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007558:	601a      	str	r2, [r3, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800755a:	6059      	str	r1, [r3, #4]
	uxAddress -= xHeapStructSize;
 800755c:	4b38      	ldr	r3, [pc, #224]	; (8007640 <pvPortMalloc+0x10c>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800755e:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8007562:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007566:	1a99      	subs	r1, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007568:	e9c2 3100 	strd	r3, r1, [r2]
	pxEnd = ( void * ) uxAddress;
 800756c:	f8cc 3000 	str.w	r3, [ip]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007570:	4b34      	ldr	r3, [pc, #208]	; (8007644 <pvPortMalloc+0x110>)
 8007572:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007574:	4b34      	ldr	r3, [pc, #208]	; (8007648 <pvPortMalloc+0x114>)
 8007576:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007578:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800757c:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800757e:	6807      	ldr	r7, [r0, #0]
 8007580:	4227      	tst	r7, r4
 8007582:	d14f      	bne.n	8007624 <pvPortMalloc+0xf0>
			if( xWantedSize > 0 )
 8007584:	2c00      	cmp	r4, #0
 8007586:	d040      	beq.n	800760a <pvPortMalloc+0xd6>
				xWantedSize += xHeapStructSize;
 8007588:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800758c:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800758e:	bf1c      	itt	ne
 8007590:	f023 0307 	bicne.w	r3, r3, #7
 8007594:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8007596:	2b00      	cmp	r3, #0
 8007598:	d044      	beq.n	8007624 <pvPortMalloc+0xf0>
 800759a:	4a2b      	ldr	r2, [pc, #172]	; (8007648 <pvPortMalloc+0x114>)
 800759c:	6816      	ldr	r6, [r2, #0]
 800759e:	429e      	cmp	r6, r3
 80075a0:	4690      	mov	r8, r2
 80075a2:	d33f      	bcc.n	8007624 <pvPortMalloc+0xf0>
				pxBlock = xStart.pxNextFreeBlock;
 80075a4:	4a25      	ldr	r2, [pc, #148]	; (800763c <pvPortMalloc+0x108>)
 80075a6:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80075a8:	6869      	ldr	r1, [r5, #4]
 80075aa:	4299      	cmp	r1, r3
 80075ac:	d201      	bcs.n	80075b2 <pvPortMalloc+0x7e>
 80075ae:	6828      	ldr	r0, [r5, #0]
 80075b0:	b9a8      	cbnz	r0, 80075de <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
 80075b2:	f8dc 0000 	ldr.w	r0, [ip]
 80075b6:	42a8      	cmp	r0, r5
 80075b8:	d034      	beq.n	8007624 <pvPortMalloc+0xf0>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80075ba:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80075bc:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80075be:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80075c0:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80075c2:	2910      	cmp	r1, #16
 80075c4:	d912      	bls.n	80075ec <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80075c6:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80075c8:	0742      	lsls	r2, r0, #29
 80075ca:	d00b      	beq.n	80075e4 <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80075cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075d0:	f383 8811 	msr	BASEPRI, r3
 80075d4:	f3bf 8f6f 	isb	sy
 80075d8:	f3bf 8f4f 	dsb	sy
 80075dc:	e7fe      	b.n	80075dc <pvPortMalloc+0xa8>
 80075de:	462a      	mov	r2, r5
 80075e0:	4605      	mov	r5, r0
 80075e2:	e7e1      	b.n	80075a8 <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80075e4:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80075e6:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80075e8:	f7ff ff80 	bl	80074ec <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80075ec:	4915      	ldr	r1, [pc, #84]	; (8007644 <pvPortMalloc+0x110>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80075ee:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80075f0:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80075f2:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80075f4:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80075f6:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 80075f8:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80075fc:	f8c8 6000 	str.w	r6, [r8]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007600:	bf38      	it	cc
 8007602:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007604:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007606:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8007608:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 800760a:	f001 fa07 	bl	8008a1c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800760e:	0763      	lsls	r3, r4, #29
 8007610:	d00a      	beq.n	8007628 <pvPortMalloc+0xf4>
 8007612:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007616:	f383 8811 	msr	BASEPRI, r3
 800761a:	f3bf 8f6f 	isb	sy
 800761e:	f3bf 8f4f 	dsb	sy
 8007622:	e7fe      	b.n	8007622 <pvPortMalloc+0xee>
void *pvReturn = NULL;
 8007624:	2400      	movs	r4, #0
 8007626:	e7f0      	b.n	800760a <pvPortMalloc+0xd6>
}
 8007628:	4620      	mov	r0, r4
 800762a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800762e:	bf00      	nop
 8007630:	20002eb4 	.word	0x20002eb4
 8007634:	20012eb8 	.word	0x20012eb8
 8007638:	20002eb8 	.word	0x20002eb8
 800763c:	20012ec4 	.word	0x20012ec4
 8007640:	20012eb0 	.word	0x20012eb0
 8007644:	20012ec0 	.word	0x20012ec0
 8007648:	20012ebc 	.word	0x20012ebc

0800764c <vPortFree>:
{
 800764c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800764e:	4604      	mov	r4, r0
 8007650:	b370      	cbz	r0, 80076b0 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007652:	4a18      	ldr	r2, [pc, #96]	; (80076b4 <vPortFree+0x68>)
 8007654:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007658:	6812      	ldr	r2, [r2, #0]
 800765a:	4213      	tst	r3, r2
 800765c:	d108      	bne.n	8007670 <vPortFree+0x24>
 800765e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007662:	f383 8811 	msr	BASEPRI, r3
 8007666:	f3bf 8f6f 	isb	sy
 800766a:	f3bf 8f4f 	dsb	sy
 800766e:	e7fe      	b.n	800766e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007670:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007674:	b141      	cbz	r1, 8007688 <vPortFree+0x3c>
 8007676:	f04f 0350 	mov.w	r3, #80	; 0x50
 800767a:	f383 8811 	msr	BASEPRI, r3
 800767e:	f3bf 8f6f 	isb	sy
 8007682:	f3bf 8f4f 	dsb	sy
 8007686:	e7fe      	b.n	8007686 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007688:	ea23 0302 	bic.w	r3, r3, r2
 800768c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8007690:	f001 f920 	bl	80088d4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007694:	4a08      	ldr	r2, [pc, #32]	; (80076b8 <vPortFree+0x6c>)
 8007696:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800769a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800769c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80076a0:	440b      	add	r3, r1
 80076a2:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80076a4:	f7ff ff22 	bl	80074ec <prvInsertBlockIntoFreeList>
}
 80076a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 80076ac:	f001 b9b6 	b.w	8008a1c <xTaskResumeAll>
}
 80076b0:	bd10      	pop	{r4, pc}
 80076b2:	bf00      	nop
 80076b4:	20012eb8 	.word	0x20012eb8
 80076b8:	20012ebc 	.word	0x20012ebc

080076bc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80076bc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80076c0:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80076c4:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80076c8:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80076ca:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80076cc:	2300      	movs	r3, #0
 80076ce:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80076d0:	4770      	bx	lr

080076d2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80076d2:	2300      	movs	r3, #0
 80076d4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80076d6:	4770      	bx	lr

080076d8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80076d8:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80076da:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80076dc:	689a      	ldr	r2, [r3, #8]
 80076de:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80076e0:	689a      	ldr	r2, [r3, #8]
 80076e2:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80076e4:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80076e6:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80076e8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80076ea:	3301      	adds	r3, #1
 80076ec:	6003      	str	r3, [r0, #0]
}
 80076ee:	4770      	bx	lr

080076f0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80076f0:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80076f2:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80076f4:	1c63      	adds	r3, r4, #1
 80076f6:	d10a      	bne.n	800770e <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80076f8:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80076fa:	685a      	ldr	r2, [r3, #4]
 80076fc:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80076fe:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007700:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007702:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007704:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007706:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007708:	3301      	adds	r3, #1
 800770a:	6003      	str	r3, [r0, #0]
}
 800770c:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800770e:	f100 0208 	add.w	r2, r0, #8
 8007712:	4613      	mov	r3, r2
 8007714:	6852      	ldr	r2, [r2, #4]
 8007716:	6815      	ldr	r5, [r2, #0]
 8007718:	42a5      	cmp	r5, r4
 800771a:	d9fa      	bls.n	8007712 <vListInsert+0x22>
 800771c:	e7ed      	b.n	80076fa <vListInsert+0xa>

0800771e <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800771e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007722:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007724:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007726:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007728:	6859      	ldr	r1, [r3, #4]
 800772a:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800772c:	bf08      	it	eq
 800772e:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007730:	2200      	movs	r2, #0
 8007732:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007734:	681a      	ldr	r2, [r3, #0]
 8007736:	3a01      	subs	r2, #1
 8007738:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800773a:	6818      	ldr	r0, [r3, #0]
}
 800773c:	4770      	bx	lr
	...

08007740 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007740:	4808      	ldr	r0, [pc, #32]	; (8007764 <prvPortStartFirstTask+0x24>)
 8007742:	6800      	ldr	r0, [r0, #0]
 8007744:	6800      	ldr	r0, [r0, #0]
 8007746:	f380 8808 	msr	MSP, r0
 800774a:	f04f 0000 	mov.w	r0, #0
 800774e:	f380 8814 	msr	CONTROL, r0
 8007752:	b662      	cpsie	i
 8007754:	b661      	cpsie	f
 8007756:	f3bf 8f4f 	dsb	sy
 800775a:	f3bf 8f6f 	isb	sy
 800775e:	df00      	svc	0
 8007760:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8007762:	0000      	.short	0x0000
 8007764:	e000ed08 	.word	0xe000ed08

08007768 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007768:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8007778 <vPortEnableVFP+0x10>
 800776c:	6801      	ldr	r1, [r0, #0]
 800776e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007772:	6001      	str	r1, [r0, #0]
 8007774:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8007776:	0000      	.short	0x0000
 8007778:	e000ed88 	.word	0xe000ed88

0800777c <prvTaskExitError>:
{
 800777c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800777e:	2300      	movs	r3, #0
 8007780:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8007782:	4b0d      	ldr	r3, [pc, #52]	; (80077b8 <prvTaskExitError+0x3c>)
 8007784:	681b      	ldr	r3, [r3, #0]
 8007786:	3301      	adds	r3, #1
 8007788:	d008      	beq.n	800779c <prvTaskExitError+0x20>
 800778a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800778e:	f383 8811 	msr	BASEPRI, r3
 8007792:	f3bf 8f6f 	isb	sy
 8007796:	f3bf 8f4f 	dsb	sy
 800779a:	e7fe      	b.n	800779a <prvTaskExitError+0x1e>
 800779c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077a0:	f383 8811 	msr	BASEPRI, r3
 80077a4:	f3bf 8f6f 	isb	sy
 80077a8:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80077ac:	9b01      	ldr	r3, [sp, #4]
 80077ae:	2b00      	cmp	r3, #0
 80077b0:	d0fc      	beq.n	80077ac <prvTaskExitError+0x30>
}
 80077b2:	b002      	add	sp, #8
 80077b4:	4770      	bx	lr
 80077b6:	bf00      	nop
 80077b8:	20000080 	.word	0x20000080

080077bc <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80077bc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80077c0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80077c4:	4b07      	ldr	r3, [pc, #28]	; (80077e4 <pxPortInitialiseStack+0x28>)
 80077c6:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80077ca:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80077ce:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80077d2:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80077d6:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80077da:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80077de:	3844      	subs	r0, #68	; 0x44
 80077e0:	4770      	bx	lr
 80077e2:	bf00      	nop
 80077e4:	0800777d 	.word	0x0800777d
	...

080077f0 <SVC_Handler>:
	__asm volatile (
 80077f0:	4b07      	ldr	r3, [pc, #28]	; (8007810 <pxCurrentTCBConst2>)
 80077f2:	6819      	ldr	r1, [r3, #0]
 80077f4:	6808      	ldr	r0, [r1, #0]
 80077f6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077fa:	f380 8809 	msr	PSP, r0
 80077fe:	f3bf 8f6f 	isb	sy
 8007802:	f04f 0000 	mov.w	r0, #0
 8007806:	f380 8811 	msr	BASEPRI, r0
 800780a:	4770      	bx	lr
 800780c:	f3af 8000 	nop.w

08007810 <pxCurrentTCBConst2>:
 8007810:	20012ed4 	.word	0x20012ed4

08007814 <vPortEnterCritical>:
 8007814:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007818:	f383 8811 	msr	BASEPRI, r3
 800781c:	f3bf 8f6f 	isb	sy
 8007820:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007824:	4a0a      	ldr	r2, [pc, #40]	; (8007850 <vPortEnterCritical+0x3c>)
 8007826:	6813      	ldr	r3, [r2, #0]
 8007828:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800782a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800782c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800782e:	d10d      	bne.n	800784c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007830:	4b08      	ldr	r3, [pc, #32]	; (8007854 <vPortEnterCritical+0x40>)
 8007832:	681b      	ldr	r3, [r3, #0]
 8007834:	f013 0fff 	tst.w	r3, #255	; 0xff
 8007838:	d008      	beq.n	800784c <vPortEnterCritical+0x38>
 800783a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800783e:	f383 8811 	msr	BASEPRI, r3
 8007842:	f3bf 8f6f 	isb	sy
 8007846:	f3bf 8f4f 	dsb	sy
 800784a:	e7fe      	b.n	800784a <vPortEnterCritical+0x36>
}
 800784c:	4770      	bx	lr
 800784e:	bf00      	nop
 8007850:	20000080 	.word	0x20000080
 8007854:	e000ed04 	.word	0xe000ed04

08007858 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007858:	4a08      	ldr	r2, [pc, #32]	; (800787c <vPortExitCritical+0x24>)
 800785a:	6813      	ldr	r3, [r2, #0]
 800785c:	b943      	cbnz	r3, 8007870 <vPortExitCritical+0x18>
 800785e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007862:	f383 8811 	msr	BASEPRI, r3
 8007866:	f3bf 8f6f 	isb	sy
 800786a:	f3bf 8f4f 	dsb	sy
 800786e:	e7fe      	b.n	800786e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007870:	3b01      	subs	r3, #1
 8007872:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007874:	b90b      	cbnz	r3, 800787a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007876:	f383 8811 	msr	BASEPRI, r3
}
 800787a:	4770      	bx	lr
 800787c:	20000080 	.word	0x20000080

08007880 <PendSV_Handler>:
	__asm volatile
 8007880:	f3ef 8009 	mrs	r0, PSP
 8007884:	f3bf 8f6f 	isb	sy
 8007888:	4b15      	ldr	r3, [pc, #84]	; (80078e0 <pxCurrentTCBConst>)
 800788a:	681a      	ldr	r2, [r3, #0]
 800788c:	f01e 0f10 	tst.w	lr, #16
 8007890:	bf08      	it	eq
 8007892:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007896:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800789a:	6010      	str	r0, [r2, #0]
 800789c:	e92d 0009 	stmdb	sp!, {r0, r3}
 80078a0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80078a4:	f380 8811 	msr	BASEPRI, r0
 80078a8:	f3bf 8f4f 	dsb	sy
 80078ac:	f3bf 8f6f 	isb	sy
 80078b0:	f001 f94c 	bl	8008b4c <vTaskSwitchContext>
 80078b4:	f04f 0000 	mov.w	r0, #0
 80078b8:	f380 8811 	msr	BASEPRI, r0
 80078bc:	bc09      	pop	{r0, r3}
 80078be:	6819      	ldr	r1, [r3, #0]
 80078c0:	6808      	ldr	r0, [r1, #0]
 80078c2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80078c6:	f01e 0f10 	tst.w	lr, #16
 80078ca:	bf08      	it	eq
 80078cc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80078d0:	f380 8809 	msr	PSP, r0
 80078d4:	f3bf 8f6f 	isb	sy
 80078d8:	4770      	bx	lr
 80078da:	bf00      	nop
 80078dc:	f3af 8000 	nop.w

080078e0 <pxCurrentTCBConst>:
 80078e0:	20012ed4 	.word	0x20012ed4

080078e4 <SysTick_Handler>:
{
 80078e4:	b508      	push	{r3, lr}
	__asm volatile
 80078e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078ea:	f383 8811 	msr	BASEPRI, r3
 80078ee:	f3bf 8f6f 	isb	sy
 80078f2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80078f6:	f000 fffb 	bl	80088f0 <xTaskIncrementTick>
 80078fa:	b118      	cbz	r0, 8007904 <SysTick_Handler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80078fc:	4b03      	ldr	r3, [pc, #12]	; (800790c <SysTick_Handler+0x28>)
 80078fe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007902:	601a      	str	r2, [r3, #0]
	__asm volatile
 8007904:	2300      	movs	r3, #0
 8007906:	f383 8811 	msr	BASEPRI, r3
}
 800790a:	bd08      	pop	{r3, pc}
 800790c:	e000ed04 	.word	0xe000ed04

08007910 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007910:	4a08      	ldr	r2, [pc, #32]	; (8007934 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007912:	4909      	ldr	r1, [pc, #36]	; (8007938 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007914:	2300      	movs	r3, #0
 8007916:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007918:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800791a:	4b08      	ldr	r3, [pc, #32]	; (800793c <vPortSetupTimerInterrupt+0x2c>)
 800791c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007920:	681b      	ldr	r3, [r3, #0]
 8007922:	fbb3 f3f1 	udiv	r3, r3, r1
 8007926:	4906      	ldr	r1, [pc, #24]	; (8007940 <vPortSetupTimerInterrupt+0x30>)
 8007928:	3b01      	subs	r3, #1
 800792a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800792c:	2307      	movs	r3, #7
 800792e:	6013      	str	r3, [r2, #0]
}
 8007930:	4770      	bx	lr
 8007932:	bf00      	nop
 8007934:	e000e010 	.word	0xe000e010
 8007938:	e000e018 	.word	0xe000e018
 800793c:	20000074 	.word	0x20000074
 8007940:	e000e014 	.word	0xe000e014

08007944 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007944:	4b38      	ldr	r3, [pc, #224]	; (8007a28 <xPortStartScheduler+0xe4>)
 8007946:	4a39      	ldr	r2, [pc, #228]	; (8007a2c <xPortStartScheduler+0xe8>)
{
 8007948:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800794a:	6819      	ldr	r1, [r3, #0]
 800794c:	4291      	cmp	r1, r2
 800794e:	d108      	bne.n	8007962 <xPortStartScheduler+0x1e>
	__asm volatile
 8007950:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007954:	f383 8811 	msr	BASEPRI, r3
 8007958:	f3bf 8f6f 	isb	sy
 800795c:	f3bf 8f4f 	dsb	sy
 8007960:	e7fe      	b.n	8007960 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007962:	681a      	ldr	r2, [r3, #0]
 8007964:	4b32      	ldr	r3, [pc, #200]	; (8007a30 <xPortStartScheduler+0xec>)
 8007966:	429a      	cmp	r2, r3
 8007968:	d108      	bne.n	800797c <xPortStartScheduler+0x38>
 800796a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800796e:	f383 8811 	msr	BASEPRI, r3
 8007972:	f3bf 8f6f 	isb	sy
 8007976:	f3bf 8f4f 	dsb	sy
 800797a:	e7fe      	b.n	800797a <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800797c:	4b2d      	ldr	r3, [pc, #180]	; (8007a34 <xPortStartScheduler+0xf0>)
 800797e:	781a      	ldrb	r2, [r3, #0]
 8007980:	b2d2      	uxtb	r2, r2
 8007982:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007984:	22ff      	movs	r2, #255	; 0xff
 8007986:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007988:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800798a:	4a2b      	ldr	r2, [pc, #172]	; (8007a38 <xPortStartScheduler+0xf4>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800798c:	b2db      	uxtb	r3, r3
 800798e:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007992:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007996:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800799a:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800799c:	4a27      	ldr	r2, [pc, #156]	; (8007a3c <xPortStartScheduler+0xf8>)
 800799e:	2307      	movs	r3, #7
 80079a0:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80079a2:	2100      	movs	r1, #0
 80079a4:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80079a8:	0600      	lsls	r0, r0, #24
 80079aa:	f103 34ff 	add.w	r4, r3, #4294967295
 80079ae:	d40c      	bmi.n	80079ca <xPortStartScheduler+0x86>
 80079b0:	b111      	cbz	r1, 80079b8 <xPortStartScheduler+0x74>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80079b2:	2b03      	cmp	r3, #3
 80079b4:	6013      	str	r3, [r2, #0]
 80079b6:	d011      	beq.n	80079dc <xPortStartScheduler+0x98>
 80079b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079bc:	f383 8811 	msr	BASEPRI, r3
 80079c0:	f3bf 8f6f 	isb	sy
 80079c4:	f3bf 8f4f 	dsb	sy
 80079c8:	e7fe      	b.n	80079c8 <xPortStartScheduler+0x84>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80079ca:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80079ce:	005b      	lsls	r3, r3, #1
 80079d0:	b2db      	uxtb	r3, r3
 80079d2:	f88d 3003 	strb.w	r3, [sp, #3]
 80079d6:	2101      	movs	r1, #1
 80079d8:	4623      	mov	r3, r4
 80079da:	e7e3      	b.n	80079a4 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80079dc:	f44f 7340 	mov.w	r3, #768	; 0x300
 80079e0:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80079e2:	9b01      	ldr	r3, [sp, #4]
 80079e4:	4a13      	ldr	r2, [pc, #76]	; (8007a34 <xPortStartScheduler+0xf0>)
 80079e6:	b2db      	uxtb	r3, r3
 80079e8:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80079ea:	4b15      	ldr	r3, [pc, #84]	; (8007a40 <xPortStartScheduler+0xfc>)
 80079ec:	681a      	ldr	r2, [r3, #0]
 80079ee:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80079f2:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80079f4:	681a      	ldr	r2, [r3, #0]
 80079f6:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 80079fa:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 80079fc:	f7ff ff88 	bl	8007910 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007a00:	4b10      	ldr	r3, [pc, #64]	; (8007a44 <xPortStartScheduler+0x100>)
 8007a02:	2400      	movs	r4, #0
 8007a04:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 8007a06:	f7ff feaf 	bl	8007768 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007a0a:	4a0f      	ldr	r2, [pc, #60]	; (8007a48 <xPortStartScheduler+0x104>)
 8007a0c:	6813      	ldr	r3, [r2, #0]
 8007a0e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007a12:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 8007a14:	f7ff fe94 	bl	8007740 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007a18:	f001 f898 	bl	8008b4c <vTaskSwitchContext>
	prvTaskExitError();
 8007a1c:	f7ff feae 	bl	800777c <prvTaskExitError>
}
 8007a20:	4620      	mov	r0, r4
 8007a22:	b002      	add	sp, #8
 8007a24:	bd10      	pop	{r4, pc}
 8007a26:	bf00      	nop
 8007a28:	e000ed00 	.word	0xe000ed00
 8007a2c:	410fc271 	.word	0x410fc271
 8007a30:	410fc270 	.word	0x410fc270
 8007a34:	e000e400 	.word	0xe000e400
 8007a38:	20012ecc 	.word	0x20012ecc
 8007a3c:	20012ed0 	.word	0x20012ed0
 8007a40:	e000ed20 	.word	0xe000ed20
 8007a44:	20000080 	.word	0x20000080
 8007a48:	e000ef34 	.word	0xe000ef34

08007a4c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007a4c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007a50:	2b0f      	cmp	r3, #15
 8007a52:	d90e      	bls.n	8007a72 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007a54:	4a10      	ldr	r2, [pc, #64]	; (8007a98 <vPortValidateInterruptPriority+0x4c>)
 8007a56:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007a58:	4a10      	ldr	r2, [pc, #64]	; (8007a9c <vPortValidateInterruptPriority+0x50>)
 8007a5a:	7812      	ldrb	r2, [r2, #0]
 8007a5c:	429a      	cmp	r2, r3
 8007a5e:	d908      	bls.n	8007a72 <vPortValidateInterruptPriority+0x26>
 8007a60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a64:	f383 8811 	msr	BASEPRI, r3
 8007a68:	f3bf 8f6f 	isb	sy
 8007a6c:	f3bf 8f4f 	dsb	sy
 8007a70:	e7fe      	b.n	8007a70 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007a72:	4b0b      	ldr	r3, [pc, #44]	; (8007aa0 <vPortValidateInterruptPriority+0x54>)
 8007a74:	4a0b      	ldr	r2, [pc, #44]	; (8007aa4 <vPortValidateInterruptPriority+0x58>)
 8007a76:	681b      	ldr	r3, [r3, #0]
 8007a78:	6812      	ldr	r2, [r2, #0]
 8007a7a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007a7e:	4293      	cmp	r3, r2
 8007a80:	d908      	bls.n	8007a94 <vPortValidateInterruptPriority+0x48>
 8007a82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a86:	f383 8811 	msr	BASEPRI, r3
 8007a8a:	f3bf 8f6f 	isb	sy
 8007a8e:	f3bf 8f4f 	dsb	sy
 8007a92:	e7fe      	b.n	8007a92 <vPortValidateInterruptPriority+0x46>
	}
 8007a94:	4770      	bx	lr
 8007a96:	bf00      	nop
 8007a98:	e000e3f0 	.word	0xe000e3f0
 8007a9c:	20012ecc 	.word	0x20012ecc
 8007aa0:	e000ed0c 	.word	0xe000ed0c
 8007aa4:	20012ed0 	.word	0x20012ed0

08007aa8 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007aa8:	b510      	push	{r4, lr}
 8007aaa:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007aac:	f7ff feb2 	bl	8007814 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007ab0:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007ab2:	f7ff fed1 	bl	8007858 <vPortExitCritical>

	return xReturn;
}
 8007ab6:	fab4 f084 	clz	r0, r4
 8007aba:	0940      	lsrs	r0, r0, #5
 8007abc:	bd10      	pop	{r4, pc}

08007abe <prvCopyDataToQueue>:
{
 8007abe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ac0:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007ac2:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007ac4:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8007ac6:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007ac8:	b952      	cbnz	r2, 8007ae0 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007aca:	6807      	ldr	r7, [r0, #0]
 8007acc:	bb47      	cbnz	r7, 8007b20 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007ace:	6880      	ldr	r0, [r0, #8]
 8007ad0:	f001 f994 	bl	8008dfc <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007ad4:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007ad6:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007ad8:	3601      	adds	r6, #1
 8007ada:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8007adc:	4628      	mov	r0, r5
 8007ade:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007ae0:	b965      	cbnz	r5, 8007afc <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007ae2:	6840      	ldr	r0, [r0, #4]
 8007ae4:	f014 f818 	bl	801bb18 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007ae8:	6863      	ldr	r3, [r4, #4]
 8007aea:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007aec:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007aee:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007af0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007af2:	4293      	cmp	r3, r2
 8007af4:	d3f0      	bcc.n	8007ad8 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007af6:	6823      	ldr	r3, [r4, #0]
 8007af8:	6063      	str	r3, [r4, #4]
 8007afa:	e7ed      	b.n	8007ad8 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007afc:	68c0      	ldr	r0, [r0, #12]
 8007afe:	f014 f80b 	bl	801bb18 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007b02:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007b04:	68e3      	ldr	r3, [r4, #12]
 8007b06:	4251      	negs	r1, r2
 8007b08:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007b0a:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007b0c:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007b0e:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007b10:	bf3e      	ittt	cc
 8007b12:	68a3      	ldrcc	r3, [r4, #8]
 8007b14:	185b      	addcc	r3, r3, r1
 8007b16:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007b18:	2d02      	cmp	r5, #2
 8007b1a:	d101      	bne.n	8007b20 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007b1c:	b116      	cbz	r6, 8007b24 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8007b1e:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007b20:	2500      	movs	r5, #0
 8007b22:	e7d9      	b.n	8007ad8 <prvCopyDataToQueue+0x1a>
 8007b24:	4635      	mov	r5, r6
 8007b26:	e7d7      	b.n	8007ad8 <prvCopyDataToQueue+0x1a>

08007b28 <prvCopyDataFromQueue>:
{
 8007b28:	4603      	mov	r3, r0
 8007b2a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007b2c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8007b2e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007b30:	b16a      	cbz	r2, 8007b4e <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007b32:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007b34:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007b36:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007b38:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007b3a:	bf28      	it	cs
 8007b3c:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007b3e:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007b40:	bf28      	it	cs
 8007b42:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007b44:	68d9      	ldr	r1, [r3, #12]
}
 8007b46:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007b4a:	f013 bfe5 	b.w	801bb18 <memcpy>
}
 8007b4e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007b52:	4770      	bx	lr

08007b54 <prvUnlockQueue>:
{
 8007b54:	b570      	push	{r4, r5, r6, lr}
 8007b56:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007b58:	f7ff fe5c 	bl	8007814 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007b5c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007b60:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007b64:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007b66:	2d00      	cmp	r5, #0
 8007b68:	dc14      	bgt.n	8007b94 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8007b6a:	23ff      	movs	r3, #255	; 0xff
 8007b6c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8007b70:	f7ff fe72 	bl	8007858 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007b74:	f7ff fe4e 	bl	8007814 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007b78:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007b7c:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007b80:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007b82:	2d00      	cmp	r5, #0
 8007b84:	dc12      	bgt.n	8007bac <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8007b86:	23ff      	movs	r3, #255	; 0xff
 8007b88:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8007b8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007b90:	f7ff be62 	b.w	8007858 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007b94:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007b96:	2b00      	cmp	r3, #0
 8007b98:	d0e7      	beq.n	8007b6a <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007b9a:	4630      	mov	r0, r6
 8007b9c:	f001 f84a 	bl	8008c34 <xTaskRemoveFromEventList>
 8007ba0:	b108      	cbz	r0, 8007ba6 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8007ba2:	f001 f8d3 	bl	8008d4c <vTaskMissedYield>
			--cTxLock;
 8007ba6:	3d01      	subs	r5, #1
 8007ba8:	b26d      	sxtb	r5, r5
 8007baa:	e7dc      	b.n	8007b66 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007bac:	6923      	ldr	r3, [r4, #16]
 8007bae:	2b00      	cmp	r3, #0
 8007bb0:	d0e9      	beq.n	8007b86 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007bb2:	4630      	mov	r0, r6
 8007bb4:	f001 f83e 	bl	8008c34 <xTaskRemoveFromEventList>
 8007bb8:	b108      	cbz	r0, 8007bbe <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8007bba:	f001 f8c7 	bl	8008d4c <vTaskMissedYield>
				--cRxLock;
 8007bbe:	3d01      	subs	r5, #1
 8007bc0:	b26d      	sxtb	r5, r5
 8007bc2:	e7de      	b.n	8007b82 <prvUnlockQueue+0x2e>

08007bc4 <xQueueGenericReset>:
{
 8007bc4:	b538      	push	{r3, r4, r5, lr}
 8007bc6:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007bc8:	4604      	mov	r4, r0
 8007bca:	b940      	cbnz	r0, 8007bde <xQueueGenericReset+0x1a>
 8007bcc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007bd0:	f383 8811 	msr	BASEPRI, r3
 8007bd4:	f3bf 8f6f 	isb	sy
 8007bd8:	f3bf 8f4f 	dsb	sy
 8007bdc:	e7fe      	b.n	8007bdc <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007bde:	f7ff fe19 	bl	8007814 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007be2:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 8007be6:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007be8:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007bea:	434b      	muls	r3, r1
 8007bec:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007bee:	1a5b      	subs	r3, r3, r1
 8007bf0:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007bf2:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007bf4:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007bf6:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8007bf8:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007bfa:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8007bfc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007c00:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007c04:	b995      	cbnz	r5, 8007c2c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007c06:	6923      	ldr	r3, [r4, #16]
 8007c08:	b163      	cbz	r3, 8007c24 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007c0a:	f104 0010 	add.w	r0, r4, #16
 8007c0e:	f001 f811 	bl	8008c34 <xTaskRemoveFromEventList>
 8007c12:	b138      	cbz	r0, 8007c24 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8007c14:	4b0a      	ldr	r3, [pc, #40]	; (8007c40 <xQueueGenericReset+0x7c>)
 8007c16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007c1a:	601a      	str	r2, [r3, #0]
 8007c1c:	f3bf 8f4f 	dsb	sy
 8007c20:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007c24:	f7ff fe18 	bl	8007858 <vPortExitCritical>
}
 8007c28:	2001      	movs	r0, #1
 8007c2a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007c2c:	f104 0010 	add.w	r0, r4, #16
 8007c30:	f7ff fd44 	bl	80076bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007c34:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007c38:	f7ff fd40 	bl	80076bc <vListInitialise>
 8007c3c:	e7f2      	b.n	8007c24 <xQueueGenericReset+0x60>
 8007c3e:	bf00      	nop
 8007c40:	e000ed04 	.word	0xe000ed04

08007c44 <xQueueGenericCreateStatic>:
	{
 8007c44:	b513      	push	{r0, r1, r4, lr}
 8007c46:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007c48:	b940      	cbnz	r0, 8007c5c <xQueueGenericCreateStatic+0x18>
 8007c4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c4e:	f383 8811 	msr	BASEPRI, r3
 8007c52:	f3bf 8f6f 	isb	sy
 8007c56:	f3bf 8f4f 	dsb	sy
 8007c5a:	e7fe      	b.n	8007c5a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 8007c5c:	b943      	cbnz	r3, 8007c70 <xQueueGenericCreateStatic+0x2c>
 8007c5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c62:	f383 8811 	msr	BASEPRI, r3
 8007c66:	f3bf 8f6f 	isb	sy
 8007c6a:	f3bf 8f4f 	dsb	sy
 8007c6e:	e7fe      	b.n	8007c6e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007c70:	b14a      	cbz	r2, 8007c86 <xQueueGenericCreateStatic+0x42>
 8007c72:	b991      	cbnz	r1, 8007c9a <xQueueGenericCreateStatic+0x56>
 8007c74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c78:	f383 8811 	msr	BASEPRI, r3
 8007c7c:	f3bf 8f6f 	isb	sy
 8007c80:	f3bf 8f4f 	dsb	sy
 8007c84:	e7fe      	b.n	8007c84 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007c86:	b141      	cbz	r1, 8007c9a <xQueueGenericCreateStatic+0x56>
 8007c88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c8c:	f383 8811 	msr	BASEPRI, r3
 8007c90:	f3bf 8f6f 	isb	sy
 8007c94:	f3bf 8f4f 	dsb	sy
 8007c98:	e7fe      	b.n	8007c98 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8007c9a:	2350      	movs	r3, #80	; 0x50
 8007c9c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8007c9e:	9b01      	ldr	r3, [sp, #4]
 8007ca0:	2b50      	cmp	r3, #80	; 0x50
 8007ca2:	d008      	beq.n	8007cb6 <xQueueGenericCreateStatic+0x72>
 8007ca4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ca8:	f383 8811 	msr	BASEPRI, r3
 8007cac:	f3bf 8f6f 	isb	sy
 8007cb0:	f3bf 8f4f 	dsb	sy
 8007cb4:	e7fe      	b.n	8007cb4 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007cb6:	2900      	cmp	r1, #0
 8007cb8:	bf08      	it	eq
 8007cba:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8007cbc:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007cbe:	6022      	str	r2, [r4, #0]
 8007cc0:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8007cc2:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007cc6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007cca:	4619      	mov	r1, r3
 8007ccc:	4620      	mov	r0, r4
 8007cce:	f7ff ff79 	bl	8007bc4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007cd2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8007cd6:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 8007cda:	4620      	mov	r0, r4
 8007cdc:	b002      	add	sp, #8
 8007cde:	bd10      	pop	{r4, pc}

08007ce0 <xQueueGenericCreate>:
	{
 8007ce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ce2:	460d      	mov	r5, r1
 8007ce4:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007ce6:	4606      	mov	r6, r0
 8007ce8:	b940      	cbnz	r0, 8007cfc <xQueueGenericCreate+0x1c>
 8007cea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cee:	f383 8811 	msr	BASEPRI, r3
 8007cf2:	f3bf 8f6f 	isb	sy
 8007cf6:	f3bf 8f4f 	dsb	sy
 8007cfa:	e7fe      	b.n	8007cfa <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007cfc:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007cfe:	3050      	adds	r0, #80	; 0x50
 8007d00:	f7ff fc18 	bl	8007534 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007d04:	4604      	mov	r4, r0
 8007d06:	b170      	cbz	r0, 8007d26 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007d08:	2300      	movs	r3, #0
 8007d0a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007d0e:	b165      	cbz	r5, 8007d2a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007d10:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007d14:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 8007d18:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007d1a:	2101      	movs	r1, #1
 8007d1c:	4620      	mov	r0, r4
 8007d1e:	f7ff ff51 	bl	8007bc4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007d22:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007d26:	4620      	mov	r0, r4
 8007d28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007d2a:	4603      	mov	r3, r0
 8007d2c:	e7f2      	b.n	8007d14 <xQueueGenericCreate+0x34>

08007d2e <xQueueCreateCountingSemaphoreStatic>:
	{
 8007d2e:	b513      	push	{r0, r1, r4, lr}
 8007d30:	4613      	mov	r3, r2
 8007d32:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007d34:	b940      	cbnz	r0, 8007d48 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007d36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d3a:	f383 8811 	msr	BASEPRI, r3
 8007d3e:	f3bf 8f6f 	isb	sy
 8007d42:	f3bf 8f4f 	dsb	sy
 8007d46:	e7fe      	b.n	8007d46 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007d48:	4288      	cmp	r0, r1
 8007d4a:	d208      	bcs.n	8007d5e <xQueueCreateCountingSemaphoreStatic+0x30>
 8007d4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d50:	f383 8811 	msr	BASEPRI, r3
 8007d54:	f3bf 8f6f 	isb	sy
 8007d58:	f3bf 8f4f 	dsb	sy
 8007d5c:	e7fe      	b.n	8007d5c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007d5e:	2202      	movs	r2, #2
 8007d60:	9200      	str	r2, [sp, #0]
 8007d62:	2200      	movs	r2, #0
 8007d64:	4611      	mov	r1, r2
 8007d66:	f7ff ff6d 	bl	8007c44 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8007d6a:	b100      	cbz	r0, 8007d6e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007d6c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007d6e:	b002      	add	sp, #8
 8007d70:	bd10      	pop	{r4, pc}

08007d72 <xQueueCreateCountingSemaphore>:
	{
 8007d72:	b510      	push	{r4, lr}
 8007d74:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007d76:	b940      	cbnz	r0, 8007d8a <xQueueCreateCountingSemaphore+0x18>
 8007d78:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d7c:	f383 8811 	msr	BASEPRI, r3
 8007d80:	f3bf 8f6f 	isb	sy
 8007d84:	f3bf 8f4f 	dsb	sy
 8007d88:	e7fe      	b.n	8007d88 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007d8a:	4288      	cmp	r0, r1
 8007d8c:	d208      	bcs.n	8007da0 <xQueueCreateCountingSemaphore+0x2e>
 8007d8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d92:	f383 8811 	msr	BASEPRI, r3
 8007d96:	f3bf 8f6f 	isb	sy
 8007d9a:	f3bf 8f4f 	dsb	sy
 8007d9e:	e7fe      	b.n	8007d9e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007da0:	2202      	movs	r2, #2
 8007da2:	2100      	movs	r1, #0
 8007da4:	f7ff ff9c 	bl	8007ce0 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007da8:	b100      	cbz	r0, 8007dac <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007daa:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007dac:	bd10      	pop	{r4, pc}
	...

08007db0 <xQueueGenericSend>:
{
 8007db0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007db4:	4688      	mov	r8, r1
 8007db6:	9201      	str	r2, [sp, #4]
 8007db8:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007dba:	4604      	mov	r4, r0
 8007dbc:	b940      	cbnz	r0, 8007dd0 <xQueueGenericSend+0x20>
 8007dbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007dc2:	f383 8811 	msr	BASEPRI, r3
 8007dc6:	f3bf 8f6f 	isb	sy
 8007dca:	f3bf 8f4f 	dsb	sy
 8007dce:	e7fe      	b.n	8007dce <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007dd0:	b951      	cbnz	r1, 8007de8 <xQueueGenericSend+0x38>
 8007dd2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007dd4:	b143      	cbz	r3, 8007de8 <xQueueGenericSend+0x38>
 8007dd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007dda:	f383 8811 	msr	BASEPRI, r3
 8007dde:	f3bf 8f6f 	isb	sy
 8007de2:	f3bf 8f4f 	dsb	sy
 8007de6:	e7fe      	b.n	8007de6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007de8:	2f02      	cmp	r7, #2
 8007dea:	d10b      	bne.n	8007e04 <xQueueGenericSend+0x54>
 8007dec:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007dee:	2b01      	cmp	r3, #1
 8007df0:	d008      	beq.n	8007e04 <xQueueGenericSend+0x54>
 8007df2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007df6:	f383 8811 	msr	BASEPRI, r3
 8007dfa:	f3bf 8f6f 	isb	sy
 8007dfe:	f3bf 8f4f 	dsb	sy
 8007e02:	e7fe      	b.n	8007e02 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007e04:	f000 ffa8 	bl	8008d58 <xTaskGetSchedulerState>
 8007e08:	4606      	mov	r6, r0
 8007e0a:	b950      	cbnz	r0, 8007e22 <xQueueGenericSend+0x72>
 8007e0c:	9b01      	ldr	r3, [sp, #4]
 8007e0e:	b14b      	cbz	r3, 8007e24 <xQueueGenericSend+0x74>
 8007e10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e14:	f383 8811 	msr	BASEPRI, r3
 8007e18:	f3bf 8f6f 	isb	sy
 8007e1c:	f3bf 8f4f 	dsb	sy
 8007e20:	e7fe      	b.n	8007e20 <xQueueGenericSend+0x70>
 8007e22:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 8007e24:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8007f10 <xQueueGenericSend+0x160>
		prvLockQueue( pxQueue );
 8007e28:	f04f 0900 	mov.w	r9, #0
 8007e2c:	e037      	b.n	8007e9e <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007e2e:	9d01      	ldr	r5, [sp, #4]
 8007e30:	b91d      	cbnz	r5, 8007e3a <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
 8007e32:	f7ff fd11 	bl	8007858 <vPortExitCritical>
			return errQUEUE_FULL;
 8007e36:	2000      	movs	r0, #0
 8007e38:	e050      	b.n	8007edc <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
 8007e3a:	b916      	cbnz	r6, 8007e42 <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007e3c:	a802      	add	r0, sp, #8
 8007e3e:	f000 ff3d 	bl	8008cbc <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007e42:	f7ff fd09 	bl	8007858 <vPortExitCritical>
		vTaskSuspendAll();
 8007e46:	f000 fd45 	bl	80088d4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007e4a:	f7ff fce3 	bl	8007814 <vPortEnterCritical>
 8007e4e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007e52:	2bff      	cmp	r3, #255	; 0xff
 8007e54:	bf08      	it	eq
 8007e56:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8007e5a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007e5e:	2bff      	cmp	r3, #255	; 0xff
 8007e60:	bf08      	it	eq
 8007e62:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007e66:	f7ff fcf7 	bl	8007858 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007e6a:	a901      	add	r1, sp, #4
 8007e6c:	a802      	add	r0, sp, #8
 8007e6e:	f000 ff31 	bl	8008cd4 <xTaskCheckForTimeOut>
 8007e72:	2800      	cmp	r0, #0
 8007e74:	d146      	bne.n	8007f04 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007e76:	f7ff fccd 	bl	8007814 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007e7a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007e7c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007e7e:	429a      	cmp	r2, r3
 8007e80:	d12f      	bne.n	8007ee2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007e82:	f7ff fce9 	bl	8007858 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007e86:	9901      	ldr	r1, [sp, #4]
 8007e88:	f104 0010 	add.w	r0, r4, #16
 8007e8c:	f000 fe9a 	bl	8008bc4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007e90:	4620      	mov	r0, r4
 8007e92:	f7ff fe5f 	bl	8007b54 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007e96:	f000 fdc1 	bl	8008a1c <xTaskResumeAll>
 8007e9a:	b350      	cbz	r0, 8007ef2 <xQueueGenericSend+0x142>
 8007e9c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007e9e:	f7ff fcb9 	bl	8007814 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007ea2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007ea4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007ea6:	429a      	cmp	r2, r3
 8007ea8:	d301      	bcc.n	8007eae <xQueueGenericSend+0xfe>
 8007eaa:	2f02      	cmp	r7, #2
 8007eac:	d1bf      	bne.n	8007e2e <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007eae:	463a      	mov	r2, r7
 8007eb0:	4641      	mov	r1, r8
 8007eb2:	4620      	mov	r0, r4
 8007eb4:	f7ff fe03 	bl	8007abe <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007eb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007eba:	b11b      	cbz	r3, 8007ec4 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007ebc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007ec0:	f000 feb8 	bl	8008c34 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007ec4:	b138      	cbz	r0, 8007ed6 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
 8007ec6:	4b12      	ldr	r3, [pc, #72]	; (8007f10 <xQueueGenericSend+0x160>)
 8007ec8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007ecc:	601a      	str	r2, [r3, #0]
 8007ece:	f3bf 8f4f 	dsb	sy
 8007ed2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007ed6:	f7ff fcbf 	bl	8007858 <vPortExitCritical>
				return pdPASS;
 8007eda:	2001      	movs	r0, #1
}
 8007edc:	b004      	add	sp, #16
 8007ede:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8007ee2:	f7ff fcb9 	bl	8007858 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007ee6:	4620      	mov	r0, r4
 8007ee8:	f7ff fe34 	bl	8007b54 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007eec:	f000 fd96 	bl	8008a1c <xTaskResumeAll>
 8007ef0:	e7d4      	b.n	8007e9c <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
 8007ef2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007ef6:	f8ca 3000 	str.w	r3, [sl]
 8007efa:	f3bf 8f4f 	dsb	sy
 8007efe:	f3bf 8f6f 	isb	sy
 8007f02:	e7cb      	b.n	8007e9c <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
 8007f04:	4620      	mov	r0, r4
 8007f06:	f7ff fe25 	bl	8007b54 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007f0a:	f000 fd87 	bl	8008a1c <xTaskResumeAll>
 8007f0e:	e792      	b.n	8007e36 <xQueueGenericSend+0x86>
 8007f10:	e000ed04 	.word	0xe000ed04

08007f14 <xQueueGenericSendFromISR>:
{
 8007f14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007f18:	4689      	mov	r9, r1
 8007f1a:	4690      	mov	r8, r2
 8007f1c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007f1e:	4604      	mov	r4, r0
 8007f20:	b940      	cbnz	r0, 8007f34 <xQueueGenericSendFromISR+0x20>
 8007f22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f26:	f383 8811 	msr	BASEPRI, r3
 8007f2a:	f3bf 8f6f 	isb	sy
 8007f2e:	f3bf 8f4f 	dsb	sy
 8007f32:	e7fe      	b.n	8007f32 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007f34:	b951      	cbnz	r1, 8007f4c <xQueueGenericSendFromISR+0x38>
 8007f36:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007f38:	b143      	cbz	r3, 8007f4c <xQueueGenericSendFromISR+0x38>
 8007f3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f3e:	f383 8811 	msr	BASEPRI, r3
 8007f42:	f3bf 8f6f 	isb	sy
 8007f46:	f3bf 8f4f 	dsb	sy
 8007f4a:	e7fe      	b.n	8007f4a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007f4c:	2f02      	cmp	r7, #2
 8007f4e:	d10b      	bne.n	8007f68 <xQueueGenericSendFromISR+0x54>
 8007f50:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007f52:	2b01      	cmp	r3, #1
 8007f54:	d008      	beq.n	8007f68 <xQueueGenericSendFromISR+0x54>
 8007f56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f5a:	f383 8811 	msr	BASEPRI, r3
 8007f5e:	f3bf 8f6f 	isb	sy
 8007f62:	f3bf 8f4f 	dsb	sy
 8007f66:	e7fe      	b.n	8007f66 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007f68:	f7ff fd70 	bl	8007a4c <vPortValidateInterruptPriority>
	__asm volatile
 8007f6c:	f3ef 8611 	mrs	r6, BASEPRI
 8007f70:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f74:	f383 8811 	msr	BASEPRI, r3
 8007f78:	f3bf 8f6f 	isb	sy
 8007f7c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007f80:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007f82:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007f84:	429a      	cmp	r2, r3
 8007f86:	d301      	bcc.n	8007f8c <xQueueGenericSendFromISR+0x78>
 8007f88:	2f02      	cmp	r7, #2
 8007f8a:	d122      	bne.n	8007fd2 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007f8c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007f90:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8007f92:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007f94:	4649      	mov	r1, r9
 8007f96:	4620      	mov	r0, r4
 8007f98:	f7ff fd91 	bl	8007abe <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8007f9c:	1c6b      	adds	r3, r5, #1
 8007f9e:	d113      	bne.n	8007fc8 <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007fa0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007fa2:	b90b      	cbnz	r3, 8007fa8 <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8007fa4:	2001      	movs	r0, #1
 8007fa6:	e00b      	b.n	8007fc0 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007fa8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007fac:	f000 fe42 	bl	8008c34 <xTaskRemoveFromEventList>
 8007fb0:	2800      	cmp	r0, #0
 8007fb2:	d0f7      	beq.n	8007fa4 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8007fb4:	f1b8 0f00 	cmp.w	r8, #0
 8007fb8:	d0f4      	beq.n	8007fa4 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007fba:	2001      	movs	r0, #1
 8007fbc:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007fc0:	f386 8811 	msr	BASEPRI, r6
}
 8007fc4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007fc8:	3501      	adds	r5, #1
 8007fca:	b26d      	sxtb	r5, r5
 8007fcc:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8007fd0:	e7e8      	b.n	8007fa4 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8007fd2:	2000      	movs	r0, #0
 8007fd4:	e7f4      	b.n	8007fc0 <xQueueGenericSendFromISR+0xac>

08007fd6 <xQueueGiveFromISR>:
{
 8007fd6:	b570      	push	{r4, r5, r6, lr}
 8007fd8:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007fda:	4604      	mov	r4, r0
 8007fdc:	b940      	cbnz	r0, 8007ff0 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007fde:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fe2:	f383 8811 	msr	BASEPRI, r3
 8007fe6:	f3bf 8f6f 	isb	sy
 8007fea:	f3bf 8f4f 	dsb	sy
 8007fee:	e7fe      	b.n	8007fee <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007ff0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007ff2:	b143      	cbz	r3, 8008006 <xQueueGiveFromISR+0x30>
 8007ff4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ff8:	f383 8811 	msr	BASEPRI, r3
 8007ffc:	f3bf 8f6f 	isb	sy
 8008000:	f3bf 8f4f 	dsb	sy
 8008004:	e7fe      	b.n	8008004 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008006:	6803      	ldr	r3, [r0, #0]
 8008008:	b953      	cbnz	r3, 8008020 <xQueueGiveFromISR+0x4a>
 800800a:	6883      	ldr	r3, [r0, #8]
 800800c:	b143      	cbz	r3, 8008020 <xQueueGiveFromISR+0x4a>
 800800e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008012:	f383 8811 	msr	BASEPRI, r3
 8008016:	f3bf 8f6f 	isb	sy
 800801a:	f3bf 8f4f 	dsb	sy
 800801e:	e7fe      	b.n	800801e <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008020:	f7ff fd14 	bl	8007a4c <vPortValidateInterruptPriority>
	__asm volatile
 8008024:	f3ef 8611 	mrs	r6, BASEPRI
 8008028:	f04f 0350 	mov.w	r3, #80	; 0x50
 800802c:	f383 8811 	msr	BASEPRI, r3
 8008030:	f3bf 8f6f 	isb	sy
 8008034:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008038:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800803a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800803c:	4293      	cmp	r3, r2
 800803e:	d91c      	bls.n	800807a <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008040:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008044:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008046:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008048:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800804a:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800804c:	d110      	bne.n	8008070 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800804e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008050:	b90b      	cbnz	r3, 8008056 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8008052:	2001      	movs	r0, #1
 8008054:	e009      	b.n	800806a <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008056:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800805a:	f000 fdeb 	bl	8008c34 <xTaskRemoveFromEventList>
 800805e:	2800      	cmp	r0, #0
 8008060:	d0f7      	beq.n	8008052 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008062:	2d00      	cmp	r5, #0
 8008064:	d0f5      	beq.n	8008052 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008066:	2001      	movs	r0, #1
 8008068:	6028      	str	r0, [r5, #0]
	__asm volatile
 800806a:	f386 8811 	msr	BASEPRI, r6
}
 800806e:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008070:	3301      	adds	r3, #1
 8008072:	b25b      	sxtb	r3, r3
 8008074:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8008078:	e7eb      	b.n	8008052 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800807a:	2000      	movs	r0, #0
 800807c:	e7f5      	b.n	800806a <xQueueGiveFromISR+0x94>
	...

08008080 <xQueueReceive>:
{
 8008080:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008084:	b085      	sub	sp, #20
 8008086:	460f      	mov	r7, r1
 8008088:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800808a:	4604      	mov	r4, r0
 800808c:	b940      	cbnz	r0, 80080a0 <xQueueReceive+0x20>
	__asm volatile
 800808e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008092:	f383 8811 	msr	BASEPRI, r3
 8008096:	f3bf 8f6f 	isb	sy
 800809a:	f3bf 8f4f 	dsb	sy
 800809e:	e7fe      	b.n	800809e <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80080a0:	b951      	cbnz	r1, 80080b8 <xQueueReceive+0x38>
 80080a2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80080a4:	b143      	cbz	r3, 80080b8 <xQueueReceive+0x38>
 80080a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080aa:	f383 8811 	msr	BASEPRI, r3
 80080ae:	f3bf 8f6f 	isb	sy
 80080b2:	f3bf 8f4f 	dsb	sy
 80080b6:	e7fe      	b.n	80080b6 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80080b8:	f000 fe4e 	bl	8008d58 <xTaskGetSchedulerState>
 80080bc:	4606      	mov	r6, r0
 80080be:	b950      	cbnz	r0, 80080d6 <xQueueReceive+0x56>
 80080c0:	9b01      	ldr	r3, [sp, #4]
 80080c2:	b14b      	cbz	r3, 80080d8 <xQueueReceive+0x58>
 80080c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080c8:	f383 8811 	msr	BASEPRI, r3
 80080cc:	f3bf 8f6f 	isb	sy
 80080d0:	f3bf 8f4f 	dsb	sy
 80080d4:	e7fe      	b.n	80080d4 <xQueueReceive+0x54>
 80080d6:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 80080d8:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 80081bc <xQueueReceive+0x13c>
		prvLockQueue( pxQueue );
 80080dc:	f04f 0800 	mov.w	r8, #0
 80080e0:	e03b      	b.n	800815a <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
 80080e2:	9d01      	ldr	r5, [sp, #4]
 80080e4:	b91d      	cbnz	r5, 80080ee <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
 80080e6:	f7ff fbb7 	bl	8007858 <vPortExitCritical>
				return errQUEUE_EMPTY;
 80080ea:	2000      	movs	r0, #0
 80080ec:	e052      	b.n	8008194 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
 80080ee:	b916      	cbnz	r6, 80080f6 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80080f0:	a802      	add	r0, sp, #8
 80080f2:	f000 fde3 	bl	8008cbc <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80080f6:	f7ff fbaf 	bl	8007858 <vPortExitCritical>
		vTaskSuspendAll();
 80080fa:	f000 fbeb 	bl	80088d4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80080fe:	f7ff fb89 	bl	8007814 <vPortEnterCritical>
 8008102:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008106:	2bff      	cmp	r3, #255	; 0xff
 8008108:	bf08      	it	eq
 800810a:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800810e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008112:	2bff      	cmp	r3, #255	; 0xff
 8008114:	bf08      	it	eq
 8008116:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800811a:	f7ff fb9d 	bl	8007858 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800811e:	a901      	add	r1, sp, #4
 8008120:	a802      	add	r0, sp, #8
 8008122:	f000 fdd7 	bl	8008cd4 <xTaskCheckForTimeOut>
 8008126:	2800      	cmp	r0, #0
 8008128:	d13d      	bne.n	80081a6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800812a:	4620      	mov	r0, r4
 800812c:	f7ff fcbc 	bl	8007aa8 <prvIsQueueEmpty>
 8008130:	b398      	cbz	r0, 800819a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008132:	9901      	ldr	r1, [sp, #4]
 8008134:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008138:	f000 fd44 	bl	8008bc4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800813c:	4620      	mov	r0, r4
 800813e:	f7ff fd09 	bl	8007b54 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008142:	f000 fc6b 	bl	8008a1c <xTaskResumeAll>
 8008146:	b938      	cbnz	r0, 8008158 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
 8008148:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800814c:	f8c9 3000 	str.w	r3, [r9]
 8008150:	f3bf 8f4f 	dsb	sy
 8008154:	f3bf 8f6f 	isb	sy
 8008158:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800815a:	f7ff fb5b 	bl	8007814 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800815e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008160:	2d00      	cmp	r5, #0
 8008162:	d0be      	beq.n	80080e2 <xQueueReceive+0x62>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008164:	4639      	mov	r1, r7
 8008166:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008168:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800816a:	f7ff fcdd 	bl	8007b28 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800816e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008170:	6923      	ldr	r3, [r4, #16]
 8008172:	b163      	cbz	r3, 800818e <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008174:	f104 0010 	add.w	r0, r4, #16
 8008178:	f000 fd5c 	bl	8008c34 <xTaskRemoveFromEventList>
 800817c:	b138      	cbz	r0, 800818e <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
 800817e:	4b0f      	ldr	r3, [pc, #60]	; (80081bc <xQueueReceive+0x13c>)
 8008180:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008184:	601a      	str	r2, [r3, #0]
 8008186:	f3bf 8f4f 	dsb	sy
 800818a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800818e:	f7ff fb63 	bl	8007858 <vPortExitCritical>
				return pdPASS;
 8008192:	2001      	movs	r0, #1
}
 8008194:	b005      	add	sp, #20
 8008196:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 800819a:	4620      	mov	r0, r4
 800819c:	f7ff fcda 	bl	8007b54 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80081a0:	f000 fc3c 	bl	8008a1c <xTaskResumeAll>
 80081a4:	e7d8      	b.n	8008158 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
 80081a6:	4620      	mov	r0, r4
 80081a8:	f7ff fcd4 	bl	8007b54 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80081ac:	f000 fc36 	bl	8008a1c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80081b0:	4620      	mov	r0, r4
 80081b2:	f7ff fc79 	bl	8007aa8 <prvIsQueueEmpty>
 80081b6:	2800      	cmp	r0, #0
 80081b8:	d0ce      	beq.n	8008158 <xQueueReceive+0xd8>
 80081ba:	e796      	b.n	80080ea <xQueueReceive+0x6a>
 80081bc:	e000ed04 	.word	0xe000ed04

080081c0 <xQueueSemaphoreTake>:
{
 80081c0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 80081c4:	4604      	mov	r4, r0
{
 80081c6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80081c8:	b940      	cbnz	r0, 80081dc <xQueueSemaphoreTake+0x1c>
 80081ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081ce:	f383 8811 	msr	BASEPRI, r3
 80081d2:	f3bf 8f6f 	isb	sy
 80081d6:	f3bf 8f4f 	dsb	sy
 80081da:	e7fe      	b.n	80081da <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80081dc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80081de:	b145      	cbz	r5, 80081f2 <xQueueSemaphoreTake+0x32>
 80081e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081e4:	f383 8811 	msr	BASEPRI, r3
 80081e8:	f3bf 8f6f 	isb	sy
 80081ec:	f3bf 8f4f 	dsb	sy
 80081f0:	e7fe      	b.n	80081f0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80081f2:	f000 fdb1 	bl	8008d58 <xTaskGetSchedulerState>
 80081f6:	4606      	mov	r6, r0
 80081f8:	b950      	cbnz	r0, 8008210 <xQueueSemaphoreTake+0x50>
 80081fa:	9b01      	ldr	r3, [sp, #4]
 80081fc:	b16b      	cbz	r3, 800821a <xQueueSemaphoreTake+0x5a>
 80081fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008202:	f383 8811 	msr	BASEPRI, r3
 8008206:	f3bf 8f6f 	isb	sy
 800820a:	f3bf 8f4f 	dsb	sy
 800820e:	e7fe      	b.n	800820e <xQueueSemaphoreTake+0x4e>
 8008210:	462e      	mov	r6, r5
					portYIELD_WITHIN_API();
 8008212:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8008344 <xQueueSemaphoreTake+0x184>
		prvLockQueue( pxQueue );
 8008216:	2700      	movs	r7, #0
 8008218:	e051      	b.n	80082be <xQueueSemaphoreTake+0xfe>
 800821a:	4605      	mov	r5, r0
 800821c:	e7f9      	b.n	8008212 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800821e:	9b01      	ldr	r3, [sp, #4]
 8008220:	b963      	cbnz	r3, 800823c <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8008222:	b145      	cbz	r5, 8008236 <xQueueSemaphoreTake+0x76>
 8008224:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008228:	f383 8811 	msr	BASEPRI, r3
 800822c:	f3bf 8f6f 	isb	sy
 8008230:	f3bf 8f4f 	dsb	sy
 8008234:	e7fe      	b.n	8008234 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
 8008236:	f7ff fb0f 	bl	8007858 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800823a:	e05e      	b.n	80082fa <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 800823c:	b916      	cbnz	r6, 8008244 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800823e:	a802      	add	r0, sp, #8
 8008240:	f000 fd3c 	bl	8008cbc <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008244:	f7ff fb08 	bl	8007858 <vPortExitCritical>
		vTaskSuspendAll();
 8008248:	f000 fb44 	bl	80088d4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800824c:	f7ff fae2 	bl	8007814 <vPortEnterCritical>
 8008250:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008254:	2bff      	cmp	r3, #255	; 0xff
 8008256:	bf08      	it	eq
 8008258:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800825c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008260:	2bff      	cmp	r3, #255	; 0xff
 8008262:	bf08      	it	eq
 8008264:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8008268:	f7ff faf6 	bl	8007858 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800826c:	a901      	add	r1, sp, #4
 800826e:	a802      	add	r0, sp, #8
 8008270:	f000 fd30 	bl	8008cd4 <xTaskCheckForTimeOut>
 8008274:	2800      	cmp	r0, #0
 8008276:	d14a      	bne.n	800830e <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008278:	4620      	mov	r0, r4
 800827a:	f7ff fc15 	bl	8007aa8 <prvIsQueueEmpty>
 800827e:	2800      	cmp	r0, #0
 8008280:	d03f      	beq.n	8008302 <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008282:	6823      	ldr	r3, [r4, #0]
 8008284:	b93b      	cbnz	r3, 8008296 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
 8008286:	f7ff fac5 	bl	8007814 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800828a:	68a0      	ldr	r0, [r4, #8]
 800828c:	f000 fd74 	bl	8008d78 <xTaskPriorityInherit>
 8008290:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8008292:	f7ff fae1 	bl	8007858 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008296:	9901      	ldr	r1, [sp, #4]
 8008298:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800829c:	f000 fc92 	bl	8008bc4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80082a0:	4620      	mov	r0, r4
 80082a2:	f7ff fc57 	bl	8007b54 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80082a6:	f000 fbb9 	bl	8008a1c <xTaskResumeAll>
 80082aa:	b938      	cbnz	r0, 80082bc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80082ac:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80082b0:	f8c8 3000 	str.w	r3, [r8]
 80082b4:	f3bf 8f4f 	dsb	sy
 80082b8:	f3bf 8f6f 	isb	sy
 80082bc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80082be:	f7ff faa9 	bl	8007814 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80082c2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80082c4:	2b00      	cmp	r3, #0
 80082c6:	d0aa      	beq.n	800821e <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80082c8:	3b01      	subs	r3, #1
 80082ca:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80082cc:	6823      	ldr	r3, [r4, #0]
 80082ce:	b913      	cbnz	r3, 80082d6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80082d0:	f000 fe2a 	bl	8008f28 <pvTaskIncrementMutexHeldCount>
 80082d4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80082d6:	6923      	ldr	r3, [r4, #16]
 80082d8:	b163      	cbz	r3, 80082f4 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80082da:	f104 0010 	add.w	r0, r4, #16
 80082de:	f000 fca9 	bl	8008c34 <xTaskRemoveFromEventList>
 80082e2:	b138      	cbz	r0, 80082f4 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 80082e4:	4b17      	ldr	r3, [pc, #92]	; (8008344 <xQueueSemaphoreTake+0x184>)
 80082e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80082ea:	601a      	str	r2, [r3, #0]
 80082ec:	f3bf 8f4f 	dsb	sy
 80082f0:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80082f4:	f7ff fab0 	bl	8007858 <vPortExitCritical>
				return pdPASS;
 80082f8:	2501      	movs	r5, #1
}
 80082fa:	4628      	mov	r0, r5
 80082fc:	b004      	add	sp, #16
 80082fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8008302:	4620      	mov	r0, r4
 8008304:	f7ff fc26 	bl	8007b54 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008308:	f000 fb88 	bl	8008a1c <xTaskResumeAll>
 800830c:	e7d6      	b.n	80082bc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800830e:	4620      	mov	r0, r4
 8008310:	f7ff fc20 	bl	8007b54 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008314:	f000 fb82 	bl	8008a1c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008318:	4620      	mov	r0, r4
 800831a:	f7ff fbc5 	bl	8007aa8 <prvIsQueueEmpty>
 800831e:	2800      	cmp	r0, #0
 8008320:	d0cc      	beq.n	80082bc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8008322:	2d00      	cmp	r5, #0
 8008324:	d0e9      	beq.n	80082fa <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
 8008326:	f7ff fa75 	bl	8007814 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800832a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800832c:	b119      	cbz	r1, 8008336 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800832e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008330:	6819      	ldr	r1, [r3, #0]
 8008332:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008336:	68a0      	ldr	r0, [r4, #8]
 8008338:	f000 fda4 	bl	8008e84 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800833c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800833e:	f7ff fa8b 	bl	8007858 <vPortExitCritical>
 8008342:	e7da      	b.n	80082fa <xQueueSemaphoreTake+0x13a>
 8008344:	e000ed04 	.word	0xe000ed04

08008348 <xQueueReceiveFromISR>:
{
 8008348:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800834c:	4689      	mov	r9, r1
 800834e:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8008350:	4605      	mov	r5, r0
 8008352:	b940      	cbnz	r0, 8008366 <xQueueReceiveFromISR+0x1e>
 8008354:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008358:	f383 8811 	msr	BASEPRI, r3
 800835c:	f3bf 8f6f 	isb	sy
 8008360:	f3bf 8f4f 	dsb	sy
 8008364:	e7fe      	b.n	8008364 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008366:	b951      	cbnz	r1, 800837e <xQueueReceiveFromISR+0x36>
 8008368:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800836a:	b143      	cbz	r3, 800837e <xQueueReceiveFromISR+0x36>
 800836c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008370:	f383 8811 	msr	BASEPRI, r3
 8008374:	f3bf 8f6f 	isb	sy
 8008378:	f3bf 8f4f 	dsb	sy
 800837c:	e7fe      	b.n	800837c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800837e:	f7ff fb65 	bl	8007a4c <vPortValidateInterruptPriority>
	__asm volatile
 8008382:	f3ef 8711 	mrs	r7, BASEPRI
 8008386:	f04f 0350 	mov.w	r3, #80	; 0x50
 800838a:	f383 8811 	msr	BASEPRI, r3
 800838e:	f3bf 8f6f 	isb	sy
 8008392:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008396:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008398:	b31c      	cbz	r4, 80083e2 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800839a:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800839e:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80083a0:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80083a2:	4628      	mov	r0, r5
 80083a4:	f7ff fbc0 	bl	8007b28 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80083a8:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80083aa:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80083ac:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80083ae:	d113      	bne.n	80083d8 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80083b0:	692b      	ldr	r3, [r5, #16]
 80083b2:	b90b      	cbnz	r3, 80083b8 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80083b4:	2001      	movs	r0, #1
 80083b6:	e00b      	b.n	80083d0 <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80083b8:	f105 0010 	add.w	r0, r5, #16
 80083bc:	f000 fc3a 	bl	8008c34 <xTaskRemoveFromEventList>
 80083c0:	2800      	cmp	r0, #0
 80083c2:	d0f7      	beq.n	80083b4 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80083c4:	f1b8 0f00 	cmp.w	r8, #0
 80083c8:	d0f4      	beq.n	80083b4 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80083ca:	2001      	movs	r0, #1
 80083cc:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80083d0:	f387 8811 	msr	BASEPRI, r7
}
 80083d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80083d8:	3601      	adds	r6, #1
 80083da:	b276      	sxtb	r6, r6
 80083dc:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80083e0:	e7e8      	b.n	80083b4 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80083e2:	4620      	mov	r0, r4
 80083e4:	e7f4      	b.n	80083d0 <xQueueReceiveFromISR+0x88>
	...

080083e8 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80083e8:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80083ea:	4a07      	ldr	r2, [pc, #28]	; (8008408 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80083ec:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80083ee:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80083f2:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80083f6:	b91d      	cbnz	r5, 8008400 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80083f8:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80083fc:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80083fe:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008400:	3301      	adds	r3, #1
 8008402:	2b08      	cmp	r3, #8
 8008404:	d1f3      	bne.n	80083ee <vQueueAddToRegistry+0x6>
 8008406:	e7fa      	b.n	80083fe <vQueueAddToRegistry+0x16>
 8008408:	20013a00 	.word	0x20013a00

0800840c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800840c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800840e:	4909      	ldr	r1, [pc, #36]	; (8008434 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008410:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008412:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 8008416:	4282      	cmp	r2, r0
 8008418:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800841c:	d106      	bne.n	800842c <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800841e:	4a06      	ldr	r2, [pc, #24]	; (8008438 <vQueueUnregisterQueue+0x2c>)
 8008420:	2100      	movs	r1, #0
 8008422:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8008426:	4422      	add	r2, r4
 8008428:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800842a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800842c:	3301      	adds	r3, #1
 800842e:	2b08      	cmp	r3, #8
 8008430:	d1ef      	bne.n	8008412 <vQueueUnregisterQueue+0x6>
 8008432:	e7fa      	b.n	800842a <vQueueUnregisterQueue+0x1e>
 8008434:	20013a04 	.word	0x20013a04
 8008438:	20013a00 	.word	0x20013a00

0800843c <vQueueDelete>:
{
 800843c:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800843e:	b940      	cbnz	r0, 8008452 <vQueueDelete+0x16>
	__asm volatile
 8008440:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008444:	f383 8811 	msr	BASEPRI, r3
 8008448:	f3bf 8f6f 	isb	sy
 800844c:	f3bf 8f4f 	dsb	sy
 8008450:	e7fe      	b.n	8008450 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8008452:	f7ff ffdb 	bl	800840c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008456:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800845a:	b91b      	cbnz	r3, 8008464 <vQueueDelete+0x28>
}
 800845c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008460:	f7ff b8f4 	b.w	800764c <vPortFree>
}
 8008464:	bd10      	pop	{r4, pc}

08008466 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008466:	b570      	push	{r4, r5, r6, lr}
 8008468:	4604      	mov	r4, r0
 800846a:	460d      	mov	r5, r1
 800846c:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800846e:	f7ff f9d1 	bl	8007814 <vPortEnterCritical>
 8008472:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008476:	2bff      	cmp	r3, #255	; 0xff
 8008478:	bf04      	itt	eq
 800847a:	2300      	moveq	r3, #0
 800847c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8008480:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008484:	2bff      	cmp	r3, #255	; 0xff
 8008486:	bf04      	itt	eq
 8008488:	2300      	moveq	r3, #0
 800848a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800848e:	f7ff f9e3 	bl	8007858 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8008492:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008494:	b92b      	cbnz	r3, 80084a2 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8008496:	4632      	mov	r2, r6
 8008498:	4629      	mov	r1, r5
 800849a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800849e:	f000 fbab 	bl	8008bf8 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80084a2:	4620      	mov	r0, r4
	}
 80084a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80084a8:	f7ff bb54 	b.w	8007b54 <prvUnlockQueue>

080084ac <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80084ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80084b0:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80084b2:	f7ff f9af 	bl	8007814 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80084b6:	4b2f      	ldr	r3, [pc, #188]	; (8008574 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 80084b8:	4d2f      	ldr	r5, [pc, #188]	; (8008578 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 80084ba:	681a      	ldr	r2, [r3, #0]
 80084bc:	4f2f      	ldr	r7, [pc, #188]	; (800857c <prvAddNewTaskToReadyList+0xd0>)
 80084be:	3201      	adds	r2, #1
 80084c0:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80084c2:	682e      	ldr	r6, [r5, #0]
 80084c4:	2e00      	cmp	r6, #0
 80084c6:	d149      	bne.n	800855c <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80084c8:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80084ca:	681b      	ldr	r3, [r3, #0]
 80084cc:	2b01      	cmp	r3, #1
 80084ce:	d11f      	bne.n	8008510 <prvAddNewTaskToReadyList+0x64>
 80084d0:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80084d2:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80084d4:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80084d6:	f7ff f8f1 	bl	80076bc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80084da:	2e38      	cmp	r6, #56	; 0x38
 80084dc:	f108 0814 	add.w	r8, r8, #20
 80084e0:	d1f7      	bne.n	80084d2 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80084e2:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80085a8 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80084e6:	4e26      	ldr	r6, [pc, #152]	; (8008580 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 80084e8:	4640      	mov	r0, r8
 80084ea:	f7ff f8e7 	bl	80076bc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80084ee:	4630      	mov	r0, r6
 80084f0:	f7ff f8e4 	bl	80076bc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80084f4:	4823      	ldr	r0, [pc, #140]	; (8008584 <prvAddNewTaskToReadyList+0xd8>)
 80084f6:	f7ff f8e1 	bl	80076bc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80084fa:	4823      	ldr	r0, [pc, #140]	; (8008588 <prvAddNewTaskToReadyList+0xdc>)
 80084fc:	f7ff f8de 	bl	80076bc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008500:	4822      	ldr	r0, [pc, #136]	; (800858c <prvAddNewTaskToReadyList+0xe0>)
 8008502:	f7ff f8db 	bl	80076bc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8008506:	4b22      	ldr	r3, [pc, #136]	; (8008590 <prvAddNewTaskToReadyList+0xe4>)
 8008508:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800850c:	4b21      	ldr	r3, [pc, #132]	; (8008594 <prvAddNewTaskToReadyList+0xe8>)
 800850e:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8008510:	4a21      	ldr	r2, [pc, #132]	; (8008598 <prvAddNewTaskToReadyList+0xec>)
 8008512:	6813      	ldr	r3, [r2, #0]
 8008514:	3301      	adds	r3, #1
 8008516:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008518:	4a20      	ldr	r2, [pc, #128]	; (800859c <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800851a:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800851c:	6811      	ldr	r1, [r2, #0]
 800851e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008520:	2014      	movs	r0, #20
 8008522:	428b      	cmp	r3, r1
 8008524:	fb00 7003 	mla	r0, r0, r3, r7
 8008528:	f104 0104 	add.w	r1, r4, #4
 800852c:	bf88      	it	hi
 800852e:	6013      	strhi	r3, [r2, #0]
 8008530:	f7ff f8d2 	bl	80076d8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8008534:	f7ff f990 	bl	8007858 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008538:	4b19      	ldr	r3, [pc, #100]	; (80085a0 <prvAddNewTaskToReadyList+0xf4>)
 800853a:	681b      	ldr	r3, [r3, #0]
 800853c:	b163      	cbz	r3, 8008558 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800853e:	682b      	ldr	r3, [r5, #0]
 8008540:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008542:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008544:	429a      	cmp	r2, r3
 8008546:	d207      	bcs.n	8008558 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8008548:	4b16      	ldr	r3, [pc, #88]	; (80085a4 <prvAddNewTaskToReadyList+0xf8>)
 800854a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800854e:	601a      	str	r2, [r3, #0]
 8008550:	f3bf 8f4f 	dsb	sy
 8008554:	f3bf 8f6f 	isb	sy
}
 8008558:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800855c:	4b10      	ldr	r3, [pc, #64]	; (80085a0 <prvAddNewTaskToReadyList+0xf4>)
 800855e:	681b      	ldr	r3, [r3, #0]
 8008560:	2b00      	cmp	r3, #0
 8008562:	d1d5      	bne.n	8008510 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008564:	682b      	ldr	r3, [r5, #0]
 8008566:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008568:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800856a:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800856c:	bf98      	it	ls
 800856e:	602c      	strls	r4, [r5, #0]
 8008570:	e7ce      	b.n	8008510 <prvAddNewTaskToReadyList+0x64>
 8008572:	bf00      	nop
 8008574:	20013340 	.word	0x20013340
 8008578:	20012ed4 	.word	0x20012ed4
 800857c:	20012ee0 	.word	0x20012ee0
 8008580:	2001336c 	.word	0x2001336c
 8008584:	20013388 	.word	0x20013388
 8008588:	200133b4 	.word	0x200133b4
 800858c:	200133a0 	.word	0x200133a0
 8008590:	20012ed8 	.word	0x20012ed8
 8008594:	20012edc 	.word	0x20012edc
 8008598:	20013350 	.word	0x20013350
 800859c:	20013354 	.word	0x20013354
 80085a0:	2001339c 	.word	0x2001339c
 80085a4:	e000ed04 	.word	0xe000ed04
 80085a8:	20013358 	.word	0x20013358

080085ac <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80085ac:	4a06      	ldr	r2, [pc, #24]	; (80085c8 <prvResetNextTaskUnblockTime+0x1c>)
 80085ae:	6813      	ldr	r3, [r2, #0]
 80085b0:	6819      	ldr	r1, [r3, #0]
 80085b2:	4b06      	ldr	r3, [pc, #24]	; (80085cc <prvResetNextTaskUnblockTime+0x20>)
 80085b4:	b919      	cbnz	r1, 80085be <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 80085b6:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80085ba:	601a      	str	r2, [r3, #0]
	}
}
 80085bc:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80085be:	6812      	ldr	r2, [r2, #0]
 80085c0:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80085c2:	68d2      	ldr	r2, [r2, #12]
 80085c4:	6852      	ldr	r2, [r2, #4]
 80085c6:	e7f8      	b.n	80085ba <prvResetNextTaskUnblockTime+0xe>
 80085c8:	20012ed8 	.word	0x20012ed8
 80085cc:	20013380 	.word	0x20013380

080085d0 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80085d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80085d4:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80085d8:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80085dc:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80085de:	4606      	mov	r6, r0
 80085e0:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80085e2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80085e4:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80085e6:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80085e8:	f013 faa4 	bl	801bb34 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80085ec:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80085ee:	f1a9 0904 	sub.w	r9, r9, #4
 80085f2:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80085f4:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 80085f8:	2d00      	cmp	r5, #0
 80085fa:	d037      	beq.n	800866c <prvInitialiseNewTask.isra.0+0x9c>
 80085fc:	1e6b      	subs	r3, r5, #1
 80085fe:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8008602:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008604:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008608:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800860c:	7819      	ldrb	r1, [r3, #0]
 800860e:	b109      	cbz	r1, 8008614 <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008610:	42ab      	cmp	r3, r5
 8008612:	d1f7      	bne.n	8008604 <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008614:	2300      	movs	r3, #0
 8008616:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800861a:	9d08      	ldr	r5, [sp, #32]
 800861c:	2d37      	cmp	r5, #55	; 0x37
 800861e:	bf28      	it	cs
 8008620:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008622:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008626:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008628:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800862a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800862c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008630:	f7ff f84f 	bl	80076d2 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008634:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008638:	f104 0018 	add.w	r0, r4, #24
 800863c:	f7ff f849 	bl	80076d2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008640:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008644:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008646:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008648:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800864a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800864e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008652:	463a      	mov	r2, r7
 8008654:	4631      	mov	r1, r6
 8008656:	4648      	mov	r0, r9
 8008658:	f7ff f8b0 	bl	80077bc <pxPortInitialiseStack>
 800865c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800865e:	f1b8 0f00 	cmp.w	r8, #0
 8008662:	d001      	beq.n	8008668 <prvInitialiseNewTask.isra.0+0x98>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008664:	f8c8 4000 	str.w	r4, [r8]
}
 8008668:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800866c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8008670:	e7d3      	b.n	800861a <prvInitialiseNewTask.isra.0+0x4a>

08008672 <prvDeleteTCB>:
	{
 8008672:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008674:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8008678:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800867a:	b93b      	cbnz	r3, 800868c <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800867c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800867e:	f7fe ffe5 	bl	800764c <vPortFree>
				vPortFree( pxTCB );
 8008682:	4620      	mov	r0, r4
	}
 8008684:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8008688:	f7fe bfe0 	b.w	800764c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800868c:	2b01      	cmp	r3, #1
 800868e:	d0f9      	beq.n	8008684 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008690:	2b02      	cmp	r3, #2
 8008692:	d008      	beq.n	80086a6 <prvDeleteTCB+0x34>
 8008694:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008698:	f383 8811 	msr	BASEPRI, r3
 800869c:	f3bf 8f6f 	isb	sy
 80086a0:	f3bf 8f4f 	dsb	sy
 80086a4:	e7fe      	b.n	80086a4 <prvDeleteTCB+0x32>
	}
 80086a6:	bd10      	pop	{r4, pc}

080086a8 <prvIdleTask>:
{
 80086a8:	b580      	push	{r7, lr}
				taskYIELD();
 80086aa:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8008708 <prvIdleTask+0x60>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80086ae:	4f12      	ldr	r7, [pc, #72]	; (80086f8 <prvIdleTask+0x50>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80086b0:	4c12      	ldr	r4, [pc, #72]	; (80086fc <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 80086b2:	4d13      	ldr	r5, [pc, #76]	; (8008700 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80086b4:	6823      	ldr	r3, [r4, #0]
 80086b6:	b963      	cbnz	r3, 80086d2 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80086b8:	4b12      	ldr	r3, [pc, #72]	; (8008704 <prvIdleTask+0x5c>)
 80086ba:	681b      	ldr	r3, [r3, #0]
 80086bc:	2b01      	cmp	r3, #1
 80086be:	d9f8      	bls.n	80086b2 <prvIdleTask+0xa>
				taskYIELD();
 80086c0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80086c4:	f8c8 3000 	str.w	r3, [r8]
 80086c8:	f3bf 8f4f 	dsb	sy
 80086cc:	f3bf 8f6f 	isb	sy
 80086d0:	e7ee      	b.n	80086b0 <prvIdleTask+0x8>
			taskENTER_CRITICAL();
 80086d2:	f7ff f89f 	bl	8007814 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80086d6:	68fb      	ldr	r3, [r7, #12]
 80086d8:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80086da:	1d30      	adds	r0, r6, #4
 80086dc:	f7ff f81f 	bl	800771e <uxListRemove>
				--uxCurrentNumberOfTasks;
 80086e0:	682b      	ldr	r3, [r5, #0]
 80086e2:	3b01      	subs	r3, #1
 80086e4:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80086e6:	6823      	ldr	r3, [r4, #0]
 80086e8:	3b01      	subs	r3, #1
 80086ea:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80086ec:	f7ff f8b4 	bl	8007858 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80086f0:	4630      	mov	r0, r6
 80086f2:	f7ff ffbe 	bl	8008672 <prvDeleteTCB>
 80086f6:	e7dd      	b.n	80086b4 <prvIdleTask+0xc>
 80086f8:	200133b4 	.word	0x200133b4
 80086fc:	20013344 	.word	0x20013344
 8008700:	20013340 	.word	0x20013340
 8008704:	20012ee0 	.word	0x20012ee0
 8008708:	e000ed04 	.word	0xe000ed04

0800870c <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800870c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800870e:	4b16      	ldr	r3, [pc, #88]	; (8008768 <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008710:	4e16      	ldr	r6, [pc, #88]	; (800876c <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 8008712:	681d      	ldr	r5, [r3, #0]
{
 8008714:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008716:	6830      	ldr	r0, [r6, #0]
 8008718:	3004      	adds	r0, #4
{
 800871a:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800871c:	f7fe ffff 	bl	800771e <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008720:	1c63      	adds	r3, r4, #1
 8008722:	4633      	mov	r3, r6
 8008724:	d107      	bne.n	8008736 <prvAddCurrentTaskToDelayedList+0x2a>
 8008726:	b137      	cbz	r7, 8008736 <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008728:	6831      	ldr	r1, [r6, #0]
 800872a:	4811      	ldr	r0, [pc, #68]	; (8008770 <prvAddCurrentTaskToDelayedList+0x64>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800872c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008730:	3104      	adds	r1, #4
 8008732:	f7fe bfd1 	b.w	80076d8 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8008736:	681a      	ldr	r2, [r3, #0]
 8008738:	192c      	adds	r4, r5, r4
 800873a:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 800873c:	d307      	bcc.n	800874e <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800873e:	4a0d      	ldr	r2, [pc, #52]	; (8008774 <prvAddCurrentTaskToDelayedList+0x68>)
 8008740:	6810      	ldr	r0, [r2, #0]
 8008742:	6819      	ldr	r1, [r3, #0]
}
 8008744:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008748:	3104      	adds	r1, #4
 800874a:	f7fe bfd1 	b.w	80076f0 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800874e:	4a0a      	ldr	r2, [pc, #40]	; (8008778 <prvAddCurrentTaskToDelayedList+0x6c>)
 8008750:	6810      	ldr	r0, [r2, #0]
 8008752:	6819      	ldr	r1, [r3, #0]
 8008754:	3104      	adds	r1, #4
 8008756:	f7fe ffcb 	bl	80076f0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800875a:	4b08      	ldr	r3, [pc, #32]	; (800877c <prvAddCurrentTaskToDelayedList+0x70>)
 800875c:	681a      	ldr	r2, [r3, #0]
 800875e:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008760:	bf88      	it	hi
 8008762:	601c      	strhi	r4, [r3, #0]
}
 8008764:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008766:	bf00      	nop
 8008768:	200133c8 	.word	0x200133c8
 800876c:	20012ed4 	.word	0x20012ed4
 8008770:	200133a0 	.word	0x200133a0
 8008774:	20012edc 	.word	0x20012edc
 8008778:	20012ed8 	.word	0x20012ed8
 800877c:	20013380 	.word	0x20013380

08008780 <xTaskCreateStatic>:
	{
 8008780:	b570      	push	{r4, r5, r6, lr}
 8008782:	b086      	sub	sp, #24
 8008784:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008788:	b945      	cbnz	r5, 800879c <xTaskCreateStatic+0x1c>
 800878a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800878e:	f383 8811 	msr	BASEPRI, r3
 8008792:	f3bf 8f6f 	isb	sy
 8008796:	f3bf 8f4f 	dsb	sy
 800879a:	e7fe      	b.n	800879a <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800879c:	b944      	cbnz	r4, 80087b0 <xTaskCreateStatic+0x30>
 800879e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087a2:	f383 8811 	msr	BASEPRI, r3
 80087a6:	f3bf 8f6f 	isb	sy
 80087aa:	f3bf 8f4f 	dsb	sy
 80087ae:	e7fe      	b.n	80087ae <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80087b0:	2660      	movs	r6, #96	; 0x60
 80087b2:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80087b4:	9e05      	ldr	r6, [sp, #20]
 80087b6:	2e60      	cmp	r6, #96	; 0x60
 80087b8:	d008      	beq.n	80087cc <xTaskCreateStatic+0x4c>
 80087ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087be:	f383 8811 	msr	BASEPRI, r3
 80087c2:	f3bf 8f6f 	isb	sy
 80087c6:	f3bf 8f4f 	dsb	sy
 80087ca:	e7fe      	b.n	80087ca <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80087cc:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80087ce:	2502      	movs	r5, #2
 80087d0:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80087d4:	ad04      	add	r5, sp, #16
 80087d6:	9501      	str	r5, [sp, #4]
 80087d8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80087da:	9402      	str	r4, [sp, #8]
 80087dc:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80087de:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80087e0:	f7ff fef6 	bl	80085d0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80087e4:	4620      	mov	r0, r4
 80087e6:	f7ff fe61 	bl	80084ac <prvAddNewTaskToReadyList>
	}
 80087ea:	9804      	ldr	r0, [sp, #16]
 80087ec:	b006      	add	sp, #24
 80087ee:	bd70      	pop	{r4, r5, r6, pc}

080087f0 <xTaskCreate>:
	{
 80087f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80087f4:	4607      	mov	r7, r0
 80087f6:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80087f8:	0090      	lsls	r0, r2, #2
	{
 80087fa:	4688      	mov	r8, r1
 80087fc:	4616      	mov	r6, r2
 80087fe:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008800:	f7fe fe98 	bl	8007534 <pvPortMalloc>
			if( pxStack != NULL )
 8008804:	4605      	mov	r5, r0
 8008806:	b1e8      	cbz	r0, 8008844 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008808:	2060      	movs	r0, #96	; 0x60
 800880a:	f7fe fe93 	bl	8007534 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800880e:	4604      	mov	r4, r0
 8008810:	b1a8      	cbz	r0, 800883e <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008812:	2300      	movs	r3, #0
 8008814:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008818:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800881a:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800881c:	9301      	str	r3, [sp, #4]
 800881e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008820:	9002      	str	r0, [sp, #8]
 8008822:	9300      	str	r3, [sp, #0]
 8008824:	4632      	mov	r2, r6
 8008826:	464b      	mov	r3, r9
 8008828:	4641      	mov	r1, r8
 800882a:	4638      	mov	r0, r7
 800882c:	f7ff fed0 	bl	80085d0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008830:	4620      	mov	r0, r4
 8008832:	f7ff fe3b 	bl	80084ac <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008836:	2001      	movs	r0, #1
	}
 8008838:	b005      	add	sp, #20
 800883a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800883e:	4628      	mov	r0, r5
 8008840:	f7fe ff04 	bl	800764c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008844:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8008848:	e7f6      	b.n	8008838 <xTaskCreate+0x48>
	...

0800884c <vTaskStartScheduler>:
{
 800884c:	b510      	push	{r4, lr}
 800884e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008850:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008852:	aa07      	add	r2, sp, #28
 8008854:	a906      	add	r1, sp, #24
 8008856:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008858:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800885c:	f7fe fe2e 	bl	80074bc <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008860:	9b05      	ldr	r3, [sp, #20]
 8008862:	9302      	str	r3, [sp, #8]
 8008864:	9b06      	ldr	r3, [sp, #24]
 8008866:	9a07      	ldr	r2, [sp, #28]
 8008868:	4915      	ldr	r1, [pc, #84]	; (80088c0 <vTaskStartScheduler+0x74>)
 800886a:	4816      	ldr	r0, [pc, #88]	; (80088c4 <vTaskStartScheduler+0x78>)
 800886c:	e9cd 4300 	strd	r4, r3, [sp]
 8008870:	4623      	mov	r3, r4
 8008872:	f7ff ff85 	bl	8008780 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008876:	b1a8      	cbz	r0, 80088a4 <vTaskStartScheduler+0x58>
			xReturn = xTimerCreateTimerTask();
 8008878:	f000 fbb4 	bl	8008fe4 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800887c:	2801      	cmp	r0, #1
 800887e:	d113      	bne.n	80088a8 <vTaskStartScheduler+0x5c>
 8008880:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008884:	f383 8811 	msr	BASEPRI, r3
 8008888:	f3bf 8f6f 	isb	sy
 800888c:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008890:	4b0d      	ldr	r3, [pc, #52]	; (80088c8 <vTaskStartScheduler+0x7c>)
 8008892:	f04f 32ff 	mov.w	r2, #4294967295
 8008896:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008898:	4b0c      	ldr	r3, [pc, #48]	; (80088cc <vTaskStartScheduler+0x80>)
 800889a:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800889c:	4b0c      	ldr	r3, [pc, #48]	; (80088d0 <vTaskStartScheduler+0x84>)
 800889e:	601c      	str	r4, [r3, #0]
		if( xPortStartScheduler() != pdFALSE )
 80088a0:	f7ff f850 	bl	8007944 <xPortStartScheduler>
}
 80088a4:	b008      	add	sp, #32
 80088a6:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 80088a8:	3001      	adds	r0, #1
 80088aa:	d1fb      	bne.n	80088a4 <vTaskStartScheduler+0x58>
 80088ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088b0:	f383 8811 	msr	BASEPRI, r3
 80088b4:	f3bf 8f6f 	isb	sy
 80088b8:	f3bf 8f4f 	dsb	sy
 80088bc:	e7fe      	b.n	80088bc <vTaskStartScheduler+0x70>
 80088be:	bf00      	nop
 80088c0:	0801e90c 	.word	0x0801e90c
 80088c4:	080086a9 	.word	0x080086a9
 80088c8:	20013380 	.word	0x20013380
 80088cc:	2001339c 	.word	0x2001339c
 80088d0:	200133c8 	.word	0x200133c8

080088d4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80088d4:	4a02      	ldr	r2, [pc, #8]	; (80088e0 <vTaskSuspendAll+0xc>)
 80088d6:	6813      	ldr	r3, [r2, #0]
 80088d8:	3301      	adds	r3, #1
 80088da:	6013      	str	r3, [r2, #0]
}
 80088dc:	4770      	bx	lr
 80088de:	bf00      	nop
 80088e0:	2001334c 	.word	0x2001334c

080088e4 <xTaskGetTickCount>:
		xTicks = xTickCount;
 80088e4:	4b01      	ldr	r3, [pc, #4]	; (80088ec <xTaskGetTickCount+0x8>)
 80088e6:	6818      	ldr	r0, [r3, #0]
}
 80088e8:	4770      	bx	lr
 80088ea:	bf00      	nop
 80088ec:	200133c8 	.word	0x200133c8

080088f0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80088f0:	4b3f      	ldr	r3, [pc, #252]	; (80089f0 <xTaskIncrementTick+0x100>)
 80088f2:	681b      	ldr	r3, [r3, #0]
{
 80088f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80088f8:	2b00      	cmp	r3, #0
 80088fa:	d173      	bne.n	80089e4 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80088fc:	4b3d      	ldr	r3, [pc, #244]	; (80089f4 <xTaskIncrementTick+0x104>)
 80088fe:	681d      	ldr	r5, [r3, #0]
 8008900:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8008902:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008904:	b9bd      	cbnz	r5, 8008936 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008906:	4b3c      	ldr	r3, [pc, #240]	; (80089f8 <xTaskIncrementTick+0x108>)
 8008908:	681a      	ldr	r2, [r3, #0]
 800890a:	6812      	ldr	r2, [r2, #0]
 800890c:	b142      	cbz	r2, 8008920 <xTaskIncrementTick+0x30>
 800890e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008912:	f383 8811 	msr	BASEPRI, r3
 8008916:	f3bf 8f6f 	isb	sy
 800891a:	f3bf 8f4f 	dsb	sy
 800891e:	e7fe      	b.n	800891e <xTaskIncrementTick+0x2e>
 8008920:	4a36      	ldr	r2, [pc, #216]	; (80089fc <xTaskIncrementTick+0x10c>)
 8008922:	6819      	ldr	r1, [r3, #0]
 8008924:	6810      	ldr	r0, [r2, #0]
 8008926:	6018      	str	r0, [r3, #0]
 8008928:	6011      	str	r1, [r2, #0]
 800892a:	4a35      	ldr	r2, [pc, #212]	; (8008a00 <xTaskIncrementTick+0x110>)
 800892c:	6813      	ldr	r3, [r2, #0]
 800892e:	3301      	adds	r3, #1
 8008930:	6013      	str	r3, [r2, #0]
 8008932:	f7ff fe3b 	bl	80085ac <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008936:	4e33      	ldr	r6, [pc, #204]	; (8008a04 <xTaskIncrementTick+0x114>)
 8008938:	4f33      	ldr	r7, [pc, #204]	; (8008a08 <xTaskIncrementTick+0x118>)
 800893a:	6833      	ldr	r3, [r6, #0]
 800893c:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8008a14 <xTaskIncrementTick+0x124>
 8008940:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8008942:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008946:	d911      	bls.n	800896c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008948:	f8d8 3000 	ldr.w	r3, [r8]
 800894c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800894e:	2314      	movs	r3, #20
 8008950:	4353      	muls	r3, r2
 8008952:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8008954:	2b02      	cmp	r3, #2
 8008956:	bf28      	it	cs
 8008958:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 800895a:	4b2c      	ldr	r3, [pc, #176]	; (8008a0c <xTaskIncrementTick+0x11c>)
 800895c:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 800895e:	2b00      	cmp	r3, #0
}
 8008960:	bf0c      	ite	eq
 8008962:	4620      	moveq	r0, r4
 8008964:	2001      	movne	r0, #1
 8008966:	b003      	add	sp, #12
 8008968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800896c:	f8df 9088 	ldr.w	r9, [pc, #136]	; 80089f8 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008970:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8008a18 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008974:	f8d9 3000 	ldr.w	r3, [r9]
 8008978:	681b      	ldr	r3, [r3, #0]
 800897a:	b91b      	cbnz	r3, 8008984 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800897c:	f04f 33ff 	mov.w	r3, #4294967295
 8008980:	6033      	str	r3, [r6, #0]
					break;
 8008982:	e7e1      	b.n	8008948 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008984:	f8d9 3000 	ldr.w	r3, [r9]
 8008988:	68db      	ldr	r3, [r3, #12]
 800898a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800898e:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8008992:	4295      	cmp	r5, r2
 8008994:	d201      	bcs.n	800899a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008996:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008998:	e7d6      	b.n	8008948 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800899a:	f10b 0104 	add.w	r1, fp, #4
 800899e:	4608      	mov	r0, r1
 80089a0:	9101      	str	r1, [sp, #4]
 80089a2:	f7fe febc 	bl	800771e <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80089a6:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 80089aa:	9901      	ldr	r1, [sp, #4]
 80089ac:	b122      	cbz	r2, 80089b8 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80089ae:	f10b 0018 	add.w	r0, fp, #24
 80089b2:	f7fe feb4 	bl	800771e <uxListRemove>
 80089b6:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 80089b8:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 80089bc:	f8da 2000 	ldr.w	r2, [sl]
 80089c0:	2314      	movs	r3, #20
 80089c2:	4290      	cmp	r0, r2
 80089c4:	bf88      	it	hi
 80089c6:	f8ca 0000 	strhi.w	r0, [sl]
 80089ca:	fb03 7000 	mla	r0, r3, r0, r7
 80089ce:	f7fe fe83 	bl	80076d8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80089d2:	f8d8 1000 	ldr.w	r1, [r8]
 80089d6:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 80089da:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 80089dc:	429a      	cmp	r2, r3
 80089de:	bf28      	it	cs
 80089e0:	2401      	movcs	r4, #1
 80089e2:	e7c7      	b.n	8008974 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 80089e4:	4a0a      	ldr	r2, [pc, #40]	; (8008a10 <xTaskIncrementTick+0x120>)
 80089e6:	6813      	ldr	r3, [r2, #0]
 80089e8:	3301      	adds	r3, #1
 80089ea:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 80089ec:	2400      	movs	r4, #0
 80089ee:	e7b4      	b.n	800895a <xTaskIncrementTick+0x6a>
 80089f0:	2001334c 	.word	0x2001334c
 80089f4:	200133c8 	.word	0x200133c8
 80089f8:	20012ed8 	.word	0x20012ed8
 80089fc:	20012edc 	.word	0x20012edc
 8008a00:	20013384 	.word	0x20013384
 8008a04:	20013380 	.word	0x20013380
 8008a08:	20012ee0 	.word	0x20012ee0
 8008a0c:	200133cc 	.word	0x200133cc
 8008a10:	20013348 	.word	0x20013348
 8008a14:	20012ed4 	.word	0x20012ed4
 8008a18:	20013354 	.word	0x20013354

08008a1c <xTaskResumeAll>:
{
 8008a1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8008a1e:	4c30      	ldr	r4, [pc, #192]	; (8008ae0 <xTaskResumeAll+0xc4>)
 8008a20:	6823      	ldr	r3, [r4, #0]
 8008a22:	b943      	cbnz	r3, 8008a36 <xTaskResumeAll+0x1a>
 8008a24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a28:	f383 8811 	msr	BASEPRI, r3
 8008a2c:	f3bf 8f6f 	isb	sy
 8008a30:	f3bf 8f4f 	dsb	sy
 8008a34:	e7fe      	b.n	8008a34 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8008a36:	f7fe feed 	bl	8007814 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008a3a:	6823      	ldr	r3, [r4, #0]
 8008a3c:	3b01      	subs	r3, #1
 8008a3e:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008a40:	6824      	ldr	r4, [r4, #0]
 8008a42:	b12c      	cbz	r4, 8008a50 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8008a44:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008a46:	f7fe ff07 	bl	8007858 <vPortExitCritical>
}
 8008a4a:	4620      	mov	r0, r4
 8008a4c:	b003      	add	sp, #12
 8008a4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008a50:	4b24      	ldr	r3, [pc, #144]	; (8008ae4 <xTaskResumeAll+0xc8>)
 8008a52:	681b      	ldr	r3, [r3, #0]
 8008a54:	2b00      	cmp	r3, #0
 8008a56:	d0f5      	beq.n	8008a44 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008a58:	4d23      	ldr	r5, [pc, #140]	; (8008ae8 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 8008a5a:	4e24      	ldr	r6, [pc, #144]	; (8008aec <xTaskResumeAll+0xd0>)
 8008a5c:	4f24      	ldr	r7, [pc, #144]	; (8008af0 <xTaskResumeAll+0xd4>)
 8008a5e:	e01e      	b.n	8008a9e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a60:	68eb      	ldr	r3, [r5, #12]
 8008a62:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008a64:	f104 0018 	add.w	r0, r4, #24
 8008a68:	f7fe fe59 	bl	800771e <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008a6c:	1d21      	adds	r1, r4, #4
 8008a6e:	4608      	mov	r0, r1
 8008a70:	9101      	str	r1, [sp, #4]
 8008a72:	f7fe fe54 	bl	800771e <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008a76:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008a78:	6832      	ldr	r2, [r6, #0]
 8008a7a:	9901      	ldr	r1, [sp, #4]
 8008a7c:	2014      	movs	r0, #20
 8008a7e:	4293      	cmp	r3, r2
 8008a80:	fb00 7003 	mla	r0, r0, r3, r7
 8008a84:	bf88      	it	hi
 8008a86:	6033      	strhi	r3, [r6, #0]
 8008a88:	f7fe fe26 	bl	80076d8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008a8c:	4b19      	ldr	r3, [pc, #100]	; (8008af4 <xTaskResumeAll+0xd8>)
 8008a8e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008a90:	681b      	ldr	r3, [r3, #0]
 8008a92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a94:	429a      	cmp	r2, r3
 8008a96:	d302      	bcc.n	8008a9e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8008a98:	4b17      	ldr	r3, [pc, #92]	; (8008af8 <xTaskResumeAll+0xdc>)
 8008a9a:	2201      	movs	r2, #1
 8008a9c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008a9e:	682b      	ldr	r3, [r5, #0]
 8008aa0:	2b00      	cmp	r3, #0
 8008aa2:	d1dd      	bne.n	8008a60 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8008aa4:	b10c      	cbz	r4, 8008aaa <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8008aa6:	f7ff fd81 	bl	80085ac <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8008aaa:	4d14      	ldr	r5, [pc, #80]	; (8008afc <xTaskResumeAll+0xe0>)
 8008aac:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8008aae:	b144      	cbz	r4, 8008ac2 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8008ab0:	4e11      	ldr	r6, [pc, #68]	; (8008af8 <xTaskResumeAll+0xdc>)
 8008ab2:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008ab4:	f7ff ff1c 	bl	80088f0 <xTaskIncrementTick>
 8008ab8:	b100      	cbz	r0, 8008abc <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8008aba:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8008abc:	3c01      	subs	r4, #1
 8008abe:	d1f9      	bne.n	8008ab4 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8008ac0:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008ac2:	4b0d      	ldr	r3, [pc, #52]	; (8008af8 <xTaskResumeAll+0xdc>)
 8008ac4:	681b      	ldr	r3, [r3, #0]
 8008ac6:	2b00      	cmp	r3, #0
 8008ac8:	d0bc      	beq.n	8008a44 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8008aca:	4b0d      	ldr	r3, [pc, #52]	; (8008b00 <xTaskResumeAll+0xe4>)
 8008acc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008ad0:	601a      	str	r2, [r3, #0]
 8008ad2:	f3bf 8f4f 	dsb	sy
 8008ad6:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008ada:	2401      	movs	r4, #1
 8008adc:	e7b3      	b.n	8008a46 <xTaskResumeAll+0x2a>
 8008ade:	bf00      	nop
 8008ae0:	2001334c 	.word	0x2001334c
 8008ae4:	20013340 	.word	0x20013340
 8008ae8:	20013388 	.word	0x20013388
 8008aec:	20013354 	.word	0x20013354
 8008af0:	20012ee0 	.word	0x20012ee0
 8008af4:	20012ed4 	.word	0x20012ed4
 8008af8:	200133cc 	.word	0x200133cc
 8008afc:	20013348 	.word	0x20013348
 8008b00:	e000ed04 	.word	0xe000ed04

08008b04 <vTaskDelay>:
	{
 8008b04:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008b06:	b940      	cbnz	r0, 8008b1a <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 8008b08:	4b0e      	ldr	r3, [pc, #56]	; (8008b44 <vTaskDelay+0x40>)
 8008b0a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008b0e:	601a      	str	r2, [r3, #0]
 8008b10:	f3bf 8f4f 	dsb	sy
 8008b14:	f3bf 8f6f 	isb	sy
	}
 8008b18:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008b1a:	4b0b      	ldr	r3, [pc, #44]	; (8008b48 <vTaskDelay+0x44>)
 8008b1c:	6819      	ldr	r1, [r3, #0]
 8008b1e:	b141      	cbz	r1, 8008b32 <vTaskDelay+0x2e>
 8008b20:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b24:	f383 8811 	msr	BASEPRI, r3
 8008b28:	f3bf 8f6f 	isb	sy
 8008b2c:	f3bf 8f4f 	dsb	sy
 8008b30:	e7fe      	b.n	8008b30 <vTaskDelay+0x2c>
			vTaskSuspendAll();
 8008b32:	f7ff fecf 	bl	80088d4 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008b36:	f7ff fde9 	bl	800870c <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008b3a:	f7ff ff6f 	bl	8008a1c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8008b3e:	2800      	cmp	r0, #0
 8008b40:	d0e2      	beq.n	8008b08 <vTaskDelay+0x4>
 8008b42:	e7e9      	b.n	8008b18 <vTaskDelay+0x14>
 8008b44:	e000ed04 	.word	0xe000ed04
 8008b48:	2001334c 	.word	0x2001334c

08008b4c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008b4c:	4b18      	ldr	r3, [pc, #96]	; (8008bb0 <vTaskSwitchContext+0x64>)
 8008b4e:	681a      	ldr	r2, [r3, #0]
 8008b50:	4b18      	ldr	r3, [pc, #96]	; (8008bb4 <vTaskSwitchContext+0x68>)
{
 8008b52:	b5f0      	push	{r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008b54:	b112      	cbz	r2, 8008b5c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008b56:	2201      	movs	r2, #1
 8008b58:	601a      	str	r2, [r3, #0]
}
 8008b5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b5c:	4d16      	ldr	r5, [pc, #88]	; (8008bb8 <vTaskSwitchContext+0x6c>)
		xYieldPending = pdFALSE;
 8008b5e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b60:	4a16      	ldr	r2, [pc, #88]	; (8008bbc <vTaskSwitchContext+0x70>)
 8008b62:	682b      	ldr	r3, [r5, #0]
 8008b64:	2714      	movs	r7, #20
 8008b66:	4616      	mov	r6, r2
 8008b68:	fb07 f103 	mul.w	r1, r7, r3
 8008b6c:	1850      	adds	r0, r2, r1
 8008b6e:	5854      	ldr	r4, [r2, r1]
 8008b70:	b18c      	cbz	r4, 8008b96 <vTaskSwitchContext+0x4a>
 8008b72:	6844      	ldr	r4, [r0, #4]
 8008b74:	3108      	adds	r1, #8
 8008b76:	6864      	ldr	r4, [r4, #4]
 8008b78:	6044      	str	r4, [r0, #4]
 8008b7a:	440a      	add	r2, r1
 8008b7c:	4294      	cmp	r4, r2
 8008b7e:	bf04      	itt	eq
 8008b80:	6862      	ldreq	r2, [r4, #4]
 8008b82:	6042      	streq	r2, [r0, #4]
 8008b84:	2214      	movs	r2, #20
 8008b86:	fb02 6203 	mla	r2, r2, r3, r6
 8008b8a:	6852      	ldr	r2, [r2, #4]
 8008b8c:	68d1      	ldr	r1, [r2, #12]
 8008b8e:	4a0c      	ldr	r2, [pc, #48]	; (8008bc0 <vTaskSwitchContext+0x74>)
 8008b90:	6011      	str	r1, [r2, #0]
 8008b92:	602b      	str	r3, [r5, #0]
}
 8008b94:	e7e1      	b.n	8008b5a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b96:	b943      	cbnz	r3, 8008baa <vTaskSwitchContext+0x5e>
 8008b98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b9c:	f383 8811 	msr	BASEPRI, r3
 8008ba0:	f3bf 8f6f 	isb	sy
 8008ba4:	f3bf 8f4f 	dsb	sy
 8008ba8:	e7fe      	b.n	8008ba8 <vTaskSwitchContext+0x5c>
 8008baa:	3b01      	subs	r3, #1
 8008bac:	e7dc      	b.n	8008b68 <vTaskSwitchContext+0x1c>
 8008bae:	bf00      	nop
 8008bb0:	2001334c 	.word	0x2001334c
 8008bb4:	200133cc 	.word	0x200133cc
 8008bb8:	20013354 	.word	0x20013354
 8008bbc:	20012ee0 	.word	0x20012ee0
 8008bc0:	20012ed4 	.word	0x20012ed4

08008bc4 <vTaskPlaceOnEventList>:
{
 8008bc4:	b510      	push	{r4, lr}
 8008bc6:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008bc8:	b940      	cbnz	r0, 8008bdc <vTaskPlaceOnEventList+0x18>
 8008bca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bce:	f383 8811 	msr	BASEPRI, r3
 8008bd2:	f3bf 8f6f 	isb	sy
 8008bd6:	f3bf 8f4f 	dsb	sy
 8008bda:	e7fe      	b.n	8008bda <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008bdc:	4b05      	ldr	r3, [pc, #20]	; (8008bf4 <vTaskPlaceOnEventList+0x30>)
 8008bde:	6819      	ldr	r1, [r3, #0]
 8008be0:	3118      	adds	r1, #24
 8008be2:	f7fe fd85 	bl	80076f0 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008be6:	4620      	mov	r0, r4
 8008be8:	2101      	movs	r1, #1
}
 8008bea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008bee:	f7ff bd8d 	b.w	800870c <prvAddCurrentTaskToDelayedList>
 8008bf2:	bf00      	nop
 8008bf4:	20012ed4 	.word	0x20012ed4

08008bf8 <vTaskPlaceOnEventListRestricted>:
	{
 8008bf8:	b538      	push	{r3, r4, r5, lr}
 8008bfa:	460d      	mov	r5, r1
 8008bfc:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008bfe:	b940      	cbnz	r0, 8008c12 <vTaskPlaceOnEventListRestricted+0x1a>
 8008c00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c04:	f383 8811 	msr	BASEPRI, r3
 8008c08:	f3bf 8f6f 	isb	sy
 8008c0c:	f3bf 8f4f 	dsb	sy
 8008c10:	e7fe      	b.n	8008c10 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008c12:	4b07      	ldr	r3, [pc, #28]	; (8008c30 <vTaskPlaceOnEventListRestricted+0x38>)
 8008c14:	6819      	ldr	r1, [r3, #0]
 8008c16:	3118      	adds	r1, #24
 8008c18:	f7fe fd5e 	bl	80076d8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008c1c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008c1e:	4621      	mov	r1, r4
 8008c20:	bf0c      	ite	eq
 8008c22:	4628      	moveq	r0, r5
 8008c24:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008c28:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008c2c:	f7ff bd6e 	b.w	800870c <prvAddCurrentTaskToDelayedList>
 8008c30:	20012ed4 	.word	0x20012ed4

08008c34 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c34:	68c3      	ldr	r3, [r0, #12]
{
 8008c36:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c38:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008c3a:	b944      	cbnz	r4, 8008c4e <xTaskRemoveFromEventList+0x1a>
 8008c3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c40:	f383 8811 	msr	BASEPRI, r3
 8008c44:	f3bf 8f6f 	isb	sy
 8008c48:	f3bf 8f4f 	dsb	sy
 8008c4c:	e7fe      	b.n	8008c4c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8008c4e:	f104 0118 	add.w	r1, r4, #24
 8008c52:	4608      	mov	r0, r1
 8008c54:	9101      	str	r1, [sp, #4]
 8008c56:	f7fe fd62 	bl	800771e <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008c5a:	4b12      	ldr	r3, [pc, #72]	; (8008ca4 <xTaskRemoveFromEventList+0x70>)
 8008c5c:	9901      	ldr	r1, [sp, #4]
 8008c5e:	681b      	ldr	r3, [r3, #0]
 8008c60:	b9eb      	cbnz	r3, 8008c9e <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8008c62:	1d21      	adds	r1, r4, #4
 8008c64:	4608      	mov	r0, r1
 8008c66:	9101      	str	r1, [sp, #4]
 8008c68:	f7fe fd59 	bl	800771e <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008c6c:	4a0e      	ldr	r2, [pc, #56]	; (8008ca8 <xTaskRemoveFromEventList+0x74>)
 8008c6e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008c70:	6810      	ldr	r0, [r2, #0]
 8008c72:	9901      	ldr	r1, [sp, #4]
 8008c74:	4283      	cmp	r3, r0
 8008c76:	bf88      	it	hi
 8008c78:	6013      	strhi	r3, [r2, #0]
 8008c7a:	4a0c      	ldr	r2, [pc, #48]	; (8008cac <xTaskRemoveFromEventList+0x78>)
 8008c7c:	2014      	movs	r0, #20
 8008c7e:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008c82:	f7fe fd29 	bl	80076d8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008c86:	4b0a      	ldr	r3, [pc, #40]	; (8008cb0 <xTaskRemoveFromEventList+0x7c>)
 8008c88:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008c8a:	681b      	ldr	r3, [r3, #0]
 8008c8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c8e:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8008c90:	bf85      	ittet	hi
 8008c92:	4b08      	ldrhi	r3, [pc, #32]	; (8008cb4 <xTaskRemoveFromEventList+0x80>)
 8008c94:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8008c96:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8008c98:	6018      	strhi	r0, [r3, #0]
}
 8008c9a:	b002      	add	sp, #8
 8008c9c:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008c9e:	4806      	ldr	r0, [pc, #24]	; (8008cb8 <xTaskRemoveFromEventList+0x84>)
 8008ca0:	e7ef      	b.n	8008c82 <xTaskRemoveFromEventList+0x4e>
 8008ca2:	bf00      	nop
 8008ca4:	2001334c 	.word	0x2001334c
 8008ca8:	20013354 	.word	0x20013354
 8008cac:	20012ee0 	.word	0x20012ee0
 8008cb0:	20012ed4 	.word	0x20012ed4
 8008cb4:	200133cc 	.word	0x200133cc
 8008cb8:	20013388 	.word	0x20013388

08008cbc <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008cbc:	4b03      	ldr	r3, [pc, #12]	; (8008ccc <vTaskInternalSetTimeOutState+0x10>)
 8008cbe:	681b      	ldr	r3, [r3, #0]
 8008cc0:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8008cc2:	4b03      	ldr	r3, [pc, #12]	; (8008cd0 <vTaskInternalSetTimeOutState+0x14>)
 8008cc4:	681b      	ldr	r3, [r3, #0]
 8008cc6:	6043      	str	r3, [r0, #4]
}
 8008cc8:	4770      	bx	lr
 8008cca:	bf00      	nop
 8008ccc:	20013384 	.word	0x20013384
 8008cd0:	200133c8 	.word	0x200133c8

08008cd4 <xTaskCheckForTimeOut>:
{
 8008cd4:	b570      	push	{r4, r5, r6, lr}
 8008cd6:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008cd8:	4605      	mov	r5, r0
 8008cda:	b940      	cbnz	r0, 8008cee <xTaskCheckForTimeOut+0x1a>
 8008cdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ce0:	f383 8811 	msr	BASEPRI, r3
 8008ce4:	f3bf 8f6f 	isb	sy
 8008ce8:	f3bf 8f4f 	dsb	sy
 8008cec:	e7fe      	b.n	8008cec <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8008cee:	b941      	cbnz	r1, 8008d02 <xTaskCheckForTimeOut+0x2e>
 8008cf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cf4:	f383 8811 	msr	BASEPRI, r3
 8008cf8:	f3bf 8f6f 	isb	sy
 8008cfc:	f3bf 8f4f 	dsb	sy
 8008d00:	e7fe      	b.n	8008d00 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8008d02:	f7fe fd87 	bl	8007814 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008d06:	4b0f      	ldr	r3, [pc, #60]	; (8008d44 <xTaskCheckForTimeOut+0x70>)
 8008d08:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008d0a:	6823      	ldr	r3, [r4, #0]
 8008d0c:	1c5a      	adds	r2, r3, #1
 8008d0e:	d010      	beq.n	8008d32 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008d10:	480d      	ldr	r0, [pc, #52]	; (8008d48 <xTaskCheckForTimeOut+0x74>)
 8008d12:	682e      	ldr	r6, [r5, #0]
 8008d14:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008d16:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008d18:	4286      	cmp	r6, r0
 8008d1a:	d001      	beq.n	8008d20 <xTaskCheckForTimeOut+0x4c>
 8008d1c:	428a      	cmp	r2, r1
 8008d1e:	d90f      	bls.n	8008d40 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008d20:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008d22:	4283      	cmp	r3, r0
 8008d24:	d90a      	bls.n	8008d3c <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008d26:	1a5b      	subs	r3, r3, r1
 8008d28:	4413      	add	r3, r2
 8008d2a:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008d2c:	4628      	mov	r0, r5
 8008d2e:	f7ff ffc5 	bl	8008cbc <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008d32:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008d34:	f7fe fd90 	bl	8007858 <vPortExitCritical>
}
 8008d38:	4620      	mov	r0, r4
 8008d3a:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008d3c:	2300      	movs	r3, #0
 8008d3e:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008d40:	2401      	movs	r4, #1
 8008d42:	e7f7      	b.n	8008d34 <xTaskCheckForTimeOut+0x60>
 8008d44:	200133c8 	.word	0x200133c8
 8008d48:	20013384 	.word	0x20013384

08008d4c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008d4c:	4b01      	ldr	r3, [pc, #4]	; (8008d54 <vTaskMissedYield+0x8>)
 8008d4e:	2201      	movs	r2, #1
 8008d50:	601a      	str	r2, [r3, #0]
}
 8008d52:	4770      	bx	lr
 8008d54:	200133cc 	.word	0x200133cc

08008d58 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008d58:	4b05      	ldr	r3, [pc, #20]	; (8008d70 <xTaskGetSchedulerState+0x18>)
 8008d5a:	681b      	ldr	r3, [r3, #0]
 8008d5c:	b133      	cbz	r3, 8008d6c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008d5e:	4b05      	ldr	r3, [pc, #20]	; (8008d74 <xTaskGetSchedulerState+0x1c>)
 8008d60:	681b      	ldr	r3, [r3, #0]
 8008d62:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 8008d64:	bf0c      	ite	eq
 8008d66:	2002      	moveq	r0, #2
 8008d68:	2000      	movne	r0, #0
 8008d6a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008d6c:	2001      	movs	r0, #1
	}
 8008d6e:	4770      	bx	lr
 8008d70:	2001339c 	.word	0x2001339c
 8008d74:	2001334c 	.word	0x2001334c

08008d78 <xTaskPriorityInherit>:
	{
 8008d78:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008d7a:	4604      	mov	r4, r0
 8008d7c:	b350      	cbz	r0, 8008dd4 <xTaskPriorityInherit+0x5c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008d7e:	4a1c      	ldr	r2, [pc, #112]	; (8008df0 <xTaskPriorityInherit+0x78>)
 8008d80:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008d82:	6811      	ldr	r1, [r2, #0]
 8008d84:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8008d86:	428b      	cmp	r3, r1
 8008d88:	4616      	mov	r6, r2
 8008d8a:	d229      	bcs.n	8008de0 <xTaskPriorityInherit+0x68>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008d8c:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008d8e:	4d19      	ldr	r5, [pc, #100]	; (8008df4 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008d90:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008d92:	bfa1      	itttt	ge
 8008d94:	6832      	ldrge	r2, [r6, #0]
 8008d96:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8008d98:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8008d9c:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008d9e:	2214      	movs	r2, #20
 8008da0:	fb02 5303 	mla	r3, r2, r3, r5
 8008da4:	6942      	ldr	r2, [r0, #20]
 8008da6:	429a      	cmp	r2, r3
 8008da8:	d116      	bne.n	8008dd8 <xTaskPriorityInherit+0x60>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008daa:	1d01      	adds	r1, r0, #4
 8008dac:	4608      	mov	r0, r1
 8008dae:	9101      	str	r1, [sp, #4]
 8008db0:	f7fe fcb5 	bl	800771e <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008db4:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008db6:	4a10      	ldr	r2, [pc, #64]	; (8008df8 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008db8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008dba:	6810      	ldr	r0, [r2, #0]
 8008dbc:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008dbe:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008dc0:	4283      	cmp	r3, r0
 8008dc2:	f04f 0014 	mov.w	r0, #20
 8008dc6:	fb00 5003 	mla	r0, r0, r3, r5
 8008dca:	bf88      	it	hi
 8008dcc:	6013      	strhi	r3, [r2, #0]
 8008dce:	f7fe fc83 	bl	80076d8 <vListInsertEnd>
				xReturn = pdTRUE;
 8008dd2:	2001      	movs	r0, #1
	}
 8008dd4:	b002      	add	sp, #8
 8008dd6:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008dd8:	6833      	ldr	r3, [r6, #0]
 8008dda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ddc:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008dde:	e7f8      	b.n	8008dd2 <xTaskPriorityInherit+0x5a>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008de0:	6813      	ldr	r3, [r2, #0]
 8008de2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008de4:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008de6:	42a0      	cmp	r0, r4
 8008de8:	bf2c      	ite	cs
 8008dea:	2000      	movcs	r0, #0
 8008dec:	2001      	movcc	r0, #1
 8008dee:	e7f1      	b.n	8008dd4 <xTaskPriorityInherit+0x5c>
 8008df0:	20012ed4 	.word	0x20012ed4
 8008df4:	20012ee0 	.word	0x20012ee0
 8008df8:	20013354 	.word	0x20013354

08008dfc <xTaskPriorityDisinherit>:
	{
 8008dfc:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8008dfe:	b910      	cbnz	r0, 8008e06 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8008e00:	2000      	movs	r0, #0
	}
 8008e02:	b002      	add	sp, #8
 8008e04:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008e06:	4b1c      	ldr	r3, [pc, #112]	; (8008e78 <xTaskPriorityDisinherit+0x7c>)
 8008e08:	681c      	ldr	r4, [r3, #0]
 8008e0a:	4284      	cmp	r4, r0
 8008e0c:	d008      	beq.n	8008e20 <xTaskPriorityDisinherit+0x24>
 8008e0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e12:	f383 8811 	msr	BASEPRI, r3
 8008e16:	f3bf 8f6f 	isb	sy
 8008e1a:	f3bf 8f4f 	dsb	sy
 8008e1e:	e7fe      	b.n	8008e1e <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8008e20:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8008e22:	b943      	cbnz	r3, 8008e36 <xTaskPriorityDisinherit+0x3a>
 8008e24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e28:	f383 8811 	msr	BASEPRI, r3
 8008e2c:	f3bf 8f6f 	isb	sy
 8008e30:	f3bf 8f4f 	dsb	sy
 8008e34:	e7fe      	b.n	8008e34 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008e36:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008e38:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008e3a:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008e3c:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8008e3e:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008e40:	d0de      	beq.n	8008e00 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8008e42:	2b00      	cmp	r3, #0
 8008e44:	d1dc      	bne.n	8008e00 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008e46:	1d21      	adds	r1, r4, #4
 8008e48:	4608      	mov	r0, r1
 8008e4a:	9101      	str	r1, [sp, #4]
 8008e4c:	f7fe fc67 	bl	800771e <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008e50:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8008e52:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008e54:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008e56:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008e5a:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008e5c:	4a07      	ldr	r2, [pc, #28]	; (8008e7c <xTaskPriorityDisinherit+0x80>)
 8008e5e:	6810      	ldr	r0, [r2, #0]
 8008e60:	4283      	cmp	r3, r0
 8008e62:	bf88      	it	hi
 8008e64:	6013      	strhi	r3, [r2, #0]
 8008e66:	4a06      	ldr	r2, [pc, #24]	; (8008e80 <xTaskPriorityDisinherit+0x84>)
 8008e68:	2014      	movs	r0, #20
 8008e6a:	fb00 2003 	mla	r0, r0, r3, r2
 8008e6e:	f7fe fc33 	bl	80076d8 <vListInsertEnd>
					xReturn = pdTRUE;
 8008e72:	2001      	movs	r0, #1
		return xReturn;
 8008e74:	e7c5      	b.n	8008e02 <xTaskPriorityDisinherit+0x6>
 8008e76:	bf00      	nop
 8008e78:	20012ed4 	.word	0x20012ed4
 8008e7c:	20013354 	.word	0x20013354
 8008e80:	20012ee0 	.word	0x20012ee0

08008e84 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008e84:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008e86:	4604      	mov	r4, r0
 8008e88:	2800      	cmp	r0, #0
 8008e8a:	d044      	beq.n	8008f16 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8008e8c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008e8e:	b942      	cbnz	r2, 8008ea2 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8008e90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e94:	f383 8811 	msr	BASEPRI, r3
 8008e98:	f3bf 8f6f 	isb	sy
 8008e9c:	f3bf 8f4f 	dsb	sy
 8008ea0:	e7fe      	b.n	8008ea0 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8008ea2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008ea4:	4299      	cmp	r1, r3
 8008ea6:	bf38      	it	cc
 8008ea8:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008eaa:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008eac:	428b      	cmp	r3, r1
 8008eae:	d032      	beq.n	8008f16 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008eb0:	2a01      	cmp	r2, #1
 8008eb2:	d130      	bne.n	8008f16 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8008eb4:	4a19      	ldr	r2, [pc, #100]	; (8008f1c <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008eb6:	6812      	ldr	r2, [r2, #0]
 8008eb8:	4282      	cmp	r2, r0
 8008eba:	d108      	bne.n	8008ece <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8008ebc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ec0:	f383 8811 	msr	BASEPRI, r3
 8008ec4:	f3bf 8f6f 	isb	sy
 8008ec8:	f3bf 8f4f 	dsb	sy
 8008ecc:	e7fe      	b.n	8008ecc <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008ece:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008ed0:	4d13      	ldr	r5, [pc, #76]	; (8008f20 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8008ed2:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008ed4:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008ed6:	f04f 0214 	mov.w	r2, #20
 8008eda:	fb02 5303 	mla	r3, r2, r3, r5
 8008ede:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008ee0:	bfa4      	itt	ge
 8008ee2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8008ee6:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008ee8:	429a      	cmp	r2, r3
 8008eea:	d114      	bne.n	8008f16 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008eec:	1d01      	adds	r1, r0, #4
 8008eee:	4608      	mov	r0, r1
 8008ef0:	9101      	str	r1, [sp, #4]
 8008ef2:	f7fe fc14 	bl	800771e <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008ef6:	4a0b      	ldr	r2, [pc, #44]	; (8008f24 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8008ef8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008efa:	6810      	ldr	r0, [r2, #0]
 8008efc:	9901      	ldr	r1, [sp, #4]
 8008efe:	4283      	cmp	r3, r0
 8008f00:	f04f 0014 	mov.w	r0, #20
 8008f04:	fb00 5003 	mla	r0, r0, r3, r5
 8008f08:	bf88      	it	hi
 8008f0a:	6013      	strhi	r3, [r2, #0]
	}
 8008f0c:	b003      	add	sp, #12
 8008f0e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8008f12:	f7fe bbe1 	b.w	80076d8 <vListInsertEnd>
	}
 8008f16:	b003      	add	sp, #12
 8008f18:	bd30      	pop	{r4, r5, pc}
 8008f1a:	bf00      	nop
 8008f1c:	20012ed4 	.word	0x20012ed4
 8008f20:	20012ee0 	.word	0x20012ee0
 8008f24:	20013354 	.word	0x20013354

08008f28 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008f28:	4b04      	ldr	r3, [pc, #16]	; (8008f3c <pvTaskIncrementMutexHeldCount+0x14>)
 8008f2a:	681a      	ldr	r2, [r3, #0]
 8008f2c:	b11a      	cbz	r2, 8008f36 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8008f2e:	6819      	ldr	r1, [r3, #0]
 8008f30:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8008f32:	3201      	adds	r2, #1
 8008f34:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8008f36:	6818      	ldr	r0, [r3, #0]
	}
 8008f38:	4770      	bx	lr
 8008f3a:	bf00      	nop
 8008f3c:	20012ed4 	.word	0x20012ed4

08008f40 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8008f40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8008f42:	4c11      	ldr	r4, [pc, #68]	; (8008f88 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8008f44:	f7fe fc66 	bl	8007814 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8008f48:	6825      	ldr	r5, [r4, #0]
 8008f4a:	b9bd      	cbnz	r5, 8008f7c <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8008f4c:	4f0f      	ldr	r7, [pc, #60]	; (8008f8c <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8008f4e:	4e10      	ldr	r6, [pc, #64]	; (8008f90 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8008f50:	4638      	mov	r0, r7
 8008f52:	f7fe fbb3 	bl	80076bc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8008f56:	4630      	mov	r0, r6
 8008f58:	f7fe fbb0 	bl	80076bc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8008f5c:	4b0d      	ldr	r3, [pc, #52]	; (8008f94 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008f5e:	4a0e      	ldr	r2, [pc, #56]	; (8008f98 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8008f60:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8008f62:	4b0e      	ldr	r3, [pc, #56]	; (8008f9c <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008f64:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8008f66:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008f68:	200a      	movs	r0, #10
 8008f6a:	4b0d      	ldr	r3, [pc, #52]	; (8008fa0 <prvCheckForValidListAndQueue+0x60>)
 8008f6c:	9500      	str	r5, [sp, #0]
 8008f6e:	f7fe fe69 	bl	8007c44 <xQueueGenericCreateStatic>
 8008f72:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008f74:	b110      	cbz	r0, 8008f7c <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008f76:	490b      	ldr	r1, [pc, #44]	; (8008fa4 <prvCheckForValidListAndQueue+0x64>)
 8008f78:	f7ff fa36 	bl	80083e8 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008f7c:	b003      	add	sp, #12
 8008f7e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8008f82:	f7fe bc69 	b.w	8007858 <vPortExitCritical>
 8008f86:	bf00      	nop
 8008f88:	200134f4 	.word	0x200134f4
 8008f8c:	20013478 	.word	0x20013478
 8008f90:	2001348c 	.word	0x2001348c
 8008f94:	200133d0 	.word	0x200133d0
 8008f98:	200133d8 	.word	0x200133d8
 8008f9c:	200133d4 	.word	0x200133d4
 8008fa0:	200134a4 	.word	0x200134a4
 8008fa4:	0801e911 	.word	0x0801e911

08008fa8 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8008fa8:	4291      	cmp	r1, r2
{
 8008faa:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008fac:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008fae:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8008fb0:	d80a      	bhi.n	8008fc8 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008fb2:	1ad2      	subs	r2, r2, r3
 8008fb4:	6983      	ldr	r3, [r0, #24]
 8008fb6:	429a      	cmp	r2, r3
 8008fb8:	d20d      	bcs.n	8008fd6 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008fba:	4b08      	ldr	r3, [pc, #32]	; (8008fdc <prvInsertTimerInActiveList+0x34>)
 8008fbc:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008fbe:	6818      	ldr	r0, [r3, #0]
 8008fc0:	f7fe fb96 	bl	80076f0 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8008fc4:	2000      	movs	r0, #0
}
 8008fc6:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008fc8:	429a      	cmp	r2, r3
 8008fca:	d201      	bcs.n	8008fd0 <prvInsertTimerInActiveList+0x28>
 8008fcc:	4299      	cmp	r1, r3
 8008fce:	d202      	bcs.n	8008fd6 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008fd0:	4b03      	ldr	r3, [pc, #12]	; (8008fe0 <prvInsertTimerInActiveList+0x38>)
 8008fd2:	1d01      	adds	r1, r0, #4
 8008fd4:	e7f3      	b.n	8008fbe <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8008fd6:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008fd8:	e7f5      	b.n	8008fc6 <prvInsertTimerInActiveList+0x1e>
 8008fda:	bf00      	nop
 8008fdc:	200133d4 	.word	0x200133d4
 8008fe0:	200133d0 	.word	0x200133d0

08008fe4 <xTimerCreateTimerTask>:
{
 8008fe4:	b510      	push	{r4, lr}
 8008fe6:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008fe8:	f7ff ffaa 	bl	8008f40 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008fec:	4b12      	ldr	r3, [pc, #72]	; (8009038 <xTimerCreateTimerTask+0x54>)
 8008fee:	681b      	ldr	r3, [r3, #0]
 8008ff0:	b1b3      	cbz	r3, 8009020 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8008ff2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008ff4:	aa07      	add	r2, sp, #28
 8008ff6:	a906      	add	r1, sp, #24
 8008ff8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008ffa:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008ffe:	f7fe fa69 	bl	80074d4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009002:	9b05      	ldr	r3, [sp, #20]
 8009004:	9302      	str	r3, [sp, #8]
 8009006:	9b06      	ldr	r3, [sp, #24]
 8009008:	9301      	str	r3, [sp, #4]
 800900a:	2302      	movs	r3, #2
 800900c:	9300      	str	r3, [sp, #0]
 800900e:	9a07      	ldr	r2, [sp, #28]
 8009010:	490a      	ldr	r1, [pc, #40]	; (800903c <xTimerCreateTimerTask+0x58>)
 8009012:	480b      	ldr	r0, [pc, #44]	; (8009040 <xTimerCreateTimerTask+0x5c>)
 8009014:	4623      	mov	r3, r4
 8009016:	f7ff fbb3 	bl	8008780 <xTaskCreateStatic>
 800901a:	4b0a      	ldr	r3, [pc, #40]	; (8009044 <xTimerCreateTimerTask+0x60>)
 800901c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800901e:	b940      	cbnz	r0, 8009032 <xTimerCreateTimerTask+0x4e>
 8009020:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009024:	f383 8811 	msr	BASEPRI, r3
 8009028:	f3bf 8f6f 	isb	sy
 800902c:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009030:	e7fe      	b.n	8009030 <xTimerCreateTimerTask+0x4c>
}
 8009032:	2001      	movs	r0, #1
 8009034:	b008      	add	sp, #32
 8009036:	bd10      	pop	{r4, pc}
 8009038:	200134f4 	.word	0x200134f4
 800903c:	0801e916 	.word	0x0801e916
 8009040:	0800911d 	.word	0x0800911d
 8009044:	200134f8 	.word	0x200134f8

08009048 <xTimerGenericCommand>:
{
 8009048:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800904a:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800904c:	4604      	mov	r4, r0
{
 800904e:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009050:	b940      	cbnz	r0, 8009064 <xTimerGenericCommand+0x1c>
 8009052:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009056:	f383 8811 	msr	BASEPRI, r3
 800905a:	f3bf 8f6f 	isb	sy
 800905e:	f3bf 8f4f 	dsb	sy
 8009062:	e7fe      	b.n	8009062 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009064:	4d0d      	ldr	r5, [pc, #52]	; (800909c <xTimerGenericCommand+0x54>)
 8009066:	6828      	ldr	r0, [r5, #0]
 8009068:	b180      	cbz	r0, 800908c <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800906a:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800906c:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009070:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009072:	dc0d      	bgt.n	8009090 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009074:	f7ff fe70 	bl	8008d58 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009078:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800907a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800907c:	bf08      	it	eq
 800907e:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009080:	6828      	ldr	r0, [r5, #0]
 8009082:	bf18      	it	ne
 8009084:	461a      	movne	r2, r3
 8009086:	4669      	mov	r1, sp
 8009088:	f7fe fe92 	bl	8007db0 <xQueueGenericSend>
}
 800908c:	b004      	add	sp, #16
 800908e:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009090:	2300      	movs	r3, #0
 8009092:	4669      	mov	r1, sp
 8009094:	f7fe ff3e 	bl	8007f14 <xQueueGenericSendFromISR>
 8009098:	e7f8      	b.n	800908c <xTimerGenericCommand+0x44>
 800909a:	bf00      	nop
 800909c:	200134f4 	.word	0x200134f4

080090a0 <prvSwitchTimerLists>:
{
 80090a0:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80090a2:	4d1c      	ldr	r5, [pc, #112]	; (8009114 <prvSwitchTimerLists+0x74>)
{
 80090a4:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80090a6:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80090a8:	682b      	ldr	r3, [r5, #0]
 80090aa:	681a      	ldr	r2, [r3, #0]
 80090ac:	b92a      	cbnz	r2, 80090ba <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
 80090ae:	4a1a      	ldr	r2, [pc, #104]	; (8009118 <prvSwitchTimerLists+0x78>)
 80090b0:	6811      	ldr	r1, [r2, #0]
 80090b2:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 80090b4:	6013      	str	r3, [r2, #0]
}
 80090b6:	b005      	add	sp, #20
 80090b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80090ba:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80090bc:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80090be:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80090c0:	1d21      	adds	r1, r4, #4
 80090c2:	4608      	mov	r0, r1
 80090c4:	9103      	str	r1, [sp, #12]
 80090c6:	f7fe fb2a 	bl	800771e <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80090ca:	6a23      	ldr	r3, [r4, #32]
 80090cc:	4620      	mov	r0, r4
 80090ce:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80090d0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80090d4:	9903      	ldr	r1, [sp, #12]
 80090d6:	f013 0f04 	tst.w	r3, #4
 80090da:	d0e5      	beq.n	80090a8 <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80090dc:	69a3      	ldr	r3, [r4, #24]
 80090de:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 80090e0:	429e      	cmp	r6, r3
 80090e2:	d205      	bcs.n	80090f0 <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80090e4:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80090e6:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80090e8:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80090ea:	f7fe fb01 	bl	80076f0 <vListInsert>
 80090ee:	e7db      	b.n	80090a8 <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80090f0:	2300      	movs	r3, #0
 80090f2:	9700      	str	r7, [sp, #0]
 80090f4:	4632      	mov	r2, r6
 80090f6:	4619      	mov	r1, r3
 80090f8:	4620      	mov	r0, r4
 80090fa:	f7ff ffa5 	bl	8009048 <xTimerGenericCommand>
				configASSERT( xResult );
 80090fe:	2800      	cmp	r0, #0
 8009100:	d1d2      	bne.n	80090a8 <prvSwitchTimerLists+0x8>
 8009102:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009106:	f383 8811 	msr	BASEPRI, r3
 800910a:	f3bf 8f6f 	isb	sy
 800910e:	f3bf 8f4f 	dsb	sy
 8009112:	e7fe      	b.n	8009112 <prvSwitchTimerLists+0x72>
 8009114:	200133d0 	.word	0x200133d0
 8009118:	200133d4 	.word	0x200133d4

0800911c <prvTimerTask>:
{
 800911c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009120:	4f77      	ldr	r7, [pc, #476]	; (8009300 <prvTimerTask+0x1e4>)
					portYIELD_WITHIN_API();
 8009122:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 8009310 <prvTimerTask+0x1f4>
{
 8009126:	b087      	sub	sp, #28
 8009128:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800912a:	683b      	ldr	r3, [r7, #0]
 800912c:	f8d3 b000 	ldr.w	fp, [r3]
 8009130:	f1bb 0f00 	cmp.w	fp, #0
 8009134:	d028      	beq.n	8009188 <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009136:	68db      	ldr	r3, [r3, #12]
 8009138:	f8d3 b000 	ldr.w	fp, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800913c:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 800913e:	4e71      	ldr	r6, [pc, #452]	; (8009304 <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
 8009140:	f7ff fbc8 	bl	80088d4 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 8009144:	f7ff fbce 	bl	80088e4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009148:	6833      	ldr	r3, [r6, #0]
 800914a:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800914c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800914e:	46b0      	mov	r8, r6
 8009150:	d31c      	bcc.n	800918c <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 8009152:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009154:	b31c      	cbz	r4, 800919e <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009156:	4b6c      	ldr	r3, [pc, #432]	; (8009308 <prvTimerTask+0x1ec>)
 8009158:	681b      	ldr	r3, [r3, #0]
 800915a:	681c      	ldr	r4, [r3, #0]
 800915c:	fab4 f484 	clz	r4, r4
 8009160:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009162:	4b6a      	ldr	r3, [pc, #424]	; (800930c <prvTimerTask+0x1f0>)
 8009164:	4622      	mov	r2, r4
 8009166:	6818      	ldr	r0, [r3, #0]
 8009168:	ebab 0105 	sub.w	r1, fp, r5
 800916c:	f7ff f97b 	bl	8008466 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009170:	f7ff fc54 	bl	8008a1c <xTaskResumeAll>
 8009174:	b978      	cbnz	r0, 8009196 <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
 8009176:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800917a:	f8ca 3000 	str.w	r3, [sl]
 800917e:	f3bf 8f4f 	dsb	sy
 8009182:	f3bf 8f6f 	isb	sy
 8009186:	e006      	b.n	8009196 <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009188:	2401      	movs	r4, #1
 800918a:	e7d8      	b.n	800913e <prvTimerTask+0x22>
		prvSwitchTimerLists();
 800918c:	f7ff ff88 	bl	80090a0 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8009190:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
 8009192:	f7ff fc43 	bl	8008a1c <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009196:	4e5d      	ldr	r6, [pc, #372]	; (800930c <prvTimerTask+0x1f0>)
 8009198:	f04f 0b00 	mov.w	fp, #0
 800919c:	e035      	b.n	800920a <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800919e:	4583      	cmp	fp, r0
 80091a0:	d8df      	bhi.n	8009162 <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
 80091a2:	f7ff fc3b 	bl	8008a1c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80091a6:	f8d9 3000 	ldr.w	r3, [r9]
 80091aa:	68db      	ldr	r3, [r3, #12]
 80091ac:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80091ae:	1d30      	adds	r0, r6, #4
 80091b0:	f7fe fab5 	bl	800771e <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80091b4:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 80091b8:	0758      	lsls	r0, r3, #29
 80091ba:	d518      	bpl.n	80091ee <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80091bc:	69b1      	ldr	r1, [r6, #24]
 80091be:	465b      	mov	r3, fp
 80091c0:	462a      	mov	r2, r5
 80091c2:	4459      	add	r1, fp
 80091c4:	4630      	mov	r0, r6
 80091c6:	f7ff feef 	bl	8008fa8 <prvInsertTimerInActiveList>
 80091ca:	b1a0      	cbz	r0, 80091f6 <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80091cc:	9400      	str	r4, [sp, #0]
 80091ce:	4623      	mov	r3, r4
 80091d0:	465a      	mov	r2, fp
 80091d2:	4621      	mov	r1, r4
 80091d4:	4630      	mov	r0, r6
 80091d6:	f7ff ff37 	bl	8009048 <xTimerGenericCommand>
			configASSERT( xResult );
 80091da:	b960      	cbnz	r0, 80091f6 <prvTimerTask+0xda>
 80091dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091e0:	f383 8811 	msr	BASEPRI, r3
 80091e4:	f3bf 8f6f 	isb	sy
 80091e8:	f3bf 8f4f 	dsb	sy
 80091ec:	e7fe      	b.n	80091ec <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80091ee:	f023 0301 	bic.w	r3, r3, #1
 80091f2:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80091f6:	6a33      	ldr	r3, [r6, #32]
 80091f8:	4630      	mov	r0, r6
 80091fa:	4798      	blx	r3
}
 80091fc:	e7cb      	b.n	8009196 <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80091fe:	9b03      	ldr	r3, [sp, #12]
 8009200:	9905      	ldr	r1, [sp, #20]
 8009202:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009204:	9b02      	ldr	r3, [sp, #8]
 8009206:	2b00      	cmp	r3, #0
 8009208:	da0a      	bge.n	8009220 <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800920a:	6830      	ldr	r0, [r6, #0]
 800920c:	2200      	movs	r2, #0
 800920e:	a902      	add	r1, sp, #8
 8009210:	f7fe ff36 	bl	8008080 <xQueueReceive>
 8009214:	2800      	cmp	r0, #0
 8009216:	d088      	beq.n	800912a <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009218:	9b02      	ldr	r3, [sp, #8]
 800921a:	9804      	ldr	r0, [sp, #16]
 800921c:	2b00      	cmp	r3, #0
 800921e:	dbee      	blt.n	80091fe <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8009220:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8009222:	6963      	ldr	r3, [r4, #20]
 8009224:	b9a3      	cbnz	r3, 8009250 <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
 8009226:	f7ff fb5d 	bl	80088e4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800922a:	f8d8 3000 	ldr.w	r3, [r8]
 800922e:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8009230:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009232:	d201      	bcs.n	8009238 <prvTimerTask+0x11c>
		prvSwitchTimerLists();
 8009234:	f7ff ff34 	bl	80090a0 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8009238:	9b02      	ldr	r3, [sp, #8]
 800923a:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
 800923e:	2b09      	cmp	r3, #9
 8009240:	d8e3      	bhi.n	800920a <prvTimerTask+0xee>
 8009242:	e8df f003 	tbb	[pc, r3]
 8009246:	0909      	.short	0x0909
 8009248:	543b3409 	.word	0x543b3409
 800924c:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009250:	1d20      	adds	r0, r4, #4
 8009252:	f7fe fa64 	bl	800771e <uxListRemove>
 8009256:	e7e6      	b.n	8009226 <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009258:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800925c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800925e:	f043 0301 	orr.w	r3, r3, #1
 8009262:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009266:	9b03      	ldr	r3, [sp, #12]
 8009268:	462a      	mov	r2, r5
 800926a:	4419      	add	r1, r3
 800926c:	4620      	mov	r0, r4
 800926e:	f7ff fe9b 	bl	8008fa8 <prvInsertTimerInActiveList>
 8009272:	2800      	cmp	r0, #0
 8009274:	d0c9      	beq.n	800920a <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009276:	6a23      	ldr	r3, [r4, #32]
 8009278:	4620      	mov	r0, r4
 800927a:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800927c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009280:	0759      	lsls	r1, r3, #29
 8009282:	d5c2      	bpl.n	800920a <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009284:	69a2      	ldr	r2, [r4, #24]
 8009286:	9903      	ldr	r1, [sp, #12]
 8009288:	f8cd b000 	str.w	fp, [sp]
 800928c:	2300      	movs	r3, #0
 800928e:	440a      	add	r2, r1
 8009290:	4620      	mov	r0, r4
 8009292:	4619      	mov	r1, r3
 8009294:	f7ff fed8 	bl	8009048 <xTimerGenericCommand>
							configASSERT( xResult );
 8009298:	2800      	cmp	r0, #0
 800929a:	d1b6      	bne.n	800920a <prvTimerTask+0xee>
 800929c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092a0:	f383 8811 	msr	BASEPRI, r3
 80092a4:	f3bf 8f6f 	isb	sy
 80092a8:	f3bf 8f4f 	dsb	sy
 80092ac:	e7fe      	b.n	80092ac <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80092ae:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80092b2:	f023 0301 	bic.w	r3, r3, #1
 80092b6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 80092ba:	e7a6      	b.n	800920a <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80092bc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80092c0:	9903      	ldr	r1, [sp, #12]
 80092c2:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80092c4:	f043 0301 	orr.w	r3, r3, #1
 80092c8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80092cc:	b941      	cbnz	r1, 80092e0 <prvTimerTask+0x1c4>
 80092ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092d2:	f383 8811 	msr	BASEPRI, r3
 80092d6:	f3bf 8f6f 	isb	sy
 80092da:	f3bf 8f4f 	dsb	sy
 80092de:	e7fe      	b.n	80092de <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80092e0:	462b      	mov	r3, r5
 80092e2:	462a      	mov	r2, r5
 80092e4:	4429      	add	r1, r5
 80092e6:	4620      	mov	r0, r4
 80092e8:	f7ff fe5e 	bl	8008fa8 <prvInsertTimerInActiveList>
					break;
 80092ec:	e78d      	b.n	800920a <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80092ee:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80092f2:	079a      	lsls	r2, r3, #30
 80092f4:	d4dd      	bmi.n	80092b2 <prvTimerTask+0x196>
							vPortFree( pxTimer );
 80092f6:	4620      	mov	r0, r4
 80092f8:	f7fe f9a8 	bl	800764c <vPortFree>
 80092fc:	e785      	b.n	800920a <prvTimerTask+0xee>
 80092fe:	bf00      	nop
 8009300:	200133d0 	.word	0x200133d0
 8009304:	200134a0 	.word	0x200134a0
 8009308:	200133d4 	.word	0x200133d4
 800930c:	200134f4 	.word	0x200134f4
 8009310:	e000ed04 	.word	0xe000ed04

08009314 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009314:	8880      	ldrh	r0, [r0, #4]
 8009316:	4770      	bx	lr

08009318 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009318:	2300      	movs	r3, #0
 800931a:	8083      	strh	r3, [r0, #4]
 800931c:	4770      	bx	lr
	...

08009320 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009322:	6803      	ldr	r3, [r0, #0]
 8009324:	4605      	mov	r5, r0
 8009326:	460e      	mov	r6, r1
 8009328:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800932a:	2100      	movs	r1, #0
 800932c:	4798      	blx	r3
 800932e:	682b      	ldr	r3, [r5, #0]
 8009330:	4604      	mov	r4, r0
 8009332:	6a1b      	ldr	r3, [r3, #32]
 8009334:	4628      	mov	r0, r5
 8009336:	4798      	blx	r3
 8009338:	88ab      	ldrh	r3, [r5, #4]
 800933a:	1b34      	subs	r4, r6, r4
 800933c:	b2a4      	uxth	r4, r4
 800933e:	fbb4 f4f0 	udiv	r4, r4, r0
 8009342:	42a3      	cmp	r3, r4
 8009344:	d805      	bhi.n	8009352 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8009346:	4b0e      	ldr	r3, [pc, #56]	; (8009380 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8009348:	4a0e      	ldr	r2, [pc, #56]	; (8009384 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800934a:	211e      	movs	r1, #30
 800934c:	480e      	ldr	r0, [pc, #56]	; (8009388 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800934e:	f012 fb65 	bl	801ba1c <__assert_func>
 8009352:	682b      	ldr	r3, [r5, #0]
 8009354:	2100      	movs	r1, #0
 8009356:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009358:	4628      	mov	r0, r5
 800935a:	4798      	blx	r3
 800935c:	682b      	ldr	r3, [r5, #0]
 800935e:	4607      	mov	r7, r0
 8009360:	6a1b      	ldr	r3, [r3, #32]
 8009362:	4628      	mov	r0, r5
 8009364:	4798      	blx	r3
 8009366:	1bf3      	subs	r3, r6, r7
 8009368:	b29b      	uxth	r3, r3
 800936a:	fbb3 f2f0 	udiv	r2, r3, r0
 800936e:	fb02 3010 	mls	r0, r2, r0, r3
 8009372:	b118      	cbz	r0, 800937c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8009374:	4b05      	ldr	r3, [pc, #20]	; (800938c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8009376:	4a03      	ldr	r2, [pc, #12]	; (8009384 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009378:	211f      	movs	r1, #31
 800937a:	e7e7      	b.n	800934c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800937c:	4620      	mov	r0, r4
 800937e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009380:	0801e91e 	.word	0x0801e91e
 8009384:	0801ea8a 	.word	0x0801ea8a
 8009388:	0801e933 	.word	0x0801e933
 800938c:	0801e961 	.word	0x0801e961

08009390 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009390:	b538      	push	{r3, r4, r5, lr}
 8009392:	6803      	ldr	r3, [r0, #0]
 8009394:	6a1b      	ldr	r3, [r3, #32]
 8009396:	460d      	mov	r5, r1
 8009398:	4604      	mov	r4, r0
 800939a:	4798      	blx	r3
 800939c:	4285      	cmp	r5, r0
 800939e:	d905      	bls.n	80093ac <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 80093a0:	4b0c      	ldr	r3, [pc, #48]	; (80093d4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 80093a2:	4a0d      	ldr	r2, [pc, #52]	; (80093d8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 80093a4:	2130      	movs	r1, #48	; 0x30
 80093a6:	480d      	ldr	r0, [pc, #52]	; (80093dc <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 80093a8:	f012 fb38 	bl	801ba1c <__assert_func>
 80093ac:	6823      	ldr	r3, [r4, #0]
 80093ae:	88a5      	ldrh	r5, [r4, #4]
 80093b0:	69db      	ldr	r3, [r3, #28]
 80093b2:	4620      	mov	r0, r4
 80093b4:	4798      	blx	r3
 80093b6:	4285      	cmp	r5, r0
 80093b8:	d303      	bcc.n	80093c2 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 80093ba:	4b09      	ldr	r3, [pc, #36]	; (80093e0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 80093bc:	4a06      	ldr	r2, [pc, #24]	; (80093d8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 80093be:	2131      	movs	r1, #49	; 0x31
 80093c0:	e7f1      	b.n	80093a6 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 80093c2:	6823      	ldr	r3, [r4, #0]
 80093c4:	88a1      	ldrh	r1, [r4, #4]
 80093c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80093c8:	4620      	mov	r0, r4
 80093ca:	4798      	blx	r3
 80093cc:	88a3      	ldrh	r3, [r4, #4]
 80093ce:	3301      	adds	r3, #1
 80093d0:	80a3      	strh	r3, [r4, #4]
 80093d2:	bd38      	pop	{r3, r4, r5, pc}
 80093d4:	0801e9db 	.word	0x0801e9db
 80093d8:	0801eacd 	.word	0x0801eacd
 80093dc:	0801e933 	.word	0x0801e933
 80093e0:	0801e9f2 	.word	0x0801e9f2

080093e4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80093e4:	b570      	push	{r4, r5, r6, lr}
 80093e6:	6803      	ldr	r3, [r0, #0]
 80093e8:	6a1b      	ldr	r3, [r3, #32]
 80093ea:	4616      	mov	r6, r2
 80093ec:	4604      	mov	r4, r0
 80093ee:	460d      	mov	r5, r1
 80093f0:	4798      	blx	r3
 80093f2:	4286      	cmp	r6, r0
 80093f4:	d905      	bls.n	8009402 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 80093f6:	4b06      	ldr	r3, [pc, #24]	; (8009410 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 80093f8:	4a06      	ldr	r2, [pc, #24]	; (8009414 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 80093fa:	4807      	ldr	r0, [pc, #28]	; (8009418 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 80093fc:	213a      	movs	r1, #58	; 0x3a
 80093fe:	f012 fb0d 	bl	801ba1c <__assert_func>
 8009402:	6823      	ldr	r3, [r4, #0]
 8009404:	4629      	mov	r1, r5
 8009406:	4620      	mov	r0, r4
 8009408:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800940a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800940e:	4718      	bx	r3
 8009410:	0801e9db 	.word	0x0801e9db
 8009414:	0801ea40 	.word	0x0801ea40
 8009418:	0801e933 	.word	0x0801e933

0800941c <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800941c:	4770      	bx	lr
	...

08009420 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009420:	4a02      	ldr	r2, [pc, #8]	; (800942c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009422:	6002      	str	r2, [r0, #0]
 8009424:	2200      	movs	r2, #0
 8009426:	8082      	strh	r2, [r0, #4]
 8009428:	4770      	bx	lr
 800942a:	bf00      	nop
 800942c:	0801ea14 	.word	0x0801ea14

08009430 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009430:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009432:	2000      	movs	r0, #0
 8009434:	b12b      	cbz	r3, 8009442 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009436:	b920      	cbnz	r0, 8009442 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009438:	1a5a      	subs	r2, r3, r1
 800943a:	4250      	negs	r0, r2
 800943c:	4150      	adcs	r0, r2
 800943e:	699b      	ldr	r3, [r3, #24]
 8009440:	e7f8      	b.n	8009434 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009442:	4770      	bx	lr

08009444 <_ZN8touchgfx9Container9removeAllEv>:
 8009444:	2200      	movs	r2, #0
 8009446:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009448:	b123      	cbz	r3, 8009454 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800944a:	6999      	ldr	r1, [r3, #24]
 800944c:	6281      	str	r1, [r0, #40]	; 0x28
 800944e:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009452:	e7f8      	b.n	8009446 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009454:	4770      	bx	lr

08009456 <_ZN8touchgfx9Container6unlinkEv>:
 8009456:	2300      	movs	r3, #0
 8009458:	6283      	str	r3, [r0, #40]	; 0x28
 800945a:	4770      	bx	lr

0800945c <_ZNK8touchgfx9Container12getSolidRectEv>:
 800945c:	2200      	movs	r2, #0
 800945e:	8002      	strh	r2, [r0, #0]
 8009460:	8042      	strh	r2, [r0, #2]
 8009462:	8082      	strh	r2, [r0, #4]
 8009464:	80c2      	strh	r2, [r0, #6]
 8009466:	4770      	bx	lr

08009468 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8009468:	b570      	push	{r4, r5, r6, lr}
 800946a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800946c:	460d      	mov	r5, r1
 800946e:	4616      	mov	r6, r2
 8009470:	b13c      	cbz	r4, 8009482 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8009472:	6823      	ldr	r3, [r4, #0]
 8009474:	4620      	mov	r0, r4
 8009476:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009478:	4632      	mov	r2, r6
 800947a:	4629      	mov	r1, r5
 800947c:	4798      	blx	r3
 800947e:	69a4      	ldr	r4, [r4, #24]
 8009480:	e7f6      	b.n	8009470 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8009482:	bd70      	pop	{r4, r5, r6, pc}

08009484 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8009484:	b538      	push	{r3, r4, r5, lr}
 8009486:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009488:	460d      	mov	r5, r1
 800948a:	b134      	cbz	r4, 800949a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800948c:	682b      	ldr	r3, [r5, #0]
 800948e:	4621      	mov	r1, r4
 8009490:	689b      	ldr	r3, [r3, #8]
 8009492:	4628      	mov	r0, r5
 8009494:	4798      	blx	r3
 8009496:	69a4      	ldr	r4, [r4, #24]
 8009498:	e7f7      	b.n	800948a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800949a:	bd38      	pop	{r3, r4, r5, pc}

0800949c <_ZN8touchgfx9ContainerD1Ev>:
 800949c:	4770      	bx	lr

0800949e <_ZN8touchgfx9ContainerD0Ev>:
 800949e:	b510      	push	{r4, lr}
 80094a0:	212c      	movs	r1, #44	; 0x2c
 80094a2:	4604      	mov	r4, r0
 80094a4:	f012 fa8b 	bl	801b9be <_ZdlPvj>
 80094a8:	4620      	mov	r0, r4
 80094aa:	bd10      	pop	{r4, pc}

080094ac <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80094ac:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80094ae:	b19b      	cbz	r3, 80094d8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80094b0:	428b      	cmp	r3, r1
 80094b2:	d109      	bne.n	80094c8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80094b4:	699a      	ldr	r2, [r3, #24]
 80094b6:	2100      	movs	r1, #0
 80094b8:	6159      	str	r1, [r3, #20]
 80094ba:	6282      	str	r2, [r0, #40]	; 0x28
 80094bc:	b902      	cbnz	r2, 80094c0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80094be:	4770      	bx	lr
 80094c0:	6199      	str	r1, [r3, #24]
 80094c2:	4770      	bx	lr
 80094c4:	4613      	mov	r3, r2
 80094c6:	b13a      	cbz	r2, 80094d8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80094c8:	699a      	ldr	r2, [r3, #24]
 80094ca:	428a      	cmp	r2, r1
 80094cc:	d1fa      	bne.n	80094c4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80094ce:	698a      	ldr	r2, [r1, #24]
 80094d0:	619a      	str	r2, [r3, #24]
 80094d2:	2300      	movs	r3, #0
 80094d4:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80094d8:	4770      	bx	lr

080094da <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80094da:	b410      	push	{r4}
 80094dc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80094de:	4604      	mov	r4, r0
 80094e0:	b92b      	cbnz	r3, 80094ee <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80094e2:	6803      	ldr	r3, [r0, #0]
 80094e4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80094e8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80094ea:	4611      	mov	r1, r2
 80094ec:	4718      	bx	r3
 80094ee:	b941      	cbnz	r1, 8009502 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80094f0:	6193      	str	r3, [r2, #24]
 80094f2:	6282      	str	r2, [r0, #40]	; 0x28
 80094f4:	6154      	str	r4, [r2, #20]
 80094f6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80094fa:	4770      	bx	lr
 80094fc:	4603      	mov	r3, r0
 80094fe:	2800      	cmp	r0, #0
 8009500:	d0f9      	beq.n	80094f6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009502:	4299      	cmp	r1, r3
 8009504:	6998      	ldr	r0, [r3, #24]
 8009506:	d1f9      	bne.n	80094fc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009508:	6190      	str	r0, [r2, #24]
 800950a:	618a      	str	r2, [r1, #24]
 800950c:	e7f2      	b.n	80094f4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08009510 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009510:	4288      	cmp	r0, r1
 8009512:	b508      	push	{r3, lr}
 8009514:	d105      	bne.n	8009522 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8009516:	4b11      	ldr	r3, [pc, #68]	; (800955c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8009518:	4a11      	ldr	r2, [pc, #68]	; (8009560 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800951a:	2123      	movs	r1, #35	; 0x23
 800951c:	4811      	ldr	r0, [pc, #68]	; (8009564 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800951e:	f012 fa7d 	bl	801ba1c <__assert_func>
 8009522:	694b      	ldr	r3, [r1, #20]
 8009524:	b11b      	cbz	r3, 800952e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8009526:	4b10      	ldr	r3, [pc, #64]	; (8009568 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8009528:	4a0d      	ldr	r2, [pc, #52]	; (8009560 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800952a:	2124      	movs	r1, #36	; 0x24
 800952c:	e7f6      	b.n	800951c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800952e:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8009532:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009534:	b913      	cbnz	r3, 800953c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8009536:	6281      	str	r1, [r0, #40]	; 0x28
 8009538:	bd08      	pop	{r3, pc}
 800953a:	4613      	mov	r3, r2
 800953c:	699a      	ldr	r2, [r3, #24]
 800953e:	b12a      	cbz	r2, 800954c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8009540:	428b      	cmp	r3, r1
 8009542:	d1fa      	bne.n	800953a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8009544:	4b09      	ldr	r3, [pc, #36]	; (800956c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8009546:	4a06      	ldr	r2, [pc, #24]	; (8009560 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009548:	2135      	movs	r1, #53	; 0x35
 800954a:	e7e7      	b.n	800951c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800954c:	428b      	cmp	r3, r1
 800954e:	d103      	bne.n	8009558 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8009550:	4b06      	ldr	r3, [pc, #24]	; (800956c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8009552:	4a03      	ldr	r2, [pc, #12]	; (8009560 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009554:	2138      	movs	r1, #56	; 0x38
 8009556:	e7e1      	b.n	800951c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009558:	6199      	str	r1, [r3, #24]
 800955a:	e7ed      	b.n	8009538 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800955c:	0801eb0b 	.word	0x0801eb0b
 8009560:	0801ec60 	.word	0x0801ec60
 8009564:	0801eb37 	.word	0x0801eb37
 8009568:	0801eb6a 	.word	0x0801eb6a
 800956c:	0801eba0 	.word	0x0801eba0

08009570 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009570:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009574:	461f      	mov	r7, r3
 8009576:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800957a:	460d      	mov	r5, r1
 800957c:	4616      	mov	r6, r2
 800957e:	b103      	cbz	r3, 8009582 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009580:	6038      	str	r0, [r7, #0]
 8009582:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009584:	b314      	cbz	r4, 80095cc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8009586:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800958a:	b1eb      	cbz	r3, 80095c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800958c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009590:	428d      	cmp	r5, r1
 8009592:	db19      	blt.n	80095c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009594:	8923      	ldrh	r3, [r4, #8]
 8009596:	b289      	uxth	r1, r1
 8009598:	440b      	add	r3, r1
 800959a:	b21b      	sxth	r3, r3
 800959c:	429d      	cmp	r5, r3
 800959e:	da13      	bge.n	80095c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80095a0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80095a4:	4296      	cmp	r6, r2
 80095a6:	db0f      	blt.n	80095c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80095a8:	8963      	ldrh	r3, [r4, #10]
 80095aa:	b292      	uxth	r2, r2
 80095ac:	4413      	add	r3, r2
 80095ae:	b21b      	sxth	r3, r3
 80095b0:	429e      	cmp	r6, r3
 80095b2:	da09      	bge.n	80095c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80095b4:	6823      	ldr	r3, [r4, #0]
 80095b6:	1ab2      	subs	r2, r6, r2
 80095b8:	1a69      	subs	r1, r5, r1
 80095ba:	f8d3 8020 	ldr.w	r8, [r3, #32]
 80095be:	b212      	sxth	r2, r2
 80095c0:	463b      	mov	r3, r7
 80095c2:	b209      	sxth	r1, r1
 80095c4:	4620      	mov	r0, r4
 80095c6:	47c0      	blx	r8
 80095c8:	69a4      	ldr	r4, [r4, #24]
 80095ca:	e7db      	b.n	8009584 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80095cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080095d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80095d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80095d4:	4c6e      	ldr	r4, [pc, #440]	; (8009790 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80095d6:	b0a1      	sub	sp, #132	; 0x84
 80095d8:	6824      	ldr	r4, [r4, #0]
 80095da:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80095dc:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80095e0:	9303      	str	r3, [sp, #12]
 80095e2:	2400      	movs	r4, #0
 80095e4:	802c      	strh	r4, [r5, #0]
 80095e6:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80095e8:	802c      	strh	r4, [r5, #0]
 80095ea:	601c      	str	r4, [r3, #0]
 80095ec:	4606      	mov	r6, r0
 80095ee:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80095f2:	f7ff ffbd 	bl	8009570 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80095f6:	f1b9 0f03 	cmp.w	r9, #3
 80095fa:	f340 80c2 	ble.w	8009782 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 80095fe:	4631      	mov	r1, r6
 8009600:	a80c      	add	r0, sp, #48	; 0x30
 8009602:	f004 f9e5 	bl	800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009606:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800960a:	9306      	str	r3, [sp, #24]
 800960c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8009610:	9307      	str	r3, [sp, #28]
 8009612:	9b03      	ldr	r3, [sp, #12]
 8009614:	f8d3 a000 	ldr.w	sl, [r3]
 8009618:	f1ba 0f00 	cmp.w	sl, #0
 800961c:	f000 80b4 	beq.w	8009788 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8009620:	4651      	mov	r1, sl
 8009622:	a810      	add	r0, sp, #64	; 0x40
 8009624:	f004 f9d4 	bl	800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009628:	9b01      	ldr	r3, [sp, #4]
 800962a:	9a06      	ldr	r2, [sp, #24]
 800962c:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8009630:	189d      	adds	r5, r3, r2
 8009632:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8009636:	9a07      	ldr	r2, [sp, #28]
 8009638:	2002      	movs	r0, #2
 800963a:	fb91 f1f0 	sdiv	r1, r1, r0
 800963e:	4419      	add	r1, r3
 8009640:	1a6d      	subs	r5, r5, r1
 8009642:	9b02      	ldr	r3, [sp, #8]
 8009644:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8009648:	4413      	add	r3, r2
 800964a:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800964e:	fb92 f2f0 	sdiv	r2, r2, r0
 8009652:	440a      	add	r2, r1
 8009654:	1a9b      	subs	r3, r3, r2
 8009656:	435b      	muls	r3, r3
 8009658:	fb05 3505 	mla	r5, r5, r5, r3
 800965c:	4f4d      	ldr	r7, [pc, #308]	; (8009794 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800965e:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009660:	ac10      	add	r4, sp, #64	; 0x40
 8009662:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009664:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009666:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009668:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800966a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800966c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8009670:	f1b9 0f0c 	cmp.w	r9, #12
 8009674:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009678:	f04f 0303 	mov.w	r3, #3
 800967c:	bfc8      	it	gt
 800967e:	4698      	movgt	r8, r3
 8009680:	f8cd 9000 	str.w	r9, [sp]
 8009684:	f04f 0400 	mov.w	r4, #0
 8009688:	bfdc      	itt	le
 800968a:	f109 32ff 	addle.w	r2, r9, #4294967295
 800968e:	fb92 f8f3 	sdivle	r8, r2, r3
 8009692:	1c63      	adds	r3, r4, #1
 8009694:	aa10      	add	r2, sp, #64	; 0x40
 8009696:	f004 0401 	and.w	r4, r4, #1
 800969a:	9308      	str	r3, [sp, #32]
 800969c:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80096a0:	9b00      	ldr	r3, [sp, #0]
 80096a2:	fb93 f3f8 	sdiv	r3, r3, r8
 80096a6:	b29b      	uxth	r3, r3
 80096a8:	3404      	adds	r4, #4
 80096aa:	f04f 0b00 	mov.w	fp, #0
 80096ae:	9304      	str	r3, [sp, #16]
 80096b0:	9a04      	ldr	r2, [sp, #16]
 80096b2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80096b6:	fb13 f302 	smulbb	r3, r3, r2
 80096ba:	9a01      	ldr	r2, [sp, #4]
 80096bc:	b29b      	uxth	r3, r3
 80096be:	1899      	adds	r1, r3, r2
 80096c0:	9305      	str	r3, [sp, #20]
 80096c2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80096c6:	b209      	sxth	r1, r1
 80096c8:	4299      	cmp	r1, r3
 80096ca:	db4d      	blt.n	8009768 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80096cc:	8932      	ldrh	r2, [r6, #8]
 80096ce:	4413      	add	r3, r2
 80096d0:	b21b      	sxth	r3, r3
 80096d2:	4299      	cmp	r1, r3
 80096d4:	da48      	bge.n	8009768 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80096d6:	9b04      	ldr	r3, [sp, #16]
 80096d8:	6827      	ldr	r7, [r4, #0]
 80096da:	fb17 f703 	smulbb	r7, r7, r3
 80096de:	9b02      	ldr	r3, [sp, #8]
 80096e0:	b2bf      	uxth	r7, r7
 80096e2:	18fa      	adds	r2, r7, r3
 80096e4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80096e8:	b212      	sxth	r2, r2
 80096ea:	429a      	cmp	r2, r3
 80096ec:	db3c      	blt.n	8009768 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80096ee:	8970      	ldrh	r0, [r6, #10]
 80096f0:	4403      	add	r3, r0
 80096f2:	b21b      	sxth	r3, r3
 80096f4:	429a      	cmp	r2, r3
 80096f6:	da37      	bge.n	8009768 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80096f8:	2300      	movs	r3, #0
 80096fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80096fc:	4630      	mov	r0, r6
 80096fe:	ab0b      	add	r3, sp, #44	; 0x2c
 8009700:	f7ff ff36 	bl	8009570 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009704:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009706:	b37a      	cbz	r2, 8009768 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009708:	4552      	cmp	r2, sl
 800970a:	d02d      	beq.n	8009768 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800970c:	4611      	mov	r1, r2
 800970e:	a80e      	add	r0, sp, #56	; 0x38
 8009710:	9209      	str	r2, [sp, #36]	; 0x24
 8009712:	f004 f95d 	bl	800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009716:	9a06      	ldr	r2, [sp, #24]
 8009718:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800971c:	9b01      	ldr	r3, [sp, #4]
 800971e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8009722:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8009726:	4413      	add	r3, r2
 8009728:	f04f 0e02 	mov.w	lr, #2
 800972c:	fb91 f1fe 	sdiv	r1, r1, lr
 8009730:	4401      	add	r1, r0
 8009732:	1a58      	subs	r0, r3, r1
 8009734:	9a07      	ldr	r2, [sp, #28]
 8009736:	9b02      	ldr	r3, [sp, #8]
 8009738:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800973c:	fb9c fcfe 	sdiv	ip, ip, lr
 8009740:	4413      	add	r3, r2
 8009742:	448c      	add	ip, r1
 8009744:	eba3 030c 	sub.w	r3, r3, ip
 8009748:	435b      	muls	r3, r3
 800974a:	fb00 3300 	mla	r3, r0, r0, r3
 800974e:	42ab      	cmp	r3, r5
 8009750:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009752:	d208      	bcs.n	8009766 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8009754:	9803      	ldr	r0, [sp, #12]
 8009756:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8009758:	6001      	str	r1, [r0, #0]
 800975a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800975c:	9805      	ldr	r0, [sp, #20]
 800975e:	8008      	strh	r0, [r1, #0]
 8009760:	992b      	ldr	r1, [sp, #172]	; 0xac
 8009762:	461d      	mov	r5, r3
 8009764:	800f      	strh	r7, [r1, #0]
 8009766:	4692      	mov	sl, r2
 8009768:	f10b 0b01 	add.w	fp, fp, #1
 800976c:	f1bb 0f04 	cmp.w	fp, #4
 8009770:	f104 0408 	add.w	r4, r4, #8
 8009774:	d19c      	bne.n	80096b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8009776:	9b00      	ldr	r3, [sp, #0]
 8009778:	9c08      	ldr	r4, [sp, #32]
 800977a:	444b      	add	r3, r9
 800977c:	4544      	cmp	r4, r8
 800977e:	9300      	str	r3, [sp, #0]
 8009780:	d187      	bne.n	8009692 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8009782:	b021      	add	sp, #132	; 0x84
 8009784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009788:	f04f 35ff 	mov.w	r5, #4294967295
 800978c:	e766      	b.n	800965c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800978e:	bf00      	nop
 8009790:	20013508 	.word	0x20013508
 8009794:	0801ced8 	.word	0x0801ced8

08009798 <_ZN8touchgfx4RectaNERKS0_>:
 8009798:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800979c:	f9b1 7000 	ldrsh.w	r7, [r1]
 80097a0:	888c      	ldrh	r4, [r1, #4]
 80097a2:	f9b0 9000 	ldrsh.w	r9, [r0]
 80097a6:	443c      	add	r4, r7
 80097a8:	b2a4      	uxth	r4, r4
 80097aa:	fa0f f884 	sxth.w	r8, r4
 80097ae:	45c1      	cmp	r9, r8
 80097b0:	da2f      	bge.n	8009812 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80097b2:	8882      	ldrh	r2, [r0, #4]
 80097b4:	444a      	add	r2, r9
 80097b6:	b292      	uxth	r2, r2
 80097b8:	fa0f fe82 	sxth.w	lr, r2
 80097bc:	4577      	cmp	r7, lr
 80097be:	da28      	bge.n	8009812 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80097c0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80097c4:	88cb      	ldrh	r3, [r1, #6]
 80097c6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80097ca:	442b      	add	r3, r5
 80097cc:	b21b      	sxth	r3, r3
 80097ce:	429e      	cmp	r6, r3
 80097d0:	da1f      	bge.n	8009812 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80097d2:	88c3      	ldrh	r3, [r0, #6]
 80097d4:	4433      	add	r3, r6
 80097d6:	b29b      	uxth	r3, r3
 80097d8:	fa0f fc83 	sxth.w	ip, r3
 80097dc:	4565      	cmp	r5, ip
 80097de:	da18      	bge.n	8009812 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80097e0:	454f      	cmp	r7, r9
 80097e2:	bfb8      	it	lt
 80097e4:	464f      	movlt	r7, r9
 80097e6:	42b5      	cmp	r5, r6
 80097e8:	bfb8      	it	lt
 80097ea:	4635      	movlt	r5, r6
 80097ec:	45f0      	cmp	r8, lr
 80097ee:	bfd8      	it	le
 80097f0:	4622      	movle	r2, r4
 80097f2:	1bd2      	subs	r2, r2, r7
 80097f4:	8082      	strh	r2, [r0, #4]
 80097f6:	884a      	ldrh	r2, [r1, #2]
 80097f8:	88c9      	ldrh	r1, [r1, #6]
 80097fa:	8007      	strh	r7, [r0, #0]
 80097fc:	440a      	add	r2, r1
 80097fe:	b292      	uxth	r2, r2
 8009800:	b211      	sxth	r1, r2
 8009802:	458c      	cmp	ip, r1
 8009804:	bfa8      	it	ge
 8009806:	4613      	movge	r3, r2
 8009808:	1b5b      	subs	r3, r3, r5
 800980a:	80c3      	strh	r3, [r0, #6]
 800980c:	8045      	strh	r5, [r0, #2]
 800980e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009812:	2300      	movs	r3, #0
 8009814:	8003      	strh	r3, [r0, #0]
 8009816:	8043      	strh	r3, [r0, #2]
 8009818:	8083      	strh	r3, [r0, #4]
 800981a:	80c3      	strh	r3, [r0, #6]
 800981c:	e7f7      	b.n	800980e <_ZN8touchgfx4RectaNERKS0_+0x76>

0800981e <_ZNK8touchgfx4Rect7isEmptyEv>:
 800981e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009822:	2b00      	cmp	r3, #0
 8009824:	dd06      	ble.n	8009834 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8009826:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800982a:	2800      	cmp	r0, #0
 800982c:	bfcc      	ite	gt
 800982e:	2000      	movgt	r0, #0
 8009830:	2001      	movle	r0, #1
 8009832:	4770      	bx	lr
 8009834:	2001      	movs	r0, #1
 8009836:	4770      	bx	lr

08009838 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009838:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800983c:	2300      	movs	r3, #0
 800983e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8009840:	8003      	strh	r3, [r0, #0]
 8009842:	4604      	mov	r4, r0
 8009844:	8043      	strh	r3, [r0, #2]
 8009846:	8083      	strh	r3, [r0, #4]
 8009848:	80c3      	strh	r3, [r0, #6]
 800984a:	2d00      	cmp	r5, #0
 800984c:	d040      	beq.n	80098d0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800984e:	1d28      	adds	r0, r5, #4
 8009850:	f7ff ffe5 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009854:	b988      	cbnz	r0, 800987a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009856:	4620      	mov	r0, r4
 8009858:	f7ff ffe1 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 800985c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009860:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009864:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009868:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800986c:	b138      	cbz	r0, 800987e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800986e:	8022      	strh	r2, [r4, #0]
 8009870:	8063      	strh	r3, [r4, #2]
 8009872:	f8a4 e004 	strh.w	lr, [r4, #4]
 8009876:	f8a4 c006 	strh.w	ip, [r4, #6]
 800987a:	69ad      	ldr	r5, [r5, #24]
 800987c:	e7e5      	b.n	800984a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800987e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8009882:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8009886:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800988a:	4290      	cmp	r0, r2
 800988c:	4607      	mov	r7, r0
 800988e:	bfa8      	it	ge
 8009890:	4617      	movge	r7, r2
 8009892:	4472      	add	r2, lr
 8009894:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8009898:	8027      	strh	r7, [r4, #0]
 800989a:	4299      	cmp	r1, r3
 800989c:	460e      	mov	r6, r1
 800989e:	4440      	add	r0, r8
 80098a0:	bfa8      	it	ge
 80098a2:	461e      	movge	r6, r3
 80098a4:	4471      	add	r1, lr
 80098a6:	4463      	add	r3, ip
 80098a8:	b200      	sxth	r0, r0
 80098aa:	b212      	sxth	r2, r2
 80098ac:	b209      	sxth	r1, r1
 80098ae:	b21b      	sxth	r3, r3
 80098b0:	4290      	cmp	r0, r2
 80098b2:	bfac      	ite	ge
 80098b4:	ebc7 0200 	rsbge	r2, r7, r0
 80098b8:	ebc7 0202 	rsblt	r2, r7, r2
 80098bc:	4299      	cmp	r1, r3
 80098be:	bfac      	ite	ge
 80098c0:	ebc6 0301 	rsbge	r3, r6, r1
 80098c4:	ebc6 0303 	rsblt	r3, r6, r3
 80098c8:	8066      	strh	r6, [r4, #2]
 80098ca:	80a2      	strh	r2, [r4, #4]
 80098cc:	80e3      	strh	r3, [r4, #6]
 80098ce:	e7d4      	b.n	800987a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80098d0:	4620      	mov	r0, r4
 80098d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080098d6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80098d6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80098da:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80098de:	b383      	cbz	r3, 8009942 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80098e0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80098e2:	b374      	cbz	r4, 8009942 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80098e4:	f9b1 5000 	ldrsh.w	r5, [r1]
 80098e8:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80098ec:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80098f0:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80098f4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80098f8:	b303      	cbz	r3, 800993c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80098fa:	4668      	mov	r0, sp
 80098fc:	1d21      	adds	r1, r4, #4
 80098fe:	f8ad 5000 	strh.w	r5, [sp]
 8009902:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009906:	f8ad 7004 	strh.w	r7, [sp, #4]
 800990a:	f8ad 8006 	strh.w	r8, [sp, #6]
 800990e:	f7ff ff43 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 8009912:	4668      	mov	r0, sp
 8009914:	f7ff ff83 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009918:	b980      	cbnz	r0, 800993c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800991a:	f8bd 3000 	ldrh.w	r3, [sp]
 800991e:	88a2      	ldrh	r2, [r4, #4]
 8009920:	1a9b      	subs	r3, r3, r2
 8009922:	f8ad 3000 	strh.w	r3, [sp]
 8009926:	88e2      	ldrh	r2, [r4, #6]
 8009928:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800992c:	1a9b      	subs	r3, r3, r2
 800992e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009932:	6823      	ldr	r3, [r4, #0]
 8009934:	4669      	mov	r1, sp
 8009936:	689b      	ldr	r3, [r3, #8]
 8009938:	4620      	mov	r0, r4
 800993a:	4798      	blx	r3
 800993c:	69a4      	ldr	r4, [r4, #24]
 800993e:	2c00      	cmp	r4, #0
 8009940:	d1d8      	bne.n	80098f4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8009942:	b002      	add	sp, #8
 8009944:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009948 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009948:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800994a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800994e:	460d      	mov	r5, r1
 8009950:	4616      	mov	r6, r2
 8009952:	b323      	cbz	r3, 800999e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009954:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009956:	b314      	cbz	r4, 800999e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009958:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800995c:	b1eb      	cbz	r3, 800999a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800995e:	6828      	ldr	r0, [r5, #0]
 8009960:	6869      	ldr	r1, [r5, #4]
 8009962:	466b      	mov	r3, sp
 8009964:	c303      	stmia	r3!, {r0, r1}
 8009966:	4668      	mov	r0, sp
 8009968:	1d21      	adds	r1, r4, #4
 800996a:	f7ff ff15 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 800996e:	4668      	mov	r0, sp
 8009970:	f7ff ff55 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009974:	b988      	cbnz	r0, 800999a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009976:	f8bd 3000 	ldrh.w	r3, [sp]
 800997a:	88a2      	ldrh	r2, [r4, #4]
 800997c:	1a9b      	subs	r3, r3, r2
 800997e:	f8ad 3000 	strh.w	r3, [sp]
 8009982:	88e2      	ldrh	r2, [r4, #6]
 8009984:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009988:	1a9b      	subs	r3, r3, r2
 800998a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800998e:	6823      	ldr	r3, [r4, #0]
 8009990:	4632      	mov	r2, r6
 8009992:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009994:	4669      	mov	r1, sp
 8009996:	4620      	mov	r0, r4
 8009998:	4798      	blx	r3
 800999a:	69a4      	ldr	r4, [r4, #24]
 800999c:	e7db      	b.n	8009956 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800999e:	b002      	add	sp, #8
 80099a0:	bd70      	pop	{r4, r5, r6, pc}

080099a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80099a2:	b513      	push	{r0, r1, r4, lr}
 80099a4:	6803      	ldr	r3, [r0, #0]
 80099a6:	f8d3 40a0 	ldr.w	r4, [r3, #160]	; 0xa0
 80099aa:	2300      	movs	r3, #0
 80099ac:	e9cd 3300 	strd	r3, r3, [sp]
 80099b0:	466b      	mov	r3, sp
 80099b2:	47a0      	blx	r4
 80099b4:	b002      	add	sp, #8
 80099b6:	bd10      	pop	{r4, pc}

080099b8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80099b8:	2301      	movs	r3, #1
 80099ba:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80099be:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80099c2:	4770      	bx	lr

080099c4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80099c4:	2301      	movs	r3, #1
 80099c6:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80099ca:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80099ce:	4770      	bx	lr

080099d0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80099d0:	6843      	ldr	r3, [r0, #4]
 80099d2:	2201      	movs	r2, #1
 80099d4:	725a      	strb	r2, [r3, #9]
 80099d6:	6840      	ldr	r0, [r0, #4]
 80099d8:	6803      	ldr	r3, [r0, #0]
 80099da:	691b      	ldr	r3, [r3, #16]
 80099dc:	4718      	bx	r3

080099de <_ZN8touchgfx3HAL8flushDMAEv>:
 80099de:	6840      	ldr	r0, [r0, #4]
 80099e0:	6803      	ldr	r3, [r0, #0]
 80099e2:	689b      	ldr	r3, [r3, #8]
 80099e4:	4718      	bx	r3

080099e6 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80099e6:	b530      	push	{r4, r5, lr}
 80099e8:	b08b      	sub	sp, #44	; 0x2c
 80099ea:	6804      	ldr	r4, [r0, #0]
 80099ec:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80099f0:	9509      	str	r5, [sp, #36]	; 0x24
 80099f2:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80099f6:	9508      	str	r5, [sp, #32]
 80099f8:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80099fc:	9507      	str	r5, [sp, #28]
 80099fe:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8009a02:	9506      	str	r5, [sp, #24]
 8009a04:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8009a08:	9505      	str	r5, [sp, #20]
 8009a0a:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8009a0e:	9504      	str	r5, [sp, #16]
 8009a10:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8009a14:	9503      	str	r5, [sp, #12]
 8009a16:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8009a1a:	9502      	str	r5, [sp, #8]
 8009a1c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8009a20:	e9cd 3500 	strd	r3, r5, [sp]
 8009a24:	4613      	mov	r3, r2
 8009a26:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8009a28:	2200      	movs	r2, #0
 8009a2a:	47a0      	blx	r4
 8009a2c:	b00b      	add	sp, #44	; 0x2c
 8009a2e:	bd30      	pop	{r4, r5, pc}

08009a30 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009a30:	4b04      	ldr	r3, [pc, #16]	; (8009a44 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8009a32:	781b      	ldrb	r3, [r3, #0]
 8009a34:	b123      	cbz	r3, 8009a40 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8009a36:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8009a3a:	f080 0001 	eor.w	r0, r0, #1
 8009a3e:	4770      	bx	lr
 8009a40:	2001      	movs	r0, #1
 8009a42:	4770      	bx	lr
 8009a44:	20013506 	.word	0x20013506

08009a48 <_ZN8touchgfx3HAL8endFrameEv>:
 8009a48:	b510      	push	{r4, lr}
 8009a4a:	4604      	mov	r4, r0
 8009a4c:	6840      	ldr	r0, [r0, #4]
 8009a4e:	6803      	ldr	r3, [r0, #0]
 8009a50:	689b      	ldr	r3, [r3, #8]
 8009a52:	4798      	blx	r3
 8009a54:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8009a58:	b113      	cbz	r3, 8009a60 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009a5a:	2301      	movs	r3, #1
 8009a5c:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009a60:	bd10      	pop	{r4, pc}

08009a62 <_ZN8touchgfx3HAL10initializeEv>:
 8009a62:	b510      	push	{r4, lr}
 8009a64:	4604      	mov	r4, r0
 8009a66:	f7f6 ff37 	bl	80008d8 <_ZN8touchgfx10OSWrappers10initializeEv>
 8009a6a:	6860      	ldr	r0, [r4, #4]
 8009a6c:	6803      	ldr	r3, [r0, #0]
 8009a6e:	68db      	ldr	r3, [r3, #12]
 8009a70:	4798      	blx	r3
 8009a72:	68e0      	ldr	r0, [r4, #12]
 8009a74:	6803      	ldr	r3, [r0, #0]
 8009a76:	689b      	ldr	r3, [r3, #8]
 8009a78:	4798      	blx	r3
 8009a7a:	6823      	ldr	r3, [r4, #0]
 8009a7c:	4620      	mov	r0, r4
 8009a7e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009a80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009a84:	4718      	bx	r3
	...

08009a88 <_ZN8touchgfx3HAL4tickEv>:
 8009a88:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009a8a:	6803      	ldr	r3, [r0, #0]
 8009a8c:	4d5c      	ldr	r5, [pc, #368]	; (8009c00 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009a8e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8009a92:	4604      	mov	r4, r0
 8009a94:	4798      	blx	r3
 8009a96:	2800      	cmp	r0, #0
 8009a98:	f000 8097 	beq.w	8009bca <_ZN8touchgfx3HAL4tickEv+0x142>
 8009a9c:	2001      	movs	r0, #1
 8009a9e:	f7f6 fe51 	bl	8000744 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009aa2:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8009aa6:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009aaa:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8009aae:	2600      	movs	r6, #0
 8009ab0:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009ab4:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8009ab8:	b133      	cbz	r3, 8009ac8 <_ZN8touchgfx3HAL4tickEv+0x40>
 8009aba:	6823      	ldr	r3, [r4, #0]
 8009abc:	4620      	mov	r0, r4
 8009abe:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8009ac2:	4798      	blx	r3
 8009ac4:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8009ac8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8009acc:	6862      	ldr	r2, [r4, #4]
 8009ace:	f083 0301 	eor.w	r3, r3, #1
 8009ad2:	7253      	strb	r3, [r2, #9]
 8009ad4:	2601      	movs	r6, #1
 8009ad6:	702e      	strb	r6, [r5, #0]
 8009ad8:	f002 ff60 	bl	800c99c <_ZN8touchgfx11Application11getInstanceEv>
 8009adc:	6803      	ldr	r3, [r0, #0]
 8009ade:	4631      	mov	r1, r6
 8009ae0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009ae2:	4798      	blx	r3
 8009ae4:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009ae8:	b90b      	cbnz	r3, 8009aee <_ZN8touchgfx3HAL4tickEv+0x66>
 8009aea:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8009aee:	f002 ff55 	bl	800c99c <_ZN8touchgfx11Application11getInstanceEv>
 8009af2:	6803      	ldr	r3, [r0, #0]
 8009af4:	695b      	ldr	r3, [r3, #20]
 8009af6:	4798      	blx	r3
 8009af8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009afa:	6803      	ldr	r3, [r0, #0]
 8009afc:	691b      	ldr	r3, [r3, #16]
 8009afe:	4798      	blx	r3
 8009b00:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009b04:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8009b08:	3b01      	subs	r3, #1
 8009b0a:	b2db      	uxtb	r3, r3
 8009b0c:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009b10:	b10a      	cbz	r2, 8009b16 <_ZN8touchgfx3HAL4tickEv+0x8e>
 8009b12:	2b00      	cmp	r3, #0
 8009b14:	d1eb      	bne.n	8009aee <_ZN8touchgfx3HAL4tickEv+0x66>
 8009b16:	4a3b      	ldr	r2, [pc, #236]	; (8009c04 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009b18:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009b1c:	7813      	ldrb	r3, [r2, #0]
 8009b1e:	3301      	adds	r3, #1
 8009b20:	b25b      	sxtb	r3, r3
 8009b22:	4299      	cmp	r1, r3
 8009b24:	7013      	strb	r3, [r2, #0]
 8009b26:	dc10      	bgt.n	8009b4a <_ZN8touchgfx3HAL4tickEv+0xc2>
 8009b28:	68e0      	ldr	r0, [r4, #12]
 8009b2a:	2300      	movs	r3, #0
 8009b2c:	7013      	strb	r3, [r2, #0]
 8009b2e:	6803      	ldr	r3, [r0, #0]
 8009b30:	aa03      	add	r2, sp, #12
 8009b32:	68db      	ldr	r3, [r3, #12]
 8009b34:	a902      	add	r1, sp, #8
 8009b36:	4798      	blx	r3
 8009b38:	6823      	ldr	r3, [r4, #0]
 8009b3a:	2800      	cmp	r0, #0
 8009b3c:	d051      	beq.n	8009be2 <_ZN8touchgfx3HAL4tickEv+0x15a>
 8009b3e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8009b42:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009b46:	4620      	mov	r0, r4
 8009b48:	4798      	blx	r3
 8009b4a:	6960      	ldr	r0, [r4, #20]
 8009b4c:	2300      	movs	r3, #0
 8009b4e:	f88d 3007 	strb.w	r3, [sp, #7]
 8009b52:	b158      	cbz	r0, 8009b6c <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009b54:	6803      	ldr	r3, [r0, #0]
 8009b56:	f10d 0107 	add.w	r1, sp, #7
 8009b5a:	68db      	ldr	r3, [r3, #12]
 8009b5c:	4798      	blx	r3
 8009b5e:	b128      	cbz	r0, 8009b6c <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009b60:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009b62:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009b66:	6803      	ldr	r3, [r0, #0]
 8009b68:	68db      	ldr	r3, [r3, #12]
 8009b6a:	4798      	blx	r3
 8009b6c:	f104 001c 	add.w	r0, r4, #28
 8009b70:	f011 fe6c 	bl	801b84c <_ZN8touchgfx8Gestures4tickEv>
 8009b74:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8009b78:	b30b      	cbz	r3, 8009bbe <_ZN8touchgfx3HAL4tickEv+0x136>
 8009b7a:	6920      	ldr	r0, [r4, #16]
 8009b7c:	6803      	ldr	r3, [r0, #0]
 8009b7e:	691b      	ldr	r3, [r3, #16]
 8009b80:	4798      	blx	r3
 8009b82:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009b84:	4606      	mov	r6, r0
 8009b86:	b903      	cbnz	r3, 8009b8a <_ZN8touchgfx3HAL4tickEv+0x102>
 8009b88:	6720      	str	r0, [r4, #112]	; 0x70
 8009b8a:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009b8c:	4a1e      	ldr	r2, [pc, #120]	; (8009c08 <_ZN8touchgfx3HAL4tickEv+0x180>)
 8009b8e:	1af3      	subs	r3, r6, r3
 8009b90:	4293      	cmp	r3, r2
 8009b92:	d914      	bls.n	8009bbe <_ZN8touchgfx3HAL4tickEv+0x136>
 8009b94:	6920      	ldr	r0, [r4, #16]
 8009b96:	6803      	ldr	r3, [r0, #0]
 8009b98:	699b      	ldr	r3, [r3, #24]
 8009b9a:	4798      	blx	r3
 8009b9c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009b9e:	2264      	movs	r2, #100	; 0x64
 8009ba0:	1af3      	subs	r3, r6, r3
 8009ba2:	fbb3 f3f2 	udiv	r3, r3, r2
 8009ba6:	fbb0 f0f3 	udiv	r0, r0, r3
 8009baa:	2800      	cmp	r0, #0
 8009bac:	dc1e      	bgt.n	8009bec <_ZN8touchgfx3HAL4tickEv+0x164>
 8009bae:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8009bb2:	6920      	ldr	r0, [r4, #16]
 8009bb4:	6803      	ldr	r3, [r0, #0]
 8009bb6:	2100      	movs	r1, #0
 8009bb8:	69db      	ldr	r3, [r3, #28]
 8009bba:	4798      	blx	r3
 8009bbc:	6726      	str	r6, [r4, #112]	; 0x70
 8009bbe:	f002 feed 	bl	800c99c <_ZN8touchgfx11Application11getInstanceEv>
 8009bc2:	6803      	ldr	r3, [r0, #0]
 8009bc4:	2100      	movs	r1, #0
 8009bc6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009bc8:	4798      	blx	r3
 8009bca:	6823      	ldr	r3, [r4, #0]
 8009bcc:	4620      	mov	r0, r4
 8009bce:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8009bd2:	4798      	blx	r3
 8009bd4:	2001      	movs	r0, #1
 8009bd6:	f7f6 fdb6 	bl	8000746 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009bda:	2300      	movs	r3, #0
 8009bdc:	702b      	strb	r3, [r5, #0]
 8009bde:	b004      	add	sp, #16
 8009be0:	bd70      	pop	{r4, r5, r6, pc}
 8009be2:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8009be6:	4620      	mov	r0, r4
 8009be8:	4798      	blx	r3
 8009bea:	e7ae      	b.n	8009b4a <_ZN8touchgfx3HAL4tickEv+0xc2>
 8009bec:	2863      	cmp	r0, #99	; 0x63
 8009bee:	bfcb      	itete	gt
 8009bf0:	2300      	movgt	r3, #0
 8009bf2:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8009bf6:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8009bfa:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8009bfe:	e7d8      	b.n	8009bb2 <_ZN8touchgfx3HAL4tickEv+0x12a>
 8009c00:	2001350c 	.word	0x2001350c
 8009c04:	2001350d 	.word	0x2001350d
 8009c08:	05f5e100 	.word	0x05f5e100

08009c0c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009c0c:	f7f6 be94 	b.w	8000938 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009c10 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009c10:	6581      	str	r1, [r0, #88]	; 0x58
 8009c12:	301c      	adds	r0, #28
 8009c14:	f011 be18 	b.w	801b848 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009c18 <_ZN8touchgfx3HAL5touchEll>:
 8009c18:	b530      	push	{r4, r5, lr}
 8009c1a:	b087      	sub	sp, #28
 8009c1c:	4604      	mov	r4, r0
 8009c1e:	a804      	add	r0, sp, #16
 8009c20:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009c24:	f002 fc70 	bl	800c508 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009c28:	9b04      	ldr	r3, [sp, #16]
 8009c2a:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009c2e:	a906      	add	r1, sp, #24
 8009c30:	9b05      	ldr	r3, [sp, #20]
 8009c32:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8009c36:	a803      	add	r0, sp, #12
 8009c38:	f002 fcb8 	bl	800c5ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009c3c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8009c40:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009c44:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009c48:	f104 001c 	add.w	r0, r4, #28
 8009c4c:	b189      	cbz	r1, 8009c72 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009c4e:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8009c52:	9300      	str	r3, [sp, #0]
 8009c54:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8009c58:	4613      	mov	r3, r2
 8009c5a:	462a      	mov	r2, r5
 8009c5c:	f011 fe04 	bl	801b868 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009c60:	b128      	cbz	r0, 8009c6e <_ZN8touchgfx3HAL5touchEll+0x56>
 8009c62:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8009c66:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009c68:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009c6c:	6623      	str	r3, [r4, #96]	; 0x60
 8009c6e:	b007      	add	sp, #28
 8009c70:	bd30      	pop	{r4, r5, pc}
 8009c72:	f011 fe3d 	bl	801b8f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009c76:	2301      	movs	r3, #1
 8009c78:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009c7c:	e7f1      	b.n	8009c62 <_ZN8touchgfx3HAL5touchEll+0x4a>

08009c7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009c7e:	b510      	push	{r4, lr}
 8009c80:	2b00      	cmp	r3, #0
 8009c82:	d046      	beq.n	8009d12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009c84:	ea81 0002 	eor.w	r0, r1, r2
 8009c88:	07c4      	lsls	r4, r0, #31
 8009c8a:	d508      	bpl.n	8009c9e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009c8c:	440b      	add	r3, r1
 8009c8e:	3a01      	subs	r2, #1
 8009c90:	428b      	cmp	r3, r1
 8009c92:	d93e      	bls.n	8009d12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009c94:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009c98:	f801 0b01 	strb.w	r0, [r1], #1
 8009c9c:	e7f8      	b.n	8009c90 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009c9e:	07d0      	lsls	r0, r2, #31
 8009ca0:	bf42      	ittt	mi
 8009ca2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009ca6:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009caa:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009cae:	2b01      	cmp	r3, #1
 8009cb0:	d911      	bls.n	8009cd6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009cb2:	ea81 0402 	eor.w	r4, r1, r2
 8009cb6:	07a4      	lsls	r4, r4, #30
 8009cb8:	4610      	mov	r0, r2
 8009cba:	d022      	beq.n	8009d02 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8009cbc:	f023 0401 	bic.w	r4, r3, #1
 8009cc0:	440c      	add	r4, r1
 8009cc2:	428c      	cmp	r4, r1
 8009cc4:	4602      	mov	r2, r0
 8009cc6:	d904      	bls.n	8009cd2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8009cc8:	8812      	ldrh	r2, [r2, #0]
 8009cca:	f821 2b02 	strh.w	r2, [r1], #2
 8009cce:	3002      	adds	r0, #2
 8009cd0:	e7f7      	b.n	8009cc2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8009cd2:	f003 0301 	and.w	r3, r3, #1
 8009cd6:	f023 0003 	bic.w	r0, r3, #3
 8009cda:	4408      	add	r0, r1
 8009cdc:	4288      	cmp	r0, r1
 8009cde:	4614      	mov	r4, r2
 8009ce0:	d904      	bls.n	8009cec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8009ce2:	6824      	ldr	r4, [r4, #0]
 8009ce4:	f841 4b04 	str.w	r4, [r1], #4
 8009ce8:	3204      	adds	r2, #4
 8009cea:	e7f7      	b.n	8009cdc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8009cec:	f003 0303 	and.w	r3, r3, #3
 8009cf0:	440b      	add	r3, r1
 8009cf2:	3a01      	subs	r2, #1
 8009cf4:	428b      	cmp	r3, r1
 8009cf6:	d90c      	bls.n	8009d12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009cf8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009cfc:	f801 0b01 	strb.w	r0, [r1], #1
 8009d00:	e7f8      	b.n	8009cf4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8009d02:	0790      	lsls	r0, r2, #30
 8009d04:	d0e7      	beq.n	8009cd6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009d06:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009d0a:	f821 0b02 	strh.w	r0, [r1], #2
 8009d0e:	3b02      	subs	r3, #2
 8009d10:	e7e1      	b.n	8009cd6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009d12:	2001      	movs	r0, #1
 8009d14:	bd10      	pop	{r4, pc}

08009d16 <_ZN8touchgfx3HAL7noTouchEv>:
 8009d16:	b510      	push	{r4, lr}
 8009d18:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8009d1c:	4604      	mov	r4, r0
 8009d1e:	b153      	cbz	r3, 8009d36 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009d20:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8009d24:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8009d28:	2101      	movs	r1, #1
 8009d2a:	301c      	adds	r0, #28
 8009d2c:	f011 fde0 	bl	801b8f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009d30:	2300      	movs	r3, #0
 8009d32:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009d36:	bd10      	pop	{r4, pc}

08009d38 <_ZN8touchgfx3HAL3lcdEv>:
 8009d38:	4b04      	ldr	r3, [pc, #16]	; (8009d4c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8009d3a:	681b      	ldr	r3, [r3, #0]
 8009d3c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009d40:	b10a      	cbz	r2, 8009d46 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8009d42:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8009d44:	b900      	cbnz	r0, 8009d48 <_ZN8touchgfx3HAL3lcdEv+0x10>
 8009d46:	6898      	ldr	r0, [r3, #8]
 8009d48:	4770      	bx	lr
 8009d4a:	bf00      	nop
 8009d4c:	20013508 	.word	0x20013508

08009d50 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009d50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009d54:	4604      	mov	r4, r0
 8009d56:	6980      	ldr	r0, [r0, #24]
 8009d58:	b085      	sub	sp, #20
 8009d5a:	460f      	mov	r7, r1
 8009d5c:	4690      	mov	r8, r2
 8009d5e:	4699      	mov	r9, r3
 8009d60:	b930      	cbnz	r0, 8009d70 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 8009d62:	4b1c      	ldr	r3, [pc, #112]	; (8009dd4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 8009d64:	4a1c      	ldr	r2, [pc, #112]	; (8009dd8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009d66:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 8009d6a:	481c      	ldr	r0, [pc, #112]	; (8009ddc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 8009d6c:	f011 fe56 	bl	801ba1c <__assert_func>
 8009d70:	ad04      	add	r5, sp, #16
 8009d72:	2600      	movs	r6, #0
 8009d74:	f845 6d04 	str.w	r6, [r5, #-4]!
 8009d78:	6806      	ldr	r6, [r0, #0]
 8009d7a:	9501      	str	r5, [sp, #4]
 8009d7c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8009d80:	9500      	str	r5, [sp, #0]
 8009d82:	6835      	ldr	r5, [r6, #0]
 8009d84:	47a8      	blx	r5
 8009d86:	4d16      	ldr	r5, [pc, #88]	; (8009de0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 8009d88:	4606      	mov	r6, r0
 8009d8a:	f8a5 9000 	strh.w	r9, [r5]
 8009d8e:	f7ff ffd3 	bl	8009d38 <_ZN8touchgfx3HAL3lcdEv>
 8009d92:	6803      	ldr	r3, [r0, #0]
 8009d94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009d96:	4798      	blx	r3
 8009d98:	2801      	cmp	r0, #1
 8009d9a:	d012      	beq.n	8009dc2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 8009d9c:	d306      	bcc.n	8009dac <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 8009d9e:	280d      	cmp	r0, #13
 8009da0:	d80b      	bhi.n	8009dba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009da2:	4b10      	ldr	r3, [pc, #64]	; (8009de4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8009da4:	4a0c      	ldr	r2, [pc, #48]	; (8009dd8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009da6:	f240 1167 	movw	r1, #359	; 0x167
 8009daa:	e7de      	b.n	8009d6a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8009dac:	882b      	ldrh	r3, [r5, #0]
 8009dae:	fb08 7203 	mla	r2, r8, r3, r7
 8009db2:	9b03      	ldr	r3, [sp, #12]
 8009db4:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009db8:	63e3      	str	r3, [r4, #60]	; 0x3c
 8009dba:	4630      	mov	r0, r6
 8009dbc:	b005      	add	sp, #20
 8009dbe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009dc2:	882a      	ldrh	r2, [r5, #0]
 8009dc4:	9b03      	ldr	r3, [sp, #12]
 8009dc6:	fb08 7202 	mla	r2, r8, r2, r7
 8009dca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009dce:	1a9a      	subs	r2, r3, r2
 8009dd0:	63e2      	str	r2, [r4, #60]	; 0x3c
 8009dd2:	e7f2      	b.n	8009dba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009dd4:	0801ee08 	.word	0x0801ee08
 8009dd8:	0801f0c6 	.word	0x0801f0c6
 8009ddc:	0801ee4d 	.word	0x0801ee4d
 8009de0:	20013502 	.word	0x20013502
 8009de4:	0801ee73 	.word	0x0801ee73

08009de8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8009de8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009dea:	b08b      	sub	sp, #44	; 0x2c
 8009dec:	4617      	mov	r7, r2
 8009dee:	4604      	mov	r4, r0
 8009df0:	460e      	mov	r6, r1
 8009df2:	461d      	mov	r5, r3
 8009df4:	f7ff ffa0 	bl	8009d38 <_ZN8touchgfx3HAL3lcdEv>
 8009df8:	6803      	ldr	r3, [r0, #0]
 8009dfa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009dfc:	4798      	blx	r3
 8009dfe:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009e02:	9007      	str	r0, [sp, #28]
 8009e04:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009e08:	4b0d      	ldr	r3, [pc, #52]	; (8009e40 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8009e0a:	6822      	ldr	r2, [r4, #0]
 8009e0c:	881b      	ldrh	r3, [r3, #0]
 8009e0e:	9306      	str	r3, [sp, #24]
 8009e10:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009e14:	9305      	str	r3, [sp, #20]
 8009e16:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009e1a:	9304      	str	r3, [sp, #16]
 8009e1c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009e20:	9303      	str	r3, [sp, #12]
 8009e22:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009e26:	9302      	str	r3, [sp, #8]
 8009e28:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009e2c:	e9cd 5300 	strd	r5, r3, [sp]
 8009e30:	4631      	mov	r1, r6
 8009e32:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8009e34:	463b      	mov	r3, r7
 8009e36:	2200      	movs	r2, #0
 8009e38:	4620      	mov	r0, r4
 8009e3a:	47a8      	blx	r5
 8009e3c:	b00b      	add	sp, #44	; 0x2c
 8009e3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009e40:	20013502 	.word	0x20013502

08009e44 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8009e44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009e48:	4698      	mov	r8, r3
 8009e4a:	6803      	ldr	r3, [r0, #0]
 8009e4c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8009e4e:	4b15      	ldr	r3, [pc, #84]	; (8009ea4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8009e50:	b08b      	sub	sp, #44	; 0x2c
 8009e52:	4617      	mov	r7, r2
 8009e54:	f8b3 9000 	ldrh.w	r9, [r3]
 8009e58:	460e      	mov	r6, r1
 8009e5a:	4604      	mov	r4, r0
 8009e5c:	f7ff ff6c 	bl	8009d38 <_ZN8touchgfx3HAL3lcdEv>
 8009e60:	6803      	ldr	r3, [r0, #0]
 8009e62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e64:	4798      	blx	r3
 8009e66:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009e6a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009e6e:	2302      	movs	r3, #2
 8009e70:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8009e74:	2301      	movs	r3, #1
 8009e76:	9305      	str	r3, [sp, #20]
 8009e78:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009e7c:	9304      	str	r3, [sp, #16]
 8009e7e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009e82:	9303      	str	r3, [sp, #12]
 8009e84:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009e88:	9302      	str	r3, [sp, #8]
 8009e8a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009e8e:	2200      	movs	r2, #0
 8009e90:	e9cd 8300 	strd	r8, r3, [sp]
 8009e94:	4631      	mov	r1, r6
 8009e96:	463b      	mov	r3, r7
 8009e98:	4620      	mov	r0, r4
 8009e9a:	47a8      	blx	r5
 8009e9c:	b00b      	add	sp, #44	; 0x2c
 8009e9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009ea2:	bf00      	nop
 8009ea4:	20013502 	.word	0x20013502

08009ea8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8009ea8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009eac:	4698      	mov	r8, r3
 8009eae:	6803      	ldr	r3, [r0, #0]
 8009eb0:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8009eb2:	4b11      	ldr	r3, [pc, #68]	; (8009ef8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8009eb4:	b087      	sub	sp, #28
 8009eb6:	f8b3 9000 	ldrh.w	r9, [r3]
 8009eba:	460e      	mov	r6, r1
 8009ebc:	4617      	mov	r7, r2
 8009ebe:	4604      	mov	r4, r0
 8009ec0:	f7ff ff3a 	bl	8009d38 <_ZN8touchgfx3HAL3lcdEv>
 8009ec4:	6803      	ldr	r3, [r0, #0]
 8009ec6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009ec8:	4798      	blx	r3
 8009eca:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8009ece:	f8cd 900c 	str.w	r9, [sp, #12]
 8009ed2:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8009ed6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8009eda:	9302      	str	r3, [sp, #8]
 8009edc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009ee0:	9301      	str	r3, [sp, #4]
 8009ee2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8009ee6:	9300      	str	r3, [sp, #0]
 8009ee8:	463a      	mov	r2, r7
 8009eea:	4643      	mov	r3, r8
 8009eec:	4631      	mov	r1, r6
 8009eee:	4620      	mov	r0, r4
 8009ef0:	47a8      	blx	r5
 8009ef2:	b007      	add	sp, #28
 8009ef4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009ef8:	20013502 	.word	0x20013502

08009efc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f00:	4604      	mov	r4, r0
 8009f02:	b08f      	sub	sp, #60	; 0x3c
 8009f04:	4610      	mov	r0, r2
 8009f06:	460d      	mov	r5, r1
 8009f08:	4691      	mov	r9, r2
 8009f0a:	461e      	mov	r6, r3
 8009f0c:	f005 fc60 	bl	800f7d0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009f10:	2800      	cmp	r0, #0
 8009f12:	f000 809c 	beq.w	800a04e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 8009f16:	6823      	ldr	r3, [r4, #0]
 8009f18:	f8df b194 	ldr.w	fp, [pc, #404]	; 800a0b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 8009f1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009f1e:	f8df a194 	ldr.w	sl, [pc, #404]	; 800a0b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8009f22:	4f60      	ldr	r7, [pc, #384]	; (800a0a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009f24:	4620      	mov	r0, r4
 8009f26:	4798      	blx	r3
 8009f28:	6823      	ldr	r3, [r4, #0]
 8009f2a:	4620      	mov	r0, r4
 8009f2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f2e:	4798      	blx	r3
 8009f30:	f8bb 3000 	ldrh.w	r3, [fp]
 8009f34:	9301      	str	r3, [sp, #4]
 8009f36:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8009f3a:	f8ba 3000 	ldrh.w	r3, [sl]
 8009f3e:	9302      	str	r3, [sp, #8]
 8009f40:	883b      	ldrh	r3, [r7, #0]
 8009f42:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8009f46:	9303      	str	r3, [sp, #12]
 8009f48:	4b57      	ldr	r3, [pc, #348]	; (800a0a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009f4a:	9305      	str	r3, [sp, #20]
 8009f4c:	881a      	ldrh	r2, [r3, #0]
 8009f4e:	9204      	str	r2, [sp, #16]
 8009f50:	4640      	mov	r0, r8
 8009f52:	f005 fcf7 	bl	800f944 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009f56:	8038      	strh	r0, [r7, #0]
 8009f58:	4640      	mov	r0, r8
 8009f5a:	f005 fd2d 	bl	800f9b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009f5e:	9b05      	ldr	r3, [sp, #20]
 8009f60:	8018      	strh	r0, [r3, #0]
 8009f62:	4b52      	ldr	r3, [pc, #328]	; (800a0ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009f64:	781b      	ldrb	r3, [r3, #0]
 8009f66:	2b00      	cmp	r3, #0
 8009f68:	d174      	bne.n	800a054 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 8009f6a:	883b      	ldrh	r3, [r7, #0]
 8009f6c:	f8ab 3000 	strh.w	r3, [fp]
 8009f70:	f8aa 0000 	strh.w	r0, [sl]
 8009f74:	4648      	mov	r0, r9
 8009f76:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8009f7a:	f005 fc29 	bl	800f7d0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009f7e:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8009f82:	2200      	movs	r2, #0
 8009f84:	4611      	mov	r1, r2
 8009f86:	4628      	mov	r0, r5
 8009f88:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8009f8c:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8009f90:	f7f8 fcdc 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 8009f94:	2301      	movs	r3, #1
 8009f96:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8009f9a:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8009f9e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009fa2:	2b00      	cmp	r3, #0
 8009fa4:	dd5c      	ble.n	800a060 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8009fa6:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009faa:	2b00      	cmp	r3, #0
 8009fac:	dd58      	ble.n	800a060 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8009fae:	462a      	mov	r2, r5
 8009fb0:	ab0a      	add	r3, sp, #40	; 0x28
 8009fb2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009fb6:	6851      	ldr	r1, [r2, #4]
 8009fb8:	c303      	stmia	r3!, {r0, r1}
 8009fba:	4631      	mov	r1, r6
 8009fbc:	a80a      	add	r0, sp, #40	; 0x28
 8009fbe:	f7ff fbeb 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 8009fc2:	4b38      	ldr	r3, [pc, #224]	; (800a0a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009fc4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8009fc8:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8009fcc:	2100      	movs	r1, #0
 8009fce:	aa0a      	add	r2, sp, #40	; 0x28
 8009fd0:	4b35      	ldr	r3, [pc, #212]	; (800a0a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009fd2:	910c      	str	r1, [sp, #48]	; 0x30
 8009fd4:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009fd8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009fdc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8009fe0:	ab08      	add	r3, sp, #32
 8009fe2:	e883 0003 	stmia.w	r3, {r0, r1}
 8009fe6:	4618      	mov	r0, r3
 8009fe8:	a90c      	add	r1, sp, #48	; 0x30
 8009fea:	f7ff fbd5 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 8009fee:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8009ff0:	2b00      	cmp	r3, #0
 8009ff2:	d13c      	bne.n	800a06e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 8009ff4:	2000      	movs	r0, #0
 8009ff6:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8009ffa:	2600      	movs	r6, #0
 8009ffc:	682a      	ldr	r2, [r5, #0]
 8009ffe:	696b      	ldr	r3, [r5, #20]
 800a000:	616e      	str	r6, [r5, #20]
 800a002:	9305      	str	r3, [sp, #20]
 800a004:	6892      	ldr	r2, [r2, #8]
 800a006:	a908      	add	r1, sp, #32
 800a008:	4628      	mov	r0, r5
 800a00a:	4790      	blx	r2
 800a00c:	9b05      	ldr	r3, [sp, #20]
 800a00e:	616b      	str	r3, [r5, #20]
 800a010:	4652      	mov	r2, sl
 800a012:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800a016:	4649      	mov	r1, r9
 800a018:	4628      	mov	r0, r5
 800a01a:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800a01e:	f7f8 fc95 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 800a022:	4b23      	ldr	r3, [pc, #140]	; (800a0b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800a024:	9a01      	ldr	r2, [sp, #4]
 800a026:	801a      	strh	r2, [r3, #0]
 800a028:	4b22      	ldr	r3, [pc, #136]	; (800a0b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800a02a:	9a02      	ldr	r2, [sp, #8]
 800a02c:	801a      	strh	r2, [r3, #0]
 800a02e:	4b1d      	ldr	r3, [pc, #116]	; (800a0a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800a030:	9a03      	ldr	r2, [sp, #12]
 800a032:	801a      	strh	r2, [r3, #0]
 800a034:	4b1c      	ldr	r3, [pc, #112]	; (800a0a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a036:	9a04      	ldr	r2, [sp, #16]
 800a038:	801a      	strh	r2, [r3, #0]
 800a03a:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800a03e:	6823      	ldr	r3, [r4, #0]
 800a040:	4620      	mov	r0, r4
 800a042:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a044:	4798      	blx	r3
 800a046:	6823      	ldr	r3, [r4, #0]
 800a048:	4620      	mov	r0, r4
 800a04a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a04c:	4798      	blx	r3
 800a04e:	b00f      	add	sp, #60	; 0x3c
 800a050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a054:	883b      	ldrh	r3, [r7, #0]
 800a056:	f8ab 0000 	strh.w	r0, [fp]
 800a05a:	f8aa 3000 	strh.w	r3, [sl]
 800a05e:	e789      	b.n	8009f74 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 800a060:	462a      	mov	r2, r5
 800a062:	ab0a      	add	r3, sp, #40	; 0x28
 800a064:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a068:	6851      	ldr	r1, [r2, #4]
 800a06a:	c303      	stmia	r3!, {r0, r1}
 800a06c:	e7a9      	b.n	8009fc2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 800a06e:	a807      	add	r0, sp, #28
 800a070:	f005 fdfa 	bl	800fc68 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a074:	4606      	mov	r6, r0
 800a076:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800a078:	6803      	ldr	r3, [r0, #0]
 800a07a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a07c:	4798      	blx	r3
 800a07e:	4286      	cmp	r6, r0
 800a080:	d1b8      	bne.n	8009ff4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 800a082:	f7ff fe59 	bl	8009d38 <_ZN8touchgfx3HAL3lcdEv>
 800a086:	6803      	ldr	r3, [r0, #0]
 800a088:	4606      	mov	r6, r0
 800a08a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a08c:	9305      	str	r3, [sp, #20]
 800a08e:	a807      	add	r0, sp, #28
 800a090:	f005 fdea 	bl	800fc68 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a094:	9b05      	ldr	r3, [sp, #20]
 800a096:	4601      	mov	r1, r0
 800a098:	4630      	mov	r0, r6
 800a09a:	4798      	blx	r3
 800a09c:	f080 0001 	eor.w	r0, r0, #1
 800a0a0:	b2c0      	uxtb	r0, r0
 800a0a2:	e7a8      	b.n	8009ff6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800a0a4:	200134fc 	.word	0x200134fc
 800a0a8:	200134fe 	.word	0x200134fe
 800a0ac:	20013500 	.word	0x20013500
 800a0b0:	20013502 	.word	0x20013502
 800a0b4:	20013504 	.word	0x20013504

0800a0b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800a0b8:	b510      	push	{r4, lr}
 800a0ba:	4b07      	ldr	r3, [pc, #28]	; (800a0d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800a0bc:	781b      	ldrb	r3, [r3, #0]
 800a0be:	4604      	mov	r4, r0
 800a0c0:	b13b      	cbz	r3, 800a0d2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a0c2:	6803      	ldr	r3, [r0, #0]
 800a0c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a0c6:	4798      	blx	r3
 800a0c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a0ca:	4283      	cmp	r3, r0
 800a0cc:	d101      	bne.n	800a0d2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a0ce:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800a0d0:	bd10      	pop	{r4, pc}
 800a0d2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800a0d4:	e7fc      	b.n	800a0d0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800a0d6:	bf00      	nop
 800a0d8:	20013506 	.word	0x20013506

0800a0dc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800a0dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a0e0:	b088      	sub	sp, #32
 800a0e2:	461d      	mov	r5, r3
 800a0e4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800a0e8:	2400      	movs	r4, #0
 800a0ea:	f8bd 8040 	ldrh.w	r8, [sp, #64]	; 0x40
 800a0ee:	f8bd 7044 	ldrh.w	r7, [sp, #68]	; 0x44
 800a0f2:	f8bd 904c 	ldrh.w	r9, [sp, #76]	; 0x4c
 800a0f6:	9403      	str	r4, [sp, #12]
 800a0f8:	e9cd 3100 	strd	r3, r1, [sp]
 800a0fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a100:	f8ad 8014 	strh.w	r8, [sp, #20]
 800a104:	4692      	mov	sl, r2
 800a106:	4606      	mov	r6, r0
 800a108:	f8ad 7016 	strh.w	r7, [sp, #22]
 800a10c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a110:	f88d 401c 	strb.w	r4, [sp, #28]
 800a114:	f7ff ffd0 	bl	800a0b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a118:	fb09 a505 	mla	r5, r9, r5, sl
 800a11c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a120:	9504      	str	r5, [sp, #16]
 800a122:	f8ad 901a 	strh.w	r9, [sp, #26]
 800a126:	f88d 401e 	strb.w	r4, [sp, #30]
 800a12a:	f88d 401d 	strb.w	r4, [sp, #29]
 800a12e:	f88d 401f 	strb.w	r4, [sp, #31]
 800a132:	f1b8 0f00 	cmp.w	r8, #0
 800a136:	d000      	beq.n	800a13a <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x5e>
 800a138:	b937      	cbnz	r7, 800a148 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6c>
 800a13a:	4b0d      	ldr	r3, [pc, #52]	; (800a170 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 800a13c:	4a0d      	ldr	r2, [pc, #52]	; (800a174 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 800a13e:	f240 210b 	movw	r1, #523	; 0x20b
 800a142:	480d      	ldr	r0, [pc, #52]	; (800a178 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800a144:	f011 fc6a 	bl	801ba1c <__assert_func>
 800a148:	6833      	ldr	r3, [r6, #0]
 800a14a:	9c00      	ldr	r4, [sp, #0]
 800a14c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a14e:	4630      	mov	r0, r6
 800a150:	4798      	blx	r3
 800a152:	4220      	tst	r0, r4
 800a154:	d104      	bne.n	800a160 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x84>
 800a156:	4b09      	ldr	r3, [pc, #36]	; (800a17c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 800a158:	4a06      	ldr	r2, [pc, #24]	; (800a174 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 800a15a:	f44f 7103 	mov.w	r1, #524	; 0x20c
 800a15e:	e7f0      	b.n	800a142 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x66>
 800a160:	6870      	ldr	r0, [r6, #4]
 800a162:	6803      	ldr	r3, [r0, #0]
 800a164:	4669      	mov	r1, sp
 800a166:	685b      	ldr	r3, [r3, #4]
 800a168:	4798      	blx	r3
 800a16a:	b008      	add	sp, #32
 800a16c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a170:	0801ec9b 	.word	0x0801ec9b
 800a174:	0801eefb 	.word	0x0801eefb
 800a178:	0801ee4d 	.word	0x0801ee4d
 800a17c:	0801ecd3 	.word	0x0801ecd3

0800a180 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800a180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a184:	b089      	sub	sp, #36	; 0x24
 800a186:	2400      	movs	r4, #0
 800a188:	461d      	mov	r5, r3
 800a18a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800a18e:	f8bd 9050 	ldrh.w	r9, [sp, #80]	; 0x50
 800a192:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 800a196:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800a19a:	9403      	str	r4, [sp, #12]
 800a19c:	468a      	mov	sl, r1
 800a19e:	4693      	mov	fp, r2
 800a1a0:	4606      	mov	r6, r0
 800a1a2:	e9cd 3400 	strd	r3, r4, [sp]
 800a1a6:	f7ff ff87 	bl	800a0b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a1aa:	fb09 b505 	mla	r5, r9, r5, fp
 800a1ae:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a1b2:	9504      	str	r5, [sp, #16]
 800a1b4:	f8ad 8014 	strh.w	r8, [sp, #20]
 800a1b8:	f8ad 7016 	strh.w	r7, [sp, #22]
 800a1bc:	f8ad 4018 	strh.w	r4, [sp, #24]
 800a1c0:	f8ad 901a 	strh.w	r9, [sp, #26]
 800a1c4:	f8cd a00c 	str.w	sl, [sp, #12]
 800a1c8:	f8ad 401c 	strh.w	r4, [sp, #28]
 800a1cc:	f88d 401e 	strb.w	r4, [sp, #30]
 800a1d0:	f88d 401f 	strb.w	r4, [sp, #31]
 800a1d4:	f1b8 0f00 	cmp.w	r8, #0
 800a1d8:	d000      	beq.n	800a1dc <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x5c>
 800a1da:	b937      	cbnz	r7, 800a1ea <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6a>
 800a1dc:	4b0d      	ldr	r3, [pc, #52]	; (800a214 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 800a1de:	4a0e      	ldr	r2, [pc, #56]	; (800a218 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 800a1e0:	f240 2121 	movw	r1, #545	; 0x221
 800a1e4:	480d      	ldr	r0, [pc, #52]	; (800a21c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 800a1e6:	f011 fc19 	bl	801ba1c <__assert_func>
 800a1ea:	6833      	ldr	r3, [r6, #0]
 800a1ec:	9c00      	ldr	r4, [sp, #0]
 800a1ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a1f0:	4630      	mov	r0, r6
 800a1f2:	4798      	blx	r3
 800a1f4:	4220      	tst	r0, r4
 800a1f6:	d104      	bne.n	800a202 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x82>
 800a1f8:	4b09      	ldr	r3, [pc, #36]	; (800a220 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 800a1fa:	4a07      	ldr	r2, [pc, #28]	; (800a218 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 800a1fc:	f240 2122 	movw	r1, #546	; 0x222
 800a200:	e7f0      	b.n	800a1e4 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x64>
 800a202:	6870      	ldr	r0, [r6, #4]
 800a204:	6803      	ldr	r3, [r0, #0]
 800a206:	4669      	mov	r1, sp
 800a208:	685b      	ldr	r3, [r3, #4]
 800a20a:	4798      	blx	r3
 800a20c:	b009      	add	sp, #36	; 0x24
 800a20e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a212:	bf00      	nop
 800a214:	0801ed18 	.word	0x0801ed18
 800a218:	0801ef71 	.word	0x0801ef71
 800a21c:	0801ee4d 	.word	0x0801ee4d
 800a220:	0801ed50 	.word	0x0801ed50

0800a224 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a224:	b510      	push	{r4, lr}
 800a226:	4b0b      	ldr	r3, [pc, #44]	; (800a254 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800a228:	781b      	ldrb	r3, [r3, #0]
 800a22a:	4604      	mov	r4, r0
 800a22c:	b95b      	cbnz	r3, 800a246 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a22e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800a232:	2b02      	cmp	r3, #2
 800a234:	d007      	beq.n	800a246 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a236:	6840      	ldr	r0, [r0, #4]
 800a238:	f000 fb62 	bl	800a900 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a23c:	b118      	cbz	r0, 800a246 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a23e:	6862      	ldr	r2, [r4, #4]
 800a240:	7a53      	ldrb	r3, [r2, #9]
 800a242:	2b00      	cmp	r3, #0
 800a244:	d0fc      	beq.n	800a240 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a246:	f7f6 fb6f 	bl	8000928 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a24a:	4620      	mov	r0, r4
 800a24c:	f7ff ff34 	bl	800a0b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a250:	bd10      	pop	{r4, pc}
 800a252:	bf00      	nop
 800a254:	20013506 	.word	0x20013506

0800a258 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800a258:	b508      	push	{r3, lr}
 800a25a:	290d      	cmp	r1, #13
 800a25c:	d817      	bhi.n	800a28e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800a25e:	e8df f001 	tbb	[pc, r1]
 800a262:	090b      	.short	0x090b
 800a264:	0d0d0d07 	.word	0x0d0d0d07
 800a268:	1414140d 	.word	0x1414140d
 800a26c:	0d0d1414 	.word	0x0d0d1414
 800a270:	2020      	movs	r0, #32
 800a272:	bd08      	pop	{r3, pc}
 800a274:	2018      	movs	r0, #24
 800a276:	e7fc      	b.n	800a272 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a278:	2010      	movs	r0, #16
 800a27a:	e7fa      	b.n	800a272 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a27c:	4b05      	ldr	r3, [pc, #20]	; (800a294 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800a27e:	4a06      	ldr	r2, [pc, #24]	; (800a298 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800a280:	4806      	ldr	r0, [pc, #24]	; (800a29c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800a282:	f240 2182 	movw	r1, #642	; 0x282
 800a286:	f011 fbc9 	bl	801ba1c <__assert_func>
 800a28a:	2008      	movs	r0, #8
 800a28c:	e7f1      	b.n	800a272 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a28e:	2000      	movs	r0, #0
 800a290:	e7ef      	b.n	800a272 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a292:	bf00      	nop
 800a294:	0801eec9 	.word	0x0801eec9
 800a298:	0801f29c 	.word	0x0801f29c
 800a29c:	0801ee4d 	.word	0x0801ee4d

0800a2a0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800a2a0:	b570      	push	{r4, r5, r6, lr}
 800a2a2:	460d      	mov	r5, r1
 800a2a4:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800a2a8:	4616      	mov	r6, r2
 800a2aa:	461c      	mov	r4, r3
 800a2ac:	f7ff ffd4 	bl	800a258 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800a2b0:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800a2b4:	10c0      	asrs	r0, r0, #3
 800a2b6:	fb06 5101 	mla	r1, r6, r1, r5
 800a2ba:	fb00 4001 	mla	r0, r0, r1, r4
 800a2be:	bd70      	pop	{r4, r5, r6, pc}

0800a2c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800a2c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a2c4:	b08a      	sub	sp, #40	; 0x28
 800a2c6:	f04f 0c00 	mov.w	ip, #0
 800a2ca:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 800a2ce:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800a2d2:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800a2d6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800a2da:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
 800a2de:	f8cd c014 	str.w	ip, [sp, #20]
 800a2e2:	2d0b      	cmp	r5, #11
 800a2e4:	4604      	mov	r4, r0
 800a2e6:	469a      	mov	sl, r3
 800a2e8:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800a2ec:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a2f0:	d12d      	bne.n	800a34e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 800a2f2:	2080      	movs	r0, #128	; 0x80
 800a2f4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a2f8:	9204      	str	r2, [sp, #16]
 800a2fa:	4620      	mov	r0, r4
 800a2fc:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800a300:	f8ad 2020 	strh.w	r2, [sp, #32]
 800a304:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a308:	f8ad 701c 	strh.w	r7, [sp, #28]
 800a30c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a310:	f7ff fed2 	bl	800a0b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a314:	e9cd 9800 	strd	r9, r8, [sp]
 800a318:	4603      	mov	r3, r0
 800a31a:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800a31e:	4651      	mov	r1, sl
 800a320:	4620      	mov	r0, r4
 800a322:	f7ff ffbd 	bl	800a2a0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a326:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 800a32a:	9006      	str	r0, [sp, #24]
 800a32c:	f8ad 9022 	strh.w	r9, [sp, #34]	; 0x22
 800a330:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800a334:	f88d 8026 	strb.w	r8, [sp, #38]	; 0x26
 800a338:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
 800a33c:	b107      	cbz	r7, 800a340 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x80>
 800a33e:	b9d6      	cbnz	r6, 800a376 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb6>
 800a340:	4b17      	ldr	r3, [pc, #92]	; (800a3a0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe0>)
 800a342:	4a18      	ldr	r2, [pc, #96]	; (800a3a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 800a344:	f44f 71ea 	mov.w	r1, #468	; 0x1d4
 800a348:	4817      	ldr	r0, [pc, #92]	; (800a3a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800a34a:	f011 fb67 	bl	801ba1c <__assert_func>
 800a34e:	2d02      	cmp	r5, #2
 800a350:	d108      	bne.n	800a364 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa4>
 800a352:	2bff      	cmp	r3, #255	; 0xff
 800a354:	d104      	bne.n	800a360 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa0>
 800a356:	2800      	cmp	r0, #0
 800a358:	bf14      	ite	ne
 800a35a:	2040      	movne	r0, #64	; 0x40
 800a35c:	2020      	moveq	r0, #32
 800a35e:	e7c9      	b.n	800a2f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a360:	2040      	movs	r0, #64	; 0x40
 800a362:	e7c7      	b.n	800a2f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a364:	2bff      	cmp	r3, #255	; 0xff
 800a366:	d104      	bne.n	800a372 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb2>
 800a368:	2800      	cmp	r0, #0
 800a36a:	bf14      	ite	ne
 800a36c:	2004      	movne	r0, #4
 800a36e:	2001      	moveq	r0, #1
 800a370:	e7c0      	b.n	800a2f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a372:	2004      	movs	r0, #4
 800a374:	e7be      	b.n	800a2f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a376:	6823      	ldr	r3, [r4, #0]
 800a378:	9d02      	ldr	r5, [sp, #8]
 800a37a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a37c:	4620      	mov	r0, r4
 800a37e:	4798      	blx	r3
 800a380:	4228      	tst	r0, r5
 800a382:	d104      	bne.n	800a38e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xce>
 800a384:	4b09      	ldr	r3, [pc, #36]	; (800a3ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 800a386:	4a07      	ldr	r2, [pc, #28]	; (800a3a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 800a388:	f240 11d5 	movw	r1, #469	; 0x1d5
 800a38c:	e7dc      	b.n	800a348 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x88>
 800a38e:	6860      	ldr	r0, [r4, #4]
 800a390:	6803      	ldr	r3, [r0, #0]
 800a392:	a902      	add	r1, sp, #8
 800a394:	685b      	ldr	r3, [r3, #4]
 800a396:	4798      	blx	r3
 800a398:	b00a      	add	sp, #40	; 0x28
 800a39a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a39e:	bf00      	nop
 800a3a0:	0801ec9b 	.word	0x0801ec9b
 800a3a4:	0801f12a 	.word	0x0801f12a
 800a3a8:	0801ee4d 	.word	0x0801ee4d
 800a3ac:	0801ecd3 	.word	0x0801ecd3

0800a3b0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800a3b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a3b4:	b08b      	sub	sp, #44	; 0x2c
 800a3b6:	469b      	mov	fp, r3
 800a3b8:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800a3bc:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800a3c0:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800a3c4:	2fff      	cmp	r7, #255	; 0xff
 800a3c6:	bf14      	ite	ne
 800a3c8:	2308      	movne	r3, #8
 800a3ca:	2302      	moveq	r3, #2
 800a3cc:	2600      	movs	r6, #0
 800a3ce:	4604      	mov	r4, r0
 800a3d0:	4689      	mov	r9, r1
 800a3d2:	4692      	mov	sl, r2
 800a3d4:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800a3d8:	9605      	str	r6, [sp, #20]
 800a3da:	f7ff fe6d 	bl	800a0b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a3de:	e9cd 8500 	strd	r8, r5, [sp]
 800a3e2:	4603      	mov	r3, r0
 800a3e4:	465a      	mov	r2, fp
 800a3e6:	4651      	mov	r1, sl
 800a3e8:	4620      	mov	r0, r4
 800a3ea:	f7ff ff59 	bl	800a2a0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a3ee:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a3f2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a3f6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a3fa:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a3fe:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800a402:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
 800a406:	6823      	ldr	r3, [r4, #0]
 800a408:	9006      	str	r0, [sp, #24]
 800a40a:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800a40e:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800a412:	f8ad 6020 	strh.w	r6, [sp, #32]
 800a416:	f8ad 8022 	strh.w	r8, [sp, #34]	; 0x22
 800a41a:	f8cd 9014 	str.w	r9, [sp, #20]
 800a41e:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800a422:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a424:	9d02      	ldr	r5, [sp, #8]
 800a426:	4620      	mov	r0, r4
 800a428:	4798      	blx	r3
 800a42a:	4228      	tst	r0, r5
 800a42c:	d106      	bne.n	800a43c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>
 800a42e:	4b07      	ldr	r3, [pc, #28]	; (800a44c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x9c>)
 800a430:	4a07      	ldr	r2, [pc, #28]	; (800a450 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 800a432:	4808      	ldr	r0, [pc, #32]	; (800a454 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 800a434:	f240 2137 	movw	r1, #567	; 0x237
 800a438:	f011 faf0 	bl	801ba1c <__assert_func>
 800a43c:	6860      	ldr	r0, [r4, #4]
 800a43e:	6803      	ldr	r3, [r0, #0]
 800a440:	a902      	add	r1, sp, #8
 800a442:	685b      	ldr	r3, [r3, #4]
 800a444:	4798      	blx	r3
 800a446:	b00b      	add	sp, #44	; 0x2c
 800a448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a44c:	0801ecd3 	.word	0x0801ecd3
 800a450:	0801f201 	.word	0x0801f201
 800a454:	0801ee4d 	.word	0x0801ee4d

0800a458 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a458:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a45c:	461f      	mov	r7, r3
 800a45e:	4b0b      	ldr	r3, [pc, #44]	; (800a48c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a460:	460d      	mov	r5, r1
 800a462:	f8b3 8000 	ldrh.w	r8, [r3]
 800a466:	4616      	mov	r6, r2
 800a468:	4604      	mov	r4, r0
 800a46a:	f7ff fc65 	bl	8009d38 <_ZN8touchgfx3HAL3lcdEv>
 800a46e:	6803      	ldr	r3, [r0, #0]
 800a470:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a472:	4798      	blx	r3
 800a474:	463b      	mov	r3, r7
 800a476:	e9cd 8000 	strd	r8, r0, [sp]
 800a47a:	4632      	mov	r2, r6
 800a47c:	4629      	mov	r1, r5
 800a47e:	4620      	mov	r0, r4
 800a480:	f7ff ff0e 	bl	800a2a0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a484:	b002      	add	sp, #8
 800a486:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a48a:	bf00      	nop
 800a48c:	20013502 	.word	0x20013502

0800a490 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800a490:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a494:	b088      	sub	sp, #32
 800a496:	4698      	mov	r8, r3
 800a498:	2300      	movs	r3, #0
 800a49a:	9303      	str	r3, [sp, #12]
 800a49c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a4a0:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800a4a4:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800a4a8:	f8ad 6014 	strh.w	r6, [sp, #20]
 800a4ac:	e9cd 3100 	strd	r3, r1, [sp]
 800a4b0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a4b4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a4b8:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800a4bc:	f88d 301c 	strb.w	r3, [sp, #28]
 800a4c0:	4617      	mov	r7, r2
 800a4c2:	4604      	mov	r4, r0
 800a4c4:	f8ad 5016 	strh.w	r5, [sp, #22]
 800a4c8:	f7ff fdf6 	bl	800a0b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a4cc:	4642      	mov	r2, r8
 800a4ce:	4603      	mov	r3, r0
 800a4d0:	4639      	mov	r1, r7
 800a4d2:	4620      	mov	r0, r4
 800a4d4:	f7ff ffc0 	bl	800a458 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a4d8:	4b18      	ldr	r3, [pc, #96]	; (800a53c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xac>)
 800a4da:	9004      	str	r0, [sp, #16]
 800a4dc:	881b      	ldrh	r3, [r3, #0]
 800a4de:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a4e2:	f7ff fc29 	bl	8009d38 <_ZN8touchgfx3HAL3lcdEv>
 800a4e6:	6803      	ldr	r3, [r0, #0]
 800a4e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a4ea:	4798      	blx	r3
 800a4ec:	f88d 001e 	strb.w	r0, [sp, #30]
 800a4f0:	f88d 001d 	strb.w	r0, [sp, #29]
 800a4f4:	b106      	cbz	r6, 800a4f8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 800a4f6:	b935      	cbnz	r5, 800a506 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 800a4f8:	4b11      	ldr	r3, [pc, #68]	; (800a540 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 800a4fa:	4a12      	ldr	r2, [pc, #72]	; (800a544 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 800a4fc:	f240 11f1 	movw	r1, #497	; 0x1f1
 800a500:	4811      	ldr	r0, [pc, #68]	; (800a548 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800a502:	f011 fa8b 	bl	801ba1c <__assert_func>
 800a506:	6823      	ldr	r3, [r4, #0]
 800a508:	9d00      	ldr	r5, [sp, #0]
 800a50a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a50c:	4620      	mov	r0, r4
 800a50e:	4798      	blx	r3
 800a510:	4228      	tst	r0, r5
 800a512:	d104      	bne.n	800a51e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 800a514:	4b0d      	ldr	r3, [pc, #52]	; (800a54c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 800a516:	4a0b      	ldr	r2, [pc, #44]	; (800a544 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 800a518:	f44f 71f9 	mov.w	r1, #498	; 0x1f2
 800a51c:	e7f0      	b.n	800a500 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 800a51e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a520:	9303      	str	r3, [sp, #12]
 800a522:	6860      	ldr	r0, [r4, #4]
 800a524:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800a528:	f88d 301f 	strb.w	r3, [sp, #31]
 800a52c:	6803      	ldr	r3, [r0, #0]
 800a52e:	4669      	mov	r1, sp
 800a530:	685b      	ldr	r3, [r3, #4]
 800a532:	4798      	blx	r3
 800a534:	b008      	add	sp, #32
 800a536:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a53a:	bf00      	nop
 800a53c:	20013502 	.word	0x20013502
 800a540:	0801ec9b 	.word	0x0801ec9b
 800a544:	0801efd6 	.word	0x0801efd6
 800a548:	0801ee4d 	.word	0x0801ee4d
 800a54c:	0801ecd3 	.word	0x0801ecd3

0800a550 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a550:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a552:	b08b      	sub	sp, #44	; 0x2c
 800a554:	466b      	mov	r3, sp
 800a556:	e883 0006 	stmia.w	r3, {r1, r2}
 800a55a:	4b21      	ldr	r3, [pc, #132]	; (800a5e0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800a55c:	781b      	ldrb	r3, [r3, #0]
 800a55e:	4604      	mov	r4, r0
 800a560:	b933      	cbnz	r3, 800a570 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800a562:	4b20      	ldr	r3, [pc, #128]	; (800a5e4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800a564:	4a20      	ldr	r2, [pc, #128]	; (800a5e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800a566:	4821      	ldr	r0, [pc, #132]	; (800a5ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800a568:	f44f 7112 	mov.w	r1, #584	; 0x248
 800a56c:	f011 fa56 	bl	801ba1c <__assert_func>
 800a570:	2301      	movs	r3, #1
 800a572:	9302      	str	r3, [sp, #8]
 800a574:	6803      	ldr	r3, [r0, #0]
 800a576:	f8bd 6000 	ldrh.w	r6, [sp]
 800a57a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a57c:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a580:	2500      	movs	r5, #0
 800a582:	9505      	str	r5, [sp, #20]
 800a584:	4798      	blx	r3
 800a586:	463a      	mov	r2, r7
 800a588:	4631      	mov	r1, r6
 800a58a:	4603      	mov	r3, r0
 800a58c:	4620      	mov	r0, r4
 800a58e:	f7ff ff63 	bl	800a458 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a592:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a594:	9306      	str	r3, [sp, #24]
 800a596:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a59a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a59e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a5a2:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a5a6:	4b12      	ldr	r3, [pc, #72]	; (800a5f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 800a5a8:	9003      	str	r0, [sp, #12]
 800a5aa:	881b      	ldrh	r3, [r3, #0]
 800a5ac:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a5b0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a5b4:	f7ff fbc0 	bl	8009d38 <_ZN8touchgfx3HAL3lcdEv>
 800a5b8:	6803      	ldr	r3, [r0, #0]
 800a5ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a5bc:	4798      	blx	r3
 800a5be:	23ff      	movs	r3, #255	; 0xff
 800a5c0:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a5c4:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a5c8:	6860      	ldr	r0, [r4, #4]
 800a5ca:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a5ce:	f88d 5027 	strb.w	r5, [sp, #39]	; 0x27
 800a5d2:	6803      	ldr	r3, [r0, #0]
 800a5d4:	a902      	add	r1, sp, #8
 800a5d6:	685b      	ldr	r3, [r3, #4]
 800a5d8:	4798      	blx	r3
 800a5da:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a5dc:	b00b      	add	sp, #44	; 0x2c
 800a5de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a5e0:	20013507 	.word	0x20013507
 800a5e4:	0801ed9a 	.word	0x0801ed9a
 800a5e8:	0801f080 	.word	0x0801f080
 800a5ec:	0801ee4d 	.word	0x0801ee4d
 800a5f0:	20013502 	.word	0x20013502

0800a5f4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a5f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a5f8:	b08a      	sub	sp, #40	; 0x28
 800a5fa:	466d      	mov	r5, sp
 800a5fc:	e885 0006 	stmia.w	r5, {r1, r2}
 800a600:	461d      	mov	r5, r3
 800a602:	2301      	movs	r3, #1
 800a604:	9302      	str	r3, [sp, #8]
 800a606:	6803      	ldr	r3, [r0, #0]
 800a608:	f8bd 7000 	ldrh.w	r7, [sp]
 800a60c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a60e:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800a612:	2600      	movs	r6, #0
 800a614:	9605      	str	r6, [sp, #20]
 800a616:	4604      	mov	r4, r0
 800a618:	4798      	blx	r3
 800a61a:	4642      	mov	r2, r8
 800a61c:	4639      	mov	r1, r7
 800a61e:	4603      	mov	r3, r0
 800a620:	4620      	mov	r0, r4
 800a622:	f7ff ff19 	bl	800a458 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a626:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a62a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a62e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a632:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a636:	4b10      	ldr	r3, [pc, #64]	; (800a678 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x84>)
 800a638:	9003      	str	r0, [sp, #12]
 800a63a:	881b      	ldrh	r3, [r3, #0]
 800a63c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a640:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a642:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a646:	9506      	str	r5, [sp, #24]
 800a648:	f7ff fb76 	bl	8009d38 <_ZN8touchgfx3HAL3lcdEv>
 800a64c:	6803      	ldr	r3, [r0, #0]
 800a64e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a650:	4798      	blx	r3
 800a652:	23ff      	movs	r3, #255	; 0xff
 800a654:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a658:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a65c:	6860      	ldr	r0, [r4, #4]
 800a65e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a662:	f88d 6027 	strb.w	r6, [sp, #39]	; 0x27
 800a666:	6803      	ldr	r3, [r0, #0]
 800a668:	a902      	add	r1, sp, #8
 800a66a:	685b      	ldr	r3, [r3, #4]
 800a66c:	4798      	blx	r3
 800a66e:	4628      	mov	r0, r5
 800a670:	b00a      	add	sp, #40	; 0x28
 800a672:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a676:	bf00      	nop
 800a678:	20013502 	.word	0x20013502

0800a67c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a67c:	b570      	push	{r4, r5, r6, lr}
 800a67e:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a682:	4604      	mov	r4, r0
 800a684:	b19b      	cbz	r3, 800a6ae <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a686:	2002      	movs	r0, #2
 800a688:	f7f6 f85e 	bl	8000748 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a68c:	2300      	movs	r3, #0
 800a68e:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a692:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a696:	6823      	ldr	r3, [r4, #0]
 800a698:	4620      	mov	r0, r4
 800a69a:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800a69e:	f7ff fd0b 	bl	800a0b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a6a2:	462b      	mov	r3, r5
 800a6a4:	4601      	mov	r1, r0
 800a6a6:	4620      	mov	r0, r4
 800a6a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a6ac:	4718      	bx	r3
 800a6ae:	bd70      	pop	{r4, r5, r6, pc}

0800a6b0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a6b0:	4770      	bx	lr

0800a6b2 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a6b2:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a6b6:	1a13      	subs	r3, r2, r0
 800a6b8:	4258      	negs	r0, r3
 800a6ba:	4158      	adcs	r0, r3
 800a6bc:	4770      	bx	lr

0800a6be <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a6be:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a6c2:	1a9b      	subs	r3, r3, r2
 800a6c4:	2b00      	cmp	r3, #0
 800a6c6:	bfdc      	itt	le
 800a6c8:	6882      	ldrle	r2, [r0, #8]
 800a6ca:	189b      	addle	r3, r3, r2
 800a6cc:	2b01      	cmp	r3, #1
 800a6ce:	bfcc      	ite	gt
 800a6d0:	2000      	movgt	r0, #0
 800a6d2:	2001      	movle	r0, #1
 800a6d4:	4770      	bx	lr

0800a6d6 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a6d6:	6902      	ldr	r2, [r0, #16]
 800a6d8:	6840      	ldr	r0, [r0, #4]
 800a6da:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800a6de:	4770      	bx	lr

0800a6e0 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a6e0:	6803      	ldr	r3, [r0, #0]
 800a6e2:	691b      	ldr	r3, [r3, #16]
 800a6e4:	4718      	bx	r3

0800a6e6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a6e6:	4770      	bx	lr

0800a6e8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a6e8:	4770      	bx	lr

0800a6ea <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a6ea:	4770      	bx	lr

0800a6ec <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a6ec:	b570      	push	{r4, r5, r6, lr}
 800a6ee:	2301      	movs	r3, #1
 800a6f0:	7203      	strb	r3, [r0, #8]
 800a6f2:	4604      	mov	r4, r0
 800a6f4:	6840      	ldr	r0, [r0, #4]
 800a6f6:	6803      	ldr	r3, [r0, #0]
 800a6f8:	699b      	ldr	r3, [r3, #24]
 800a6fa:	4798      	blx	r3
 800a6fc:	6803      	ldr	r3, [r0, #0]
 800a6fe:	2b40      	cmp	r3, #64	; 0x40
 800a700:	4605      	mov	r5, r0
 800a702:	d039      	beq.n	800a778 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a704:	d815      	bhi.n	800a732 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800a706:	2b04      	cmp	r3, #4
 800a708:	d022      	beq.n	800a750 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a70a:	d808      	bhi.n	800a71e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a70c:	2b01      	cmp	r3, #1
 800a70e:	d033      	beq.n	800a778 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a710:	2b02      	cmp	r3, #2
 800a712:	d108      	bne.n	800a726 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800a714:	6823      	ldr	r3, [r4, #0]
 800a716:	4620      	mov	r0, r4
 800a718:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a71a:	4798      	blx	r3
 800a71c:	e025      	b.n	800a76a <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800a71e:	2b08      	cmp	r3, #8
 800a720:	d01e      	beq.n	800a760 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800a722:	2b20      	cmp	r3, #32
 800a724:	d028      	beq.n	800a778 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a726:	4b17      	ldr	r3, [pc, #92]	; (800a784 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800a728:	4a17      	ldr	r2, [pc, #92]	; (800a788 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800a72a:	4818      	ldr	r0, [pc, #96]	; (800a78c <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800a72c:	218b      	movs	r1, #139	; 0x8b
 800a72e:	f011 f975 	bl	801ba1c <__assert_func>
 800a732:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a736:	d01f      	beq.n	800a778 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a738:	d804      	bhi.n	800a744 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800a73a:	2b80      	cmp	r3, #128	; 0x80
 800a73c:	d01c      	beq.n	800a778 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a73e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a742:	e7ef      	b.n	800a724 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800a744:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a748:	d016      	beq.n	800a778 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a74a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a74e:	e7e0      	b.n	800a712 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a750:	6823      	ldr	r3, [r4, #0]
 800a752:	7f01      	ldrb	r1, [r0, #28]
 800a754:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a756:	4620      	mov	r0, r4
 800a758:	4798      	blx	r3
 800a75a:	6823      	ldr	r3, [r4, #0]
 800a75c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a75e:	e006      	b.n	800a76e <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a760:	6823      	ldr	r3, [r4, #0]
 800a762:	7f01      	ldrb	r1, [r0, #28]
 800a764:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a766:	4620      	mov	r0, r4
 800a768:	4798      	blx	r3
 800a76a:	6823      	ldr	r3, [r4, #0]
 800a76c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a76e:	4629      	mov	r1, r5
 800a770:	4620      	mov	r0, r4
 800a772:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a776:	4718      	bx	r3
 800a778:	6823      	ldr	r3, [r4, #0]
 800a77a:	4620      	mov	r0, r4
 800a77c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a77e:	4798      	blx	r3
 800a780:	e7eb      	b.n	800a75a <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800a782:	bf00      	nop
 800a784:	0801f2e5 	.word	0x0801f2e5
 800a788:	0801f3a4 	.word	0x0801f3a4
 800a78c:	0801f30a 	.word	0x0801f30a

0800a790 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a790:	b570      	push	{r4, r5, r6, lr}
 800a792:	4604      	mov	r4, r0
 800a794:	460e      	mov	r6, r1
 800a796:	6860      	ldr	r0, [r4, #4]
 800a798:	6803      	ldr	r3, [r0, #0]
 800a79a:	685b      	ldr	r3, [r3, #4]
 800a79c:	4798      	blx	r3
 800a79e:	2800      	cmp	r0, #0
 800a7a0:	d1f9      	bne.n	800a796 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a7a2:	4d0d      	ldr	r5, [pc, #52]	; (800a7d8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a7a4:	6828      	ldr	r0, [r5, #0]
 800a7a6:	6803      	ldr	r3, [r0, #0]
 800a7a8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a7aa:	4798      	blx	r3
 800a7ac:	f7f6 f8ca 	bl	8000944 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a7b0:	6828      	ldr	r0, [r5, #0]
 800a7b2:	2101      	movs	r1, #1
 800a7b4:	f7ff ff7c 	bl	800a6b0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a7b8:	6860      	ldr	r0, [r4, #4]
 800a7ba:	6803      	ldr	r3, [r0, #0]
 800a7bc:	4631      	mov	r1, r6
 800a7be:	689b      	ldr	r3, [r3, #8]
 800a7c0:	4798      	blx	r3
 800a7c2:	6823      	ldr	r3, [r4, #0]
 800a7c4:	4620      	mov	r0, r4
 800a7c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a7c8:	4798      	blx	r3
 800a7ca:	6828      	ldr	r0, [r5, #0]
 800a7cc:	6803      	ldr	r3, [r0, #0]
 800a7ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a7d2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a7d4:	4718      	bx	r3
 800a7d6:	bf00      	nop
 800a7d8:	20013508 	.word	0x20013508

0800a7dc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a7dc:	b508      	push	{r3, lr}
 800a7de:	f7f6 f8a3 	bl	8000928 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a7e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a7e6:	f7f6 b8a7 	b.w	8000938 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a7ea <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a7ea:	b510      	push	{r4, lr}
 800a7ec:	2114      	movs	r1, #20
 800a7ee:	4604      	mov	r4, r0
 800a7f0:	f011 f8e5 	bl	801b9be <_ZdlPvj>
 800a7f4:	4620      	mov	r0, r4
 800a7f6:	bd10      	pop	{r4, pc}

0800a7f8 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a7f8:	b510      	push	{r4, lr}
 800a7fa:	4604      	mov	r4, r0
 800a7fc:	6840      	ldr	r0, [r0, #4]
 800a7fe:	6803      	ldr	r3, [r0, #0]
 800a800:	681b      	ldr	r3, [r3, #0]
 800a802:	4798      	blx	r3
 800a804:	b948      	cbnz	r0, 800a81a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a806:	7a63      	ldrb	r3, [r4, #9]
 800a808:	b13b      	cbz	r3, 800a81a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a80a:	7a23      	ldrb	r3, [r4, #8]
 800a80c:	b92b      	cbnz	r3, 800a81a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a80e:	6823      	ldr	r3, [r4, #0]
 800a810:	4620      	mov	r0, r4
 800a812:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a814:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a818:	4718      	bx	r3
 800a81a:	bd10      	pop	{r4, pc}

0800a81c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a81c:	b570      	push	{r4, r5, r6, lr}
 800a81e:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a822:	1a9b      	subs	r3, r3, r2
 800a824:	2b00      	cmp	r3, #0
 800a826:	4606      	mov	r6, r0
 800a828:	bfdc      	itt	le
 800a82a:	6880      	ldrle	r0, [r0, #8]
 800a82c:	181b      	addle	r3, r3, r0
 800a82e:	2b01      	cmp	r3, #1
 800a830:	dd13      	ble.n	800a85a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x3e>
 800a832:	6874      	ldr	r4, [r6, #4]
 800a834:	460d      	mov	r5, r1
 800a836:	eb04 1442 	add.w	r4, r4, r2, lsl #5
 800a83a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a83c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a83e:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800a842:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a846:	68f3      	ldr	r3, [r6, #12]
 800a848:	68b2      	ldr	r2, [r6, #8]
 800a84a:	f3bf 8f5b 	dmb	ish
 800a84e:	3301      	adds	r3, #1
 800a850:	429a      	cmp	r2, r3
 800a852:	bfd8      	it	le
 800a854:	1a9b      	suble	r3, r3, r2
 800a856:	60f3      	str	r3, [r6, #12]
 800a858:	bd70      	pop	{r4, r5, r6, pc}
 800a85a:	4b03      	ldr	r3, [pc, #12]	; (800a868 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x4c>)
 800a85c:	4a03      	ldr	r2, [pc, #12]	; (800a86c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 800a85e:	4804      	ldr	r0, [pc, #16]	; (800a870 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800a860:	2139      	movs	r1, #57	; 0x39
 800a862:	f011 f8db 	bl	801ba1c <__assert_func>
 800a866:	bf00      	nop
 800a868:	0801f330 	.word	0x0801f330
 800a86c:	0801f3d4 	.word	0x0801f3d4
 800a870:	0801f30a 	.word	0x0801f30a

0800a874 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a874:	b510      	push	{r4, lr}
 800a876:	6803      	ldr	r3, [r0, #0]
 800a878:	681b      	ldr	r3, [r3, #0]
 800a87a:	4604      	mov	r4, r0
 800a87c:	4798      	blx	r3
 800a87e:	b128      	cbz	r0, 800a88c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800a880:	4b07      	ldr	r3, [pc, #28]	; (800a8a0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800a882:	4a08      	ldr	r2, [pc, #32]	; (800a8a4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800a884:	4808      	ldr	r0, [pc, #32]	; (800a8a8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800a886:	213f      	movs	r1, #63	; 0x3f
 800a888:	f011 f8c8 	bl	801ba1c <__assert_func>
 800a88c:	6923      	ldr	r3, [r4, #16]
 800a88e:	68a2      	ldr	r2, [r4, #8]
 800a890:	f3bf 8f5b 	dmb	ish
 800a894:	3301      	adds	r3, #1
 800a896:	429a      	cmp	r2, r3
 800a898:	bfd8      	it	le
 800a89a:	1a9b      	suble	r3, r3, r2
 800a89c:	6123      	str	r3, [r4, #16]
 800a89e:	bd10      	pop	{r4, pc}
 800a8a0:	0801f353 	.word	0x0801f353
 800a8a4:	0801f422 	.word	0x0801f422
 800a8a8:	0801f30a 	.word	0x0801f30a

0800a8ac <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a8ac:	b570      	push	{r4, r5, r6, lr}
 800a8ae:	4604      	mov	r4, r0
 800a8b0:	6840      	ldr	r0, [r0, #4]
 800a8b2:	6803      	ldr	r3, [r0, #0]
 800a8b4:	681b      	ldr	r3, [r3, #0]
 800a8b6:	4798      	blx	r3
 800a8b8:	4605      	mov	r5, r0
 800a8ba:	b930      	cbnz	r0, 800a8ca <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a8bc:	7a23      	ldrb	r3, [r4, #8]
 800a8be:	b123      	cbz	r3, 800a8ca <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a8c0:	6860      	ldr	r0, [r4, #4]
 800a8c2:	6803      	ldr	r3, [r0, #0]
 800a8c4:	695b      	ldr	r3, [r3, #20]
 800a8c6:	4798      	blx	r3
 800a8c8:	7225      	strb	r5, [r4, #8]
 800a8ca:	6860      	ldr	r0, [r4, #4]
 800a8cc:	6803      	ldr	r3, [r0, #0]
 800a8ce:	681b      	ldr	r3, [r3, #0]
 800a8d0:	4798      	blx	r3
 800a8d2:	b928      	cbnz	r0, 800a8e0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a8d4:	6823      	ldr	r3, [r4, #0]
 800a8d6:	4620      	mov	r0, r4
 800a8d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a8da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a8de:	4718      	bx	r3
 800a8e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a8e4:	f7f6 b836 	b.w	8000954 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a8e8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a8e8:	b510      	push	{r4, lr}
 800a8ea:	4c04      	ldr	r4, [pc, #16]	; (800a8fc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a8ec:	6082      	str	r2, [r0, #8]
 800a8ee:	2200      	movs	r2, #0
 800a8f0:	e9c0 4100 	strd	r4, r1, [r0]
 800a8f4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a8f8:	bd10      	pop	{r4, pc}
 800a8fa:	bf00      	nop
 800a8fc:	0801f388 	.word	0x0801f388

0800a900 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a900:	6840      	ldr	r0, [r0, #4]
 800a902:	6803      	ldr	r3, [r0, #0]
 800a904:	681b      	ldr	r3, [r3, #0]
 800a906:	4718      	bx	r3

0800a908 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800a908:	2200      	movs	r2, #0
 800a90a:	8002      	strh	r2, [r0, #0]
 800a90c:	8042      	strh	r2, [r0, #2]
 800a90e:	8082      	strh	r2, [r0, #4]
 800a910:	80c2      	strh	r2, [r0, #6]
 800a912:	4770      	bx	lr

0800a914 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800a914:	b570      	push	{r4, r5, r6, lr}
 800a916:	6803      	ldr	r3, [r0, #0]
 800a918:	4604      	mov	r4, r0
 800a91a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a91c:	4615      	mov	r5, r2
 800a91e:	4798      	blx	r3
 800a920:	6823      	ldr	r3, [r4, #0]
 800a922:	4629      	mov	r1, r5
 800a924:	4620      	mov	r0, r4
 800a926:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a928:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a92c:	4718      	bx	r3

0800a92e <_ZN8touchgfx8TextAreaD1Ev>:
 800a92e:	4770      	bx	lr

0800a930 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800a930:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a932:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a934:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a938:	4299      	cmp	r1, r3
 800a93a:	d029      	beq.n	800a990 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800a93c:	4b15      	ldr	r3, [pc, #84]	; (800a994 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800a93e:	681b      	ldr	r3, [r3, #0]
 800a940:	b92b      	cbnz	r3, 800a94e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800a942:	4b15      	ldr	r3, [pc, #84]	; (800a998 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800a944:	4a15      	ldr	r2, [pc, #84]	; (800a99c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a946:	21ae      	movs	r1, #174	; 0xae
 800a948:	4815      	ldr	r0, [pc, #84]	; (800a9a0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800a94a:	f011 f867 	bl	801ba1c <__assert_func>
 800a94e:	4a15      	ldr	r2, [pc, #84]	; (800a9a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800a950:	8812      	ldrh	r2, [r2, #0]
 800a952:	428a      	cmp	r2, r1
 800a954:	d803      	bhi.n	800a95e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800a956:	4b14      	ldr	r3, [pc, #80]	; (800a9a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800a958:	4a10      	ldr	r2, [pc, #64]	; (800a99c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a95a:	21af      	movs	r1, #175	; 0xaf
 800a95c:	e7f4      	b.n	800a948 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800a95e:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a962:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a966:	4b11      	ldr	r3, [pc, #68]	; (800a9ac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800a968:	7854      	ldrb	r4, [r2, #1]
 800a96a:	681b      	ldr	r3, [r3, #0]
 800a96c:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800a970:	682b      	ldr	r3, [r5, #0]
 800a972:	69de      	ldr	r6, [r3, #28]
 800a974:	4b0e      	ldr	r3, [pc, #56]	; (800a9b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800a976:	6818      	ldr	r0, [r3, #0]
 800a978:	f7f7 ff6e 	bl	8002858 <_ZNK8touchgfx5Texts7getTextEt>
 800a97c:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800a980:	2300      	movs	r3, #0
 800a982:	4602      	mov	r2, r0
 800a984:	9300      	str	r3, [sp, #0]
 800a986:	4621      	mov	r1, r4
 800a988:	4628      	mov	r0, r5
 800a98a:	47b0      	blx	r6
 800a98c:	b002      	add	sp, #8
 800a98e:	bd70      	pop	{r4, r5, r6, pc}
 800a990:	2000      	movs	r0, #0
 800a992:	e7fb      	b.n	800a98c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800a994:	20013558 	.word	0x20013558
 800a998:	0801dc96 	.word	0x0801dc96
 800a99c:	0801f4cc 	.word	0x0801f4cc
 800a9a0:	0801dd24 	.word	0x0801dd24
 800a9a4:	2001355c 	.word	0x2001355c
 800a9a8:	0801dd4d 	.word	0x0801dd4d
 800a9ac:	20013560 	.word	0x20013560
 800a9b0:	20013564 	.word	0x20013564

0800a9b4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800a9b4:	b570      	push	{r4, r5, r6, lr}
 800a9b6:	6803      	ldr	r3, [r0, #0]
 800a9b8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a9ba:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800a9bc:	4b11      	ldr	r3, [pc, #68]	; (800aa04 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800a9be:	681b      	ldr	r3, [r3, #0]
 800a9c0:	4604      	mov	r4, r0
 800a9c2:	b28d      	uxth	r5, r1
 800a9c4:	b92b      	cbnz	r3, 800a9d2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800a9c6:	4b10      	ldr	r3, [pc, #64]	; (800aa08 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800a9c8:	4a10      	ldr	r2, [pc, #64]	; (800aa0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a9ca:	21ae      	movs	r1, #174	; 0xae
 800a9cc:	4810      	ldr	r0, [pc, #64]	; (800aa10 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800a9ce:	f011 f825 	bl	801ba1c <__assert_func>
 800a9d2:	4910      	ldr	r1, [pc, #64]	; (800aa14 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800a9d4:	8809      	ldrh	r1, [r1, #0]
 800a9d6:	4291      	cmp	r1, r2
 800a9d8:	d803      	bhi.n	800a9e2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800a9da:	4b0f      	ldr	r3, [pc, #60]	; (800aa18 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800a9dc:	4a0b      	ldr	r2, [pc, #44]	; (800aa0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a9de:	21af      	movs	r1, #175	; 0xaf
 800a9e0:	e7f4      	b.n	800a9cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800a9e2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800a9e6:	4b0d      	ldr	r3, [pc, #52]	; (800aa1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800a9e8:	681b      	ldr	r3, [r3, #0]
 800a9ea:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800a9ee:	6803      	ldr	r3, [r0, #0]
 800a9f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a9f2:	4798      	blx	r3
 800a9f4:	1a29      	subs	r1, r5, r0
 800a9f6:	4633      	mov	r3, r6
 800a9f8:	4620      	mov	r0, r4
 800a9fa:	b209      	sxth	r1, r1
 800a9fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa00:	4718      	bx	r3
 800aa02:	bf00      	nop
 800aa04:	20013558 	.word	0x20013558
 800aa08:	0801dc96 	.word	0x0801dc96
 800aa0c:	0801f4cc 	.word	0x0801f4cc
 800aa10:	0801dd24 	.word	0x0801dd24
 800aa14:	2001355c 	.word	0x2001355c
 800aa18:	0801dd4d 	.word	0x0801dd4d
 800aa1c:	20013560 	.word	0x20013560

0800aa20 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800aa20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aa24:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800aa26:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800aa2a:	4293      	cmp	r3, r2
 800aa2c:	b08c      	sub	sp, #48	; 0x30
 800aa2e:	4604      	mov	r4, r0
 800aa30:	4688      	mov	r8, r1
 800aa32:	d05f      	beq.n	800aaf4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800aa34:	4e31      	ldr	r6, [pc, #196]	; (800aafc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800aa36:	6832      	ldr	r2, [r6, #0]
 800aa38:	b92a      	cbnz	r2, 800aa46 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800aa3a:	4b31      	ldr	r3, [pc, #196]	; (800ab00 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800aa3c:	4a31      	ldr	r2, [pc, #196]	; (800ab04 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800aa3e:	21ae      	movs	r1, #174	; 0xae
 800aa40:	4831      	ldr	r0, [pc, #196]	; (800ab08 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800aa42:	f010 ffeb 	bl	801ba1c <__assert_func>
 800aa46:	4d31      	ldr	r5, [pc, #196]	; (800ab0c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800aa48:	8829      	ldrh	r1, [r5, #0]
 800aa4a:	4299      	cmp	r1, r3
 800aa4c:	d803      	bhi.n	800aa56 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800aa4e:	4b30      	ldr	r3, [pc, #192]	; (800ab10 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800aa50:	4a2c      	ldr	r2, [pc, #176]	; (800ab04 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800aa52:	21af      	movs	r1, #175	; 0xaf
 800aa54:	e7f4      	b.n	800aa40 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800aa56:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800aa5a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800aa5e:	4b2d      	ldr	r3, [pc, #180]	; (800ab14 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800aa60:	681b      	ldr	r3, [r3, #0]
 800aa62:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800aa66:	2a00      	cmp	r2, #0
 800aa68:	d044      	beq.n	800aaf4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800aa6a:	784b      	ldrb	r3, [r1, #1]
 800aa6c:	9207      	str	r2, [sp, #28]
 800aa6e:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800aa72:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800aa76:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800aa7a:	4b27      	ldr	r3, [pc, #156]	; (800ab18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800aa7c:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800aa80:	681b      	ldr	r3, [r3, #0]
 800aa82:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800aa86:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800aa8a:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800aa8e:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800aa92:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800aa96:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800aa98:	f88d a020 	strb.w	sl, [sp, #32]
 800aa9c:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800aaa0:	9009      	str	r0, [sp, #36]	; 0x24
 800aaa2:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800aaa6:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800aaaa:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800aaae:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800aab2:	b10a      	cbz	r2, 800aab8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800aab4:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800aab6:	b907      	cbnz	r7, 800aaba <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800aab8:	689f      	ldr	r7, [r3, #8]
 800aaba:	f10d 0914 	add.w	r9, sp, #20
 800aabe:	4621      	mov	r1, r4
 800aac0:	4648      	mov	r0, r9
 800aac2:	f002 ff85 	bl	800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800aac6:	6833      	ldr	r3, [r6, #0]
 800aac8:	2b00      	cmp	r3, #0
 800aaca:	d0b6      	beq.n	800aa3a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800aacc:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800aace:	882b      	ldrh	r3, [r5, #0]
 800aad0:	428b      	cmp	r3, r1
 800aad2:	d9bc      	bls.n	800aa4e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800aad4:	4b11      	ldr	r3, [pc, #68]	; (800ab1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800aad6:	6818      	ldr	r0, [r3, #0]
 800aad8:	f7f7 febe 	bl	8002858 <_ZNK8touchgfx5Texts7getTextEt>
 800aadc:	2300      	movs	r3, #0
 800aade:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800aae2:	ab07      	add	r3, sp, #28
 800aae4:	9001      	str	r0, [sp, #4]
 800aae6:	9300      	str	r3, [sp, #0]
 800aae8:	e899 0006 	ldmia.w	r9, {r1, r2}
 800aaec:	4643      	mov	r3, r8
 800aaee:	4638      	mov	r0, r7
 800aaf0:	f7f7 fe64 	bl	80027bc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800aaf4:	b00c      	add	sp, #48	; 0x30
 800aaf6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aafa:	bf00      	nop
 800aafc:	20013558 	.word	0x20013558
 800ab00:	0801dc96 	.word	0x0801dc96
 800ab04:	0801f4cc 	.word	0x0801f4cc
 800ab08:	0801dd24 	.word	0x0801dd24
 800ab0c:	2001355c 	.word	0x2001355c
 800ab10:	0801dd4d 	.word	0x0801dd4d
 800ab14:	20013560 	.word	0x20013560
 800ab18:	20013508 	.word	0x20013508
 800ab1c:	20013564 	.word	0x20013564

0800ab20 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800ab20:	b40e      	push	{r1, r2, r3}
 800ab22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab26:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800ab28:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ab2c:	4293      	cmp	r3, r2
 800ab2e:	b09c      	sub	sp, #112	; 0x70
 800ab30:	4604      	mov	r4, r0
 800ab32:	d06b      	beq.n	800ac0c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 800ab34:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 800ac20 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 800ab38:	aa26      	add	r2, sp, #152	; 0x98
 800ab3a:	9202      	str	r2, [sp, #8]
 800ab3c:	f8da 2000 	ldr.w	r2, [sl]
 800ab40:	b92a      	cbnz	r2, 800ab4e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800ab42:	4b33      	ldr	r3, [pc, #204]	; (800ac10 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 800ab44:	4a33      	ldr	r2, [pc, #204]	; (800ac14 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800ab46:	21ae      	movs	r1, #174	; 0xae
 800ab48:	4833      	ldr	r0, [pc, #204]	; (800ac18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>)
 800ab4a:	f010 ff67 	bl	801ba1c <__assert_func>
 800ab4e:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800ac24 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x104>
 800ab52:	f8b8 1000 	ldrh.w	r1, [r8]
 800ab56:	4299      	cmp	r1, r3
 800ab58:	d803      	bhi.n	800ab62 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800ab5a:	4b30      	ldr	r3, [pc, #192]	; (800ac1c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>)
 800ab5c:	4a2d      	ldr	r2, [pc, #180]	; (800ac14 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800ab5e:	21af      	movs	r1, #175	; 0xaf
 800ab60:	e7f2      	b.n	800ab48 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800ab62:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 800ac28 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x108>
 800ab66:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ab6a:	f8d9 3000 	ldr.w	r3, [r9]
 800ab6e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800ab72:	682b      	ldr	r3, [r5, #0]
 800ab74:	4628      	mov	r0, r5
 800ab76:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ab78:	4798      	blx	r3
 800ab7a:	4606      	mov	r6, r0
 800ab7c:	b207      	sxth	r7, r0
 800ab7e:	a803      	add	r0, sp, #12
 800ab80:	f003 fade 	bl	800e140 <_ZN8touchgfx12TextProviderC1Ev>
 800ab84:	682b      	ldr	r3, [r5, #0]
 800ab86:	4628      	mov	r0, r5
 800ab88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ab8a:	4798      	blx	r3
 800ab8c:	682b      	ldr	r3, [r5, #0]
 800ab8e:	4683      	mov	fp, r0
 800ab90:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ab92:	4628      	mov	r0, r5
 800ab94:	4798      	blx	r3
 800ab96:	465b      	mov	r3, fp
 800ab98:	9000      	str	r0, [sp, #0]
 800ab9a:	9925      	ldr	r1, [sp, #148]	; 0x94
 800ab9c:	9a02      	ldr	r2, [sp, #8]
 800ab9e:	a803      	add	r0, sp, #12
 800aba0:	f003 fb21 	bl	800e1e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800aba4:	f8da 3000 	ldr.w	r3, [sl]
 800aba8:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800abac:	2b00      	cmp	r3, #0
 800abae:	d0c8      	beq.n	800ab42 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800abb0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800abb2:	f8b8 0000 	ldrh.w	r0, [r8]
 800abb6:	4290      	cmp	r0, r2
 800abb8:	d9cf      	bls.n	800ab5a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800abba:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 800abbe:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800abc2:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800abc6:	786a      	ldrb	r2, [r5, #1]
 800abc8:	8925      	ldrh	r5, [r4, #8]
 800abca:	f8d9 3000 	ldr.w	r3, [r9]
 800abce:	eba5 050c 	sub.w	r5, r5, ip
 800abd2:	b22d      	sxth	r5, r5
 800abd4:	9500      	str	r5, [sp, #0]
 800abd6:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800abda:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800abde:	a803      	add	r0, sp, #12
 800abe0:	f001 fa2e 	bl	800c040 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800abe4:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800abe8:	18b9      	adds	r1, r7, r2
 800abea:	2900      	cmp	r1, #0
 800abec:	b203      	sxth	r3, r0
 800abee:	dd0b      	ble.n	800ac08 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>
 800abf0:	3b01      	subs	r3, #1
 800abf2:	fb13 f302 	smulbb	r3, r3, r2
 800abf6:	fb16 3300 	smlabb	r3, r6, r0, r3
 800abfa:	b21f      	sxth	r7, r3
 800abfc:	4638      	mov	r0, r7
 800abfe:	b01c      	add	sp, #112	; 0x70
 800ac00:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac04:	b003      	add	sp, #12
 800ac06:	4770      	bx	lr
 800ac08:	2b00      	cmp	r3, #0
 800ac0a:	dcf7      	bgt.n	800abfc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>
 800ac0c:	2700      	movs	r7, #0
 800ac0e:	e7f5      	b.n	800abfc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>
 800ac10:	0801dc96 	.word	0x0801dc96
 800ac14:	0801f4cc 	.word	0x0801f4cc
 800ac18:	0801dd24 	.word	0x0801dd24
 800ac1c:	0801dd4d 	.word	0x0801dd4d
 800ac20:	20013558 	.word	0x20013558
 800ac24:	2001355c 	.word	0x2001355c
 800ac28:	20013560 	.word	0x20013560

0800ac2c <_ZN8touchgfx8TextAreaD0Ev>:
 800ac2c:	b510      	push	{r4, lr}
 800ac2e:	213c      	movs	r1, #60	; 0x3c
 800ac30:	4604      	mov	r4, r0
 800ac32:	f010 fec4 	bl	801b9be <_ZdlPvj>
 800ac36:	4620      	mov	r0, r4
 800ac38:	bd10      	pop	{r4, pc}
	...

0800ac3c <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800ac3c:	b570      	push	{r4, r5, r6, lr}
 800ac3e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ac40:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ac44:	4299      	cmp	r1, r3
 800ac46:	4604      	mov	r4, r0
 800ac48:	d01e      	beq.n	800ac88 <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800ac4a:	6803      	ldr	r3, [r0, #0]
 800ac4c:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800ac4e:	4b0f      	ldr	r3, [pc, #60]	; (800ac8c <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800ac50:	681b      	ldr	r3, [r3, #0]
 800ac52:	b92b      	cbnz	r3, 800ac60 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800ac54:	4b0e      	ldr	r3, [pc, #56]	; (800ac90 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800ac56:	4a0f      	ldr	r2, [pc, #60]	; (800ac94 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800ac58:	21ae      	movs	r1, #174	; 0xae
 800ac5a:	480f      	ldr	r0, [pc, #60]	; (800ac98 <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800ac5c:	f010 fede 	bl	801ba1c <__assert_func>
 800ac60:	4b0e      	ldr	r3, [pc, #56]	; (800ac9c <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800ac62:	881b      	ldrh	r3, [r3, #0]
 800ac64:	428b      	cmp	r3, r1
 800ac66:	d803      	bhi.n	800ac70 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800ac68:	4b0d      	ldr	r3, [pc, #52]	; (800aca0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800ac6a:	4a0a      	ldr	r2, [pc, #40]	; (800ac94 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800ac6c:	21af      	movs	r1, #175	; 0xaf
 800ac6e:	e7f4      	b.n	800ac5a <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800ac70:	4b0c      	ldr	r3, [pc, #48]	; (800aca4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800ac72:	6818      	ldr	r0, [r3, #0]
 800ac74:	f7f7 fdf0 	bl	8002858 <_ZNK8touchgfx5Texts7getTextEt>
 800ac78:	2300      	movs	r3, #0
 800ac7a:	4601      	mov	r1, r0
 800ac7c:	46ac      	mov	ip, r5
 800ac7e:	4620      	mov	r0, r4
 800ac80:	461a      	mov	r2, r3
 800ac82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ac86:	4760      	bx	ip
 800ac88:	2000      	movs	r0, #0
 800ac8a:	bd70      	pop	{r4, r5, r6, pc}
 800ac8c:	20013558 	.word	0x20013558
 800ac90:	0801dc96 	.word	0x0801dc96
 800ac94:	0801f4cc 	.word	0x0801f4cc
 800ac98:	0801dd24 	.word	0x0801dd24
 800ac9c:	2001355c 	.word	0x2001355c
 800aca0:	0801dd4d 	.word	0x0801dd4d
 800aca4:	20013564 	.word	0x20013564

0800aca8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800aca8:	b538      	push	{r3, r4, r5, lr}
 800acaa:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800acac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800acb0:	429a      	cmp	r2, r3
 800acb2:	4604      	mov	r4, r0
 800acb4:	d014      	beq.n	800ace0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800acb6:	6803      	ldr	r3, [r0, #0]
 800acb8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800acba:	4798      	blx	r3
 800acbc:	6823      	ldr	r3, [r4, #0]
 800acbe:	4605      	mov	r5, r0
 800acc0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800acc2:	4620      	mov	r0, r4
 800acc4:	4798      	blx	r3
 800acc6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800acca:	b22d      	sxth	r5, r5
 800accc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800acd0:	4601      	mov	r1, r0
 800acd2:	bf06      	itte	eq
 800acd4:	4602      	moveq	r2, r0
 800acd6:	4629      	moveq	r1, r5
 800acd8:	462a      	movne	r2, r5
 800acda:	4620      	mov	r0, r4
 800acdc:	f7f8 f966 	bl	8002fac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800ace0:	bd38      	pop	{r3, r4, r5, pc}

0800ace2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800ace2:	888a      	ldrh	r2, [r1, #4]
 800ace4:	8582      	strh	r2, [r0, #44]	; 0x2c
 800ace6:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800acea:	b922      	cbnz	r2, 800acf6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800acec:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800acf0:	b90b      	cbnz	r3, 800acf6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800acf2:	f7ff bfd9 	b.w	800aca8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800acf6:	4770      	bx	lr

0800acf8 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800acf8:	2300      	movs	r3, #0
 800acfa:	8083      	strh	r3, [r0, #4]
 800acfc:	80c3      	strh	r3, [r0, #6]
 800acfe:	8003      	strh	r3, [r0, #0]
 800ad00:	8043      	strh	r3, [r0, #2]
 800ad02:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800ad06:	2bff      	cmp	r3, #255	; 0xff
 800ad08:	bf01      	itttt	eq
 800ad0a:	890b      	ldrheq	r3, [r1, #8]
 800ad0c:	8083      	strheq	r3, [r0, #4]
 800ad0e:	894b      	ldrheq	r3, [r1, #10]
 800ad10:	80c3      	strheq	r3, [r0, #6]
 800ad12:	4770      	bx	lr

0800ad14 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800ad14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ad16:	4604      	mov	r4, r0
 800ad18:	6808      	ldr	r0, [r1, #0]
 800ad1a:	6849      	ldr	r1, [r1, #4]
 800ad1c:	466b      	mov	r3, sp
 800ad1e:	c303      	stmia	r3!, {r0, r1}
 800ad20:	6823      	ldr	r3, [r4, #0]
 800ad22:	4669      	mov	r1, sp
 800ad24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ad26:	4620      	mov	r0, r4
 800ad28:	4798      	blx	r3
 800ad2a:	4b08      	ldr	r3, [pc, #32]	; (800ad4c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800ad2c:	681b      	ldr	r3, [r3, #0]
 800ad2e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ad32:	b10a      	cbz	r2, 800ad38 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800ad34:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ad36:	b900      	cbnz	r0, 800ad3a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800ad38:	6898      	ldr	r0, [r3, #8]
 800ad3a:	6803      	ldr	r3, [r0, #0]
 800ad3c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800ad3e:	699d      	ldr	r5, [r3, #24]
 800ad40:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800ad44:	4669      	mov	r1, sp
 800ad46:	47a8      	blx	r5
 800ad48:	b003      	add	sp, #12
 800ad4a:	bd30      	pop	{r4, r5, pc}
 800ad4c:	20013508 	.word	0x20013508

0800ad50 <_ZN8touchgfx3BoxD1Ev>:
 800ad50:	4770      	bx	lr

0800ad52 <_ZN8touchgfx3BoxD0Ev>:
 800ad52:	b510      	push	{r4, lr}
 800ad54:	212c      	movs	r1, #44	; 0x2c
 800ad56:	4604      	mov	r4, r0
 800ad58:	f010 fe31 	bl	801b9be <_ZdlPvj>
 800ad5c:	4620      	mov	r0, r4
 800ad5e:	bd10      	pop	{r4, pc}

0800ad60 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 800ad60:	4770      	bx	lr
	...

0800ad64 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
 800ad64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ad66:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ad68:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ad6c:	4299      	cmp	r1, r3
 800ad6e:	4606      	mov	r6, r0
 800ad70:	d02a      	beq.n	800adc8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
 800ad72:	4b16      	ldr	r3, [pc, #88]	; (800adcc <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 800ad74:	681b      	ldr	r3, [r3, #0]
 800ad76:	b92b      	cbnz	r3, 800ad84 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 800ad78:	4b15      	ldr	r3, [pc, #84]	; (800add0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 800ad7a:	4a16      	ldr	r2, [pc, #88]	; (800add4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800ad7c:	21ae      	movs	r1, #174	; 0xae
 800ad7e:	4816      	ldr	r0, [pc, #88]	; (800add8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 800ad80:	f010 fe4c 	bl	801ba1c <__assert_func>
 800ad84:	4a15      	ldr	r2, [pc, #84]	; (800addc <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800ad86:	8812      	ldrh	r2, [r2, #0]
 800ad88:	428a      	cmp	r2, r1
 800ad8a:	d803      	bhi.n	800ad94 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 800ad8c:	4b14      	ldr	r3, [pc, #80]	; (800ade0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 800ad8e:	4a11      	ldr	r2, [pc, #68]	; (800add4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800ad90:	21af      	movs	r1, #175	; 0xaf
 800ad92:	e7f4      	b.n	800ad7e <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
 800ad94:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ad98:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ad9c:	4b11      	ldr	r3, [pc, #68]	; (800ade4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
 800ad9e:	7854      	ldrb	r4, [r2, #1]
 800ada0:	681b      	ldr	r3, [r3, #0]
 800ada2:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800ada6:	682b      	ldr	r3, [r5, #0]
 800ada8:	69df      	ldr	r7, [r3, #28]
 800adaa:	4b0f      	ldr	r3, [pc, #60]	; (800ade8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 800adac:	6818      	ldr	r0, [r3, #0]
 800adae:	f7f7 fd53 	bl	8002858 <_ZNK8touchgfx5Texts7getTextEt>
 800adb2:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800adb6:	2300      	movs	r3, #0
 800adb8:	9300      	str	r3, [sp, #0]
 800adba:	4602      	mov	r2, r0
 800adbc:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 800adbe:	4621      	mov	r1, r4
 800adc0:	4628      	mov	r0, r5
 800adc2:	47b8      	blx	r7
 800adc4:	b003      	add	sp, #12
 800adc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800adc8:	2000      	movs	r0, #0
 800adca:	e7fb      	b.n	800adc4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 800adcc:	20013558 	.word	0x20013558
 800add0:	0801dc96 	.word	0x0801dc96
 800add4:	0801f5d8 	.word	0x0801f5d8
 800add8:	0801dd24 	.word	0x0801dd24
 800addc:	2001355c 	.word	0x2001355c
 800ade0:	0801dd4d 	.word	0x0801dd4d
 800ade4:	20013560 	.word	0x20013560
 800ade8:	20013564 	.word	0x20013564

0800adec <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
 800adec:	b570      	push	{r4, r5, r6, lr}
 800adee:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800adf0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800adf4:	4299      	cmp	r1, r3
 800adf6:	4604      	mov	r4, r0
 800adf8:	d01e      	beq.n	800ae38 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 800adfa:	6803      	ldr	r3, [r0, #0]
 800adfc:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800adfe:	4b0f      	ldr	r3, [pc, #60]	; (800ae3c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 800ae00:	681b      	ldr	r3, [r3, #0]
 800ae02:	b92b      	cbnz	r3, 800ae10 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 800ae04:	4b0e      	ldr	r3, [pc, #56]	; (800ae40 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 800ae06:	4a0f      	ldr	r2, [pc, #60]	; (800ae44 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800ae08:	21ae      	movs	r1, #174	; 0xae
 800ae0a:	480f      	ldr	r0, [pc, #60]	; (800ae48 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 800ae0c:	f010 fe06 	bl	801ba1c <__assert_func>
 800ae10:	4b0e      	ldr	r3, [pc, #56]	; (800ae4c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 800ae12:	881b      	ldrh	r3, [r3, #0]
 800ae14:	428b      	cmp	r3, r1
 800ae16:	d803      	bhi.n	800ae20 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 800ae18:	4b0d      	ldr	r3, [pc, #52]	; (800ae50 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 800ae1a:	4a0a      	ldr	r2, [pc, #40]	; (800ae44 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800ae1c:	21af      	movs	r1, #175	; 0xaf
 800ae1e:	e7f4      	b.n	800ae0a <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
 800ae20:	4b0c      	ldr	r3, [pc, #48]	; (800ae54 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 800ae22:	6818      	ldr	r0, [r3, #0]
 800ae24:	f7f7 fd18 	bl	8002858 <_ZNK8touchgfx5Texts7getTextEt>
 800ae28:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800ae2a:	4601      	mov	r1, r0
 800ae2c:	46ac      	mov	ip, r5
 800ae2e:	4620      	mov	r0, r4
 800ae30:	2300      	movs	r3, #0
 800ae32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ae36:	4760      	bx	ip
 800ae38:	2000      	movs	r0, #0
 800ae3a:	bd70      	pop	{r4, r5, r6, pc}
 800ae3c:	20013558 	.word	0x20013558
 800ae40:	0801dc96 	.word	0x0801dc96
 800ae44:	0801f5d8 	.word	0x0801f5d8
 800ae48:	0801dd24 	.word	0x0801dd24
 800ae4c:	2001355c 	.word	0x2001355c
 800ae50:	0801dd4d 	.word	0x0801dd4d
 800ae54:	20013564 	.word	0x20013564

0800ae58 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800ae58:	b510      	push	{r4, lr}
 800ae5a:	2140      	movs	r1, #64	; 0x40
 800ae5c:	4604      	mov	r4, r0
 800ae5e:	f010 fdae 	bl	801b9be <_ZdlPvj>
 800ae62:	4620      	mov	r0, r4
 800ae64:	bd10      	pop	{r4, pc}
	...

0800ae68 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 800ae68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ae6c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800ae6e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ae72:	4293      	cmp	r3, r2
 800ae74:	b08c      	sub	sp, #48	; 0x30
 800ae76:	4604      	mov	r4, r0
 800ae78:	460e      	mov	r6, r1
 800ae7a:	d05d      	beq.n	800af38 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800ae7c:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 800af5c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 800ae80:	f8d8 2000 	ldr.w	r2, [r8]
 800ae84:	b92a      	cbnz	r2, 800ae92 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 800ae86:	4b2e      	ldr	r3, [pc, #184]	; (800af40 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 800ae88:	4a2e      	ldr	r2, [pc, #184]	; (800af44 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800ae8a:	21ae      	movs	r1, #174	; 0xae
 800ae8c:	482e      	ldr	r0, [pc, #184]	; (800af48 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 800ae8e:	f010 fdc5 	bl	801ba1c <__assert_func>
 800ae92:	4f2e      	ldr	r7, [pc, #184]	; (800af4c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 800ae94:	8839      	ldrh	r1, [r7, #0]
 800ae96:	4299      	cmp	r1, r3
 800ae98:	d803      	bhi.n	800aea2 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 800ae9a:	4b2d      	ldr	r3, [pc, #180]	; (800af50 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 800ae9c:	4a29      	ldr	r2, [pc, #164]	; (800af44 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800ae9e:	21af      	movs	r1, #175	; 0xaf
 800aea0:	e7f4      	b.n	800ae8c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 800aea2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800aea6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800aeaa:	4b2a      	ldr	r3, [pc, #168]	; (800af54 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 800aeac:	681b      	ldr	r3, [r3, #0]
 800aeae:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800aeb2:	2a00      	cmp	r2, #0
 800aeb4:	d040      	beq.n	800af38 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800aeb6:	784b      	ldrb	r3, [r1, #1]
 800aeb8:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800aebc:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800aec0:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800aec4:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800aec8:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 800aecc:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800aece:	9207      	str	r2, [sp, #28]
 800aed0:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800aed4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800aed8:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800aedc:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800aee0:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800aee4:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800aee8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800aeec:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800aef0:	f88d a020 	strb.w	sl, [sp, #32]
 800aef4:	9009      	str	r0, [sp, #36]	; 0x24
 800aef6:	f7fe ff1f 	bl	8009d38 <_ZN8touchgfx3HAL3lcdEv>
 800aefa:	ad05      	add	r5, sp, #20
 800aefc:	4681      	mov	r9, r0
 800aefe:	4621      	mov	r1, r4
 800af00:	4628      	mov	r0, r5
 800af02:	f002 fd65 	bl	800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800af06:	f8d8 3000 	ldr.w	r3, [r8]
 800af0a:	2b00      	cmp	r3, #0
 800af0c:	d0bb      	beq.n	800ae86 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 800af0e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800af10:	883b      	ldrh	r3, [r7, #0]
 800af12:	428b      	cmp	r3, r1
 800af14:	d9c1      	bls.n	800ae9a <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 800af16:	4b10      	ldr	r3, [pc, #64]	; (800af58 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 800af18:	6818      	ldr	r0, [r3, #0]
 800af1a:	f7f7 fc9d 	bl	8002858 <_ZNK8touchgfx5Texts7getTextEt>
 800af1e:	2300      	movs	r3, #0
 800af20:	9303      	str	r3, [sp, #12]
 800af22:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800af24:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800af28:	ab07      	add	r3, sp, #28
 800af2a:	9300      	str	r3, [sp, #0]
 800af2c:	e895 0006 	ldmia.w	r5, {r1, r2}
 800af30:	4633      	mov	r3, r6
 800af32:	4648      	mov	r0, r9
 800af34:	f7f7 fc42 	bl	80027bc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800af38:	b00c      	add	sp, #48	; 0x30
 800af3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800af3e:	bf00      	nop
 800af40:	0801dc96 	.word	0x0801dc96
 800af44:	0801f5d8 	.word	0x0801f5d8
 800af48:	0801dd24 	.word	0x0801dd24
 800af4c:	2001355c 	.word	0x2001355c
 800af50:	0801dd4d 	.word	0x0801dd4d
 800af54:	20013560 	.word	0x20013560
 800af58:	20013564 	.word	0x20013564
 800af5c:	20013558 	.word	0x20013558

0800af60 <_ZN8touchgfx5ImageD1Ev>:
 800af60:	4770      	bx	lr

0800af62 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800af62:	b570      	push	{r4, r5, r6, lr}
 800af64:	880b      	ldrh	r3, [r1, #0]
 800af66:	84c3      	strh	r3, [r0, #38]	; 0x26
 800af68:	4604      	mov	r4, r0
 800af6a:	4608      	mov	r0, r1
 800af6c:	460d      	mov	r5, r1
 800af6e:	f004 fce9 	bl	800f944 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800af72:	4606      	mov	r6, r0
 800af74:	4628      	mov	r0, r5
 800af76:	f004 fd1f 	bl	800f9b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800af7a:	6823      	ldr	r3, [r4, #0]
 800af7c:	4605      	mov	r5, r0
 800af7e:	b231      	sxth	r1, r6
 800af80:	4620      	mov	r0, r4
 800af82:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800af84:	4798      	blx	r3
 800af86:	6823      	ldr	r3, [r4, #0]
 800af88:	b229      	sxth	r1, r5
 800af8a:	4620      	mov	r0, r4
 800af8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800af92:	4718      	bx	r3

0800af94 <_ZN8touchgfx5ImageD0Ev>:
 800af94:	b510      	push	{r4, lr}
 800af96:	212c      	movs	r1, #44	; 0x2c
 800af98:	4604      	mov	r4, r0
 800af9a:	f010 fd10 	bl	801b9be <_ZdlPvj>
 800af9e:	4620      	mov	r0, r4
 800afa0:	bd10      	pop	{r4, pc}

0800afa2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800afa2:	b510      	push	{r4, lr}
 800afa4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800afa8:	2bff      	cmp	r3, #255	; 0xff
 800afaa:	4604      	mov	r4, r0
 800afac:	d006      	beq.n	800afbc <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800afae:	2300      	movs	r3, #0
 800afb0:	8003      	strh	r3, [r0, #0]
 800afb2:	8043      	strh	r3, [r0, #2]
 800afb4:	8083      	strh	r3, [r0, #4]
 800afb6:	80c3      	strh	r3, [r0, #6]
 800afb8:	4620      	mov	r0, r4
 800afba:	bd10      	pop	{r4, pc}
 800afbc:	3126      	adds	r1, #38	; 0x26
 800afbe:	f004 fd35 	bl	800fa2c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800afc2:	e7f9      	b.n	800afb8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800afc4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800afc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800afc8:	4604      	mov	r4, r0
 800afca:	b088      	sub	sp, #32
 800afcc:	f854 3b26 	ldr.w	r3, [r4], #38
 800afd0:	2500      	movs	r5, #0
 800afd2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800afd4:	460f      	mov	r7, r1
 800afd6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800afda:	a904      	add	r1, sp, #16
 800afdc:	4606      	mov	r6, r0
 800afde:	4798      	blx	r3
 800afe0:	4620      	mov	r0, r4
 800afe2:	f004 fcaf 	bl	800f944 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800afe6:	4680      	mov	r8, r0
 800afe8:	4620      	mov	r0, r4
 800afea:	f004 fce5 	bl	800f9b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800afee:	9506      	str	r5, [sp, #24]
 800aff0:	ad06      	add	r5, sp, #24
 800aff2:	f8ad 001e 	strh.w	r0, [sp, #30]
 800aff6:	4639      	mov	r1, r7
 800aff8:	4628      	mov	r0, r5
 800affa:	f8ad 801c 	strh.w	r8, [sp, #28]
 800affe:	f7fe fbcb 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 800b002:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b006:	2b00      	cmp	r3, #0
 800b008:	dd19      	ble.n	800b03e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b00a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b00e:	2b00      	cmp	r3, #0
 800b010:	dd15      	ble.n	800b03e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b012:	4b0c      	ldr	r3, [pc, #48]	; (800b044 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800b014:	681b      	ldr	r3, [r3, #0]
 800b016:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b01a:	b10a      	cbz	r2, 800b020 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800b01c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b01e:	b900      	cbnz	r0, 800b022 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800b020:	6898      	ldr	r0, [r3, #8]
 800b022:	6801      	ldr	r1, [r0, #0]
 800b024:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800b028:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800b02c:	2701      	movs	r7, #1
 800b02e:	9702      	str	r7, [sp, #8]
 800b030:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800b034:	e9cd 5600 	strd	r5, r6, [sp]
 800b038:	688d      	ldr	r5, [r1, #8]
 800b03a:	4621      	mov	r1, r4
 800b03c:	47a8      	blx	r5
 800b03e:	b008      	add	sp, #32
 800b040:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b044:	20013508 	.word	0x20013508

0800b048 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800b048:	b510      	push	{r4, lr}
 800b04a:	6803      	ldr	r3, [r0, #0]
 800b04c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b04e:	460c      	mov	r4, r1
 800b050:	4798      	blx	r3
 800b052:	1b03      	subs	r3, r0, r4
 800b054:	4258      	negs	r0, r3
 800b056:	4158      	adcs	r0, r3
 800b058:	bd10      	pop	{r4, pc}
	...

0800b05c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800b05c:	4b01      	ldr	r3, [pc, #4]	; (800b064 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800b05e:	6019      	str	r1, [r3, #0]
 800b060:	4770      	bx	lr
 800b062:	bf00      	nop
 800b064:	20013510 	.word	0x20013510

0800b068 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b06c:	4696      	mov	lr, r2
 800b06e:	4605      	mov	r5, r0
 800b070:	4614      	mov	r4, r2
 800b072:	460e      	mov	r6, r1
 800b074:	461f      	mov	r7, r3
 800b076:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b07a:	b097      	sub	sp, #92	; 0x5c
 800b07c:	f10d 0c1c 	add.w	ip, sp, #28
 800b080:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b084:	f8de 3000 	ldr.w	r3, [lr]
 800b088:	f8cc 3000 	str.w	r3, [ip]
 800b08c:	f104 0e14 	add.w	lr, r4, #20
 800b090:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b094:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b098:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b09c:	f8de 3000 	ldr.w	r3, [lr]
 800b0a0:	f8cc 3000 	str.w	r3, [ip]
 800b0a4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b0a8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b0ac:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b0b0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b0b4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800b0b8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800b0bc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800b0c0:	f8de 3000 	ldr.w	r3, [lr]
 800b0c4:	f8cc 3000 	str.w	r3, [ip]
 800b0c8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b0ca:	682b      	ldr	r3, [r5, #0]
 800b0cc:	9201      	str	r2, [sp, #4]
 800b0ce:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b0d2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b0d4:	9200      	str	r2, [sp, #0]
 800b0d6:	f8cd 8008 	str.w	r8, [sp, #8]
 800b0da:	f8d3 b034 	ldr.w	fp, [r3, #52]	; 0x34
 800b0de:	aa07      	add	r2, sp, #28
 800b0e0:	463b      	mov	r3, r7
 800b0e2:	4631      	mov	r1, r6
 800b0e4:	4628      	mov	r0, r5
 800b0e6:	47d8      	blx	fp
 800b0e8:	46a6      	mov	lr, r4
 800b0ea:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b0ee:	f10d 0c1c 	add.w	ip, sp, #28
 800b0f2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b0f6:	f8de 3000 	ldr.w	r3, [lr]
 800b0fa:	f8cc 3000 	str.w	r3, [ip]
 800b0fe:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b102:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b106:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b10a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b10e:	343c      	adds	r4, #60	; 0x3c
 800b110:	f8de 3000 	ldr.w	r3, [lr]
 800b114:	f8cc 3000 	str.w	r3, [ip]
 800b118:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b11a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b11e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b122:	6823      	ldr	r3, [r4, #0]
 800b124:	f8cc 3000 	str.w	r3, [ip]
 800b128:	682b      	ldr	r3, [r5, #0]
 800b12a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b12e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b130:	9201      	str	r2, [sp, #4]
 800b132:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b134:	9200      	str	r2, [sp, #0]
 800b136:	f8cd 8008 	str.w	r8, [sp, #8]
 800b13a:	6b5c      	ldr	r4, [r3, #52]	; 0x34
 800b13c:	aa07      	add	r2, sp, #28
 800b13e:	463b      	mov	r3, r7
 800b140:	4631      	mov	r1, r6
 800b142:	4628      	mov	r0, r5
 800b144:	47a0      	blx	r4
 800b146:	b017      	add	sp, #92	; 0x5c
 800b148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b14c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800b14c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b150:	b08d      	sub	sp, #52	; 0x34
 800b152:	4688      	mov	r8, r1
 800b154:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b156:	f8d3 c000 	ldr.w	ip, [r3]
 800b15a:	680f      	ldr	r7, [r1, #0]
 800b15c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800b160:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800b164:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800b168:	edd3 6a07 	vldr	s13, [r3, #28]
 800b16c:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b16e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800b172:	f9b1 9000 	ldrsh.w	r9, [r1]
 800b176:	f9ba 1000 	ldrsh.w	r1, [sl]
 800b17a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800b17e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800b182:	eba7 070c 	sub.w	r7, r7, ip
 800b186:	42bc      	cmp	r4, r7
 800b188:	bfa8      	it	ge
 800b18a:	463c      	movge	r4, r7
 800b18c:	ee07 4a90 	vmov	s15, r4
 800b190:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800b194:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800b198:	ee25 4a04 	vmul.f32	s8, s10, s8
 800b19c:	ee65 4a24 	vmul.f32	s9, s10, s9
 800b1a0:	ee25 5a27 	vmul.f32	s10, s10, s15
 800b1a4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b1a8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800b1ac:	eb09 0e0c 	add.w	lr, r9, ip
 800b1b0:	4571      	cmp	r1, lr
 800b1b2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800b1b6:	ee32 1a05 	vadd.f32	s2, s4, s10
 800b1ba:	ee36 0a84 	vadd.f32	s0, s13, s8
 800b1be:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b1c2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b1c6:	f340 808d 	ble.w	800b2e4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800b1ca:	eba1 060e 	sub.w	r6, r1, lr
 800b1ce:	fb96 f5f4 	sdiv	r5, r6, r4
 800b1d2:	ee07 5a10 	vmov	s14, r5
 800b1d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b1da:	2d00      	cmp	r5, #0
 800b1dc:	fb04 6615 	mls	r6, r4, r5, r6
 800b1e0:	eea7 0a04 	vfma.f32	s0, s14, s8
 800b1e4:	eee7 0a24 	vfma.f32	s1, s14, s9
 800b1e8:	eea7 1a05 	vfma.f32	s2, s14, s10
 800b1ec:	dd13      	ble.n	800b216 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800b1ee:	ee70 6a44 	vsub.f32	s13, s0, s8
 800b1f2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800b1f6:	eef5 6a40 	vcmp.f32	s13, #0.0
 800b1fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b1fe:	bf18      	it	ne
 800b200:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800b204:	ee31 2a45 	vsub.f32	s4, s2, s10
 800b208:	bf08      	it	eq
 800b20a:	eeb0 7a67 	vmoveq.f32	s14, s15
 800b20e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b212:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b216:	fb05 f204 	mul.w	r2, r5, r4
 800b21a:	1abf      	subs	r7, r7, r2
 800b21c:	4494      	add	ip, r2
 800b21e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800b222:	4411      	add	r1, r2
 800b224:	eb09 020c 	add.w	r2, r9, ip
 800b228:	443a      	add	r2, r7
 800b22a:	b209      	sxth	r1, r1
 800b22c:	428a      	cmp	r2, r1
 800b22e:	bfc4      	itt	gt
 800b230:	eba1 0209 	subgt.w	r2, r1, r9
 800b234:	eba2 070c 	subgt.w	r7, r2, ip
 800b238:	2f00      	cmp	r7, #0
 800b23a:	dd50      	ble.n	800b2de <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800b23c:	fb97 f1f4 	sdiv	r1, r7, r4
 800b240:	fb04 7211 	mls	r2, r4, r1, r7
 800b244:	b90a      	cbnz	r2, 800b24a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800b246:	3901      	subs	r1, #1
 800b248:	4622      	mov	r2, r4
 800b24a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800b24e:	6840      	ldr	r0, [r0, #4]
 800b250:	900b      	str	r0, [sp, #44]	; 0x2c
 800b252:	f8d0 a000 	ldr.w	sl, [r0]
 800b256:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800b258:	9008      	str	r0, [sp, #32]
 800b25a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800b25e:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b260:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800b264:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800b268:	695b      	ldr	r3, [r3, #20]
 800b26a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800b26c:	445b      	add	r3, fp
 800b26e:	eef0 6a42 	vmov.f32	s13, s4
 800b272:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800b276:	ee21 3a23 	vmul.f32	s6, s2, s7
 800b27a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800b27e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800b282:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b286:	9307      	str	r3, [sp, #28]
 800b288:	ee17 7a90 	vmov	r7, s15
 800b28c:	ee73 7a42 	vsub.f32	s15, s6, s4
 800b290:	eeb0 7a61 	vmov.f32	s14, s3
 800b294:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b298:	ee16 3a90 	vmov	r3, s13
 800b29c:	fb97 f7f4 	sdiv	r7, r7, r4
 800b2a0:	ee17 ca90 	vmov	ip, s15
 800b2a4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800b2a8:	fb9c fcf4 	sdiv	ip, ip, r4
 800b2ac:	fb0c 3306 	mla	r3, ip, r6, r3
 800b2b0:	9302      	str	r3, [sp, #8]
 800b2b2:	ee17 3a10 	vmov	r3, s14
 800b2b6:	44b6      	add	lr, r6
 800b2b8:	fb04 e505 	mla	r5, r4, r5, lr
 800b2bc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800b2c0:	fb07 3706 	mla	r7, r7, r6, r3
 800b2c4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800b2c8:	e9cd 4700 	strd	r4, r7, [sp]
 800b2cc:	2900      	cmp	r1, #0
 800b2ce:	bfcc      	ite	gt
 800b2d0:	46a1      	movgt	r9, r4
 800b2d2:	4691      	movle	r9, r2
 800b2d4:	eba9 0306 	sub.w	r3, r9, r6
 800b2d8:	f8da 4008 	ldr.w	r4, [sl, #8]
 800b2dc:	47a0      	blx	r4
 800b2de:	b00d      	add	sp, #52	; 0x34
 800b2e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b2e4:	2500      	movs	r5, #0
 800b2e6:	462e      	mov	r6, r5
 800b2e8:	e799      	b.n	800b21e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800b2ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b2ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b2f0:	b0db      	sub	sp, #364	; 0x16c
 800b2f2:	461d      	mov	r5, r3
 800b2f4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800b2f8:	930a      	str	r3, [sp, #40]	; 0x28
 800b2fa:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800b2fe:	930b      	str	r3, [sp, #44]	; 0x2c
 800b300:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800b304:	9310      	str	r3, [sp, #64]	; 0x40
 800b306:	6803      	ldr	r3, [r0, #0]
 800b308:	910f      	str	r1, [sp, #60]	; 0x3c
 800b30a:	6bdf      	ldr	r7, [r3, #60]	; 0x3c
 800b30c:	9009      	str	r0, [sp, #36]	; 0x24
 800b30e:	4614      	mov	r4, r2
 800b310:	4629      	mov	r1, r5
 800b312:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800b316:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800b31a:	47b8      	blx	r7
 800b31c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b31e:	6058      	str	r0, [r3, #4]
 800b320:	2800      	cmp	r0, #0
 800b322:	f000 83a1 	beq.w	800ba68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b326:	682b      	ldr	r3, [r5, #0]
 800b328:	9314      	str	r3, [sp, #80]	; 0x50
 800b32a:	686b      	ldr	r3, [r5, #4]
 800b32c:	9315      	str	r3, [sp, #84]	; 0x54
 800b32e:	4bc4      	ldr	r3, [pc, #784]	; (800b640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800b330:	ed94 7a02 	vldr	s14, [r4, #8]
 800b334:	7819      	ldrb	r1, [r3, #0]
 800b336:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800b33a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800b33e:	2900      	cmp	r1, #0
 800b340:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b344:	bf16      	itet	ne
 800b346:	4619      	movne	r1, r3
 800b348:	4611      	moveq	r1, r2
 800b34a:	4613      	movne	r3, r2
 800b34c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b350:	9116      	str	r1, [sp, #88]	; 0x58
 800b352:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800b356:	f240 8387 	bls.w	800ba68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b35a:	ed94 7a07 	vldr	s14, [r4, #28]
 800b35e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b362:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b366:	f240 837f 	bls.w	800ba68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b36a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800b36e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b372:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b376:	f240 8377 	bls.w	800ba68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b37a:	6822      	ldr	r2, [r4, #0]
 800b37c:	4bb1      	ldr	r3, [pc, #708]	; (800b644 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800b37e:	429a      	cmp	r2, r3
 800b380:	f2c0 8372 	blt.w	800ba68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b384:	49b0      	ldr	r1, [pc, #704]	; (800b648 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800b386:	6963      	ldr	r3, [r4, #20]
 800b388:	428a      	cmp	r2, r1
 800b38a:	f300 836d 	bgt.w	800ba68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b38e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b392:	48ae      	ldr	r0, [pc, #696]	; (800b64c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800b394:	33ff      	adds	r3, #255	; 0xff
 800b396:	4283      	cmp	r3, r0
 800b398:	f200 8366 	bhi.w	800ba68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b39c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b39e:	4dac      	ldr	r5, [pc, #688]	; (800b650 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800b3a0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b3a4:	33ff      	adds	r3, #255	; 0xff
 800b3a6:	42ab      	cmp	r3, r5
 800b3a8:	f200 835e 	bhi.w	800ba68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b3ac:	6862      	ldr	r2, [r4, #4]
 800b3ae:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800b3b2:	33ff      	adds	r3, #255	; 0xff
 800b3b4:	4283      	cmp	r3, r0
 800b3b6:	f200 8357 	bhi.w	800ba68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b3ba:	69a1      	ldr	r1, [r4, #24]
 800b3bc:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800b3c0:	33ff      	adds	r3, #255	; 0xff
 800b3c2:	4283      	cmp	r3, r0
 800b3c4:	f200 8350 	bhi.w	800ba68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b3c8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b3ca:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800b3ce:	30ff      	adds	r0, #255	; 0xff
 800b3d0:	42a8      	cmp	r0, r5
 800b3d2:	f200 8349 	bhi.w	800ba68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b3d6:	428a      	cmp	r2, r1
 800b3d8:	f280 8110 	bge.w	800b5fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800b3dc:	429a      	cmp	r2, r3
 800b3de:	f300 8119 	bgt.w	800b614 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800b3e2:	4299      	cmp	r1, r3
 800b3e4:	f280 811d 	bge.w	800b622 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800b3e8:	2502      	movs	r5, #2
 800b3ea:	2701      	movs	r7, #1
 800b3ec:	46a9      	mov	r9, r5
 800b3ee:	46b8      	mov	r8, r7
 800b3f0:	f04f 0a00 	mov.w	sl, #0
 800b3f4:	4621      	mov	r1, r4
 800b3f6:	a849      	add	r0, sp, #292	; 0x124
 800b3f8:	f003 fc70 	bl	800ecdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800b3fc:	4622      	mov	r2, r4
 800b3fe:	4653      	mov	r3, sl
 800b400:	a949      	add	r1, sp, #292	; 0x124
 800b402:	f8cd 9000 	str.w	r9, [sp]
 800b406:	a819      	add	r0, sp, #100	; 0x64
 800b408:	f003 fd98 	bl	800ef3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b40c:	4622      	mov	r2, r4
 800b40e:	4653      	mov	r3, sl
 800b410:	a949      	add	r1, sp, #292	; 0x124
 800b412:	f8cd 8000 	str.w	r8, [sp]
 800b416:	a829      	add	r0, sp, #164	; 0xa4
 800b418:	f003 fd90 	bl	800ef3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b41c:	4643      	mov	r3, r8
 800b41e:	4622      	mov	r2, r4
 800b420:	a949      	add	r1, sp, #292	; 0x124
 800b422:	f8cd 9000 	str.w	r9, [sp]
 800b426:	a839      	add	r0, sp, #228	; 0xe4
 800b428:	f003 fd88 	bl	800ef3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b42c:	42af      	cmp	r7, r5
 800b42e:	bfb5      	itete	lt
 800b430:	2300      	movlt	r3, #0
 800b432:	2301      	movge	r3, #1
 800b434:	930e      	strlt	r3, [sp, #56]	; 0x38
 800b436:	930e      	strge	r3, [sp, #56]	; 0x38
 800b438:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b43a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b43e:	af12      	add	r7, sp, #72	; 0x48
 800b440:	bfb9      	ittee	lt
 800b442:	ad29      	addlt	r5, sp, #164	; 0xa4
 800b444:	ac19      	addlt	r4, sp, #100	; 0x64
 800b446:	ad19      	addge	r5, sp, #100	; 0x64
 800b448:	ac29      	addge	r4, sp, #164	; 0xa4
 800b44a:	e887 0003 	stmia.w	r7, {r0, r1}
 800b44e:	b928      	cbnz	r0, 800b45c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b450:	4b80      	ldr	r3, [pc, #512]	; (800b654 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800b452:	6818      	ldr	r0, [r3, #0]
 800b454:	6803      	ldr	r3, [r0, #0]
 800b456:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b458:	4798      	blx	r3
 800b45a:	6038      	str	r0, [r7, #0]
 800b45c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b45e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b462:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b466:	930c      	str	r3, [sp, #48]	; 0x30
 800b468:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b46a:	6963      	ldr	r3, [r4, #20]
 800b46c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800b46e:	440b      	add	r3, r1
 800b470:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b474:	4408      	add	r0, r1
 800b476:	b200      	sxth	r0, r0
 800b478:	4283      	cmp	r3, r0
 800b47a:	900d      	str	r0, [sp, #52]	; 0x34
 800b47c:	f280 80dd 	bge.w	800b63a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800b480:	428b      	cmp	r3, r1
 800b482:	da08      	bge.n	800b496 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b484:	2a00      	cmp	r2, #0
 800b486:	dd06      	ble.n	800b496 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b488:	1acb      	subs	r3, r1, r3
 800b48a:	429a      	cmp	r2, r3
 800b48c:	f2c0 80e4 	blt.w	800b658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800b490:	2b00      	cmp	r3, #0
 800b492:	f300 80e2 	bgt.w	800b65a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800b496:	6967      	ldr	r7, [r4, #20]
 800b498:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b49a:	443b      	add	r3, r7
 800b49c:	461f      	mov	r7, r3
 800b49e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b4a0:	1bdf      	subs	r7, r3, r7
 800b4a2:	4297      	cmp	r7, r2
 800b4a4:	bfa8      	it	ge
 800b4a6:	4617      	movge	r7, r2
 800b4a8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b4ac:	2f00      	cmp	r7, #0
 800b4ae:	f340 8166 	ble.w	800b77e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800b4b2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b4b4:	6829      	ldr	r1, [r5, #0]
 800b4b6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b4ba:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b4be:	6820      	ldr	r0, [r4, #0]
 800b4c0:	4411      	add	r1, r2
 800b4c2:	4299      	cmp	r1, r3
 800b4c4:	dd1a      	ble.n	800b4fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b4c6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b4ca:	440b      	add	r3, r1
 800b4cc:	4402      	add	r2, r0
 800b4ce:	b21b      	sxth	r3, r3
 800b4d0:	429a      	cmp	r2, r3
 800b4d2:	dc13      	bgt.n	800b4fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b4d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b4d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b4d8:	681b      	ldr	r3, [r3, #0]
 800b4da:	9206      	str	r2, [sp, #24]
 800b4dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b4de:	9205      	str	r2, [sp, #20]
 800b4e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b4e2:	9500      	str	r5, [sp, #0]
 800b4e4:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b4e8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b4ea:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b4ec:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b4f0:	a912      	add	r1, sp, #72	; 0x48
 800b4f2:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800b4f6:	aa49      	add	r2, sp, #292	; 0x124
 800b4f8:	4623      	mov	r3, r4
 800b4fa:	47c8      	blx	r9
 800b4fc:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b500:	441a      	add	r2, r3
 800b502:	6963      	ldr	r3, [r4, #20]
 800b504:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b508:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b50c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b510:	68a1      	ldr	r1, [r4, #8]
 800b512:	ed94 6a08 	vldr	s12, [r4, #32]
 800b516:	6022      	str	r2, [r4, #0]
 800b518:	3301      	adds	r3, #1
 800b51a:	6163      	str	r3, [r4, #20]
 800b51c:	69a3      	ldr	r3, [r4, #24]
 800b51e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b522:	3b01      	subs	r3, #1
 800b524:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b528:	61a3      	str	r3, [r4, #24]
 800b52a:	6923      	ldr	r3, [r4, #16]
 800b52c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b530:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b534:	edd4 6a07 	vldr	s13, [r4, #28]
 800b538:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b53c:	440b      	add	r3, r1
 800b53e:	68e1      	ldr	r1, [r4, #12]
 800b540:	6123      	str	r3, [r4, #16]
 800b542:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b546:	428b      	cmp	r3, r1
 800b548:	edc4 6a07 	vstr	s13, [r4, #28]
 800b54c:	db15      	blt.n	800b57a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800b54e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b552:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b556:	3201      	adds	r2, #1
 800b558:	edc4 6a07 	vstr	s13, [r4, #28]
 800b55c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b560:	6022      	str	r2, [r4, #0]
 800b562:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b566:	1a5b      	subs	r3, r3, r1
 800b568:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b56c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b570:	6123      	str	r3, [r4, #16]
 800b572:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b576:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b57a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b57e:	441a      	add	r2, r3
 800b580:	696b      	ldr	r3, [r5, #20]
 800b582:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b586:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b58a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b58e:	68a9      	ldr	r1, [r5, #8]
 800b590:	ed95 6a08 	vldr	s12, [r5, #32]
 800b594:	602a      	str	r2, [r5, #0]
 800b596:	3301      	adds	r3, #1
 800b598:	616b      	str	r3, [r5, #20]
 800b59a:	69ab      	ldr	r3, [r5, #24]
 800b59c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b5a0:	3b01      	subs	r3, #1
 800b5a2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b5a6:	61ab      	str	r3, [r5, #24]
 800b5a8:	692b      	ldr	r3, [r5, #16]
 800b5aa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b5ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b5b2:	edd5 6a07 	vldr	s13, [r5, #28]
 800b5b6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b5ba:	440b      	add	r3, r1
 800b5bc:	68e9      	ldr	r1, [r5, #12]
 800b5be:	612b      	str	r3, [r5, #16]
 800b5c0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b5c4:	428b      	cmp	r3, r1
 800b5c6:	edc5 6a07 	vstr	s13, [r5, #28]
 800b5ca:	db15      	blt.n	800b5f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800b5cc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b5d0:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b5d4:	3201      	adds	r2, #1
 800b5d6:	edc5 6a07 	vstr	s13, [r5, #28]
 800b5da:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b5de:	602a      	str	r2, [r5, #0]
 800b5e0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b5e4:	1a5b      	subs	r3, r3, r1
 800b5e6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b5ea:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b5ee:	612b      	str	r3, [r5, #16]
 800b5f0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b5f4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b5f8:	3f01      	subs	r7, #1
 800b5fa:	e757      	b.n	800b4ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800b5fc:	4299      	cmp	r1, r3
 800b5fe:	dc13      	bgt.n	800b628 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800b600:	429a      	cmp	r2, r3
 800b602:	da14      	bge.n	800b62e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800b604:	2502      	movs	r5, #2
 800b606:	2703      	movs	r7, #3
 800b608:	46a9      	mov	r9, r5
 800b60a:	f04f 0800 	mov.w	r8, #0
 800b60e:	f04f 0a01 	mov.w	sl, #1
 800b612:	e6ef      	b.n	800b3f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b614:	2501      	movs	r5, #1
 800b616:	2700      	movs	r7, #0
 800b618:	46a9      	mov	r9, r5
 800b61a:	46b8      	mov	r8, r7
 800b61c:	f04f 0a02 	mov.w	sl, #2
 800b620:	e6e8      	b.n	800b3f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b622:	2501      	movs	r5, #1
 800b624:	2702      	movs	r7, #2
 800b626:	e6e1      	b.n	800b3ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800b628:	2500      	movs	r5, #0
 800b62a:	2701      	movs	r7, #1
 800b62c:	e7f4      	b.n	800b618 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800b62e:	2702      	movs	r7, #2
 800b630:	2503      	movs	r5, #3
 800b632:	f04f 0900 	mov.w	r9, #0
 800b636:	46b8      	mov	r8, r7
 800b638:	e7e9      	b.n	800b60e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800b63a:	4613      	mov	r3, r2
 800b63c:	e728      	b.n	800b490 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800b63e:	bf00      	nop
 800b640:	20013500 	.word	0x20013500
 800b644:	fffd8f01 	.word	0xfffd8f01
 800b648:	00027100 	.word	0x00027100
 800b64c:	0004e1ff 	.word	0x0004e1ff
 800b650:	0004e1fe 	.word	0x0004e1fe
 800b654:	20013508 	.word	0x20013508
 800b658:	4613      	mov	r3, r2
 800b65a:	992b      	ldr	r1, [sp, #172]	; 0xac
 800b65c:	9111      	str	r1, [sp, #68]	; 0x44
 800b65e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800b662:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800b666:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800b668:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800b66c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800b670:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800b674:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800b678:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800b67c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800b680:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800b684:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800b688:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800b68c:	469e      	mov	lr, r3
 800b68e:	469c      	mov	ip, r3
 800b690:	f04f 0900 	mov.w	r9, #0
 800b694:	f1bc 0f00 	cmp.w	ip, #0
 800b698:	d147      	bne.n	800b72a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800b69a:	eb03 0c07 	add.w	ip, r3, r7
 800b69e:	1ad7      	subs	r7, r2, r3
 800b6a0:	f1b9 0f00 	cmp.w	r9, #0
 800b6a4:	d009      	beq.n	800b6ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800b6a6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800b6aa:	9029      	str	r0, [sp, #164]	; 0xa4
 800b6ac:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800b6b0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800b6b4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800b6b8:	912d      	str	r1, [sp, #180]	; 0xb4
 800b6ba:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b6bc:	9111      	str	r1, [sp, #68]	; 0x44
 800b6be:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b6c2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800b6c6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800b6ca:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800b6ce:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800b6d2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800b6d6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800b6da:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800b6de:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800b6e2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800b6e6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800b6ea:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800b6ee:	f04f 0800 	mov.w	r8, #0
 800b6f2:	f1be 0f00 	cmp.w	lr, #0
 800b6f6:	d031      	beq.n	800b75c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800b6f8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b6fa:	4431      	add	r1, r6
 800b6fc:	4549      	cmp	r1, r9
 800b6fe:	4450      	add	r0, sl
 800b700:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b704:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b708:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b70c:	db08      	blt.n	800b720 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800b70e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b712:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b716:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b71a:	3001      	adds	r0, #1
 800b71c:	eba1 0109 	sub.w	r1, r1, r9
 800b720:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b724:	f04f 0801 	mov.w	r8, #1
 800b728:	e7e3      	b.n	800b6f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800b72a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b72c:	4431      	add	r1, r6
 800b72e:	4541      	cmp	r1, r8
 800b730:	4450      	add	r0, sl
 800b732:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b736:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b73a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b73e:	db08      	blt.n	800b752 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800b740:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b744:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b748:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b74c:	3001      	adds	r0, #1
 800b74e:	eba1 0108 	sub.w	r1, r1, r8
 800b752:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b756:	f04f 0901 	mov.w	r9, #1
 800b75a:	e79b      	b.n	800b694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800b75c:	449c      	add	ip, r3
 800b75e:	1aff      	subs	r7, r7, r3
 800b760:	f1b8 0f00 	cmp.w	r8, #0
 800b764:	d009      	beq.n	800b77a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800b766:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800b76a:	9019      	str	r0, [sp, #100]	; 0x64
 800b76c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800b770:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800b774:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800b778:	911d      	str	r1, [sp, #116]	; 0x74
 800b77a:	1ad2      	subs	r2, r2, r3
 800b77c:	e68b      	b.n	800b496 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b77e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b780:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800b782:	2b00      	cmp	r3, #0
 800b784:	f000 80d1 	beq.w	800b92a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800b788:	ad19      	add	r5, sp, #100	; 0x64
 800b78a:	ac39      	add	r4, sp, #228	; 0xe4
 800b78c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b78e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b792:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b796:	930c      	str	r3, [sp, #48]	; 0x30
 800b798:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b79a:	6963      	ldr	r3, [r4, #20]
 800b79c:	440b      	add	r3, r1
 800b79e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b7a2:	4408      	add	r0, r1
 800b7a4:	b200      	sxth	r0, r0
 800b7a6:	4283      	cmp	r3, r0
 800b7a8:	900d      	str	r0, [sp, #52]	; 0x34
 800b7aa:	f280 80c1 	bge.w	800b930 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800b7ae:	428b      	cmp	r3, r1
 800b7b0:	da08      	bge.n	800b7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b7b2:	2a00      	cmp	r2, #0
 800b7b4:	dd06      	ble.n	800b7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b7b6:	1acb      	subs	r3, r1, r3
 800b7b8:	429a      	cmp	r2, r3
 800b7ba:	f2c0 80bb 	blt.w	800b934 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800b7be:	2b00      	cmp	r3, #0
 800b7c0:	f300 80b9 	bgt.w	800b936 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800b7c4:	6967      	ldr	r7, [r4, #20]
 800b7c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b7c8:	443b      	add	r3, r7
 800b7ca:	461f      	mov	r7, r3
 800b7cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b7ce:	1bdf      	subs	r7, r3, r7
 800b7d0:	4297      	cmp	r7, r2
 800b7d2:	bfa8      	it	ge
 800b7d4:	4617      	movge	r7, r2
 800b7d6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b7da:	2f00      	cmp	r7, #0
 800b7dc:	f340 813c 	ble.w	800ba58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800b7e0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b7e2:	6829      	ldr	r1, [r5, #0]
 800b7e4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b7e8:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b7ec:	6820      	ldr	r0, [r4, #0]
 800b7ee:	4411      	add	r1, r2
 800b7f0:	4299      	cmp	r1, r3
 800b7f2:	dd1a      	ble.n	800b82a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b7f4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b7f8:	440b      	add	r3, r1
 800b7fa:	4402      	add	r2, r0
 800b7fc:	b21b      	sxth	r3, r3
 800b7fe:	429a      	cmp	r2, r3
 800b800:	dc13      	bgt.n	800b82a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b802:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b804:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b806:	681b      	ldr	r3, [r3, #0]
 800b808:	9206      	str	r2, [sp, #24]
 800b80a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b80c:	9205      	str	r2, [sp, #20]
 800b80e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b810:	9500      	str	r5, [sp, #0]
 800b812:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b816:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b818:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b81a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b81e:	a912      	add	r1, sp, #72	; 0x48
 800b820:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800b824:	aa49      	add	r2, sp, #292	; 0x124
 800b826:	4623      	mov	r3, r4
 800b828:	47c8      	blx	r9
 800b82a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b82e:	441a      	add	r2, r3
 800b830:	6963      	ldr	r3, [r4, #20]
 800b832:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b836:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b83a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b83e:	68a1      	ldr	r1, [r4, #8]
 800b840:	ed94 6a08 	vldr	s12, [r4, #32]
 800b844:	6022      	str	r2, [r4, #0]
 800b846:	3301      	adds	r3, #1
 800b848:	6163      	str	r3, [r4, #20]
 800b84a:	69a3      	ldr	r3, [r4, #24]
 800b84c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b850:	3b01      	subs	r3, #1
 800b852:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b856:	61a3      	str	r3, [r4, #24]
 800b858:	6923      	ldr	r3, [r4, #16]
 800b85a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b85e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b862:	edd4 6a07 	vldr	s13, [r4, #28]
 800b866:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b86a:	440b      	add	r3, r1
 800b86c:	68e1      	ldr	r1, [r4, #12]
 800b86e:	6123      	str	r3, [r4, #16]
 800b870:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b874:	428b      	cmp	r3, r1
 800b876:	edc4 6a07 	vstr	s13, [r4, #28]
 800b87a:	db15      	blt.n	800b8a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800b87c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b880:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b884:	3201      	adds	r2, #1
 800b886:	edc4 6a07 	vstr	s13, [r4, #28]
 800b88a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b88e:	6022      	str	r2, [r4, #0]
 800b890:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b894:	1a5b      	subs	r3, r3, r1
 800b896:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b89a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b89e:	6123      	str	r3, [r4, #16]
 800b8a0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b8a4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b8a8:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b8ac:	441a      	add	r2, r3
 800b8ae:	696b      	ldr	r3, [r5, #20]
 800b8b0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b8b4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b8b8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b8bc:	68a9      	ldr	r1, [r5, #8]
 800b8be:	ed95 6a08 	vldr	s12, [r5, #32]
 800b8c2:	602a      	str	r2, [r5, #0]
 800b8c4:	3301      	adds	r3, #1
 800b8c6:	616b      	str	r3, [r5, #20]
 800b8c8:	69ab      	ldr	r3, [r5, #24]
 800b8ca:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b8ce:	3b01      	subs	r3, #1
 800b8d0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b8d4:	61ab      	str	r3, [r5, #24]
 800b8d6:	692b      	ldr	r3, [r5, #16]
 800b8d8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b8dc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b8e0:	edd5 6a07 	vldr	s13, [r5, #28]
 800b8e4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b8e8:	440b      	add	r3, r1
 800b8ea:	68e9      	ldr	r1, [r5, #12]
 800b8ec:	612b      	str	r3, [r5, #16]
 800b8ee:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b8f2:	428b      	cmp	r3, r1
 800b8f4:	edc5 6a07 	vstr	s13, [r5, #28]
 800b8f8:	db15      	blt.n	800b926 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800b8fa:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b8fe:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b902:	3201      	adds	r2, #1
 800b904:	edc5 6a07 	vstr	s13, [r5, #28]
 800b908:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b90c:	602a      	str	r2, [r5, #0]
 800b90e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b912:	1a5b      	subs	r3, r3, r1
 800b914:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b918:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b91c:	612b      	str	r3, [r5, #16]
 800b91e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b922:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b926:	3f01      	subs	r7, #1
 800b928:	e757      	b.n	800b7da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800b92a:	ad39      	add	r5, sp, #228	; 0xe4
 800b92c:	ac19      	add	r4, sp, #100	; 0x64
 800b92e:	e72d      	b.n	800b78c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800b930:	4613      	mov	r3, r2
 800b932:	e744      	b.n	800b7be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800b934:	4613      	mov	r3, r2
 800b936:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800b93a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800b93c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800b940:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800b944:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800b948:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800b94c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800b950:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800b954:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800b958:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800b95a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800b95e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800b962:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800b966:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800b96a:	960e      	str	r6, [sp, #56]	; 0x38
 800b96c:	469e      	mov	lr, r3
 800b96e:	461f      	mov	r7, r3
 800b970:	f04f 0900 	mov.w	r9, #0
 800b974:	2f00      	cmp	r7, #0
 800b976:	d146      	bne.n	800ba06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800b978:	449c      	add	ip, r3
 800b97a:	1ad7      	subs	r7, r2, r3
 800b97c:	f1b9 0f00 	cmp.w	r9, #0
 800b980:	d009      	beq.n	800b996 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800b982:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800b986:	9039      	str	r0, [sp, #228]	; 0xe4
 800b988:	913d      	str	r1, [sp, #244]	; 0xf4
 800b98a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800b98e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800b992:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800b996:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b998:	910e      	str	r1, [sp, #56]	; 0x38
 800b99a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b99e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800b9a2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800b9a6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800b9aa:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800b9ae:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800b9b2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800b9b6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800b9ba:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800b9be:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800b9c2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800b9c6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800b9ca:	f04f 0800 	mov.w	r8, #0
 800b9ce:	f1be 0f00 	cmp.w	lr, #0
 800b9d2:	d030      	beq.n	800ba36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800b9d4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800b9d6:	4431      	add	r1, r6
 800b9d8:	4549      	cmp	r1, r9
 800b9da:	4450      	add	r0, sl
 800b9dc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b9e0:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b9e4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b9e8:	db08      	blt.n	800b9fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800b9ea:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b9ee:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b9f2:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b9f6:	3001      	adds	r0, #1
 800b9f8:	eba1 0109 	sub.w	r1, r1, r9
 800b9fc:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ba00:	f04f 0801 	mov.w	r8, #1
 800ba04:	e7e3      	b.n	800b9ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800ba06:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ba08:	4431      	add	r1, r6
 800ba0a:	4541      	cmp	r1, r8
 800ba0c:	4450      	add	r0, sl
 800ba0e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ba12:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ba16:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ba1a:	db08      	blt.n	800ba2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800ba1c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ba20:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ba24:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ba28:	3001      	adds	r0, #1
 800ba2a:	eba1 0108 	sub.w	r1, r1, r8
 800ba2e:	3f01      	subs	r7, #1
 800ba30:	f04f 0901 	mov.w	r9, #1
 800ba34:	e79e      	b.n	800b974 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800ba36:	449c      	add	ip, r3
 800ba38:	1aff      	subs	r7, r7, r3
 800ba3a:	f1b8 0f00 	cmp.w	r8, #0
 800ba3e:	d009      	beq.n	800ba54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800ba40:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800ba44:	9019      	str	r0, [sp, #100]	; 0x64
 800ba46:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800ba4a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800ba4e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ba52:	911d      	str	r1, [sp, #116]	; 0x74
 800ba54:	1ad2      	subs	r2, r2, r3
 800ba56:	e6b5      	b.n	800b7c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ba58:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ba5a:	681b      	ldr	r3, [r3, #0]
 800ba5c:	b923      	cbnz	r3, 800ba68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ba5e:	4b04      	ldr	r3, [pc, #16]	; (800ba70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800ba60:	6818      	ldr	r0, [r3, #0]
 800ba62:	6803      	ldr	r3, [r0, #0]
 800ba64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ba66:	4798      	blx	r3
 800ba68:	b05b      	add	sp, #364	; 0x16c
 800ba6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba6e:	bf00      	nop
 800ba70:	20013508 	.word	0x20013508

0800ba74 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800ba74:	b570      	push	{r4, r5, r6, lr}
 800ba76:	4604      	mov	r4, r0
 800ba78:	2500      	movs	r5, #0
 800ba7a:	7223      	strb	r3, [r4, #8]
 800ba7c:	9804      	ldr	r0, [sp, #16]
 800ba7e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ba82:	8025      	strh	r5, [r4, #0]
 800ba84:	6061      	str	r1, [r4, #4]
 800ba86:	7263      	strb	r3, [r4, #9]
 800ba88:	60e0      	str	r0, [r4, #12]
 800ba8a:	8222      	strh	r2, [r4, #16]
 800ba8c:	8265      	strh	r5, [r4, #18]
 800ba8e:	82a5      	strh	r5, [r4, #20]
 800ba90:	82e5      	strh	r5, [r4, #22]
 800ba92:	8325      	strh	r5, [r4, #24]
 800ba94:	8365      	strh	r5, [r4, #26]
 800ba96:	83a5      	strh	r5, [r4, #28]
 800ba98:	77a5      	strb	r5, [r4, #30]
 800ba9a:	6803      	ldr	r3, [r0, #0]
 800ba9c:	695b      	ldr	r3, [r3, #20]
 800ba9e:	4798      	blx	r3
 800baa0:	4606      	mov	r6, r0
 800baa2:	b1f8      	cbz	r0, 800bae4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800baa4:	68e0      	ldr	r0, [r4, #12]
 800baa6:	6803      	ldr	r3, [r0, #0]
 800baa8:	4631      	mov	r1, r6
 800baaa:	68db      	ldr	r3, [r3, #12]
 800baac:	4798      	blx	r3
 800baae:	7b43      	ldrb	r3, [r0, #13]
 800bab0:	7a82      	ldrb	r2, [r0, #10]
 800bab2:	005b      	lsls	r3, r3, #1
 800bab4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bab8:	4313      	orrs	r3, r2
 800baba:	83a3      	strh	r3, [r4, #28]
 800babc:	7a63      	ldrb	r3, [r4, #9]
 800babe:	2b04      	cmp	r3, #4
 800bac0:	4605      	mov	r5, r0
 800bac2:	d10f      	bne.n	800bae4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800bac4:	68e0      	ldr	r0, [r4, #12]
 800bac6:	6803      	ldr	r3, [r0, #0]
 800bac8:	462a      	mov	r2, r5
 800baca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bacc:	4631      	mov	r1, r6
 800bace:	4798      	blx	r3
 800bad0:	7b6b      	ldrb	r3, [r5, #13]
 800bad2:	005b      	lsls	r3, r3, #1
 800bad4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800bad8:	7aab      	ldrb	r3, [r5, #10]
 800bada:	4313      	orrs	r3, r2
 800badc:	4418      	add	r0, r3
 800bade:	8ba3      	ldrh	r3, [r4, #28]
 800bae0:	4418      	add	r0, r3
 800bae2:	83a0      	strh	r0, [r4, #28]
 800bae4:	4620      	mov	r0, r4
 800bae6:	bd70      	pop	{r4, r5, r6, pc}

0800bae8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800bae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800baec:	2400      	movs	r4, #0
 800baee:	b085      	sub	sp, #20
 800baf0:	4681      	mov	r9, r0
 800baf2:	4688      	mov	r8, r1
 800baf4:	4692      	mov	sl, r2
 800baf6:	469b      	mov	fp, r3
 800baf8:	4627      	mov	r7, r4
 800bafa:	4625      	mov	r5, r4
 800bafc:	4626      	mov	r6, r4
 800bafe:	4554      	cmp	r4, sl
 800bb00:	da2a      	bge.n	800bb58 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bb02:	2300      	movs	r3, #0
 800bb04:	9303      	str	r3, [sp, #12]
 800bb06:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bb0a:	429d      	cmp	r5, r3
 800bb0c:	d004      	beq.n	800bb18 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800bb0e:	f242 030b 	movw	r3, #8203	; 0x200b
 800bb12:	429d      	cmp	r5, r3
 800bb14:	bf18      	it	ne
 800bb16:	462f      	movne	r7, r5
 800bb18:	ab03      	add	r3, sp, #12
 800bb1a:	4642      	mov	r2, r8
 800bb1c:	4659      	mov	r1, fp
 800bb1e:	4648      	mov	r0, r9
 800bb20:	f002 fe60 	bl	800e7e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bb24:	4605      	mov	r5, r0
 800bb26:	b1b8      	cbz	r0, 800bb58 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bb28:	280a      	cmp	r0, #10
 800bb2a:	d015      	beq.n	800bb58 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bb2c:	9a03      	ldr	r2, [sp, #12]
 800bb2e:	b18a      	cbz	r2, 800bb54 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800bb30:	7b50      	ldrb	r0, [r2, #13]
 800bb32:	7a93      	ldrb	r3, [r2, #10]
 800bb34:	8895      	ldrh	r5, [r2, #4]
 800bb36:	0040      	lsls	r0, r0, #1
 800bb38:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800bb3c:	4303      	orrs	r3, r0
 800bb3e:	9301      	str	r3, [sp, #4]
 800bb40:	f8d8 3000 	ldr.w	r3, [r8]
 800bb44:	4639      	mov	r1, r7
 800bb46:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bb48:	4640      	mov	r0, r8
 800bb4a:	4798      	blx	r3
 800bb4c:	9b01      	ldr	r3, [sp, #4]
 800bb4e:	4418      	add	r0, r3
 800bb50:	4406      	add	r6, r0
 800bb52:	b2b6      	uxth	r6, r6
 800bb54:	3401      	adds	r4, #1
 800bb56:	e7d2      	b.n	800bafe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800bb58:	4630      	mov	r0, r6
 800bb5a:	b005      	add	sp, #20
 800bb5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800bb60 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800bb60:	2a02      	cmp	r2, #2
 800bb62:	b530      	push	{r4, r5, lr}
 800bb64:	d011      	beq.n	800bb8a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800bb66:	2a03      	cmp	r2, #3
 800bb68:	d01c      	beq.n	800bba4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800bb6a:	2a01      	cmp	r2, #1
 800bb6c:	d10c      	bne.n	800bb88 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800bb6e:	888b      	ldrh	r3, [r1, #4]
 800bb70:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800bb74:	8801      	ldrh	r1, [r0, #0]
 800bb76:	8844      	ldrh	r4, [r0, #2]
 800bb78:	8004      	strh	r4, [r0, #0]
 800bb7a:	1a9b      	subs	r3, r3, r2
 800bb7c:	1a5b      	subs	r3, r3, r1
 800bb7e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800bb82:	8043      	strh	r3, [r0, #2]
 800bb84:	8081      	strh	r1, [r0, #4]
 800bb86:	80c2      	strh	r2, [r0, #6]
 800bb88:	bd30      	pop	{r4, r5, pc}
 800bb8a:	88cb      	ldrh	r3, [r1, #6]
 800bb8c:	88c2      	ldrh	r2, [r0, #6]
 800bb8e:	1a9b      	subs	r3, r3, r2
 800bb90:	8842      	ldrh	r2, [r0, #2]
 800bb92:	1a9b      	subs	r3, r3, r2
 800bb94:	888a      	ldrh	r2, [r1, #4]
 800bb96:	8881      	ldrh	r1, [r0, #4]
 800bb98:	8043      	strh	r3, [r0, #2]
 800bb9a:	1a52      	subs	r2, r2, r1
 800bb9c:	8801      	ldrh	r1, [r0, #0]
 800bb9e:	1a52      	subs	r2, r2, r1
 800bba0:	8002      	strh	r2, [r0, #0]
 800bba2:	e7f1      	b.n	800bb88 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800bba4:	88cb      	ldrh	r3, [r1, #6]
 800bba6:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800bbaa:	8841      	ldrh	r1, [r0, #2]
 800bbac:	f9b0 5000 	ldrsh.w	r5, [r0]
 800bbb0:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800bbb4:	8045      	strh	r5, [r0, #2]
 800bbb6:	1a9b      	subs	r3, r3, r2
 800bbb8:	1a5b      	subs	r3, r3, r1
 800bbba:	8003      	strh	r3, [r0, #0]
 800bbbc:	8082      	strh	r2, [r0, #4]
 800bbbe:	80c4      	strh	r4, [r0, #6]
 800bbc0:	e7e2      	b.n	800bb88 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800bbc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800bbc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbc6:	b09f      	sub	sp, #124	; 0x7c
 800bbc8:	9116      	str	r1, [sp, #88]	; 0x58
 800bbca:	9317      	str	r3, [sp, #92]	; 0x5c
 800bbcc:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800bbce:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bbd0:	8809      	ldrh	r1, [r1, #0]
 800bbd2:	889b      	ldrh	r3, [r3, #4]
 800bbd4:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800bbd8:	9212      	str	r2, [sp, #72]	; 0x48
 800bbda:	440b      	add	r3, r1
 800bbdc:	b21b      	sxth	r3, r3
 800bbde:	9310      	str	r3, [sp, #64]	; 0x40
 800bbe0:	f8d8 3000 	ldr.w	r3, [r8]
 800bbe4:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800bbe8:	7a59      	ldrb	r1, [r3, #9]
 800bbea:	7a1b      	ldrb	r3, [r3, #8]
 800bbec:	9315      	str	r3, [sp, #84]	; 0x54
 800bbee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800bbf0:	9011      	str	r0, [sp, #68]	; 0x44
 800bbf2:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800bbf6:	9114      	str	r1, [sp, #80]	; 0x50
 800bbf8:	f9b3 5000 	ldrsh.w	r5, [r3]
 800bbfc:	2a00      	cmp	r2, #0
 800bbfe:	d067      	beq.n	800bcd0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800bc00:	f898 3010 	ldrb.w	r3, [r8, #16]
 800bc04:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800bc06:	2b04      	cmp	r3, #4
 800bc08:	bf14      	ite	ne
 800bc0a:	2301      	movne	r3, #1
 800bc0c:	2302      	moveq	r3, #2
 800bc0e:	4413      	add	r3, r2
 800bc10:	f04f 0900 	mov.w	r9, #0
 800bc14:	930f      	str	r3, [sp, #60]	; 0x3c
 800bc16:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800bc1a:	464c      	mov	r4, r9
 800bc1c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800bc20:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800bc24:	4293      	cmp	r3, r2
 800bc26:	f280 808c 	bge.w	800bd42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800bc2a:	2300      	movs	r3, #0
 800bc2c:	931c      	str	r3, [sp, #112]	; 0x70
 800bc2e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bc32:	429c      	cmp	r4, r3
 800bc34:	d006      	beq.n	800bc44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800bc36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bc38:	f242 020b 	movw	r2, #8203	; 0x200b
 800bc3c:	4294      	cmp	r4, r2
 800bc3e:	bf18      	it	ne
 800bc40:	4623      	movne	r3, r4
 800bc42:	930d      	str	r3, [sp, #52]	; 0x34
 800bc44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bc46:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800bc48:	f8d8 2000 	ldr.w	r2, [r8]
 800bc4c:	428b      	cmp	r3, r1
 800bc4e:	db41      	blt.n	800bcd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800bc50:	6813      	ldr	r3, [r2, #0]
 800bc52:	4610      	mov	r0, r2
 800bc54:	695b      	ldr	r3, [r3, #20]
 800bc56:	4798      	blx	r3
 800bc58:	4604      	mov	r4, r0
 800bc5a:	f8d8 0000 	ldr.w	r0, [r8]
 800bc5e:	6803      	ldr	r3, [r0, #0]
 800bc60:	aa1d      	add	r2, sp, #116	; 0x74
 800bc62:	689e      	ldr	r6, [r3, #8]
 800bc64:	4621      	mov	r1, r4
 800bc66:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800bc6a:	47b0      	blx	r6
 800bc6c:	901c      	str	r0, [sp, #112]	; 0x70
 800bc6e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bc72:	429c      	cmp	r4, r3
 800bc74:	f000 80e9 	beq.w	800be4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bc78:	f242 030b 	movw	r3, #8203	; 0x200b
 800bc7c:	429c      	cmp	r4, r3
 800bc7e:	f000 80e4 	beq.w	800be4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bc82:	2c00      	cmp	r4, #0
 800bc84:	f000 80f6 	beq.w	800be74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800bc88:	2c0a      	cmp	r4, #10
 800bc8a:	d060      	beq.n	800bd4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800bc8c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800bc8e:	b36a      	cbz	r2, 800bcec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800bc90:	8894      	ldrh	r4, [r2, #4]
 800bc92:	f1bb 0f00 	cmp.w	fp, #0
 800bc96:	d03b      	beq.n	800bd10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800bc98:	f892 900d 	ldrb.w	r9, [r2, #13]
 800bc9c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800bca0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800bca4:	f892 900a 	ldrb.w	r9, [r2, #10]
 800bca8:	f1bb 0f01 	cmp.w	fp, #1
 800bcac:	ea49 0903 	orr.w	r9, r9, r3
 800bcb0:	d134      	bne.n	800bd1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800bcb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bcb4:	eba5 0509 	sub.w	r5, r5, r9
 800bcb8:	2b00      	cmp	r3, #0
 800bcba:	d14f      	bne.n	800bd5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800bcbc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800bcbe:	eb09 0305 	add.w	r3, r9, r5
 800bcc2:	4413      	add	r3, r2
 800bcc4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800bcc6:	f9b2 2000 	ldrsh.w	r2, [r2]
 800bcca:	4293      	cmp	r3, r2
 800bccc:	da51      	bge.n	800bd72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800bcce:	e038      	b.n	800bd42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800bcd0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800bcd2:	e79d      	b.n	800bc10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800bcd4:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800bcd8:	9301      	str	r3, [sp, #4]
 800bcda:	ab1d      	add	r3, sp, #116	; 0x74
 800bcdc:	9300      	str	r3, [sp, #0]
 800bcde:	4659      	mov	r1, fp
 800bce0:	ab1c      	add	r3, sp, #112	; 0x70
 800bce2:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800bce4:	f002 fdd6 	bl	800e894 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800bce8:	4604      	mov	r4, r0
 800bcea:	e7c0      	b.n	800bc6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800bcec:	f8d8 0000 	ldr.w	r0, [r8]
 800bcf0:	6803      	ldr	r3, [r0, #0]
 800bcf2:	691b      	ldr	r3, [r3, #16]
 800bcf4:	4798      	blx	r3
 800bcf6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bcfa:	4298      	cmp	r0, r3
 800bcfc:	f000 80a5 	beq.w	800be4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bd00:	f242 030b 	movw	r3, #8203	; 0x200b
 800bd04:	4298      	cmp	r0, r3
 800bd06:	f000 80a0 	beq.w	800be4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bd0a:	f1bb 0f00 	cmp.w	fp, #0
 800bd0e:	d100      	bne.n	800bd12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800bd10:	444d      	add	r5, r9
 800bd12:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800bd14:	2a00      	cmp	r2, #0
 800bd16:	d1bf      	bne.n	800bc98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800bd18:	4691      	mov	r9, r2
 800bd1a:	e096      	b.n	800be4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bd1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bd1e:	2b00      	cmp	r3, #0
 800bd20:	f000 80aa 	beq.w	800be78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800bd24:	f1bb 0f00 	cmp.w	fp, #0
 800bd28:	d118      	bne.n	800bd5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800bd2a:	f8d8 0000 	ldr.w	r0, [r8]
 800bd2e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800bd30:	6803      	ldr	r3, [r0, #0]
 800bd32:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bd34:	4798      	blx	r3
 800bd36:	4405      	add	r5, r0
 800bd38:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800bd3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800bd3c:	1aeb      	subs	r3, r5, r3
 800bd3e:	4293      	cmp	r3, r2
 800bd40:	dd17      	ble.n	800bd72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800bd42:	2c00      	cmp	r4, #0
 800bd44:	f000 8096 	beq.w	800be74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800bd48:	2c0a      	cmp	r4, #10
 800bd4a:	f040 8084 	bne.w	800be56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800bd4e:	240a      	movs	r4, #10
 800bd50:	fab4 f084 	clz	r0, r4
 800bd54:	0940      	lsrs	r0, r0, #5
 800bd56:	b01f      	add	sp, #124	; 0x7c
 800bd58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd5c:	f8d8 0000 	ldr.w	r0, [r8]
 800bd60:	990d      	ldr	r1, [sp, #52]	; 0x34
 800bd62:	6803      	ldr	r3, [r0, #0]
 800bd64:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bd66:	4798      	blx	r3
 800bd68:	f1bb 0f01 	cmp.w	fp, #1
 800bd6c:	eba5 0500 	sub.w	r5, r5, r0
 800bd70:	d0a4      	beq.n	800bcbc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800bd72:	981c      	ldr	r0, [sp, #112]	; 0x70
 800bd74:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bd76:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800bd7a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800bd7e:	7b43      	ldrb	r3, [r0, #13]
 800bd80:	015b      	lsls	r3, r3, #5
 800bd82:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800bd86:	7983      	ldrb	r3, [r0, #6]
 800bd88:	4429      	add	r1, r5
 800bd8a:	4313      	orrs	r3, r2
 800bd8c:	440b      	add	r3, r1
 800bd8e:	42b3      	cmp	r3, r6
 800bd90:	db5b      	blt.n	800be4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bd92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bd94:	4299      	cmp	r1, r3
 800bd96:	da58      	bge.n	800be4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bd98:	f8d8 0000 	ldr.w	r0, [r8]
 800bd9c:	6803      	ldr	r3, [r0, #0]
 800bd9e:	42ae      	cmp	r6, r5
 800bda0:	bfc8      	it	gt
 800bda2:	1b76      	subgt	r6, r6, r5
 800bda4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bda6:	bfcc      	ite	gt
 800bda8:	b2b6      	uxthgt	r6, r6
 800bdaa:	2600      	movle	r6, #0
 800bdac:	4798      	blx	r3
 800bdae:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800bdb0:	7b5a      	ldrb	r2, [r3, #13]
 800bdb2:	00d1      	lsls	r1, r2, #3
 800bdb4:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800bdb8:	7a19      	ldrb	r1, [r3, #8]
 800bdba:	4339      	orrs	r1, r7
 800bdbc:	0657      	lsls	r7, r2, #25
 800bdbe:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800bdc0:	bf44      	itt	mi
 800bdc2:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800bdc6:	b209      	sxthmi	r1, r1
 800bdc8:	19c7      	adds	r7, r0, r7
 800bdca:	1a7f      	subs	r7, r7, r1
 800bdcc:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800bdce:	b2bf      	uxth	r7, r7
 800bdd0:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800bdd4:	fa0f fa87 	sxth.w	sl, r7
 800bdd8:	4551      	cmp	r1, sl
 800bdda:	dd3a      	ble.n	800be52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bddc:	0112      	lsls	r2, r2, #4
 800bdde:	79d8      	ldrb	r0, [r3, #7]
 800bde0:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800bde4:	4302      	orrs	r2, r0
 800bde6:	4492      	add	sl, r2
 800bde8:	4551      	cmp	r1, sl
 800bdea:	dc2e      	bgt.n	800be4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bdec:	1bcf      	subs	r7, r1, r7
 800bdee:	b2bf      	uxth	r7, r7
 800bdf0:	468a      	mov	sl, r1
 800bdf2:	9319      	str	r3, [sp, #100]	; 0x64
 800bdf4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bdf6:	f8d8 0000 	ldr.w	r0, [r8]
 800bdfa:	681a      	ldr	r2, [r3, #0]
 800bdfc:	6801      	ldr	r1, [r0, #0]
 800bdfe:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800be00:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800be02:	9313      	str	r3, [sp, #76]	; 0x4c
 800be04:	9218      	str	r2, [sp, #96]	; 0x60
 800be06:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800be08:	4788      	blx	r1
 800be0a:	f898 1006 	ldrb.w	r1, [r8, #6]
 800be0e:	910b      	str	r1, [sp, #44]	; 0x2c
 800be10:	f898 100e 	ldrb.w	r1, [r8, #14]
 800be14:	910a      	str	r1, [sp, #40]	; 0x28
 800be16:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800be1a:	9109      	str	r1, [sp, #36]	; 0x24
 800be1c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800be1e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800be22:	9305      	str	r3, [sp, #20]
 800be24:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800be26:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800be28:	9206      	str	r2, [sp, #24]
 800be2a:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800be2e:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800be32:	e9cd a601 	strd	sl, r6, [sp, #4]
 800be36:	442e      	add	r6, r5
 800be38:	b236      	sxth	r6, r6
 800be3a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800be3c:	9600      	str	r6, [sp, #0]
 800be3e:	681a      	ldr	r2, [r3, #0]
 800be40:	9916      	ldr	r1, [sp, #88]	; 0x58
 800be42:	685b      	ldr	r3, [r3, #4]
 800be44:	9811      	ldr	r0, [sp, #68]	; 0x44
 800be46:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800be48:	47b0      	blx	r6
 800be4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800be4c:	3301      	adds	r3, #1
 800be4e:	930e      	str	r3, [sp, #56]	; 0x38
 800be50:	e6e6      	b.n	800bc20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800be52:	2700      	movs	r7, #0
 800be54:	e7cd      	b.n	800bdf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800be56:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800be58:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800be5a:	3501      	adds	r5, #1
 800be5c:	429d      	cmp	r5, r3
 800be5e:	f6bf af77 	bge.w	800bd50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800be62:	4659      	mov	r1, fp
 800be64:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800be66:	f7f6 fc65 	bl	8002734 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800be6a:	4604      	mov	r4, r0
 800be6c:	b110      	cbz	r0, 800be74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800be6e:	280a      	cmp	r0, #10
 800be70:	d1f2      	bne.n	800be58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800be72:	e76c      	b.n	800bd4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800be74:	2400      	movs	r4, #0
 800be76:	e76b      	b.n	800bd50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800be78:	f1bb 0f00 	cmp.w	fp, #0
 800be7c:	f43f af5c 	beq.w	800bd38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800be80:	e777      	b.n	800bd72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800be82 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800be82:	b530      	push	{r4, r5, lr}
 800be84:	8a44      	ldrh	r4, [r0, #18]
 800be86:	8ac5      	ldrh	r5, [r0, #22]
 800be88:	82c3      	strh	r3, [r0, #22]
 800be8a:	442c      	add	r4, r5
 800be8c:	1ae4      	subs	r4, r4, r3
 800be8e:	8244      	strh	r4, [r0, #18]
 800be90:	8b03      	ldrh	r3, [r0, #24]
 800be92:	8a84      	ldrh	r4, [r0, #20]
 800be94:	4422      	add	r2, r4
 800be96:	440c      	add	r4, r1
 800be98:	1a59      	subs	r1, r3, r1
 800be9a:	8342      	strh	r2, [r0, #26]
 800be9c:	8284      	strh	r4, [r0, #20]
 800be9e:	8301      	strh	r1, [r0, #24]
 800bea0:	bd30      	pop	{r4, r5, pc}

0800bea2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800bea2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bea6:	7a43      	ldrb	r3, [r0, #9]
 800bea8:	1eda      	subs	r2, r3, #3
 800beaa:	b087      	sub	sp, #28
 800beac:	4604      	mov	r4, r0
 800beae:	b2d2      	uxtb	r2, r2
 800beb0:	460f      	mov	r7, r1
 800beb2:	2900      	cmp	r1, #0
 800beb4:	d036      	beq.n	800bf24 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800beb6:	2a01      	cmp	r2, #1
 800beb8:	d932      	bls.n	800bf20 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800beba:	1e58      	subs	r0, r3, #1
 800bebc:	f1d0 0b00 	rsbs	fp, r0, #0
 800bec0:	eb4b 0b00 	adc.w	fp, fp, r0
 800bec4:	1e99      	subs	r1, r3, #2
 800bec6:	424b      	negs	r3, r1
 800bec8:	414b      	adcs	r3, r1
 800beca:	9303      	str	r3, [sp, #12]
 800becc:	2300      	movs	r3, #0
 800bece:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800bed2:	2500      	movs	r5, #0
 800bed4:	8265      	strh	r5, [r4, #18]
 800bed6:	82a5      	strh	r5, [r4, #20]
 800bed8:	46a9      	mov	r9, r5
 800beda:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800bede:	2300      	movs	r3, #0
 800bee0:	9305      	str	r3, [sp, #20]
 800bee2:	8823      	ldrh	r3, [r4, #0]
 800bee4:	2b20      	cmp	r3, #32
 800bee6:	d02b      	beq.n	800bf40 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800bee8:	eba3 020a 	sub.w	r2, r3, sl
 800beec:	4256      	negs	r6, r2
 800beee:	4156      	adcs	r6, r2
 800bef0:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800bef4:	4293      	cmp	r3, r2
 800bef6:	d004      	beq.n	800bf02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800bef8:	4553      	cmp	r3, sl
 800befa:	bf16      	itet	ne
 800befc:	4699      	movne	r9, r3
 800befe:	2601      	moveq	r6, #1
 800bf00:	2600      	movne	r6, #0
 800bf02:	ab05      	add	r3, sp, #20
 800bf04:	68e2      	ldr	r2, [r4, #12]
 800bf06:	7a21      	ldrb	r1, [r4, #8]
 800bf08:	6860      	ldr	r0, [r4, #4]
 800bf0a:	f002 fc6b 	bl	800e7e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bf0e:	8020      	strh	r0, [r4, #0]
 800bf10:	b9c8      	cbnz	r0, 800bf46 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800bf12:	8b22      	ldrh	r2, [r4, #24]
 800bf14:	2300      	movs	r3, #0
 800bf16:	4611      	mov	r1, r2
 800bf18:	4620      	mov	r0, r4
 800bf1a:	f7ff ffb2 	bl	800be82 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800bf1e:	e066      	b.n	800bfee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800bf20:	468b      	mov	fp, r1
 800bf22:	e7cf      	b.n	800bec4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800bf24:	3b01      	subs	r3, #1
 800bf26:	2a01      	cmp	r2, #1
 800bf28:	bf8c      	ite	hi
 800bf2a:	2200      	movhi	r2, #0
 800bf2c:	2201      	movls	r2, #1
 800bf2e:	2b01      	cmp	r3, #1
 800bf30:	bf8c      	ite	hi
 800bf32:	2300      	movhi	r3, #0
 800bf34:	2301      	movls	r3, #1
 800bf36:	9202      	str	r2, [sp, #8]
 800bf38:	9301      	str	r3, [sp, #4]
 800bf3a:	9103      	str	r1, [sp, #12]
 800bf3c:	468b      	mov	fp, r1
 800bf3e:	e7c8      	b.n	800bed2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800bf40:	4699      	mov	r9, r3
 800bf42:	2601      	movs	r6, #1
 800bf44:	e7dd      	b.n	800bf02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800bf46:	8ae3      	ldrh	r3, [r4, #22]
 800bf48:	280a      	cmp	r0, #10
 800bf4a:	f103 0301 	add.w	r3, r3, #1
 800bf4e:	82e3      	strh	r3, [r4, #22]
 800bf50:	d0df      	beq.n	800bf12 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800bf52:	9a05      	ldr	r2, [sp, #20]
 800bf54:	bb42      	cbnz	r2, 800bfa8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800bf56:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bf5a:	4298      	cmp	r0, r3
 800bf5c:	d001      	beq.n	800bf62 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800bf5e:	4550      	cmp	r0, sl
 800bf60:	d1bd      	bne.n	800bede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bf62:	8823      	ldrh	r3, [r4, #0]
 800bf64:	8b21      	ldrh	r1, [r4, #24]
 800bf66:	2b20      	cmp	r3, #32
 800bf68:	d001      	beq.n	800bf6e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800bf6a:	4553      	cmp	r3, sl
 800bf6c:	d131      	bne.n	800bfd2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800bf6e:	2e00      	cmp	r6, #0
 800bf70:	bf0a      	itet	eq
 800bf72:	460d      	moveq	r5, r1
 800bf74:	4630      	movne	r0, r6
 800bf76:	2001      	moveq	r0, #1
 800bf78:	440a      	add	r2, r1
 800bf7a:	8aa3      	ldrh	r3, [r4, #20]
 800bf7c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800bf80:	b292      	uxth	r2, r2
 800bf82:	8322      	strh	r2, [r4, #24]
 800bf84:	4413      	add	r3, r2
 800bf86:	2f00      	cmp	r7, #0
 800bf88:	d03a      	beq.n	800c000 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800bf8a:	f1bb 0f00 	cmp.w	fp, #0
 800bf8e:	d102      	bne.n	800bf96 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800bf90:	9903      	ldr	r1, [sp, #12]
 800bf92:	b301      	cbz	r1, 800bfd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800bf94:	b1f8      	cbz	r0, 800bfd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800bf96:	8ba1      	ldrh	r1, [r4, #28]
 800bf98:	4419      	add	r1, r3
 800bf9a:	458c      	cmp	ip, r1
 800bf9c:	da2a      	bge.n	800bff4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800bf9e:	8a61      	ldrh	r1, [r4, #18]
 800bfa0:	b341      	cbz	r1, 800bff4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800bfa2:	4563      	cmp	r3, ip
 800bfa4:	dd9b      	ble.n	800bede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bfa6:	e01c      	b.n	800bfe2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800bfa8:	8893      	ldrh	r3, [r2, #4]
 800bfaa:	8023      	strh	r3, [r4, #0]
 800bfac:	f892 800d 	ldrb.w	r8, [r2, #13]
 800bfb0:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800bfb4:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800bfb8:	f892 800a 	ldrb.w	r8, [r2, #10]
 800bfbc:	ea48 0800 	orr.w	r8, r8, r0
 800bfc0:	68e0      	ldr	r0, [r4, #12]
 800bfc2:	6803      	ldr	r3, [r0, #0]
 800bfc4:	4649      	mov	r1, r9
 800bfc6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bfc8:	4798      	blx	r3
 800bfca:	eb08 0200 	add.w	r2, r8, r0
 800bfce:	b292      	uxth	r2, r2
 800bfd0:	e7c7      	b.n	800bf62 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800bfd2:	2000      	movs	r0, #0
 800bfd4:	e7d0      	b.n	800bf78 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800bfd6:	4563      	cmp	r3, ip
 800bfd8:	dd81      	ble.n	800bede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bfda:	8a63      	ldrh	r3, [r4, #18]
 800bfdc:	2b00      	cmp	r3, #0
 800bfde:	f43f af7e 	beq.w	800bede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800bfe2:	2301      	movs	r3, #1
 800bfe4:	77a3      	strb	r3, [r4, #30]
 800bfe6:	8ba2      	ldrh	r2, [r4, #28]
 800bfe8:	8b63      	ldrh	r3, [r4, #26]
 800bfea:	4413      	add	r3, r2
 800bfec:	8363      	strh	r3, [r4, #26]
 800bfee:	b007      	add	sp, #28
 800bff0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bff4:	2300      	movs	r3, #0
 800bff6:	4611      	mov	r1, r2
 800bff8:	4620      	mov	r0, r4
 800bffa:	f7ff ff42 	bl	800be82 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800bffe:	e76e      	b.n	800bede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c000:	4563      	cmp	r3, ip
 800c002:	dd14      	ble.n	800c02e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800c004:	9b02      	ldr	r3, [sp, #8]
 800c006:	b113      	cbz	r3, 800c00e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800c008:	2301      	movs	r3, #1
 800c00a:	460a      	mov	r2, r1
 800c00c:	e783      	b.n	800bf16 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800c00e:	9b01      	ldr	r3, [sp, #4]
 800c010:	2b00      	cmp	r3, #0
 800c012:	f43f af64 	beq.w	800bede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c016:	2800      	cmp	r0, #0
 800c018:	f47f af61 	bne.w	800bede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c01c:	b116      	cbz	r6, 800c024 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800c01e:	2301      	movs	r3, #1
 800c020:	462a      	mov	r2, r5
 800c022:	e779      	b.n	800bf18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800c024:	8a63      	ldrh	r3, [r4, #18]
 800c026:	2b00      	cmp	r3, #0
 800c028:	f43f af59 	beq.w	800bede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c02c:	e7df      	b.n	800bfee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800c02e:	2800      	cmp	r0, #0
 800c030:	f47f af55 	bne.w	800bede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c034:	2e00      	cmp	r6, #0
 800c036:	f43f af52 	beq.w	800bede <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c03a:	2301      	movs	r3, #1
 800c03c:	462a      	mov	r2, r5
 800c03e:	e7db      	b.n	800bff8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800c040 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800c040:	b530      	push	{r4, r5, lr}
 800c042:	4605      	mov	r5, r0
 800c044:	b08b      	sub	sp, #44	; 0x2c
 800c046:	b191      	cbz	r1, 800c06e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800c048:	e9cd 3100 	strd	r3, r1, [sp]
 800c04c:	4613      	mov	r3, r2
 800c04e:	4601      	mov	r1, r0
 800c050:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800c054:	a802      	add	r0, sp, #8
 800c056:	f7ff fd0d 	bl	800ba74 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800c05a:	2401      	movs	r4, #1
 800c05c:	2100      	movs	r1, #0
 800c05e:	a802      	add	r0, sp, #8
 800c060:	f7ff ff1f 	bl	800bea2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c064:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800c068:	b163      	cbz	r3, 800c084 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800c06a:	3401      	adds	r4, #1
 800c06c:	e7f6      	b.n	800c05c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800c06e:	f002 fcb3 	bl	800e9d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c072:	2401      	movs	r4, #1
 800c074:	280a      	cmp	r0, #10
 800c076:	4628      	mov	r0, r5
 800c078:	bf08      	it	eq
 800c07a:	3401      	addeq	r4, #1
 800c07c:	f002 fcac 	bl	800e9d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c080:	2800      	cmp	r0, #0
 800c082:	d1f7      	bne.n	800c074 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800c084:	b2a0      	uxth	r0, r4
 800c086:	b00b      	add	sp, #44	; 0x2c
 800c088:	bd30      	pop	{r4, r5, pc}

0800c08a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800c08a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c08e:	b0e5      	sub	sp, #404	; 0x194
 800c090:	4689      	mov	r9, r1
 800c092:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800c096:	900a      	str	r0, [sp, #40]	; 0x28
 800c098:	461c      	mov	r4, r3
 800c09a:	f1ba 0f00 	cmp.w	sl, #0
 800c09e:	f000 80b4 	beq.w	800c20a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c0a2:	681b      	ldr	r3, [r3, #0]
 800c0a4:	2b00      	cmp	r3, #0
 800c0a6:	f000 80b0 	beq.w	800c20a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c0aa:	7ba3      	ldrb	r3, [r4, #14]
 800c0ac:	2b00      	cmp	r3, #0
 800c0ae:	f000 80ac 	beq.w	800c20a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c0b2:	6810      	ldr	r0, [r2, #0]
 800c0b4:	6851      	ldr	r1, [r2, #4]
 800c0b6:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800c0ba:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800c0be:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800c0c2:	4643      	mov	r3, r8
 800c0c4:	c303      	stmia	r3!, {r0, r1}
 800c0c6:	2500      	movs	r5, #0
 800c0c8:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800c0cc:	79a2      	ldrb	r2, [r4, #6]
 800c0ce:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c0d2:	a90f      	add	r1, sp, #60	; 0x3c
 800c0d4:	4640      	mov	r0, r8
 800c0d6:	950f      	str	r5, [sp, #60]	; 0x3c
 800c0d8:	f7ff fd42 	bl	800bb60 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c0dc:	a90f      	add	r1, sp, #60	; 0x3c
 800c0de:	4608      	mov	r0, r1
 800c0e0:	79a2      	ldrb	r2, [r4, #6]
 800c0e2:	af19      	add	r7, sp, #100	; 0x64
 800c0e4:	f7ff fd3c 	bl	800bb60 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c0e8:	4638      	mov	r0, r7
 800c0ea:	f002 f829 	bl	800e140 <_ZN8touchgfx12TextProviderC1Ev>
 800c0ee:	6820      	ldr	r0, [r4, #0]
 800c0f0:	6803      	ldr	r3, [r0, #0]
 800c0f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c0f4:	4798      	blx	r3
 800c0f6:	4606      	mov	r6, r0
 800c0f8:	6820      	ldr	r0, [r4, #0]
 800c0fa:	6803      	ldr	r3, [r0, #0]
 800c0fc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c0fe:	4798      	blx	r3
 800c100:	4633      	mov	r3, r6
 800c102:	9000      	str	r0, [sp, #0]
 800c104:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800c106:	4651      	mov	r1, sl
 800c108:	4638      	mov	r0, r7
 800c10a:	f002 f86c 	bl	800e1e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c10e:	6820      	ldr	r0, [r4, #0]
 800c110:	7923      	ldrb	r3, [r4, #4]
 800c112:	9308      	str	r3, [sp, #32]
 800c114:	6803      	ldr	r3, [r0, #0]
 800c116:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c118:	4798      	blx	r3
 800c11a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c11e:	181e      	adds	r6, r3, r0
 800c120:	42ae      	cmp	r6, r5
 800c122:	dd06      	ble.n	800c132 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800c124:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800c128:	4282      	cmp	r2, r0
 800c12a:	bfa4      	itt	ge
 800c12c:	189d      	addge	r5, r3, r2
 800c12e:	fb95 f5f6 	sdivge	r5, r5, r6
 800c132:	a832      	add	r0, sp, #200	; 0xc8
 800c134:	f002 f804 	bl	800e140 <_ZN8touchgfx12TextProviderC1Ev>
 800c138:	7c23      	ldrb	r3, [r4, #16]
 800c13a:	b17b      	cbz	r3, 800c15c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800c13c:	6820      	ldr	r0, [r4, #0]
 800c13e:	6803      	ldr	r3, [r0, #0]
 800c140:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c142:	4798      	blx	r3
 800c144:	4683      	mov	fp, r0
 800c146:	6820      	ldr	r0, [r4, #0]
 800c148:	6803      	ldr	r3, [r0, #0]
 800c14a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c14c:	4798      	blx	r3
 800c14e:	465b      	mov	r3, fp
 800c150:	9000      	str	r0, [sp, #0]
 800c152:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800c154:	4651      	mov	r1, sl
 800c156:	a832      	add	r0, sp, #200	; 0xc8
 800c158:	f002 f845 	bl	800e1e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c15c:	7be1      	ldrb	r1, [r4, #15]
 800c15e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800c162:	7963      	ldrb	r3, [r4, #5]
 800c164:	1a52      	subs	r2, r2, r1
 800c166:	7c21      	ldrb	r1, [r4, #16]
 800c168:	9101      	str	r1, [sp, #4]
 800c16a:	6821      	ldr	r1, [r4, #0]
 800c16c:	9100      	str	r1, [sp, #0]
 800c16e:	b292      	uxth	r2, r2
 800c170:	a932      	add	r1, sp, #200	; 0xc8
 800c172:	a811      	add	r0, sp, #68	; 0x44
 800c174:	f7ff fc7e 	bl	800ba74 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800c178:	7c23      	ldrb	r3, [r4, #16]
 800c17a:	b9bb      	cbnz	r3, 800c1ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 800c17c:	fa1f fa86 	uxth.w	sl, r6
 800c180:	2d00      	cmp	r5, #0
 800c182:	dd45      	ble.n	800c210 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800c184:	4638      	mov	r0, r7
 800c186:	f002 fc27 	bl	800e9d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c18a:	2800      	cmp	r0, #0
 800c18c:	d03d      	beq.n	800c20a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c18e:	280a      	cmp	r0, #10
 800c190:	d1f6      	bne.n	800c180 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800c192:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c196:	4453      	add	r3, sl
 800c198:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c19c:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800c1a0:	eba3 030a 	sub.w	r3, r3, sl
 800c1a4:	3d01      	subs	r5, #1
 800c1a6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c1aa:	e7e9      	b.n	800c180 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800c1ac:	0073      	lsls	r3, r6, #1
 800c1ae:	9309      	str	r3, [sp, #36]	; 0x24
 800c1b0:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800c1b4:	fa1f fa86 	uxth.w	sl, r6
 800c1b8:	2d00      	cmp	r5, #0
 800c1ba:	dd29      	ble.n	800c210 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800c1bc:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800c1c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c1c2:	428b      	cmp	r3, r1
 800c1c4:	bfd4      	ite	le
 800c1c6:	2100      	movle	r1, #0
 800c1c8:	2101      	movgt	r1, #1
 800c1ca:	a811      	add	r0, sp, #68	; 0x44
 800c1cc:	f7ff fe69 	bl	800bea2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c1d0:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800c1d4:	3b01      	subs	r3, #1
 800c1d6:	b29b      	uxth	r3, r3
 800c1d8:	455b      	cmp	r3, fp
 800c1da:	930b      	str	r3, [sp, #44]	; 0x2c
 800c1dc:	d005      	beq.n	800c1ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 800c1de:	7961      	ldrb	r1, [r4, #5]
 800c1e0:	4638      	mov	r0, r7
 800c1e2:	f7f6 faa7 	bl	8002734 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c1e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c1e8:	e7f4      	b.n	800c1d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 800c1ea:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c1ee:	4453      	add	r3, sl
 800c1f0:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c1f4:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800c1f8:	eba3 030a 	sub.w	r3, r3, sl
 800c1fc:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c200:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c204:	3d01      	subs	r5, #1
 800c206:	2b00      	cmp	r3, #0
 800c208:	d1d6      	bne.n	800c1b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 800c20a:	b065      	add	sp, #404	; 0x194
 800c20c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c210:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800c214:	ad4b      	add	r5, sp, #300	; 0x12c
 800c216:	f04f 0b00 	mov.w	fp, #0
 800c21a:	7c23      	ldrb	r3, [r4, #16]
 800c21c:	2b00      	cmp	r3, #0
 800c21e:	d067      	beq.n	800c2f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x266>
 800c220:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800c224:	458a      	cmp	sl, r1
 800c226:	bfd4      	ite	le
 800c228:	2100      	movle	r1, #0
 800c22a:	2101      	movgt	r1, #1
 800c22c:	a811      	add	r0, sp, #68	; 0x44
 800c22e:	f7ff fe38 	bl	800bea2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c232:	9b08      	ldr	r3, [sp, #32]
 800c234:	2b00      	cmp	r3, #0
 800c236:	d056      	beq.n	800c2e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800c238:	7c23      	ldrb	r3, [r4, #16]
 800c23a:	9309      	str	r3, [sp, #36]	; 0x24
 800c23c:	2264      	movs	r2, #100	; 0x64
 800c23e:	4639      	mov	r1, r7
 800c240:	4628      	mov	r0, r5
 800c242:	f00f fc69 	bl	801bb18 <memcpy>
 800c246:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c248:	2b00      	cmp	r3, #0
 800c24a:	d059      	beq.n	800c300 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x276>
 800c24c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800c250:	7922      	ldrb	r2, [r4, #4]
 800c252:	2a01      	cmp	r2, #1
 800c254:	d13d      	bne.n	800c2d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800c256:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800c25a:	1ac0      	subs	r0, r0, r3
 800c25c:	2302      	movs	r3, #2
 800c25e:	fb90 f0f3 	sdiv	r0, r0, r3
 800c262:	b200      	sxth	r0, r0
 800c264:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800c268:	4418      	add	r0, r3
 800c26a:	7c23      	ldrb	r3, [r4, #16]
 800c26c:	f8ad 012c 	strh.w	r0, [sp, #300]	; 0x12c
 800c270:	2b00      	cmp	r3, #0
 800c272:	d03a      	beq.n	800c2ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800c274:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800c278:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800c27c:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800c280:	9500      	str	r5, [sp, #0]
 800c282:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800c286:	e9cd b703 	strd	fp, r7, [sp, #12]
 800c28a:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800c28e:	464a      	mov	r2, r9
 800c290:	2100      	movs	r1, #0
 800c292:	980a      	ldr	r0, [sp, #40]	; 0x28
 800c294:	f7ff fc95 	bl	800bbc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800c298:	2800      	cmp	r0, #0
 800c29a:	d1b6      	bne.n	800c20a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c29c:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c2a0:	b2b2      	uxth	r2, r6
 800c2a2:	4611      	mov	r1, r2
 800c2a4:	4413      	add	r3, r2
 800c2a6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800c2aa:	1a52      	subs	r2, r2, r1
 800c2ac:	7c21      	ldrb	r1, [r4, #16]
 800c2ae:	b21b      	sxth	r3, r3
 800c2b0:	b212      	sxth	r2, r2
 800c2b2:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c2b6:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800c2ba:	b109      	cbz	r1, 800c2c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x236>
 800c2bc:	42b2      	cmp	r2, r6
 800c2be:	dba4      	blt.n	800c20a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c2c0:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800c2c4:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800c2c8:	440a      	add	r2, r1
 800c2ca:	b212      	sxth	r2, r2
 800c2cc:	4293      	cmp	r3, r2
 800c2ce:	dda4      	ble.n	800c21a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x190>
 800c2d0:	e79b      	b.n	800c20a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c2d2:	2a02      	cmp	r2, #2
 800c2d4:	d105      	bne.n	800c2e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800c2d6:	7be2      	ldrb	r2, [r4, #15]
 800c2d8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800c2dc:	1a80      	subs	r0, r0, r2
 800c2de:	1ac0      	subs	r0, r0, r3
 800c2e0:	e7bf      	b.n	800c262 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d8>
 800c2e2:	2000      	movs	r0, #0
 800c2e4:	e7be      	b.n	800c264 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1da>
 800c2e6:	7be0      	ldrb	r0, [r4, #15]
 800c2e8:	e7bc      	b.n	800c264 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1da>
 800c2ea:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c2ee:	e7c3      	b.n	800c278 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ee>
 800c2f0:	9b08      	ldr	r3, [sp, #32]
 800c2f2:	2b00      	cmp	r3, #0
 800c2f4:	d0f7      	beq.n	800c2e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800c2f6:	2264      	movs	r2, #100	; 0x64
 800c2f8:	4639      	mov	r1, r7
 800c2fa:	4628      	mov	r0, r5
 800c2fc:	f00f fc0c 	bl	801bb18 <memcpy>
 800c300:	2300      	movs	r3, #0
 800c302:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c306:	6821      	ldr	r1, [r4, #0]
 800c308:	4628      	mov	r0, r5
 800c30a:	f7ff fbed 	bl	800bae8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800c30e:	b203      	sxth	r3, r0
 800c310:	e79e      	b.n	800c250 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>

0800c312 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c312:	b510      	push	{r4, lr}
 800c314:	2b02      	cmp	r3, #2
 800c316:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c31a:	d00b      	beq.n	800c334 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800c31c:	2b03      	cmp	r3, #3
 800c31e:	d00e      	beq.n	800c33e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800c320:	2b01      	cmp	r3, #1
 800c322:	d001      	beq.n	800c328 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800c324:	1860      	adds	r0, r4, r1
 800c326:	bd10      	pop	{r4, pc}
 800c328:	8880      	ldrh	r0, [r0, #4]
 800c32a:	4420      	add	r0, r4
 800c32c:	b200      	sxth	r0, r0
 800c32e:	1a80      	subs	r0, r0, r2
 800c330:	3801      	subs	r0, #1
 800c332:	e7f8      	b.n	800c326 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800c334:	8880      	ldrh	r0, [r0, #4]
 800c336:	4420      	add	r0, r4
 800c338:	b200      	sxth	r0, r0
 800c33a:	1a40      	subs	r0, r0, r1
 800c33c:	e7f8      	b.n	800c330 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800c33e:	18a0      	adds	r0, r4, r2
 800c340:	e7f1      	b.n	800c326 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800c342 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800c342:	b510      	push	{r4, lr}
 800c344:	2b02      	cmp	r3, #2
 800c346:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800c34a:	d006      	beq.n	800c35a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800c34c:	2b03      	cmp	r3, #3
 800c34e:	d00a      	beq.n	800c366 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800c350:	2b01      	cmp	r3, #1
 800c352:	bf14      	ite	ne
 800c354:	18a0      	addne	r0, r4, r2
 800c356:	1860      	addeq	r0, r4, r1
 800c358:	bd10      	pop	{r4, pc}
 800c35a:	88c0      	ldrh	r0, [r0, #6]
 800c35c:	4420      	add	r0, r4
 800c35e:	b200      	sxth	r0, r0
 800c360:	1a80      	subs	r0, r0, r2
 800c362:	3801      	subs	r0, #1
 800c364:	e7f8      	b.n	800c358 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800c366:	88c0      	ldrh	r0, [r0, #6]
 800c368:	4420      	add	r0, r4
 800c36a:	b200      	sxth	r0, r0
 800c36c:	1a40      	subs	r0, r0, r1
 800c36e:	e7f8      	b.n	800c362 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

0800c370 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800c370:	4b01      	ldr	r3, [pc, #4]	; (800c378 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800c372:	2200      	movs	r2, #0
 800c374:	601a      	str	r2, [r3, #0]
 800c376:	4770      	bx	lr
 800c378:	20013510 	.word	0x20013510

0800c37c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800c37c:	4603      	mov	r3, r0
 800c37e:	b1c8      	cbz	r0, 800c3b4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800c380:	0c02      	lsrs	r2, r0, #16
 800c382:	0412      	lsls	r2, r2, #16
 800c384:	b9a2      	cbnz	r2, 800c3b0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800c386:	0403      	lsls	r3, r0, #16
 800c388:	2010      	movs	r0, #16
 800c38a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800c38e:	bf04      	itt	eq
 800c390:	021b      	lsleq	r3, r3, #8
 800c392:	3008      	addeq	r0, #8
 800c394:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800c398:	bf04      	itt	eq
 800c39a:	011b      	lsleq	r3, r3, #4
 800c39c:	3004      	addeq	r0, #4
 800c39e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800c3a2:	bf04      	itt	eq
 800c3a4:	009b      	lsleq	r3, r3, #2
 800c3a6:	3002      	addeq	r0, #2
 800c3a8:	2b00      	cmp	r3, #0
 800c3aa:	db04      	blt.n	800c3b6 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800c3ac:	3001      	adds	r0, #1
 800c3ae:	4770      	bx	lr
 800c3b0:	2000      	movs	r0, #0
 800c3b2:	e7ea      	b.n	800c38a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800c3b4:	2020      	movs	r0, #32
 800c3b6:	4770      	bx	lr

0800c3b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800c3b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3bc:	b087      	sub	sp, #28
 800c3be:	4681      	mov	r9, r0
 800c3c0:	4698      	mov	r8, r3
 800c3c2:	4610      	mov	r0, r2
 800c3c4:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800c3c8:	460d      	mov	r5, r1
 800c3ca:	b981      	cbnz	r1, 800c3ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800c3cc:	b14b      	cbz	r3, 800c3e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800c3ce:	460b      	mov	r3, r1
 800c3d0:	e9cd 4700 	strd	r4, r7, [sp]
 800c3d4:	464a      	mov	r2, r9
 800c3d6:	4641      	mov	r1, r8
 800c3d8:	f7ff ffee 	bl	800c3b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c3dc:	b007      	add	sp, #28
 800c3de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c3e2:	f04f 33ff 	mov.w	r3, #4294967295
 800c3e6:	603b      	str	r3, [r7, #0]
 800c3e8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800c3ec:	e7f6      	b.n	800c3dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c3ee:	fa32 fa01 	lsrs.w	sl, r2, r1
 800c3f2:	d107      	bne.n	800c404 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800c3f4:	fb09 f602 	mul.w	r6, r9, r2
 800c3f8:	fbb6 f0f4 	udiv	r0, r6, r4
 800c3fc:	fb04 6610 	mls	r6, r4, r0, r6
 800c400:	603e      	str	r6, [r7, #0]
 800c402:	e7eb      	b.n	800c3dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c404:	2601      	movs	r6, #1
 800c406:	408e      	lsls	r6, r1
 800c408:	3e01      	subs	r6, #1
 800c40a:	4016      	ands	r6, r2
 800c40c:	fa09 fb01 	lsl.w	fp, r9, r1
 800c410:	4630      	mov	r0, r6
 800c412:	fbbb f3f4 	udiv	r3, fp, r4
 800c416:	9302      	str	r3, [sp, #8]
 800c418:	fb0a f303 	mul.w	r3, sl, r3
 800c41c:	9303      	str	r3, [sp, #12]
 800c41e:	f7ff ffad 	bl	800c37c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c422:	464a      	mov	r2, r9
 800c424:	460b      	mov	r3, r1
 800c426:	e9cd 4700 	strd	r4, r7, [sp]
 800c42a:	4601      	mov	r1, r0
 800c42c:	4630      	mov	r0, r6
 800c42e:	f7ff ffc3 	bl	800c3b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c432:	9b02      	ldr	r3, [sp, #8]
 800c434:	fb04 bb13 	mls	fp, r4, r3, fp
 800c438:	4606      	mov	r6, r0
 800c43a:	4658      	mov	r0, fp
 800c43c:	eb05 0108 	add.w	r1, r5, r8
 800c440:	f7ff ff9c 	bl	800c37c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c444:	ab05      	add	r3, sp, #20
 800c446:	e9cd 4300 	strd	r4, r3, [sp]
 800c44a:	465a      	mov	r2, fp
 800c44c:	4603      	mov	r3, r0
 800c44e:	4650      	mov	r0, sl
 800c450:	f7ff ffb2 	bl	800c3b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c454:	6839      	ldr	r1, [r7, #0]
 800c456:	9a05      	ldr	r2, [sp, #20]
 800c458:	9b03      	ldr	r3, [sp, #12]
 800c45a:	4411      	add	r1, r2
 800c45c:	fbb1 f2f4 	udiv	r2, r1, r4
 800c460:	18d3      	adds	r3, r2, r3
 800c462:	441e      	add	r6, r3
 800c464:	fb04 1412 	mls	r4, r4, r2, r1
 800c468:	4430      	add	r0, r6
 800c46a:	603c      	str	r4, [r7, #0]
 800c46c:	e7b6      	b.n	800c3dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800c46e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800c46e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c472:	b085      	sub	sp, #20
 800c474:	f1b0 0900 	subs.w	r9, r0, #0
 800c478:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800c47a:	461d      	mov	r5, r3
 800c47c:	bfbf      	itttt	lt
 800c47e:	6823      	ldrlt	r3, [r4, #0]
 800c480:	425b      	neglt	r3, r3
 800c482:	f1c9 0900 	rsblt	r9, r9, #0
 800c486:	6023      	strlt	r3, [r4, #0]
 800c488:	bfb4      	ite	lt
 800c48a:	f04f 36ff 	movlt.w	r6, #4294967295
 800c48e:	2601      	movge	r6, #1
 800c490:	2a00      	cmp	r2, #0
 800c492:	4617      	mov	r7, r2
 800c494:	da04      	bge.n	800c4a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800c496:	6823      	ldr	r3, [r4, #0]
 800c498:	425b      	negs	r3, r3
 800c49a:	4257      	negs	r7, r2
 800c49c:	4276      	negs	r6, r6
 800c49e:	6023      	str	r3, [r4, #0]
 800c4a0:	2d00      	cmp	r5, #0
 800c4a2:	4638      	mov	r0, r7
 800c4a4:	bfba      	itte	lt
 800c4a6:	426d      	neglt	r5, r5
 800c4a8:	f04f 38ff 	movlt.w	r8, #4294967295
 800c4ac:	f04f 0801 	movge.w	r8, #1
 800c4b0:	f7ff ff64 	bl	800c37c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c4b4:	ab03      	add	r3, sp, #12
 800c4b6:	e9cd 5300 	strd	r5, r3, [sp]
 800c4ba:	463a      	mov	r2, r7
 800c4bc:	4603      	mov	r3, r0
 800c4be:	4648      	mov	r0, r9
 800c4c0:	f7ff ff7a 	bl	800c3b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c4c4:	6823      	ldr	r3, [r4, #0]
 800c4c6:	9a03      	ldr	r2, [sp, #12]
 800c4c8:	4546      	cmp	r6, r8
 800c4ca:	441a      	add	r2, r3
 800c4cc:	fb92 f3f5 	sdiv	r3, r2, r5
 800c4d0:	4418      	add	r0, r3
 800c4d2:	bf18      	it	ne
 800c4d4:	4240      	negne	r0, r0
 800c4d6:	fb05 2313 	mls	r3, r5, r3, r2
 800c4da:	1c72      	adds	r2, r6, #1
 800c4dc:	6023      	str	r3, [r4, #0]
 800c4de:	d105      	bne.n	800c4ec <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800c4e0:	2b00      	cmp	r3, #0
 800c4e2:	f1c3 0200 	rsb	r2, r3, #0
 800c4e6:	db0b      	blt.n	800c500 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800c4e8:	6022      	str	r2, [r4, #0]
 800c4ea:	e006      	b.n	800c4fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c4ec:	2e01      	cmp	r6, #1
 800c4ee:	d104      	bne.n	800c4fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c4f0:	2b00      	cmp	r3, #0
 800c4f2:	da02      	bge.n	800c4fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c4f4:	442b      	add	r3, r5
 800c4f6:	3801      	subs	r0, #1
 800c4f8:	6023      	str	r3, [r4, #0]
 800c4fa:	b005      	add	sp, #20
 800c4fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c500:	3801      	subs	r0, #1
 800c502:	1b52      	subs	r2, r2, r5
 800c504:	e7f0      	b.n	800c4e8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800c508 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800c508:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c50c:	4c1c      	ldr	r4, [pc, #112]	; (800c580 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800c50e:	6807      	ldr	r7, [r0, #0]
 800c510:	69a3      	ldr	r3, [r4, #24]
 800c512:	4605      	mov	r5, r0
 800c514:	b92b      	cbnz	r3, 800c522 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800c516:	6840      	ldr	r0, [r0, #4]
 800c518:	e9c5 7000 	strd	r7, r0, [r5]
 800c51c:	b004      	add	sp, #16
 800c51e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c522:	68a2      	ldr	r2, [r4, #8]
 800c524:	6820      	ldr	r0, [r4, #0]
 800c526:	ae04      	add	r6, sp, #16
 800c528:	f04f 0802 	mov.w	r8, #2
 800c52c:	fb93 f1f8 	sdiv	r1, r3, r8
 800c530:	440a      	add	r2, r1
 800c532:	f846 2d04 	str.w	r2, [r6, #-4]!
 800c536:	69e1      	ldr	r1, [r4, #28]
 800c538:	9600      	str	r6, [sp, #0]
 800c53a:	463a      	mov	r2, r7
 800c53c:	f7ff ff97 	bl	800c46e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c540:	69a3      	ldr	r3, [r4, #24]
 800c542:	686a      	ldr	r2, [r5, #4]
 800c544:	6a21      	ldr	r1, [r4, #32]
 800c546:	9600      	str	r6, [sp, #0]
 800c548:	4607      	mov	r7, r0
 800c54a:	6860      	ldr	r0, [r4, #4]
 800c54c:	f7ff ff8f 	bl	800c46e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c550:	6962      	ldr	r2, [r4, #20]
 800c552:	69a3      	ldr	r3, [r4, #24]
 800c554:	fb93 f8f8 	sdiv	r8, r3, r8
 800c558:	4442      	add	r2, r8
 800c55a:	9203      	str	r2, [sp, #12]
 800c55c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c55e:	682a      	ldr	r2, [r5, #0]
 800c560:	9600      	str	r6, [sp, #0]
 800c562:	4407      	add	r7, r0
 800c564:	68e0      	ldr	r0, [r4, #12]
 800c566:	f7ff ff82 	bl	800c46e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c56a:	9600      	str	r6, [sp, #0]
 800c56c:	4680      	mov	r8, r0
 800c56e:	69a3      	ldr	r3, [r4, #24]
 800c570:	686a      	ldr	r2, [r5, #4]
 800c572:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800c574:	6920      	ldr	r0, [r4, #16]
 800c576:	f7ff ff7a 	bl	800c46e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c57a:	4440      	add	r0, r8
 800c57c:	e7cc      	b.n	800c518 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800c57e:	bf00      	nop
 800c580:	20013514 	.word	0x20013514

0800c584 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800c584:	4b07      	ldr	r3, [pc, #28]	; (800c5a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800c586:	781b      	ldrb	r3, [r3, #0]
 800c588:	2b01      	cmp	r3, #1
 800c58a:	d109      	bne.n	800c5a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800c58c:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c590:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c594:	8003      	strh	r3, [r0, #0]
 800c596:	4b04      	ldr	r3, [pc, #16]	; (800c5a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800c598:	881b      	ldrh	r3, [r3, #0]
 800c59a:	3b01      	subs	r3, #1
 800c59c:	1a9b      	subs	r3, r3, r2
 800c59e:	800b      	strh	r3, [r1, #0]
 800c5a0:	4770      	bx	lr
 800c5a2:	bf00      	nop
 800c5a4:	20013500 	.word	0x20013500
 800c5a8:	20013504 	.word	0x20013504

0800c5ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800c5ac:	b510      	push	{r4, lr}
 800c5ae:	4b07      	ldr	r3, [pc, #28]	; (800c5cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800c5b0:	781b      	ldrb	r3, [r3, #0]
 800c5b2:	2b01      	cmp	r3, #1
 800c5b4:	d108      	bne.n	800c5c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800c5b6:	4b06      	ldr	r3, [pc, #24]	; (800c5d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800c5b8:	880c      	ldrh	r4, [r1, #0]
 800c5ba:	881b      	ldrh	r3, [r3, #0]
 800c5bc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c5c0:	3b01      	subs	r3, #1
 800c5c2:	1b1b      	subs	r3, r3, r4
 800c5c4:	8003      	strh	r3, [r0, #0]
 800c5c6:	800a      	strh	r2, [r1, #0]
 800c5c8:	bd10      	pop	{r4, pc}
 800c5ca:	bf00      	nop
 800c5cc:	20013500 	.word	0x20013500
 800c5d0:	20013504 	.word	0x20013504

0800c5d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800c5d4:	b510      	push	{r4, lr}
 800c5d6:	4b0a      	ldr	r3, [pc, #40]	; (800c600 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800c5d8:	781b      	ldrb	r3, [r3, #0]
 800c5da:	2b01      	cmp	r3, #1
 800c5dc:	d10e      	bne.n	800c5fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800c5de:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c5e2:	8843      	ldrh	r3, [r0, #2]
 800c5e4:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c5e8:	8044      	strh	r4, [r0, #2]
 800c5ea:	18ca      	adds	r2, r1, r3
 800c5ec:	4b05      	ldr	r3, [pc, #20]	; (800c604 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800c5ee:	881b      	ldrh	r3, [r3, #0]
 800c5f0:	1a9b      	subs	r3, r3, r2
 800c5f2:	8003      	strh	r3, [r0, #0]
 800c5f4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c5f8:	80c3      	strh	r3, [r0, #6]
 800c5fa:	8081      	strh	r1, [r0, #4]
 800c5fc:	bd10      	pop	{r4, pc}
 800c5fe:	bf00      	nop
 800c600:	20013500 	.word	0x20013500
 800c604:	20013504 	.word	0x20013504

0800c608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800c608:	4b08      	ldr	r3, [pc, #32]	; (800c62c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800c60a:	781b      	ldrb	r3, [r3, #0]
 800c60c:	2b01      	cmp	r3, #1
 800c60e:	d10c      	bne.n	800c62a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800c610:	8803      	ldrh	r3, [r0, #0]
 800c612:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800c616:	8842      	ldrh	r2, [r0, #2]
 800c618:	8002      	strh	r2, [r0, #0]
 800c61a:	185a      	adds	r2, r3, r1
 800c61c:	4b04      	ldr	r3, [pc, #16]	; (800c630 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800c61e:	881b      	ldrh	r3, [r3, #0]
 800c620:	1a9b      	subs	r3, r3, r2
 800c622:	8043      	strh	r3, [r0, #2]
 800c624:	88c3      	ldrh	r3, [r0, #6]
 800c626:	8083      	strh	r3, [r0, #4]
 800c628:	80c1      	strh	r1, [r0, #6]
 800c62a:	4770      	bx	lr
 800c62c:	20013500 	.word	0x20013500
 800c630:	20013504 	.word	0x20013504

0800c634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800c634:	b510      	push	{r4, lr}
 800c636:	4b07      	ldr	r3, [pc, #28]	; (800c654 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800c638:	781b      	ldrb	r3, [r3, #0]
 800c63a:	2b01      	cmp	r3, #1
 800c63c:	d108      	bne.n	800c650 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800c63e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c642:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c646:	8003      	strh	r3, [r0, #0]
 800c648:	8893      	ldrh	r3, [r2, #4]
 800c64a:	3b01      	subs	r3, #1
 800c64c:	1b1b      	subs	r3, r3, r4
 800c64e:	800b      	strh	r3, [r1, #0]
 800c650:	bd10      	pop	{r4, pc}
 800c652:	bf00      	nop
 800c654:	20013500 	.word	0x20013500

0800c658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800c658:	b510      	push	{r4, lr}
 800c65a:	4b0a      	ldr	r3, [pc, #40]	; (800c684 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800c65c:	781b      	ldrb	r3, [r3, #0]
 800c65e:	2b01      	cmp	r3, #1
 800c660:	460a      	mov	r2, r1
 800c662:	d10d      	bne.n	800c680 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800c664:	8881      	ldrh	r1, [r0, #4]
 800c666:	8803      	ldrh	r3, [r0, #0]
 800c668:	440b      	add	r3, r1
 800c66a:	4601      	mov	r1, r0
 800c66c:	3b01      	subs	r3, #1
 800c66e:	f821 3b02 	strh.w	r3, [r1], #2
 800c672:	f7ff ffdf 	bl	800c634 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800c676:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c67a:	88c2      	ldrh	r2, [r0, #6]
 800c67c:	8082      	strh	r2, [r0, #4]
 800c67e:	80c3      	strh	r3, [r0, #6]
 800c680:	bd10      	pop	{r4, pc}
 800c682:	bf00      	nop
 800c684:	20013500 	.word	0x20013500

0800c688 <_ZN8touchgfx11Application13requestRedrawEv>:
 800c688:	4b06      	ldr	r3, [pc, #24]	; (800c6a4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800c68a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c68e:	4b06      	ldr	r3, [pc, #24]	; (800c6a8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800c690:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800c694:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c698:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800c69c:	2100      	movs	r1, #0
 800c69e:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800c6a2:	4770      	bx	lr
 800c6a4:	200134fc 	.word	0x200134fc
 800c6a8:	200134fe 	.word	0x200134fe

0800c6ac <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800c6ac:	4b03      	ldr	r3, [pc, #12]	; (800c6bc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800c6ae:	6818      	ldr	r0, [r3, #0]
 800c6b0:	b110      	cbz	r0, 800c6b8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800c6b2:	6803      	ldr	r3, [r0, #0]
 800c6b4:	699b      	ldr	r3, [r3, #24]
 800c6b6:	4718      	bx	r3
 800c6b8:	4770      	bx	lr
 800c6ba:	bf00      	nop
 800c6bc:	20013544 	.word	0x20013544

0800c6c0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800c6c0:	4770      	bx	lr
	...

0800c6c4 <_ZN8touchgfx11Application4drawEv>:
 800c6c4:	b507      	push	{r0, r1, r2, lr}
 800c6c6:	4b09      	ldr	r3, [pc, #36]	; (800c6ec <_ZN8touchgfx11Application4drawEv+0x28>)
 800c6c8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c6cc:	4b08      	ldr	r3, [pc, #32]	; (800c6f0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800c6ce:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c6d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c6d6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c6da:	6803      	ldr	r3, [r0, #0]
 800c6dc:	2100      	movs	r1, #0
 800c6de:	9100      	str	r1, [sp, #0]
 800c6e0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c6e2:	4669      	mov	r1, sp
 800c6e4:	4798      	blx	r3
 800c6e6:	b003      	add	sp, #12
 800c6e8:	f85d fb04 	ldr.w	pc, [sp], #4
 800c6ec:	200134fc 	.word	0x200134fc
 800c6f0:	200134fe 	.word	0x200134fe

0800c6f4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800c6f4:	4b03      	ldr	r3, [pc, #12]	; (800c704 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800c6f6:	6818      	ldr	r0, [r3, #0]
 800c6f8:	b110      	cbz	r0, 800c700 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800c6fa:	6803      	ldr	r3, [r0, #0]
 800c6fc:	69db      	ldr	r3, [r3, #28]
 800c6fe:	4718      	bx	r3
 800c700:	4770      	bx	lr
 800c702:	bf00      	nop
 800c704:	20013544 	.word	0x20013544

0800c708 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800c708:	4b03      	ldr	r3, [pc, #12]	; (800c718 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800c70a:	6818      	ldr	r0, [r3, #0]
 800c70c:	b110      	cbz	r0, 800c714 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800c70e:	6803      	ldr	r3, [r0, #0]
 800c710:	6a1b      	ldr	r3, [r3, #32]
 800c712:	4718      	bx	r3
 800c714:	4770      	bx	lr
 800c716:	bf00      	nop
 800c718:	20013544 	.word	0x20013544

0800c71c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800c71c:	4b03      	ldr	r3, [pc, #12]	; (800c72c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800c71e:	6818      	ldr	r0, [r3, #0]
 800c720:	b110      	cbz	r0, 800c728 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800c722:	6803      	ldr	r3, [r0, #0]
 800c724:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c726:	4718      	bx	r3
 800c728:	4770      	bx	lr
 800c72a:	bf00      	nop
 800c72c:	20013544 	.word	0x20013544

0800c730 <_ZN8touchgfx11ApplicationD1Ev>:
 800c730:	4770      	bx	lr

0800c732 <_ZN8touchgfx11ApplicationD0Ev>:
 800c732:	b510      	push	{r4, lr}
 800c734:	f44f 719c 	mov.w	r1, #312	; 0x138
 800c738:	4604      	mov	r4, r0
 800c73a:	f00f f940 	bl	801b9be <_ZdlPvj>
 800c73e:	4620      	mov	r0, r4
 800c740:	bd10      	pop	{r4, pc}
	...

0800c744 <_ZN8touchgfx11Application15handleTickEventEv>:
 800c744:	b570      	push	{r4, r5, r6, lr}
 800c746:	4d38      	ldr	r5, [pc, #224]	; (800c828 <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 800c748:	4604      	mov	r4, r0
 800c74a:	6828      	ldr	r0, [r5, #0]
 800c74c:	b140      	cbz	r0, 800c760 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c74e:	7a03      	ldrb	r3, [r0, #8]
 800c750:	b933      	cbnz	r3, 800c760 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c752:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800c756:	6803      	ldr	r3, [r0, #0]
 800c758:	689b      	ldr	r3, [r3, #8]
 800c75a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c75e:	4718      	bx	r3
 800c760:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800c764:	b97b      	cbnz	r3, 800c786 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c766:	b170      	cbz	r0, 800c786 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c768:	7a03      	ldrb	r3, [r0, #8]
 800c76a:	b163      	cbz	r3, 800c786 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c76c:	4b2f      	ldr	r3, [pc, #188]	; (800c82c <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800c76e:	6818      	ldr	r0, [r3, #0]
 800c770:	b110      	cbz	r0, 800c778 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800c772:	6803      	ldr	r3, [r0, #0]
 800c774:	691b      	ldr	r3, [r3, #16]
 800c776:	4798      	blx	r3
 800c778:	6828      	ldr	r0, [r5, #0]
 800c77a:	6803      	ldr	r3, [r0, #0]
 800c77c:	68db      	ldr	r3, [r3, #12]
 800c77e:	4798      	blx	r3
 800c780:	2301      	movs	r3, #1
 800c782:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800c786:	2500      	movs	r5, #0
 800c788:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800c78c:	42a8      	cmp	r0, r5
 800c78e:	dd0c      	ble.n	800c7aa <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800c790:	1963      	adds	r3, r4, r5
 800c792:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800c796:	b132      	cbz	r2, 800c7a6 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800c798:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800c79c:	4413      	add	r3, r2
 800c79e:	6858      	ldr	r0, [r3, #4]
 800c7a0:	6803      	ldr	r3, [r0, #0]
 800c7a2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c7a4:	4798      	blx	r3
 800c7a6:	3501      	adds	r5, #1
 800c7a8:	e7ee      	b.n	800c788 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800c7aa:	2300      	movs	r3, #0
 800c7ac:	461a      	mov	r2, r3
 800c7ae:	4298      	cmp	r0, r3
 800c7b0:	d10f      	bne.n	800c7d2 <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 800c7b2:	1d25      	adds	r5, r4, #4
 800c7b4:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800c7b8:	4291      	cmp	r1, r2
 800c7ba:	dd2d      	ble.n	800c818 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 800c7bc:	1e48      	subs	r0, r1, #1
 800c7be:	b280      	uxth	r0, r0
 800c7c0:	4288      	cmp	r0, r1
 800c7c2:	d31a      	bcc.n	800c7fa <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800c7c4:	4b1a      	ldr	r3, [pc, #104]	; (800c830 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 800c7c6:	4a1b      	ldr	r2, [pc, #108]	; (800c834 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800c7c8:	481b      	ldr	r0, [pc, #108]	; (800c838 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800c7ca:	f240 11a9 	movw	r1, #425	; 0x1a9
 800c7ce:	f00f f925 	bl	801ba1c <__assert_func>
 800c7d2:	18e1      	adds	r1, r4, r3
 800c7d4:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800c7d8:	b16d      	cbz	r5, 800c7f6 <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 800c7da:	429a      	cmp	r2, r3
 800c7dc:	d00a      	beq.n	800c7f4 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 800c7de:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800c7e2:	4431      	add	r1, r6
 800c7e4:	684e      	ldr	r6, [r1, #4]
 800c7e6:	b291      	uxth	r1, r2
 800c7e8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800c7ec:	604e      	str	r6, [r1, #4]
 800c7ee:	18a1      	adds	r1, r4, r2
 800c7f0:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800c7f4:	3201      	adds	r2, #1
 800c7f6:	3301      	adds	r3, #1
 800c7f8:	e7d9      	b.n	800c7ae <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800c7fa:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800c7fe:	3304      	adds	r3, #4
 800c800:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800c804:	428b      	cmp	r3, r1
 800c806:	d004      	beq.n	800c812 <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 800c808:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800c80c:	f843 6c04 	str.w	r6, [r3, #-4]
 800c810:	e7f8      	b.n	800c804 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800c812:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800c816:	e7cd      	b.n	800c7b4 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800c818:	4b04      	ldr	r3, [pc, #16]	; (800c82c <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800c81a:	6818      	ldr	r0, [r3, #0]
 800c81c:	b110      	cbz	r0, 800c824 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800c81e:	6803      	ldr	r3, [r0, #0]
 800c820:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c822:	e79a      	b.n	800c75a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800c824:	bd70      	pop	{r4, r5, r6, pc}
 800c826:	bf00      	nop
 800c828:	20013548 	.word	0x20013548
 800c82c:	20013544 	.word	0x20013544
 800c830:	0801f6a4 	.word	0x0801f6a4
 800c834:	0801f838 	.word	0x0801f838
 800c838:	0801e3e8 	.word	0x0801e3e8

0800c83c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800c83c:	b570      	push	{r4, r5, r6, lr}
 800c83e:	4606      	mov	r6, r0
 800c840:	460c      	mov	r4, r1
 800c842:	b929      	cbnz	r1, 800c850 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800c844:	4b0c      	ldr	r3, [pc, #48]	; (800c878 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800c846:	4a0d      	ldr	r2, [pc, #52]	; (800c87c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800c848:	480d      	ldr	r0, [pc, #52]	; (800c880 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800c84a:	2167      	movs	r1, #103	; 0x67
 800c84c:	f00f f8e6 	bl	801ba1c <__assert_func>
 800c850:	4d0c      	ldr	r5, [pc, #48]	; (800c884 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800c852:	2300      	movs	r3, #0
 800c854:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800c858:	6828      	ldr	r0, [r5, #0]
 800c85a:	b110      	cbz	r0, 800c862 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800c85c:	6803      	ldr	r3, [r0, #0]
 800c85e:	695b      	ldr	r3, [r3, #20]
 800c860:	4798      	blx	r3
 800c862:	602c      	str	r4, [r5, #0]
 800c864:	6823      	ldr	r3, [r4, #0]
 800c866:	4620      	mov	r0, r4
 800c868:	68db      	ldr	r3, [r3, #12]
 800c86a:	4798      	blx	r3
 800c86c:	6833      	ldr	r3, [r6, #0]
 800c86e:	4630      	mov	r0, r6
 800c870:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c872:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c876:	4718      	bx	r3
 800c878:	0801f670 	.word	0x0801f670
 800c87c:	0801f6f8 	.word	0x0801f6f8
 800c880:	0801f67a 	.word	0x0801f67a
 800c884:	20013544 	.word	0x20013544

0800c888 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800c888:	b510      	push	{r4, lr}
 800c88a:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c88e:	888a      	ldrh	r2, [r1, #4]
 800c890:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c894:	4422      	add	r2, r4
 800c896:	b212      	sxth	r2, r2
 800c898:	4293      	cmp	r3, r2
 800c89a:	da15      	bge.n	800c8c8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c89c:	8882      	ldrh	r2, [r0, #4]
 800c89e:	4413      	add	r3, r2
 800c8a0:	b21b      	sxth	r3, r3
 800c8a2:	429c      	cmp	r4, r3
 800c8a4:	da10      	bge.n	800c8c8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c8a6:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800c8aa:	88c9      	ldrh	r1, [r1, #6]
 800c8ac:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c8b0:	4419      	add	r1, r3
 800c8b2:	b209      	sxth	r1, r1
 800c8b4:	428a      	cmp	r2, r1
 800c8b6:	da07      	bge.n	800c8c8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c8b8:	88c0      	ldrh	r0, [r0, #6]
 800c8ba:	4410      	add	r0, r2
 800c8bc:	b200      	sxth	r0, r0
 800c8be:	4283      	cmp	r3, r0
 800c8c0:	bfac      	ite	ge
 800c8c2:	2000      	movge	r0, #0
 800c8c4:	2001      	movlt	r0, #1
 800c8c6:	bd10      	pop	{r4, pc}
 800c8c8:	2000      	movs	r0, #0
 800c8ca:	e7fc      	b.n	800c8c6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800c8cc <_ZNK8touchgfx4Rect8includesERKS0_>:
 800c8cc:	b570      	push	{r4, r5, r6, lr}
 800c8ce:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c8d2:	f9b0 5000 	ldrsh.w	r5, [r0]
 800c8d6:	42ac      	cmp	r4, r5
 800c8d8:	db18      	blt.n	800c90c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c8da:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800c8de:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800c8e2:	429a      	cmp	r2, r3
 800c8e4:	db12      	blt.n	800c90c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c8e6:	8886      	ldrh	r6, [r0, #4]
 800c8e8:	4435      	add	r5, r6
 800c8ea:	888e      	ldrh	r6, [r1, #4]
 800c8ec:	4434      	add	r4, r6
 800c8ee:	b22d      	sxth	r5, r5
 800c8f0:	b224      	sxth	r4, r4
 800c8f2:	42a5      	cmp	r5, r4
 800c8f4:	db0a      	blt.n	800c90c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c8f6:	88c0      	ldrh	r0, [r0, #6]
 800c8f8:	4418      	add	r0, r3
 800c8fa:	88cb      	ldrh	r3, [r1, #6]
 800c8fc:	441a      	add	r2, r3
 800c8fe:	b200      	sxth	r0, r0
 800c900:	b212      	sxth	r2, r2
 800c902:	4290      	cmp	r0, r2
 800c904:	bfb4      	ite	lt
 800c906:	2000      	movlt	r0, #0
 800c908:	2001      	movge	r0, #1
 800c90a:	bd70      	pop	{r4, r5, r6, pc}
 800c90c:	2000      	movs	r0, #0
 800c90e:	e7fc      	b.n	800c90a <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800c910 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c910:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c912:	4604      	mov	r4, r0
 800c914:	4608      	mov	r0, r1
 800c916:	460d      	mov	r5, r1
 800c918:	f7fc ff81 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 800c91c:	b978      	cbnz	r0, 800c93e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c91e:	4620      	mov	r0, r4
 800c920:	f7fc ff7d 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 800c924:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c928:	b150      	cbz	r0, 800c940 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c92a:	8026      	strh	r6, [r4, #0]
 800c92c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c930:	8063      	strh	r3, [r4, #2]
 800c932:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c936:	80a3      	strh	r3, [r4, #4]
 800c938:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c93c:	80e3      	strh	r3, [r4, #6]
 800c93e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c940:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c944:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c948:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c94c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c950:	88ed      	ldrh	r5, [r5, #6]
 800c952:	42b1      	cmp	r1, r6
 800c954:	460f      	mov	r7, r1
 800c956:	bfa8      	it	ge
 800c958:	4637      	movge	r7, r6
 800c95a:	4293      	cmp	r3, r2
 800c95c:	4618      	mov	r0, r3
 800c95e:	4466      	add	r6, ip
 800c960:	bfa8      	it	ge
 800c962:	4610      	movge	r0, r2
 800c964:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c968:	8027      	strh	r7, [r4, #0]
 800c96a:	442a      	add	r2, r5
 800c96c:	88e5      	ldrh	r5, [r4, #6]
 800c96e:	8060      	strh	r0, [r4, #2]
 800c970:	4461      	add	r1, ip
 800c972:	442b      	add	r3, r5
 800c974:	b236      	sxth	r6, r6
 800c976:	b209      	sxth	r1, r1
 800c978:	b212      	sxth	r2, r2
 800c97a:	b21b      	sxth	r3, r3
 800c97c:	428e      	cmp	r6, r1
 800c97e:	bfac      	ite	ge
 800c980:	ebc7 0106 	rsbge	r1, r7, r6
 800c984:	ebc7 0101 	rsblt	r1, r7, r1
 800c988:	429a      	cmp	r2, r3
 800c98a:	bfac      	ite	ge
 800c98c:	ebc0 0202 	rsbge	r2, r0, r2
 800c990:	ebc0 0203 	rsblt	r2, r0, r3
 800c994:	80a1      	strh	r1, [r4, #4]
 800c996:	80e2      	strh	r2, [r4, #6]
 800c998:	e7d1      	b.n	800c93e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800c99c <_ZN8touchgfx11Application11getInstanceEv>:
 800c99c:	4b01      	ldr	r3, [pc, #4]	; (800c9a4 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800c99e:	6818      	ldr	r0, [r3, #0]
 800c9a0:	4770      	bx	lr
 800c9a2:	bf00      	nop
 800c9a4:	20013554 	.word	0x20013554

0800c9a8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800c9a8:	2300      	movs	r3, #0
 800c9aa:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800c9ae:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800c9b2:	30a8      	adds	r0, #168	; 0xa8
 800c9b4:	f802 3b01 	strb.w	r3, [r2], #1
 800c9b8:	4282      	cmp	r2, r0
 800c9ba:	d1fb      	bne.n	800c9b4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800c9bc:	4770      	bx	lr

0800c9be <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800c9be:	4603      	mov	r3, r0
 800c9c0:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800c9c4:	2200      	movs	r2, #0
 800c9c6:	801a      	strh	r2, [r3, #0]
 800c9c8:	805a      	strh	r2, [r3, #2]
 800c9ca:	809a      	strh	r2, [r3, #4]
 800c9cc:	80da      	strh	r2, [r3, #6]
 800c9ce:	3308      	adds	r3, #8
 800c9d0:	428b      	cmp	r3, r1
 800c9d2:	d1f8      	bne.n	800c9c6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800c9d4:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c9d8:	4770      	bx	lr
	...

0800c9dc <_ZN8touchgfx11ApplicationC1Ev>:
 800c9dc:	b570      	push	{r4, r5, r6, lr}
 800c9de:	4b1a      	ldr	r3, [pc, #104]	; (800ca48 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800c9e0:	6003      	str	r3, [r0, #0]
 800c9e2:	2500      	movs	r5, #0
 800c9e4:	4604      	mov	r4, r0
 800c9e6:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800c9ea:	30a8      	adds	r0, #168	; 0xa8
 800c9ec:	f7ff ffe7 	bl	800c9be <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c9f0:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800c9f4:	f7ff ffe3 	bl	800c9be <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c9f8:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800c9fc:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800ca00:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800ca04:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800ca08:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800ca0c:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800ca10:	490e      	ldr	r1, [pc, #56]	; (800ca4c <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800ca12:	480f      	ldr	r0, [pc, #60]	; (800ca50 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800ca14:	4e0f      	ldr	r6, [pc, #60]	; (800ca54 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800ca16:	f00e fec5 	bl	801b7a4 <CRC_Lock>
 800ca1a:	4b0f      	ldr	r3, [pc, #60]	; (800ca58 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800ca1c:	b158      	cbz	r0, 800ca36 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800ca1e:	801d      	strh	r5, [r3, #0]
 800ca20:	4a0e      	ldr	r2, [pc, #56]	; (800ca5c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800ca22:	2300      	movs	r3, #0
 800ca24:	6013      	str	r3, [r2, #0]
 800ca26:	4a0e      	ldr	r2, [pc, #56]	; (800ca60 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800ca28:	6033      	str	r3, [r6, #0]
 800ca2a:	4620      	mov	r0, r4
 800ca2c:	6013      	str	r3, [r2, #0]
 800ca2e:	f7ff ffbb 	bl	800c9a8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800ca32:	4620      	mov	r0, r4
 800ca34:	bd70      	pop	{r4, r5, r6, pc}
 800ca36:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ca3a:	2002      	movs	r0, #2
 800ca3c:	801a      	strh	r2, [r3, #0]
 800ca3e:	6030      	str	r0, [r6, #0]
 800ca40:	f001 fa04 	bl	800de4c <_ZN8touchgfx6Screen4drawEv>
 800ca44:	e7ec      	b.n	800ca20 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800ca46:	bf00      	nop
 800ca48:	0801f6bc 	.word	0x0801f6bc
 800ca4c:	b5e8b5cd 	.word	0xb5e8b5cd
 800ca50:	f407a5c2 	.word	0xf407a5c2
 800ca54:	20013544 	.word	0x20013544
 800ca58:	20000084 	.word	0x20000084
 800ca5c:	20013554 	.word	0x20013554
 800ca60:	20013548 	.word	0x20013548

0800ca64 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800ca64:	b510      	push	{r4, lr}
 800ca66:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800ca6a:	428b      	cmp	r3, r1
 800ca6c:	d806      	bhi.n	800ca7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 800ca6e:	4b0b      	ldr	r3, [pc, #44]	; (800ca9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 800ca70:	4a0b      	ldr	r2, [pc, #44]	; (800caa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 800ca72:	480c      	ldr	r0, [pc, #48]	; (800caa4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 800ca74:	f44f 71de 	mov.w	r1, #444	; 0x1bc
 800ca78:	f00e ffd0 	bl	801ba1c <__assert_func>
 800ca7c:	3b01      	subs	r3, #1
 800ca7e:	b29b      	uxth	r3, r3
 800ca80:	428b      	cmp	r3, r1
 800ca82:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800ca86:	d908      	bls.n	800ca9a <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 800ca88:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800ca8c:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800ca90:	681a      	ldr	r2, [r3, #0]
 800ca92:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800ca96:	685a      	ldr	r2, [r3, #4]
 800ca98:	6062      	str	r2, [r4, #4]
 800ca9a:	bd10      	pop	{r4, pc}
 800ca9c:	0801f6a4 	.word	0x0801f6a4
 800caa0:	0801f73c 	.word	0x0801f73c
 800caa4:	0801e3e8 	.word	0x0801e3e8

0800caa8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800caa8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800caaa:	466b      	mov	r3, sp
 800caac:	e883 0006 	stmia.w	r3, {r1, r2}
 800cab0:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800cab4:	2a07      	cmp	r2, #7
 800cab6:	4604      	mov	r4, r0
 800cab8:	d906      	bls.n	800cac8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800caba:	4b09      	ldr	r3, [pc, #36]	; (800cae0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800cabc:	4a09      	ldr	r2, [pc, #36]	; (800cae4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800cabe:	480a      	ldr	r0, [pc, #40]	; (800cae8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800cac0:	f44f 71c1 	mov.w	r1, #386	; 0x182
 800cac4:	f00e ffaa 	bl	801ba1c <__assert_func>
 800cac8:	1c51      	adds	r1, r2, #1
 800caca:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800cace:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800cad2:	cb03      	ldmia	r3!, {r0, r1}
 800cad4:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800cad8:	6069      	str	r1, [r5, #4]
 800cada:	b003      	add	sp, #12
 800cadc:	bd30      	pop	{r4, r5, pc}
 800cade:	bf00      	nop
 800cae0:	0801e333 	.word	0x0801e333
 800cae4:	0801f7d2 	.word	0x0801f7d2
 800cae8:	0801e3e8 	.word	0x0801e3e8

0800caec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800caec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800caf0:	b08d      	sub	sp, #52	; 0x34
 800caf2:	ac08      	add	r4, sp, #32
 800caf4:	4683      	mov	fp, r0
 800caf6:	4620      	mov	r0, r4
 800caf8:	e884 0006 	stmia.w	r4, {r1, r2}
 800cafc:	f7fc fe8f 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 800cb00:	2800      	cmp	r0, #0
 800cb02:	d16a      	bne.n	800cbda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800cb04:	9402      	str	r4, [sp, #8]
 800cb06:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800cb0a:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800cb0e:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800cb12:	2400      	movs	r4, #0
 800cb14:	9301      	str	r3, [sp, #4]
 800cb16:	36a0      	adds	r6, #160	; 0xa0
 800cb18:	42a5      	cmp	r5, r4
 800cb1a:	d00d      	beq.n	800cb38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 800cb1c:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800cb20:	9802      	ldr	r0, [sp, #8]
 800cb22:	f7ff fed3 	bl	800c8cc <_ZNK8touchgfx4Rect8includesERKS0_>
 800cb26:	b128      	cbz	r0, 800cb34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800cb28:	1e69      	subs	r1, r5, #1
 800cb2a:	1b09      	subs	r1, r1, r4
 800cb2c:	b289      	uxth	r1, r1
 800cb2e:	9801      	ldr	r0, [sp, #4]
 800cb30:	f7ff ff98 	bl	800ca64 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cb34:	3401      	adds	r4, #1
 800cb36:	e7ef      	b.n	800cb18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800cb38:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800cb3c:	9703      	str	r7, [sp, #12]
 800cb3e:	1e7b      	subs	r3, r7, #1
 800cb40:	9300      	str	r3, [sp, #0]
 800cb42:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800cb46:	2400      	movs	r4, #0
 800cb48:	4655      	mov	r5, sl
 800cb4a:	9704      	str	r7, [sp, #16]
 800cb4c:	4626      	mov	r6, r4
 800cb4e:	9b04      	ldr	r3, [sp, #16]
 800cb50:	2b00      	cmp	r3, #0
 800cb52:	d078      	beq.n	800cc46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 800cb54:	9902      	ldr	r1, [sp, #8]
 800cb56:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800cb5a:	f7ff fe95 	bl	800c888 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cb5e:	b360      	cbz	r0, 800cbba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800cb60:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800cb64:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800cb68:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800cb6c:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800cb70:	45e6      	cmp	lr, ip
 800cb72:	db35      	blt.n	800cbe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800cb74:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800cb78:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800cb7c:	4472      	add	r2, lr
 800cb7e:	4463      	add	r3, ip
 800cb80:	b212      	sxth	r2, r2
 800cb82:	b21b      	sxth	r3, r3
 800cb84:	429a      	cmp	r2, r3
 800cb86:	dc2b      	bgt.n	800cbe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800cb88:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800cb8c:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800cb90:	fa1f f288 	uxth.w	r2, r8
 800cb94:	4413      	add	r3, r2
 800cb96:	b29b      	uxth	r3, r3
 800cb98:	45c1      	cmp	r9, r8
 800cb9a:	fa0f fe83 	sxth.w	lr, r3
 800cb9e:	fa1f fc89 	uxth.w	ip, r9
 800cba2:	db0f      	blt.n	800cbc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 800cba4:	eba3 030c 	sub.w	r3, r3, ip
 800cba8:	1ac9      	subs	r1, r1, r3
 800cbaa:	b209      	sxth	r1, r1
 800cbac:	2900      	cmp	r1, #0
 800cbae:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800cbb2:	dd12      	ble.n	800cbda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800cbb4:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800cbb8:	4604      	mov	r4, r0
 800cbba:	9b04      	ldr	r3, [sp, #16]
 800cbbc:	3b01      	subs	r3, #1
 800cbbe:	9304      	str	r3, [sp, #16]
 800cbc0:	3d08      	subs	r5, #8
 800cbc2:	e7c4      	b.n	800cb4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800cbc4:	4461      	add	r1, ip
 800cbc6:	b209      	sxth	r1, r1
 800cbc8:	4571      	cmp	r1, lr
 800cbca:	dc3a      	bgt.n	800cc42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800cbcc:	eba2 020c 	sub.w	r2, r2, ip
 800cbd0:	b212      	sxth	r2, r2
 800cbd2:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800cbd6:	2a00      	cmp	r2, #0
 800cbd8:	dcee      	bgt.n	800cbb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800cbda:	b00d      	add	sp, #52	; 0x34
 800cbdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cbe0:	45c1      	cmp	r9, r8
 800cbe2:	db2e      	blt.n	800cc42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800cbe4:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800cbe8:	4499      	add	r9, r3
 800cbea:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800cbee:	4498      	add	r8, r3
 800cbf0:	fa0f f989 	sxth.w	r9, r9
 800cbf4:	fa0f f888 	sxth.w	r8, r8
 800cbf8:	45c1      	cmp	r9, r8
 800cbfa:	dc22      	bgt.n	800cc42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800cbfc:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800cc00:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800cc04:	fa1f f28c 	uxth.w	r2, ip
 800cc08:	4413      	add	r3, r2
 800cc0a:	b29b      	uxth	r3, r3
 800cc0c:	45e6      	cmp	lr, ip
 800cc0e:	fa1f f88e 	uxth.w	r8, lr
 800cc12:	fa0f f983 	sxth.w	r9, r3
 800cc16:	db0a      	blt.n	800cc2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 800cc18:	eba3 0308 	sub.w	r3, r3, r8
 800cc1c:	1ac9      	subs	r1, r1, r3
 800cc1e:	b209      	sxth	r1, r1
 800cc20:	2900      	cmp	r1, #0
 800cc22:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800cc26:	ddd8      	ble.n	800cbda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800cc28:	f8ad 9020 	strh.w	r9, [sp, #32]
 800cc2c:	e7c4      	b.n	800cbb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800cc2e:	4441      	add	r1, r8
 800cc30:	b209      	sxth	r1, r1
 800cc32:	4549      	cmp	r1, r9
 800cc34:	dc05      	bgt.n	800cc42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800cc36:	eba2 0208 	sub.w	r2, r2, r8
 800cc3a:	b212      	sxth	r2, r2
 800cc3c:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800cc40:	e7c9      	b.n	800cbd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800cc42:	4606      	mov	r6, r0
 800cc44:	e7b9      	b.n	800cbba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800cc46:	2c00      	cmp	r4, #0
 800cc48:	f47f af7d 	bne.w	800cb46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800cc4c:	2e00      	cmp	r6, #0
 800cc4e:	f000 81dd 	beq.w	800d00c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800cc52:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800cc56:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800cc5a:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800cc5e:	b2b9      	uxth	r1, r7
 800cc60:	9104      	str	r1, [sp, #16]
 800cc62:	9804      	ldr	r0, [sp, #16]
 800cc64:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800cc68:	4401      	add	r1, r0
 800cc6a:	b2b3      	uxth	r3, r6
 800cc6c:	b289      	uxth	r1, r1
 800cc6e:	441a      	add	r2, r3
 800cc70:	9105      	str	r1, [sp, #20]
 800cc72:	b292      	uxth	r2, r2
 800cc74:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800cc78:	fa0f f882 	sxth.w	r8, r2
 800cc7c:	4655      	mov	r5, sl
 800cc7e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800cc82:	9b03      	ldr	r3, [sp, #12]
 800cc84:	2b00      	cmp	r3, #0
 800cc86:	d054      	beq.n	800cd32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800cc88:	9902      	ldr	r1, [sp, #8]
 800cc8a:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800cc8e:	f7ff fdfb 	bl	800c888 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cc92:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cc96:	b1d8      	cbz	r0, 800ccd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800cc98:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800cc9c:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800cca0:	4576      	cmp	r6, lr
 800cca2:	dc26      	bgt.n	800ccf2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800cca4:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800cca8:	44f4      	add	ip, lr
 800ccaa:	fa0f fc8c 	sxth.w	ip, ip
 800ccae:	45e0      	cmp	r8, ip
 800ccb0:	db1f      	blt.n	800ccf2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800ccb2:	428f      	cmp	r7, r1
 800ccb4:	fa1f fc81 	uxth.w	ip, r1
 800ccb8:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800ccbc:	dc0f      	bgt.n	800ccde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800ccbe:	9805      	ldr	r0, [sp, #20]
 800ccc0:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800ccc4:	eba0 0c0c 	sub.w	ip, r0, ip
 800ccc8:	eba1 010c 	sub.w	r1, r1, ip
 800cccc:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800ccd0:	4620      	mov	r0, r4
 800ccd2:	9903      	ldr	r1, [sp, #12]
 800ccd4:	3901      	subs	r1, #1
 800ccd6:	9103      	str	r1, [sp, #12]
 800ccd8:	3d08      	subs	r5, #8
 800ccda:	4604      	mov	r4, r0
 800ccdc:	e7cf      	b.n	800cc7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 800ccde:	4461      	add	r1, ip
 800cce0:	b209      	sxth	r1, r1
 800cce2:	4549      	cmp	r1, r9
 800cce4:	dcf5      	bgt.n	800ccd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800cce6:	9904      	ldr	r1, [sp, #16]
 800cce8:	eba1 0c0c 	sub.w	ip, r1, ip
 800ccec:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800ccf0:	e7ee      	b.n	800ccd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800ccf2:	428f      	cmp	r7, r1
 800ccf4:	dced      	bgt.n	800ccd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800ccf6:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800ccfa:	4461      	add	r1, ip
 800ccfc:	b209      	sxth	r1, r1
 800ccfe:	4589      	cmp	r9, r1
 800cd00:	dbe7      	blt.n	800ccd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800cd02:	4576      	cmp	r6, lr
 800cd04:	fa1f fc8e 	uxth.w	ip, lr
 800cd08:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800cd0c:	dc08      	bgt.n	800cd20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 800cd0e:	eba2 0c0c 	sub.w	ip, r2, ip
 800cd12:	eba1 010c 	sub.w	r1, r1, ip
 800cd16:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800cd1a:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800cd1e:	e7d7      	b.n	800ccd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800cd20:	4461      	add	r1, ip
 800cd22:	b209      	sxth	r1, r1
 800cd24:	4588      	cmp	r8, r1
 800cd26:	dbd4      	blt.n	800ccd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800cd28:	eba3 0c0c 	sub.w	ip, r3, ip
 800cd2c:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800cd30:	e7ce      	b.n	800ccd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800cd32:	2c00      	cmp	r4, #0
 800cd34:	f000 816a 	beq.w	800d00c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800cd38:	9b00      	ldr	r3, [sp, #0]
 800cd3a:	3301      	adds	r3, #1
 800cd3c:	f000 8166 	beq.w	800d00c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800cd40:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800cd44:	4621      	mov	r1, r4
 800cd46:	9802      	ldr	r0, [sp, #8]
 800cd48:	f7ff fdc0 	bl	800c8cc <_ZNK8touchgfx4Rect8includesERKS0_>
 800cd4c:	b120      	cbz	r0, 800cd58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 800cd4e:	f8bd 1000 	ldrh.w	r1, [sp]
 800cd52:	9801      	ldr	r0, [sp, #4]
 800cd54:	f7ff fe86 	bl	800ca64 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cd58:	9902      	ldr	r1, [sp, #8]
 800cd5a:	4620      	mov	r0, r4
 800cd5c:	f7ff fd94 	bl	800c888 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cd60:	2800      	cmp	r0, #0
 800cd62:	f000 809b 	beq.w	800ce9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 800cd66:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800cd6a:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800cd6e:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800cd72:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800cd76:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800cd7a:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800cd7e:	fa1f f288 	uxth.w	r2, r8
 800cd82:	19d5      	adds	r5, r2, r7
 800cd84:	fa1f f985 	uxth.w	r9, r5
 800cd88:	fa0f f589 	sxth.w	r5, r9
 800cd8c:	b2a1      	uxth	r1, r4
 800cd8e:	440b      	add	r3, r1
 800cd90:	9503      	str	r5, [sp, #12]
 800cd92:	45a0      	cmp	r8, r4
 800cd94:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800cd98:	9507      	str	r5, [sp, #28]
 800cd9a:	b29b      	uxth	r3, r3
 800cd9c:	f340 809d 	ble.w	800ceda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800cda0:	1a52      	subs	r2, r2, r1
 800cda2:	b292      	uxth	r2, r2
 800cda4:	4584      	cmp	ip, r0
 800cda6:	fa0f fe83 	sxth.w	lr, r3
 800cdaa:	b215      	sxth	r5, r2
 800cdac:	dd2f      	ble.n	800ce0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800cdae:	9e00      	ldr	r6, [sp, #0]
 800cdb0:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800cdb4:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800cdb8:	9e03      	ldr	r6, [sp, #12]
 800cdba:	eba6 060e 	sub.w	r6, r6, lr
 800cdbe:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800cdc2:	fa1f fc8c 	uxth.w	ip, ip
 800cdc6:	b280      	uxth	r0, r0
 800cdc8:	ebac 0300 	sub.w	r3, ip, r0
 800cdcc:	448c      	add	ip, r1
 800cdce:	4470      	add	r0, lr
 800cdd0:	b29b      	uxth	r3, r3
 800cdd2:	fa0f fc8c 	sxth.w	ip, ip
 800cdd6:	b200      	sxth	r0, r0
 800cdd8:	b21c      	sxth	r4, r3
 800cdda:	ebac 0000 	sub.w	r0, ip, r0
 800cdde:	4366      	muls	r6, r4
 800cde0:	4368      	muls	r0, r5
 800cde2:	4286      	cmp	r6, r0
 800cde4:	db09      	blt.n	800cdfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 800cde6:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800cdea:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800cdee:	4417      	add	r7, r2
 800cdf0:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cdf4:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800cdf8:	e685      	b.n	800cb06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cdfa:	440b      	add	r3, r1
 800cdfc:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ce00:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800ce04:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800ce08:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ce0c:	e67b      	b.n	800cb06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800ce0e:	9e03      	ldr	r6, [sp, #12]
 800ce10:	45b6      	cmp	lr, r6
 800ce12:	da28      	bge.n	800ce66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 800ce14:	9b00      	ldr	r3, [sp, #0]
 800ce16:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800ce1a:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800ce1e:	eb04 030c 	add.w	r3, r4, ip
 800ce22:	fa1f f883 	uxth.w	r8, r3
 800ce26:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800ce2a:	4403      	add	r3, r0
 800ce2c:	eba3 0308 	sub.w	r3, r3, r8
 800ce30:	b29b      	uxth	r3, r3
 800ce32:	fa0f f988 	sxth.w	r9, r8
 800ce36:	eba0 000c 	sub.w	r0, r0, ip
 800ce3a:	fa0f f883 	sxth.w	r8, r3
 800ce3e:	eba6 060e 	sub.w	r6, r6, lr
 800ce42:	4368      	muls	r0, r5
 800ce44:	fb08 f606 	mul.w	r6, r8, r6
 800ce48:	42b0      	cmp	r0, r6
 800ce4a:	dc06      	bgt.n	800ce5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 800ce4c:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800ce50:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800ce54:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800ce58:	e7c9      	b.n	800cdee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 800ce5a:	4423      	add	r3, r4
 800ce5c:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800ce60:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ce64:	e64f      	b.n	800cb06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800ce66:	9807      	ldr	r0, [sp, #28]
 800ce68:	eba3 0309 	sub.w	r3, r3, r9
 800ce6c:	b29b      	uxth	r3, r3
 800ce6e:	2806      	cmp	r0, #6
 800ce70:	fa0f fc83 	sxth.w	ip, r3
 800ce74:	d818      	bhi.n	800cea8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 800ce76:	4652      	mov	r2, sl
 800ce78:	ab0a      	add	r3, sp, #40	; 0x28
 800ce7a:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800ce7e:	6851      	ldr	r1, [r2, #4]
 800ce80:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800ce84:	c303      	stmia	r3!, {r0, r1}
 800ce86:	9b03      	ldr	r3, [sp, #12]
 800ce88:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800ce8c:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800ce90:	ab0a      	add	r3, sp, #40	; 0x28
 800ce92:	e893 0006 	ldmia.w	r3, {r1, r2}
 800ce96:	9801      	ldr	r0, [sp, #4]
 800ce98:	f7ff fe06 	bl	800caa8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800ce9c:	9b00      	ldr	r3, [sp, #0]
 800ce9e:	3b01      	subs	r3, #1
 800cea0:	9300      	str	r3, [sp, #0]
 800cea2:	f1aa 0a08 	sub.w	sl, sl, #8
 800cea6:	e747      	b.n	800cd38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800cea8:	9800      	ldr	r0, [sp, #0]
 800ceaa:	45ac      	cmp	ip, r5
 800ceac:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800ceb0:	db0c      	blt.n	800cecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 800ceb2:	4417      	add	r7, r2
 800ceb4:	b2bf      	uxth	r7, r7
 800ceb6:	4458      	add	r0, fp
 800ceb8:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800cebc:	440f      	add	r7, r1
 800cebe:	f8ad 4020 	strh.w	r4, [sp, #32]
 800cec2:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800cec6:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800ceca:	e61c      	b.n	800cb06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cecc:	4458      	add	r0, fp
 800cece:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800ced2:	443b      	add	r3, r7
 800ced4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800ced8:	e615      	b.n	800cb06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800ceda:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800cede:	fa1f f18c 	uxth.w	r1, ip
 800cee2:	eb01 0e05 	add.w	lr, r1, r5
 800cee6:	b282      	uxth	r2, r0
 800cee8:	fa1f fe8e 	uxth.w	lr, lr
 800ceec:	9204      	str	r2, [sp, #16]
 800ceee:	fa0f f28e 	sxth.w	r2, lr
 800cef2:	9205      	str	r2, [sp, #20]
 800cef4:	9e04      	ldr	r6, [sp, #16]
 800cef6:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800cefa:	4432      	add	r2, r6
 800cefc:	b292      	uxth	r2, r2
 800cefe:	4584      	cmp	ip, r0
 800cf00:	9206      	str	r2, [sp, #24]
 800cf02:	da26      	bge.n	800cf52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800cf04:	eba3 0309 	sub.w	r3, r3, r9
 800cf08:	eba2 020e 	sub.w	r2, r2, lr
 800cf0c:	b29b      	uxth	r3, r3
 800cf0e:	b292      	uxth	r2, r2
 800cf10:	fa0f fa83 	sxth.w	sl, r3
 800cf14:	b211      	sxth	r1, r2
 800cf16:	eba0 000c 	sub.w	r0, r0, ip
 800cf1a:	eba4 0408 	sub.w	r4, r4, r8
 800cf1e:	fb0a f000 	mul.w	r0, sl, r0
 800cf22:	434c      	muls	r4, r1
 800cf24:	42a0      	cmp	r0, r4
 800cf26:	9800      	ldr	r0, [sp, #0]
 800cf28:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800cf2c:	dc06      	bgt.n	800cf3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 800cf2e:	4458      	add	r0, fp
 800cf30:	9a05      	ldr	r2, [sp, #20]
 800cf32:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800cf36:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800cf3a:	e7ca      	b.n	800ced2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800cf3c:	eb0b 0300 	add.w	r3, fp, r0
 800cf40:	9903      	ldr	r1, [sp, #12]
 800cf42:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800cf46:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800cf4a:	442a      	add	r2, r5
 800cf4c:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800cf50:	e5d9      	b.n	800cb06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cf52:	9e04      	ldr	r6, [sp, #16]
 800cf54:	9a03      	ldr	r2, [sp, #12]
 800cf56:	1b89      	subs	r1, r1, r6
 800cf58:	b21e      	sxth	r6, r3
 800cf5a:	b289      	uxth	r1, r1
 800cf5c:	4296      	cmp	r6, r2
 800cf5e:	fa0f fc81 	sxth.w	ip, r1
 800cf62:	dd26      	ble.n	800cfb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 800cf64:	eba3 0309 	sub.w	r3, r3, r9
 800cf68:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800cf6c:	9e05      	ldr	r6, [sp, #20]
 800cf6e:	b29b      	uxth	r3, r3
 800cf70:	eba6 0902 	sub.w	r9, r6, r2
 800cf74:	b218      	sxth	r0, r3
 800cf76:	eba4 0408 	sub.w	r4, r4, r8
 800cf7a:	fb0c f404 	mul.w	r4, ip, r4
 800cf7e:	fb00 f909 	mul.w	r9, r0, r9
 800cf82:	9a00      	ldr	r2, [sp, #0]
 800cf84:	454c      	cmp	r4, r9
 800cf86:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800cf8a:	db03      	blt.n	800cf94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 800cf8c:	445a      	add	r2, fp
 800cf8e:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800cf92:	e79e      	b.n	800ced2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800cf94:	eb0b 0302 	add.w	r3, fp, r2
 800cf98:	9a03      	ldr	r2, [sp, #12]
 800cf9a:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800cf9e:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800cfa2:	4429      	add	r1, r5
 800cfa4:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800cfa8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cfac:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800cfb0:	e5a9      	b.n	800cb06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cfb2:	9b06      	ldr	r3, [sp, #24]
 800cfb4:	9c07      	ldr	r4, [sp, #28]
 800cfb6:	eba3 020e 	sub.w	r2, r3, lr
 800cfba:	b292      	uxth	r2, r2
 800cfbc:	2c06      	cmp	r4, #6
 800cfbe:	b213      	sxth	r3, r2
 800cfc0:	d80d      	bhi.n	800cfde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 800cfc2:	4651      	mov	r1, sl
 800cfc4:	aa0a      	add	r2, sp, #40	; 0x28
 800cfc6:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800cfca:	6849      	ldr	r1, [r1, #4]
 800cfcc:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800cfd0:	9b05      	ldr	r3, [sp, #20]
 800cfd2:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800cfd6:	c203      	stmia	r2!, {r0, r1}
 800cfd8:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800cfdc:	e758      	b.n	800ce90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 800cfde:	9c00      	ldr	r4, [sp, #0]
 800cfe0:	4563      	cmp	r3, ip
 800cfe2:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800cfe6:	db0d      	blt.n	800d004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 800cfe8:	4429      	add	r1, r5
 800cfea:	9a04      	ldr	r2, [sp, #16]
 800cfec:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800cff0:	b289      	uxth	r1, r1
 800cff2:	445c      	add	r4, fp
 800cff4:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800cff8:	4411      	add	r1, r2
 800cffa:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800cffe:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800d002:	e580      	b.n	800cb06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d004:	445c      	add	r4, fp
 800d006:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800d00a:	e79e      	b.n	800cf4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 800d00c:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800d010:	2f07      	cmp	r7, #7
 800d012:	d806      	bhi.n	800d022 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 800d014:	ab08      	add	r3, sp, #32
 800d016:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d01a:	9801      	ldr	r0, [sp, #4]
 800d01c:	f7ff fd44 	bl	800caa8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d020:	e5db      	b.n	800cbda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800d022:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800d026:	f107 39ff 	add.w	r9, r7, #4294967295
 800d02a:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800d02e:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800d032:	f04f 35ff 	mov.w	r5, #4294967295
 800d036:	2400      	movs	r4, #0
 800d038:	9304      	str	r3, [sp, #16]
 800d03a:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800d03e:	9300      	str	r3, [sp, #0]
 800d040:	f109 32ff 	add.w	r2, r9, #4294967295
 800d044:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800d048:	9303      	str	r3, [sp, #12]
 800d04a:	4690      	mov	r8, r2
 800d04c:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800d050:	f1b8 3fff 	cmp.w	r8, #4294967295
 800d054:	bf14      	ite	ne
 800d056:	9904      	ldrne	r1, [sp, #16]
 800d058:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800d05c:	6818      	ldr	r0, [r3, #0]
 800d05e:	9206      	str	r2, [sp, #24]
 800d060:	bf18      	it	ne
 800d062:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800d066:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800d06a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d06e:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800d072:	9305      	str	r3, [sp, #20]
 800d074:	fb16 f601 	smulbb	r6, r6, r1
 800d078:	6859      	ldr	r1, [r3, #4]
 800d07a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d07e:	4671      	mov	r1, lr
 800d080:	a80a      	add	r0, sp, #40	; 0x28
 800d082:	f7ff fc45 	bl	800c910 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d086:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800d08a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800d08e:	9b03      	ldr	r3, [sp, #12]
 800d090:	9a00      	ldr	r2, [sp, #0]
 800d092:	fb11 f100 	smulbb	r1, r1, r0
 800d096:	fb02 6603 	mla	r6, r2, r3, r6
 800d09a:	1b8e      	subs	r6, r1, r6
 800d09c:	2008      	movs	r0, #8
 800d09e:	fb91 f1f0 	sdiv	r1, r1, r0
 800d0a2:	42b1      	cmp	r1, r6
 800d0a4:	dc21      	bgt.n	800d0ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800d0a6:	4556      	cmp	r6, sl
 800d0a8:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800d0ac:	da03      	bge.n	800d0b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800d0ae:	b1e6      	cbz	r6, 800d0ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800d0b0:	46b2      	mov	sl, r6
 800d0b2:	4645      	mov	r5, r8
 800d0b4:	464c      	mov	r4, r9
 800d0b6:	f108 38ff 	add.w	r8, r8, #4294967295
 800d0ba:	f118 0f02 	cmn.w	r8, #2
 800d0be:	d1c7      	bne.n	800d050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 800d0c0:	f1b2 3fff 	cmp.w	r2, #4294967295
 800d0c4:	f1a7 0708 	sub.w	r7, r7, #8
 800d0c8:	4691      	mov	r9, r2
 800d0ca:	d1b6      	bne.n	800d03a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 800d0cc:	9b01      	ldr	r3, [sp, #4]
 800d0ce:	b2a6      	uxth	r6, r4
 800d0d0:	00e4      	lsls	r4, r4, #3
 800d0d2:	1918      	adds	r0, r3, r4
 800d0d4:	1c6b      	adds	r3, r5, #1
 800d0d6:	d10b      	bne.n	800d0f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800d0d8:	4601      	mov	r1, r0
 800d0da:	9802      	ldr	r0, [sp, #8]
 800d0dc:	f7ff fc18 	bl	800c910 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d0e0:	4631      	mov	r1, r6
 800d0e2:	9801      	ldr	r0, [sp, #4]
 800d0e4:	f7ff fcbe 	bl	800ca64 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d0e8:	e50d      	b.n	800cb06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d0ea:	4645      	mov	r5, r8
 800d0ec:	464c      	mov	r4, r9
 800d0ee:	e7ed      	b.n	800d0cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 800d0f0:	9b01      	ldr	r3, [sp, #4]
 800d0f2:	00ed      	lsls	r5, r5, #3
 800d0f4:	1959      	adds	r1, r3, r5
 800d0f6:	f7ff fc0b 	bl	800c910 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d0fa:	9b02      	ldr	r3, [sp, #8]
 800d0fc:	cb03      	ldmia	r3!, {r0, r1}
 800d0fe:	445d      	add	r5, fp
 800d100:	445c      	add	r4, fp
 800d102:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800d106:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800d10a:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800d10e:	9b02      	ldr	r3, [sp, #8]
 800d110:	6861      	ldr	r1, [r4, #4]
 800d112:	c303      	stmia	r3!, {r0, r1}
 800d114:	e7e4      	b.n	800d0e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0800d118 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800d118:	b530      	push	{r4, r5, lr}
 800d11a:	4b1d      	ldr	r3, [pc, #116]	; (800d190 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800d11c:	b085      	sub	sp, #20
 800d11e:	460c      	mov	r4, r1
 800d120:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d124:	4b1b      	ldr	r3, [pc, #108]	; (800d194 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800d126:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d12a:	2100      	movs	r1, #0
 800d12c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d130:	9100      	str	r1, [sp, #0]
 800d132:	4605      	mov	r5, r0
 800d134:	6861      	ldr	r1, [r4, #4]
 800d136:	6820      	ldr	r0, [r4, #0]
 800d138:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d13c:	ab02      	add	r3, sp, #8
 800d13e:	c303      	stmia	r3!, {r0, r1}
 800d140:	4669      	mov	r1, sp
 800d142:	a802      	add	r0, sp, #8
 800d144:	f7fc fb28 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 800d148:	ab02      	add	r3, sp, #8
 800d14a:	cb03      	ldmia	r3!, {r0, r1}
 800d14c:	4b12      	ldr	r3, [pc, #72]	; (800d198 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800d14e:	6020      	str	r0, [r4, #0]
 800d150:	6818      	ldr	r0, [r3, #0]
 800d152:	6061      	str	r1, [r4, #4]
 800d154:	b138      	cbz	r0, 800d166 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d156:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800d15a:	b133      	cbz	r3, 800d16a <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800d15c:	6821      	ldr	r1, [r4, #0]
 800d15e:	6862      	ldr	r2, [r4, #4]
 800d160:	4628      	mov	r0, r5
 800d162:	f7ff fcc3 	bl	800caec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d166:	b005      	add	sp, #20
 800d168:	bd30      	pop	{r4, r5, pc}
 800d16a:	6803      	ldr	r3, [r0, #0]
 800d16c:	4621      	mov	r1, r4
 800d16e:	689b      	ldr	r3, [r3, #8]
 800d170:	4798      	blx	r3
 800d172:	4b0a      	ldr	r3, [pc, #40]	; (800d19c <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800d174:	6818      	ldr	r0, [r3, #0]
 800d176:	b118      	cbz	r0, 800d180 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800d178:	6803      	ldr	r3, [r0, #0]
 800d17a:	4621      	mov	r1, r4
 800d17c:	689b      	ldr	r3, [r3, #8]
 800d17e:	4798      	blx	r3
 800d180:	4b07      	ldr	r3, [pc, #28]	; (800d1a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800d182:	6818      	ldr	r0, [r3, #0]
 800d184:	6803      	ldr	r3, [r0, #0]
 800d186:	4621      	mov	r1, r4
 800d188:	69db      	ldr	r3, [r3, #28]
 800d18a:	4798      	blx	r3
 800d18c:	e7eb      	b.n	800d166 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d18e:	bf00      	nop
 800d190:	200134fc 	.word	0x200134fc
 800d194:	200134fe 	.word	0x200134fe
 800d198:	20013544 	.word	0x20013544
 800d19c:	20013540 	.word	0x20013540
 800d1a0:	20013508 	.word	0x20013508

0800d1a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800d1a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1a8:	4604      	mov	r4, r0
 800d1aa:	b09b      	sub	sp, #108	; 0x6c
 800d1ac:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800d1b0:	b129      	cbz	r1, 800d1be <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800d1b2:	2300      	movs	r3, #0
 800d1b4:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800d1b8:	b01b      	add	sp, #108	; 0x6c
 800d1ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d1be:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800d1c2:	4630      	mov	r0, r6
 800d1c4:	f7fc fb2b 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d1c8:	4605      	mov	r5, r0
 800d1ca:	b940      	cbnz	r0, 800d1de <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800d1cc:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d1d0:	4620      	mov	r0, r4
 800d1d2:	f7ff fc8b 	bl	800caec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d1d6:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800d1da:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800d1de:	4ba7      	ldr	r3, [pc, #668]	; (800d47c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800d1e0:	681b      	ldr	r3, [r3, #0]
 800d1e2:	b33b      	cbz	r3, 800d234 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800d1e4:	4da6      	ldr	r5, [pc, #664]	; (800d480 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800d1e6:	4628      	mov	r0, r5
 800d1e8:	f7fc fb19 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d1ec:	4606      	mov	r6, r0
 800d1ee:	bb08      	cbnz	r0, 800d234 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800d1f0:	4628      	mov	r0, r5
 800d1f2:	f7ff f9ef 	bl	800c5d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d1f6:	6829      	ldr	r1, [r5, #0]
 800d1f8:	686a      	ldr	r2, [r5, #4]
 800d1fa:	4620      	mov	r0, r4
 800d1fc:	f7ff fc76 	bl	800caec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d200:	802e      	strh	r6, [r5, #0]
 800d202:	806e      	strh	r6, [r5, #2]
 800d204:	80ae      	strh	r6, [r5, #4]
 800d206:	80ee      	strh	r6, [r5, #6]
 800d208:	4f9e      	ldr	r7, [pc, #632]	; (800d484 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800d20a:	a809      	add	r0, sp, #36	; 0x24
 800d20c:	f7ff fbd7 	bl	800c9be <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d210:	883d      	ldrh	r5, [r7, #0]
 800d212:	462e      	mov	r6, r5
 800d214:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d218:	42b3      	cmp	r3, r6
 800d21a:	d910      	bls.n	800d23e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800d21c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d220:	a809      	add	r0, sp, #36	; 0x24
 800d222:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800d226:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800d22a:	3601      	adds	r6, #1
 800d22c:	f7ff fc3c 	bl	800caa8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d230:	b2b6      	uxth	r6, r6
 800d232:	e7ef      	b.n	800d214 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800d234:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d238:	2b00      	cmp	r3, #0
 800d23a:	d1e5      	bne.n	800d208 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800d23c:	e7bc      	b.n	800d1b8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d23e:	462e      	mov	r6, r5
 800d240:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800d244:	42b3      	cmp	r3, r6
 800d246:	d90b      	bls.n	800d260 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800d248:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d24c:	4620      	mov	r0, r4
 800d24e:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800d252:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800d256:	3601      	adds	r6, #1
 800d258:	f7ff fc48 	bl	800caec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d25c:	b2b6      	uxth	r6, r6
 800d25e:	e7ef      	b.n	800d240 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800d260:	4a89      	ldr	r2, [pc, #548]	; (800d488 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800d262:	6813      	ldr	r3, [r2, #0]
 800d264:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d268:	2b01      	cmp	r3, #1
 800d26a:	4690      	mov	r8, r2
 800d26c:	f040 8094 	bne.w	800d398 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800d270:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800d274:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800d278:	33aa      	adds	r3, #170	; 0xaa
 800d27a:	f04f 0900 	mov.w	r9, #0
 800d27e:	42a8      	cmp	r0, r5
 800d280:	f103 0308 	add.w	r3, r3, #8
 800d284:	dd0a      	ble.n	800d29c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800d286:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800d28a:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800d28e:	440a      	add	r2, r1
 800d290:	b212      	sxth	r2, r2
 800d292:	4591      	cmp	r9, r2
 800d294:	bfb8      	it	lt
 800d296:	4691      	movlt	r9, r2
 800d298:	3501      	adds	r5, #1
 800d29a:	e7f0      	b.n	800d27e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800d29c:	4b7b      	ldr	r3, [pc, #492]	; (800d48c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800d29e:	4e7c      	ldr	r6, [pc, #496]	; (800d490 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800d2a0:	881d      	ldrh	r5, [r3, #0]
 800d2a2:	2300      	movs	r3, #0
 800d2a4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d2a8:	2d0f      	cmp	r5, #15
 800d2aa:	bf8c      	ite	hi
 800d2ac:	08ed      	lsrhi	r5, r5, #3
 800d2ae:	2501      	movls	r5, #1
 800d2b0:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d2b4:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800d2b8:	f8d8 0000 	ldr.w	r0, [r8]
 800d2bc:	440b      	add	r3, r1
 800d2be:	b21b      	sxth	r3, r3
 800d2c0:	4599      	cmp	r9, r3
 800d2c2:	6802      	ldr	r2, [r0, #0]
 800d2c4:	dd4b      	ble.n	800d35e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800d2c6:	f8d2 3094 	ldr.w	r3, [r2, #148]	; 0x94
 800d2ca:	4798      	blx	r3
 800d2cc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d2d0:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d2d4:	4413      	add	r3, r2
 800d2d6:	b21b      	sxth	r3, r3
 800d2d8:	195a      	adds	r2, r3, r5
 800d2da:	4290      	cmp	r0, r2
 800d2dc:	da07      	bge.n	800d2ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800d2de:	4581      	cmp	r9, r0
 800d2e0:	dd05      	ble.n	800d2ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800d2e2:	4298      	cmp	r0, r3
 800d2e4:	da33      	bge.n	800d34e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800d2e6:	2b00      	cmp	r3, #0
 800d2e8:	dd31      	ble.n	800d34e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800d2ea:	4648      	mov	r0, r9
 800d2ec:	e004      	b.n	800d2f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800d2ee:	4298      	cmp	r0, r3
 800d2f0:	dbfb      	blt.n	800d2ea <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800d2f2:	4548      	cmp	r0, r9
 800d2f4:	bfa8      	it	ge
 800d2f6:	4648      	movge	r0, r9
 800d2f8:	f9b6 2000 	ldrsh.w	r2, [r6]
 800d2fc:	f8b7 a000 	ldrh.w	sl, [r7]
 800d300:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d304:	2100      	movs	r1, #0
 800d306:	1ac0      	subs	r0, r0, r3
 800d308:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d30c:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d310:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d314:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d318:	4553      	cmp	r3, sl
 800d31a:	d9c9      	bls.n	800d2b0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800d31c:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800d320:	ab07      	add	r3, sp, #28
 800d322:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d326:	6851      	ldr	r1, [r2, #4]
 800d328:	c303      	stmia	r3!, {r0, r1}
 800d32a:	a807      	add	r0, sp, #28
 800d32c:	a905      	add	r1, sp, #20
 800d32e:	f7fc fa33 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 800d332:	a807      	add	r0, sp, #28
 800d334:	f7fc fa73 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d338:	b920      	cbnz	r0, 800d344 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800d33a:	6823      	ldr	r3, [r4, #0]
 800d33c:	a907      	add	r1, sp, #28
 800d33e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d340:	4620      	mov	r0, r4
 800d342:	4798      	blx	r3
 800d344:	f10a 0a01 	add.w	sl, sl, #1
 800d348:	fa1f fa8a 	uxth.w	sl, sl
 800d34c:	e7e2      	b.n	800d314 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800d34e:	f8d8 0000 	ldr.w	r0, [r8]
 800d352:	6803      	ldr	r3, [r0, #0]
 800d354:	2101      	movs	r1, #1
 800d356:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d35a:	4798      	blx	r3
 800d35c:	e7a8      	b.n	800d2b0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800d35e:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800d360:	4798      	blx	r3
 800d362:	4b4c      	ldr	r3, [pc, #304]	; (800d494 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 800d364:	781b      	ldrb	r3, [r3, #0]
 800d366:	2b00      	cmp	r3, #0
 800d368:	f43f af26 	beq.w	800d1b8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d36c:	2300      	movs	r3, #0
 800d36e:	883d      	ldrh	r5, [r7, #0]
 800d370:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800d374:	34ea      	adds	r4, #234	; 0xea
 800d376:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800d37a:	42ab      	cmp	r3, r5
 800d37c:	f67f af1c 	bls.w	800d1b8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d380:	ab1a      	add	r3, sp, #104	; 0x68
 800d382:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d386:	3b44      	subs	r3, #68	; 0x44
 800d388:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d38c:	4620      	mov	r0, r4
 800d38e:	3501      	adds	r5, #1
 800d390:	f7ff fb8a 	bl	800caa8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d394:	b2ad      	uxth	r5, r5
 800d396:	e7ee      	b.n	800d376 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800d398:	2b02      	cmp	r3, #2
 800d39a:	f040 813e 	bne.w	800d61a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800d39e:	4b3e      	ldr	r3, [pc, #248]	; (800d498 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>)
 800d3a0:	781b      	ldrb	r3, [r3, #0]
 800d3a2:	2b01      	cmp	r3, #1
 800d3a4:	d02c      	beq.n	800d400 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25c>
 800d3a6:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800d3aa:	883a      	ldrh	r2, [r7, #0]
 800d3ac:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800d3b0:	3201      	adds	r2, #1
 800d3b2:	b292      	uxth	r2, r2
 800d3b4:	2900      	cmp	r1, #0
 800d3b6:	d0d4      	beq.n	800d362 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d3b8:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800d3bc:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800d3c0:	441d      	add	r5, r3
 800d3c2:	b22d      	sxth	r5, r5
 800d3c4:	4610      	mov	r0, r2
 800d3c6:	f04f 0a00 	mov.w	sl, #0
 800d3ca:	b283      	uxth	r3, r0
 800d3cc:	4299      	cmp	r1, r3
 800d3ce:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800d3d2:	f240 80c5 	bls.w	800d560 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3bc>
 800d3d6:	4426      	add	r6, r4
 800d3d8:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800d3dc:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800d3e0:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800d3e4:	4573      	cmp	r3, lr
 800d3e6:	4684      	mov	ip, r0
 800d3e8:	f340 80a7 	ble.w	800d53a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x396>
 800d3ec:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800d3f0:	4475      	add	r5, lr
 800d3f2:	b22d      	sxth	r5, r5
 800d3f4:	429d      	cmp	r5, r3
 800d3f6:	bfa8      	it	ge
 800d3f8:	461d      	movge	r5, r3
 800d3fa:	3001      	adds	r0, #1
 800d3fc:	46e2      	mov	sl, ip
 800d3fe:	e7e4      	b.n	800d3ca <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x226>
 800d400:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800d404:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800d408:	f1bb 0f00 	cmp.w	fp, #0
 800d40c:	d0a9      	beq.n	800d362 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d40e:	883b      	ldrh	r3, [r7, #0]
 800d410:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800d414:	3301      	adds	r3, #1
 800d416:	b29b      	uxth	r3, r3
 800d418:	2600      	movs	r6, #0
 800d41a:	b299      	uxth	r1, r3
 800d41c:	458b      	cmp	fp, r1
 800d41e:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800d422:	d93b      	bls.n	800d49c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f8>
 800d424:	4425      	add	r5, r4
 800d426:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800d42a:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800d42e:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800d432:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800d436:	4408      	add	r0, r1
 800d438:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800d43c:	4471      	add	r1, lr
 800d43e:	b200      	sxth	r0, r0
 800d440:	b209      	sxth	r1, r1
 800d442:	4288      	cmp	r0, r1
 800d444:	469c      	mov	ip, r3
 800d446:	da06      	bge.n	800d456 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b2>
 800d448:	4586      	cmp	lr, r0
 800d44a:	4672      	mov	r2, lr
 800d44c:	bfb8      	it	lt
 800d44e:	4602      	movlt	r2, r0
 800d450:	3301      	adds	r3, #1
 800d452:	4666      	mov	r6, ip
 800d454:	e7e1      	b.n	800d41a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800d456:	d10b      	bne.n	800d470 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2cc>
 800d458:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800d45c:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800d460:	458c      	cmp	ip, r1
 800d462:	bfb4      	ite	lt
 800d464:	469c      	movlt	ip, r3
 800d466:	46b4      	movge	ip, r6
 800d468:	4572      	cmp	r2, lr
 800d46a:	bfb8      	it	lt
 800d46c:	4672      	movlt	r2, lr
 800d46e:	e7ef      	b.n	800d450 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800d470:	428a      	cmp	r2, r1
 800d472:	bfb8      	it	lt
 800d474:	460a      	movlt	r2, r1
 800d476:	46b4      	mov	ip, r6
 800d478:	e7ea      	b.n	800d450 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800d47a:	bf00      	nop
 800d47c:	20013540 	.word	0x20013540
 800d480:	2001354c 	.word	0x2001354c
 800d484:	20000084 	.word	0x20000084
 800d488:	20013508 	.word	0x20013508
 800d48c:	200134fe 	.word	0x200134fe
 800d490:	200134fc 	.word	0x200134fc
 800d494:	20013506 	.word	0x20013506
 800d498:	20013500 	.word	0x20013500
 800d49c:	1961      	adds	r1, r4, r5
 800d49e:	ab07      	add	r3, sp, #28
 800d4a0:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800d4a4:	6849      	ldr	r1, [r1, #4]
 800d4a6:	c303      	stmia	r3!, {r0, r1}
 800d4a8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d4ac:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d4b0:	2b13      	cmp	r3, #19
 800d4b2:	bfd8      	it	le
 800d4b4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800d4b8:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d4bc:	440b      	add	r3, r1
 800d4be:	1a9b      	subs	r3, r3, r2
 800d4c0:	a807      	add	r0, sp, #28
 800d4c2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d4c6:	f7ff f89f 	bl	800c608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d4ca:	a807      	add	r0, sp, #28
 800d4cc:	f7fc f9a7 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d4d0:	2800      	cmp	r0, #0
 800d4d2:	d197      	bne.n	800d404 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d4d4:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800d4d8:	f8d8 0000 	ldr.w	r0, [r8]
 800d4dc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d4e0:	f8d0 e000 	ldr.w	lr, [r0]
 800d4e4:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800d4e8:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d4ec:	f1bc 0f14 	cmp.w	ip, #20
 800d4f0:	bfa8      	it	ge
 800d4f2:	f04f 0c14 	movge.w	ip, #20
 800d4f6:	fa1f fc8c 	uxth.w	ip, ip
 800d4fa:	f8cd c000 	str.w	ip, [sp]
 800d4fe:	f8de a088 	ldr.w	sl, [lr, #136]	; 0x88
 800d502:	47d0      	blx	sl
 800d504:	4682      	mov	sl, r0
 800d506:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d50a:	a807      	add	r0, sp, #28
 800d50c:	f7ff f862 	bl	800c5d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d510:	6823      	ldr	r3, [r4, #0]
 800d512:	4425      	add	r5, r4
 800d514:	4620      	mov	r0, r4
 800d516:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d518:	a907      	add	r1, sp, #28
 800d51a:	4798      	blx	r3
 800d51c:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800d520:	eba0 000a 	sub.w	r0, r0, sl
 800d524:	b200      	sxth	r0, r0
 800d526:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800d52a:	2800      	cmp	r0, #0
 800d52c:	f47f af6a 	bne.w	800d404 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d530:	b2b1      	uxth	r1, r6
 800d532:	4648      	mov	r0, r9
 800d534:	f7ff fa96 	bl	800ca64 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d538:	e764      	b.n	800d404 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d53a:	d10c      	bne.n	800d556 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b2>
 800d53c:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800d540:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800d544:	45b4      	cmp	ip, r6
 800d546:	bfb4      	ite	lt
 800d548:	4684      	movlt	ip, r0
 800d54a:	46d4      	movge	ip, sl
 800d54c:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800d550:	4433      	add	r3, r6
 800d552:	b21b      	sxth	r3, r3
 800d554:	e74e      	b.n	800d3f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x250>
 800d556:	4575      	cmp	r5, lr
 800d558:	bfa8      	it	ge
 800d55a:	4675      	movge	r5, lr
 800d55c:	46d4      	mov	ip, sl
 800d55e:	e74c      	b.n	800d3fa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x256>
 800d560:	eb0b 0006 	add.w	r0, fp, r6
 800d564:	4426      	add	r6, r4
 800d566:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800d56a:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800d56e:	f1b9 0f13 	cmp.w	r9, #19
 800d572:	bfde      	ittt	le
 800d574:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800d578:	444d      	addle	r5, r9
 800d57a:	b22d      	sxthle	r5, r5
 800d57c:	f7fc f94f 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d580:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800d584:	2800      	cmp	r0, #0
 800d586:	f47f af15 	bne.w	800d3b4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x210>
 800d58a:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800d58e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d592:	eba5 050c 	sub.w	r5, r5, ip
 800d596:	fa1f f28c 	uxth.w	r2, ip
 800d59a:	fa1f f989 	uxth.w	r9, r9
 800d59e:	eb02 0009 	add.w	r0, r2, r9
 800d5a2:	2d14      	cmp	r5, #20
 800d5a4:	bfa8      	it	ge
 800d5a6:	2514      	movge	r5, #20
 800d5a8:	b200      	sxth	r0, r0
 800d5aa:	fa1f fe85 	uxth.w	lr, r5
 800d5ae:	eba0 000c 	sub.w	r0, r0, ip
 800d5b2:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800d5b6:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800d5ba:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d5be:	4586      	cmp	lr, r0
 800d5c0:	f8d8 0000 	ldr.w	r0, [r8]
 800d5c4:	f8ad c01e 	strh.w	ip, [sp, #30]
 800d5c8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d5cc:	bfb8      	it	lt
 800d5ce:	46f1      	movlt	r9, lr
 800d5d0:	6805      	ldr	r5, [r0, #0]
 800d5d2:	f8cd 9000 	str.w	r9, [sp]
 800d5d6:	b29b      	uxth	r3, r3
 800d5d8:	b289      	uxth	r1, r1
 800d5da:	f8d5 5088 	ldr.w	r5, [r5, #136]	; 0x88
 800d5de:	47a8      	blx	r5
 800d5e0:	6823      	ldr	r3, [r4, #0]
 800d5e2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d5e6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d5e8:	a907      	add	r1, sp, #28
 800d5ea:	4620      	mov	r0, r4
 800d5ec:	4798      	blx	r3
 800d5ee:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800d5f2:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800d5f6:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800d5fa:	1a5b      	subs	r3, r3, r1
 800d5fc:	440a      	add	r2, r1
 800d5fe:	b21b      	sxth	r3, r3
 800d600:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800d604:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800d608:	2b00      	cmp	r3, #0
 800d60a:	f47f aece 	bne.w	800d3aa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800d60e:	fa1f f18a 	uxth.w	r1, sl
 800d612:	4658      	mov	r0, fp
 800d614:	f7ff fa26 	bl	800ca64 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d618:	e6c7      	b.n	800d3aa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800d61a:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d61e:	42ab      	cmp	r3, r5
 800d620:	f67f ae9f 	bls.w	800d362 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d624:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800d628:	ab07      	add	r3, sp, #28
 800d62a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d62e:	6851      	ldr	r1, [r2, #4]
 800d630:	c303      	stmia	r3!, {r0, r1}
 800d632:	a807      	add	r0, sp, #28
 800d634:	f7fc f8f3 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d638:	b920      	cbnz	r0, 800d644 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x4a0>
 800d63a:	6823      	ldr	r3, [r4, #0]
 800d63c:	a907      	add	r1, sp, #28
 800d63e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d640:	4620      	mov	r0, r4
 800d642:	4798      	blx	r3
 800d644:	3501      	adds	r5, #1
 800d646:	b2ad      	uxth	r5, r5
 800d648:	e7e7      	b.n	800d61a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800d64a:	bf00      	nop

0800d64c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800d64c:	4b03      	ldr	r3, [pc, #12]	; (800d65c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800d64e:	2200      	movs	r2, #0
 800d650:	801a      	strh	r2, [r3, #0]
 800d652:	805a      	strh	r2, [r3, #2]
 800d654:	809a      	strh	r2, [r3, #4]
 800d656:	80da      	strh	r2, [r3, #6]
 800d658:	4770      	bx	lr
 800d65a:	bf00      	nop
 800d65c:	2001354c 	.word	0x2001354c

0800d660 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800d660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d664:	4606      	mov	r6, r0
 800d666:	b09d      	sub	sp, #116	; 0x74
 800d668:	a803      	add	r0, sp, #12
 800d66a:	4614      	mov	r4, r2
 800d66c:	468a      	mov	sl, r1
 800d66e:	461d      	mov	r5, r3
 800d670:	f000 fd66 	bl	800e140 <_ZN8touchgfx12TextProviderC1Ev>
 800d674:	6833      	ldr	r3, [r6, #0]
 800d676:	4630      	mov	r0, r6
 800d678:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d67a:	4798      	blx	r3
 800d67c:	6833      	ldr	r3, [r6, #0]
 800d67e:	4607      	mov	r7, r0
 800d680:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d682:	4630      	mov	r0, r6
 800d684:	4798      	blx	r3
 800d686:	462a      	mov	r2, r5
 800d688:	9000      	str	r0, [sp, #0]
 800d68a:	4621      	mov	r1, r4
 800d68c:	463b      	mov	r3, r7
 800d68e:	a803      	add	r0, sp, #12
 800d690:	f000 fda9 	bl	800e1e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d694:	2500      	movs	r5, #0
 800d696:	462c      	mov	r4, r5
 800d698:	46a9      	mov	r9, r5
 800d69a:	46a8      	mov	r8, r5
 800d69c:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800d6a0:	2300      	movs	r3, #0
 800d6a2:	9302      	str	r3, [sp, #8]
 800d6a4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d6a8:	429c      	cmp	r4, r3
 800d6aa:	d002      	beq.n	800d6b2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800d6ac:	455c      	cmp	r4, fp
 800d6ae:	bf18      	it	ne
 800d6b0:	4625      	movne	r5, r4
 800d6b2:	ab02      	add	r3, sp, #8
 800d6b4:	4632      	mov	r2, r6
 800d6b6:	4651      	mov	r1, sl
 800d6b8:	a803      	add	r0, sp, #12
 800d6ba:	f001 f893 	bl	800e7e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d6be:	4604      	mov	r4, r0
 800d6c0:	b108      	cbz	r0, 800d6c6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800d6c2:	280a      	cmp	r0, #10
 800d6c4:	d10a      	bne.n	800d6dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800d6c6:	45c1      	cmp	r9, r8
 800d6c8:	bf38      	it	cc
 800d6ca:	46c1      	movcc	r9, r8
 800d6cc:	f04f 0800 	mov.w	r8, #0
 800d6d0:	2c00      	cmp	r4, #0
 800d6d2:	d1e5      	bne.n	800d6a0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800d6d4:	4648      	mov	r0, r9
 800d6d6:	b01d      	add	sp, #116	; 0x74
 800d6d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6dc:	9a02      	ldr	r2, [sp, #8]
 800d6de:	2a00      	cmp	r2, #0
 800d6e0:	d0de      	beq.n	800d6a0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800d6e2:	7b57      	ldrb	r7, [r2, #13]
 800d6e4:	6833      	ldr	r3, [r6, #0]
 800d6e6:	8894      	ldrh	r4, [r2, #4]
 800d6e8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d6ea:	007f      	lsls	r7, r7, #1
 800d6ec:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800d6f0:	7a97      	ldrb	r7, [r2, #10]
 800d6f2:	4629      	mov	r1, r5
 800d6f4:	4307      	orrs	r7, r0
 800d6f6:	4630      	mov	r0, r6
 800d6f8:	4798      	blx	r3
 800d6fa:	4438      	add	r0, r7
 800d6fc:	4480      	add	r8, r0
 800d6fe:	fa1f f888 	uxth.w	r8, r8
 800d702:	e7e5      	b.n	800d6d0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800d704 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800d704:	b508      	push	{r3, lr}
 800d706:	6803      	ldr	r3, [r0, #0]
 800d708:	68db      	ldr	r3, [r3, #12]
 800d70a:	4798      	blx	r3
 800d70c:	b128      	cbz	r0, 800d71a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800d70e:	7b43      	ldrb	r3, [r0, #13]
 800d710:	7a80      	ldrb	r0, [r0, #10]
 800d712:	005b      	lsls	r3, r3, #1
 800d714:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d718:	4318      	orrs	r0, r3
 800d71a:	bd08      	pop	{r3, pc}

0800d71c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800d71c:	b40e      	push	{r1, r2, r3}
 800d71e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d720:	b09e      	sub	sp, #120	; 0x78
 800d722:	ab23      	add	r3, sp, #140	; 0x8c
 800d724:	4605      	mov	r5, r0
 800d726:	f853 4b04 	ldr.w	r4, [r3], #4
 800d72a:	9303      	str	r3, [sp, #12]
 800d72c:	a805      	add	r0, sp, #20
 800d72e:	f000 fd07 	bl	800e140 <_ZN8touchgfx12TextProviderC1Ev>
 800d732:	682b      	ldr	r3, [r5, #0]
 800d734:	4628      	mov	r0, r5
 800d736:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d738:	4798      	blx	r3
 800d73a:	682b      	ldr	r3, [r5, #0]
 800d73c:	4606      	mov	r6, r0
 800d73e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d740:	4628      	mov	r0, r5
 800d742:	4798      	blx	r3
 800d744:	4633      	mov	r3, r6
 800d746:	ae1e      	add	r6, sp, #120	; 0x78
 800d748:	4621      	mov	r1, r4
 800d74a:	9000      	str	r0, [sp, #0]
 800d74c:	9a03      	ldr	r2, [sp, #12]
 800d74e:	2400      	movs	r4, #0
 800d750:	a805      	add	r0, sp, #20
 800d752:	f000 fd48 	bl	800e1e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d756:	f846 4d68 	str.w	r4, [r6, #-104]!
 800d75a:	462a      	mov	r2, r5
 800d75c:	4633      	mov	r3, r6
 800d75e:	4621      	mov	r1, r4
 800d760:	a805      	add	r0, sp, #20
 800d762:	f001 f83f 	bl	800e7e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d766:	b1f0      	cbz	r0, 800d7a6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800d768:	280a      	cmp	r0, #10
 800d76a:	d018      	beq.n	800d79e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800d76c:	9f04      	ldr	r7, [sp, #16]
 800d76e:	b1b7      	cbz	r7, 800d79e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800d770:	7b78      	ldrb	r0, [r7, #13]
 800d772:	7a3b      	ldrb	r3, [r7, #8]
 800d774:	88aa      	ldrh	r2, [r5, #4]
 800d776:	00c1      	lsls	r1, r0, #3
 800d778:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d77c:	4319      	orrs	r1, r3
 800d77e:	0643      	lsls	r3, r0, #25
 800d780:	bf44      	itt	mi
 800d782:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800d786:	b219      	sxthmi	r1, r3
 800d788:	0100      	lsls	r0, r0, #4
 800d78a:	79fb      	ldrb	r3, [r7, #7]
 800d78c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d790:	4303      	orrs	r3, r0
 800d792:	4413      	add	r3, r2
 800d794:	1a5b      	subs	r3, r3, r1
 800d796:	b29b      	uxth	r3, r3
 800d798:	42a3      	cmp	r3, r4
 800d79a:	bfc8      	it	gt
 800d79c:	b21c      	sxthgt	r4, r3
 800d79e:	4633      	mov	r3, r6
 800d7a0:	462a      	mov	r2, r5
 800d7a2:	2100      	movs	r1, #0
 800d7a4:	e7dc      	b.n	800d760 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800d7a6:	b2a0      	uxth	r0, r4
 800d7a8:	b01e      	add	sp, #120	; 0x78
 800d7aa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d7ae:	b003      	add	sp, #12
 800d7b0:	4770      	bx	lr

0800d7b2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800d7b2:	b40e      	push	{r1, r2, r3}
 800d7b4:	b570      	push	{r4, r5, r6, lr}
 800d7b6:	b09d      	sub	sp, #116	; 0x74
 800d7b8:	ab21      	add	r3, sp, #132	; 0x84
 800d7ba:	4604      	mov	r4, r0
 800d7bc:	f853 5b04 	ldr.w	r5, [r3], #4
 800d7c0:	9302      	str	r3, [sp, #8]
 800d7c2:	a803      	add	r0, sp, #12
 800d7c4:	f000 fcbc 	bl	800e140 <_ZN8touchgfx12TextProviderC1Ev>
 800d7c8:	6823      	ldr	r3, [r4, #0]
 800d7ca:	4620      	mov	r0, r4
 800d7cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d7ce:	4798      	blx	r3
 800d7d0:	6823      	ldr	r3, [r4, #0]
 800d7d2:	4606      	mov	r6, r0
 800d7d4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d7d6:	4620      	mov	r0, r4
 800d7d8:	4798      	blx	r3
 800d7da:	4633      	mov	r3, r6
 800d7dc:	9000      	str	r0, [sp, #0]
 800d7de:	9a02      	ldr	r2, [sp, #8]
 800d7e0:	4629      	mov	r1, r5
 800d7e2:	a803      	add	r0, sp, #12
 800d7e4:	f000 fcff 	bl	800e1e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d7e8:	a803      	add	r0, sp, #12
 800d7ea:	f001 f8f5 	bl	800e9d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d7ee:	2401      	movs	r4, #1
 800d7f0:	b2a3      	uxth	r3, r4
 800d7f2:	b140      	cbz	r0, 800d806 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800d7f4:	280a      	cmp	r0, #10
 800d7f6:	bf08      	it	eq
 800d7f8:	3301      	addeq	r3, #1
 800d7fa:	a803      	add	r0, sp, #12
 800d7fc:	bf08      	it	eq
 800d7fe:	b21c      	sxtheq	r4, r3
 800d800:	f001 f8ea 	bl	800e9d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d804:	e7f4      	b.n	800d7f0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800d806:	4618      	mov	r0, r3
 800d808:	b01d      	add	sp, #116	; 0x74
 800d80a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d80e:	b003      	add	sp, #12
 800d810:	4770      	bx	lr

0800d812 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800d812:	b40e      	push	{r1, r2, r3}
 800d814:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d816:	b09e      	sub	sp, #120	; 0x78
 800d818:	ab23      	add	r3, sp, #140	; 0x8c
 800d81a:	4604      	mov	r4, r0
 800d81c:	f853 5b04 	ldr.w	r5, [r3], #4
 800d820:	9303      	str	r3, [sp, #12]
 800d822:	a805      	add	r0, sp, #20
 800d824:	f000 fc8c 	bl	800e140 <_ZN8touchgfx12TextProviderC1Ev>
 800d828:	6823      	ldr	r3, [r4, #0]
 800d82a:	4620      	mov	r0, r4
 800d82c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d82e:	4798      	blx	r3
 800d830:	6823      	ldr	r3, [r4, #0]
 800d832:	4606      	mov	r6, r0
 800d834:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d836:	4620      	mov	r0, r4
 800d838:	4798      	blx	r3
 800d83a:	4633      	mov	r3, r6
 800d83c:	4629      	mov	r1, r5
 800d83e:	9000      	str	r0, [sp, #0]
 800d840:	9a03      	ldr	r2, [sp, #12]
 800d842:	a805      	add	r0, sp, #20
 800d844:	ad1e      	add	r5, sp, #120	; 0x78
 800d846:	f000 fcce 	bl	800e1e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d84a:	2100      	movs	r1, #0
 800d84c:	f845 1d68 	str.w	r1, [r5, #-104]!
 800d850:	4622      	mov	r2, r4
 800d852:	462b      	mov	r3, r5
 800d854:	a805      	add	r0, sp, #20
 800d856:	f000 ffc5 	bl	800e7e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d85a:	26ff      	movs	r6, #255	; 0xff
 800d85c:	b1d8      	cbz	r0, 800d896 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800d85e:	280a      	cmp	r0, #10
 800d860:	d012      	beq.n	800d888 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800d862:	9804      	ldr	r0, [sp, #16]
 800d864:	b180      	cbz	r0, 800d888 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800d866:	7b47      	ldrb	r7, [r0, #13]
 800d868:	7922      	ldrb	r2, [r4, #4]
 800d86a:	00fb      	lsls	r3, r7, #3
 800d86c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d870:	7a03      	ldrb	r3, [r0, #8]
 800d872:	430b      	orrs	r3, r1
 800d874:	0679      	lsls	r1, r7, #25
 800d876:	bf44      	itt	mi
 800d878:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d87c:	b21b      	sxthmi	r3, r3
 800d87e:	1ad3      	subs	r3, r2, r3
 800d880:	b2db      	uxtb	r3, r3
 800d882:	429e      	cmp	r6, r3
 800d884:	bf28      	it	cs
 800d886:	461e      	movcs	r6, r3
 800d888:	462b      	mov	r3, r5
 800d88a:	4622      	mov	r2, r4
 800d88c:	2100      	movs	r1, #0
 800d88e:	a805      	add	r0, sp, #20
 800d890:	f000 ffa8 	bl	800e7e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d894:	e7e2      	b.n	800d85c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800d896:	4630      	mov	r0, r6
 800d898:	b01e      	add	sp, #120	; 0x78
 800d89a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d89e:	b003      	add	sp, #12
 800d8a0:	4770      	bx	lr

0800d8a2 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800d8a2:	b513      	push	{r0, r1, r4, lr}
 800d8a4:	6803      	ldr	r3, [r0, #0]
 800d8a6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800d8aa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d8ae:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d8b2:	2400      	movs	r4, #0
 800d8b4:	9400      	str	r4, [sp, #0]
 800d8b6:	f8ad 2006 	strh.w	r2, [sp, #6]
 800d8ba:	691b      	ldr	r3, [r3, #16]
 800d8bc:	4669      	mov	r1, sp
 800d8be:	4798      	blx	r3
 800d8c0:	b002      	add	sp, #8
 800d8c2:	bd10      	pop	{r4, pc}

0800d8c4 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800d8c4:	b538      	push	{r3, r4, r5, lr}
 800d8c6:	680b      	ldr	r3, [r1, #0]
 800d8c8:	460c      	mov	r4, r1
 800d8ca:	68db      	ldr	r3, [r3, #12]
 800d8cc:	4605      	mov	r5, r0
 800d8ce:	4798      	blx	r3
 800d8d0:	6823      	ldr	r3, [r4, #0]
 800d8d2:	4620      	mov	r0, r4
 800d8d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d8d6:	4629      	mov	r1, r5
 800d8d8:	4798      	blx	r3
 800d8da:	4628      	mov	r0, r5
 800d8dc:	bd38      	pop	{r3, r4, r5, pc}

0800d8de <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800d8de:	b410      	push	{r4}
 800d8e0:	880a      	ldrh	r2, [r1, #0]
 800d8e2:	8884      	ldrh	r4, [r0, #4]
 800d8e4:	4422      	add	r2, r4
 800d8e6:	800a      	strh	r2, [r1, #0]
 800d8e8:	88c4      	ldrh	r4, [r0, #6]
 800d8ea:	884a      	ldrh	r2, [r1, #2]
 800d8ec:	4422      	add	r2, r4
 800d8ee:	804a      	strh	r2, [r1, #2]
 800d8f0:	6940      	ldr	r0, [r0, #20]
 800d8f2:	b120      	cbz	r0, 800d8fe <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800d8f4:	6803      	ldr	r3, [r0, #0]
 800d8f6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d8fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d8fc:	4718      	bx	r3
 800d8fe:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d902:	4770      	bx	lr

0800d904 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800d904:	b570      	push	{r4, r5, r6, lr}
 800d906:	8882      	ldrh	r2, [r0, #4]
 800d908:	880b      	ldrh	r3, [r1, #0]
 800d90a:	4413      	add	r3, r2
 800d90c:	800b      	strh	r3, [r1, #0]
 800d90e:	88c2      	ldrh	r2, [r0, #6]
 800d910:	884b      	ldrh	r3, [r1, #2]
 800d912:	460c      	mov	r4, r1
 800d914:	4413      	add	r3, r2
 800d916:	804b      	strh	r3, [r1, #2]
 800d918:	4605      	mov	r5, r0
 800d91a:	1d01      	adds	r1, r0, #4
 800d91c:	4620      	mov	r0, r4
 800d91e:	f7fb ff3b 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 800d922:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d926:	2b00      	cmp	r3, #0
 800d928:	dd0b      	ble.n	800d942 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d92a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d92e:	2b00      	cmp	r3, #0
 800d930:	dd07      	ble.n	800d942 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d932:	6968      	ldr	r0, [r5, #20]
 800d934:	b128      	cbz	r0, 800d942 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d936:	6803      	ldr	r3, [r0, #0]
 800d938:	4621      	mov	r1, r4
 800d93a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d93c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d940:	4718      	bx	r3
 800d942:	bd70      	pop	{r4, r5, r6, pc}

0800d944 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800d944:	b570      	push	{r4, r5, r6, lr}
 800d946:	8882      	ldrh	r2, [r0, #4]
 800d948:	880b      	ldrh	r3, [r1, #0]
 800d94a:	4413      	add	r3, r2
 800d94c:	800b      	strh	r3, [r1, #0]
 800d94e:	88c2      	ldrh	r2, [r0, #6]
 800d950:	884b      	ldrh	r3, [r1, #2]
 800d952:	460c      	mov	r4, r1
 800d954:	4413      	add	r3, r2
 800d956:	804b      	strh	r3, [r1, #2]
 800d958:	4605      	mov	r5, r0
 800d95a:	1d01      	adds	r1, r0, #4
 800d95c:	4620      	mov	r0, r4
 800d95e:	f7fb ff1b 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 800d962:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d966:	2b00      	cmp	r3, #0
 800d968:	dd15      	ble.n	800d996 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 800d96a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d96e:	2b00      	cmp	r3, #0
 800d970:	dd11      	ble.n	800d996 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 800d972:	6968      	ldr	r0, [r5, #20]
 800d974:	b128      	cbz	r0, 800d982 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800d976:	6803      	ldr	r3, [r0, #0]
 800d978:	691b      	ldr	r3, [r3, #16]
 800d97a:	4621      	mov	r1, r4
 800d97c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d980:	4718      	bx	r3
 800d982:	4b05      	ldr	r3, [pc, #20]	; (800d998 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x54>)
 800d984:	681b      	ldr	r3, [r3, #0]
 800d986:	3304      	adds	r3, #4
 800d988:	429d      	cmp	r5, r3
 800d98a:	d104      	bne.n	800d996 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 800d98c:	f7ff f806 	bl	800c99c <_ZN8touchgfx11Application11getInstanceEv>
 800d990:	6803      	ldr	r3, [r0, #0]
 800d992:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d994:	e7f1      	b.n	800d97a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x36>
 800d996:	bd70      	pop	{r4, r5, r6, pc}
 800d998:	20013544 	.word	0x20013544

0800d99c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800d99c:	b570      	push	{r4, r5, r6, lr}
 800d99e:	4604      	mov	r4, r0
 800d9a0:	4616      	mov	r6, r2
 800d9a2:	460d      	mov	r5, r1
 800d9a4:	b901      	cbnz	r1, 800d9a8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800d9a6:	b192      	cbz	r2, 800d9ce <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800d9a8:	6823      	ldr	r3, [r4, #0]
 800d9aa:	4620      	mov	r0, r4
 800d9ac:	695b      	ldr	r3, [r3, #20]
 800d9ae:	4798      	blx	r3
 800d9b0:	88e2      	ldrh	r2, [r4, #6]
 800d9b2:	88a1      	ldrh	r1, [r4, #4]
 800d9b4:	4432      	add	r2, r6
 800d9b6:	4429      	add	r1, r5
 800d9b8:	4620      	mov	r0, r4
 800d9ba:	b212      	sxth	r2, r2
 800d9bc:	b209      	sxth	r1, r1
 800d9be:	f7f4 ffc5 	bl	800294c <_ZN8touchgfx8Drawable5setXYEss>
 800d9c2:	6823      	ldr	r3, [r4, #0]
 800d9c4:	4620      	mov	r0, r4
 800d9c6:	695b      	ldr	r3, [r3, #20]
 800d9c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d9cc:	4718      	bx	r3
 800d9ce:	bd70      	pop	{r4, r5, r6, pc}

0800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800d9d0:	b510      	push	{r4, lr}
 800d9d2:	4604      	mov	r4, r0
 800d9d4:	4608      	mov	r0, r1
 800d9d6:	2300      	movs	r3, #0
 800d9d8:	8023      	strh	r3, [r4, #0]
 800d9da:	8063      	strh	r3, [r4, #2]
 800d9dc:	6803      	ldr	r3, [r0, #0]
 800d9de:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d9e2:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800d9e6:	80a1      	strh	r1, [r4, #4]
 800d9e8:	80e2      	strh	r2, [r4, #6]
 800d9ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d9ec:	4621      	mov	r1, r4
 800d9ee:	4798      	blx	r3
 800d9f0:	4620      	mov	r0, r4
 800d9f2:	bd10      	pop	{r4, pc}

0800d9f4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800d9f4:	b530      	push	{r4, r5, lr}
 800d9f6:	8083      	strh	r3, [r0, #4]
 800d9f8:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800d9fc:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800da00:	7183      	strb	r3, [r0, #6]
 800da02:	79c3      	ldrb	r3, [r0, #7]
 800da04:	6101      	str	r1, [r0, #16]
 800da06:	f365 0306 	bfi	r3, r5, #0, #7
 800da0a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800da0e:	8282      	strh	r2, [r0, #20]
 800da10:	f365 13c7 	bfi	r3, r5, #7, #1
 800da14:	71c3      	strb	r3, [r0, #7]
 800da16:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800da1a:	7203      	strb	r3, [r0, #8]
 800da1c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800da20:	7243      	strb	r3, [r0, #9]
 800da22:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800da26:	8143      	strh	r3, [r0, #10]
 800da28:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800da2c:	8183      	strh	r3, [r0, #12]
 800da2e:	4b01      	ldr	r3, [pc, #4]	; (800da34 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800da30:	6003      	str	r3, [r0, #0]
 800da32:	bd30      	pop	{r4, r5, pc}
 800da34:	0801f938 	.word	0x0801f938

0800da38 <_ZNK8touchgfx9ConstFont4findEt>:
 800da38:	b5f0      	push	{r4, r5, r6, r7, lr}
 800da3a:	6904      	ldr	r4, [r0, #16]
 800da3c:	b3bc      	cbz	r4, 800daae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800da3e:	88a3      	ldrh	r3, [r4, #4]
 800da40:	8a82      	ldrh	r2, [r0, #20]
 800da42:	1acb      	subs	r3, r1, r3
 800da44:	f102 32ff 	add.w	r2, r2, #4294967295
 800da48:	d431      	bmi.n	800daae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800da4a:	4293      	cmp	r3, r2
 800da4c:	dd0c      	ble.n	800da68 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800da4e:	230e      	movs	r3, #14
 800da50:	fb03 4302 	mla	r3, r3, r2, r4
 800da54:	889b      	ldrh	r3, [r3, #4]
 800da56:	1a5b      	subs	r3, r3, r1
 800da58:	1ad3      	subs	r3, r2, r3
 800da5a:	429a      	cmp	r2, r3
 800da5c:	db27      	blt.n	800daae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800da5e:	2b00      	cmp	r3, #0
 800da60:	bfbc      	itt	lt
 800da62:	2302      	movlt	r3, #2
 800da64:	fb92 f3f3 	sdivlt	r3, r2, r3
 800da68:	2500      	movs	r5, #0
 800da6a:	260e      	movs	r6, #14
 800da6c:	4295      	cmp	r5, r2
 800da6e:	dc1e      	bgt.n	800daae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800da70:	fb06 4003 	mla	r0, r6, r3, r4
 800da74:	8887      	ldrh	r7, [r0, #4]
 800da76:	42b9      	cmp	r1, r7
 800da78:	d01a      	beq.n	800dab0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800da7a:	d20d      	bcs.n	800da98 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800da7c:	1e5a      	subs	r2, r3, #1
 800da7e:	4295      	cmp	r5, r2
 800da80:	dc15      	bgt.n	800daae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800da82:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800da86:	1a5b      	subs	r3, r3, r1
 800da88:	1ad3      	subs	r3, r2, r3
 800da8a:	429a      	cmp	r2, r3
 800da8c:	db0f      	blt.n	800daae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800da8e:	429d      	cmp	r5, r3
 800da90:	ddec      	ble.n	800da6c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800da92:	1953      	adds	r3, r2, r5
 800da94:	105b      	asrs	r3, r3, #1
 800da96:	e7e9      	b.n	800da6c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800da98:	1c5d      	adds	r5, r3, #1
 800da9a:	42aa      	cmp	r2, r5
 800da9c:	db07      	blt.n	800daae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800da9e:	8a43      	ldrh	r3, [r0, #18]
 800daa0:	1acb      	subs	r3, r1, r3
 800daa2:	442b      	add	r3, r5
 800daa4:	429d      	cmp	r5, r3
 800daa6:	dc02      	bgt.n	800daae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800daa8:	429a      	cmp	r2, r3
 800daaa:	dadf      	bge.n	800da6c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800daac:	e7f1      	b.n	800da92 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800daae:	2000      	movs	r0, #0
 800dab0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800dab2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800dab2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dab4:	4604      	mov	r4, r0
 800dab6:	4617      	mov	r7, r2
 800dab8:	461e      	mov	r6, r3
 800daba:	b911      	cbnz	r1, 800dac2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800dabc:	2500      	movs	r5, #0
 800dabe:	4628      	mov	r0, r5
 800dac0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dac2:	290a      	cmp	r1, #10
 800dac4:	d0fa      	beq.n	800dabc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800dac6:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800daca:	4291      	cmp	r1, r2
 800dacc:	d0f6      	beq.n	800dabc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800dace:	f242 020b 	movw	r2, #8203	; 0x200b
 800dad2:	4291      	cmp	r1, r2
 800dad4:	d0f2      	beq.n	800dabc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800dad6:	f7ff ffaf 	bl	800da38 <_ZNK8touchgfx9ConstFont4findEt>
 800dada:	4605      	mov	r5, r0
 800dadc:	b950      	cbnz	r0, 800daf4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800dade:	6823      	ldr	r3, [r4, #0]
 800dae0:	4620      	mov	r0, r4
 800dae2:	691b      	ldr	r3, [r3, #16]
 800dae4:	4798      	blx	r3
 800dae6:	4601      	mov	r1, r0
 800dae8:	4620      	mov	r0, r4
 800daea:	f7ff ffa5 	bl	800da38 <_ZNK8touchgfx9ConstFont4findEt>
 800daee:	4605      	mov	r5, r0
 800daf0:	2800      	cmp	r0, #0
 800daf2:	d0e3      	beq.n	800dabc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800daf4:	6823      	ldr	r3, [r4, #0]
 800daf6:	4629      	mov	r1, r5
 800daf8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800dafa:	4620      	mov	r0, r4
 800dafc:	4798      	blx	r3
 800dafe:	6038      	str	r0, [r7, #0]
 800db00:	6823      	ldr	r3, [r4, #0]
 800db02:	4620      	mov	r0, r4
 800db04:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800db06:	4798      	blx	r3
 800db08:	7030      	strb	r0, [r6, #0]
 800db0a:	e7d8      	b.n	800dabe <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800db0c <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800db0c:	2000      	movs	r0, #0
 800db0e:	4770      	bx	lr

0800db10 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800db10:	2001      	movs	r0, #1
 800db12:	4770      	bx	lr

0800db14 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800db14:	2002      	movs	r0, #2
 800db16:	4770      	bx	lr

0800db18 <_ZN8touchgfx6ScreenD1Ev>:
 800db18:	4770      	bx	lr

0800db1a <_ZN8touchgfx12GestureEventD1Ev>:
 800db1a:	4770      	bx	lr

0800db1c <_ZN8touchgfx9DragEventD1Ev>:
 800db1c:	4770      	bx	lr

0800db1e <_ZN8touchgfx10ClickEventD1Ev>:
 800db1e:	4770      	bx	lr

0800db20 <_ZN8touchgfx10ClickEventD0Ev>:
 800db20:	b510      	push	{r4, lr}
 800db22:	210c      	movs	r1, #12
 800db24:	4604      	mov	r4, r0
 800db26:	f00d ff4a 	bl	801b9be <_ZdlPvj>
 800db2a:	4620      	mov	r0, r4
 800db2c:	bd10      	pop	{r4, pc}

0800db2e <_ZN8touchgfx9DragEventD0Ev>:
 800db2e:	b510      	push	{r4, lr}
 800db30:	2110      	movs	r1, #16
 800db32:	4604      	mov	r4, r0
 800db34:	f00d ff43 	bl	801b9be <_ZdlPvj>
 800db38:	4620      	mov	r0, r4
 800db3a:	bd10      	pop	{r4, pc}

0800db3c <_ZN8touchgfx12GestureEventD0Ev>:
 800db3c:	b510      	push	{r4, lr}
 800db3e:	210c      	movs	r1, #12
 800db40:	4604      	mov	r4, r0
 800db42:	f00d ff3c 	bl	801b9be <_ZdlPvj>
 800db46:	4620      	mov	r0, r4
 800db48:	bd10      	pop	{r4, pc}

0800db4a <_ZN8touchgfx6ScreenD0Ev>:
 800db4a:	b510      	push	{r4, lr}
 800db4c:	213c      	movs	r1, #60	; 0x3c
 800db4e:	4604      	mov	r4, r0
 800db50:	f00d ff35 	bl	801b9be <_ZdlPvj>
 800db54:	4620      	mov	r0, r4
 800db56:	bd10      	pop	{r4, pc}

0800db58 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800db58:	b530      	push	{r4, r5, lr}
 800db5a:	460d      	mov	r5, r1
 800db5c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800db5e:	b087      	sub	sp, #28
 800db60:	4604      	mov	r4, r0
 800db62:	b301      	cbz	r1, 800dba6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800db64:	a801      	add	r0, sp, #4
 800db66:	f7ff ff33 	bl	800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800db6a:	892a      	ldrh	r2, [r5, #8]
 800db6c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800db70:	7928      	ldrb	r0, [r5, #4]
 800db72:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800db76:	f88d 0010 	strb.w	r0, [sp, #16]
 800db7a:	1ad2      	subs	r2, r2, r3
 800db7c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800db7e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800db80:	f8ad 1012 	strh.w	r1, [sp, #18]
 800db84:	441a      	add	r2, r3
 800db86:	896b      	ldrh	r3, [r5, #10]
 800db88:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800db8c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800db90:	1b5b      	subs	r3, r3, r5
 800db92:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800db94:	442b      	add	r3, r5
 800db96:	4d05      	ldr	r5, [pc, #20]	; (800dbac <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800db98:	9503      	str	r5, [sp, #12]
 800db9a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800db9e:	6803      	ldr	r3, [r0, #0]
 800dba0:	a903      	add	r1, sp, #12
 800dba2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dba4:	4798      	blx	r3
 800dba6:	b007      	add	sp, #28
 800dba8:	bd30      	pop	{r4, r5, pc}
 800dbaa:	bf00      	nop
 800dbac:	0801f9b8 	.word	0x0801f9b8

0800dbb0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800dbb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dbb4:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800dbb6:	b08a      	sub	sp, #40	; 0x28
 800dbb8:	4604      	mov	r4, r0
 800dbba:	460d      	mov	r5, r1
 800dbbc:	b113      	cbz	r3, 800dbc4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800dbbe:	790b      	ldrb	r3, [r1, #4]
 800dbc0:	2b00      	cmp	r3, #0
 800dbc2:	d044      	beq.n	800dc4e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dbc4:	f104 0804 	add.w	r8, r4, #4
 800dbc8:	4641      	mov	r1, r8
 800dbca:	a803      	add	r0, sp, #12
 800dbcc:	f7ff ff00 	bl	800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dbd0:	792b      	ldrb	r3, [r5, #4]
 800dbd2:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800dbd6:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800dbda:	b983      	cbnz	r3, 800dbfe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800dbdc:	892a      	ldrh	r2, [r5, #8]
 800dbde:	88e9      	ldrh	r1, [r5, #6]
 800dbe0:	f104 0336 	add.w	r3, r4, #54	; 0x36
 800dbe4:	1b92      	subs	r2, r2, r6
 800dbe6:	1bc9      	subs	r1, r1, r7
 800dbe8:	9301      	str	r3, [sp, #4]
 800dbea:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800dbee:	9300      	str	r3, [sp, #0]
 800dbf0:	b212      	sxth	r2, r2
 800dbf2:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800dbf6:	b209      	sxth	r1, r1
 800dbf8:	4640      	mov	r0, r8
 800dbfa:	f7fb fce9 	bl	80095d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800dbfe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800dc00:	b329      	cbz	r1, 800dc4e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dc02:	a805      	add	r0, sp, #20
 800dc04:	f7ff fee4 	bl	800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dc08:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800dc0c:	792b      	ldrb	r3, [r5, #4]
 800dc0e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800dc10:	f88d 3020 	strb.w	r3, [sp, #32]
 800dc14:	1abf      	subs	r7, r7, r2
 800dc16:	88ea      	ldrh	r2, [r5, #6]
 800dc18:	4417      	add	r7, r2
 800dc1a:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800dc1c:	4417      	add	r7, r2
 800dc1e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800dc22:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800dc26:	1ab6      	subs	r6, r6, r2
 800dc28:	892a      	ldrh	r2, [r5, #8]
 800dc2a:	4416      	add	r6, r2
 800dc2c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800dc2e:	4416      	add	r6, r2
 800dc30:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800dc34:	4a07      	ldr	r2, [pc, #28]	; (800dc54 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800dc36:	9207      	str	r2, [sp, #28]
 800dc38:	2600      	movs	r6, #0
 800dc3a:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800dc3e:	6803      	ldr	r3, [r0, #0]
 800dc40:	a907      	add	r1, sp, #28
 800dc42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dc44:	4798      	blx	r3
 800dc46:	792b      	ldrb	r3, [r5, #4]
 800dc48:	b10b      	cbz	r3, 800dc4e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dc4a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800dc4e:	b00a      	add	sp, #40	; 0x28
 800dc50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc54:	0801f990 	.word	0x0801f990

0800dc58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800dc58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dc5c:	460c      	mov	r4, r1
 800dc5e:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800dc60:	b088      	sub	sp, #32
 800dc62:	4605      	mov	r5, r0
 800dc64:	2900      	cmp	r1, #0
 800dc66:	d06d      	beq.n	800dd44 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800dc68:	4668      	mov	r0, sp
 800dc6a:	f7ff feb1 	bl	800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dc6e:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 800dc70:	88e3      	ldrh	r3, [r4, #6]
 800dc72:	f9bd 8000 	ldrsh.w	r8, [sp]
 800dc76:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800dc7a:	440b      	add	r3, r1
 800dc7c:	b21b      	sxth	r3, r3
 800dc7e:	4543      	cmp	r3, r8
 800dc80:	db31      	blt.n	800dce6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dc82:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800dc86:	44c4      	add	ip, r8
 800dc88:	fa0f fc8c 	sxth.w	ip, ip
 800dc8c:	4563      	cmp	r3, ip
 800dc8e:	da2a      	bge.n	800dce6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dc90:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 800dc92:	8926      	ldrh	r6, [r4, #8]
 800dc94:	4416      	add	r6, r2
 800dc96:	b236      	sxth	r6, r6
 800dc98:	42be      	cmp	r6, r7
 800dc9a:	db24      	blt.n	800dce6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dc9c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800dca0:	4438      	add	r0, r7
 800dca2:	b200      	sxth	r0, r0
 800dca4:	4286      	cmp	r6, r0
 800dca6:	da1e      	bge.n	800dce6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dca8:	8963      	ldrh	r3, [r4, #10]
 800dcaa:	4419      	add	r1, r3
 800dcac:	b209      	sxth	r1, r1
 800dcae:	4541      	cmp	r1, r8
 800dcb0:	db08      	blt.n	800dcc4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800dcb2:	4561      	cmp	r1, ip
 800dcb4:	da06      	bge.n	800dcc4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800dcb6:	89a3      	ldrh	r3, [r4, #12]
 800dcb8:	441a      	add	r2, r3
 800dcba:	b212      	sxth	r2, r2
 800dcbc:	42ba      	cmp	r2, r7
 800dcbe:	db01      	blt.n	800dcc4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800dcc0:	4282      	cmp	r2, r0
 800dcc2:	db10      	blt.n	800dce6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dcc4:	4b21      	ldr	r3, [pc, #132]	; (800dd4c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800dcc6:	9304      	str	r3, [sp, #16]
 800dcc8:	2302      	movs	r3, #2
 800dcca:	f88d 3014 	strb.w	r3, [sp, #20]
 800dcce:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800dcd0:	2300      	movs	r3, #0
 800dcd2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dcd6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800dcda:	f8ad 301a 	strh.w	r3, [sp, #26]
 800dcde:	6803      	ldr	r3, [r0, #0]
 800dce0:	a904      	add	r1, sp, #16
 800dce2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dce4:	4798      	blx	r3
 800dce6:	1d29      	adds	r1, r5, #4
 800dce8:	a802      	add	r0, sp, #8
 800dcea:	f7ff fe71 	bl	800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dcee:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800dcf2:	88e0      	ldrh	r0, [r4, #6]
 800dcf4:	7921      	ldrb	r1, [r4, #4]
 800dcf6:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800dcfa:	8922      	ldrh	r2, [r4, #8]
 800dcfc:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800dcfe:	f88d 1014 	strb.w	r1, [sp, #20]
 800dd02:	eba3 0808 	sub.w	r8, r3, r8
 800dd06:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800dd0a:	1bdf      	subs	r7, r3, r7
 800dd0c:	b2bb      	uxth	r3, r7
 800dd0e:	fa1f f888 	uxth.w	r8, r8
 800dd12:	8967      	ldrh	r7, [r4, #10]
 800dd14:	89a4      	ldrh	r4, [r4, #12]
 800dd16:	4440      	add	r0, r8
 800dd18:	4460      	add	r0, ip
 800dd1a:	441a      	add	r2, r3
 800dd1c:	44b8      	add	r8, r7
 800dd1e:	4423      	add	r3, r4
 800dd20:	f8ad 0016 	strh.w	r0, [sp, #22]
 800dd24:	4433      	add	r3, r6
 800dd26:	4432      	add	r2, r6
 800dd28:	44e0      	add	r8, ip
 800dd2a:	4c09      	ldr	r4, [pc, #36]	; (800dd50 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800dd2c:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800dd2e:	9404      	str	r4, [sp, #16]
 800dd30:	f8ad 2018 	strh.w	r2, [sp, #24]
 800dd34:	f8ad 801a 	strh.w	r8, [sp, #26]
 800dd38:	f8ad 301c 	strh.w	r3, [sp, #28]
 800dd3c:	6803      	ldr	r3, [r0, #0]
 800dd3e:	a904      	add	r1, sp, #16
 800dd40:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dd42:	4798      	blx	r3
 800dd44:	b008      	add	sp, #32
 800dd46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dd4a:	bf00      	nop
 800dd4c:	0801f990 	.word	0x0801f990
 800dd50:	0801f9a4 	.word	0x0801f9a4

0800dd54 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800dd54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dd56:	4604      	mov	r4, r0
 800dd58:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800dd5c:	3201      	adds	r2, #1
 800dd5e:	d112      	bne.n	800dd86 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800dd60:	6803      	ldr	r3, [r0, #0]
 800dd62:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800dd66:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800dd6a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800dd6e:	2500      	movs	r5, #0
 800dd70:	9500      	str	r5, [sp, #0]
 800dd72:	466d      	mov	r5, sp
 800dd74:	4629      	mov	r1, r5
 800dd76:	f8ad 2006 	strh.w	r2, [sp, #6]
 800dd7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dd7c:	4798      	blx	r3
 800dd7e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800dd82:	e884 0003 	stmia.w	r4, {r0, r1}
 800dd86:	4620      	mov	r0, r4
 800dd88:	b003      	add	sp, #12
 800dd8a:	bd30      	pop	{r4, r5, pc}

0800dd8c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800dd8c:	b513      	push	{r0, r1, r4, lr}
 800dd8e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800dd92:	3301      	adds	r3, #1
 800dd94:	4604      	mov	r4, r0
 800dd96:	d109      	bne.n	800ddac <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800dd98:	4601      	mov	r1, r0
 800dd9a:	4668      	mov	r0, sp
 800dd9c:	f7ff fe18 	bl	800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dda0:	f8bd 3000 	ldrh.w	r3, [sp]
 800dda4:	8423      	strh	r3, [r4, #32]
 800dda6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ddaa:	8463      	strh	r3, [r4, #34]	; 0x22
 800ddac:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800ddb0:	b002      	add	sp, #8
 800ddb2:	bd10      	pop	{r4, pc}

0800ddb4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800ddb4:	b513      	push	{r0, r1, r4, lr}
 800ddb6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800ddba:	3301      	adds	r3, #1
 800ddbc:	4604      	mov	r4, r0
 800ddbe:	d109      	bne.n	800ddd4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800ddc0:	4601      	mov	r1, r0
 800ddc2:	4668      	mov	r0, sp
 800ddc4:	f7ff fe04 	bl	800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ddc8:	f8bd 3000 	ldrh.w	r3, [sp]
 800ddcc:	8423      	strh	r3, [r4, #32]
 800ddce:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ddd2:	8463      	strh	r3, [r4, #34]	; 0x22
 800ddd4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800ddd8:	b002      	add	sp, #8
 800ddda:	bd10      	pop	{r4, pc}

0800dddc <_ZN8touchgfx6ScreenC1Ev>:
 800dddc:	b570      	push	{r4, r5, r6, lr}
 800ddde:	4605      	mov	r5, r0
 800dde0:	4b16      	ldr	r3, [pc, #88]	; (800de3c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800dde2:	f845 3b04 	str.w	r3, [r5], #4
 800dde6:	2300      	movs	r3, #0
 800dde8:	8103      	strh	r3, [r0, #8]
 800ddea:	8143      	strh	r3, [r0, #10]
 800ddec:	8183      	strh	r3, [r0, #12]
 800ddee:	81c3      	strh	r3, [r0, #14]
 800ddf0:	8203      	strh	r3, [r0, #16]
 800ddf2:	8243      	strh	r3, [r0, #18]
 800ddf4:	8283      	strh	r3, [r0, #20]
 800ddf6:	82c3      	strh	r3, [r0, #22]
 800ddf8:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800ddfc:	6203      	str	r3, [r0, #32]
 800ddfe:	8483      	strh	r3, [r0, #36]	; 0x24
 800de00:	84c3      	strh	r3, [r0, #38]	; 0x26
 800de02:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800de06:	4a0e      	ldr	r2, [pc, #56]	; (800de40 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800de08:	6343      	str	r3, [r0, #52]	; 0x34
 800de0a:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800de0e:	4b0d      	ldr	r3, [pc, #52]	; (800de44 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800de10:	6042      	str	r2, [r0, #4]
 800de12:	f9b3 6000 	ldrsh.w	r6, [r3]
 800de16:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800de18:	4a0b      	ldr	r2, [pc, #44]	; (800de48 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800de1a:	4604      	mov	r4, r0
 800de1c:	2101      	movs	r1, #1
 800de1e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800de22:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800de26:	f9b2 1000 	ldrsh.w	r1, [r2]
 800de2a:	4628      	mov	r0, r5
 800de2c:	4798      	blx	r3
 800de2e:	6863      	ldr	r3, [r4, #4]
 800de30:	4628      	mov	r0, r5
 800de32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800de34:	4631      	mov	r1, r6
 800de36:	4798      	blx	r3
 800de38:	4620      	mov	r0, r4
 800de3a:	bd70      	pop	{r4, r5, r6, pc}
 800de3c:	0801f9cc 	.word	0x0801f9cc
 800de40:	0801ebdc 	.word	0x0801ebdc
 800de44:	200134fe 	.word	0x200134fe
 800de48:	200134fc 	.word	0x200134fc

0800de4c <_ZN8touchgfx6Screen4drawEv>:
 800de4c:	b507      	push	{r0, r1, r2, lr}
 800de4e:	4b09      	ldr	r3, [pc, #36]	; (800de74 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800de50:	f9b3 2000 	ldrsh.w	r2, [r3]
 800de54:	4b08      	ldr	r3, [pc, #32]	; (800de78 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800de56:	f8ad 2004 	strh.w	r2, [sp, #4]
 800de5a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800de5e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800de62:	6803      	ldr	r3, [r0, #0]
 800de64:	2100      	movs	r1, #0
 800de66:	9100      	str	r1, [sp, #0]
 800de68:	689b      	ldr	r3, [r3, #8]
 800de6a:	4669      	mov	r1, sp
 800de6c:	4798      	blx	r3
 800de6e:	b003      	add	sp, #12
 800de70:	f85d fb04 	ldr.w	pc, [sp], #4
 800de74:	200134fc 	.word	0x200134fc
 800de78:	200134fe 	.word	0x200134fe

0800de7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800de7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de80:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800de84:	2b00      	cmp	r3, #0
 800de86:	b089      	sub	sp, #36	; 0x24
 800de88:	4680      	mov	r8, r0
 800de8a:	460c      	mov	r4, r1
 800de8c:	4615      	mov	r5, r2
 800de8e:	dd0e      	ble.n	800deae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800de90:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800de94:	2b00      	cmp	r3, #0
 800de96:	dd0a      	ble.n	800deae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800de98:	4628      	mov	r0, r5
 800de9a:	f7ff ff5b 	bl	800dd54 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800de9e:	4621      	mov	r1, r4
 800dea0:	f7fe fcf2 	bl	800c888 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800dea4:	69eb      	ldr	r3, [r5, #28]
 800dea6:	b928      	cbnz	r0, 800deb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800dea8:	461d      	mov	r5, r3
 800deaa:	2b00      	cmp	r3, #0
 800deac:	d1f4      	bne.n	800de98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800deae:	b009      	add	sp, #36	; 0x24
 800deb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800deb4:	ae04      	add	r6, sp, #16
 800deb6:	2b00      	cmp	r3, #0
 800deb8:	f000 80b5 	beq.w	800e026 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800debc:	682b      	ldr	r3, [r5, #0]
 800debe:	4629      	mov	r1, r5
 800dec0:	68db      	ldr	r3, [r3, #12]
 800dec2:	a802      	add	r0, sp, #8
 800dec4:	4798      	blx	r3
 800dec6:	4628      	mov	r0, r5
 800dec8:	f7ff ff60 	bl	800dd8c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800decc:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800ded0:	4407      	add	r7, r0
 800ded2:	4628      	mov	r0, r5
 800ded4:	f7ff ff6e 	bl	800ddb4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800ded8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800dedc:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800dee0:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dee4:	4418      	add	r0, r3
 800dee6:	4621      	mov	r1, r4
 800dee8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800deec:	f8ad 0012 	strh.w	r0, [sp, #18]
 800def0:	b23f      	sxth	r7, r7
 800def2:	4630      	mov	r0, r6
 800def4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800def8:	f8ad 7010 	strh.w	r7, [sp, #16]
 800defc:	f7fb fc4c 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 800df00:	4628      	mov	r0, r5
 800df02:	f7ff ff27 	bl	800dd54 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800df06:	4602      	mov	r2, r0
 800df08:	e896 0003 	ldmia.w	r6, {r0, r1}
 800df0c:	ab06      	add	r3, sp, #24
 800df0e:	e883 0003 	stmia.w	r3, {r0, r1}
 800df12:	4611      	mov	r1, r2
 800df14:	4618      	mov	r0, r3
 800df16:	f7fb fc3f 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 800df1a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800df1e:	f9b4 1000 	ldrsh.w	r1, [r4]
 800df22:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800df26:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800df2a:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800df2e:	4299      	cmp	r1, r3
 800df30:	d10b      	bne.n	800df4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800df32:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800df36:	4552      	cmp	r2, sl
 800df38:	d107      	bne.n	800df4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800df3a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800df3e:	455a      	cmp	r2, fp
 800df40:	d103      	bne.n	800df4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800df42:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800df46:	454a      	cmp	r2, r9
 800df48:	d06d      	beq.n	800e026 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800df4a:	f1bb 0f00 	cmp.w	fp, #0
 800df4e:	dd65      	ble.n	800e01c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800df50:	f1b9 0f00 	cmp.w	r9, #0
 800df54:	dd62      	ble.n	800e01c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800df56:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800df5a:	fa1f f08a 	uxth.w	r0, sl
 800df5e:	4552      	cmp	r2, sl
 800df60:	9000      	str	r0, [sp, #0]
 800df62:	da12      	bge.n	800df8a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800df64:	9301      	str	r3, [sp, #4]
 800df66:	9b00      	ldr	r3, [sp, #0]
 800df68:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800df6c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800df70:	1a9a      	subs	r2, r3, r2
 800df72:	f8ad 1010 	strh.w	r1, [sp, #16]
 800df76:	f8ad 0014 	strh.w	r0, [sp, #20]
 800df7a:	f8ad 2016 	strh.w	r2, [sp, #22]
 800df7e:	69ea      	ldr	r2, [r5, #28]
 800df80:	4631      	mov	r1, r6
 800df82:	4640      	mov	r0, r8
 800df84:	f7ff ff7a 	bl	800de7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800df88:	9b01      	ldr	r3, [sp, #4]
 800df8a:	f9b4 2000 	ldrsh.w	r2, [r4]
 800df8e:	429a      	cmp	r2, r3
 800df90:	b29f      	uxth	r7, r3
 800df92:	da0d      	bge.n	800dfb0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800df94:	f8ad 2010 	strh.w	r2, [sp, #16]
 800df98:	1aba      	subs	r2, r7, r2
 800df9a:	f8ad a012 	strh.w	sl, [sp, #18]
 800df9e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dfa2:	f8ad 9016 	strh.w	r9, [sp, #22]
 800dfa6:	69ea      	ldr	r2, [r5, #28]
 800dfa8:	4631      	mov	r1, r6
 800dfaa:	4640      	mov	r0, r8
 800dfac:	f7ff ff66 	bl	800de7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800dfb0:	8822      	ldrh	r2, [r4, #0]
 800dfb2:	88a3      	ldrh	r3, [r4, #4]
 800dfb4:	445f      	add	r7, fp
 800dfb6:	4413      	add	r3, r2
 800dfb8:	b29b      	uxth	r3, r3
 800dfba:	b2bf      	uxth	r7, r7
 800dfbc:	b23a      	sxth	r2, r7
 800dfbe:	b219      	sxth	r1, r3
 800dfc0:	4291      	cmp	r1, r2
 800dfc2:	dd0d      	ble.n	800dfe0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800dfc4:	1bdb      	subs	r3, r3, r7
 800dfc6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800dfca:	f8ad a012 	strh.w	sl, [sp, #18]
 800dfce:	f8ad 3014 	strh.w	r3, [sp, #20]
 800dfd2:	f8ad 9016 	strh.w	r9, [sp, #22]
 800dfd6:	69ea      	ldr	r2, [r5, #28]
 800dfd8:	4631      	mov	r1, r6
 800dfda:	4640      	mov	r0, r8
 800dfdc:	f7ff ff4e 	bl	800de7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800dfe0:	88e2      	ldrh	r2, [r4, #6]
 800dfe2:	8863      	ldrh	r3, [r4, #2]
 800dfe4:	4413      	add	r3, r2
 800dfe6:	9a00      	ldr	r2, [sp, #0]
 800dfe8:	444a      	add	r2, r9
 800dfea:	b29b      	uxth	r3, r3
 800dfec:	fa1f f982 	uxth.w	r9, r2
 800dff0:	fa0f f289 	sxth.w	r2, r9
 800dff4:	b219      	sxth	r1, r3
 800dff6:	428a      	cmp	r2, r1
 800dff8:	da15      	bge.n	800e026 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800dffa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800dffe:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e002:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e006:	eba3 0309 	sub.w	r3, r3, r9
 800e00a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e00e:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e012:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e016:	69ea      	ldr	r2, [r5, #28]
 800e018:	4631      	mov	r1, r6
 800e01a:	e001      	b.n	800e020 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800e01c:	69ea      	ldr	r2, [r5, #28]
 800e01e:	4621      	mov	r1, r4
 800e020:	4640      	mov	r0, r8
 800e022:	f7ff ff2b 	bl	800de7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e026:	4628      	mov	r0, r5
 800e028:	f7ff fe94 	bl	800dd54 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e02c:	6861      	ldr	r1, [r4, #4]
 800e02e:	4602      	mov	r2, r0
 800e030:	6820      	ldr	r0, [r4, #0]
 800e032:	4633      	mov	r3, r6
 800e034:	c303      	stmia	r3!, {r0, r1}
 800e036:	4611      	mov	r1, r2
 800e038:	4630      	mov	r0, r6
 800e03a:	f7fb fbad 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 800e03e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e042:	2b00      	cmp	r3, #0
 800e044:	f77f af33 	ble.w	800deae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e048:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e04c:	2b00      	cmp	r3, #0
 800e04e:	f77f af2e 	ble.w	800deae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e052:	4628      	mov	r0, r5
 800e054:	f7ff fe9a 	bl	800dd8c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e058:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e05c:	1a18      	subs	r0, r3, r0
 800e05e:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e062:	4628      	mov	r0, r5
 800e064:	f7ff fea6 	bl	800ddb4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e068:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e06c:	1a18      	subs	r0, r3, r0
 800e06e:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e072:	682b      	ldr	r3, [r5, #0]
 800e074:	4631      	mov	r1, r6
 800e076:	689b      	ldr	r3, [r3, #8]
 800e078:	4628      	mov	r0, r5
 800e07a:	4798      	blx	r3
 800e07c:	e717      	b.n	800deae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800e07e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e07e:	b570      	push	{r4, r5, r6, lr}
 800e080:	460c      	mov	r4, r1
 800e082:	b086      	sub	sp, #24
 800e084:	1d06      	adds	r6, r0, #4
 800e086:	2300      	movs	r3, #0
 800e088:	4631      	mov	r1, r6
 800e08a:	4605      	mov	r5, r0
 800e08c:	a802      	add	r0, sp, #8
 800e08e:	9301      	str	r3, [sp, #4]
 800e090:	f7ff fc9e 	bl	800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e094:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e098:	8822      	ldrh	r2, [r4, #0]
 800e09a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800e09e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e0a2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e0a6:	1ad2      	subs	r2, r2, r3
 800e0a8:	8863      	ldrh	r3, [r4, #2]
 800e0aa:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e0ae:	1a5b      	subs	r3, r3, r1
 800e0b0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800e0b4:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e0b8:	aa01      	add	r2, sp, #4
 800e0ba:	a904      	add	r1, sp, #16
 800e0bc:	4630      	mov	r0, r6
 800e0be:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e0c2:	f7fb fc41 	bl	8009948 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e0c6:	9a01      	ldr	r2, [sp, #4]
 800e0c8:	b11a      	cbz	r2, 800e0d2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800e0ca:	4621      	mov	r1, r4
 800e0cc:	4628      	mov	r0, r5
 800e0ce:	f7ff fed5 	bl	800de7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e0d2:	b006      	add	sp, #24
 800e0d4:	bd70      	pop	{r4, r5, r6, pc}

0800e0d6 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e0d6:	b530      	push	{r4, r5, lr}
 800e0d8:	4602      	mov	r2, r0
 800e0da:	4604      	mov	r4, r0
 800e0dc:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e0e0:	b085      	sub	sp, #20
 800e0e2:	460d      	mov	r5, r1
 800e0e4:	6851      	ldr	r1, [r2, #4]
 800e0e6:	466b      	mov	r3, sp
 800e0e8:	c303      	stmia	r3!, {r0, r1}
 800e0ea:	4629      	mov	r1, r5
 800e0ec:	4668      	mov	r0, sp
 800e0ee:	f7fb fb53 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 800e0f2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e0f6:	b12b      	cbz	r3, 800e104 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800e0f8:	4669      	mov	r1, sp
 800e0fa:	4620      	mov	r0, r4
 800e0fc:	f7ff ffbf 	bl	800e07e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e100:	b005      	add	sp, #20
 800e102:	bd30      	pop	{r4, r5, pc}
 800e104:	3404      	adds	r4, #4
 800e106:	4621      	mov	r1, r4
 800e108:	a802      	add	r0, sp, #8
 800e10a:	f7ff fc61 	bl	800d9d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e10e:	f8bd 3000 	ldrh.w	r3, [sp]
 800e112:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e116:	1a9b      	subs	r3, r3, r2
 800e118:	f8ad 3000 	strh.w	r3, [sp]
 800e11c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800e120:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e124:	4669      	mov	r1, sp
 800e126:	1a9b      	subs	r3, r3, r2
 800e128:	4620      	mov	r0, r4
 800e12a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e12e:	f7fb fbd2 	bl	80098d6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e132:	e7e5      	b.n	800e100 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800e134 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e134:	680a      	ldr	r2, [r1, #0]
 800e136:	460b      	mov	r3, r1
 800e138:	6992      	ldr	r2, [r2, #24]
 800e13a:	1d01      	adds	r1, r0, #4
 800e13c:	4618      	mov	r0, r3
 800e13e:	4710      	bx	r2

0800e140 <_ZN8touchgfx12TextProviderC1Ev>:
 800e140:	b538      	push	{r3, r4, r5, lr}
 800e142:	2500      	movs	r5, #0
 800e144:	2302      	movs	r3, #2
 800e146:	4604      	mov	r4, r0
 800e148:	e9c0 5500 	strd	r5, r5, [r0]
 800e14c:	7403      	strb	r3, [r0, #16]
 800e14e:	6145      	str	r5, [r0, #20]
 800e150:	7605      	strb	r5, [r0, #24]
 800e152:	83c5      	strh	r5, [r0, #30]
 800e154:	8405      	strh	r5, [r0, #32]
 800e156:	86c5      	strh	r5, [r0, #54]	; 0x36
 800e158:	8705      	strh	r5, [r0, #56]	; 0x38
 800e15a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800e15c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800e160:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800e164:	220e      	movs	r2, #14
 800e166:	4629      	mov	r1, r5
 800e168:	304c      	adds	r0, #76	; 0x4c
 800e16a:	f00d fce3 	bl	801bb34 <memset>
 800e16e:	2301      	movs	r3, #1
 800e170:	4620      	mov	r0, r4
 800e172:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800e176:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e17a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800e17e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800e182:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800e186:	f7f4 fb17 	bl	80027b8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800e18a:	4620      	mov	r0, r4
 800e18c:	bd38      	pop	{r3, r4, r5, pc}

0800e18e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e18e:	b530      	push	{r4, r5, lr}
 800e190:	2500      	movs	r5, #0
 800e192:	2401      	movs	r4, #1
 800e194:	6843      	ldr	r3, [r0, #4]
 800e196:	b913      	cbnz	r3, 800e19e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e198:	6803      	ldr	r3, [r0, #0]
 800e19a:	b313      	cbz	r3, 800e1e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e19c:	6043      	str	r3, [r0, #4]
 800e19e:	7e03      	ldrb	r3, [r0, #24]
 800e1a0:	b143      	cbz	r3, 800e1b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e1a2:	6943      	ldr	r3, [r0, #20]
 800e1a4:	b12b      	cbz	r3, 800e1b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e1a6:	881a      	ldrh	r2, [r3, #0]
 800e1a8:	b11a      	cbz	r2, 800e1b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e1aa:	1c9a      	adds	r2, r3, #2
 800e1ac:	6142      	str	r2, [r0, #20]
 800e1ae:	8818      	ldrh	r0, [r3, #0]
 800e1b0:	bd30      	pop	{r4, r5, pc}
 800e1b2:	7605      	strb	r5, [r0, #24]
 800e1b4:	6843      	ldr	r3, [r0, #4]
 800e1b6:	8819      	ldrh	r1, [r3, #0]
 800e1b8:	b199      	cbz	r1, 800e1e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e1ba:	1c9a      	adds	r2, r3, #2
 800e1bc:	2902      	cmp	r1, #2
 800e1be:	6042      	str	r2, [r0, #4]
 800e1c0:	d1f5      	bne.n	800e1ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e1c2:	7c03      	ldrb	r3, [r0, #16]
 800e1c4:	2b01      	cmp	r3, #1
 800e1c6:	d8e5      	bhi.n	800e194 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e1c8:	1c5a      	adds	r2, r3, #1
 800e1ca:	3302      	adds	r3, #2
 800e1cc:	7402      	strb	r2, [r0, #16]
 800e1ce:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800e1d2:	6143      	str	r3, [r0, #20]
 800e1d4:	2b00      	cmp	r3, #0
 800e1d6:	d0dd      	beq.n	800e194 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e1d8:	881b      	ldrh	r3, [r3, #0]
 800e1da:	2b00      	cmp	r3, #0
 800e1dc:	d0da      	beq.n	800e194 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e1de:	7604      	strb	r4, [r0, #24]
 800e1e0:	e7d8      	b.n	800e194 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e1e2:	2000      	movs	r0, #0
 800e1e4:	e7e4      	b.n	800e1b0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e1e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800e1e6:	b430      	push	{r4, r5}
 800e1e8:	6815      	ldr	r5, [r2, #0]
 800e1ea:	6085      	str	r5, [r0, #8]
 800e1ec:	6852      	ldr	r2, [r2, #4]
 800e1ee:	60c2      	str	r2, [r0, #12]
 800e1f0:	6443      	str	r3, [r0, #68]	; 0x44
 800e1f2:	2200      	movs	r2, #0
 800e1f4:	9b02      	ldr	r3, [sp, #8]
 800e1f6:	7402      	strb	r2, [r0, #16]
 800e1f8:	6001      	str	r1, [r0, #0]
 800e1fa:	6483      	str	r3, [r0, #72]	; 0x48
 800e1fc:	6042      	str	r2, [r0, #4]
 800e1fe:	6142      	str	r2, [r0, #20]
 800e200:	7602      	strb	r2, [r0, #24]
 800e202:	8702      	strh	r2, [r0, #56]	; 0x38
 800e204:	8402      	strh	r2, [r0, #32]
 800e206:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800e20a:	bc30      	pop	{r4, r5}
 800e20c:	f7f4 bad4 	b.w	80027b8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800e210 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e210:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e212:	4605      	mov	r5, r0
 800e214:	4608      	mov	r0, r1
 800e216:	b1e9      	cbz	r1, 800e254 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e218:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800e21c:	460b      	mov	r3, r1
 800e21e:	f101 0708 	add.w	r7, r1, #8
 800e222:	4622      	mov	r2, r4
 800e224:	6818      	ldr	r0, [r3, #0]
 800e226:	6859      	ldr	r1, [r3, #4]
 800e228:	4626      	mov	r6, r4
 800e22a:	c603      	stmia	r6!, {r0, r1}
 800e22c:	3308      	adds	r3, #8
 800e22e:	42bb      	cmp	r3, r7
 800e230:	4634      	mov	r4, r6
 800e232:	d1f7      	bne.n	800e224 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e234:	6818      	ldr	r0, [r3, #0]
 800e236:	6030      	str	r0, [r6, #0]
 800e238:	889b      	ldrh	r3, [r3, #4]
 800e23a:	80b3      	strh	r3, [r6, #4]
 800e23c:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800e240:	015b      	lsls	r3, r3, #5
 800e242:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e246:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800e24a:	430b      	orrs	r3, r1
 800e24c:	425b      	negs	r3, r3
 800e24e:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800e252:	4610      	mov	r0, r2
 800e254:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e256 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e256:	b538      	push	{r3, r4, r5, lr}
 800e258:	460c      	mov	r4, r1
 800e25a:	6811      	ldr	r1, [r2, #0]
 800e25c:	4610      	mov	r0, r2
 800e25e:	68cd      	ldr	r5, [r1, #12]
 800e260:	4619      	mov	r1, r3
 800e262:	47a8      	blx	r5
 800e264:	2800      	cmp	r0, #0
 800e266:	bf08      	it	eq
 800e268:	4620      	moveq	r0, r4
 800e26a:	bd38      	pop	{r3, r4, r5, pc}

0800e26c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e26c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e26e:	4604      	mov	r4, r0
 800e270:	4615      	mov	r5, r2
 800e272:	4608      	mov	r0, r1
 800e274:	b93a      	cbnz	r2, 800e286 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e276:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800e27a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800e27e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800e282:	4628      	mov	r0, r5
 800e284:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e286:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800e28a:	8893      	ldrh	r3, [r2, #4]
 800e28c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800e290:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e294:	79ee      	ldrb	r6, [r5, #7]
 800e296:	4316      	orrs	r6, r2
 800e298:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800e29c:	189a      	adds	r2, r3, r2
 800e29e:	b291      	uxth	r1, r2
 800e2a0:	291d      	cmp	r1, #29
 800e2a2:	b2b7      	uxth	r7, r6
 800e2a4:	f200 8083 	bhi.w	800e3ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e2a8:	2201      	movs	r2, #1
 800e2aa:	408a      	lsls	r2, r1
 800e2ac:	4978      	ldr	r1, [pc, #480]	; (800e490 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800e2ae:	420a      	tst	r2, r1
 800e2b0:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800e2b4:	d12d      	bne.n	800e312 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800e2b6:	f412 7f60 	tst.w	r2, #896	; 0x380
 800e2ba:	d078      	beq.n	800e3ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e2bc:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800e2c0:	462b      	mov	r3, r5
 800e2c2:	f105 0e08 	add.w	lr, r5, #8
 800e2c6:	4615      	mov	r5, r2
 800e2c8:	6818      	ldr	r0, [r3, #0]
 800e2ca:	6859      	ldr	r1, [r3, #4]
 800e2cc:	4694      	mov	ip, r2
 800e2ce:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e2d2:	3308      	adds	r3, #8
 800e2d4:	4573      	cmp	r3, lr
 800e2d6:	4662      	mov	r2, ip
 800e2d8:	d1f6      	bne.n	800e2c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800e2da:	6818      	ldr	r0, [r3, #0]
 800e2dc:	f8cc 0000 	str.w	r0, [ip]
 800e2e0:	889b      	ldrh	r3, [r3, #4]
 800e2e2:	f8ac 3004 	strh.w	r3, [ip, #4]
 800e2e6:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800e2ea:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800e2ee:	b2b3      	uxth	r3, r6
 800e2f0:	1aca      	subs	r2, r1, r3
 800e2f2:	b292      	uxth	r2, r2
 800e2f4:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800e2f8:	10d2      	asrs	r2, r2, #3
 800e2fa:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800e2fe:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800e302:	4302      	orrs	r2, r0
 800e304:	1bcf      	subs	r7, r1, r7
 800e306:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800e30a:	1afb      	subs	r3, r7, r3
 800e30c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800e310:	e7b7      	b.n	800e282 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e312:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e314:	b92b      	cbnz	r3, 800e322 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800e316:	4b5f      	ldr	r3, [pc, #380]	; (800e494 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800e318:	4a5f      	ldr	r2, [pc, #380]	; (800e498 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800e31a:	4860      	ldr	r0, [pc, #384]	; (800e49c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800e31c:	21c0      	movs	r1, #192	; 0xc0
 800e31e:	f00d fb7d 	bl	801ba1c <__assert_func>
 800e322:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e324:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e328:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800e32a:	f640 6333 	movw	r3, #3635	; 0xe33
 800e32e:	4299      	cmp	r1, r3
 800e330:	d110      	bne.n	800e354 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800e332:	6803      	ldr	r3, [r0, #0]
 800e334:	68db      	ldr	r3, [r3, #12]
 800e336:	4798      	blx	r3
 800e338:	7b41      	ldrb	r1, [r0, #13]
 800e33a:	00cb      	lsls	r3, r1, #3
 800e33c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e340:	7a03      	ldrb	r3, [r0, #8]
 800e342:	0648      	lsls	r0, r1, #25
 800e344:	ea43 0302 	orr.w	r3, r3, r2
 800e348:	bf44      	itt	mi
 800e34a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e34e:	b21b      	sxthmi	r3, r3
 800e350:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e354:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800e358:	443b      	add	r3, r7
 800e35a:	4433      	add	r3, r6
 800e35c:	b29b      	uxth	r3, r3
 800e35e:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800e362:	462a      	mov	r2, r5
 800e364:	f105 0c08 	add.w	ip, r5, #8
 800e368:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e36c:	4635      	mov	r5, r6
 800e36e:	6810      	ldr	r0, [r2, #0]
 800e370:	6851      	ldr	r1, [r2, #4]
 800e372:	4637      	mov	r7, r6
 800e374:	c703      	stmia	r7!, {r0, r1}
 800e376:	3208      	adds	r2, #8
 800e378:	4562      	cmp	r2, ip
 800e37a:	463e      	mov	r6, r7
 800e37c:	d1f7      	bne.n	800e36e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800e37e:	6810      	ldr	r0, [r2, #0]
 800e380:	6038      	str	r0, [r7, #0]
 800e382:	8892      	ldrh	r2, [r2, #4]
 800e384:	80ba      	strh	r2, [r7, #4]
 800e386:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800e38a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800e38e:	10db      	asrs	r3, r3, #3
 800e390:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e394:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e398:	4313      	orrs	r3, r2
 800e39a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e39e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800e3a2:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800e3a6:	1a9b      	subs	r3, r3, r2
 800e3a8:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800e3ac:	e769      	b.n	800e282 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e3ae:	f023 0204 	bic.w	r2, r3, #4
 800e3b2:	f640 611b 	movw	r1, #3611	; 0xe1b
 800e3b6:	428a      	cmp	r2, r1
 800e3b8:	d003      	beq.n	800e3c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800e3ba:	f640 621d 	movw	r2, #3613	; 0xe1d
 800e3be:	4293      	cmp	r3, r2
 800e3c0:	d120      	bne.n	800e404 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800e3c2:	3b01      	subs	r3, #1
 800e3c4:	4602      	mov	r2, r0
 800e3c6:	b29b      	uxth	r3, r3
 800e3c8:	4629      	mov	r1, r5
 800e3ca:	4620      	mov	r0, r4
 800e3cc:	f7ff ff43 	bl	800e256 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e3d0:	7b41      	ldrb	r1, [r0, #13]
 800e3d2:	00cb      	lsls	r3, r1, #3
 800e3d4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e3d8:	7a03      	ldrb	r3, [r0, #8]
 800e3da:	0649      	lsls	r1, r1, #25
 800e3dc:	ea43 0302 	orr.w	r3, r3, r2
 800e3e0:	bf44      	itt	mi
 800e3e2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e3e6:	b21b      	sxthmi	r3, r3
 800e3e8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e3ec:	7b6b      	ldrb	r3, [r5, #13]
 800e3ee:	7aaa      	ldrb	r2, [r5, #10]
 800e3f0:	005b      	lsls	r3, r3, #1
 800e3f2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e3f6:	4313      	orrs	r3, r2
 800e3f8:	115a      	asrs	r2, r3, #5
 800e3fa:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800e3fe:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800e402:	e036      	b.n	800e472 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800e404:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800e408:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800e40c:	7a2a      	ldrb	r2, [r5, #8]
 800e40e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800e412:	ea42 0201 	orr.w	r2, r2, r1
 800e416:	bf1c      	itt	ne
 800e418:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800e41c:	b212      	sxthne	r2, r2
 800e41e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800e422:	f640 6109 	movw	r1, #3593	; 0xe09
 800e426:	f023 0210 	bic.w	r2, r3, #16
 800e42a:	428a      	cmp	r2, r1
 800e42c:	d003      	beq.n	800e436 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800e42e:	f640 6213 	movw	r2, #3603	; 0xe13
 800e432:	4293      	cmp	r3, r2
 800e434:	d12a      	bne.n	800e48c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800e436:	7b6e      	ldrb	r6, [r5, #13]
 800e438:	0076      	lsls	r6, r6, #1
 800e43a:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e43e:	7aae      	ldrb	r6, [r5, #10]
 800e440:	4316      	orrs	r6, r2
 800e442:	f640 6213 	movw	r2, #3603	; 0xe13
 800e446:	4293      	cmp	r3, r2
 800e448:	bf18      	it	ne
 800e44a:	f103 33ff 	addne.w	r3, r3, #4294967295
 800e44e:	4602      	mov	r2, r0
 800e450:	bf14      	ite	ne
 800e452:	b29b      	uxthne	r3, r3
 800e454:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800e458:	4629      	mov	r1, r5
 800e45a:	4620      	mov	r0, r4
 800e45c:	f7ff fefb 	bl	800e256 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e460:	7b43      	ldrb	r3, [r0, #13]
 800e462:	7a82      	ldrb	r2, [r0, #10]
 800e464:	005b      	lsls	r3, r3, #1
 800e466:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e46a:	4313      	orrs	r3, r2
 800e46c:	1af6      	subs	r6, r6, r3
 800e46e:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 800e472:	7b69      	ldrb	r1, [r5, #13]
 800e474:	00cb      	lsls	r3, r1, #3
 800e476:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e47a:	7a2b      	ldrb	r3, [r5, #8]
 800e47c:	4313      	orrs	r3, r2
 800e47e:	064a      	lsls	r2, r1, #25
 800e480:	bf44      	itt	mi
 800e482:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e486:	b21b      	sxthmi	r3, r3
 800e488:	1bdb      	subs	r3, r3, r7
 800e48a:	e73f      	b.n	800e30c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800e48c:	2300      	movs	r3, #0
 800e48e:	e7b6      	b.n	800e3fe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800e490:	3fc00079 	.word	0x3fc00079
 800e494:	0801dab8 	.word	0x0801dab8
 800e498:	0801fc27 	.word	0x0801fc27
 800e49c:	0801db8a 	.word	0x0801db8a

0800e4a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800e4a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e4a4:	4604      	mov	r4, r0
 800e4a6:	b942      	cbnz	r2, 800e4ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800e4a8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e4ac:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 800e4b0:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800e4b4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800e4b8:	e046      	b.n	800e548 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800e4ba:	7b51      	ldrb	r1, [r2, #13]
 800e4bc:	8893      	ldrh	r3, [r2, #4]
 800e4be:	010f      	lsls	r7, r1, #4
 800e4c0:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800e4c4:	79d7      	ldrb	r7, [r2, #7]
 800e4c6:	4307      	orrs	r7, r0
 800e4c8:	2f04      	cmp	r7, #4
 800e4ca:	b2bd      	uxth	r5, r7
 800e4cc:	bfcc      	ite	gt
 800e4ce:	08bf      	lsrgt	r7, r7, #2
 800e4d0:	2701      	movle	r7, #1
 800e4d2:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800e4d6:	f200 80ab 	bhi.w	800e630 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800e4da:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800e4de:	4283      	cmp	r3, r0
 800e4e0:	d216      	bcs.n	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e4e2:	f240 605b 	movw	r0, #1627	; 0x65b
 800e4e6:	4283      	cmp	r3, r0
 800e4e8:	d859      	bhi.n	800e59e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800e4ea:	f240 6057 	movw	r0, #1623	; 0x657
 800e4ee:	4283      	cmp	r3, r0
 800e4f0:	d20e      	bcs.n	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e4f2:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e4f6:	d24a      	bcs.n	800e58e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800e4f8:	f240 604e 	movw	r0, #1614	; 0x64e
 800e4fc:	4283      	cmp	r3, r0
 800e4fe:	d207      	bcs.n	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e500:	f240 601a 	movw	r0, #1562	; 0x61a
 800e504:	4283      	cmp	r3, r0
 800e506:	d02a      	beq.n	800e55e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e508:	d821      	bhi.n	800e54e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800e50a:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800e50e:	d35b      	bcc.n	800e5c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e510:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 800e514:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e518:	f040 80d0 	bne.w	800e6bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800e51c:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 800e520:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e524:	f040 80ca 	bne.w	800e6bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800e528:	00cb      	lsls	r3, r1, #3
 800e52a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e52e:	7a13      	ldrb	r3, [r2, #8]
 800e530:	0649      	lsls	r1, r1, #25
 800e532:	ea43 0300 	orr.w	r3, r3, r0
 800e536:	bf44      	itt	mi
 800e538:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e53c:	b21b      	sxthmi	r3, r3
 800e53e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e542:	1b5d      	subs	r5, r3, r5
 800e544:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e548:	4610      	mov	r0, r2
 800e54a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e54e:	f240 604b 	movw	r0, #1611	; 0x64b
 800e552:	4283      	cmp	r3, r0
 800e554:	d338      	bcc.n	800e5c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e556:	f240 604c 	movw	r0, #1612	; 0x64c
 800e55a:	4283      	cmp	r3, r0
 800e55c:	d9d8      	bls.n	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e55e:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 800e562:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 800e566:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e56a:	f040 80f1 	bne.w	800e750 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800e56e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e572:	f040 80ed 	bne.w	800e750 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800e576:	00cb      	lsls	r3, r1, #3
 800e578:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e57c:	7a13      	ldrb	r3, [r2, #8]
 800e57e:	064e      	lsls	r6, r1, #25
 800e580:	ea43 0300 	orr.w	r3, r3, r0
 800e584:	bf44      	itt	mi
 800e586:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e58a:	b21b      	sxthmi	r3, r3
 800e58c:	e7d9      	b.n	800e542 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800e58e:	f240 6054 	movw	r0, #1620	; 0x654
 800e592:	4283      	cmp	r3, r0
 800e594:	d8e3      	bhi.n	800e55e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e596:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e59a:	d9e0      	bls.n	800e55e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e59c:	e7b8      	b.n	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e59e:	f240 6074 	movw	r0, #1652	; 0x674
 800e5a2:	4283      	cmp	r3, r0
 800e5a4:	d0b4      	beq.n	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e5a6:	d82d      	bhi.n	800e604 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800e5a8:	f240 605e 	movw	r0, #1630	; 0x65e
 800e5ac:	4283      	cmp	r3, r0
 800e5ae:	d804      	bhi.n	800e5ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800e5b0:	f240 605d 	movw	r0, #1629	; 0x65d
 800e5b4:	4283      	cmp	r3, r0
 800e5b6:	d3d2      	bcc.n	800e55e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e5b8:	e7aa      	b.n	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e5ba:	f240 605f 	movw	r0, #1631	; 0x65f
 800e5be:	4283      	cmp	r3, r0
 800e5c0:	d0cd      	beq.n	800e55e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e5c2:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800e5c6:	d0a3      	beq.n	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e5c8:	00cb      	lsls	r3, r1, #3
 800e5ca:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e5ce:	7a13      	ldrb	r3, [r2, #8]
 800e5d0:	0649      	lsls	r1, r1, #25
 800e5d2:	ea43 0300 	orr.w	r3, r3, r0
 800e5d6:	bf44      	itt	mi
 800e5d8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e5dc:	b21b      	sxthmi	r3, r3
 800e5de:	1b5d      	subs	r5, r3, r5
 800e5e0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e5e4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e5e8:	7b53      	ldrb	r3, [r2, #13]
 800e5ea:	015b      	lsls	r3, r3, #5
 800e5ec:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e5f0:	7993      	ldrb	r3, [r2, #6]
 800e5f2:	430b      	orrs	r3, r1
 800e5f4:	005b      	lsls	r3, r3, #1
 800e5f6:	2105      	movs	r1, #5
 800e5f8:	fb93 f3f1 	sdiv	r3, r3, r1
 800e5fc:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800e600:	440b      	add	r3, r1
 800e602:	e757      	b.n	800e4b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800e604:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800e608:	4283      	cmp	r3, r0
 800e60a:	d809      	bhi.n	800e620 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800e60c:	f240 60df 	movw	r0, #1759	; 0x6df
 800e610:	4283      	cmp	r3, r0
 800e612:	f4bf af7d 	bcs.w	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e616:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800e61a:	2b05      	cmp	r3, #5
 800e61c:	d8d4      	bhi.n	800e5c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e61e:	e777      	b.n	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e620:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800e624:	4283      	cmp	r3, r0
 800e626:	d09a      	beq.n	800e55e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e628:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800e62c:	4283      	cmp	r3, r0
 800e62e:	e7ca      	b.n	800e5c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800e630:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800e634:	d22b      	bcs.n	800e68e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800e636:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800e63a:	4283      	cmp	r3, r0
 800e63c:	d28f      	bcs.n	800e55e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e63e:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800e642:	4283      	cmp	r3, r0
 800e644:	d816      	bhi.n	800e674 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800e646:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800e64a:	4283      	cmp	r3, r0
 800e64c:	f4bf af60 	bcs.w	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e650:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800e654:	4283      	cmp	r3, r0
 800e656:	d80a      	bhi.n	800e66e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800e658:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800e65c:	4283      	cmp	r3, r0
 800e65e:	f4bf af57 	bcs.w	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e662:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800e666:	4283      	cmp	r3, r0
 800e668:	f43f af79 	beq.w	800e55e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e66c:	e7ac      	b.n	800e5c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e66e:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800e672:	e7f8      	b.n	800e666 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800e674:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800e678:	4283      	cmp	r3, r0
 800e67a:	d802      	bhi.n	800e682 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800e67c:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800e680:	e798      	b.n	800e5b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800e682:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800e686:	4283      	cmp	r3, r0
 800e688:	f47f af42 	bne.w	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e68c:	e767      	b.n	800e55e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e68e:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800e692:	4283      	cmp	r3, r0
 800e694:	f43f af63 	beq.w	800e55e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e698:	d802      	bhi.n	800e6a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800e69a:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800e69e:	e7f2      	b.n	800e686 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800e6a0:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800e6a4:	4283      	cmp	r3, r0
 800e6a6:	d805      	bhi.n	800e6b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800e6a8:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800e6ac:	4283      	cmp	r3, r0
 800e6ae:	f4ff af2f 	bcc.w	800e510 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e6b2:	e754      	b.n	800e55e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e6b4:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800e6b8:	4283      	cmp	r3, r0
 800e6ba:	e7af      	b.n	800e61c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800e6bc:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800e6c0:	4617      	mov	r7, r2
 800e6c2:	f102 0808 	add.w	r8, r2, #8
 800e6c6:	4666      	mov	r6, ip
 800e6c8:	6838      	ldr	r0, [r7, #0]
 800e6ca:	6879      	ldr	r1, [r7, #4]
 800e6cc:	46e6      	mov	lr, ip
 800e6ce:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800e6d2:	3708      	adds	r7, #8
 800e6d4:	4547      	cmp	r7, r8
 800e6d6:	46f4      	mov	ip, lr
 800e6d8:	d1f6      	bne.n	800e6c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800e6da:	6838      	ldr	r0, [r7, #0]
 800e6dc:	f8ce 0000 	str.w	r0, [lr]
 800e6e0:	88b9      	ldrh	r1, [r7, #4]
 800e6e2:	f8ae 1004 	strh.w	r1, [lr, #4]
 800e6e6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800e6ea:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e6ee:	d009      	beq.n	800e704 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800e6f0:	7b51      	ldrb	r1, [r2, #13]
 800e6f2:	7992      	ldrb	r2, [r2, #6]
 800e6f4:	0149      	lsls	r1, r1, #5
 800e6f6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e6fa:	4311      	orrs	r1, r2
 800e6fc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e700:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800e704:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e708:	d00d      	beq.n	800e726 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800e70a:	442b      	add	r3, r5
 800e70c:	b29b      	uxth	r3, r3
 800e70e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800e712:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800e716:	10db      	asrs	r3, r3, #3
 800e718:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e71c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e720:	4313      	orrs	r3, r2
 800e722:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e726:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800e72a:	00cb      	lsls	r3, r1, #3
 800e72c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e730:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800e734:	064f      	lsls	r7, r1, #25
 800e736:	ea43 0302 	orr.w	r3, r3, r2
 800e73a:	bf44      	itt	mi
 800e73c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e740:	b21b      	sxthmi	r3, r3
 800e742:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e746:	1b5d      	subs	r5, r3, r5
 800e748:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e74c:	4632      	mov	r2, r6
 800e74e:	e6fb      	b.n	800e548 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800e750:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 800e754:	4694      	mov	ip, r2
 800e756:	f102 0908 	add.w	r9, r2, #8
 800e75a:	4676      	mov	r6, lr
 800e75c:	f8dc 0000 	ldr.w	r0, [ip]
 800e760:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800e764:	46f0      	mov	r8, lr
 800e766:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800e76a:	f10c 0c08 	add.w	ip, ip, #8
 800e76e:	45cc      	cmp	ip, r9
 800e770:	46c6      	mov	lr, r8
 800e772:	d1f3      	bne.n	800e75c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800e774:	f8dc 0000 	ldr.w	r0, [ip]
 800e778:	f8c8 0000 	str.w	r0, [r8]
 800e77c:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800e780:	f8a8 1004 	strh.w	r1, [r8, #4]
 800e784:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800e788:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e78c:	d009      	beq.n	800e7a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800e78e:	7b51      	ldrb	r1, [r2, #13]
 800e790:	7992      	ldrb	r2, [r2, #6]
 800e792:	0149      	lsls	r1, r1, #5
 800e794:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e798:	4311      	orrs	r1, r2
 800e79a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e79e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800e7a2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e7a6:	d00d      	beq.n	800e7c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800e7a8:	1bdb      	subs	r3, r3, r7
 800e7aa:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800e7ae:	b29b      	uxth	r3, r3
 800e7b0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800e7b4:	10db      	asrs	r3, r3, #3
 800e7b6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e7ba:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e7be:	4313      	orrs	r3, r2
 800e7c0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e7c4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800e7c8:	00cb      	lsls	r3, r1, #3
 800e7ca:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e7ce:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800e7d2:	0648      	lsls	r0, r1, #25
 800e7d4:	ea43 0302 	orr.w	r3, r3, r2
 800e7d8:	bf44      	itt	mi
 800e7da:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e7de:	b21b      	sxthmi	r3, r3
 800e7e0:	e7b1      	b.n	800e746 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800e7e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800e7e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e7e8:	461e      	mov	r6, r3
 800e7ea:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800e7ec:	4604      	mov	r4, r0
 800e7ee:	4617      	mov	r7, r2
 800e7f0:	b92b      	cbnz	r3, 800e7fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800e7f2:	4b25      	ldr	r3, [pc, #148]	; (800e888 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800e7f4:	4a25      	ldr	r2, [pc, #148]	; (800e88c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800e7f6:	4826      	ldr	r0, [pc, #152]	; (800e890 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800e7f8:	21c0      	movs	r1, #192	; 0xc0
 800e7fa:	f00d f90f 	bl	801ba1c <__assert_func>
 800e7fe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e800:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e804:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800e808:	f7f3 ff94 	bl	8002734 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e80c:	4605      	mov	r5, r0
 800e80e:	b918      	cbnz	r0, 800e818 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800e810:	6030      	str	r0, [r6, #0]
 800e812:	4628      	mov	r0, r5
 800e814:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e818:	683b      	ldr	r3, [r7, #0]
 800e81a:	4601      	mov	r1, r0
 800e81c:	68db      	ldr	r3, [r3, #12]
 800e81e:	4638      	mov	r0, r7
 800e820:	4798      	blx	r3
 800e822:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e826:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e82a:	4602      	mov	r2, r0
 800e82c:	6030      	str	r0, [r6, #0]
 800e82e:	d213      	bcs.n	800e858 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800e830:	4643      	mov	r3, r8
 800e832:	4639      	mov	r1, r7
 800e834:	4620      	mov	r0, r4
 800e836:	f7ff fe33 	bl	800e4a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e83a:	6030      	str	r0, [r6, #0]
 800e83c:	6833      	ldr	r3, [r6, #0]
 800e83e:	b143      	cbz	r3, 800e852 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800e840:	7b5a      	ldrb	r2, [r3, #13]
 800e842:	7a9b      	ldrb	r3, [r3, #10]
 800e844:	0052      	lsls	r2, r2, #1
 800e846:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e84a:	4313      	orrs	r3, r2
 800e84c:	bf0c      	ite	eq
 800e84e:	2301      	moveq	r3, #1
 800e850:	2300      	movne	r3, #0
 800e852:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800e856:	e7dc      	b.n	800e812 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800e858:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800e85c:	b29b      	uxth	r3, r3
 800e85e:	2b7f      	cmp	r3, #127	; 0x7f
 800e860:	d804      	bhi.n	800e86c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800e862:	4639      	mov	r1, r7
 800e864:	4620      	mov	r0, r4
 800e866:	f7ff fd01 	bl	800e26c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e86a:	e7e6      	b.n	800e83a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e86c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800e870:	2b00      	cmp	r3, #0
 800e872:	d0e3      	beq.n	800e83c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e874:	f640 1302 	movw	r3, #2306	; 0x902
 800e878:	429d      	cmp	r5, r3
 800e87a:	d1df      	bne.n	800e83c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e87c:	4601      	mov	r1, r0
 800e87e:	4620      	mov	r0, r4
 800e880:	f7ff fcc6 	bl	800e210 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e884:	e7d9      	b.n	800e83a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e886:	bf00      	nop
 800e888:	0801dab8 	.word	0x0801dab8
 800e88c:	0801fc27 	.word	0x0801fc27
 800e890:	0801db8a 	.word	0x0801db8a

0800e894 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800e894:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e898:	461e      	mov	r6, r3
 800e89a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800e89c:	4604      	mov	r4, r0
 800e89e:	4617      	mov	r7, r2
 800e8a0:	b92b      	cbnz	r3, 800e8ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800e8a2:	4b26      	ldr	r3, [pc, #152]	; (800e93c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800e8a4:	4a26      	ldr	r2, [pc, #152]	; (800e940 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800e8a6:	4827      	ldr	r0, [pc, #156]	; (800e944 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800e8a8:	21c0      	movs	r1, #192	; 0xc0
 800e8aa:	f00d f8b7 	bl	801ba1c <__assert_func>
 800e8ae:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e8b0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e8b4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800e8b8:	f7f3 ff3c 	bl	8002734 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e8bc:	4605      	mov	r5, r0
 800e8be:	b918      	cbnz	r0, 800e8c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800e8c0:	6030      	str	r0, [r6, #0]
 800e8c2:	4628      	mov	r0, r5
 800e8c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e8c8:	683b      	ldr	r3, [r7, #0]
 800e8ca:	4601      	mov	r1, r0
 800e8cc:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800e8d0:	4638      	mov	r0, r7
 800e8d2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800e8d6:	47c8      	blx	r9
 800e8d8:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e8dc:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e8e0:	4602      	mov	r2, r0
 800e8e2:	6030      	str	r0, [r6, #0]
 800e8e4:	d213      	bcs.n	800e90e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800e8e6:	4643      	mov	r3, r8
 800e8e8:	4639      	mov	r1, r7
 800e8ea:	4620      	mov	r0, r4
 800e8ec:	f7ff fdd8 	bl	800e4a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e8f0:	6030      	str	r0, [r6, #0]
 800e8f2:	6833      	ldr	r3, [r6, #0]
 800e8f4:	b143      	cbz	r3, 800e908 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800e8f6:	7b5a      	ldrb	r2, [r3, #13]
 800e8f8:	7a9b      	ldrb	r3, [r3, #10]
 800e8fa:	0052      	lsls	r2, r2, #1
 800e8fc:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e900:	4313      	orrs	r3, r2
 800e902:	bf0c      	ite	eq
 800e904:	2301      	moveq	r3, #1
 800e906:	2300      	movne	r3, #0
 800e908:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800e90c:	e7d9      	b.n	800e8c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800e90e:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800e912:	b29b      	uxth	r3, r3
 800e914:	2b7f      	cmp	r3, #127	; 0x7f
 800e916:	d804      	bhi.n	800e922 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800e918:	4639      	mov	r1, r7
 800e91a:	4620      	mov	r0, r4
 800e91c:	f7ff fca6 	bl	800e26c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e920:	e7e6      	b.n	800e8f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800e922:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800e926:	2b00      	cmp	r3, #0
 800e928:	d0e3      	beq.n	800e8f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800e92a:	f640 1302 	movw	r3, #2306	; 0x902
 800e92e:	429d      	cmp	r5, r3
 800e930:	d1df      	bne.n	800e8f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800e932:	4601      	mov	r1, r0
 800e934:	4620      	mov	r0, r4
 800e936:	f7ff fc6b 	bl	800e210 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e93a:	e7d9      	b.n	800e8f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800e93c:	0801dab8 	.word	0x0801dab8
 800e940:	0801fc27 	.word	0x0801fc27
 800e944:	0801db8a 	.word	0x0801db8a

0800e948 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800e948:	b510      	push	{r4, lr}
 800e94a:	4604      	mov	r4, r0
 800e94c:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800e950:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e952:	b9d9      	cbnz	r1, 800e98c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 800e954:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e956:	2b0a      	cmp	r3, #10
 800e958:	d037      	beq.n	800e9ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800e95a:	4620      	mov	r0, r4
 800e95c:	f7ff fc17 	bl	800e18e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800e960:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e962:	2b09      	cmp	r3, #9
 800e964:	d906      	bls.n	800e974 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800e966:	4b19      	ldr	r3, [pc, #100]	; (800e9cc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800e968:	4a19      	ldr	r2, [pc, #100]	; (800e9d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800e96a:	481a      	ldr	r0, [pc, #104]	; (800e9d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 800e96c:	f44f 7182 	mov.w	r1, #260	; 0x104
 800e970:	f00d f854 	bl	801ba1c <__assert_func>
 800e974:	1c5a      	adds	r2, r3, #1
 800e976:	8722      	strh	r2, [r4, #56]	; 0x38
 800e978:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e97a:	4413      	add	r3, r2
 800e97c:	b29b      	uxth	r3, r3
 800e97e:	2b09      	cmp	r3, #9
 800e980:	bf88      	it	hi
 800e982:	3b0a      	subhi	r3, #10
 800e984:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e988:	8458      	strh	r0, [r3, #34]	; 0x22
 800e98a:	e7e3      	b.n	800e954 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 800e98c:	2b0a      	cmp	r3, #10
 800e98e:	d01c      	beq.n	800e9ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800e990:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800e992:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800e996:	3901      	subs	r1, #1
 800e998:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 800e99a:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 800e99e:	1c51      	adds	r1, r2, #1
 800e9a0:	b289      	uxth	r1, r1
 800e9a2:	2901      	cmp	r1, #1
 800e9a4:	bf8a      	itet	hi
 800e9a6:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800e9aa:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 800e9ac:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 800e9ae:	2b09      	cmp	r3, #9
 800e9b0:	d8d9      	bhi.n	800e966 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 800e9b2:	1c5a      	adds	r2, r3, #1
 800e9b4:	8722      	strh	r2, [r4, #56]	; 0x38
 800e9b6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e9b8:	4413      	add	r3, r2
 800e9ba:	b29b      	uxth	r3, r3
 800e9bc:	2b09      	cmp	r3, #9
 800e9be:	bf88      	it	hi
 800e9c0:	3b0a      	subhi	r3, #10
 800e9c2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e9c6:	8458      	strh	r0, [r3, #34]	; 0x22
 800e9c8:	e7c0      	b.n	800e94c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800e9ca:	bd10      	pop	{r4, pc}
 800e9cc:	0801f9f8 	.word	0x0801f9f8
 800e9d0:	0801fd7d 	.word	0x0801fd7d
 800e9d4:	0801db8a 	.word	0x0801db8a

0800e9d8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800e9d8:	b538      	push	{r3, r4, r5, lr}
 800e9da:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 800e9dc:	4604      	mov	r4, r0
 800e9de:	b92a      	cbnz	r2, 800e9ec <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800e9e0:	4b13      	ldr	r3, [pc, #76]	; (800ea30 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800e9e2:	4a14      	ldr	r2, [pc, #80]	; (800ea34 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800e9e4:	4814      	ldr	r0, [pc, #80]	; (800ea38 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800e9e6:	21d5      	movs	r1, #213	; 0xd5
 800e9e8:	f00d f818 	bl	801ba1c <__assert_func>
 800e9ec:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e9ee:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800e9f2:	3a01      	subs	r2, #1
 800e9f4:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 800e9f6:	8702      	strh	r2, [r0, #56]	; 0x38
 800e9f8:	1c5a      	adds	r2, r3, #1
 800e9fa:	b292      	uxth	r2, r2
 800e9fc:	2a09      	cmp	r2, #9
 800e9fe:	bf86      	itte	hi
 800ea00:	3b09      	subhi	r3, #9
 800ea02:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 800ea04:	86c2      	strhls	r2, [r0, #54]	; 0x36
 800ea06:	f7ff ff9f 	bl	800e948 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ea0a:	8c23      	ldrh	r3, [r4, #32]
 800ea0c:	2b01      	cmp	r3, #1
 800ea0e:	bf9c      	itt	ls
 800ea10:	3301      	addls	r3, #1
 800ea12:	8423      	strhls	r3, [r4, #32]
 800ea14:	8be3      	ldrh	r3, [r4, #30]
 800ea16:	b90b      	cbnz	r3, 800ea1c <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800ea18:	2302      	movs	r3, #2
 800ea1a:	83e3      	strh	r3, [r4, #30]
 800ea1c:	8be3      	ldrh	r3, [r4, #30]
 800ea1e:	3b01      	subs	r3, #1
 800ea20:	b29b      	uxth	r3, r3
 800ea22:	83e3      	strh	r3, [r4, #30]
 800ea24:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ea28:	4628      	mov	r0, r5
 800ea2a:	8365      	strh	r5, [r4, #26]
 800ea2c:	bd38      	pop	{r3, r4, r5, pc}
 800ea2e:	bf00      	nop
 800ea30:	0801dab8 	.word	0x0801dab8
 800ea34:	0801fcd2 	.word	0x0801fcd2
 800ea38:	0801db8a 	.word	0x0801db8a

0800ea3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800ea3c:	b538      	push	{r3, r4, r5, lr}
 800ea3e:	428a      	cmp	r2, r1
 800ea40:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 800ea42:	d90c      	bls.n	800ea5e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800ea44:	b92c      	cbnz	r4, 800ea52 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800ea46:	4b1c      	ldr	r3, [pc, #112]	; (800eab8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800ea48:	4a1c      	ldr	r2, [pc, #112]	; (800eabc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800ea4a:	21e1      	movs	r1, #225	; 0xe1
 800ea4c:	481c      	ldr	r0, [pc, #112]	; (800eac0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800ea4e:	f00c ffe5 	bl	801ba1c <__assert_func>
 800ea52:	3c01      	subs	r4, #1
 800ea54:	8704      	strh	r4, [r0, #56]	; 0x38
 800ea56:	4b1b      	ldr	r3, [pc, #108]	; (800eac4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800ea58:	4a1b      	ldr	r2, [pc, #108]	; (800eac8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800ea5a:	21c5      	movs	r1, #197	; 0xc5
 800ea5c:	e7f6      	b.n	800ea4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800ea5e:	428c      	cmp	r4, r1
 800ea60:	d203      	bcs.n	800ea6a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800ea62:	4b1a      	ldr	r3, [pc, #104]	; (800eacc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800ea64:	4a1a      	ldr	r2, [pc, #104]	; (800ead0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800ea66:	21cb      	movs	r1, #203	; 0xcb
 800ea68:	e7f0      	b.n	800ea4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800ea6a:	1a64      	subs	r4, r4, r1
 800ea6c:	8704      	strh	r4, [r0, #56]	; 0x38
 800ea6e:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 800ea70:	4421      	add	r1, r4
 800ea72:	b289      	uxth	r1, r1
 800ea74:	2909      	cmp	r1, #9
 800ea76:	bf88      	it	hi
 800ea78:	390a      	subhi	r1, #10
 800ea7a:	86c1      	strh	r1, [r0, #54]	; 0x36
 800ea7c:	250a      	movs	r5, #10
 800ea7e:	b1ba      	cbz	r2, 800eab0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800ea80:	3a01      	subs	r2, #1
 800ea82:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800ea84:	b292      	uxth	r2, r2
 800ea86:	2909      	cmp	r1, #9
 800ea88:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800ea8c:	d903      	bls.n	800ea96 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800ea8e:	4b11      	ldr	r3, [pc, #68]	; (800ead4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800ea90:	4a11      	ldr	r2, [pc, #68]	; (800ead8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800ea92:	21e6      	movs	r1, #230	; 0xe6
 800ea94:	e7da      	b.n	800ea4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800ea96:	3101      	adds	r1, #1
 800ea98:	8701      	strh	r1, [r0, #56]	; 0x38
 800ea9a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800ea9c:	b901      	cbnz	r1, 800eaa0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800ea9e:	86c5      	strh	r5, [r0, #54]	; 0x36
 800eaa0:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800eaa2:	3901      	subs	r1, #1
 800eaa4:	b289      	uxth	r1, r1
 800eaa6:	86c1      	strh	r1, [r0, #54]	; 0x36
 800eaa8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800eaac:	844c      	strh	r4, [r1, #34]	; 0x22
 800eaae:	e7e6      	b.n	800ea7e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800eab0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800eab4:	f7ff bf48 	b.w	800e948 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800eab8:	0801dab8 	.word	0x0801dab8
 800eabc:	0801faab 	.word	0x0801faab
 800eac0:	0801db8a 	.word	0x0801db8a
 800eac4:	0801dbb6 	.word	0x0801dbb6
 800eac8:	0801fb55 	.word	0x0801fb55
 800eacc:	0801fa04 	.word	0x0801fa04
 800ead0:	0801fe2c 	.word	0x0801fe2c
 800ead4:	0801fa10 	.word	0x0801fa10
 800ead8:	0801fa23 	.word	0x0801fa23

0800eadc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800eadc:	3a01      	subs	r2, #1
 800eade:	b570      	push	{r4, r5, r6, lr}
 800eae0:	b292      	uxth	r2, r2
 800eae2:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800eae6:	42b2      	cmp	r2, r6
 800eae8:	d019      	beq.n	800eb1e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800eaea:	8c04      	ldrh	r4, [r0, #32]
 800eaec:	f831 5b02 	ldrh.w	r5, [r1], #2
 800eaf0:	4294      	cmp	r4, r2
 800eaf2:	d805      	bhi.n	800eb00 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800eaf4:	4b19      	ldr	r3, [pc, #100]	; (800eb5c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800eaf6:	4a1a      	ldr	r2, [pc, #104]	; (800eb60 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800eaf8:	481a      	ldr	r0, [pc, #104]	; (800eb64 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800eafa:	21c5      	movs	r1, #197	; 0xc5
 800eafc:	f00c ff8e 	bl	801ba1c <__assert_func>
 800eb00:	8bc4      	ldrh	r4, [r0, #30]
 800eb02:	4414      	add	r4, r2
 800eb04:	b2a4      	uxth	r4, r4
 800eb06:	2c01      	cmp	r4, #1
 800eb08:	bf88      	it	hi
 800eb0a:	3c02      	subhi	r4, #2
 800eb0c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800eb10:	3a01      	subs	r2, #1
 800eb12:	8b64      	ldrh	r4, [r4, #26]
 800eb14:	42ac      	cmp	r4, r5
 800eb16:	b292      	uxth	r2, r2
 800eb18:	d0e5      	beq.n	800eae6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800eb1a:	2000      	movs	r0, #0
 800eb1c:	bd70      	pop	{r4, r5, r6, pc}
 800eb1e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800eb22:	2400      	movs	r4, #0
 800eb24:	4413      	add	r3, r2
 800eb26:	b2a2      	uxth	r2, r4
 800eb28:	429a      	cmp	r2, r3
 800eb2a:	da14      	bge.n	800eb56 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800eb2c:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 800eb2e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800eb32:	4296      	cmp	r6, r2
 800eb34:	d802      	bhi.n	800eb3c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800eb36:	4b09      	ldr	r3, [pc, #36]	; (800eb5c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800eb38:	4a0b      	ldr	r2, [pc, #44]	; (800eb68 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800eb3a:	e7dd      	b.n	800eaf8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800eb3c:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 800eb3e:	4432      	add	r2, r6
 800eb40:	b292      	uxth	r2, r2
 800eb42:	2a09      	cmp	r2, #9
 800eb44:	bf88      	it	hi
 800eb46:	3a0a      	subhi	r2, #10
 800eb48:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800eb4c:	3401      	adds	r4, #1
 800eb4e:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 800eb50:	42aa      	cmp	r2, r5
 800eb52:	d0e8      	beq.n	800eb26 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800eb54:	e7e1      	b.n	800eb1a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800eb56:	2001      	movs	r0, #1
 800eb58:	e7e0      	b.n	800eb1c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800eb5a:	bf00      	nop
 800eb5c:	0801dbb6 	.word	0x0801dbb6
 800eb60:	0801feb0 	.word	0x0801feb0
 800eb64:	0801db8a 	.word	0x0801db8a
 800eb68:	0801fb55 	.word	0x0801fb55

0800eb6c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800eb6c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb70:	4605      	mov	r5, r0
 800eb72:	4616      	mov	r6, r2
 800eb74:	1c8c      	adds	r4, r1, #2
 800eb76:	8809      	ldrh	r1, [r1, #0]
 800eb78:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800eb7c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800eb80:	42b3      	cmp	r3, r6
 800eb82:	d124      	bne.n	800ebce <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800eb84:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800eb88:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800eb8c:	f001 070f 	and.w	r7, r1, #15
 800eb90:	f8cd 8000 	str.w	r8, [sp]
 800eb94:	464b      	mov	r3, r9
 800eb96:	4652      	mov	r2, sl
 800eb98:	4621      	mov	r1, r4
 800eb9a:	4628      	mov	r0, r5
 800eb9c:	f7ff ff9e 	bl	800eadc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800eba0:	4683      	mov	fp, r0
 800eba2:	b168      	cbz	r0, 800ebc0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800eba4:	eb0a 0109 	add.w	r1, sl, r9
 800eba8:	4441      	add	r1, r8
 800ebaa:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800ebae:	463a      	mov	r2, r7
 800ebb0:	4649      	mov	r1, r9
 800ebb2:	4628      	mov	r0, r5
 800ebb4:	f7ff ff42 	bl	800ea3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800ebb8:	4658      	mov	r0, fp
 800ebba:	b003      	add	sp, #12
 800ebbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ebc0:	eb07 010a 	add.w	r1, r7, sl
 800ebc4:	4449      	add	r1, r9
 800ebc6:	4441      	add	r1, r8
 800ebc8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800ebcc:	e7d2      	b.n	800eb74 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800ebce:	f04f 0b00 	mov.w	fp, #0
 800ebd2:	e7f1      	b.n	800ebb8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800ebd4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800ebd4:	b570      	push	{r4, r5, r6, lr}
 800ebd6:	8810      	ldrh	r0, [r2, #0]
 800ebd8:	4298      	cmp	r0, r3
 800ebda:	d817      	bhi.n	800ec0c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ebdc:	1e48      	subs	r0, r1, #1
 800ebde:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800ebe2:	4298      	cmp	r0, r3
 800ebe4:	d312      	bcc.n	800ec0c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ebe6:	2400      	movs	r4, #0
 800ebe8:	428c      	cmp	r4, r1
 800ebea:	d20f      	bcs.n	800ec0c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ebec:	1860      	adds	r0, r4, r1
 800ebee:	1040      	asrs	r0, r0, #1
 800ebf0:	0085      	lsls	r5, r0, #2
 800ebf2:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800ebf6:	42b3      	cmp	r3, r6
 800ebf8:	d902      	bls.n	800ec00 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800ebfa:	3001      	adds	r0, #1
 800ebfc:	b284      	uxth	r4, r0
 800ebfe:	e7f3      	b.n	800ebe8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800ec00:	d201      	bcs.n	800ec06 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800ec02:	b281      	uxth	r1, r0
 800ec04:	e7f0      	b.n	800ebe8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800ec06:	442a      	add	r2, r5
 800ec08:	8850      	ldrh	r0, [r2, #2]
 800ec0a:	bd70      	pop	{r4, r5, r6, pc}
 800ec0c:	2000      	movs	r0, #0
 800ec0e:	e7fc      	b.n	800ec0a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800ec10 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800ec10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec14:	6c45      	ldr	r5, [r0, #68]	; 0x44
 800ec16:	886f      	ldrh	r7, [r5, #2]
 800ec18:	4604      	mov	r4, r0
 800ec1a:	087f      	lsrs	r7, r7, #1
 800ec1c:	260b      	movs	r6, #11
 800ec1e:	3e01      	subs	r6, #1
 800ec20:	d01b      	beq.n	800ec5a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800ec22:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ec24:	b92b      	cbnz	r3, 800ec32 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800ec26:	4b0e      	ldr	r3, [pc, #56]	; (800ec60 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800ec28:	4a0e      	ldr	r2, [pc, #56]	; (800ec64 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800ec2a:	480f      	ldr	r0, [pc, #60]	; (800ec68 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800ec2c:	21c0      	movs	r1, #192	; 0xc0
 800ec2e:	f00c fef5 	bl	801ba1c <__assert_func>
 800ec32:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ec34:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ec38:	462a      	mov	r2, r5
 800ec3a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800ec3e:	4639      	mov	r1, r7
 800ec40:	4643      	mov	r3, r8
 800ec42:	4620      	mov	r0, r4
 800ec44:	f7ff ffc6 	bl	800ebd4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800ec48:	b138      	cbz	r0, 800ec5a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800ec4a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800ec4e:	4642      	mov	r2, r8
 800ec50:	4620      	mov	r0, r4
 800ec52:	f7ff ff8b 	bl	800eb6c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800ec56:	2800      	cmp	r0, #0
 800ec58:	d1e1      	bne.n	800ec1e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800ec5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ec5e:	bf00      	nop
 800ec60:	0801dab8 	.word	0x0801dab8
 800ec64:	0801fc27 	.word	0x0801fc27
 800ec68:	0801db8a 	.word	0x0801db8a

0800ec6c <_ZN8touchgfx8ceil28_4El>:
 800ec6c:	f110 030f 	adds.w	r3, r0, #15
 800ec70:	d401      	bmi.n	800ec76 <_ZN8touchgfx8ceil28_4El+0xa>
 800ec72:	1118      	asrs	r0, r3, #4
 800ec74:	4770      	bx	lr
 800ec76:	f1c0 0001 	rsb	r0, r0, #1
 800ec7a:	f010 000f 	ands.w	r0, r0, #15
 800ec7e:	bf18      	it	ne
 800ec80:	2001      	movne	r0, #1
 800ec82:	2210      	movs	r2, #16
 800ec84:	fb93 f3f2 	sdiv	r3, r3, r2
 800ec88:	1a18      	subs	r0, r3, r0
 800ec8a:	4770      	bx	lr

0800ec8c <_ZN8touchgfx11floorDivModEllRlS0_>:
 800ec8c:	2900      	cmp	r1, #0
 800ec8e:	b538      	push	{r3, r4, r5, lr}
 800ec90:	dc05      	bgt.n	800ec9e <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 800ec92:	4b0f      	ldr	r3, [pc, #60]	; (800ecd0 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 800ec94:	4a0f      	ldr	r2, [pc, #60]	; (800ecd4 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 800ec96:	4810      	ldr	r0, [pc, #64]	; (800ecd8 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 800ec98:	21f7      	movs	r1, #247	; 0xf7
 800ec9a:	f00c febf 	bl	801ba1c <__assert_func>
 800ec9e:	2800      	cmp	r0, #0
 800eca0:	db06      	blt.n	800ecb0 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 800eca2:	fb90 f4f1 	sdiv	r4, r0, r1
 800eca6:	6014      	str	r4, [r2, #0]
 800eca8:	fb01 0114 	mls	r1, r1, r4, r0
 800ecac:	6019      	str	r1, [r3, #0]
 800ecae:	bd38      	pop	{r3, r4, r5, pc}
 800ecb0:	4240      	negs	r0, r0
 800ecb2:	fb90 f4f1 	sdiv	r4, r0, r1
 800ecb6:	4265      	negs	r5, r4
 800ecb8:	fb01 0014 	mls	r0, r1, r4, r0
 800ecbc:	6015      	str	r5, [r2, #0]
 800ecbe:	6018      	str	r0, [r3, #0]
 800ecc0:	2800      	cmp	r0, #0
 800ecc2:	d0f4      	beq.n	800ecae <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 800ecc4:	6810      	ldr	r0, [r2, #0]
 800ecc6:	3801      	subs	r0, #1
 800ecc8:	6010      	str	r0, [r2, #0]
 800ecca:	6818      	ldr	r0, [r3, #0]
 800eccc:	1a09      	subs	r1, r1, r0
 800ecce:	e7ed      	b.n	800ecac <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 800ecd0:	0801ff81 	.word	0x0801ff81
 800ecd4:	0801ffc0 	.word	0x0801ffc0
 800ecd8:	0801ff91 	.word	0x0801ff91

0800ecdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800ecdc:	b570      	push	{r4, r5, r6, lr}
 800ecde:	694a      	ldr	r2, [r1, #20]
 800ece0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ece2:	684b      	ldr	r3, [r1, #4]
 800ece4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800ece6:	1b54      	subs	r4, r2, r5
 800ece8:	f000 8106 	beq.w	800eef8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800ecec:	1b9b      	subs	r3, r3, r6
 800ecee:	d003      	beq.n	800ecf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800ecf0:	4363      	muls	r3, r4
 800ecf2:	2210      	movs	r2, #16
 800ecf4:	fb93 f3f2 	sdiv	r3, r3, r2
 800ecf8:	680c      	ldr	r4, [r1, #0]
 800ecfa:	698a      	ldr	r2, [r1, #24]
 800ecfc:	1b65      	subs	r5, r4, r5
 800ecfe:	f000 80fd 	beq.w	800eefc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800ed02:	1b92      	subs	r2, r2, r6
 800ed04:	d003      	beq.n	800ed0e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800ed06:	436a      	muls	r2, r5
 800ed08:	2410      	movs	r4, #16
 800ed0a:	fb92 f2f4 	sdiv	r2, r2, r4
 800ed0e:	1a9b      	subs	r3, r3, r2
 800ed10:	ee07 3a90 	vmov	s15, r3
 800ed14:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800ef38 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800ed18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ed1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800ed20:	ee67 7a84 	vmul.f32	s15, s15, s8
 800ed24:	460a      	mov	r2, r1
 800ed26:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800ed2a:	4603      	mov	r3, r0
 800ed2c:	f100 040c 	add.w	r4, r0, #12
 800ed30:	eeb1 6a43 	vneg.f32	s12, s6
 800ed34:	edd2 7a02 	vldr	s15, [r2, #8]
 800ed38:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800ed3c:	3214      	adds	r2, #20
 800ed3e:	ece3 6a01 	vstmia	r3!, {s13}
 800ed42:	ed52 7a02 	vldr	s15, [r2, #-8]
 800ed46:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ed4a:	429c      	cmp	r4, r3
 800ed4c:	edc3 7a02 	vstr	s15, [r3, #8]
 800ed50:	ed52 7a01 	vldr	s15, [r2, #-4]
 800ed54:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ed58:	edc3 7a05 	vstr	s15, [r3, #20]
 800ed5c:	d1ea      	bne.n	800ed34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800ed5e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ed60:	698b      	ldr	r3, [r1, #24]
 800ed62:	edd0 4a02 	vldr	s9, [r0, #8]
 800ed66:	edd0 3a00 	vldr	s7, [r0]
 800ed6a:	edd0 6a01 	vldr	s13, [r0, #4]
 800ed6e:	ed90 5a05 	vldr	s10, [r0, #20]
 800ed72:	ed90 2a03 	vldr	s4, [r0, #12]
 800ed76:	edd0 5a04 	vldr	s11, [r0, #16]
 800ed7a:	ed90 1a07 	vldr	s2, [r0, #28]
 800ed7e:	edd0 2a06 	vldr	s5, [r0, #24]
 800ed82:	1a9b      	subs	r3, r3, r2
 800ed84:	ee07 3a90 	vmov	s15, r3
 800ed88:	684b      	ldr	r3, [r1, #4]
 800ed8a:	1a9b      	subs	r3, r3, r2
 800ed8c:	ee07 3a10 	vmov	s14, r3
 800ed90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ed94:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800ed98:	ee67 7a84 	vmul.f32	s15, s15, s8
 800ed9c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800eda0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eda4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800eda8:	ee27 7a04 	vmul.f32	s14, s14, s8
 800edac:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800edb0:	eee6 7a87 	vfma.f32	s15, s13, s14
 800edb4:	ee32 5a45 	vsub.f32	s10, s4, s10
 800edb8:	ee67 7a83 	vmul.f32	s15, s15, s6
 800edbc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800edc0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800edc2:	694a      	ldr	r2, [r1, #20]
 800edc4:	1b13      	subs	r3, r2, r4
 800edc6:	ee07 3a10 	vmov	s14, r3
 800edca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800edce:	680b      	ldr	r3, [r1, #0]
 800edd0:	ee27 7a04 	vmul.f32	s14, s14, s8
 800edd4:	1b1b      	subs	r3, r3, r4
 800edd6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800edda:	ee07 3a10 	vmov	s14, r3
 800edde:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ede2:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ede6:	eee6 4a87 	vfma.f32	s9, s13, s14
 800edea:	ee64 4a86 	vmul.f32	s9, s9, s12
 800edee:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800edf2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800edf4:	698b      	ldr	r3, [r1, #24]
 800edf6:	1a9b      	subs	r3, r3, r2
 800edf8:	ee06 3a90 	vmov	s13, r3
 800edfc:	684b      	ldr	r3, [r1, #4]
 800edfe:	1a9b      	subs	r3, r3, r2
 800ee00:	ee07 3a10 	vmov	s14, r3
 800ee04:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800ee08:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee0c:	ee66 6a84 	vmul.f32	s13, s13, s8
 800ee10:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ee14:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800ee18:	eee5 6a87 	vfma.f32	s13, s11, s14
 800ee1c:	ee66 6a83 	vmul.f32	s13, s13, s6
 800ee20:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800ee24:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ee26:	694a      	ldr	r2, [r1, #20]
 800ee28:	1b13      	subs	r3, r2, r4
 800ee2a:	ee07 3a10 	vmov	s14, r3
 800ee2e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee32:	680b      	ldr	r3, [r1, #0]
 800ee34:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ee38:	1b1b      	subs	r3, r3, r4
 800ee3a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800ee3e:	ee07 3a10 	vmov	s14, r3
 800ee42:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee46:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ee4a:	eea5 5a87 	vfma.f32	s10, s11, s14
 800ee4e:	edd0 5a08 	vldr	s11, [r0, #32]
 800ee52:	ee25 5a06 	vmul.f32	s10, s10, s12
 800ee56:	ee31 1a65 	vsub.f32	s2, s2, s11
 800ee5a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800ee5e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ee60:	698b      	ldr	r3, [r1, #24]
 800ee62:	1a9b      	subs	r3, r3, r2
 800ee64:	ee07 3a10 	vmov	s14, r3
 800ee68:	684b      	ldr	r3, [r1, #4]
 800ee6a:	1a9b      	subs	r3, r3, r2
 800ee6c:	ee01 3a90 	vmov	s3, r3
 800ee70:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee74:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800ee78:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ee7c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800ee80:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800ee84:	ee61 1a84 	vmul.f32	s3, s3, s8
 800ee88:	eea1 7a21 	vfma.f32	s14, s2, s3
 800ee8c:	ee27 7a03 	vmul.f32	s14, s14, s6
 800ee90:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800ee94:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ee96:	694a      	ldr	r2, [r1, #20]
 800ee98:	1b13      	subs	r3, r2, r4
 800ee9a:	ee03 3a10 	vmov	s6, r3
 800ee9e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800eea2:	680b      	ldr	r3, [r1, #0]
 800eea4:	ee23 3a04 	vmul.f32	s6, s6, s8
 800eea8:	1b1b      	subs	r3, r3, r4
 800eeaa:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800eeae:	ee03 3a10 	vmov	s6, r3
 800eeb2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800eeb6:	ee23 4a04 	vmul.f32	s8, s6, s8
 800eeba:	eee1 5a04 	vfma.f32	s11, s2, s8
 800eebe:	ee25 6a86 	vmul.f32	s12, s11, s12
 800eec2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800eec6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800eeca:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800eece:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800eed2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eed6:	dd13      	ble.n	800ef00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800eed8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800eedc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800eee0:	63c3      	str	r3, [r0, #60]	; 0x3c
 800eee2:	eee3 7a87 	vfma.f32	s15, s7, s14
 800eee6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800eeea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eeee:	dd15      	ble.n	800ef1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800eef0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800eef4:	6403      	str	r3, [r0, #64]	; 0x40
 800eef6:	bd70      	pop	{r4, r5, r6, pc}
 800eef8:	4623      	mov	r3, r4
 800eefa:	e6fd      	b.n	800ecf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800eefc:	462a      	mov	r2, r5
 800eefe:	e706      	b.n	800ed0e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800ef00:	d502      	bpl.n	800ef08 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800ef02:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800ef06:	e7e9      	b.n	800eedc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800ef08:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800ef0c:	eea3 2a85 	vfma.f32	s4, s7, s10
 800ef10:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800ef14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ef18:	dade      	bge.n	800eed8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800ef1a:	e7f2      	b.n	800ef02 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800ef1c:	d502      	bpl.n	800ef24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800ef1e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800ef22:	e7e7      	b.n	800eef4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800ef24:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800ef28:	eee3 4a86 	vfma.f32	s9, s7, s12
 800ef2c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800ef30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ef34:	dadc      	bge.n	800eef0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800ef36:	e7f2      	b.n	800ef1e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800ef38:	3d800000 	.word	0x3d800000

0800ef3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800ef3c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef40:	f04f 0814 	mov.w	r8, #20
 800ef44:	fb08 f903 	mul.w	r9, r8, r3
 800ef48:	eb02 0a09 	add.w	sl, r2, r9
 800ef4c:	4604      	mov	r4, r0
 800ef4e:	f8da 0004 	ldr.w	r0, [sl, #4]
 800ef52:	4617      	mov	r7, r2
 800ef54:	460d      	mov	r5, r1
 800ef56:	461e      	mov	r6, r3
 800ef58:	f7ff fe88 	bl	800ec6c <_ZN8touchgfx8ceil28_4El>
 800ef5c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ef5e:	6160      	str	r0, [r4, #20]
 800ef60:	fb08 f803 	mul.w	r8, r8, r3
 800ef64:	eb07 0b08 	add.w	fp, r7, r8
 800ef68:	9001      	str	r0, [sp, #4]
 800ef6a:	f8db 0004 	ldr.w	r0, [fp, #4]
 800ef6e:	f7ff fe7d 	bl	800ec6c <_ZN8touchgfx8ceil28_4El>
 800ef72:	9a01      	ldr	r2, [sp, #4]
 800ef74:	1a80      	subs	r0, r0, r2
 800ef76:	61a0      	str	r0, [r4, #24]
 800ef78:	2800      	cmp	r0, #0
 800ef7a:	f000 8088 	beq.w	800f08e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 800ef7e:	f857 3009 	ldr.w	r3, [r7, r9]
 800ef82:	f857 c008 	ldr.w	ip, [r7, r8]
 800ef86:	f8da 1004 	ldr.w	r1, [sl, #4]
 800ef8a:	f8db 0004 	ldr.w	r0, [fp, #4]
 800ef8e:	ebac 0c03 	sub.w	ip, ip, r3
 800ef92:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 800ef96:	fb0b f202 	mul.w	r2, fp, r2
 800ef9a:	fb0c 2211 	mls	r2, ip, r1, r2
 800ef9e:	1a40      	subs	r0, r0, r1
 800efa0:	ea4f 1800 	mov.w	r8, r0, lsl #4
 800efa4:	fb00 2003 	mla	r0, r0, r3, r2
 800efa8:	3801      	subs	r0, #1
 800efaa:	f104 0310 	add.w	r3, r4, #16
 800efae:	4622      	mov	r2, r4
 800efb0:	4641      	mov	r1, r8
 800efb2:	4440      	add	r0, r8
 800efb4:	f7ff fe6a 	bl	800ec8c <_ZN8touchgfx11floorDivModEllRlS0_>
 800efb8:	f104 0308 	add.w	r3, r4, #8
 800efbc:	1d22      	adds	r2, r4, #4
 800efbe:	4641      	mov	r1, r8
 800efc0:	4658      	mov	r0, fp
 800efc2:	f7ff fe63 	bl	800ec8c <_ZN8touchgfx11floorDivModEllRlS0_>
 800efc6:	f8c4 800c 	str.w	r8, [r4, #12]
 800efca:	f8da 3004 	ldr.w	r3, [sl, #4]
 800efce:	6962      	ldr	r2, [r4, #20]
 800efd0:	eddf 6a31 	vldr	s13, [pc, #196]	; 800f098 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800efd4:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800efd8:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800efdc:	ee07 3a10 	vmov	s14, r3
 800efe0:	6822      	ldr	r2, [r4, #0]
 800efe2:	f857 3009 	ldr.w	r3, [r7, r9]
 800efe6:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800efea:	ee07 3a90 	vmov	s15, r3
 800efee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eff2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800eff6:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 800effa:	ee27 7a26 	vmul.f32	s14, s14, s13
 800effe:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f002:	edd3 6a00 	vldr	s13, [r3]
 800f006:	eee6 6a07 	vfma.f32	s13, s12, s14
 800f00a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f00e:	eee6 6a27 	vfma.f32	s13, s12, s15
 800f012:	edc4 6a07 	vstr	s13, [r4, #28]
 800f016:	edd4 6a01 	vldr	s13, [r4, #4]
 800f01a:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 800f01e:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800f022:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f026:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f02a:	ed84 6a08 	vstr	s12, [r4, #32]
 800f02e:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800f030:	6262      	str	r2, [r4, #36]	; 0x24
 800f032:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 800f036:	ed93 6a03 	vldr	s12, [r3, #12]
 800f03a:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f03e:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800f042:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800f046:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 800f04a:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800f04e:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 800f052:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f056:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 800f05a:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800f05c:	6322      	str	r2, [r4, #48]	; 0x30
 800f05e:	ed93 6a06 	vldr	s12, [r3, #24]
 800f062:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 800f066:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f06a:	eeb0 7a46 	vmov.f32	s14, s12
 800f06e:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 800f072:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f076:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 800f07a:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 800f07e:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 800f082:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f086:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 800f08a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800f08c:	63e3      	str	r3, [r4, #60]	; 0x3c
 800f08e:	4620      	mov	r0, r4
 800f090:	b003      	add	sp, #12
 800f092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f096:	bf00      	nop
 800f098:	3d800000 	.word	0x3d800000

0800f09c <_ZN8touchgfx7Unicode6strlenEPKt>:
 800f09c:	4602      	mov	r2, r0
 800f09e:	b148      	cbz	r0, 800f0b4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800f0a0:	2300      	movs	r3, #0
 800f0a2:	b298      	uxth	r0, r3
 800f0a4:	3301      	adds	r3, #1
 800f0a6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800f0aa:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800f0ae:	2900      	cmp	r1, #0
 800f0b0:	d1f7      	bne.n	800f0a2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800f0b2:	4770      	bx	lr
 800f0b4:	4770      	bx	lr

0800f0b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800f0b6:	b530      	push	{r4, r5, lr}
 800f0b8:	4604      	mov	r4, r0
 800f0ba:	b159      	cbz	r1, 800f0d4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800f0bc:	b148      	cbz	r0, 800f0d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f0be:	2300      	movs	r3, #0
 800f0c0:	b298      	uxth	r0, r3
 800f0c2:	4282      	cmp	r2, r0
 800f0c4:	d905      	bls.n	800f0d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f0c6:	5ccd      	ldrb	r5, [r1, r3]
 800f0c8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800f0cc:	3301      	adds	r3, #1
 800f0ce:	2d00      	cmp	r5, #0
 800f0d0:	d1f6      	bne.n	800f0c0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800f0d2:	bd30      	pop	{r4, r5, pc}
 800f0d4:	4608      	mov	r0, r1
 800f0d6:	e7fc      	b.n	800f0d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800f0d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 800f0d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f0da:	b08b      	sub	sp, #44	; 0x2c
 800f0dc:	468c      	mov	ip, r1
 800f0de:	2100      	movs	r1, #0
 800f0e0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f0e4:	ae01      	add	r6, sp, #4
 800f0e6:	211f      	movs	r1, #31
 800f0e8:	fbb0 f7f3 	udiv	r7, r0, r3
 800f0ec:	fb03 0517 	mls	r5, r3, r7, r0
 800f0f0:	b2ec      	uxtb	r4, r5
 800f0f2:	2d09      	cmp	r5, #9
 800f0f4:	bfd4      	ite	le
 800f0f6:	3430      	addle	r4, #48	; 0x30
 800f0f8:	3457      	addgt	r4, #87	; 0x57
 800f0fa:	b2e4      	uxtb	r4, r4
 800f0fc:	558c      	strb	r4, [r1, r6]
 800f0fe:	4638      	mov	r0, r7
 800f100:	1e4c      	subs	r4, r1, #1
 800f102:	b92f      	cbnz	r7, 800f110 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 800f104:	4431      	add	r1, r6
 800f106:	4660      	mov	r0, ip
 800f108:	f7ff ffd5 	bl	800f0b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f10c:	b00b      	add	sp, #44	; 0x2c
 800f10e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f110:	4621      	mov	r1, r4
 800f112:	e7e9      	b.n	800f0e8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0800f114 <_ZN8touchgfx7Unicode4itoaElPtti>:
 800f114:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f116:	4607      	mov	r7, r0
 800f118:	b08b      	sub	sp, #44	; 0x2c
 800f11a:	4608      	mov	r0, r1
 800f11c:	b341      	cbz	r1, 800f170 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800f11e:	1e99      	subs	r1, r3, #2
 800f120:	2922      	cmp	r1, #34	; 0x22
 800f122:	d825      	bhi.n	800f170 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800f124:	2100      	movs	r1, #0
 800f126:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f12a:	463c      	mov	r4, r7
 800f12c:	261f      	movs	r6, #31
 800f12e:	f10d 0c04 	add.w	ip, sp, #4
 800f132:	fb94 fef3 	sdiv	lr, r4, r3
 800f136:	fb03 441e 	mls	r4, r3, lr, r4
 800f13a:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800f13e:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800f142:	b2ec      	uxtb	r4, r5
 800f144:	2d09      	cmp	r5, #9
 800f146:	bfd4      	ite	le
 800f148:	3430      	addle	r4, #48	; 0x30
 800f14a:	3457      	addgt	r4, #87	; 0x57
 800f14c:	b2e4      	uxtb	r4, r4
 800f14e:	f80c 4006 	strb.w	r4, [ip, r6]
 800f152:	4674      	mov	r4, lr
 800f154:	1e71      	subs	r1, r6, #1
 800f156:	b96c      	cbnz	r4, 800f174 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 800f158:	2f00      	cmp	r7, #0
 800f15a:	da05      	bge.n	800f168 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 800f15c:	ab0a      	add	r3, sp, #40	; 0x28
 800f15e:	4419      	add	r1, r3
 800f160:	232d      	movs	r3, #45	; 0x2d
 800f162:	f801 3c24 	strb.w	r3, [r1, #-36]
 800f166:	1eb1      	subs	r1, r6, #2
 800f168:	3101      	adds	r1, #1
 800f16a:	4461      	add	r1, ip
 800f16c:	f7ff ffa3 	bl	800f0b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f170:	b00b      	add	sp, #44	; 0x2c
 800f172:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f174:	460e      	mov	r6, r1
 800f176:	e7dc      	b.n	800f132 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0800f178 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800f178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f17c:	4691      	mov	r9, r2
 800f17e:	b085      	sub	sp, #20
 800f180:	6802      	ldr	r2, [r0, #0]
 800f182:	9201      	str	r2, [sp, #4]
 800f184:	4688      	mov	r8, r1
 800f186:	4683      	mov	fp, r0
 800f188:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 800f18c:	9103      	str	r1, [sp, #12]
 800f18e:	4610      	mov	r0, r2
 800f190:	461c      	mov	r4, r3
 800f192:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800f196:	9302      	str	r3, [sp, #8]
 800f198:	f7ff ff80 	bl	800f09c <_ZN8touchgfx7Unicode6strlenEPKt>
 800f19c:	f1b8 0f00 	cmp.w	r8, #0
 800f1a0:	bf0c      	ite	eq
 800f1a2:	4684      	moveq	ip, r0
 800f1a4:	f100 0c01 	addne.w	ip, r0, #1
 800f1a8:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 800f1ac:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 800f1b0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f1b2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f1b4:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 800f1b8:	9903      	ldr	r1, [sp, #12]
 800f1ba:	fa1f fc8c 	uxth.w	ip, ip
 800f1be:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f1c2:	d041      	beq.n	800f248 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f1c4:	d834      	bhi.n	800f230 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800f1c6:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 800f1ca:	d059      	beq.n	800f280 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800f1cc:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 800f1d0:	d03a      	beq.n	800f248 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f1d2:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 800f1d6:	d034      	beq.n	800f242 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f1d8:	2400      	movs	r4, #0
 800f1da:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800f1de:	3a01      	subs	r2, #1
 800f1e0:	b169      	cbz	r1, 800f1fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f1e2:	9911      	ldr	r1, [sp, #68]	; 0x44
 800f1e4:	458c      	cmp	ip, r1
 800f1e6:	da09      	bge.n	800f1fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f1e8:	eba1 010c 	sub.w	r1, r1, ip
 800f1ec:	b289      	uxth	r1, r1
 800f1ee:	b933      	cbnz	r3, 800f1fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f1f0:	2e00      	cmp	r6, #0
 800f1f2:	d051      	beq.n	800f298 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f1f4:	2800      	cmp	r0, #0
 800f1f6:	d04f      	beq.n	800f298 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f1f8:	440c      	add	r4, r1
 800f1fa:	b2a4      	uxth	r4, r4
 800f1fc:	2100      	movs	r1, #0
 800f1fe:	682b      	ldr	r3, [r5, #0]
 800f200:	4293      	cmp	r3, r2
 800f202:	da07      	bge.n	800f214 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f204:	f1b8 0f00 	cmp.w	r8, #0
 800f208:	d004      	beq.n	800f214 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f20a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 800f20e:	682b      	ldr	r3, [r5, #0]
 800f210:	3301      	adds	r3, #1
 800f212:	602b      	str	r3, [r5, #0]
 800f214:	2730      	movs	r7, #48	; 0x30
 800f216:	2c00      	cmp	r4, #0
 800f218:	d04e      	beq.n	800f2b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f21a:	682e      	ldr	r6, [r5, #0]
 800f21c:	3c01      	subs	r4, #1
 800f21e:	42b2      	cmp	r2, r6
 800f220:	b2a4      	uxth	r4, r4
 800f222:	dd49      	ble.n	800f2b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f224:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f228:	682b      	ldr	r3, [r5, #0]
 800f22a:	3301      	adds	r3, #1
 800f22c:	602b      	str	r3, [r5, #0]
 800f22e:	e7f2      	b.n	800f216 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 800f230:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 800f234:	d01d      	beq.n	800f272 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 800f236:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 800f23a:	d002      	beq.n	800f242 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f23c:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 800f240:	e7c9      	b.n	800f1d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 800f242:	4684      	mov	ip, r0
 800f244:	f04f 0800 	mov.w	r8, #0
 800f248:	2c00      	cmp	r4, #0
 800f24a:	d0c6      	beq.n	800f1da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f24c:	b947      	cbnz	r7, 800f260 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f24e:	2801      	cmp	r0, #1
 800f250:	d106      	bne.n	800f260 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f252:	8814      	ldrh	r4, [r2, #0]
 800f254:	2c30      	cmp	r4, #48	; 0x30
 800f256:	bf02      	ittt	eq
 800f258:	3202      	addeq	r2, #2
 800f25a:	f8cb 2000 	streq.w	r2, [fp]
 800f25e:	4638      	moveq	r0, r7
 800f260:	45bc      	cmp	ip, r7
 800f262:	da14      	bge.n	800f28e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 800f264:	b2bf      	uxth	r7, r7
 800f266:	eba7 040c 	sub.w	r4, r7, ip
 800f26a:	b2a4      	uxth	r4, r4
 800f26c:	46bc      	mov	ip, r7
 800f26e:	2600      	movs	r6, #0
 800f270:	e7b3      	b.n	800f1da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f272:	4684      	mov	ip, r0
 800f274:	b16c      	cbz	r4, 800f292 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 800f276:	42b8      	cmp	r0, r7
 800f278:	dd00      	ble.n	800f27c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 800f27a:	b2b8      	uxth	r0, r7
 800f27c:	2400      	movs	r4, #0
 800f27e:	e003      	b.n	800f288 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 800f280:	f04f 0c01 	mov.w	ip, #1
 800f284:	2400      	movs	r4, #0
 800f286:	4660      	mov	r0, ip
 800f288:	4626      	mov	r6, r4
 800f28a:	46a0      	mov	r8, r4
 800f28c:	e7a5      	b.n	800f1da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f28e:	2400      	movs	r4, #0
 800f290:	e7ed      	b.n	800f26e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 800f292:	4626      	mov	r6, r4
 800f294:	46a0      	mov	r8, r4
 800f296:	e7a0      	b.n	800f1da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f298:	2900      	cmp	r1, #0
 800f29a:	d0b0      	beq.n	800f1fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f29c:	2720      	movs	r7, #32
 800f29e:	682e      	ldr	r6, [r5, #0]
 800f2a0:	2900      	cmp	r1, #0
 800f2a2:	d0ac      	beq.n	800f1fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f2a4:	3901      	subs	r1, #1
 800f2a6:	4296      	cmp	r6, r2
 800f2a8:	b289      	uxth	r1, r1
 800f2aa:	daa7      	bge.n	800f1fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f2ac:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f2b0:	682b      	ldr	r3, [r5, #0]
 800f2b2:	3301      	adds	r3, #1
 800f2b4:	602b      	str	r3, [r5, #0]
 800f2b6:	e7f2      	b.n	800f29e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800f2b8:	b188      	cbz	r0, 800f2de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f2ba:	682b      	ldr	r3, [r5, #0]
 800f2bc:	3801      	subs	r0, #1
 800f2be:	429a      	cmp	r2, r3
 800f2c0:	b280      	uxth	r0, r0
 800f2c2:	dd0c      	ble.n	800f2de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f2c4:	f8db 3000 	ldr.w	r3, [fp]
 800f2c8:	1c9c      	adds	r4, r3, #2
 800f2ca:	f8cb 4000 	str.w	r4, [fp]
 800f2ce:	881c      	ldrh	r4, [r3, #0]
 800f2d0:	682b      	ldr	r3, [r5, #0]
 800f2d2:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 800f2d6:	682b      	ldr	r3, [r5, #0]
 800f2d8:	3301      	adds	r3, #1
 800f2da:	602b      	str	r3, [r5, #0]
 800f2dc:	e7ec      	b.n	800f2b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f2de:	2620      	movs	r6, #32
 800f2e0:	b151      	cbz	r1, 800f2f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f2e2:	6828      	ldr	r0, [r5, #0]
 800f2e4:	3901      	subs	r1, #1
 800f2e6:	4282      	cmp	r2, r0
 800f2e8:	b289      	uxth	r1, r1
 800f2ea:	dd05      	ble.n	800f2f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f2ec:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 800f2f0:	682b      	ldr	r3, [r5, #0]
 800f2f2:	3301      	adds	r3, #1
 800f2f4:	602b      	str	r3, [r5, #0]
 800f2f6:	e7f3      	b.n	800f2e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 800f2f8:	b005      	add	sp, #20
 800f2fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f2fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800f2fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f302:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 800f306:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 800f30a:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 800f30e:	2400      	movs	r4, #0
 800f310:	8014      	strh	r4, [r2, #0]
 800f312:	701c      	strb	r4, [r3, #0]
 800f314:	f888 4000 	strb.w	r4, [r8]
 800f318:	f88c 4000 	strb.w	r4, [ip]
 800f31c:	f88e 4000 	strb.w	r4, [lr]
 800f320:	703c      	strb	r4, [r7, #0]
 800f322:	6804      	ldr	r4, [r0, #0]
 800f324:	b1a4      	cbz	r4, 800f350 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 800f326:	8824      	ldrh	r4, [r4, #0]
 800f328:	f04f 0901 	mov.w	r9, #1
 800f32c:	b314      	cbz	r4, 800f374 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f32e:	2c2b      	cmp	r4, #43	; 0x2b
 800f330:	d001      	beq.n	800f336 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800f332:	2c20      	cmp	r4, #32
 800f334:	d110      	bne.n	800f358 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 800f336:	8014      	strh	r4, [r2, #0]
 800f338:	6804      	ldr	r4, [r0, #0]
 800f33a:	b10c      	cbz	r4, 800f340 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800f33c:	3402      	adds	r4, #2
 800f33e:	6004      	str	r4, [r0, #0]
 800f340:	680c      	ldr	r4, [r1, #0]
 800f342:	b10c      	cbz	r4, 800f348 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 800f344:	3401      	adds	r4, #1
 800f346:	600c      	str	r4, [r1, #0]
 800f348:	6804      	ldr	r4, [r0, #0]
 800f34a:	b17c      	cbz	r4, 800f36c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 800f34c:	8824      	ldrh	r4, [r4, #0]
 800f34e:	e7ed      	b.n	800f32c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f350:	680c      	ldr	r4, [r1, #0]
 800f352:	b17c      	cbz	r4, 800f374 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f354:	7824      	ldrb	r4, [r4, #0]
 800f356:	e7e7      	b.n	800f328 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800f358:	2c2d      	cmp	r4, #45	; 0x2d
 800f35a:	d102      	bne.n	800f362 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 800f35c:	f883 9000 	strb.w	r9, [r3]
 800f360:	e7ea      	b.n	800f338 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f362:	2c23      	cmp	r4, #35	; 0x23
 800f364:	d107      	bne.n	800f376 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 800f366:	f888 9000 	strb.w	r9, [r8]
 800f36a:	e7e5      	b.n	800f338 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f36c:	680c      	ldr	r4, [r1, #0]
 800f36e:	b10c      	cbz	r4, 800f374 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f370:	7824      	ldrb	r4, [r4, #0]
 800f372:	e7db      	b.n	800f32c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f374:	2400      	movs	r4, #0
 800f376:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f37a:	2b09      	cmp	r3, #9
 800f37c:	d901      	bls.n	800f382 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 800f37e:	2c2a      	cmp	r4, #42	; 0x2a
 800f380:	d122      	bne.n	800f3c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f382:	2301      	movs	r3, #1
 800f384:	2c30      	cmp	r4, #48	; 0x30
 800f386:	f88e 3000 	strb.w	r3, [lr]
 800f38a:	d10d      	bne.n	800f3a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f38c:	f88c 3000 	strb.w	r3, [ip]
 800f390:	6803      	ldr	r3, [r0, #0]
 800f392:	b10b      	cbz	r3, 800f398 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 800f394:	3302      	adds	r3, #2
 800f396:	6003      	str	r3, [r0, #0]
 800f398:	680b      	ldr	r3, [r1, #0]
 800f39a:	b10b      	cbz	r3, 800f3a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800f39c:	3301      	adds	r3, #1
 800f39e:	600b      	str	r3, [r1, #0]
 800f3a0:	6803      	ldr	r3, [r0, #0]
 800f3a2:	2b00      	cmp	r3, #0
 800f3a4:	d02f      	beq.n	800f406 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 800f3a6:	881c      	ldrh	r4, [r3, #0]
 800f3a8:	2c2a      	cmp	r4, #42	; 0x2a
 800f3aa:	d135      	bne.n	800f418 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f3ac:	f04f 33ff 	mov.w	r3, #4294967295
 800f3b0:	6033      	str	r3, [r6, #0]
 800f3b2:	6803      	ldr	r3, [r0, #0]
 800f3b4:	b10b      	cbz	r3, 800f3ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 800f3b6:	3302      	adds	r3, #2
 800f3b8:	6003      	str	r3, [r0, #0]
 800f3ba:	680b      	ldr	r3, [r1, #0]
 800f3bc:	b10b      	cbz	r3, 800f3c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 800f3be:	3301      	adds	r3, #1
 800f3c0:	600b      	str	r3, [r1, #0]
 800f3c2:	6803      	ldr	r3, [r0, #0]
 800f3c4:	b31b      	cbz	r3, 800f40e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800f3c6:	881c      	ldrh	r4, [r3, #0]
 800f3c8:	2c2e      	cmp	r4, #46	; 0x2e
 800f3ca:	d11a      	bne.n	800f402 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f3cc:	2301      	movs	r3, #1
 800f3ce:	703b      	strb	r3, [r7, #0]
 800f3d0:	6803      	ldr	r3, [r0, #0]
 800f3d2:	b10b      	cbz	r3, 800f3d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 800f3d4:	3302      	adds	r3, #2
 800f3d6:	6003      	str	r3, [r0, #0]
 800f3d8:	680b      	ldr	r3, [r1, #0]
 800f3da:	b10b      	cbz	r3, 800f3e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 800f3dc:	3301      	adds	r3, #1
 800f3de:	600b      	str	r3, [r1, #0]
 800f3e0:	6803      	ldr	r3, [r0, #0]
 800f3e2:	2b00      	cmp	r3, #0
 800f3e4:	d036      	beq.n	800f454 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 800f3e6:	881b      	ldrh	r3, [r3, #0]
 800f3e8:	2b2a      	cmp	r3, #42	; 0x2a
 800f3ea:	d137      	bne.n	800f45c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f3ec:	f04f 33ff 	mov.w	r3, #4294967295
 800f3f0:	602b      	str	r3, [r5, #0]
 800f3f2:	6803      	ldr	r3, [r0, #0]
 800f3f4:	b10b      	cbz	r3, 800f3fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 800f3f6:	3302      	adds	r3, #2
 800f3f8:	6003      	str	r3, [r0, #0]
 800f3fa:	680b      	ldr	r3, [r1, #0]
 800f3fc:	b10b      	cbz	r3, 800f402 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f3fe:	3301      	adds	r3, #1
 800f400:	600b      	str	r3, [r1, #0]
 800f402:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f406:	680c      	ldr	r4, [r1, #0]
 800f408:	b134      	cbz	r4, 800f418 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f40a:	7824      	ldrb	r4, [r4, #0]
 800f40c:	e7cc      	b.n	800f3a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f40e:	680b      	ldr	r3, [r1, #0]
 800f410:	2b00      	cmp	r3, #0
 800f412:	d0f6      	beq.n	800f402 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f414:	781c      	ldrb	r4, [r3, #0]
 800f416:	e7d7      	b.n	800f3c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f418:	2300      	movs	r3, #0
 800f41a:	6033      	str	r3, [r6, #0]
 800f41c:	220a      	movs	r2, #10
 800f41e:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800f422:	fa1f f38c 	uxth.w	r3, ip
 800f426:	2b09      	cmp	r3, #9
 800f428:	d8ce      	bhi.n	800f3c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f42a:	6833      	ldr	r3, [r6, #0]
 800f42c:	fb02 c303 	mla	r3, r2, r3, ip
 800f430:	6033      	str	r3, [r6, #0]
 800f432:	6803      	ldr	r3, [r0, #0]
 800f434:	b10b      	cbz	r3, 800f43a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 800f436:	3302      	adds	r3, #2
 800f438:	6003      	str	r3, [r0, #0]
 800f43a:	680b      	ldr	r3, [r1, #0]
 800f43c:	b10b      	cbz	r3, 800f442 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 800f43e:	3301      	adds	r3, #1
 800f440:	600b      	str	r3, [r1, #0]
 800f442:	6803      	ldr	r3, [r0, #0]
 800f444:	b10b      	cbz	r3, 800f44a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 800f446:	881c      	ldrh	r4, [r3, #0]
 800f448:	e7e9      	b.n	800f41e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f44a:	680c      	ldr	r4, [r1, #0]
 800f44c:	2c00      	cmp	r4, #0
 800f44e:	d0e6      	beq.n	800f41e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f450:	7824      	ldrb	r4, [r4, #0]
 800f452:	e7e4      	b.n	800f41e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f454:	680b      	ldr	r3, [r1, #0]
 800f456:	b10b      	cbz	r3, 800f45c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f458:	781b      	ldrb	r3, [r3, #0]
 800f45a:	e7c5      	b.n	800f3e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 800f45c:	2200      	movs	r2, #0
 800f45e:	602a      	str	r2, [r5, #0]
 800f460:	240a      	movs	r4, #10
 800f462:	3b30      	subs	r3, #48	; 0x30
 800f464:	b29e      	uxth	r6, r3
 800f466:	2e09      	cmp	r6, #9
 800f468:	682a      	ldr	r2, [r5, #0]
 800f46a:	d813      	bhi.n	800f494 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 800f46c:	fb04 3302 	mla	r3, r4, r2, r3
 800f470:	602b      	str	r3, [r5, #0]
 800f472:	6803      	ldr	r3, [r0, #0]
 800f474:	b10b      	cbz	r3, 800f47a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 800f476:	3302      	adds	r3, #2
 800f478:	6003      	str	r3, [r0, #0]
 800f47a:	680b      	ldr	r3, [r1, #0]
 800f47c:	b10b      	cbz	r3, 800f482 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 800f47e:	3301      	adds	r3, #1
 800f480:	600b      	str	r3, [r1, #0]
 800f482:	6803      	ldr	r3, [r0, #0]
 800f484:	b10b      	cbz	r3, 800f48a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 800f486:	881b      	ldrh	r3, [r3, #0]
 800f488:	e7eb      	b.n	800f462 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f48a:	680b      	ldr	r3, [r1, #0]
 800f48c:	2b00      	cmp	r3, #0
 800f48e:	d0e8      	beq.n	800f462 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f490:	781b      	ldrb	r3, [r3, #0]
 800f492:	e7e6      	b.n	800f462 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f494:	2a06      	cmp	r2, #6
 800f496:	bfa8      	it	ge
 800f498:	2206      	movge	r2, #6
 800f49a:	602a      	str	r2, [r5, #0]
 800f49c:	e7b1      	b.n	800f402 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0800f49e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800f49e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4a2:	b0a3      	sub	sp, #140	; 0x8c
 800f4a4:	2600      	movs	r6, #0
 800f4a6:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 800f4aa:	4607      	mov	r7, r0
 800f4ac:	4688      	mov	r8, r1
 800f4ae:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800f4b2:	4631      	mov	r1, r6
 800f4b4:	2242      	movs	r2, #66	; 0x42
 800f4b6:	4648      	mov	r0, r9
 800f4b8:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800f4ba:	960d      	str	r6, [sp, #52]	; 0x34
 800f4bc:	f00c fb3a 	bl	801bb34 <memset>
 800f4c0:	b15f      	cbz	r7, 800f4da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 800f4c2:	f108 3aff 	add.w	sl, r8, #4294967295
 800f4c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f4c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f4ca:	b152      	cbz	r2, 800f4e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 800f4cc:	8812      	ldrh	r2, [r2, #0]
 800f4ce:	b10a      	cbz	r2, 800f4d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f4d0:	459a      	cmp	sl, r3
 800f4d2:	dc2e      	bgt.n	800f532 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 800f4d4:	2200      	movs	r2, #0
 800f4d6:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f4da:	4638      	mov	r0, r7
 800f4dc:	b023      	add	sp, #140	; 0x8c
 800f4de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f4e2:	9a08      	ldr	r2, [sp, #32]
 800f4e4:	2a00      	cmp	r2, #0
 800f4e6:	d0f5      	beq.n	800f4d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f4e8:	7812      	ldrb	r2, [r2, #0]
 800f4ea:	e7f0      	b.n	800f4ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 800f4ec:	2d00      	cmp	r5, #0
 800f4ee:	d0ea      	beq.n	800f4c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f4f0:	782a      	ldrb	r2, [r5, #0]
 800f4f2:	b142      	cbz	r2, 800f506 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 800f4f4:	2a25      	cmp	r2, #37	; 0x25
 800f4f6:	d001      	beq.n	800f4fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 800f4f8:	459a      	cmp	sl, r3
 800f4fa:	dc08      	bgt.n	800f50e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 800f4fc:	f1bb 0f00 	cmp.w	fp, #0
 800f500:	d121      	bne.n	800f546 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 800f502:	2d00      	cmp	r5, #0
 800f504:	d0df      	beq.n	800f4c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f506:	782a      	ldrb	r2, [r5, #0]
 800f508:	f04f 0b00 	mov.w	fp, #0
 800f50c:	e01d      	b.n	800f54a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 800f50e:	f1bb 0f00 	cmp.w	fp, #0
 800f512:	d078      	beq.n	800f606 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 800f514:	f8bb 2000 	ldrh.w	r2, [fp]
 800f518:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f51c:	f1bb 0f00 	cmp.w	fp, #0
 800f520:	d002      	beq.n	800f528 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 800f522:	f10b 0202 	add.w	r2, fp, #2
 800f526:	9209      	str	r2, [sp, #36]	; 0x24
 800f528:	b10d      	cbz	r5, 800f52e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 800f52a:	3501      	adds	r5, #1
 800f52c:	9508      	str	r5, [sp, #32]
 800f52e:	3301      	adds	r3, #1
 800f530:	930d      	str	r3, [sp, #52]	; 0x34
 800f532:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 800f536:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f538:	f1bb 0f00 	cmp.w	fp, #0
 800f53c:	d0d6      	beq.n	800f4ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 800f53e:	f8bb 2000 	ldrh.w	r2, [fp]
 800f542:	2a00      	cmp	r2, #0
 800f544:	d1d6      	bne.n	800f4f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 800f546:	f8bb 2000 	ldrh.w	r2, [fp]
 800f54a:	2a00      	cmp	r2, #0
 800f54c:	d0bb      	beq.n	800f4c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f54e:	459a      	cmp	sl, r3
 800f550:	ddb9      	ble.n	800f4c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f552:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 800f556:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 800f55a:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800f55e:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 800f562:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 800f566:	960e      	str	r6, [sp, #56]	; 0x38
 800f568:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 800f56c:	960f      	str	r6, [sp, #60]	; 0x3c
 800f56e:	f1bb 0f00 	cmp.w	fp, #0
 800f572:	d002      	beq.n	800f57a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 800f574:	f10b 0302 	add.w	r3, fp, #2
 800f578:	9309      	str	r3, [sp, #36]	; 0x24
 800f57a:	b10d      	cbz	r5, 800f580 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 800f57c:	1c6b      	adds	r3, r5, #1
 800f57e:	9308      	str	r3, [sp, #32]
 800f580:	ab0f      	add	r3, sp, #60	; 0x3c
 800f582:	9305      	str	r3, [sp, #20]
 800f584:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 800f588:	9304      	str	r3, [sp, #16]
 800f58a:	ab0e      	add	r3, sp, #56	; 0x38
 800f58c:	9303      	str	r3, [sp, #12]
 800f58e:	ab0c      	add	r3, sp, #48	; 0x30
 800f590:	9302      	str	r3, [sp, #8]
 800f592:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 800f596:	9301      	str	r3, [sp, #4]
 800f598:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800f59c:	9300      	str	r3, [sp, #0]
 800f59e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 800f5a2:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 800f5a6:	a908      	add	r1, sp, #32
 800f5a8:	a809      	add	r0, sp, #36	; 0x24
 800f5aa:	f7ff fea8 	bl	800f2fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800f5ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f5b0:	2b00      	cmp	r3, #0
 800f5b2:	bfbe      	ittt	lt
 800f5b4:	6823      	ldrlt	r3, [r4, #0]
 800f5b6:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f5ba:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f5bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f5be:	bfb8      	it	lt
 800f5c0:	3404      	addlt	r4, #4
 800f5c2:	2b00      	cmp	r3, #0
 800f5c4:	bfb8      	it	lt
 800f5c6:	6823      	ldrlt	r3, [r4, #0]
 800f5c8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 800f5cc:	bfbe      	ittt	lt
 800f5ce:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f5d2:	930f      	strlt	r3, [sp, #60]	; 0x3c
 800f5d4:	3404      	addlt	r4, #4
 800f5d6:	b1d9      	cbz	r1, 800f610 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 800f5d8:	880b      	ldrh	r3, [r1, #0]
 800f5da:	2b69      	cmp	r3, #105	; 0x69
 800f5dc:	d01f      	beq.n	800f61e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f5de:	d82f      	bhi.n	800f640 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 800f5e0:	2b58      	cmp	r3, #88	; 0x58
 800f5e2:	d01c      	beq.n	800f61e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f5e4:	d818      	bhi.n	800f618 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 800f5e6:	2b25      	cmp	r3, #37	; 0x25
 800f5e8:	d034      	beq.n	800f654 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 800f5ea:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 800f5ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f5f0:	f1bb 0f00 	cmp.w	fp, #0
 800f5f4:	f000 80b8 	beq.w	800f768 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 800f5f8:	f8bb 5000 	ldrh.w	r5, [fp]
 800f5fc:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 800f600:	3301      	adds	r3, #1
 800f602:	930d      	str	r3, [sp, #52]	; 0x34
 800f604:	e029      	b.n	800f65a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f606:	b10d      	cbz	r5, 800f60c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 800f608:	782a      	ldrb	r2, [r5, #0]
 800f60a:	e785      	b.n	800f518 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f60c:	462a      	mov	r2, r5
 800f60e:	e783      	b.n	800f518 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f610:	2a00      	cmp	r2, #0
 800f612:	d0ea      	beq.n	800f5ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f614:	7813      	ldrb	r3, [r2, #0]
 800f616:	e7e0      	b.n	800f5da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 800f618:	3b63      	subs	r3, #99	; 0x63
 800f61a:	2b01      	cmp	r3, #1
 800f61c:	d8e5      	bhi.n	800f5ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f61e:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 800f622:	b329      	cbz	r1, 800f670 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 800f624:	880b      	ldrh	r3, [r1, #0]
 800f626:	2b69      	cmp	r3, #105	; 0x69
 800f628:	d063      	beq.n	800f6f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f62a:	d825      	bhi.n	800f678 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 800f62c:	2b63      	cmp	r3, #99	; 0x63
 800f62e:	d038      	beq.n	800f6a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 800f630:	2b64      	cmp	r3, #100	; 0x64
 800f632:	d05e      	beq.n	800f6f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f634:	2b58      	cmp	r3, #88	; 0x58
 800f636:	d07b      	beq.n	800f730 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 800f638:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800f63c:	4625      	mov	r5, r4
 800f63e:	e036      	b.n	800f6ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f640:	2b73      	cmp	r3, #115	; 0x73
 800f642:	d0ec      	beq.n	800f61e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f644:	d802      	bhi.n	800f64c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 800f646:	2b6f      	cmp	r3, #111	; 0x6f
 800f648:	d1cf      	bne.n	800f5ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f64a:	e7e8      	b.n	800f61e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f64c:	2b75      	cmp	r3, #117	; 0x75
 800f64e:	d0e6      	beq.n	800f61e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f650:	2b78      	cmp	r3, #120	; 0x78
 800f652:	e7f9      	b.n	800f648 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 800f654:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f656:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 800f65a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f65c:	b10b      	cbz	r3, 800f662 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800f65e:	3302      	adds	r3, #2
 800f660:	9309      	str	r3, [sp, #36]	; 0x24
 800f662:	9b08      	ldr	r3, [sp, #32]
 800f664:	2b00      	cmp	r3, #0
 800f666:	f43f af2e 	beq.w	800f4c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f66a:	3301      	adds	r3, #1
 800f66c:	9308      	str	r3, [sp, #32]
 800f66e:	e72a      	b.n	800f4c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f670:	2a00      	cmp	r2, #0
 800f672:	d0e1      	beq.n	800f638 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f674:	7813      	ldrb	r3, [r2, #0]
 800f676:	e7d6      	b.n	800f626 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 800f678:	2b73      	cmp	r3, #115	; 0x73
 800f67a:	d036      	beq.n	800f6ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 800f67c:	d807      	bhi.n	800f68e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 800f67e:	2b6f      	cmp	r3, #111	; 0x6f
 800f680:	d1da      	bne.n	800f638 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f682:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f684:	1d25      	adds	r5, r4, #4
 800f686:	eba8 0202 	sub.w	r2, r8, r2
 800f68a:	2308      	movs	r3, #8
 800f68c:	e04a      	b.n	800f724 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800f68e:	2b75      	cmp	r3, #117	; 0x75
 800f690:	d043      	beq.n	800f71a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 800f692:	2b78      	cmp	r3, #120	; 0x78
 800f694:	d1d0      	bne.n	800f638 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f696:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f698:	1d25      	adds	r5, r4, #4
 800f69a:	eba8 0202 	sub.w	r2, r8, r2
 800f69e:	2310      	movs	r3, #16
 800f6a0:	e040      	b.n	800f724 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800f6a2:	7823      	ldrb	r3, [r4, #0]
 800f6a4:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 800f6a8:	1d25      	adds	r5, r4, #4
 800f6aa:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 800f6ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f6b0:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800f6b4:	2b00      	cmp	r3, #0
 800f6b6:	d052      	beq.n	800f75e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 800f6b8:	881a      	ldrh	r2, [r3, #0]
 800f6ba:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 800f6be:	a80d      	add	r0, sp, #52	; 0x34
 800f6c0:	9005      	str	r0, [sp, #20]
 800f6c2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 800f6c6:	9004      	str	r0, [sp, #16]
 800f6c8:	980e      	ldr	r0, [sp, #56]	; 0x38
 800f6ca:	9003      	str	r0, [sp, #12]
 800f6cc:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 800f6d0:	9002      	str	r0, [sp, #8]
 800f6d2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800f6d4:	9001      	str	r0, [sp, #4]
 800f6d6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 800f6da:	9000      	str	r0, [sp, #0]
 800f6dc:	e9cd 8706 	strd	r8, r7, [sp, #24]
 800f6e0:	a810      	add	r0, sp, #64	; 0x40
 800f6e2:	f7ff fd49 	bl	800f178 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800f6e6:	462c      	mov	r4, r5
 800f6e8:	e7b7      	b.n	800f65a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f6ea:	6823      	ldr	r3, [r4, #0]
 800f6ec:	1d25      	adds	r5, r4, #4
 800f6ee:	9310      	str	r3, [sp, #64]	; 0x40
 800f6f0:	e7dd      	b.n	800f6ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f6f2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f6f4:	6820      	ldr	r0, [r4, #0]
 800f6f6:	eba8 0202 	sub.w	r2, r8, r2
 800f6fa:	230a      	movs	r3, #10
 800f6fc:	b292      	uxth	r2, r2
 800f6fe:	4649      	mov	r1, r9
 800f700:	f7ff fd08 	bl	800f114 <_ZN8touchgfx7Unicode4itoaElPtti>
 800f704:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f708:	2b2d      	cmp	r3, #45	; 0x2d
 800f70a:	f104 0504 	add.w	r5, r4, #4
 800f70e:	d1ce      	bne.n	800f6ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f710:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f714:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f716:	3302      	adds	r3, #2
 800f718:	e7e9      	b.n	800f6ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 800f71a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f71c:	1d25      	adds	r5, r4, #4
 800f71e:	eba8 0202 	sub.w	r2, r8, r2
 800f722:	230a      	movs	r3, #10
 800f724:	b292      	uxth	r2, r2
 800f726:	4649      	mov	r1, r9
 800f728:	6820      	ldr	r0, [r4, #0]
 800f72a:	f7ff fcd5 	bl	800f0d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800f72e:	e7be      	b.n	800f6ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f730:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f732:	6820      	ldr	r0, [r4, #0]
 800f734:	eba8 0202 	sub.w	r2, r8, r2
 800f738:	b292      	uxth	r2, r2
 800f73a:	2310      	movs	r3, #16
 800f73c:	4649      	mov	r1, r9
 800f73e:	f7ff fccb 	bl	800f0d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800f742:	1d25      	adds	r5, r4, #4
 800f744:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 800f748:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800f74c:	2b00      	cmp	r3, #0
 800f74e:	d0ae      	beq.n	800f6ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f750:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 800f754:	2919      	cmp	r1, #25
 800f756:	d8f7      	bhi.n	800f748 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800f758:	3b20      	subs	r3, #32
 800f75a:	8013      	strh	r3, [r2, #0]
 800f75c:	e7f4      	b.n	800f748 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800f75e:	9a08      	ldr	r2, [sp, #32]
 800f760:	2a00      	cmp	r2, #0
 800f762:	d0aa      	beq.n	800f6ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800f764:	7812      	ldrb	r2, [r2, #0]
 800f766:	e7a8      	b.n	800f6ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800f768:	2d00      	cmp	r5, #0
 800f76a:	f43f af47 	beq.w	800f5fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 800f76e:	782d      	ldrb	r5, [r5, #0]
 800f770:	e744      	b.n	800f5fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0800f772 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800f772:	b507      	push	{r0, r1, r2, lr}
 800f774:	9300      	str	r3, [sp, #0]
 800f776:	4613      	mov	r3, r2
 800f778:	2200      	movs	r2, #0
 800f77a:	f7ff fe90 	bl	800f49e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800f77e:	b003      	add	sp, #12
 800f780:	f85d fb04 	ldr.w	pc, [sp], #4

0800f784 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800f784:	b40c      	push	{r2, r3}
 800f786:	b507      	push	{r0, r1, r2, lr}
 800f788:	ab04      	add	r3, sp, #16
 800f78a:	f853 2b04 	ldr.w	r2, [r3], #4
 800f78e:	9301      	str	r3, [sp, #4]
 800f790:	f7ff ffef 	bl	800f772 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800f794:	b003      	add	sp, #12
 800f796:	f85d eb04 	ldr.w	lr, [sp], #4
 800f79a:	b002      	add	sp, #8
 800f79c:	4770      	bx	lr
	...

0800f7a0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800f7a0:	4b01      	ldr	r3, [pc, #4]	; (800f7a8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800f7a2:	6018      	str	r0, [r3, #0]
 800f7a4:	4770      	bx	lr
 800f7a6:	bf00      	nop
 800f7a8:	20013568 	.word	0x20013568

0800f7ac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800f7ac:	4b06      	ldr	r3, [pc, #24]	; (800f7c8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800f7ae:	881a      	ldrh	r2, [r3, #0]
 800f7b0:	4282      	cmp	r2, r0
 800f7b2:	d807      	bhi.n	800f7c4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800f7b4:	4b05      	ldr	r3, [pc, #20]	; (800f7cc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800f7b6:	881b      	ldrh	r3, [r3, #0]
 800f7b8:	4413      	add	r3, r2
 800f7ba:	4298      	cmp	r0, r3
 800f7bc:	bfac      	ite	ge
 800f7be:	2000      	movge	r0, #0
 800f7c0:	2001      	movlt	r0, #1
 800f7c2:	4770      	bx	lr
 800f7c4:	2000      	movs	r0, #0
 800f7c6:	4770      	bx	lr
 800f7c8:	20013588 	.word	0x20013588
 800f7cc:	2001358c 	.word	0x2001358c

0800f7d0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800f7d0:	b508      	push	{r3, lr}
 800f7d2:	4601      	mov	r1, r0
 800f7d4:	f7ff ffea 	bl	800f7ac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800f7d8:	b118      	cbz	r0, 800f7e2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800f7da:	4b02      	ldr	r3, [pc, #8]	; (800f7e4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800f7dc:	681b      	ldr	r3, [r3, #0]
 800f7de:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800f7e2:	bd08      	pop	{r3, pc}
 800f7e4:	2001356c 	.word	0x2001356c

0800f7e8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800f7e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f7ec:	4d28      	ldr	r5, [pc, #160]	; (800f890 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800f7ee:	682b      	ldr	r3, [r5, #0]
 800f7f0:	2b00      	cmp	r3, #0
 800f7f2:	d04a      	beq.n	800f88a <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800f7f4:	4a27      	ldr	r2, [pc, #156]	; (800f894 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800f7f6:	4e28      	ldr	r6, [pc, #160]	; (800f898 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800f7f8:	8810      	ldrh	r0, [r2, #0]
 800f7fa:	f8b6 8000 	ldrh.w	r8, [r6]
 800f7fe:	4c27      	ldr	r4, [pc, #156]	; (800f89c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800f800:	4f27      	ldr	r7, [pc, #156]	; (800f8a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800f802:	4440      	add	r0, r8
 800f804:	1c41      	adds	r1, r0, #1
 800f806:	f021 0101 	bic.w	r1, r1, #1
 800f80a:	0409      	lsls	r1, r1, #16
 800f80c:	0c09      	lsrs	r1, r1, #16
 800f80e:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800f812:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800f816:	eb03 020e 	add.w	r2, r3, lr
 800f81a:	eb0e 010c 	add.w	r1, lr, ip
 800f81e:	6022      	str	r2, [r4, #0]
 800f820:	185a      	adds	r2, r3, r1
 800f822:	603a      	str	r2, [r7, #0]
 800f824:	220e      	movs	r2, #14
 800f826:	fb02 f208 	mul.w	r2, r2, r8
 800f82a:	3203      	adds	r2, #3
 800f82c:	f022 0203 	bic.w	r2, r2, #3
 800f830:	4411      	add	r1, r2
 800f832:	440b      	add	r3, r1
 800f834:	491b      	ldr	r1, [pc, #108]	; (800f8a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800f836:	600b      	str	r3, [r1, #0]
 800f838:	491b      	ldr	r1, [pc, #108]	; (800f8a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800f83a:	2300      	movs	r3, #0
 800f83c:	800b      	strh	r3, [r1, #0]
 800f83e:	491b      	ldr	r1, [pc, #108]	; (800f8ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800f840:	6809      	ldr	r1, [r1, #0]
 800f842:	eba1 010e 	sub.w	r1, r1, lr
 800f846:	eba1 010c 	sub.w	r1, r1, ip
 800f84a:	1a8a      	subs	r2, r1, r2
 800f84c:	4918      	ldr	r1, [pc, #96]	; (800f8b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800f84e:	600a      	str	r2, [r1, #0]
 800f850:	4a18      	ldr	r2, [pc, #96]	; (800f8b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800f852:	469c      	mov	ip, r3
 800f854:	8013      	strh	r3, [r2, #0]
 800f856:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f85a:	4283      	cmp	r3, r0
 800f85c:	d10d      	bne.n	800f87a <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800f85e:	8835      	ldrh	r5, [r6, #0]
 800f860:	6838      	ldr	r0, [r7, #0]
 800f862:	2300      	movs	r3, #0
 800f864:	240e      	movs	r4, #14
 800f866:	429d      	cmp	r5, r3
 800f868:	d90f      	bls.n	800f88a <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800f86a:	fb04 0203 	mla	r2, r4, r3, r0
 800f86e:	3301      	adds	r3, #1
 800f870:	7b11      	ldrb	r1, [r2, #12]
 800f872:	f36f 1145 	bfc	r1, #5, #1
 800f876:	7311      	strb	r1, [r2, #12]
 800f878:	e7f5      	b.n	800f866 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800f87a:	682a      	ldr	r2, [r5, #0]
 800f87c:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800f880:	6822      	ldr	r2, [r4, #0]
 800f882:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800f886:	3301      	adds	r3, #1
 800f888:	e7e7      	b.n	800f85a <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800f88a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f88e:	bf00      	nop
 800f890:	2001356c 	.word	0x2001356c
 800f894:	20013588 	.word	0x20013588
 800f898:	2001358c 	.word	0x2001358c
 800f89c:	20013580 	.word	0x20013580
 800f8a0:	20013570 	.word	0x20013570
 800f8a4:	20013578 	.word	0x20013578
 800f8a8:	2001358a 	.word	0x2001358a
 800f8ac:	20013574 	.word	0x20013574
 800f8b0:	20013584 	.word	0x20013584
 800f8b4:	2001357c 	.word	0x2001357c

0800f8b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800f8b8:	b510      	push	{r4, lr}
 800f8ba:	4b10      	ldr	r3, [pc, #64]	; (800f8fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800f8bc:	681b      	ldr	r3, [r3, #0]
 800f8be:	b9db      	cbnz	r3, 800f8f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f8c0:	b1d1      	cbz	r1, 800f8f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f8c2:	4b0f      	ldr	r3, [pc, #60]	; (800f900 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800f8c4:	801a      	strh	r2, [r3, #0]
 800f8c6:	4b0f      	ldr	r3, [pc, #60]	; (800f904 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800f8c8:	881b      	ldrh	r3, [r3, #0]
 800f8ca:	b292      	uxth	r2, r2
 800f8cc:	240e      	movs	r4, #14
 800f8ce:	4413      	add	r3, r2
 800f8d0:	4362      	muls	r2, r4
 800f8d2:	2406      	movs	r4, #6
 800f8d4:	fb04 2203 	mla	r2, r4, r3, r2
 800f8d8:	428a      	cmp	r2, r1
 800f8da:	d305      	bcc.n	800f8e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800f8dc:	4b0a      	ldr	r3, [pc, #40]	; (800f908 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800f8de:	4a0b      	ldr	r2, [pc, #44]	; (800f90c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800f8e0:	480b      	ldr	r0, [pc, #44]	; (800f910 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800f8e2:	2135      	movs	r1, #53	; 0x35
 800f8e4:	f00c f89a 	bl	801ba1c <__assert_func>
 800f8e8:	4b0a      	ldr	r3, [pc, #40]	; (800f914 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800f8ea:	6019      	str	r1, [r3, #0]
 800f8ec:	4b0a      	ldr	r3, [pc, #40]	; (800f918 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800f8ee:	6018      	str	r0, [r3, #0]
 800f8f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f8f4:	f7ff bf78 	b.w	800f7e8 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800f8f8:	bd10      	pop	{r4, pc}
 800f8fa:	bf00      	nop
 800f8fc:	20013578 	.word	0x20013578
 800f900:	2001358c 	.word	0x2001358c
 800f904:	20013588 	.word	0x20013588
 800f908:	0802005e 	.word	0x0802005e
 800f90c:	080200f3 	.word	0x080200f3
 800f910:	08020039 	.word	0x08020039
 800f914:	20013574 	.word	0x20013574
 800f918:	2001356c 	.word	0x2001356c

0800f91c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800f91c:	b470      	push	{r4, r5, r6}
 800f91e:	4c07      	ldr	r4, [pc, #28]	; (800f93c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800f920:	6826      	ldr	r6, [r4, #0]
 800f922:	4605      	mov	r5, r0
 800f924:	4610      	mov	r0, r2
 800f926:	9a03      	ldr	r2, [sp, #12]
 800f928:	b936      	cbnz	r6, 800f938 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800f92a:	6025      	str	r5, [r4, #0]
 800f92c:	4c04      	ldr	r4, [pc, #16]	; (800f940 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800f92e:	8021      	strh	r1, [r4, #0]
 800f930:	bc70      	pop	{r4, r5, r6}
 800f932:	4619      	mov	r1, r3
 800f934:	f7ff bfc0 	b.w	800f8b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800f938:	bc70      	pop	{r4, r5, r6}
 800f93a:	4770      	bx	lr
 800f93c:	20013590 	.word	0x20013590
 800f940:	20013588 	.word	0x20013588

0800f944 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800f944:	b508      	push	{r3, lr}
 800f946:	4b14      	ldr	r3, [pc, #80]	; (800f998 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800f948:	6819      	ldr	r1, [r3, #0]
 800f94a:	b931      	cbnz	r1, 800f95a <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800f94c:	4b13      	ldr	r3, [pc, #76]	; (800f99c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800f94e:	4a14      	ldr	r2, [pc, #80]	; (800f9a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800f950:	4814      	ldr	r0, [pc, #80]	; (800f9a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800f952:	f240 4185 	movw	r1, #1157	; 0x485
 800f956:	f00c f861 	bl	801ba1c <__assert_func>
 800f95a:	4a13      	ldr	r2, [pc, #76]	; (800f9a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800f95c:	8803      	ldrh	r3, [r0, #0]
 800f95e:	8812      	ldrh	r2, [r2, #0]
 800f960:	4293      	cmp	r3, r2
 800f962:	d204      	bcs.n	800f96e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800f964:	2214      	movs	r2, #20
 800f966:	fb02 1303 	mla	r3, r2, r3, r1
 800f96a:	8918      	ldrh	r0, [r3, #8]
 800f96c:	bd08      	pop	{r3, pc}
 800f96e:	490f      	ldr	r1, [pc, #60]	; (800f9ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800f970:	8809      	ldrh	r1, [r1, #0]
 800f972:	4411      	add	r1, r2
 800f974:	428b      	cmp	r3, r1
 800f976:	da06      	bge.n	800f986 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800f978:	1a9b      	subs	r3, r3, r2
 800f97a:	4a0d      	ldr	r2, [pc, #52]	; (800f9b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800f97c:	6812      	ldr	r2, [r2, #0]
 800f97e:	210e      	movs	r1, #14
 800f980:	fb01 2303 	mla	r3, r1, r3, r2
 800f984:	e7f1      	b.n	800f96a <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800f986:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f98a:	4293      	cmp	r3, r2
 800f98c:	bf0a      	itet	eq
 800f98e:	4b09      	ldreq	r3, [pc, #36]	; (800f9b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800f990:	2000      	movne	r0, #0
 800f992:	8818      	ldrheq	r0, [r3, #0]
 800f994:	e7ea      	b.n	800f96c <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800f996:	bf00      	nop
 800f998:	20013590 	.word	0x20013590
 800f99c:	080200b7 	.word	0x080200b7
 800f9a0:	080201a0 	.word	0x080201a0
 800f9a4:	08020039 	.word	0x08020039
 800f9a8:	20013588 	.word	0x20013588
 800f9ac:	2001358c 	.word	0x2001358c
 800f9b0:	20013570 	.word	0x20013570
 800f9b4:	200134fc 	.word	0x200134fc

0800f9b8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800f9b8:	b508      	push	{r3, lr}
 800f9ba:	4b14      	ldr	r3, [pc, #80]	; (800fa0c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800f9bc:	6819      	ldr	r1, [r3, #0]
 800f9be:	b931      	cbnz	r1, 800f9ce <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800f9c0:	4b13      	ldr	r3, [pc, #76]	; (800fa10 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800f9c2:	4a14      	ldr	r2, [pc, #80]	; (800fa14 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800f9c4:	4814      	ldr	r0, [pc, #80]	; (800fa18 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800f9c6:	f240 4199 	movw	r1, #1177	; 0x499
 800f9ca:	f00c f827 	bl	801ba1c <__assert_func>
 800f9ce:	4a13      	ldr	r2, [pc, #76]	; (800fa1c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800f9d0:	8803      	ldrh	r3, [r0, #0]
 800f9d2:	8812      	ldrh	r2, [r2, #0]
 800f9d4:	4293      	cmp	r3, r2
 800f9d6:	d204      	bcs.n	800f9e2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800f9d8:	2214      	movs	r2, #20
 800f9da:	fb02 1303 	mla	r3, r2, r3, r1
 800f9de:	8958      	ldrh	r0, [r3, #10]
 800f9e0:	bd08      	pop	{r3, pc}
 800f9e2:	490f      	ldr	r1, [pc, #60]	; (800fa20 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800f9e4:	8809      	ldrh	r1, [r1, #0]
 800f9e6:	4411      	add	r1, r2
 800f9e8:	428b      	cmp	r3, r1
 800f9ea:	da06      	bge.n	800f9fa <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800f9ec:	1a9b      	subs	r3, r3, r2
 800f9ee:	4a0d      	ldr	r2, [pc, #52]	; (800fa24 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800f9f0:	6812      	ldr	r2, [r2, #0]
 800f9f2:	210e      	movs	r1, #14
 800f9f4:	fb01 2303 	mla	r3, r1, r3, r2
 800f9f8:	e7f1      	b.n	800f9de <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800f9fa:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f9fe:	4293      	cmp	r3, r2
 800fa00:	bf0a      	itet	eq
 800fa02:	4b09      	ldreq	r3, [pc, #36]	; (800fa28 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800fa04:	2000      	movne	r0, #0
 800fa06:	8818      	ldrheq	r0, [r3, #0]
 800fa08:	e7ea      	b.n	800f9e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800fa0a:	bf00      	nop
 800fa0c:	20013590 	.word	0x20013590
 800fa10:	080200b7 	.word	0x080200b7
 800fa14:	080201cc 	.word	0x080201cc
 800fa18:	08020039 	.word	0x08020039
 800fa1c:	20013588 	.word	0x20013588
 800fa20:	2001358c 	.word	0x2001358c
 800fa24:	20013570 	.word	0x20013570
 800fa28:	200134fe 	.word	0x200134fe

0800fa2c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800fa2c:	b510      	push	{r4, lr}
 800fa2e:	4b23      	ldr	r3, [pc, #140]	; (800fabc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800fa30:	681c      	ldr	r4, [r3, #0]
 800fa32:	b934      	cbnz	r4, 800fa42 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800fa34:	4b22      	ldr	r3, [pc, #136]	; (800fac0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800fa36:	4a23      	ldr	r2, [pc, #140]	; (800fac4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800fa38:	4823      	ldr	r0, [pc, #140]	; (800fac8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800fa3a:	f240 41ad 	movw	r1, #1197	; 0x4ad
 800fa3e:	f00b ffed 	bl	801ba1c <__assert_func>
 800fa42:	4a22      	ldr	r2, [pc, #136]	; (800facc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800fa44:	880b      	ldrh	r3, [r1, #0]
 800fa46:	8812      	ldrh	r2, [r2, #0]
 800fa48:	4293      	cmp	r3, r2
 800fa4a:	d211      	bcs.n	800fa70 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800fa4c:	2214      	movs	r2, #20
 800fa4e:	fb02 4303 	mla	r3, r2, r3, r4
 800fa52:	8a1a      	ldrh	r2, [r3, #16]
 800fa54:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800fa58:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800fa5c:	8a5b      	ldrh	r3, [r3, #18]
 800fa5e:	8004      	strh	r4, [r0, #0]
 800fa60:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fa64:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800fa68:	8041      	strh	r1, [r0, #2]
 800fa6a:	8082      	strh	r2, [r0, #4]
 800fa6c:	80c3      	strh	r3, [r0, #6]
 800fa6e:	e00e      	b.n	800fa8e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800fa70:	4917      	ldr	r1, [pc, #92]	; (800fad0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800fa72:	8809      	ldrh	r1, [r1, #0]
 800fa74:	4411      	add	r1, r2
 800fa76:	428b      	cmp	r3, r1
 800fa78:	da0a      	bge.n	800fa90 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800fa7a:	1a9b      	subs	r3, r3, r2
 800fa7c:	4a15      	ldr	r2, [pc, #84]	; (800fad4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800fa7e:	6812      	ldr	r2, [r2, #0]
 800fa80:	210e      	movs	r1, #14
 800fa82:	fb01 2303 	mla	r3, r1, r3, r2
 800fa86:	681a      	ldr	r2, [r3, #0]
 800fa88:	6002      	str	r2, [r0, #0]
 800fa8a:	685a      	ldr	r2, [r3, #4]
 800fa8c:	6042      	str	r2, [r0, #4]
 800fa8e:	bd10      	pop	{r4, pc}
 800fa90:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fa94:	4293      	cmp	r3, r2
 800fa96:	d10b      	bne.n	800fab0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800fa98:	4b0f      	ldr	r3, [pc, #60]	; (800fad8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800fa9a:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fa9e:	4b0f      	ldr	r3, [pc, #60]	; (800fadc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800faa0:	8081      	strh	r1, [r0, #4]
 800faa2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800faa6:	80c2      	strh	r2, [r0, #6]
 800faa8:	2300      	movs	r3, #0
 800faaa:	8003      	strh	r3, [r0, #0]
 800faac:	8043      	strh	r3, [r0, #2]
 800faae:	e7ee      	b.n	800fa8e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800fab0:	2300      	movs	r3, #0
 800fab2:	8003      	strh	r3, [r0, #0]
 800fab4:	8043      	strh	r3, [r0, #2]
 800fab6:	8083      	strh	r3, [r0, #4]
 800fab8:	e7d8      	b.n	800fa6c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800faba:	bf00      	nop
 800fabc:	20013590 	.word	0x20013590
 800fac0:	080200b7 	.word	0x080200b7
 800fac4:	08020139 	.word	0x08020139
 800fac8:	08020039 	.word	0x08020039
 800facc:	20013588 	.word	0x20013588
 800fad0:	2001358c 	.word	0x2001358c
 800fad4:	20013570 	.word	0x20013570
 800fad8:	200134fc 	.word	0x200134fc
 800fadc:	200134fe 	.word	0x200134fe

0800fae0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800fae0:	4b18      	ldr	r3, [pc, #96]	; (800fb44 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800fae2:	681b      	ldr	r3, [r3, #0]
 800fae4:	b34b      	cbz	r3, 800fb3a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800fae6:	4a18      	ldr	r2, [pc, #96]	; (800fb48 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800fae8:	8800      	ldrh	r0, [r0, #0]
 800faea:	8812      	ldrh	r2, [r2, #0]
 800faec:	4290      	cmp	r0, r2
 800faee:	d211      	bcs.n	800fb14 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800faf0:	2214      	movs	r2, #20
 800faf2:	fb02 3300 	mla	r3, r2, r0, r3
 800faf6:	8a1a      	ldrh	r2, [r3, #16]
 800faf8:	8919      	ldrh	r1, [r3, #8]
 800fafa:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fafe:	428a      	cmp	r2, r1
 800fb00:	db1d      	blt.n	800fb3e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800fb02:	8a58      	ldrh	r0, [r3, #18]
 800fb04:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800fb08:	895b      	ldrh	r3, [r3, #10]
 800fb0a:	4298      	cmp	r0, r3
 800fb0c:	bfac      	ite	ge
 800fb0e:	2000      	movge	r0, #0
 800fb10:	2001      	movlt	r0, #1
 800fb12:	4770      	bx	lr
 800fb14:	4b0d      	ldr	r3, [pc, #52]	; (800fb4c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800fb16:	881b      	ldrh	r3, [r3, #0]
 800fb18:	4413      	add	r3, r2
 800fb1a:	4298      	cmp	r0, r3
 800fb1c:	da0d      	bge.n	800fb3a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800fb1e:	4b0c      	ldr	r3, [pc, #48]	; (800fb50 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800fb20:	681b      	ldr	r3, [r3, #0]
 800fb22:	1a80      	subs	r0, r0, r2
 800fb24:	220e      	movs	r2, #14
 800fb26:	fb02 3300 	mla	r3, r2, r0, r3
 800fb2a:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800fb2e:	891a      	ldrh	r2, [r3, #8]
 800fb30:	4291      	cmp	r1, r2
 800fb32:	db04      	blt.n	800fb3e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800fb34:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800fb38:	e7e6      	b.n	800fb08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800fb3a:	2000      	movs	r0, #0
 800fb3c:	4770      	bx	lr
 800fb3e:	2001      	movs	r0, #1
 800fb40:	4770      	bx	lr
 800fb42:	bf00      	nop
 800fb44:	20013590 	.word	0x20013590
 800fb48:	20013588 	.word	0x20013588
 800fb4c:	2001358c 	.word	0x2001358c
 800fb50:	20013570 	.word	0x20013570

0800fb54 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800fb54:	b508      	push	{r3, lr}
 800fb56:	4b12      	ldr	r3, [pc, #72]	; (800fba0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800fb58:	6819      	ldr	r1, [r3, #0]
 800fb5a:	b931      	cbnz	r1, 800fb6a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800fb5c:	4b11      	ldr	r3, [pc, #68]	; (800fba4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800fb5e:	4a12      	ldr	r2, [pc, #72]	; (800fba8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800fb60:	4812      	ldr	r0, [pc, #72]	; (800fbac <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800fb62:	f240 41d1 	movw	r1, #1233	; 0x4d1
 800fb66:	f00b ff59 	bl	801ba1c <__assert_func>
 800fb6a:	8803      	ldrh	r3, [r0, #0]
 800fb6c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fb70:	4293      	cmp	r3, r2
 800fb72:	d012      	beq.n	800fb9a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800fb74:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fb78:	4293      	cmp	r3, r2
 800fb7a:	d103      	bne.n	800fb84 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800fb7c:	4b0c      	ldr	r3, [pc, #48]	; (800fbb0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800fb7e:	681b      	ldr	r3, [r3, #0]
 800fb80:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800fb82:	bd08      	pop	{r3, pc}
 800fb84:	4a0b      	ldr	r2, [pc, #44]	; (800fbb4 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800fb86:	6812      	ldr	r2, [r2, #0]
 800fb88:	b11a      	cbz	r2, 800fb92 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800fb8a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800fb8e:	2800      	cmp	r0, #0
 800fb90:	d1f7      	bne.n	800fb82 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fb92:	2214      	movs	r2, #20
 800fb94:	4353      	muls	r3, r2
 800fb96:	58c8      	ldr	r0, [r1, r3]
 800fb98:	e7f3      	b.n	800fb82 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fb9a:	2000      	movs	r0, #0
 800fb9c:	e7f1      	b.n	800fb82 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fb9e:	bf00      	nop
 800fba0:	20013590 	.word	0x20013590
 800fba4:	080200b7 	.word	0x080200b7
 800fba8:	0802016f 	.word	0x0802016f
 800fbac:	08020039 	.word	0x08020039
 800fbb0:	20013508 	.word	0x20013508
 800fbb4:	2001356c 	.word	0x2001356c

0800fbb8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800fbb8:	8802      	ldrh	r2, [r0, #0]
 800fbba:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800fbbe:	429a      	cmp	r2, r3
 800fbc0:	d845      	bhi.n	800fc4e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fbc2:	4b24      	ldr	r3, [pc, #144]	; (800fc54 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800fbc4:	8818      	ldrh	r0, [r3, #0]
 800fbc6:	4282      	cmp	r2, r0
 800fbc8:	d221      	bcs.n	800fc0e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 800fbca:	4b23      	ldr	r3, [pc, #140]	; (800fc58 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800fbcc:	6819      	ldr	r1, [r3, #0]
 800fbce:	2314      	movs	r3, #20
 800fbd0:	fb03 1302 	mla	r3, r3, r2, r1
 800fbd4:	6858      	ldr	r0, [r3, #4]
 800fbd6:	2800      	cmp	r0, #0
 800fbd8:	d03a      	beq.n	800fc50 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fbda:	4920      	ldr	r1, [pc, #128]	; (800fc5c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fbdc:	6809      	ldr	r1, [r1, #0]
 800fbde:	2900      	cmp	r1, #0
 800fbe0:	d036      	beq.n	800fc50 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fbe2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800fbe6:	2900      	cmp	r1, #0
 800fbe8:	d032      	beq.n	800fc50 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fbea:	891a      	ldrh	r2, [r3, #8]
 800fbec:	8958      	ldrh	r0, [r3, #10]
 800fbee:	4350      	muls	r0, r2
 800fbf0:	7c5a      	ldrb	r2, [r3, #17]
 800fbf2:	7cdb      	ldrb	r3, [r3, #19]
 800fbf4:	0952      	lsrs	r2, r2, #5
 800fbf6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800fbfa:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800fbfe:	2b0b      	cmp	r3, #11
 800fc00:	bf18      	it	ne
 800fc02:	0040      	lslne	r0, r0, #1
 800fc04:	3003      	adds	r0, #3
 800fc06:	f020 0003 	bic.w	r0, r0, #3
 800fc0a:	4408      	add	r0, r1
 800fc0c:	4770      	bx	lr
 800fc0e:	4b14      	ldr	r3, [pc, #80]	; (800fc60 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800fc10:	881b      	ldrh	r3, [r3, #0]
 800fc12:	4403      	add	r3, r0
 800fc14:	429a      	cmp	r2, r3
 800fc16:	da1a      	bge.n	800fc4e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fc18:	4b12      	ldr	r3, [pc, #72]	; (800fc64 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 800fc1a:	681b      	ldr	r3, [r3, #0]
 800fc1c:	1a10      	subs	r0, r2, r0
 800fc1e:	210e      	movs	r1, #14
 800fc20:	fb01 3000 	mla	r0, r1, r0, r3
 800fc24:	7b03      	ldrb	r3, [r0, #12]
 800fc26:	f003 031f 	and.w	r3, r3, #31
 800fc2a:	2b0b      	cmp	r3, #11
 800fc2c:	d10b      	bne.n	800fc46 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800fc2e:	8903      	ldrh	r3, [r0, #8]
 800fc30:	8940      	ldrh	r0, [r0, #10]
 800fc32:	4358      	muls	r0, r3
 800fc34:	4b09      	ldr	r3, [pc, #36]	; (800fc5c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fc36:	6819      	ldr	r1, [r3, #0]
 800fc38:	3003      	adds	r0, #3
 800fc3a:	f020 0303 	bic.w	r3, r0, #3
 800fc3e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800fc42:	4418      	add	r0, r3
 800fc44:	4770      	bx	lr
 800fc46:	2b0d      	cmp	r3, #13
 800fc48:	d101      	bne.n	800fc4e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fc4a:	300d      	adds	r0, #13
 800fc4c:	4770      	bx	lr
 800fc4e:	2000      	movs	r0, #0
 800fc50:	4770      	bx	lr
 800fc52:	bf00      	nop
 800fc54:	20013588 	.word	0x20013588
 800fc58:	20013590 	.word	0x20013590
 800fc5c:	2001356c 	.word	0x2001356c
 800fc60:	2001358c 	.word	0x2001358c
 800fc64:	20013570 	.word	0x20013570

0800fc68 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800fc68:	b510      	push	{r4, lr}
 800fc6a:	4b17      	ldr	r3, [pc, #92]	; (800fcc8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 800fc6c:	6819      	ldr	r1, [r3, #0]
 800fc6e:	8803      	ldrh	r3, [r0, #0]
 800fc70:	b1e9      	cbz	r1, 800fcae <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800fc72:	4a16      	ldr	r2, [pc, #88]	; (800fccc <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 800fc74:	8812      	ldrh	r2, [r2, #0]
 800fc76:	429a      	cmp	r2, r3
 800fc78:	d90a      	bls.n	800fc90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 800fc7a:	2214      	movs	r2, #20
 800fc7c:	fb02 1303 	mla	r3, r2, r3, r1
 800fc80:	7c58      	ldrb	r0, [r3, #17]
 800fc82:	0942      	lsrs	r2, r0, #5
 800fc84:	7cd8      	ldrb	r0, [r3, #19]
 800fc86:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800fc8a:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800fc8e:	bd10      	pop	{r4, pc}
 800fc90:	490f      	ldr	r1, [pc, #60]	; (800fcd0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800fc92:	8809      	ldrh	r1, [r1, #0]
 800fc94:	4411      	add	r1, r2
 800fc96:	428b      	cmp	r3, r1
 800fc98:	da09      	bge.n	800fcae <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800fc9a:	1a9b      	subs	r3, r3, r2
 800fc9c:	4a0d      	ldr	r2, [pc, #52]	; (800fcd4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800fc9e:	6812      	ldr	r2, [r2, #0]
 800fca0:	210e      	movs	r1, #14
 800fca2:	fb01 2303 	mla	r3, r1, r3, r2
 800fca6:	7b18      	ldrb	r0, [r3, #12]
 800fca8:	f000 001f 	and.w	r0, r0, #31
 800fcac:	e7ef      	b.n	800fc8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fcae:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fcb2:	4293      	cmp	r3, r2
 800fcb4:	d106      	bne.n	800fcc4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800fcb6:	f7fa f83f 	bl	8009d38 <_ZN8touchgfx3HAL3lcdEv>
 800fcba:	6803      	ldr	r3, [r0, #0]
 800fcbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fcc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fcc2:	4718      	bx	r3
 800fcc4:	2000      	movs	r0, #0
 800fcc6:	e7e2      	b.n	800fc8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fcc8:	20013590 	.word	0x20013590
 800fccc:	20013588 	.word	0x20013588
 800fcd0:	2001358c 	.word	0x2001358c
 800fcd4:	20013570 	.word	0x20013570

0800fcd8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800fcd8:	2010      	movs	r0, #16
 800fcda:	4770      	bx	lr

0800fcdc <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800fcdc:	2000      	movs	r0, #0
 800fcde:	4770      	bx	lr

0800fce0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800fce0:	2bff      	cmp	r3, #255	; 0xff
 800fce2:	d050      	beq.n	800fd86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800fce4:	2a0b      	cmp	r2, #11
 800fce6:	d04a      	beq.n	800fd7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fce8:	d80e      	bhi.n	800fd08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800fcea:	2a03      	cmp	r2, #3
 800fcec:	d03f      	beq.n	800fd6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800fcee:	d804      	bhi.n	800fcfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800fcf0:	2a01      	cmp	r2, #1
 800fcf2:	d03e      	beq.n	800fd72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800fcf4:	d93f      	bls.n	800fd76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800fcf6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800fcf8:	4770      	bx	lr
 800fcfa:	2a09      	cmp	r2, #9
 800fcfc:	d03f      	beq.n	800fd7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fcfe:	d83c      	bhi.n	800fd7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fd00:	2a08      	cmp	r2, #8
 800fd02:	d03a      	beq.n	800fd7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fd04:	2000      	movs	r0, #0
 800fd06:	4770      	bx	lr
 800fd08:	2a2f      	cmp	r2, #47	; 0x2f
 800fd0a:	d024      	beq.n	800fd56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800fd0c:	d80d      	bhi.n	800fd2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800fd0e:	2a2d      	cmp	r2, #45	; 0x2d
 800fd10:	d014      	beq.n	800fd3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800fd12:	d826      	bhi.n	800fd62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800fd14:	2a2c      	cmp	r2, #44	; 0x2c
 800fd16:	d1f5      	bne.n	800fd04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd18:	684b      	ldr	r3, [r1, #4]
 800fd1a:	781b      	ldrb	r3, [r3, #0]
 800fd1c:	2b01      	cmp	r3, #1
 800fd1e:	d018      	beq.n	800fd52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800fd20:	d323      	bcc.n	800fd6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800fd22:	2b02      	cmp	r3, #2
 800fd24:	d1ee      	bne.n	800fd04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd26:	6880      	ldr	r0, [r0, #8]
 800fd28:	4770      	bx	lr
 800fd2a:	2a31      	cmp	r2, #49	; 0x31
 800fd2c:	d004      	beq.n	800fd38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800fd2e:	d328      	bcc.n	800fd82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fd30:	2a32      	cmp	r2, #50	; 0x32
 800fd32:	d026      	beq.n	800fd82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fd34:	2a33      	cmp	r2, #51	; 0x33
 800fd36:	d1e5      	bne.n	800fd04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd38:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800fd3a:	4770      	bx	lr
 800fd3c:	684b      	ldr	r3, [r1, #4]
 800fd3e:	781b      	ldrb	r3, [r3, #0]
 800fd40:	2b01      	cmp	r3, #1
 800fd42:	d004      	beq.n	800fd4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800fd44:	d30b      	bcc.n	800fd5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800fd46:	2b02      	cmp	r3, #2
 800fd48:	d1dc      	bne.n	800fd04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd4a:	6900      	ldr	r0, [r0, #16]
 800fd4c:	4770      	bx	lr
 800fd4e:	6a00      	ldr	r0, [r0, #32]
 800fd50:	4770      	bx	lr
 800fd52:	6980      	ldr	r0, [r0, #24]
 800fd54:	4770      	bx	lr
 800fd56:	684b      	ldr	r3, [r1, #4]
 800fd58:	781b      	ldrb	r3, [r3, #0]
 800fd5a:	2b00      	cmp	r3, #0
 800fd5c:	d1d2      	bne.n	800fd04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd5e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800fd60:	4770      	bx	lr
 800fd62:	684b      	ldr	r3, [r1, #4]
 800fd64:	781b      	ldrb	r3, [r3, #0]
 800fd66:	2b00      	cmp	r3, #0
 800fd68:	d1cc      	bne.n	800fd04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd6a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800fd6c:	4770      	bx	lr
 800fd6e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800fd70:	4770      	bx	lr
 800fd72:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800fd74:	4770      	bx	lr
 800fd76:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800fd78:	4770      	bx	lr
 800fd7a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800fd7c:	4770      	bx	lr
 800fd7e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800fd80:	4770      	bx	lr
 800fd82:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800fd84:	4770      	bx	lr
 800fd86:	2a0b      	cmp	r2, #11
 800fd88:	d049      	beq.n	800fe1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fd8a:	d80e      	bhi.n	800fdaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800fd8c:	2a03      	cmp	r2, #3
 800fd8e:	d040      	beq.n	800fe12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800fd90:	d804      	bhi.n	800fd9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800fd92:	2a01      	cmp	r2, #1
 800fd94:	d03f      	beq.n	800fe16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800fd96:	d940      	bls.n	800fe1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800fd98:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800fd9a:	4770      	bx	lr
 800fd9c:	2a09      	cmp	r2, #9
 800fd9e:	d03e      	beq.n	800fe1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fda0:	d801      	bhi.n	800fda6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800fda2:	2a08      	cmp	r2, #8
 800fda4:	d1ae      	bne.n	800fd04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fda6:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800fda8:	4770      	bx	lr
 800fdaa:	2a2f      	cmp	r2, #47	; 0x2f
 800fdac:	d024      	beq.n	800fdf8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800fdae:	d80d      	bhi.n	800fdcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800fdb0:	2a2d      	cmp	r2, #45	; 0x2d
 800fdb2:	d014      	beq.n	800fdde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800fdb4:	d826      	bhi.n	800fe04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800fdb6:	2a2c      	cmp	r2, #44	; 0x2c
 800fdb8:	d1a4      	bne.n	800fd04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdba:	684b      	ldr	r3, [r1, #4]
 800fdbc:	781b      	ldrb	r3, [r3, #0]
 800fdbe:	2b01      	cmp	r3, #1
 800fdc0:	d018      	beq.n	800fdf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800fdc2:	d324      	bcc.n	800fe0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800fdc4:	2b02      	cmp	r3, #2
 800fdc6:	d19d      	bne.n	800fd04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdc8:	68c0      	ldr	r0, [r0, #12]
 800fdca:	4770      	bx	lr
 800fdcc:	2a31      	cmp	r2, #49	; 0x31
 800fdce:	d004      	beq.n	800fdda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800fdd0:	d327      	bcc.n	800fe22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fdd2:	2a32      	cmp	r2, #50	; 0x32
 800fdd4:	d025      	beq.n	800fe22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fdd6:	2a33      	cmp	r2, #51	; 0x33
 800fdd8:	d194      	bne.n	800fd04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdda:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800fddc:	4770      	bx	lr
 800fdde:	684b      	ldr	r3, [r1, #4]
 800fde0:	781b      	ldrb	r3, [r3, #0]
 800fde2:	2b01      	cmp	r3, #1
 800fde4:	d004      	beq.n	800fdf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800fde6:	d30b      	bcc.n	800fe00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800fde8:	2b02      	cmp	r3, #2
 800fdea:	d18b      	bne.n	800fd04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fdec:	6940      	ldr	r0, [r0, #20]
 800fdee:	4770      	bx	lr
 800fdf0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800fdf2:	4770      	bx	lr
 800fdf4:	69c0      	ldr	r0, [r0, #28]
 800fdf6:	4770      	bx	lr
 800fdf8:	684b      	ldr	r3, [r1, #4]
 800fdfa:	781b      	ldrb	r3, [r3, #0]
 800fdfc:	2b00      	cmp	r3, #0
 800fdfe:	d181      	bne.n	800fd04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe00:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800fe02:	4770      	bx	lr
 800fe04:	684b      	ldr	r3, [r1, #4]
 800fe06:	781b      	ldrb	r3, [r3, #0]
 800fe08:	2b00      	cmp	r3, #0
 800fe0a:	f47f af7b 	bne.w	800fd04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe0e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800fe10:	4770      	bx	lr
 800fe12:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fe14:	4770      	bx	lr
 800fe16:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800fe18:	4770      	bx	lr
 800fe1a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800fe1c:	4770      	bx	lr
 800fe1e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800fe20:	4770      	bx	lr
 800fe22:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800fe24:	4770      	bx	lr

0800fe26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fe26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe2a:	b087      	sub	sp, #28
 800fe2c:	9815      	ldr	r0, [sp, #84]	; 0x54
 800fe2e:	9205      	str	r2, [sp, #20]
 800fe30:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800fe34:	9202      	str	r2, [sp, #8]
 800fe36:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fe3a:	9101      	str	r1, [sp, #4]
 800fe3c:	6841      	ldr	r1, [r0, #4]
 800fe3e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800fe42:	fb01 2404 	mla	r4, r1, r4, r2
 800fe46:	6802      	ldr	r2, [r0, #0]
 800fe48:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fe4c:	f8de 2000 	ldr.w	r2, [lr]
 800fe50:	9203      	str	r2, [sp, #12]
 800fe52:	f8de 2004 	ldr.w	r2, [lr, #4]
 800fe56:	3204      	adds	r2, #4
 800fe58:	9204      	str	r2, [sp, #16]
 800fe5a:	9a02      	ldr	r2, [sp, #8]
 800fe5c:	43d6      	mvns	r6, r2
 800fe5e:	b2f6      	uxtb	r6, r6
 800fe60:	9a01      	ldr	r2, [sp, #4]
 800fe62:	2a00      	cmp	r2, #0
 800fe64:	dc03      	bgt.n	800fe6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800fe66:	9a05      	ldr	r2, [sp, #20]
 800fe68:	2a00      	cmp	r2, #0
 800fe6a:	f340 8129 	ble.w	80100c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800fe6e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fe70:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800fe74:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800fe78:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fe7c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fe7e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fe82:	2b00      	cmp	r3, #0
 800fe84:	dd0e      	ble.n	800fea4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800fe86:	1408      	asrs	r0, r1, #16
 800fe88:	d405      	bmi.n	800fe96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fe8a:	4560      	cmp	r0, ip
 800fe8c:	da03      	bge.n	800fe96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fe8e:	1410      	asrs	r0, r2, #16
 800fe90:	d401      	bmi.n	800fe96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fe92:	42b8      	cmp	r0, r7
 800fe94:	db07      	blt.n	800fea6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800fe96:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fe98:	4401      	add	r1, r0
 800fe9a:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fe9c:	3b01      	subs	r3, #1
 800fe9e:	4402      	add	r2, r0
 800fea0:	3402      	adds	r4, #2
 800fea2:	e7ee      	b.n	800fe82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800fea4:	d071      	beq.n	800ff8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800fea6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fea8:	1e58      	subs	r0, r3, #1
 800feaa:	fb05 1500 	mla	r5, r5, r0, r1
 800feae:	142d      	asrs	r5, r5, #16
 800feb0:	d45f      	bmi.n	800ff72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800feb2:	4565      	cmp	r5, ip
 800feb4:	da5d      	bge.n	800ff72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800feb6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800feb8:	fb05 2000 	mla	r0, r5, r0, r2
 800febc:	1400      	asrs	r0, r0, #16
 800febe:	d458      	bmi.n	800ff72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fec0:	42b8      	cmp	r0, r7
 800fec2:	da56      	bge.n	800ff72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800fec4:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800fec8:	4699      	mov	r9, r3
 800feca:	46a2      	mov	sl, r4
 800fecc:	f1b9 0f00 	cmp.w	r9, #0
 800fed0:	dd57      	ble.n	800ff82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800fed2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800fed6:	9803      	ldr	r0, [sp, #12]
 800fed8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800fedc:	140d      	asrs	r5, r1, #16
 800fede:	fb07 000c 	mla	r0, r7, ip, r0
 800fee2:	f109 39ff 	add.w	r9, r9, #4294967295
 800fee6:	5d40      	ldrb	r0, [r0, r5]
 800fee8:	9d04      	ldr	r5, [sp, #16]
 800feea:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800feee:	f8ba 5000 	ldrh.w	r5, [sl]
 800fef2:	122f      	asrs	r7, r5, #8
 800fef4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fef8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fefc:	fb17 f706 	smulbb	r7, r7, r6
 800ff00:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800ff04:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ff08:	00ed      	lsls	r5, r5, #3
 800ff0a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800ff0e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800ff12:	10c7      	asrs	r7, r0, #3
 800ff14:	b2ed      	uxtb	r5, r5
 800ff16:	00c0      	lsls	r0, r0, #3
 800ff18:	fb18 f806 	smulbb	r8, r8, r6
 800ff1c:	fb15 f506 	smulbb	r5, r5, r6
 800ff20:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ff24:	b2c0      	uxtb	r0, r0
 800ff26:	fa1f fc8c 	uxth.w	ip, ip
 800ff2a:	fb07 870b 	mla	r7, r7, fp, r8
 800ff2e:	fb00 500b 	mla	r0, r0, fp, r5
 800ff32:	b280      	uxth	r0, r0
 800ff34:	b2bf      	uxth	r7, r7
 800ff36:	f10c 0501 	add.w	r5, ip, #1
 800ff3a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800ff3e:	f107 0801 	add.w	r8, r7, #1
 800ff42:	1c45      	adds	r5, r0, #1
 800ff44:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800ff48:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800ff4c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ff4e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ff52:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800ff56:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800ff5a:	ea45 0c0c 	orr.w	ip, r5, ip
 800ff5e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 800ff62:	4401      	add	r1, r0
 800ff64:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ff66:	ea4c 0c08 	orr.w	ip, ip, r8
 800ff6a:	f82a cb02 	strh.w	ip, [sl], #2
 800ff6e:	4402      	add	r2, r0
 800ff70:	e7ac      	b.n	800fecc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800ff72:	f8bd a008 	ldrh.w	sl, [sp, #8]
 800ff76:	f04f 0800 	mov.w	r8, #0
 800ff7a:	eb03 0008 	add.w	r0, r3, r8
 800ff7e:	2800      	cmp	r0, #0
 800ff80:	dc41      	bgt.n	8010006 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800ff82:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ff86:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ff8a:	9b01      	ldr	r3, [sp, #4]
 800ff8c:	2b00      	cmp	r3, #0
 800ff8e:	f340 8097 	ble.w	80100c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800ff92:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ff96:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800ff9a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800ff9e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ffa0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ffa4:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ffa8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ffac:	eef0 6a62 	vmov.f32	s13, s5
 800ffb0:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ffb4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ffb8:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ffbc:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800ffc0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ffc4:	eef0 6a43 	vmov.f32	s13, s6
 800ffc8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ffcc:	ee12 2a90 	vmov	r2, s5
 800ffd0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ffd4:	fb92 f3f3 	sdiv	r3, r2, r3
 800ffd8:	ee13 2a10 	vmov	r2, s6
 800ffdc:	9313      	str	r3, [sp, #76]	; 0x4c
 800ffde:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ffe0:	fb92 f3f3 	sdiv	r3, r2, r3
 800ffe4:	9314      	str	r3, [sp, #80]	; 0x50
 800ffe6:	9b01      	ldr	r3, [sp, #4]
 800ffe8:	9a05      	ldr	r2, [sp, #20]
 800ffea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ffee:	3b01      	subs	r3, #1
 800fff0:	9301      	str	r3, [sp, #4]
 800fff2:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800fff6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fff8:	eeb0 3a67 	vmov.f32	s6, s15
 800fffc:	bf08      	it	eq
 800fffe:	4613      	moveq	r3, r2
 8010000:	eef0 2a47 	vmov.f32	s5, s14
 8010004:	e72c      	b.n	800fe60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8010006:	140f      	asrs	r7, r1, #16
 8010008:	d453      	bmi.n	80100b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801000a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801000e:	42bd      	cmp	r5, r7
 8010010:	dd4f      	ble.n	80100b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010012:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010016:	d44c      	bmi.n	80100b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010018:	f8de 000c 	ldr.w	r0, [lr, #12]
 801001c:	4560      	cmp	r0, ip
 801001e:	dd48      	ble.n	80100b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010020:	9803      	ldr	r0, [sp, #12]
 8010022:	b22d      	sxth	r5, r5
 8010024:	fb0c 0505 	mla	r5, ip, r5, r0
 8010028:	5de8      	ldrb	r0, [r5, r7]
 801002a:	9d04      	ldr	r5, [sp, #16]
 801002c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8010030:	f06f 0501 	mvn.w	r5, #1
 8010034:	fb05 fb08 	mul.w	fp, r5, r8
 8010038:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801003c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8010040:	122f      	asrs	r7, r5, #8
 8010042:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010046:	fb17 f706 	smulbb	r7, r7, r6
 801004a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801004e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010052:	00ed      	lsls	r5, r5, #3
 8010054:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8010058:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801005c:	10c7      	asrs	r7, r0, #3
 801005e:	b2ed      	uxtb	r5, r5
 8010060:	00c0      	lsls	r0, r0, #3
 8010062:	fb19 f906 	smulbb	r9, r9, r6
 8010066:	fb15 f506 	smulbb	r5, r5, r6
 801006a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801006e:	b2c0      	uxtb	r0, r0
 8010070:	fa1f fc8c 	uxth.w	ip, ip
 8010074:	fb07 970a 	mla	r7, r7, sl, r9
 8010078:	fb00 500a 	mla	r0, r0, sl, r5
 801007c:	b2bf      	uxth	r7, r7
 801007e:	b280      	uxth	r0, r0
 8010080:	f10c 0501 	add.w	r5, ip, #1
 8010084:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010088:	f107 0901 	add.w	r9, r7, #1
 801008c:	1c45      	adds	r5, r0, #1
 801008e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8010092:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8010096:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801009a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801009e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80100a2:	ea45 0c0c 	orr.w	ip, r5, ip
 80100a6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80100aa:	ea4c 0c09 	orr.w	ip, ip, r9
 80100ae:	f824 c00b 	strh.w	ip, [r4, fp]
 80100b2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80100b4:	4401      	add	r1, r0
 80100b6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80100b8:	f108 38ff 	add.w	r8, r8, #4294967295
 80100bc:	4402      	add	r2, r0
 80100be:	e75c      	b.n	800ff7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80100c0:	b007      	add	sp, #28
 80100c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080100c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80100c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80100ca:	b085      	sub	sp, #20
 80100cc:	4693      	mov	fp, r2
 80100ce:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80100d0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80100d2:	6870      	ldr	r0, [r6, #4]
 80100d4:	9100      	str	r1, [sp, #0]
 80100d6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80100da:	fb00 2404 	mla	r4, r0, r4, r2
 80100de:	6832      	ldr	r2, [r6, #0]
 80100e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80100e4:	682a      	ldr	r2, [r5, #0]
 80100e6:	9201      	str	r2, [sp, #4]
 80100e8:	686a      	ldr	r2, [r5, #4]
 80100ea:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80100ee:	3204      	adds	r2, #4
 80100f0:	9202      	str	r2, [sp, #8]
 80100f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80100f6:	9a00      	ldr	r2, [sp, #0]
 80100f8:	2a00      	cmp	r2, #0
 80100fa:	dc03      	bgt.n	8010104 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80100fc:	f1bb 0f00 	cmp.w	fp, #0
 8010100:	f340 80a0 	ble.w	8010244 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8010104:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010106:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801010a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801010e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010112:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010114:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010118:	2b00      	cmp	r3, #0
 801011a:	dd0c      	ble.n	8010136 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801011c:	1406      	asrs	r6, r0, #16
 801011e:	d405      	bmi.n	801012c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010120:	454e      	cmp	r6, r9
 8010122:	da03      	bge.n	801012c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010124:	1416      	asrs	r6, r2, #16
 8010126:	d401      	bmi.n	801012c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010128:	4546      	cmp	r6, r8
 801012a:	db05      	blt.n	8010138 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801012c:	4470      	add	r0, lr
 801012e:	4462      	add	r2, ip
 8010130:	3b01      	subs	r3, #1
 8010132:	3402      	adds	r4, #2
 8010134:	e7f0      	b.n	8010118 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8010136:	d00f      	beq.n	8010158 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8010138:	1e5e      	subs	r6, r3, #1
 801013a:	fb0e 0706 	mla	r7, lr, r6, r0
 801013e:	143f      	asrs	r7, r7, #16
 8010140:	d541      	bpl.n	80101c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8010142:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8010146:	4698      	mov	r8, r3
 8010148:	9603      	str	r6, [sp, #12]
 801014a:	f1b8 0f00 	cmp.w	r8, #0
 801014e:	dc59      	bgt.n	8010204 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8010150:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010154:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010158:	9b00      	ldr	r3, [sp, #0]
 801015a:	2b00      	cmp	r3, #0
 801015c:	dd72      	ble.n	8010244 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801015e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010162:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010166:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801016a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801016c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010170:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010174:	eeb0 6a62 	vmov.f32	s12, s5
 8010178:	ee61 7a27 	vmul.f32	s15, s2, s15
 801017c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010180:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010184:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010188:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801018c:	eeb0 6a43 	vmov.f32	s12, s6
 8010190:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010194:	ee12 2a90 	vmov	r2, s5
 8010198:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801019c:	fb92 fef3 	sdiv	lr, r2, r3
 80101a0:	ee13 2a10 	vmov	r2, s6
 80101a4:	fb92 fcf3 	sdiv	ip, r2, r3
 80101a8:	9b00      	ldr	r3, [sp, #0]
 80101aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80101ae:	3b01      	subs	r3, #1
 80101b0:	9300      	str	r3, [sp, #0]
 80101b2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80101b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80101b8:	eeb0 3a67 	vmov.f32	s6, s15
 80101bc:	bf08      	it	eq
 80101be:	465b      	moveq	r3, fp
 80101c0:	eef0 2a47 	vmov.f32	s5, s14
 80101c4:	e797      	b.n	80100f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80101c6:	454f      	cmp	r7, r9
 80101c8:	dabb      	bge.n	8010142 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80101ca:	fb0c 2606 	mla	r6, ip, r6, r2
 80101ce:	1436      	asrs	r6, r6, #16
 80101d0:	d4b7      	bmi.n	8010142 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80101d2:	4546      	cmp	r6, r8
 80101d4:	dab5      	bge.n	8010142 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80101d6:	461e      	mov	r6, r3
 80101d8:	46a0      	mov	r8, r4
 80101da:	2e00      	cmp	r6, #0
 80101dc:	ddb8      	ble.n	8010150 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80101de:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80101e2:	9901      	ldr	r1, [sp, #4]
 80101e4:	1417      	asrs	r7, r2, #16
 80101e6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80101ea:	fb0a 1707 	mla	r7, sl, r7, r1
 80101ee:	9902      	ldr	r1, [sp, #8]
 80101f0:	f817 7009 	ldrb.w	r7, [r7, r9]
 80101f4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80101f8:	f828 7b02 	strh.w	r7, [r8], #2
 80101fc:	4470      	add	r0, lr
 80101fe:	4462      	add	r2, ip
 8010200:	3e01      	subs	r6, #1
 8010202:	e7ea      	b.n	80101da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8010204:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010208:	d417      	bmi.n	801023a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801020a:	68ae      	ldr	r6, [r5, #8]
 801020c:	454e      	cmp	r6, r9
 801020e:	dd14      	ble.n	801023a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010210:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8010214:	d411      	bmi.n	801023a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010216:	68ef      	ldr	r7, [r5, #12]
 8010218:	4557      	cmp	r7, sl
 801021a:	dd0e      	ble.n	801023a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801021c:	9f01      	ldr	r7, [sp, #4]
 801021e:	b236      	sxth	r6, r6
 8010220:	fb0a 7606 	mla	r6, sl, r6, r7
 8010224:	9f02      	ldr	r7, [sp, #8]
 8010226:	f816 6009 	ldrb.w	r6, [r6, r9]
 801022a:	f06f 0101 	mvn.w	r1, #1
 801022e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8010232:	fb01 f608 	mul.w	r6, r1, r8
 8010236:	9903      	ldr	r1, [sp, #12]
 8010238:	538f      	strh	r7, [r1, r6]
 801023a:	4470      	add	r0, lr
 801023c:	4462      	add	r2, ip
 801023e:	f108 38ff 	add.w	r8, r8, #4294967295
 8010242:	e782      	b.n	801014a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010244:	b005      	add	sp, #20
 8010246:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801024a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801024a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801024e:	b087      	sub	sp, #28
 8010250:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010252:	9205      	str	r2, [sp, #20]
 8010254:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010258:	9203      	str	r2, [sp, #12]
 801025a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801025e:	9102      	str	r1, [sp, #8]
 8010260:	6861      	ldr	r1, [r4, #4]
 8010262:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8010266:	fb01 2000 	mla	r0, r1, r0, r2
 801026a:	6822      	ldr	r2, [r4, #0]
 801026c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8010270:	9200      	str	r2, [sp, #0]
 8010272:	f8dc 2000 	ldr.w	r2, [ip]
 8010276:	9204      	str	r2, [sp, #16]
 8010278:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801027c:	3204      	adds	r2, #4
 801027e:	9201      	str	r2, [sp, #4]
 8010280:	9a03      	ldr	r2, [sp, #12]
 8010282:	43d5      	mvns	r5, r2
 8010284:	b2ed      	uxtb	r5, r5
 8010286:	9a02      	ldr	r2, [sp, #8]
 8010288:	2a00      	cmp	r2, #0
 801028a:	dc03      	bgt.n	8010294 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801028c:	9a05      	ldr	r2, [sp, #20]
 801028e:	2a00      	cmp	r2, #0
 8010290:	f340 812c 	ble.w	80104ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010294:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010296:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801029a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801029e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80102a2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80102a4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80102a8:	2b00      	cmp	r3, #0
 80102aa:	dd10      	ble.n	80102ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80102ac:	140c      	asrs	r4, r1, #16
 80102ae:	d405      	bmi.n	80102bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80102b0:	4574      	cmp	r4, lr
 80102b2:	da03      	bge.n	80102bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80102b4:	1414      	asrs	r4, r2, #16
 80102b6:	d401      	bmi.n	80102bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80102b8:	42bc      	cmp	r4, r7
 80102ba:	db09      	blt.n	80102d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80102bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80102be:	9800      	ldr	r0, [sp, #0]
 80102c0:	4421      	add	r1, r4
 80102c2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80102c4:	3002      	adds	r0, #2
 80102c6:	4422      	add	r2, r4
 80102c8:	3b01      	subs	r3, #1
 80102ca:	9000      	str	r0, [sp, #0]
 80102cc:	e7ec      	b.n	80102a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80102ce:	d071      	beq.n	80103b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80102d0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80102d2:	1e5c      	subs	r4, r3, #1
 80102d4:	fb06 1604 	mla	r6, r6, r4, r1
 80102d8:	1436      	asrs	r6, r6, #16
 80102da:	d45d      	bmi.n	8010398 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80102dc:	4576      	cmp	r6, lr
 80102de:	da5b      	bge.n	8010398 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80102e0:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80102e2:	fb06 2404 	mla	r4, r6, r4, r2
 80102e6:	1424      	asrs	r4, r4, #16
 80102e8:	d456      	bmi.n	8010398 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80102ea:	42bc      	cmp	r4, r7
 80102ec:	da54      	bge.n	8010398 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80102ee:	f8dd 9000 	ldr.w	r9, [sp]
 80102f2:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80102f6:	4698      	mov	r8, r3
 80102f8:	f1b8 0f00 	cmp.w	r8, #0
 80102fc:	dd54      	ble.n	80103a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80102fe:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010302:	9804      	ldr	r0, [sp, #16]
 8010304:	1414      	asrs	r4, r2, #16
 8010306:	fb07 0404 	mla	r4, r7, r4, r0
 801030a:	140e      	asrs	r6, r1, #16
 801030c:	9801      	ldr	r0, [sp, #4]
 801030e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8010312:	f8b9 4000 	ldrh.w	r4, [r9]
 8010316:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801031a:	eb00 0b0e 	add.w	fp, r0, lr
 801031e:	1227      	asrs	r7, r4, #8
 8010320:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010324:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010328:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801032c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801032e:	fb16 f60a 	smulbb	r6, r6, sl
 8010332:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010336:	fb07 6705 	mla	r7, r7, r5, r6
 801033a:	10e6      	asrs	r6, r4, #3
 801033c:	00e4      	lsls	r4, r4, #3
 801033e:	b2e4      	uxtb	r4, r4
 8010340:	fb1b fb0a 	smulbb	fp, fp, sl
 8010344:	fb14 f405 	smulbb	r4, r4, r5
 8010348:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801034c:	b2bf      	uxth	r7, r7
 801034e:	fb06 b605 	mla	r6, r6, r5, fp
 8010352:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8010356:	b2b6      	uxth	r6, r6
 8010358:	fa1f fe8e 	uxth.w	lr, lr
 801035c:	1c7c      	adds	r4, r7, #1
 801035e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8010362:	f106 0b01 	add.w	fp, r6, #1
 8010366:	f10e 0401 	add.w	r4, lr, #1
 801036a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801036e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8010372:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010376:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801037a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801037e:	4327      	orrs	r7, r4
 8010380:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010384:	4401      	add	r1, r0
 8010386:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010388:	ea47 070b 	orr.w	r7, r7, fp
 801038c:	f829 7b02 	strh.w	r7, [r9], #2
 8010390:	4402      	add	r2, r0
 8010392:	f108 38ff 	add.w	r8, r8, #4294967295
 8010396:	e7af      	b.n	80102f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8010398:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801039c:	f04f 0e00 	mov.w	lr, #0
 80103a0:	eb03 040e 	add.w	r4, r3, lr
 80103a4:	2c00      	cmp	r4, #0
 80103a6:	dc43      	bgt.n	8010430 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80103a8:	9a00      	ldr	r2, [sp, #0]
 80103aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80103ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80103b2:	9300      	str	r3, [sp, #0]
 80103b4:	9b02      	ldr	r3, [sp, #8]
 80103b6:	2b00      	cmp	r3, #0
 80103b8:	f340 8098 	ble.w	80104ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80103bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80103c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80103c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80103c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80103ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80103ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80103d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80103d6:	eef0 6a62 	vmov.f32	s13, s5
 80103da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80103de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80103e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80103e6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80103ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80103ee:	eef0 6a43 	vmov.f32	s13, s6
 80103f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80103f6:	ee12 2a90 	vmov	r2, s5
 80103fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80103fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8010402:	ee13 2a10 	vmov	r2, s6
 8010406:	9313      	str	r3, [sp, #76]	; 0x4c
 8010408:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801040a:	fb92 f3f3 	sdiv	r3, r2, r3
 801040e:	9314      	str	r3, [sp, #80]	; 0x50
 8010410:	9b02      	ldr	r3, [sp, #8]
 8010412:	9a05      	ldr	r2, [sp, #20]
 8010414:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010418:	3b01      	subs	r3, #1
 801041a:	9302      	str	r3, [sp, #8]
 801041c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8010420:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010422:	eeb0 3a67 	vmov.f32	s6, s15
 8010426:	bf08      	it	eq
 8010428:	4613      	moveq	r3, r2
 801042a:	eef0 2a47 	vmov.f32	s5, s14
 801042e:	e72a      	b.n	8010286 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010430:	140f      	asrs	r7, r1, #16
 8010432:	d454      	bmi.n	80104de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010434:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8010438:	42be      	cmp	r6, r7
 801043a:	dd50      	ble.n	80104de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801043c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8010440:	d44d      	bmi.n	80104de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010442:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8010446:	4544      	cmp	r4, r8
 8010448:	dd49      	ble.n	80104de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801044a:	9c04      	ldr	r4, [sp, #16]
 801044c:	b236      	sxth	r6, r6
 801044e:	fb08 4606 	mla	r6, r8, r6, r4
 8010452:	f06f 0001 	mvn.w	r0, #1
 8010456:	f816 8007 	ldrb.w	r8, [r6, r7]
 801045a:	9c01      	ldr	r4, [sp, #4]
 801045c:	fb00 fa0e 	mul.w	sl, r0, lr
 8010460:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8010464:	9800      	ldr	r0, [sp, #0]
 8010466:	eb04 0b08 	add.w	fp, r4, r8
 801046a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801046e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010472:	9801      	ldr	r0, [sp, #4]
 8010474:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010478:	f810 8008 	ldrb.w	r8, [r0, r8]
 801047c:	9800      	ldr	r0, [sp, #0]
 801047e:	1227      	asrs	r7, r4, #8
 8010480:	fb16 f609 	smulbb	r6, r6, r9
 8010484:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010488:	fb07 6705 	mla	r7, r7, r5, r6
 801048c:	10e6      	asrs	r6, r4, #3
 801048e:	00e4      	lsls	r4, r4, #3
 8010490:	b2e4      	uxtb	r4, r4
 8010492:	fb1b fb09 	smulbb	fp, fp, r9
 8010496:	fb14 f405 	smulbb	r4, r4, r5
 801049a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801049e:	b2bf      	uxth	r7, r7
 80104a0:	fb06 b605 	mla	r6, r6, r5, fp
 80104a4:	fb08 4809 	mla	r8, r8, r9, r4
 80104a8:	b2b6      	uxth	r6, r6
 80104aa:	fa1f f888 	uxth.w	r8, r8
 80104ae:	1c7c      	adds	r4, r7, #1
 80104b0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80104b4:	f106 0b01 	add.w	fp, r6, #1
 80104b8:	f108 0401 	add.w	r4, r8, #1
 80104bc:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80104c0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80104c4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80104c8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80104cc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80104d0:	4327      	orrs	r7, r4
 80104d2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80104d6:	ea47 070b 	orr.w	r7, r7, fp
 80104da:	f820 700a 	strh.w	r7, [r0, sl]
 80104de:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80104e0:	4401      	add	r1, r0
 80104e2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80104e4:	f10e 3eff 	add.w	lr, lr, #4294967295
 80104e8:	4402      	add	r2, r0
 80104ea:	e759      	b.n	80103a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80104ec:	b007      	add	sp, #28
 80104ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080104f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80104f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104f8:	b085      	sub	sp, #20
 80104fa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80104fe:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010500:	9203      	str	r2, [sp, #12]
 8010502:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010506:	6870      	ldr	r0, [r6, #4]
 8010508:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801050a:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801050e:	686f      	ldr	r7, [r5, #4]
 8010510:	9101      	str	r1, [sp, #4]
 8010512:	fb00 2404 	mla	r4, r0, r4, r2
 8010516:	6832      	ldr	r2, [r6, #0]
 8010518:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801051c:	682a      	ldr	r2, [r5, #0]
 801051e:	9202      	str	r2, [sp, #8]
 8010520:	3704      	adds	r7, #4
 8010522:	9a01      	ldr	r2, [sp, #4]
 8010524:	2a00      	cmp	r2, #0
 8010526:	dc03      	bgt.n	8010530 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010528:	9a03      	ldr	r2, [sp, #12]
 801052a:	2a00      	cmp	r2, #0
 801052c:	f340 80cc 	ble.w	80106c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010530:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010532:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010536:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801053a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801053e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010540:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010544:	2b00      	cmp	r3, #0
 8010546:	dd0d      	ble.n	8010564 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010548:	1406      	asrs	r6, r0, #16
 801054a:	d405      	bmi.n	8010558 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801054c:	454e      	cmp	r6, r9
 801054e:	da03      	bge.n	8010558 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010550:	1416      	asrs	r6, r2, #16
 8010552:	d401      	bmi.n	8010558 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010554:	4546      	cmp	r6, r8
 8010556:	db06      	blt.n	8010566 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010558:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801055a:	4460      	add	r0, ip
 801055c:	4432      	add	r2, r6
 801055e:	3b01      	subs	r3, #1
 8010560:	3402      	adds	r4, #2
 8010562:	e7ef      	b.n	8010544 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8010564:	d00f      	beq.n	8010586 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8010566:	1e5e      	subs	r6, r3, #1
 8010568:	fb0c 0e06 	mla	lr, ip, r6, r0
 801056c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8010570:	d543      	bpl.n	80105fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8010572:	4698      	mov	r8, r3
 8010574:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8010578:	f1b8 0f00 	cmp.w	r8, #0
 801057c:	dc71      	bgt.n	8010662 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801057e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010582:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010586:	9b01      	ldr	r3, [sp, #4]
 8010588:	2b00      	cmp	r3, #0
 801058a:	f340 809d 	ble.w	80106c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801058e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010592:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010596:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801059a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801059c:	ee31 1a05 	vadd.f32	s2, s2, s10
 80105a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80105a4:	eeb0 6a62 	vmov.f32	s12, s5
 80105a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80105ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80105b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80105b4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80105b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80105bc:	eeb0 6a43 	vmov.f32	s12, s6
 80105c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80105c4:	ee12 2a90 	vmov	r2, s5
 80105c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80105cc:	fb92 fcf3 	sdiv	ip, r2, r3
 80105d0:	ee13 2a10 	vmov	r2, s6
 80105d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80105d8:	9312      	str	r3, [sp, #72]	; 0x48
 80105da:	9b01      	ldr	r3, [sp, #4]
 80105dc:	9a03      	ldr	r2, [sp, #12]
 80105de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80105e2:	3b01      	subs	r3, #1
 80105e4:	9301      	str	r3, [sp, #4]
 80105e6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80105ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80105ec:	eeb0 3a67 	vmov.f32	s6, s15
 80105f0:	bf08      	it	eq
 80105f2:	4613      	moveq	r3, r2
 80105f4:	eef0 2a47 	vmov.f32	s5, s14
 80105f8:	e793      	b.n	8010522 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80105fa:	45ce      	cmp	lr, r9
 80105fc:	dab9      	bge.n	8010572 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80105fe:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010600:	fb01 2606 	mla	r6, r1, r6, r2
 8010604:	1436      	asrs	r6, r6, #16
 8010606:	d4b4      	bmi.n	8010572 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010608:	4546      	cmp	r6, r8
 801060a:	dab2      	bge.n	8010572 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801060c:	4698      	mov	r8, r3
 801060e:	46a2      	mov	sl, r4
 8010610:	f1b8 0f00 	cmp.w	r8, #0
 8010614:	ddb3      	ble.n	801057e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8010616:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801061a:	9902      	ldr	r1, [sp, #8]
 801061c:	1416      	asrs	r6, r2, #16
 801061e:	fb09 1606 	mla	r6, r9, r6, r1
 8010622:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8010626:	492a      	ldr	r1, [pc, #168]	; (80106d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8010628:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801062c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010630:	eb07 0b0e 	add.w	fp, r7, lr
 8010634:	4460      	add	r0, ip
 8010636:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801063a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801063e:	00f6      	lsls	r6, r6, #3
 8010640:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8010644:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010648:	ea49 0606 	orr.w	r6, r9, r6
 801064c:	f817 900e 	ldrb.w	r9, [r7, lr]
 8010650:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010652:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8010656:	f82a 6b02 	strh.w	r6, [sl], #2
 801065a:	440a      	add	r2, r1
 801065c:	f108 38ff 	add.w	r8, r8, #4294967295
 8010660:	e7d6      	b.n	8010610 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8010662:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010666:	d429      	bmi.n	80106bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010668:	68ae      	ldr	r6, [r5, #8]
 801066a:	454e      	cmp	r6, r9
 801066c:	dd26      	ble.n	80106bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801066e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8010672:	d423      	bmi.n	80106bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010674:	68e9      	ldr	r1, [r5, #12]
 8010676:	4559      	cmp	r1, fp
 8010678:	dd20      	ble.n	80106bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801067a:	9902      	ldr	r1, [sp, #8]
 801067c:	fa0f fe86 	sxth.w	lr, r6
 8010680:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8010684:	f06f 0101 	mvn.w	r1, #1
 8010688:	f81e e009 	ldrb.w	lr, [lr, r9]
 801068c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010690:	eb07 060e 	add.w	r6, r7, lr
 8010694:	fb01 f908 	mul.w	r9, r1, r8
 8010698:	f896 b002 	ldrb.w	fp, [r6, #2]
 801069c:	7876      	ldrb	r6, [r6, #1]
 801069e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80106a2:	00f6      	lsls	r6, r6, #3
 80106a4:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80106a8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80106ac:	ea4b 0606 	orr.w	r6, fp, r6
 80106b0:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80106b4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80106b8:	f82a 6009 	strh.w	r6, [sl, r9]
 80106bc:	9912      	ldr	r1, [sp, #72]	; 0x48
 80106be:	4460      	add	r0, ip
 80106c0:	440a      	add	r2, r1
 80106c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80106c6:	e757      	b.n	8010578 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80106c8:	b005      	add	sp, #20
 80106ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80106ce:	bf00      	nop
 80106d0:	fffff800 	.word	0xfffff800

080106d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80106d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106d8:	b087      	sub	sp, #28
 80106da:	468b      	mov	fp, r1
 80106dc:	9815      	ldr	r0, [sp, #84]	; 0x54
 80106de:	9204      	str	r2, [sp, #16]
 80106e0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80106e4:	9205      	str	r2, [sp, #20]
 80106e6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80106ea:	6841      	ldr	r1, [r0, #4]
 80106ec:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80106f0:	fb01 2404 	mla	r4, r1, r4, r2
 80106f4:	6802      	ldr	r2, [r0, #0]
 80106f6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80106fa:	f8dc 2000 	ldr.w	r2, [ip]
 80106fe:	9201      	str	r2, [sp, #4]
 8010700:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010704:	3204      	adds	r2, #4
 8010706:	9202      	str	r2, [sp, #8]
 8010708:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801070c:	f1bb 0f00 	cmp.w	fp, #0
 8010710:	dc03      	bgt.n	801071a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8010712:	9a04      	ldr	r2, [sp, #16]
 8010714:	2a00      	cmp	r2, #0
 8010716:	f340 8138 	ble.w	801098a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801071a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801071c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010720:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8010724:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010728:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801072a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801072e:	2b00      	cmp	r3, #0
 8010730:	dd0e      	ble.n	8010750 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010732:	1402      	asrs	r2, r0, #16
 8010734:	d405      	bmi.n	8010742 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010736:	42ba      	cmp	r2, r7
 8010738:	da03      	bge.n	8010742 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801073a:	140a      	asrs	r2, r1, #16
 801073c:	d401      	bmi.n	8010742 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801073e:	42b2      	cmp	r2, r6
 8010740:	db07      	blt.n	8010752 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010742:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010744:	4410      	add	r0, r2
 8010746:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010748:	3b01      	subs	r3, #1
 801074a:	4411      	add	r1, r2
 801074c:	3402      	adds	r4, #2
 801074e:	e7ee      	b.n	801072e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8010750:	d019      	beq.n	8010786 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8010752:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010754:	1e5a      	subs	r2, r3, #1
 8010756:	fb05 0502 	mla	r5, r5, r2, r0
 801075a:	142d      	asrs	r5, r5, #16
 801075c:	d409      	bmi.n	8010772 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801075e:	42bd      	cmp	r5, r7
 8010760:	da07      	bge.n	8010772 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010762:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010764:	fb05 1202 	mla	r2, r5, r2, r1
 8010768:	1412      	asrs	r2, r2, #16
 801076a:	d402      	bmi.n	8010772 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801076c:	42b2      	cmp	r2, r6
 801076e:	f2c0 80ac 	blt.w	80108ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8010772:	f04f 0e00 	mov.w	lr, #0
 8010776:	eb03 020e 	add.w	r2, r3, lr
 801077a:	2a00      	cmp	r2, #0
 801077c:	dc3e      	bgt.n	80107fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801077e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010782:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010786:	f1bb 0f00 	cmp.w	fp, #0
 801078a:	f340 80fe 	ble.w	801098a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801078e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010792:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010796:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801079a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801079c:	f1bb 0b01 	subs.w	fp, fp, #1
 80107a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80107a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80107a8:	eeb0 6a62 	vmov.f32	s12, s5
 80107ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 80107b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80107b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80107b8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80107bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80107c0:	eeb0 6a43 	vmov.f32	s12, s6
 80107c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80107c8:	ee12 2a90 	vmov	r2, s5
 80107cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80107d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80107d4:	ee13 2a10 	vmov	r2, s6
 80107d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80107dc:	9313      	str	r3, [sp, #76]	; 0x4c
 80107de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80107e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80107e4:	9a04      	ldr	r2, [sp, #16]
 80107e6:	9314      	str	r3, [sp, #80]	; 0x50
 80107e8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80107ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80107ee:	eeb0 3a67 	vmov.f32	s6, s15
 80107f2:	bf08      	it	eq
 80107f4:	4613      	moveq	r3, r2
 80107f6:	eef0 2a47 	vmov.f32	s5, s14
 80107fa:	e787      	b.n	801070c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80107fc:	1406      	asrs	r6, r0, #16
 80107fe:	d45d      	bmi.n	80108bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010800:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8010804:	42b5      	cmp	r5, r6
 8010806:	dd59      	ble.n	80108bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010808:	140f      	asrs	r7, r1, #16
 801080a:	d457      	bmi.n	80108bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801080c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8010810:	42ba      	cmp	r2, r7
 8010812:	dd53      	ble.n	80108bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010814:	9a01      	ldr	r2, [sp, #4]
 8010816:	b22d      	sxth	r5, r5
 8010818:	fb07 2505 	mla	r5, r7, r5, r2
 801081c:	5daa      	ldrb	r2, [r5, r6]
 801081e:	9d02      	ldr	r5, [sp, #8]
 8010820:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010824:	0e2e      	lsrs	r6, r5, #24
 8010826:	d049      	beq.n	80108bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010828:	f06f 0201 	mvn.w	r2, #1
 801082c:	fb02 f20e 	mul.w	r2, r2, lr
 8010830:	9203      	str	r2, [sp, #12]
 8010832:	f834 8002 	ldrh.w	r8, [r4, r2]
 8010836:	9a05      	ldr	r2, [sp, #20]
 8010838:	4356      	muls	r6, r2
 801083a:	1c72      	adds	r2, r6, #1
 801083c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010840:	1212      	asrs	r2, r2, #8
 8010842:	fa1f f982 	uxth.w	r9, r2
 8010846:	ea4f 2728 	mov.w	r7, r8, asr #8
 801084a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801084e:	43d2      	mvns	r2, r2
 8010850:	b2d2      	uxtb	r2, r2
 8010852:	fb16 f609 	smulbb	r6, r6, r9
 8010856:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801085a:	fb07 6702 	mla	r7, r7, r2, r6
 801085e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010862:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010866:	b2ed      	uxtb	r5, r5
 8010868:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801086c:	fa5f f888 	uxtb.w	r8, r8
 8010870:	fb15 f509 	smulbb	r5, r5, r9
 8010874:	fb08 5502 	mla	r5, r8, r2, r5
 8010878:	b2bf      	uxth	r7, r7
 801087a:	fb1a fa09 	smulbb	sl, sl, r9
 801087e:	b2ad      	uxth	r5, r5
 8010880:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010884:	fb06 a602 	mla	r6, r6, r2, sl
 8010888:	1c7a      	adds	r2, r7, #1
 801088a:	f105 0a01 	add.w	sl, r5, #1
 801088e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010892:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010896:	b2b6      	uxth	r6, r6
 8010898:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801089c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80108a0:	ea4a 0707 	orr.w	r7, sl, r7
 80108a4:	f106 0a01 	add.w	sl, r6, #1
 80108a8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80108ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80108b0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80108b4:	9a03      	ldr	r2, [sp, #12]
 80108b6:	ea47 070a 	orr.w	r7, r7, sl
 80108ba:	52a7      	strh	r7, [r4, r2]
 80108bc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80108be:	4410      	add	r0, r2
 80108c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80108c2:	f10e 3eff 	add.w	lr, lr, #4294967295
 80108c6:	4411      	add	r1, r2
 80108c8:	e755      	b.n	8010776 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80108ca:	f04f 0800 	mov.w	r8, #0
 80108ce:	eba3 0208 	sub.w	r2, r3, r8
 80108d2:	2a00      	cmp	r2, #0
 80108d4:	f77f af53 	ble.w	801077e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80108d8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80108dc:	9f01      	ldr	r7, [sp, #4]
 80108de:	140a      	asrs	r2, r1, #16
 80108e0:	1405      	asrs	r5, r0, #16
 80108e2:	fb06 7202 	mla	r2, r6, r2, r7
 80108e6:	5d52      	ldrb	r2, [r2, r5]
 80108e8:	9d02      	ldr	r5, [sp, #8]
 80108ea:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80108ee:	0e2e      	lsrs	r6, r5, #24
 80108f0:	d044      	beq.n	801097c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80108f2:	9a05      	ldr	r2, [sp, #20]
 80108f4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80108f8:	4356      	muls	r6, r2
 80108fa:	1c72      	adds	r2, r6, #1
 80108fc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010900:	1212      	asrs	r2, r2, #8
 8010902:	fa1f f982 	uxth.w	r9, r2
 8010906:	ea4f 272e 	mov.w	r7, lr, asr #8
 801090a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801090e:	43d2      	mvns	r2, r2
 8010910:	b2d2      	uxtb	r2, r2
 8010912:	fb16 f609 	smulbb	r6, r6, r9
 8010916:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801091a:	fb07 6702 	mla	r7, r7, r2, r6
 801091e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010922:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010926:	b2ed      	uxtb	r5, r5
 8010928:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801092c:	fa5f fe8e 	uxtb.w	lr, lr
 8010930:	fb15 f509 	smulbb	r5, r5, r9
 8010934:	fb0e 5502 	mla	r5, lr, r2, r5
 8010938:	b2bf      	uxth	r7, r7
 801093a:	fb1a fa09 	smulbb	sl, sl, r9
 801093e:	b2ad      	uxth	r5, r5
 8010940:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010944:	fb06 a602 	mla	r6, r6, r2, sl
 8010948:	1c7a      	adds	r2, r7, #1
 801094a:	f105 0a01 	add.w	sl, r5, #1
 801094e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010952:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010956:	b2b6      	uxth	r6, r6
 8010958:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801095c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010960:	ea4a 0707 	orr.w	r7, sl, r7
 8010964:	f106 0a01 	add.w	sl, r6, #1
 8010968:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801096c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010970:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010974:	ea47 070a 	orr.w	r7, r7, sl
 8010978:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801097c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801097e:	4410      	add	r0, r2
 8010980:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010982:	f108 0801 	add.w	r8, r8, #1
 8010986:	4411      	add	r1, r2
 8010988:	e7a1      	b.n	80108ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801098a:	b007      	add	sp, #28
 801098c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010990 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010994:	b085      	sub	sp, #20
 8010996:	468b      	mov	fp, r1
 8010998:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801099a:	9203      	str	r2, [sp, #12]
 801099c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80109a0:	6841      	ldr	r1, [r0, #4]
 80109a2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80109a6:	fb01 2404 	mla	r4, r1, r4, r2
 80109aa:	6802      	ldr	r2, [r0, #0]
 80109ac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80109b0:	f8de 2000 	ldr.w	r2, [lr]
 80109b4:	9200      	str	r2, [sp, #0]
 80109b6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80109ba:	3204      	adds	r2, #4
 80109bc:	9201      	str	r2, [sp, #4]
 80109be:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80109c2:	f1bb 0f00 	cmp.w	fp, #0
 80109c6:	dc03      	bgt.n	80109d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80109c8:	9a03      	ldr	r2, [sp, #12]
 80109ca:	2a00      	cmp	r2, #0
 80109cc:	f340 8153 	ble.w	8010c76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80109d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80109d2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80109d6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80109da:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80109de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80109e0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80109e4:	2b00      	cmp	r3, #0
 80109e6:	dd0e      	ble.n	8010a06 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80109e8:	1408      	asrs	r0, r1, #16
 80109ea:	d405      	bmi.n	80109f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80109ec:	42b8      	cmp	r0, r7
 80109ee:	da03      	bge.n	80109f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80109f0:	1410      	asrs	r0, r2, #16
 80109f2:	d401      	bmi.n	80109f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80109f4:	42b0      	cmp	r0, r6
 80109f6:	db07      	blt.n	8010a08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80109f8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80109fa:	4401      	add	r1, r0
 80109fc:	9812      	ldr	r0, [sp, #72]	; 0x48
 80109fe:	3b01      	subs	r3, #1
 8010a00:	4402      	add	r2, r0
 8010a02:	3402      	adds	r4, #2
 8010a04:	e7ee      	b.n	80109e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8010a06:	d017      	beq.n	8010a38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010a08:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010a0a:	1e58      	subs	r0, r3, #1
 8010a0c:	fb05 1500 	mla	r5, r5, r0, r1
 8010a10:	142d      	asrs	r5, r5, #16
 8010a12:	d409      	bmi.n	8010a28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010a14:	42bd      	cmp	r5, r7
 8010a16:	da07      	bge.n	8010a28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010a18:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010a1a:	fb05 2000 	mla	r0, r5, r0, r2
 8010a1e:	1400      	asrs	r0, r0, #16
 8010a20:	d402      	bmi.n	8010a28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010a22:	42b0      	cmp	r0, r6
 8010a24:	f2c0 80bc 	blt.w	8010ba0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8010a28:	2600      	movs	r6, #0
 8010a2a:	1998      	adds	r0, r3, r6
 8010a2c:	2800      	cmp	r0, #0
 8010a2e:	dc3e      	bgt.n	8010aae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8010a30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010a34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010a38:	f1bb 0f00 	cmp.w	fp, #0
 8010a3c:	f340 811b 	ble.w	8010c76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010a40:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010a44:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010a48:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010a4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010a4e:	f1bb 0b01 	subs.w	fp, fp, #1
 8010a52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010a56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010a5a:	eeb0 6a62 	vmov.f32	s12, s5
 8010a5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010a62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010a66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010a6a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010a6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010a72:	eeb0 6a43 	vmov.f32	s12, s6
 8010a76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010a7a:	ee12 2a90 	vmov	r2, s5
 8010a7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010a82:	fb92 f3f3 	sdiv	r3, r2, r3
 8010a86:	ee13 2a10 	vmov	r2, s6
 8010a8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010a8e:	9311      	str	r3, [sp, #68]	; 0x44
 8010a90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010a92:	fb92 f3f3 	sdiv	r3, r2, r3
 8010a96:	9a03      	ldr	r2, [sp, #12]
 8010a98:	9312      	str	r3, [sp, #72]	; 0x48
 8010a9a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010a9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010aa0:	eeb0 3a67 	vmov.f32	s6, s15
 8010aa4:	bf08      	it	eq
 8010aa6:	4613      	moveq	r3, r2
 8010aa8:	eef0 2a47 	vmov.f32	s5, s14
 8010aac:	e789      	b.n	80109c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8010aae:	140f      	asrs	r7, r1, #16
 8010ab0:	d426      	bmi.n	8010b00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010ab2:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010ab6:	42bd      	cmp	r5, r7
 8010ab8:	dd22      	ble.n	8010b00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010aba:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010abe:	d41f      	bmi.n	8010b00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010ac0:	f8de 000c 	ldr.w	r0, [lr, #12]
 8010ac4:	4560      	cmp	r0, ip
 8010ac6:	dd1b      	ble.n	8010b00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010ac8:	9800      	ldr	r0, [sp, #0]
 8010aca:	b22d      	sxth	r5, r5
 8010acc:	fb0c 0505 	mla	r5, ip, r5, r0
 8010ad0:	5de8      	ldrb	r0, [r5, r7]
 8010ad2:	9d01      	ldr	r5, [sp, #4]
 8010ad4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010ad8:	0e07      	lsrs	r7, r0, #24
 8010ada:	2fff      	cmp	r7, #255	; 0xff
 8010adc:	d116      	bne.n	8010b0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8010ade:	f06f 0501 	mvn.w	r5, #1
 8010ae2:	fb05 f706 	mul.w	r7, r5, r6
 8010ae6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010aea:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010aee:	0945      	lsrs	r5, r0, #5
 8010af0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010af4:	ea4c 0505 	orr.w	r5, ip, r5
 8010af8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010afc:	4305      	orrs	r5, r0
 8010afe:	53e5      	strh	r5, [r4, r7]
 8010b00:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010b02:	4401      	add	r1, r0
 8010b04:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010b06:	3e01      	subs	r6, #1
 8010b08:	4402      	add	r2, r0
 8010b0a:	e78e      	b.n	8010a2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8010b0c:	b2fd      	uxtb	r5, r7
 8010b0e:	2f00      	cmp	r7, #0
 8010b10:	d0f6      	beq.n	8010b00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010b12:	f06f 0701 	mvn.w	r7, #1
 8010b16:	4377      	muls	r7, r6
 8010b18:	fa1f f985 	uxth.w	r9, r5
 8010b1c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8010b20:	9702      	str	r7, [sp, #8]
 8010b22:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010b26:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010b2a:	43ed      	mvns	r5, r5
 8010b2c:	b2ed      	uxtb	r5, r5
 8010b2e:	fb17 f709 	smulbb	r7, r7, r9
 8010b32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010b36:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010b3a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010b3e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8010b42:	b2c0      	uxtb	r0, r0
 8010b44:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010b48:	fa5f f888 	uxtb.w	r8, r8
 8010b4c:	fb10 f009 	smulbb	r0, r0, r9
 8010b50:	fb08 0005 	mla	r0, r8, r5, r0
 8010b54:	b280      	uxth	r0, r0
 8010b56:	fa1f fc8c 	uxth.w	ip, ip
 8010b5a:	fb1a fa09 	smulbb	sl, sl, r9
 8010b5e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010b62:	fb07 a705 	mla	r7, r7, r5, sl
 8010b66:	f100 0a01 	add.w	sl, r0, #1
 8010b6a:	f10c 0501 	add.w	r5, ip, #1
 8010b6e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010b72:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010b76:	b2bf      	uxth	r7, r7
 8010b78:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010b7c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010b80:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010b84:	f107 0a01 	add.w	sl, r7, #1
 8010b88:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010b8c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010b90:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010b94:	9802      	ldr	r0, [sp, #8]
 8010b96:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010b9a:	f824 c000 	strh.w	ip, [r4, r0]
 8010b9e:	e7af      	b.n	8010b00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010ba0:	f04f 0800 	mov.w	r8, #0
 8010ba4:	eba3 0008 	sub.w	r0, r3, r8
 8010ba8:	2800      	cmp	r0, #0
 8010baa:	f77f af41 	ble.w	8010a30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010bae:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010bb2:	9f00      	ldr	r7, [sp, #0]
 8010bb4:	1410      	asrs	r0, r2, #16
 8010bb6:	140d      	asrs	r5, r1, #16
 8010bb8:	fb06 7000 	mla	r0, r6, r0, r7
 8010bbc:	5d40      	ldrb	r0, [r0, r5]
 8010bbe:	9d01      	ldr	r5, [sp, #4]
 8010bc0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8010bc4:	0e2e      	lsrs	r6, r5, #24
 8010bc6:	2eff      	cmp	r6, #255	; 0xff
 8010bc8:	d112      	bne.n	8010bf0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8010bca:	482c      	ldr	r0, [pc, #176]	; (8010c7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8010bcc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8010bd0:	0968      	lsrs	r0, r5, #5
 8010bd2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8010bd6:	4330      	orrs	r0, r6
 8010bd8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8010bdc:	4328      	orrs	r0, r5
 8010bde:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8010be2:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010be4:	4401      	add	r1, r0
 8010be6:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010be8:	f108 0801 	add.w	r8, r8, #1
 8010bec:	4402      	add	r2, r0
 8010bee:	e7d9      	b.n	8010ba4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8010bf0:	b2f0      	uxtb	r0, r6
 8010bf2:	2e00      	cmp	r6, #0
 8010bf4:	d0f5      	beq.n	8010be2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8010bf6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8010bfa:	fa1f f980 	uxth.w	r9, r0
 8010bfe:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010c02:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010c06:	43c0      	mvns	r0, r0
 8010c08:	b2c0      	uxtb	r0, r0
 8010c0a:	fb16 f609 	smulbb	r6, r6, r9
 8010c0e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010c12:	fb07 6700 	mla	r7, r7, r0, r6
 8010c16:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010c1a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010c1e:	b2ed      	uxtb	r5, r5
 8010c20:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010c24:	fa5f fc8c 	uxtb.w	ip, ip
 8010c28:	fb15 f509 	smulbb	r5, r5, r9
 8010c2c:	fb0c 5500 	mla	r5, ip, r0, r5
 8010c30:	b2bf      	uxth	r7, r7
 8010c32:	fb1a fa09 	smulbb	sl, sl, r9
 8010c36:	b2ad      	uxth	r5, r5
 8010c38:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010c3c:	fb06 a600 	mla	r6, r6, r0, sl
 8010c40:	1c78      	adds	r0, r7, #1
 8010c42:	f105 0a01 	add.w	sl, r5, #1
 8010c46:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8010c4a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010c4e:	b2b6      	uxth	r6, r6
 8010c50:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010c54:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010c58:	ea4a 0707 	orr.w	r7, sl, r7
 8010c5c:	f106 0a01 	add.w	sl, r6, #1
 8010c60:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010c64:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010c68:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010c6c:	ea47 070a 	orr.w	r7, r7, sl
 8010c70:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010c74:	e7b5      	b.n	8010be2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8010c76:	b005      	add	sp, #20
 8010c78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c7c:	fffff800 	.word	0xfffff800

08010c80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c84:	b087      	sub	sp, #28
 8010c86:	468b      	mov	fp, r1
 8010c88:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010c8a:	9204      	str	r2, [sp, #16]
 8010c8c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010c90:	9205      	str	r2, [sp, #20]
 8010c92:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010c96:	6861      	ldr	r1, [r4, #4]
 8010c98:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8010c9c:	fb01 2000 	mla	r0, r1, r0, r2
 8010ca0:	6822      	ldr	r2, [r4, #0]
 8010ca2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010ca6:	f8de 2000 	ldr.w	r2, [lr]
 8010caa:	9201      	str	r2, [sp, #4]
 8010cac:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010cb0:	9202      	str	r2, [sp, #8]
 8010cb2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010cb6:	f1bb 0f00 	cmp.w	fp, #0
 8010cba:	dc03      	bgt.n	8010cc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8010cbc:	9a04      	ldr	r2, [sp, #16]
 8010cbe:	2a00      	cmp	r2, #0
 8010cc0:	f340 8142 	ble.w	8010f48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010cc4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010cc6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010cca:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010cce:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010cd2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010cd4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010cd8:	2b00      	cmp	r3, #0
 8010cda:	dd0e      	ble.n	8010cfa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8010cdc:	140c      	asrs	r4, r1, #16
 8010cde:	d405      	bmi.n	8010cec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010ce0:	42bc      	cmp	r4, r7
 8010ce2:	da03      	bge.n	8010cec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010ce4:	1414      	asrs	r4, r2, #16
 8010ce6:	d401      	bmi.n	8010cec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010ce8:	42b4      	cmp	r4, r6
 8010cea:	db07      	blt.n	8010cfc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010cec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010cee:	4421      	add	r1, r4
 8010cf0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010cf2:	3b01      	subs	r3, #1
 8010cf4:	4422      	add	r2, r4
 8010cf6:	3002      	adds	r0, #2
 8010cf8:	e7ee      	b.n	8010cd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8010cfa:	d019      	beq.n	8010d30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8010cfc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010cfe:	1e5c      	subs	r4, r3, #1
 8010d00:	fb05 1504 	mla	r5, r5, r4, r1
 8010d04:	142d      	asrs	r5, r5, #16
 8010d06:	d409      	bmi.n	8010d1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010d08:	42bd      	cmp	r5, r7
 8010d0a:	da07      	bge.n	8010d1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010d0c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010d0e:	fb05 2404 	mla	r4, r5, r4, r2
 8010d12:	1424      	asrs	r4, r4, #16
 8010d14:	d402      	bmi.n	8010d1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010d16:	42b4      	cmp	r4, r6
 8010d18:	f2c0 80b1 	blt.w	8010e7e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8010d1c:	f04f 0800 	mov.w	r8, #0
 8010d20:	eb03 0408 	add.w	r4, r3, r8
 8010d24:	2c00      	cmp	r4, #0
 8010d26:	dc3e      	bgt.n	8010da6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8010d28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010d2c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010d30:	f1bb 0f00 	cmp.w	fp, #0
 8010d34:	f340 8108 	ble.w	8010f48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010d38:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010d3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010d40:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010d44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010d46:	f1bb 0b01 	subs.w	fp, fp, #1
 8010d4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010d4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010d52:	eeb0 6a62 	vmov.f32	s12, s5
 8010d56:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010d5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010d5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010d62:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010d66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010d6a:	eeb0 6a43 	vmov.f32	s12, s6
 8010d6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010d72:	ee12 2a90 	vmov	r2, s5
 8010d76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010d7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8010d7e:	ee13 2a10 	vmov	r2, s6
 8010d82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010d86:	9313      	str	r3, [sp, #76]	; 0x4c
 8010d88:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010d8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8010d8e:	9a04      	ldr	r2, [sp, #16]
 8010d90:	9314      	str	r3, [sp, #80]	; 0x50
 8010d92:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010d96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010d98:	eeb0 3a67 	vmov.f32	s6, s15
 8010d9c:	bf08      	it	eq
 8010d9e:	4613      	moveq	r3, r2
 8010da0:	eef0 2a47 	vmov.f32	s5, s14
 8010da4:	e787      	b.n	8010cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8010da6:	140e      	asrs	r6, r1, #16
 8010da8:	d462      	bmi.n	8010e70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010daa:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010dae:	42b5      	cmp	r5, r6
 8010db0:	dd5e      	ble.n	8010e70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010db2:	1417      	asrs	r7, r2, #16
 8010db4:	d45c      	bmi.n	8010e70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010db6:	f8de 400c 	ldr.w	r4, [lr, #12]
 8010dba:	42bc      	cmp	r4, r7
 8010dbc:	dd58      	ble.n	8010e70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010dbe:	b22d      	sxth	r5, r5
 8010dc0:	fb07 6505 	mla	r5, r7, r5, r6
 8010dc4:	9c02      	ldr	r4, [sp, #8]
 8010dc6:	5d66      	ldrb	r6, [r4, r5]
 8010dc8:	2e00      	cmp	r6, #0
 8010dca:	d051      	beq.n	8010e70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010dcc:	9c01      	ldr	r4, [sp, #4]
 8010dce:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8010dd2:	f06f 0401 	mvn.w	r4, #1
 8010dd6:	fb04 f408 	mul.w	r4, r4, r8
 8010dda:	9403      	str	r4, [sp, #12]
 8010ddc:	5b05      	ldrh	r5, [r0, r4]
 8010dde:	9c05      	ldr	r4, [sp, #20]
 8010de0:	4366      	muls	r6, r4
 8010de2:	1c74      	adds	r4, r6, #1
 8010de4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010de8:	1224      	asrs	r4, r4, #8
 8010dea:	b2a7      	uxth	r7, r4
 8010dec:	122e      	asrs	r6, r5, #8
 8010dee:	43e4      	mvns	r4, r4
 8010df0:	b2e4      	uxtb	r4, r4
 8010df2:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8010df6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010dfa:	fb16 f604 	smulbb	r6, r6, r4
 8010dfe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010e02:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010e06:	00ed      	lsls	r5, r5, #3
 8010e08:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010e0c:	b2ed      	uxtb	r5, r5
 8010e0e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8010e12:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8010e16:	fb15 f504 	smulbb	r5, r5, r4
 8010e1a:	fa5f f989 	uxtb.w	r9, r9
 8010e1e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010e22:	fb09 5507 	mla	r5, r9, r7, r5
 8010e26:	fb1a fa04 	smulbb	sl, sl, r4
 8010e2a:	fa1f fc8c 	uxth.w	ip, ip
 8010e2e:	b2ad      	uxth	r5, r5
 8010e30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010e34:	fb06 a607 	mla	r6, r6, r7, sl
 8010e38:	f10c 0401 	add.w	r4, ip, #1
 8010e3c:	f105 0a01 	add.w	sl, r5, #1
 8010e40:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010e44:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010e48:	b2b6      	uxth	r6, r6
 8010e4a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010e4e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010e52:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010e56:	f106 0a01 	add.w	sl, r6, #1
 8010e5a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010e5e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010e62:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010e66:	9c03      	ldr	r4, [sp, #12]
 8010e68:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010e6c:	f820 c004 	strh.w	ip, [r0, r4]
 8010e70:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010e72:	4421      	add	r1, r4
 8010e74:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010e76:	f108 38ff 	add.w	r8, r8, #4294967295
 8010e7a:	4422      	add	r2, r4
 8010e7c:	e750      	b.n	8010d20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010e7e:	f04f 0900 	mov.w	r9, #0
 8010e82:	eba3 0409 	sub.w	r4, r3, r9
 8010e86:	2c00      	cmp	r4, #0
 8010e88:	f77f af4e 	ble.w	8010d28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010e8c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010e90:	140d      	asrs	r5, r1, #16
 8010e92:	1414      	asrs	r4, r2, #16
 8010e94:	fb06 5404 	mla	r4, r6, r4, r5
 8010e98:	9d02      	ldr	r5, [sp, #8]
 8010e9a:	5d2e      	ldrb	r6, [r5, r4]
 8010e9c:	2e00      	cmp	r6, #0
 8010e9e:	d04c      	beq.n	8010f3a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8010ea0:	9d01      	ldr	r5, [sp, #4]
 8010ea2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8010ea6:	9c05      	ldr	r4, [sp, #20]
 8010ea8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8010eac:	4366      	muls	r6, r4
 8010eae:	1c74      	adds	r4, r6, #1
 8010eb0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010eb4:	1224      	asrs	r4, r4, #8
 8010eb6:	b2a7      	uxth	r7, r4
 8010eb8:	122e      	asrs	r6, r5, #8
 8010eba:	43e4      	mvns	r4, r4
 8010ebc:	b2e4      	uxtb	r4, r4
 8010ebe:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010ec2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010ec6:	fb16 f604 	smulbb	r6, r6, r4
 8010eca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010ece:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010ed2:	00ed      	lsls	r5, r5, #3
 8010ed4:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010ed8:	b2ed      	uxtb	r5, r5
 8010eda:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010ede:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010ee2:	fb15 f504 	smulbb	r5, r5, r4
 8010ee6:	fa5f f888 	uxtb.w	r8, r8
 8010eea:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010eee:	fb08 5507 	mla	r5, r8, r7, r5
 8010ef2:	fb1a fa04 	smulbb	sl, sl, r4
 8010ef6:	fa1f fc8c 	uxth.w	ip, ip
 8010efa:	b2ad      	uxth	r5, r5
 8010efc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010f00:	fb06 a607 	mla	r6, r6, r7, sl
 8010f04:	f10c 0401 	add.w	r4, ip, #1
 8010f08:	f105 0a01 	add.w	sl, r5, #1
 8010f0c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010f10:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010f14:	b2b6      	uxth	r6, r6
 8010f16:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010f1a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010f1e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010f22:	f106 0a01 	add.w	sl, r6, #1
 8010f26:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010f2a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010f2e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010f32:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010f36:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8010f3a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010f3c:	4421      	add	r1, r4
 8010f3e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010f40:	f109 0901 	add.w	r9, r9, #1
 8010f44:	4422      	add	r2, r4
 8010f46:	e79c      	b.n	8010e82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8010f48:	b007      	add	sp, #28
 8010f4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010f4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010f4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f52:	b085      	sub	sp, #20
 8010f54:	468b      	mov	fp, r1
 8010f56:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010f58:	9203      	str	r2, [sp, #12]
 8010f5a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8010f5e:	6861      	ldr	r1, [r4, #4]
 8010f60:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8010f64:	fb01 2000 	mla	r0, r1, r0, r2
 8010f68:	6822      	ldr	r2, [r4, #0]
 8010f6a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010f6e:	f8d8 2000 	ldr.w	r2, [r8]
 8010f72:	9200      	str	r2, [sp, #0]
 8010f74:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8010f78:	9201      	str	r2, [sp, #4]
 8010f7a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010f7e:	f1bb 0f00 	cmp.w	fp, #0
 8010f82:	dc03      	bgt.n	8010f8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8010f84:	9a03      	ldr	r2, [sp, #12]
 8010f86:	2a00      	cmp	r2, #0
 8010f88:	f340 8146 	ble.w	8011218 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8010f8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010f8e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8010f92:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8010f96:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010f9a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010f9c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010fa0:	2b00      	cmp	r3, #0
 8010fa2:	dd0e      	ble.n	8010fc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8010fa4:	140c      	asrs	r4, r1, #16
 8010fa6:	d405      	bmi.n	8010fb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010fa8:	42bc      	cmp	r4, r7
 8010faa:	da03      	bge.n	8010fb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010fac:	1414      	asrs	r4, r2, #16
 8010fae:	d401      	bmi.n	8010fb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010fb0:	42b4      	cmp	r4, r6
 8010fb2:	db07      	blt.n	8010fc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010fb4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8010fb6:	4421      	add	r1, r4
 8010fb8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010fba:	3b01      	subs	r3, #1
 8010fbc:	4422      	add	r2, r4
 8010fbe:	3002      	adds	r0, #2
 8010fc0:	e7ee      	b.n	8010fa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8010fc2:	d017      	beq.n	8010ff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8010fc4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010fc6:	1e5c      	subs	r4, r3, #1
 8010fc8:	fb05 1504 	mla	r5, r5, r4, r1
 8010fcc:	142d      	asrs	r5, r5, #16
 8010fce:	d409      	bmi.n	8010fe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010fd0:	42bd      	cmp	r5, r7
 8010fd2:	da07      	bge.n	8010fe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010fd4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010fd6:	fb05 2404 	mla	r4, r5, r4, r2
 8010fda:	1424      	asrs	r4, r4, #16
 8010fdc:	d402      	bmi.n	8010fe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010fde:	42b4      	cmp	r4, r6
 8010fe0:	f2c0 80b3 	blt.w	801114a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8010fe4:	2600      	movs	r6, #0
 8010fe6:	199c      	adds	r4, r3, r6
 8010fe8:	2c00      	cmp	r4, #0
 8010fea:	dc3e      	bgt.n	801106a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8010fec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010ff0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010ff4:	f1bb 0f00 	cmp.w	fp, #0
 8010ff8:	f340 810e 	ble.w	8011218 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8010ffc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011000:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011004:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011008:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801100a:	f1bb 0b01 	subs.w	fp, fp, #1
 801100e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011012:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011016:	eeb0 6a62 	vmov.f32	s12, s5
 801101a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801101e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011022:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011026:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801102a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801102e:	eeb0 6a43 	vmov.f32	s12, s6
 8011032:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011036:	ee12 2a90 	vmov	r2, s5
 801103a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801103e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011042:	ee13 2a10 	vmov	r2, s6
 8011046:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801104a:	9311      	str	r3, [sp, #68]	; 0x44
 801104c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801104e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011052:	9a03      	ldr	r2, [sp, #12]
 8011054:	9312      	str	r3, [sp, #72]	; 0x48
 8011056:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801105a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801105c:	eeb0 3a67 	vmov.f32	s6, s15
 8011060:	bf08      	it	eq
 8011062:	4613      	moveq	r3, r2
 8011064:	eef0 2a47 	vmov.f32	s5, s14
 8011068:	e789      	b.n	8010f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801106a:	140f      	asrs	r7, r1, #16
 801106c:	d418      	bmi.n	80110a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801106e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8011072:	42bd      	cmp	r5, r7
 8011074:	dd14      	ble.n	80110a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011076:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801107a:	d411      	bmi.n	80110a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801107c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8011080:	4564      	cmp	r4, ip
 8011082:	dd0d      	ble.n	80110a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011084:	b22d      	sxth	r5, r5
 8011086:	fb0c 7505 	mla	r5, ip, r5, r7
 801108a:	9c01      	ldr	r4, [sp, #4]
 801108c:	5d64      	ldrb	r4, [r4, r5]
 801108e:	2cff      	cmp	r4, #255	; 0xff
 8011090:	d10c      	bne.n	80110ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8011092:	9c00      	ldr	r4, [sp, #0]
 8011094:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8011098:	f06f 0401 	mvn.w	r4, #1
 801109c:	4374      	muls	r4, r6
 801109e:	5305      	strh	r5, [r0, r4]
 80110a0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80110a2:	4421      	add	r1, r4
 80110a4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80110a6:	3e01      	subs	r6, #1
 80110a8:	4422      	add	r2, r4
 80110aa:	e79c      	b.n	8010fe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80110ac:	2c00      	cmp	r4, #0
 80110ae:	d0f7      	beq.n	80110a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80110b0:	9f00      	ldr	r7, [sp, #0]
 80110b2:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80110b6:	f06f 0501 	mvn.w	r5, #1
 80110ba:	4375      	muls	r5, r6
 80110bc:	9502      	str	r5, [sp, #8]
 80110be:	5b45      	ldrh	r5, [r0, r5]
 80110c0:	fa1f fc84 	uxth.w	ip, r4
 80110c4:	122f      	asrs	r7, r5, #8
 80110c6:	43e4      	mvns	r4, r4
 80110c8:	b2e4      	uxtb	r4, r4
 80110ca:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80110ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80110d2:	fb17 f704 	smulbb	r7, r7, r4
 80110d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80110da:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80110de:	00ed      	lsls	r5, r5, #3
 80110e0:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80110e4:	b2ed      	uxtb	r5, r5
 80110e6:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80110ea:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80110ee:	fb15 f504 	smulbb	r5, r5, r4
 80110f2:	fa5f f989 	uxtb.w	r9, r9
 80110f6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80110fa:	fb09 550c 	mla	r5, r9, ip, r5
 80110fe:	fb1a fa04 	smulbb	sl, sl, r4
 8011102:	fa1f fe8e 	uxth.w	lr, lr
 8011106:	b2ad      	uxth	r5, r5
 8011108:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801110c:	fb07 a70c 	mla	r7, r7, ip, sl
 8011110:	f10e 0401 	add.w	r4, lr, #1
 8011114:	f105 0a01 	add.w	sl, r5, #1
 8011118:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801111c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011120:	b2bf      	uxth	r7, r7
 8011122:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011126:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801112a:	ea4a 0e0e 	orr.w	lr, sl, lr
 801112e:	f107 0a01 	add.w	sl, r7, #1
 8011132:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011136:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801113a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801113e:	9c02      	ldr	r4, [sp, #8]
 8011140:	ea4e 0e0a 	orr.w	lr, lr, sl
 8011144:	f820 e004 	strh.w	lr, [r0, r4]
 8011148:	e7aa      	b.n	80110a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801114a:	f04f 0900 	mov.w	r9, #0
 801114e:	eba3 0409 	sub.w	r4, r3, r9
 8011152:	2c00      	cmp	r4, #0
 8011154:	f77f af4a 	ble.w	8010fec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011158:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801115c:	1414      	asrs	r4, r2, #16
 801115e:	140d      	asrs	r5, r1, #16
 8011160:	fb06 5504 	mla	r5, r6, r4, r5
 8011164:	9c01      	ldr	r4, [sp, #4]
 8011166:	5d64      	ldrb	r4, [r4, r5]
 8011168:	2cff      	cmp	r4, #255	; 0xff
 801116a:	d10b      	bne.n	8011184 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801116c:	9c00      	ldr	r4, [sp, #0]
 801116e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8011172:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8011176:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011178:	4421      	add	r1, r4
 801117a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801117c:	f109 0901 	add.w	r9, r9, #1
 8011180:	4422      	add	r2, r4
 8011182:	e7e4      	b.n	801114e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8011184:	2c00      	cmp	r4, #0
 8011186:	d0f6      	beq.n	8011176 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8011188:	9e00      	ldr	r6, [sp, #0]
 801118a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801118e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8011192:	b2a7      	uxth	r7, r4
 8011194:	122e      	asrs	r6, r5, #8
 8011196:	43e4      	mvns	r4, r4
 8011198:	b2e4      	uxtb	r4, r4
 801119a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801119e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80111a2:	fb16 f604 	smulbb	r6, r6, r4
 80111a6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80111aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80111ae:	00ed      	lsls	r5, r5, #3
 80111b0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80111b4:	b2ed      	uxtb	r5, r5
 80111b6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80111ba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80111be:	fb15 f504 	smulbb	r5, r5, r4
 80111c2:	fa5f fe8e 	uxtb.w	lr, lr
 80111c6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80111ca:	fb0e 5507 	mla	r5, lr, r7, r5
 80111ce:	fb1a fa04 	smulbb	sl, sl, r4
 80111d2:	fa1f fc8c 	uxth.w	ip, ip
 80111d6:	b2ad      	uxth	r5, r5
 80111d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80111dc:	fb06 a607 	mla	r6, r6, r7, sl
 80111e0:	f10c 0401 	add.w	r4, ip, #1
 80111e4:	f105 0a01 	add.w	sl, r5, #1
 80111e8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80111ec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80111f0:	b2b6      	uxth	r6, r6
 80111f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80111f6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80111fa:	ea4a 0c0c 	orr.w	ip, sl, ip
 80111fe:	f106 0a01 	add.w	sl, r6, #1
 8011202:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011206:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801120a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801120e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011212:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8011216:	e7ae      	b.n	8011176 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8011218:	b005      	add	sp, #20
 801121a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801121e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801121e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011222:	b085      	sub	sp, #20
 8011224:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011226:	9203      	str	r2, [sp, #12]
 8011228:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801122c:	9201      	str	r2, [sp, #4]
 801122e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011232:	9100      	str	r1, [sp, #0]
 8011234:	6841      	ldr	r1, [r0, #4]
 8011236:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801123a:	fb01 2404 	mla	r4, r1, r4, r2
 801123e:	6802      	ldr	r2, [r0, #0]
 8011240:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011244:	f8de 2000 	ldr.w	r2, [lr]
 8011248:	9202      	str	r2, [sp, #8]
 801124a:	9a01      	ldr	r2, [sp, #4]
 801124c:	43d6      	mvns	r6, r2
 801124e:	b2f6      	uxtb	r6, r6
 8011250:	9a00      	ldr	r2, [sp, #0]
 8011252:	2a00      	cmp	r2, #0
 8011254:	dc03      	bgt.n	801125e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8011256:	9a03      	ldr	r2, [sp, #12]
 8011258:	2a00      	cmp	r2, #0
 801125a:	f340 8124 	ble.w	80114a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801125e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011260:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8011264:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8011268:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801126c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801126e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011272:	2b00      	cmp	r3, #0
 8011274:	dd0e      	ble.n	8011294 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011276:	1408      	asrs	r0, r1, #16
 8011278:	d405      	bmi.n	8011286 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801127a:	4560      	cmp	r0, ip
 801127c:	da03      	bge.n	8011286 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801127e:	1410      	asrs	r0, r2, #16
 8011280:	d401      	bmi.n	8011286 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011282:	42b8      	cmp	r0, r7
 8011284:	db07      	blt.n	8011296 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8011286:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011288:	4401      	add	r1, r0
 801128a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801128c:	3b01      	subs	r3, #1
 801128e:	4402      	add	r2, r0
 8011290:	3402      	adds	r4, #2
 8011292:	e7ee      	b.n	8011272 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8011294:	d06e      	beq.n	8011374 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8011296:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011298:	1e58      	subs	r0, r3, #1
 801129a:	fb05 1500 	mla	r5, r5, r0, r1
 801129e:	142d      	asrs	r5, r5, #16
 80112a0:	d45c      	bmi.n	801135c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80112a2:	4565      	cmp	r5, ip
 80112a4:	da5a      	bge.n	801135c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80112a6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80112a8:	fb05 2000 	mla	r0, r5, r0, r2
 80112ac:	1400      	asrs	r0, r0, #16
 80112ae:	d455      	bmi.n	801135c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80112b0:	42b8      	cmp	r0, r7
 80112b2:	da53      	bge.n	801135c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80112b4:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80112b8:	4699      	mov	r9, r3
 80112ba:	46a2      	mov	sl, r4
 80112bc:	f1b9 0f00 	cmp.w	r9, #0
 80112c0:	dd54      	ble.n	801136c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80112c2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80112c6:	140d      	asrs	r5, r1, #16
 80112c8:	1410      	asrs	r0, r2, #16
 80112ca:	fb07 5000 	mla	r0, r7, r0, r5
 80112ce:	9d02      	ldr	r5, [sp, #8]
 80112d0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80112d4:	f8ba 5000 	ldrh.w	r5, [sl]
 80112d8:	122f      	asrs	r7, r5, #8
 80112da:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80112de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80112e2:	fb17 f706 	smulbb	r7, r7, r6
 80112e6:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80112ea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80112ee:	00ed      	lsls	r5, r5, #3
 80112f0:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80112f4:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80112f8:	10c7      	asrs	r7, r0, #3
 80112fa:	b2ed      	uxtb	r5, r5
 80112fc:	00c0      	lsls	r0, r0, #3
 80112fe:	fb18 f806 	smulbb	r8, r8, r6
 8011302:	fb15 f506 	smulbb	r5, r5, r6
 8011306:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801130a:	b2c0      	uxtb	r0, r0
 801130c:	fa1f fc8c 	uxth.w	ip, ip
 8011310:	fb07 870b 	mla	r7, r7, fp, r8
 8011314:	fb00 500b 	mla	r0, r0, fp, r5
 8011318:	b280      	uxth	r0, r0
 801131a:	b2bf      	uxth	r7, r7
 801131c:	f10c 0501 	add.w	r5, ip, #1
 8011320:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011324:	f107 0801 	add.w	r8, r7, #1
 8011328:	1c45      	adds	r5, r0, #1
 801132a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801132e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8011332:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011334:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011338:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801133c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011340:	ea45 0c0c 	orr.w	ip, r5, ip
 8011344:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011348:	4401      	add	r1, r0
 801134a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801134c:	ea4c 0c08 	orr.w	ip, ip, r8
 8011350:	f82a cb02 	strh.w	ip, [sl], #2
 8011354:	4402      	add	r2, r0
 8011356:	f109 39ff 	add.w	r9, r9, #4294967295
 801135a:	e7af      	b.n	80112bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801135c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8011360:	f04f 0800 	mov.w	r8, #0
 8011364:	eb03 0008 	add.w	r0, r3, r8
 8011368:	2800      	cmp	r0, #0
 801136a:	dc41      	bgt.n	80113f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801136c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011370:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011374:	9b00      	ldr	r3, [sp, #0]
 8011376:	2b00      	cmp	r3, #0
 8011378:	f340 8095 	ble.w	80114a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801137c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011380:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011384:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011388:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801138a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801138e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011392:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011396:	eef0 6a62 	vmov.f32	s13, s5
 801139a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801139e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80113a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80113a6:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80113aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80113ae:	eef0 6a43 	vmov.f32	s13, s6
 80113b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80113b6:	ee12 2a90 	vmov	r2, s5
 80113ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80113be:	fb92 f3f3 	sdiv	r3, r2, r3
 80113c2:	ee13 2a10 	vmov	r2, s6
 80113c6:	9311      	str	r3, [sp, #68]	; 0x44
 80113c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80113ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80113ce:	9312      	str	r3, [sp, #72]	; 0x48
 80113d0:	9b00      	ldr	r3, [sp, #0]
 80113d2:	9a03      	ldr	r2, [sp, #12]
 80113d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80113d8:	3b01      	subs	r3, #1
 80113da:	9300      	str	r3, [sp, #0]
 80113dc:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80113e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80113e2:	eeb0 3a67 	vmov.f32	s6, s15
 80113e6:	bf08      	it	eq
 80113e8:	4613      	moveq	r3, r2
 80113ea:	eef0 2a47 	vmov.f32	s5, s14
 80113ee:	e72f      	b.n	8011250 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80113f0:	140f      	asrs	r7, r1, #16
 80113f2:	d451      	bmi.n	8011498 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80113f4:	f8de 5008 	ldr.w	r5, [lr, #8]
 80113f8:	42bd      	cmp	r5, r7
 80113fa:	dd4d      	ble.n	8011498 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80113fc:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011400:	d44a      	bmi.n	8011498 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011402:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011406:	4560      	cmp	r0, ip
 8011408:	dd46      	ble.n	8011498 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801140a:	b22d      	sxth	r5, r5
 801140c:	fb0c 7505 	mla	r5, ip, r5, r7
 8011410:	9802      	ldr	r0, [sp, #8]
 8011412:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8011416:	f06f 0501 	mvn.w	r5, #1
 801141a:	fb05 fb08 	mul.w	fp, r5, r8
 801141e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011422:	f834 500b 	ldrh.w	r5, [r4, fp]
 8011426:	122f      	asrs	r7, r5, #8
 8011428:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801142c:	fb17 f706 	smulbb	r7, r7, r6
 8011430:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8011434:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011438:	00ed      	lsls	r5, r5, #3
 801143a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801143e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011442:	10c7      	asrs	r7, r0, #3
 8011444:	b2ed      	uxtb	r5, r5
 8011446:	00c0      	lsls	r0, r0, #3
 8011448:	fb19 f906 	smulbb	r9, r9, r6
 801144c:	fb15 f506 	smulbb	r5, r5, r6
 8011450:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011454:	b2c0      	uxtb	r0, r0
 8011456:	fa1f fc8c 	uxth.w	ip, ip
 801145a:	fb07 970a 	mla	r7, r7, sl, r9
 801145e:	fb00 500a 	mla	r0, r0, sl, r5
 8011462:	b2bf      	uxth	r7, r7
 8011464:	b280      	uxth	r0, r0
 8011466:	f10c 0501 	add.w	r5, ip, #1
 801146a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801146e:	f107 0901 	add.w	r9, r7, #1
 8011472:	1c45      	adds	r5, r0, #1
 8011474:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011478:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801147c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011480:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011484:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011488:	ea45 0c0c 	orr.w	ip, r5, ip
 801148c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011490:	ea4c 0c09 	orr.w	ip, ip, r9
 8011494:	f824 c00b 	strh.w	ip, [r4, fp]
 8011498:	9811      	ldr	r0, [sp, #68]	; 0x44
 801149a:	4401      	add	r1, r0
 801149c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801149e:	f108 38ff 	add.w	r8, r8, #4294967295
 80114a2:	4402      	add	r2, r0
 80114a4:	e75e      	b.n	8011364 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80114a6:	b005      	add	sp, #20
 80114a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080114ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80114ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80114b0:	b085      	sub	sp, #20
 80114b2:	4693      	mov	fp, r2
 80114b4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80114b6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80114b8:	6870      	ldr	r0, [r6, #4]
 80114ba:	9101      	str	r1, [sp, #4]
 80114bc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80114c0:	fb00 2404 	mla	r4, r0, r4, r2
 80114c4:	6832      	ldr	r2, [r6, #0]
 80114c6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80114ca:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80114ce:	682a      	ldr	r2, [r5, #0]
 80114d0:	9202      	str	r2, [sp, #8]
 80114d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80114d6:	9a01      	ldr	r2, [sp, #4]
 80114d8:	2a00      	cmp	r2, #0
 80114da:	dc03      	bgt.n	80114e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80114dc:	f1bb 0f00 	cmp.w	fp, #0
 80114e0:	f340 809a 	ble.w	8011618 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80114e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80114e6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80114ea:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80114ee:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80114f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80114f4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80114f8:	2b00      	cmp	r3, #0
 80114fa:	dd0c      	ble.n	8011516 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80114fc:	1406      	asrs	r6, r0, #16
 80114fe:	d405      	bmi.n	801150c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011500:	454e      	cmp	r6, r9
 8011502:	da03      	bge.n	801150c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011504:	1416      	asrs	r6, r2, #16
 8011506:	d401      	bmi.n	801150c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011508:	4546      	cmp	r6, r8
 801150a:	db05      	blt.n	8011518 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801150c:	4470      	add	r0, lr
 801150e:	4462      	add	r2, ip
 8011510:	3b01      	subs	r3, #1
 8011512:	3402      	adds	r4, #2
 8011514:	e7f0      	b.n	80114f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011516:	d00f      	beq.n	8011538 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8011518:	1e5e      	subs	r6, r3, #1
 801151a:	fb0e 0706 	mla	r7, lr, r6, r0
 801151e:	143f      	asrs	r7, r7, #16
 8011520:	d541      	bpl.n	80115a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8011522:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8011526:	4698      	mov	r8, r3
 8011528:	9603      	str	r6, [sp, #12]
 801152a:	f1b8 0f00 	cmp.w	r8, #0
 801152e:	dc56      	bgt.n	80115de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8011530:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011534:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011538:	9b01      	ldr	r3, [sp, #4]
 801153a:	2b00      	cmp	r3, #0
 801153c:	dd6c      	ble.n	8011618 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801153e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011542:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011546:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801154a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801154c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011550:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011554:	eeb0 6a62 	vmov.f32	s12, s5
 8011558:	ee61 7a27 	vmul.f32	s15, s2, s15
 801155c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011560:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011564:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011568:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801156c:	eeb0 6a43 	vmov.f32	s12, s6
 8011570:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011574:	ee12 2a90 	vmov	r2, s5
 8011578:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801157c:	fb92 fef3 	sdiv	lr, r2, r3
 8011580:	ee13 2a10 	vmov	r2, s6
 8011584:	fb92 fcf3 	sdiv	ip, r2, r3
 8011588:	9b01      	ldr	r3, [sp, #4]
 801158a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801158e:	3b01      	subs	r3, #1
 8011590:	9301      	str	r3, [sp, #4]
 8011592:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011596:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011598:	eeb0 3a67 	vmov.f32	s6, s15
 801159c:	bf08      	it	eq
 801159e:	465b      	moveq	r3, fp
 80115a0:	eef0 2a47 	vmov.f32	s5, s14
 80115a4:	e797      	b.n	80114d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80115a6:	454f      	cmp	r7, r9
 80115a8:	dabb      	bge.n	8011522 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80115aa:	fb0c 2606 	mla	r6, ip, r6, r2
 80115ae:	1436      	asrs	r6, r6, #16
 80115b0:	d4b7      	bmi.n	8011522 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80115b2:	4546      	cmp	r6, r8
 80115b4:	dab5      	bge.n	8011522 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80115b6:	461e      	mov	r6, r3
 80115b8:	46a0      	mov	r8, r4
 80115ba:	2e00      	cmp	r6, #0
 80115bc:	ddb8      	ble.n	8011530 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80115be:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80115c2:	9902      	ldr	r1, [sp, #8]
 80115c4:	1417      	asrs	r7, r2, #16
 80115c6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80115ca:	fb0a 9707 	mla	r7, sl, r7, r9
 80115ce:	4470      	add	r0, lr
 80115d0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80115d4:	f828 7b02 	strh.w	r7, [r8], #2
 80115d8:	4462      	add	r2, ip
 80115da:	3e01      	subs	r6, #1
 80115dc:	e7ed      	b.n	80115ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80115de:	ea5f 4920 	movs.w	r9, r0, asr #16
 80115e2:	d414      	bmi.n	801160e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80115e4:	68ae      	ldr	r6, [r5, #8]
 80115e6:	454e      	cmp	r6, r9
 80115e8:	dd11      	ble.n	801160e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80115ea:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80115ee:	d40e      	bmi.n	801160e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80115f0:	68ef      	ldr	r7, [r5, #12]
 80115f2:	4557      	cmp	r7, sl
 80115f4:	dd0b      	ble.n	801160e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80115f6:	b236      	sxth	r6, r6
 80115f8:	fb0a 9606 	mla	r6, sl, r6, r9
 80115fc:	9f02      	ldr	r7, [sp, #8]
 80115fe:	f06f 0101 	mvn.w	r1, #1
 8011602:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8011606:	fb01 f608 	mul.w	r6, r1, r8
 801160a:	9903      	ldr	r1, [sp, #12]
 801160c:	538f      	strh	r7, [r1, r6]
 801160e:	4470      	add	r0, lr
 8011610:	4462      	add	r2, ip
 8011612:	f108 38ff 	add.w	r8, r8, #4294967295
 8011616:	e788      	b.n	801152a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011618:	b005      	add	sp, #20
 801161a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801161e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801161e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011622:	b087      	sub	sp, #28
 8011624:	468b      	mov	fp, r1
 8011626:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011628:	9203      	str	r2, [sp, #12]
 801162a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801162e:	9204      	str	r2, [sp, #16]
 8011630:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8011634:	6841      	ldr	r1, [r0, #4]
 8011636:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801163a:	fb01 2505 	mla	r5, r1, r5, r2
 801163e:	6802      	ldr	r2, [r0, #0]
 8011640:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8011644:	f8d9 2000 	ldr.w	r2, [r9]
 8011648:	9201      	str	r2, [sp, #4]
 801164a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801164e:	f1bb 0f00 	cmp.w	fp, #0
 8011652:	dc03      	bgt.n	801165c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011654:	9a03      	ldr	r2, [sp, #12]
 8011656:	2a00      	cmp	r2, #0
 8011658:	f340 8159 	ble.w	801190e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801165c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801165e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8011662:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8011666:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801166a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801166c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011670:	2b00      	cmp	r3, #0
 8011672:	dd0e      	ble.n	8011692 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8011674:	1402      	asrs	r2, r0, #16
 8011676:	d405      	bmi.n	8011684 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011678:	42ba      	cmp	r2, r7
 801167a:	da03      	bge.n	8011684 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801167c:	140a      	asrs	r2, r1, #16
 801167e:	d401      	bmi.n	8011684 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011680:	42b2      	cmp	r2, r6
 8011682:	db07      	blt.n	8011694 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011684:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011686:	4410      	add	r0, r2
 8011688:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801168a:	3b01      	subs	r3, #1
 801168c:	4411      	add	r1, r2
 801168e:	3502      	adds	r5, #2
 8011690:	e7ee      	b.n	8011670 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011692:	d017      	beq.n	80116c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011694:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011696:	1e5a      	subs	r2, r3, #1
 8011698:	fb04 0402 	mla	r4, r4, r2, r0
 801169c:	1424      	asrs	r4, r4, #16
 801169e:	d409      	bmi.n	80116b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80116a0:	42bc      	cmp	r4, r7
 80116a2:	da07      	bge.n	80116b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80116a4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80116a6:	fb04 1202 	mla	r2, r4, r2, r1
 80116aa:	1412      	asrs	r2, r2, #16
 80116ac:	d402      	bmi.n	80116b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80116ae:	42b2      	cmp	r2, r6
 80116b0:	f2c0 80bf 	blt.w	8011832 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80116b4:	2700      	movs	r7, #0
 80116b6:	19da      	adds	r2, r3, r7
 80116b8:	2a00      	cmp	r2, #0
 80116ba:	dc3e      	bgt.n	801173a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80116bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80116c0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80116c4:	f1bb 0f00 	cmp.w	fp, #0
 80116c8:	f340 8121 	ble.w	801190e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80116cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80116d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80116d4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80116d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80116da:	f1bb 0b01 	subs.w	fp, fp, #1
 80116de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80116e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80116e6:	eeb0 6a62 	vmov.f32	s12, s5
 80116ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80116ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80116f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80116f6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80116fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80116fe:	eeb0 6a43 	vmov.f32	s12, s6
 8011702:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011706:	ee12 2a90 	vmov	r2, s5
 801170a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801170e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011712:	ee13 2a10 	vmov	r2, s6
 8011716:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801171a:	9313      	str	r3, [sp, #76]	; 0x4c
 801171c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801171e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011722:	9a03      	ldr	r2, [sp, #12]
 8011724:	9314      	str	r3, [sp, #80]	; 0x50
 8011726:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801172a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801172c:	eeb0 3a67 	vmov.f32	s6, s15
 8011730:	bf08      	it	eq
 8011732:	4613      	moveq	r3, r2
 8011734:	eef0 2a47 	vmov.f32	s5, s14
 8011738:	e789      	b.n	801164e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801173a:	1406      	asrs	r6, r0, #16
 801173c:	d42d      	bmi.n	801179a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801173e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8011742:	42b4      	cmp	r4, r6
 8011744:	dd29      	ble.n	801179a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011746:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801174a:	d426      	bmi.n	801179a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801174c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011750:	4562      	cmp	r2, ip
 8011752:	dd22      	ble.n	801179a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011754:	b224      	sxth	r4, r4
 8011756:	9a01      	ldr	r2, [sp, #4]
 8011758:	fb0c 6404 	mla	r4, ip, r4, r6
 801175c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8011760:	0e22      	lsrs	r2, r4, #24
 8011762:	d01a      	beq.n	801179a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011764:	9e04      	ldr	r6, [sp, #16]
 8011766:	4372      	muls	r2, r6
 8011768:	1c56      	adds	r6, r2, #1
 801176a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801176e:	1212      	asrs	r2, r2, #8
 8011770:	0a26      	lsrs	r6, r4, #8
 8011772:	2aff      	cmp	r2, #255	; 0xff
 8011774:	9605      	str	r6, [sp, #20]
 8011776:	d116      	bne.n	80117a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8011778:	f06f 0201 	mvn.w	r2, #1
 801177c:	fb02 fc07 	mul.w	ip, r2, r7
 8011780:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011784:	0962      	lsrs	r2, r4, #5
 8011786:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801178a:	f026 0607 	bic.w	r6, r6, #7
 801178e:	4316      	orrs	r6, r2
 8011790:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011794:	4326      	orrs	r6, r4
 8011796:	f825 600c 	strh.w	r6, [r5, ip]
 801179a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801179c:	4410      	add	r0, r2
 801179e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80117a0:	3f01      	subs	r7, #1
 80117a2:	4411      	add	r1, r2
 80117a4:	e787      	b.n	80116b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80117a6:	f06f 0601 	mvn.w	r6, #1
 80117aa:	437e      	muls	r6, r7
 80117ac:	fa1f fa82 	uxth.w	sl, r2
 80117b0:	f835 8006 	ldrh.w	r8, [r5, r6]
 80117b4:	9602      	str	r6, [sp, #8]
 80117b6:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80117ba:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80117be:	43d2      	mvns	r2, r2
 80117c0:	b2d2      	uxtb	r2, r2
 80117c2:	fb1c fc0a 	smulbb	ip, ip, sl
 80117c6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80117ca:	fb0e ce02 	mla	lr, lr, r2, ip
 80117ce:	b2e4      	uxtb	r4, r4
 80117d0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80117d4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80117d8:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80117dc:	fa5f f888 	uxtb.w	r8, r8
 80117e0:	fb14 f40a 	smulbb	r4, r4, sl
 80117e4:	fb08 4402 	mla	r4, r8, r2, r4
 80117e8:	fa1f fe8e 	uxth.w	lr, lr
 80117ec:	fb16 f60a 	smulbb	r6, r6, sl
 80117f0:	b2a4      	uxth	r4, r4
 80117f2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80117f6:	fb0c 6c02 	mla	ip, ip, r2, r6
 80117fa:	f10e 0201 	add.w	r2, lr, #1
 80117fe:	1c66      	adds	r6, r4, #1
 8011800:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8011804:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011808:	fa1f fc8c 	uxth.w	ip, ip
 801180c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011810:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011814:	ea46 0e0e 	orr.w	lr, r6, lr
 8011818:	f10c 0601 	add.w	r6, ip, #1
 801181c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011820:	0976      	lsrs	r6, r6, #5
 8011822:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011826:	9a02      	ldr	r2, [sp, #8]
 8011828:	ea4e 0e06 	orr.w	lr, lr, r6
 801182c:	f825 e002 	strh.w	lr, [r5, r2]
 8011830:	e7b3      	b.n	801179a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011832:	f04f 0800 	mov.w	r8, #0
 8011836:	eba3 0208 	sub.w	r2, r3, r8
 801183a:	2a00      	cmp	r2, #0
 801183c:	f77f af3e 	ble.w	80116bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011840:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8011844:	1404      	asrs	r4, r0, #16
 8011846:	140a      	asrs	r2, r1, #16
 8011848:	fb06 4202 	mla	r2, r6, r2, r4
 801184c:	9c01      	ldr	r4, [sp, #4]
 801184e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8011852:	0e22      	lsrs	r2, r4, #24
 8011854:	d016      	beq.n	8011884 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8011856:	9e04      	ldr	r6, [sp, #16]
 8011858:	4372      	muls	r2, r6
 801185a:	1c56      	adds	r6, r2, #1
 801185c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011860:	1212      	asrs	r2, r2, #8
 8011862:	2aff      	cmp	r2, #255	; 0xff
 8011864:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8011868:	d113      	bne.n	8011892 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801186a:	0962      	lsrs	r2, r4, #5
 801186c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011870:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011874:	f026 0607 	bic.w	r6, r6, #7
 8011878:	4316      	orrs	r6, r2
 801187a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801187e:	4326      	orrs	r6, r4
 8011880:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8011884:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011886:	4410      	add	r0, r2
 8011888:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801188a:	f108 0801 	add.w	r8, r8, #1
 801188e:	4411      	add	r1, r2
 8011890:	e7d1      	b.n	8011836 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8011892:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8011896:	fa1f fa82 	uxth.w	sl, r2
 801189a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801189e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80118a2:	43d2      	mvns	r2, r2
 80118a4:	b2d2      	uxtb	r2, r2
 80118a6:	fb17 f70a 	smulbb	r7, r7, sl
 80118aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80118ae:	fb0c 7c02 	mla	ip, ip, r2, r7
 80118b2:	b2e4      	uxtb	r4, r4
 80118b4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80118b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80118bc:	fa5f fe8e 	uxtb.w	lr, lr
 80118c0:	fb14 f40a 	smulbb	r4, r4, sl
 80118c4:	fb0e 4402 	mla	r4, lr, r2, r4
 80118c8:	b2f6      	uxtb	r6, r6
 80118ca:	fa1f fc8c 	uxth.w	ip, ip
 80118ce:	fb16 f60a 	smulbb	r6, r6, sl
 80118d2:	b2a4      	uxth	r4, r4
 80118d4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80118d8:	fb07 6702 	mla	r7, r7, r2, r6
 80118dc:	f10c 0201 	add.w	r2, ip, #1
 80118e0:	1c66      	adds	r6, r4, #1
 80118e2:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80118e6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80118ea:	b2bf      	uxth	r7, r7
 80118ec:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80118f0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80118f4:	ea46 0c0c 	orr.w	ip, r6, ip
 80118f8:	1c7e      	adds	r6, r7, #1
 80118fa:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80118fe:	0976      	lsrs	r6, r6, #5
 8011900:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011904:	ea4c 0c06 	orr.w	ip, ip, r6
 8011908:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801190c:	e7ba      	b.n	8011884 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801190e:	b007      	add	sp, #28
 8011910:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011918:	b085      	sub	sp, #20
 801191a:	468b      	mov	fp, r1
 801191c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801191e:	9203      	str	r2, [sp, #12]
 8011920:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011924:	6841      	ldr	r1, [r0, #4]
 8011926:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801192a:	fb01 2404 	mla	r4, r1, r4, r2
 801192e:	6802      	ldr	r2, [r0, #0]
 8011930:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011934:	f8d8 2000 	ldr.w	r2, [r8]
 8011938:	9201      	str	r2, [sp, #4]
 801193a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801193e:	f1bb 0f00 	cmp.w	fp, #0
 8011942:	dc03      	bgt.n	801194c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011944:	9a03      	ldr	r2, [sp, #12]
 8011946:	2a00      	cmp	r2, #0
 8011948:	f340 814f 	ble.w	8011bea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801194c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801194e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011952:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011956:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801195a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801195c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011960:	2b00      	cmp	r3, #0
 8011962:	dd0e      	ble.n	8011982 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011964:	1408      	asrs	r0, r1, #16
 8011966:	d405      	bmi.n	8011974 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011968:	42b8      	cmp	r0, r7
 801196a:	da03      	bge.n	8011974 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801196c:	1410      	asrs	r0, r2, #16
 801196e:	d401      	bmi.n	8011974 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011970:	42b0      	cmp	r0, r6
 8011972:	db07      	blt.n	8011984 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011974:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011976:	4401      	add	r1, r0
 8011978:	9812      	ldr	r0, [sp, #72]	; 0x48
 801197a:	3b01      	subs	r3, #1
 801197c:	4402      	add	r2, r0
 801197e:	3402      	adds	r4, #2
 8011980:	e7ee      	b.n	8011960 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011982:	d017      	beq.n	80119b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011984:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011986:	1e58      	subs	r0, r3, #1
 8011988:	fb05 1500 	mla	r5, r5, r0, r1
 801198c:	142d      	asrs	r5, r5, #16
 801198e:	d409      	bmi.n	80119a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011990:	42bd      	cmp	r5, r7
 8011992:	da07      	bge.n	80119a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011994:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011996:	fb05 2000 	mla	r0, r5, r0, r2
 801199a:	1400      	asrs	r0, r0, #16
 801199c:	d402      	bmi.n	80119a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801199e:	42b0      	cmp	r0, r6
 80119a0:	f2c0 80ba 	blt.w	8011b18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80119a4:	2600      	movs	r6, #0
 80119a6:	1998      	adds	r0, r3, r6
 80119a8:	2800      	cmp	r0, #0
 80119aa:	dc3e      	bgt.n	8011a2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80119ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80119b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80119b4:	f1bb 0f00 	cmp.w	fp, #0
 80119b8:	f340 8117 	ble.w	8011bea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80119bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80119c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80119c4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80119c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80119ca:	f1bb 0b01 	subs.w	fp, fp, #1
 80119ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80119d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80119d6:	eeb0 6a62 	vmov.f32	s12, s5
 80119da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80119de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80119e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80119e6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80119ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80119ee:	eeb0 6a43 	vmov.f32	s12, s6
 80119f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80119f6:	ee12 2a90 	vmov	r2, s5
 80119fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80119fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a02:	ee13 2a10 	vmov	r2, s6
 8011a06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a0a:	9311      	str	r3, [sp, #68]	; 0x44
 8011a0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011a0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a12:	9a03      	ldr	r2, [sp, #12]
 8011a14:	9312      	str	r3, [sp, #72]	; 0x48
 8011a16:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011a1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011a1c:	eeb0 3a67 	vmov.f32	s6, s15
 8011a20:	bf08      	it	eq
 8011a22:	4613      	moveq	r3, r2
 8011a24:	eef0 2a47 	vmov.f32	s5, s14
 8011a28:	e789      	b.n	801193e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011a2a:	140f      	asrs	r7, r1, #16
 8011a2c:	d424      	bmi.n	8011a78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011a2e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8011a32:	42bd      	cmp	r5, r7
 8011a34:	dd20      	ble.n	8011a78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011a36:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011a3a:	d41d      	bmi.n	8011a78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011a3c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8011a40:	4560      	cmp	r0, ip
 8011a42:	dd19      	ble.n	8011a78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011a44:	b22d      	sxth	r5, r5
 8011a46:	fb0c 7505 	mla	r5, ip, r5, r7
 8011a4a:	9801      	ldr	r0, [sp, #4]
 8011a4c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8011a50:	0e07      	lsrs	r7, r0, #24
 8011a52:	2fff      	cmp	r7, #255	; 0xff
 8011a54:	d116      	bne.n	8011a84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011a56:	f06f 0501 	mvn.w	r5, #1
 8011a5a:	fb05 f706 	mul.w	r7, r5, r6
 8011a5e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8011a62:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8011a66:	0945      	lsrs	r5, r0, #5
 8011a68:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011a6c:	ea4c 0505 	orr.w	r5, ip, r5
 8011a70:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011a74:	4305      	orrs	r5, r0
 8011a76:	53e5      	strh	r5, [r4, r7]
 8011a78:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011a7a:	4401      	add	r1, r0
 8011a7c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011a7e:	3e01      	subs	r6, #1
 8011a80:	4402      	add	r2, r0
 8011a82:	e790      	b.n	80119a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011a84:	b2fd      	uxtb	r5, r7
 8011a86:	2f00      	cmp	r7, #0
 8011a88:	d0f6      	beq.n	8011a78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011a8a:	f06f 0701 	mvn.w	r7, #1
 8011a8e:	4377      	muls	r7, r6
 8011a90:	fa1f f985 	uxth.w	r9, r5
 8011a94:	f834 e007 	ldrh.w	lr, [r4, r7]
 8011a98:	9702      	str	r7, [sp, #8]
 8011a9a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011a9e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011aa2:	43ed      	mvns	r5, r5
 8011aa4:	b2ed      	uxtb	r5, r5
 8011aa6:	fb17 f709 	smulbb	r7, r7, r9
 8011aaa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011aae:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011ab2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011ab6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011aba:	b2c0      	uxtb	r0, r0
 8011abc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011ac0:	fa5f fe8e 	uxtb.w	lr, lr
 8011ac4:	fb10 f009 	smulbb	r0, r0, r9
 8011ac8:	fb0e 0005 	mla	r0, lr, r5, r0
 8011acc:	b280      	uxth	r0, r0
 8011ace:	fa1f fc8c 	uxth.w	ip, ip
 8011ad2:	fb1a fa09 	smulbb	sl, sl, r9
 8011ad6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011ada:	fb07 a705 	mla	r7, r7, r5, sl
 8011ade:	f100 0a01 	add.w	sl, r0, #1
 8011ae2:	f10c 0501 	add.w	r5, ip, #1
 8011ae6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011aea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011aee:	b2bf      	uxth	r7, r7
 8011af0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011af4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011af8:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011afc:	f107 0a01 	add.w	sl, r7, #1
 8011b00:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011b04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011b08:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011b0c:	9802      	ldr	r0, [sp, #8]
 8011b0e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011b12:	f824 c000 	strh.w	ip, [r4, r0]
 8011b16:	e7af      	b.n	8011a78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011b18:	f04f 0e00 	mov.w	lr, #0
 8011b1c:	eba3 000e 	sub.w	r0, r3, lr
 8011b20:	2800      	cmp	r0, #0
 8011b22:	f77f af43 	ble.w	80119ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011b26:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8011b2a:	140d      	asrs	r5, r1, #16
 8011b2c:	1410      	asrs	r0, r2, #16
 8011b2e:	fb06 5000 	mla	r0, r6, r0, r5
 8011b32:	9d01      	ldr	r5, [sp, #4]
 8011b34:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8011b38:	0e2e      	lsrs	r6, r5, #24
 8011b3a:	2eff      	cmp	r6, #255	; 0xff
 8011b3c:	d112      	bne.n	8011b64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8011b3e:	482c      	ldr	r0, [pc, #176]	; (8011bf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011b40:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8011b44:	0968      	lsrs	r0, r5, #5
 8011b46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8011b4a:	4330      	orrs	r0, r6
 8011b4c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011b50:	4328      	orrs	r0, r5
 8011b52:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8011b56:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011b58:	4401      	add	r1, r0
 8011b5a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011b5c:	f10e 0e01 	add.w	lr, lr, #1
 8011b60:	4402      	add	r2, r0
 8011b62:	e7db      	b.n	8011b1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8011b64:	b2f0      	uxtb	r0, r6
 8011b66:	2e00      	cmp	r6, #0
 8011b68:	d0f5      	beq.n	8011b56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8011b6a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011b6e:	fa1f f980 	uxth.w	r9, r0
 8011b72:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011b76:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011b7a:	43c0      	mvns	r0, r0
 8011b7c:	b2c0      	uxtb	r0, r0
 8011b7e:	fb16 f609 	smulbb	r6, r6, r9
 8011b82:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011b86:	fb07 6700 	mla	r7, r7, r0, r6
 8011b8a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011b8e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011b92:	b2ed      	uxtb	r5, r5
 8011b94:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011b98:	fa5f fc8c 	uxtb.w	ip, ip
 8011b9c:	fb15 f509 	smulbb	r5, r5, r9
 8011ba0:	fb0c 5500 	mla	r5, ip, r0, r5
 8011ba4:	b2bf      	uxth	r7, r7
 8011ba6:	fb1a fa09 	smulbb	sl, sl, r9
 8011baa:	b2ad      	uxth	r5, r5
 8011bac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011bb0:	fb06 a600 	mla	r6, r6, r0, sl
 8011bb4:	1c78      	adds	r0, r7, #1
 8011bb6:	f105 0a01 	add.w	sl, r5, #1
 8011bba:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8011bbe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011bc2:	b2b6      	uxth	r6, r6
 8011bc4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011bc8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011bcc:	ea4a 0707 	orr.w	r7, sl, r7
 8011bd0:	f106 0a01 	add.w	sl, r6, #1
 8011bd4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011bd8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011bdc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011be0:	ea47 070a 	orr.w	r7, r7, sl
 8011be4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8011be8:	e7b5      	b.n	8011b56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8011bea:	b005      	add	sp, #20
 8011bec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011bf0:	fffff800 	.word	0xfffff800

08011bf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011bf8:	b087      	sub	sp, #28
 8011bfa:	468b      	mov	fp, r1
 8011bfc:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011bfe:	9203      	str	r2, [sp, #12]
 8011c00:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011c04:	9204      	str	r2, [sp, #16]
 8011c06:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011c0a:	6841      	ldr	r1, [r0, #4]
 8011c0c:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8011c10:	fb01 2404 	mla	r4, r1, r4, r2
 8011c14:	6802      	ldr	r2, [r0, #0]
 8011c16:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011c1a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8011c1e:	3201      	adds	r2, #1
 8011c20:	f022 0201 	bic.w	r2, r2, #1
 8011c24:	9200      	str	r2, [sp, #0]
 8011c26:	f8d9 2000 	ldr.w	r2, [r9]
 8011c2a:	9201      	str	r2, [sp, #4]
 8011c2c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011c30:	f1bb 0f00 	cmp.w	fp, #0
 8011c34:	dc03      	bgt.n	8011c3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8011c36:	9a03      	ldr	r2, [sp, #12]
 8011c38:	2a00      	cmp	r2, #0
 8011c3a:	f340 8169 	ble.w	8011f10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8011c3e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011c40:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8011c44:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8011c48:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011c4c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011c4e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011c52:	2b00      	cmp	r3, #0
 8011c54:	dd0e      	ble.n	8011c74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011c56:	1402      	asrs	r2, r0, #16
 8011c58:	d405      	bmi.n	8011c66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011c5a:	42ba      	cmp	r2, r7
 8011c5c:	da03      	bge.n	8011c66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011c5e:	140a      	asrs	r2, r1, #16
 8011c60:	d401      	bmi.n	8011c66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011c62:	42b2      	cmp	r2, r6
 8011c64:	db07      	blt.n	8011c76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8011c66:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011c68:	4410      	add	r0, r2
 8011c6a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011c6c:	3b01      	subs	r3, #1
 8011c6e:	4411      	add	r1, r2
 8011c70:	3402      	adds	r4, #2
 8011c72:	e7ee      	b.n	8011c52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8011c74:	d017      	beq.n	8011ca6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8011c76:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011c78:	1e5a      	subs	r2, r3, #1
 8011c7a:	fb05 0502 	mla	r5, r5, r2, r0
 8011c7e:	142d      	asrs	r5, r5, #16
 8011c80:	d409      	bmi.n	8011c96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011c82:	42bd      	cmp	r5, r7
 8011c84:	da07      	bge.n	8011c96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011c86:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011c88:	fb05 1202 	mla	r2, r5, r2, r1
 8011c8c:	1412      	asrs	r2, r2, #16
 8011c8e:	d402      	bmi.n	8011c96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011c90:	42b2      	cmp	r2, r6
 8011c92:	f2c0 80c7 	blt.w	8011e24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8011c96:	2700      	movs	r7, #0
 8011c98:	19da      	adds	r2, r3, r7
 8011c9a:	2a00      	cmp	r2, #0
 8011c9c:	dc3e      	bgt.n	8011d1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011c9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011ca2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011ca6:	f1bb 0f00 	cmp.w	fp, #0
 8011caa:	f340 8131 	ble.w	8011f10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8011cae:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011cb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011cb6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011cba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011cbc:	f1bb 0b01 	subs.w	fp, fp, #1
 8011cc0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011cc4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011cc8:	eeb0 6a62 	vmov.f32	s12, s5
 8011ccc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011cd0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011cd4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011cd8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011cdc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011ce0:	eeb0 6a43 	vmov.f32	s12, s6
 8011ce4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011ce8:	ee12 2a90 	vmov	r2, s5
 8011cec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011cf0:	fb92 f3f3 	sdiv	r3, r2, r3
 8011cf4:	ee13 2a10 	vmov	r2, s6
 8011cf8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011cfc:	9313      	str	r3, [sp, #76]	; 0x4c
 8011cfe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d00:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d04:	9a03      	ldr	r2, [sp, #12]
 8011d06:	9314      	str	r3, [sp, #80]	; 0x50
 8011d08:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011d0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d0e:	eeb0 3a67 	vmov.f32	s6, s15
 8011d12:	bf08      	it	eq
 8011d14:	4613      	moveq	r3, r2
 8011d16:	eef0 2a47 	vmov.f32	s5, s14
 8011d1a:	e789      	b.n	8011c30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011d1c:	1405      	asrs	r5, r0, #16
 8011d1e:	d435      	bmi.n	8011d8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011d20:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8011d24:	42aa      	cmp	r2, r5
 8011d26:	dd31      	ble.n	8011d8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011d28:	140e      	asrs	r6, r1, #16
 8011d2a:	d42f      	bmi.n	8011d8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011d2c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011d30:	42b2      	cmp	r2, r6
 8011d32:	dd2b      	ble.n	8011d8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011d34:	9a00      	ldr	r2, [sp, #0]
 8011d36:	fb06 5502 	mla	r5, r6, r2, r5
 8011d3a:	086a      	lsrs	r2, r5, #1
 8011d3c:	9e01      	ldr	r6, [sp, #4]
 8011d3e:	5cb2      	ldrb	r2, [r6, r2]
 8011d40:	07ee      	lsls	r6, r5, #31
 8011d42:	bf54      	ite	pl
 8011d44:	f002 020f 	andpl.w	r2, r2, #15
 8011d48:	1112      	asrmi	r2, r2, #4
 8011d4a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011d4e:	b2d2      	uxtb	r2, r2
 8011d50:	b1e2      	cbz	r2, 8011d8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011d52:	9d04      	ldr	r5, [sp, #16]
 8011d54:	436a      	muls	r2, r5
 8011d56:	1c55      	adds	r5, r2, #1
 8011d58:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011d5c:	4d6e      	ldr	r5, [pc, #440]	; (8011f18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8011d5e:	682d      	ldr	r5, [r5, #0]
 8011d60:	1212      	asrs	r2, r2, #8
 8011d62:	0a2e      	lsrs	r6, r5, #8
 8011d64:	2aff      	cmp	r2, #255	; 0xff
 8011d66:	9605      	str	r6, [sp, #20]
 8011d68:	d116      	bne.n	8011d98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8011d6a:	f06f 0201 	mvn.w	r2, #1
 8011d6e:	fb02 fc07 	mul.w	ip, r2, r7
 8011d72:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011d76:	096a      	lsrs	r2, r5, #5
 8011d78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011d7c:	f026 0607 	bic.w	r6, r6, #7
 8011d80:	4316      	orrs	r6, r2
 8011d82:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011d86:	432e      	orrs	r6, r5
 8011d88:	f824 600c 	strh.w	r6, [r4, ip]
 8011d8c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011d8e:	4410      	add	r0, r2
 8011d90:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011d92:	3f01      	subs	r7, #1
 8011d94:	4411      	add	r1, r2
 8011d96:	e77f      	b.n	8011c98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8011d98:	f06f 0601 	mvn.w	r6, #1
 8011d9c:	437e      	muls	r6, r7
 8011d9e:	fa1f fa82 	uxth.w	sl, r2
 8011da2:	f834 8006 	ldrh.w	r8, [r4, r6]
 8011da6:	9602      	str	r6, [sp, #8]
 8011da8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011dac:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8011db0:	43d2      	mvns	r2, r2
 8011db2:	b2d2      	uxtb	r2, r2
 8011db4:	fb1c fc0a 	smulbb	ip, ip, sl
 8011db8:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011dbc:	fb0e ce02 	mla	lr, lr, r2, ip
 8011dc0:	b2ed      	uxtb	r5, r5
 8011dc2:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8011dc6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011dca:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8011dce:	fa5f f888 	uxtb.w	r8, r8
 8011dd2:	fb15 f50a 	smulbb	r5, r5, sl
 8011dd6:	fb08 5502 	mla	r5, r8, r2, r5
 8011dda:	fa1f fe8e 	uxth.w	lr, lr
 8011dde:	fb16 f60a 	smulbb	r6, r6, sl
 8011de2:	b2ad      	uxth	r5, r5
 8011de4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011de8:	fb0c 6c02 	mla	ip, ip, r2, r6
 8011dec:	f10e 0201 	add.w	r2, lr, #1
 8011df0:	1c6e      	adds	r6, r5, #1
 8011df2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8011df6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8011dfa:	fa1f fc8c 	uxth.w	ip, ip
 8011dfe:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011e02:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011e06:	ea46 0e0e 	orr.w	lr, r6, lr
 8011e0a:	f10c 0601 	add.w	r6, ip, #1
 8011e0e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011e12:	0976      	lsrs	r6, r6, #5
 8011e14:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011e18:	9a02      	ldr	r2, [sp, #8]
 8011e1a:	ea4e 0e06 	orr.w	lr, lr, r6
 8011e1e:	f824 e002 	strh.w	lr, [r4, r2]
 8011e22:	e7b3      	b.n	8011d8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011e24:	f04f 0800 	mov.w	r8, #0
 8011e28:	eba3 0208 	sub.w	r2, r3, r8
 8011e2c:	2a00      	cmp	r2, #0
 8011e2e:	f77f af36 	ble.w	8011c9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011e32:	9e00      	ldr	r6, [sp, #0]
 8011e34:	1402      	asrs	r2, r0, #16
 8011e36:	140d      	asrs	r5, r1, #16
 8011e38:	fb06 2505 	mla	r5, r6, r5, r2
 8011e3c:	086a      	lsrs	r2, r5, #1
 8011e3e:	9e01      	ldr	r6, [sp, #4]
 8011e40:	5cb2      	ldrb	r2, [r6, r2]
 8011e42:	07ed      	lsls	r5, r5, #31
 8011e44:	bf54      	ite	pl
 8011e46:	f002 020f 	andpl.w	r2, r2, #15
 8011e4a:	1112      	asrmi	r2, r2, #4
 8011e4c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011e50:	b2d2      	uxtb	r2, r2
 8011e52:	b1c2      	cbz	r2, 8011e86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8011e54:	9d04      	ldr	r5, [sp, #16]
 8011e56:	436a      	muls	r2, r5
 8011e58:	1c55      	adds	r5, r2, #1
 8011e5a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011e5e:	4d2e      	ldr	r5, [pc, #184]	; (8011f18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8011e60:	1212      	asrs	r2, r2, #8
 8011e62:	682e      	ldr	r6, [r5, #0]
 8011e64:	2aff      	cmp	r2, #255	; 0xff
 8011e66:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8011e6a:	d113      	bne.n	8011e94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8011e6c:	0972      	lsrs	r2, r6, #5
 8011e6e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8011e72:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011e76:	f025 0507 	bic.w	r5, r5, #7
 8011e7a:	4315      	orrs	r5, r2
 8011e7c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8011e80:	4335      	orrs	r5, r6
 8011e82:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8011e86:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011e88:	4410      	add	r0, r2
 8011e8a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011e8c:	f108 0801 	add.w	r8, r8, #1
 8011e90:	4411      	add	r1, r2
 8011e92:	e7c9      	b.n	8011e28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8011e94:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8011e98:	fa1f fa82 	uxth.w	sl, r2
 8011e9c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011ea0:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8011ea4:	43d2      	mvns	r2, r2
 8011ea6:	b2d2      	uxtb	r2, r2
 8011ea8:	fb17 f70a 	smulbb	r7, r7, sl
 8011eac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011eb0:	fb0c 7c02 	mla	ip, ip, r2, r7
 8011eb4:	b2f6      	uxtb	r6, r6
 8011eb6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011eba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011ebe:	fa5f fe8e 	uxtb.w	lr, lr
 8011ec2:	fb16 f60a 	smulbb	r6, r6, sl
 8011ec6:	fb0e 6602 	mla	r6, lr, r2, r6
 8011eca:	b2ed      	uxtb	r5, r5
 8011ecc:	fa1f fc8c 	uxth.w	ip, ip
 8011ed0:	fb15 f50a 	smulbb	r5, r5, sl
 8011ed4:	b2b6      	uxth	r6, r6
 8011ed6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011eda:	fb07 5702 	mla	r7, r7, r2, r5
 8011ede:	f10c 0201 	add.w	r2, ip, #1
 8011ee2:	1c75      	adds	r5, r6, #1
 8011ee4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011ee8:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8011eec:	b2bf      	uxth	r7, r7
 8011eee:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011ef2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011ef6:	ea45 0c0c 	orr.w	ip, r5, ip
 8011efa:	1c7d      	adds	r5, r7, #1
 8011efc:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8011f00:	096d      	lsrs	r5, r5, #5
 8011f02:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011f06:	ea4c 0c05 	orr.w	ip, ip, r5
 8011f0a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8011f0e:	e7ba      	b.n	8011e86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8011f10:	b007      	add	sp, #28
 8011f12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f16:	bf00      	nop
 8011f18:	20013510 	.word	0x20013510

08011f1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011f1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f20:	b087      	sub	sp, #28
 8011f22:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8012230 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8011f26:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011f28:	9205      	str	r2, [sp, #20]
 8011f2a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011f2e:	9101      	str	r1, [sp, #4]
 8011f30:	6841      	ldr	r1, [r0, #4]
 8011f32:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8011f36:	fb01 2404 	mla	r4, r1, r4, r2
 8011f3a:	6802      	ldr	r2, [r0, #0]
 8011f3c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011f40:	f8db 2008 	ldr.w	r2, [fp, #8]
 8011f44:	3201      	adds	r2, #1
 8011f46:	f022 0201 	bic.w	r2, r2, #1
 8011f4a:	9202      	str	r2, [sp, #8]
 8011f4c:	f8db 2000 	ldr.w	r2, [fp]
 8011f50:	9203      	str	r2, [sp, #12]
 8011f52:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011f56:	9a01      	ldr	r2, [sp, #4]
 8011f58:	2a00      	cmp	r2, #0
 8011f5a:	dc03      	bgt.n	8011f64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8011f5c:	9a05      	ldr	r2, [sp, #20]
 8011f5e:	2a00      	cmp	r2, #0
 8011f60:	f340 8162 	ble.w	8012228 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8011f64:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011f66:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8011f6a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8011f6e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011f72:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011f74:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011f78:	2b00      	cmp	r3, #0
 8011f7a:	dd0e      	ble.n	8011f9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011f7c:	1402      	asrs	r2, r0, #16
 8011f7e:	d405      	bmi.n	8011f8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011f80:	42ba      	cmp	r2, r7
 8011f82:	da03      	bge.n	8011f8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011f84:	140a      	asrs	r2, r1, #16
 8011f86:	d401      	bmi.n	8011f8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011f88:	42b2      	cmp	r2, r6
 8011f8a:	db07      	blt.n	8011f9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011f8c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f8e:	4410      	add	r0, r2
 8011f90:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f92:	3b01      	subs	r3, #1
 8011f94:	4411      	add	r1, r2
 8011f96:	3402      	adds	r4, #2
 8011f98:	e7ee      	b.n	8011f78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8011f9a:	d017      	beq.n	8011fcc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8011f9c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011f9e:	1e5a      	subs	r2, r3, #1
 8011fa0:	fb05 0502 	mla	r5, r5, r2, r0
 8011fa4:	142d      	asrs	r5, r5, #16
 8011fa6:	d409      	bmi.n	8011fbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011fa8:	42bd      	cmp	r5, r7
 8011faa:	da07      	bge.n	8011fbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011fac:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011fae:	fb05 1202 	mla	r2, r5, r2, r1
 8011fb2:	1412      	asrs	r2, r2, #16
 8011fb4:	d402      	bmi.n	8011fbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011fb6:	42b2      	cmp	r2, r6
 8011fb8:	f2c0 80c3 	blt.w	8012142 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8011fbc:	2500      	movs	r5, #0
 8011fbe:	195a      	adds	r2, r3, r5
 8011fc0:	2a00      	cmp	r2, #0
 8011fc2:	dc3f      	bgt.n	8012044 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011fc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011fc8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011fcc:	9b01      	ldr	r3, [sp, #4]
 8011fce:	2b00      	cmp	r3, #0
 8011fd0:	f340 812a 	ble.w	8012228 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8011fd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011fd8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011fdc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011fe0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011fe2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011fe6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011fea:	eeb0 6a62 	vmov.f32	s12, s5
 8011fee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011ff2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011ff6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011ffa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011ffe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012002:	eeb0 6a43 	vmov.f32	s12, s6
 8012006:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801200a:	ee12 2a90 	vmov	r2, s5
 801200e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012012:	fb92 f3f3 	sdiv	r3, r2, r3
 8012016:	ee13 2a10 	vmov	r2, s6
 801201a:	9313      	str	r3, [sp, #76]	; 0x4c
 801201c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801201e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012022:	9314      	str	r3, [sp, #80]	; 0x50
 8012024:	9b01      	ldr	r3, [sp, #4]
 8012026:	9a05      	ldr	r2, [sp, #20]
 8012028:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801202c:	3b01      	subs	r3, #1
 801202e:	9301      	str	r3, [sp, #4]
 8012030:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012034:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012036:	eeb0 3a67 	vmov.f32	s6, s15
 801203a:	bf08      	it	eq
 801203c:	4613      	moveq	r3, r2
 801203e:	eef0 2a47 	vmov.f32	s5, s14
 8012042:	e788      	b.n	8011f56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8012044:	1406      	asrs	r6, r0, #16
 8012046:	d42c      	bmi.n	80120a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012048:	f8db 2008 	ldr.w	r2, [fp, #8]
 801204c:	42b2      	cmp	r2, r6
 801204e:	dd28      	ble.n	80120a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012050:	140f      	asrs	r7, r1, #16
 8012052:	d426      	bmi.n	80120a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012054:	f8db 200c 	ldr.w	r2, [fp, #12]
 8012058:	42ba      	cmp	r2, r7
 801205a:	dd22      	ble.n	80120a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801205c:	9a02      	ldr	r2, [sp, #8]
 801205e:	fb07 6602 	mla	r6, r7, r2, r6
 8012062:	0872      	lsrs	r2, r6, #1
 8012064:	9f03      	ldr	r7, [sp, #12]
 8012066:	5cba      	ldrb	r2, [r7, r2]
 8012068:	07f6      	lsls	r6, r6, #31
 801206a:	bf54      	ite	pl
 801206c:	f002 020f 	andpl.w	r2, r2, #15
 8012070:	1112      	asrmi	r2, r2, #4
 8012072:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012076:	b2d2      	uxtb	r2, r2
 8012078:	2aff      	cmp	r2, #255	; 0xff
 801207a:	d118      	bne.n	80120ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801207c:	f8d8 2000 	ldr.w	r2, [r8]
 8012080:	f06f 0601 	mvn.w	r6, #1
 8012084:	fb06 f705 	mul.w	r7, r6, r5
 8012088:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801208c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8012090:	0956      	lsrs	r6, r2, #5
 8012092:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012096:	ea4c 0606 	orr.w	r6, ip, r6
 801209a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801209e:	4316      	orrs	r6, r2
 80120a0:	53e6      	strh	r6, [r4, r7]
 80120a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80120a4:	4410      	add	r0, r2
 80120a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80120a8:	3d01      	subs	r5, #1
 80120aa:	4411      	add	r1, r2
 80120ac:	e787      	b.n	8011fbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80120ae:	2a00      	cmp	r2, #0
 80120b0:	d0f7      	beq.n	80120a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80120b2:	f06f 0601 	mvn.w	r6, #1
 80120b6:	436e      	muls	r6, r5
 80120b8:	f8d8 c000 	ldr.w	ip, [r8]
 80120bc:	f834 e006 	ldrh.w	lr, [r4, r6]
 80120c0:	9604      	str	r6, [sp, #16]
 80120c2:	fa1f f982 	uxth.w	r9, r2
 80120c6:	ea4f 272e 	mov.w	r7, lr, asr #8
 80120ca:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80120ce:	43d2      	mvns	r2, r2
 80120d0:	b2d2      	uxtb	r2, r2
 80120d2:	fb16 f609 	smulbb	r6, r6, r9
 80120d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80120da:	fb07 6702 	mla	r7, r7, r2, r6
 80120de:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80120e2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80120e6:	fa5f fc8c 	uxtb.w	ip, ip
 80120ea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80120ee:	fa5f fe8e 	uxtb.w	lr, lr
 80120f2:	fb1c fc09 	smulbb	ip, ip, r9
 80120f6:	fb0e cc02 	mla	ip, lr, r2, ip
 80120fa:	b2bf      	uxth	r7, r7
 80120fc:	fb1a fa09 	smulbb	sl, sl, r9
 8012100:	fa1f fc8c 	uxth.w	ip, ip
 8012104:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012108:	fb06 a602 	mla	r6, r6, r2, sl
 801210c:	1c7a      	adds	r2, r7, #1
 801210e:	f10c 0a01 	add.w	sl, ip, #1
 8012112:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012116:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801211a:	b2b6      	uxth	r6, r6
 801211c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012120:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012124:	ea4a 0707 	orr.w	r7, sl, r7
 8012128:	f106 0a01 	add.w	sl, r6, #1
 801212c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012130:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012134:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012138:	9a04      	ldr	r2, [sp, #16]
 801213a:	ea47 070a 	orr.w	r7, r7, sl
 801213e:	52a7      	strh	r7, [r4, r2]
 8012140:	e7af      	b.n	80120a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012142:	f04f 0e00 	mov.w	lr, #0
 8012146:	eba3 020e 	sub.w	r2, r3, lr
 801214a:	2a00      	cmp	r2, #0
 801214c:	f77f af3a 	ble.w	8011fc4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8012150:	9e02      	ldr	r6, [sp, #8]
 8012152:	1402      	asrs	r2, r0, #16
 8012154:	140d      	asrs	r5, r1, #16
 8012156:	fb06 2505 	mla	r5, r6, r5, r2
 801215a:	086a      	lsrs	r2, r5, #1
 801215c:	9e03      	ldr	r6, [sp, #12]
 801215e:	5cb2      	ldrb	r2, [r6, r2]
 8012160:	07ed      	lsls	r5, r5, #31
 8012162:	bf54      	ite	pl
 8012164:	f002 020f 	andpl.w	r2, r2, #15
 8012168:	1112      	asrmi	r2, r2, #4
 801216a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801216e:	b2d2      	uxtb	r2, r2
 8012170:	2aff      	cmp	r2, #255	; 0xff
 8012172:	d115      	bne.n	80121a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8012174:	f8d8 5000 	ldr.w	r5, [r8]
 8012178:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801217c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8012180:	096a      	lsrs	r2, r5, #5
 8012182:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012186:	4332      	orrs	r2, r6
 8012188:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801218c:	432a      	orrs	r2, r5
 801218e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8012192:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012194:	4410      	add	r0, r2
 8012196:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012198:	f10e 0e01 	add.w	lr, lr, #1
 801219c:	4411      	add	r1, r2
 801219e:	e7d2      	b.n	8012146 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80121a0:	2a00      	cmp	r2, #0
 80121a2:	d0f6      	beq.n	8012192 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80121a4:	f8d8 7000 	ldr.w	r7, [r8]
 80121a8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80121ac:	fa1f f982 	uxth.w	r9, r2
 80121b0:	ea4f 262c 	mov.w	r6, ip, asr #8
 80121b4:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80121b8:	43d2      	mvns	r2, r2
 80121ba:	b2d2      	uxtb	r2, r2
 80121bc:	fb15 f509 	smulbb	r5, r5, r9
 80121c0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80121c4:	fb06 5602 	mla	r6, r6, r2, r5
 80121c8:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80121cc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80121d0:	b2ff      	uxtb	r7, r7
 80121d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80121d6:	fa5f fc8c 	uxtb.w	ip, ip
 80121da:	fb17 f709 	smulbb	r7, r7, r9
 80121de:	fb0c 7702 	mla	r7, ip, r2, r7
 80121e2:	b2b6      	uxth	r6, r6
 80121e4:	fb1a fa09 	smulbb	sl, sl, r9
 80121e8:	b2bf      	uxth	r7, r7
 80121ea:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80121ee:	fb05 a502 	mla	r5, r5, r2, sl
 80121f2:	1c72      	adds	r2, r6, #1
 80121f4:	f107 0a01 	add.w	sl, r7, #1
 80121f8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80121fc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012200:	b2ad      	uxth	r5, r5
 8012202:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012206:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801220a:	ea4a 0606 	orr.w	r6, sl, r6
 801220e:	f105 0a01 	add.w	sl, r5, #1
 8012212:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012216:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801221a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801221e:	ea46 060a 	orr.w	r6, r6, sl
 8012222:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8012226:	e7b4      	b.n	8012192 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8012228:	b007      	add	sp, #28
 801222a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801222e:	bf00      	nop
 8012230:	20013510 	.word	0x20013510

08012234 <_ZN8touchgfx8LCD16bppD1Ev>:
 8012234:	4770      	bx	lr

08012236 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8012236:	4770      	bx	lr

08012238 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8012238:	4770      	bx	lr

0801223a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801223a:	4770      	bx	lr

0801223c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801223c:	4770      	bx	lr

0801223e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801223e:	4770      	bx	lr

08012240 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012240:	4770      	bx	lr

08012242 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012242:	4770      	bx	lr

08012244 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012244:	4770      	bx	lr

08012246 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012246:	4770      	bx	lr

08012248 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012248:	4770      	bx	lr

0801224a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801224a:	4770      	bx	lr

0801224c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801224c:	4770      	bx	lr

0801224e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801224e:	4770      	bx	lr

08012250 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012250:	4770      	bx	lr

08012252 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012252:	4770      	bx	lr

08012254 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012254:	4770      	bx	lr

08012256 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012256:	4770      	bx	lr

08012258 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012258:	4770      	bx	lr

0801225a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801225a:	4770      	bx	lr

0801225c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801225c:	4770      	bx	lr

0801225e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801225e:	4770      	bx	lr

08012260 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8012260:	4770      	bx	lr

08012262 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012262:	4770      	bx	lr

08012264 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8012264:	4770      	bx	lr

08012266 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012266:	4770      	bx	lr

08012268 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012268:	4770      	bx	lr

0801226a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801226a:	4770      	bx	lr

0801226c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801226c:	4770      	bx	lr
	...

08012270 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012270:	b508      	push	{r3, lr}
 8012272:	4b06      	ldr	r3, [pc, #24]	; (801228c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8012274:	8818      	ldrh	r0, [r3, #0]
 8012276:	b928      	cbnz	r0, 8012284 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8012278:	4b05      	ldr	r3, [pc, #20]	; (8012290 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801227a:	4a06      	ldr	r2, [pc, #24]	; (8012294 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 801227c:	4806      	ldr	r0, [pc, #24]	; (8012298 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801227e:	2150      	movs	r1, #80	; 0x50
 8012280:	f009 fbcc 	bl	801ba1c <__assert_func>
 8012284:	0040      	lsls	r0, r0, #1
 8012286:	b280      	uxth	r0, r0
 8012288:	bd08      	pop	{r3, pc}
 801228a:	bf00      	nop
 801228c:	20013502 	.word	0x20013502
 8012290:	08020550 	.word	0x08020550
 8012294:	08020b4c 	.word	0x08020b4c
 8012298:	08020592 	.word	0x08020592

0801229c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801229c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122a0:	b08b      	sub	sp, #44	; 0x2c
 80122a2:	460f      	mov	r7, r1
 80122a4:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 80122a8:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80122ac:	4616      	mov	r6, r2
 80122ae:	f1bb 0f00 	cmp.w	fp, #0
 80122b2:	d049      	beq.n	8012348 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80122b4:	6810      	ldr	r0, [r2, #0]
 80122b6:	6851      	ldr	r1, [r2, #4]
 80122b8:	ad06      	add	r5, sp, #24
 80122ba:	c503      	stmia	r5!, {r0, r1}
 80122bc:	6818      	ldr	r0, [r3, #0]
 80122be:	6859      	ldr	r1, [r3, #4]
 80122c0:	ad08      	add	r5, sp, #32
 80122c2:	c503      	stmia	r5!, {r0, r1}
 80122c4:	a806      	add	r0, sp, #24
 80122c6:	f7fa f99f 	bl	800c608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80122ca:	4631      	mov	r1, r6
 80122cc:	a808      	add	r0, sp, #32
 80122ce:	f7fa f9c3 	bl	800c658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80122d2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80122d6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80122da:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80122de:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80122e2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80122e6:	fb16 2103 	smlabb	r1, r6, r3, r2
 80122ea:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80122ee:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80122f2:	4f5f      	ldr	r7, [pc, #380]	; (8012470 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80122f4:	440a      	add	r2, r1
 80122f6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80122fa:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80122fe:	6838      	ldr	r0, [r7, #0]
 8012300:	4413      	add	r3, r2
 8012302:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012306:	6803      	ldr	r3, [r0, #0]
 8012308:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801230a:	4798      	blx	r3
 801230c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012310:	46b9      	mov	r9, r7
 8012312:	d01c      	beq.n	801234e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8012314:	f010 0f04 	tst.w	r0, #4
 8012318:	d01d      	beq.n	8012356 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801231a:	f8d9 0000 	ldr.w	r0, [r9]
 801231e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012322:	6801      	ldr	r1, [r0, #0]
 8012324:	f8cd b00c 	str.w	fp, [sp, #12]
 8012328:	2700      	movs	r7, #0
 801232a:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801232e:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8012332:	9402      	str	r4, [sp, #8]
 8012334:	b2ad      	uxth	r5, r5
 8012336:	fa1f f488 	uxth.w	r4, r8
 801233a:	9501      	str	r5, [sp, #4]
 801233c:	9400      	str	r4, [sp, #0]
 801233e:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8012340:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012344:	4631      	mov	r1, r6
 8012346:	47a0      	blx	r4
 8012348:	b00b      	add	sp, #44	; 0x2c
 801234a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801234e:	b914      	cbnz	r4, 8012356 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8012350:	f010 0f01 	tst.w	r0, #1
 8012354:	e7e0      	b.n	8012318 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8012356:	f8d9 0000 	ldr.w	r0, [r9]
 801235a:	6803      	ldr	r3, [r0, #0]
 801235c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801235e:	4798      	blx	r3
 8012360:	4b44      	ldr	r3, [pc, #272]	; (8012474 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8012362:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8012366:	881a      	ldrh	r2, [r3, #0]
 8012368:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801236c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012370:	fb02 1404 	mla	r4, r2, r4, r1
 8012374:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012378:	469a      	mov	sl, r3
 801237a:	fb05 f502 	mul.w	r5, r5, r2
 801237e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8012382:	d059      	beq.n	8012438 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8012384:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8012388:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801238c:	fa1f f28b 	uxth.w	r2, fp
 8012390:	fa1f f989 	uxth.w	r9, r9
 8012394:	469e      	mov	lr, r3
 8012396:	42ac      	cmp	r4, r5
 8012398:	d264      	bcs.n	8012464 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801239a:	eb04 0a07 	add.w	sl, r4, r7
 801239e:	4554      	cmp	r4, sl
 80123a0:	d23d      	bcs.n	801241e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80123a2:	8821      	ldrh	r1, [r4, #0]
 80123a4:	f836 3b02 	ldrh.w	r3, [r6], #2
 80123a8:	1208      	asrs	r0, r1, #8
 80123aa:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80123ae:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80123b2:	fb10 f009 	smulbb	r0, r0, r9
 80123b6:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80123ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80123be:	00c9      	lsls	r1, r1, #3
 80123c0:	fb0c 0c02 	mla	ip, ip, r2, r0
 80123c4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80123c8:	10d8      	asrs	r0, r3, #3
 80123ca:	b2c9      	uxtb	r1, r1
 80123cc:	00db      	lsls	r3, r3, #3
 80123ce:	fa1f fc8c 	uxth.w	ip, ip
 80123d2:	fb1b fb09 	smulbb	fp, fp, r9
 80123d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80123da:	b2db      	uxtb	r3, r3
 80123dc:	fb11 f109 	smulbb	r1, r1, r9
 80123e0:	fb00 b002 	mla	r0, r0, r2, fp
 80123e4:	fb03 1302 	mla	r3, r3, r2, r1
 80123e8:	f10c 0b01 	add.w	fp, ip, #1
 80123ec:	b29b      	uxth	r3, r3
 80123ee:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80123f2:	b280      	uxth	r0, r0
 80123f4:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80123f8:	f103 0c01 	add.w	ip, r3, #1
 80123fc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8012400:	1c43      	adds	r3, r0, #1
 8012402:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8012406:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801240a:	0940      	lsrs	r0, r0, #5
 801240c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8012410:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8012414:	ea4c 0c00 	orr.w	ip, ip, r0
 8012418:	f824 cb02 	strh.w	ip, [r4], #2
 801241c:	e7bf      	b.n	801239e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801241e:	f8be 3000 	ldrh.w	r3, [lr]
 8012422:	eba3 0308 	sub.w	r3, r3, r8
 8012426:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801242a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801242e:	eba3 0308 	sub.w	r3, r3, r8
 8012432:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012436:	e7ae      	b.n	8012396 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8012438:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801243c:	f8d9 0000 	ldr.w	r0, [r9]
 8012440:	42ac      	cmp	r4, r5
 8012442:	6803      	ldr	r3, [r0, #0]
 8012444:	d20e      	bcs.n	8012464 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8012446:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801244a:	4632      	mov	r2, r6
 801244c:	463b      	mov	r3, r7
 801244e:	4621      	mov	r1, r4
 8012450:	47c0      	blx	r8
 8012452:	f8ba 3000 	ldrh.w	r3, [sl]
 8012456:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801245a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801245e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012462:	e7eb      	b.n	801243c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8012464:	4b02      	ldr	r3, [pc, #8]	; (8012470 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8012466:	6818      	ldr	r0, [r3, #0]
 8012468:	6803      	ldr	r3, [r0, #0]
 801246a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801246c:	4798      	blx	r3
 801246e:	e76b      	b.n	8012348 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8012470:	20013508 	.word	0x20013508
 8012474:	20013502 	.word	0x20013502

08012478 <_ZN8touchgfx8LCD16bppD0Ev>:
 8012478:	b510      	push	{r4, lr}
 801247a:	2178      	movs	r1, #120	; 0x78
 801247c:	4604      	mov	r4, r0
 801247e:	f009 fa9e 	bl	801b9be <_ZdlPvj>
 8012482:	4620      	mov	r0, r4
 8012484:	bd10      	pop	{r4, pc}

08012486 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012486:	b510      	push	{r4, lr}
 8012488:	2104      	movs	r1, #4
 801248a:	4604      	mov	r4, r0
 801248c:	f009 fa97 	bl	801b9be <_ZdlPvj>
 8012490:	4620      	mov	r0, r4
 8012492:	bd10      	pop	{r4, pc}

08012494 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012494:	b510      	push	{r4, lr}
 8012496:	2104      	movs	r1, #4
 8012498:	4604      	mov	r4, r0
 801249a:	f009 fa90 	bl	801b9be <_ZdlPvj>
 801249e:	4620      	mov	r0, r4
 80124a0:	bd10      	pop	{r4, pc}

080124a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80124a2:	b510      	push	{r4, lr}
 80124a4:	2104      	movs	r1, #4
 80124a6:	4604      	mov	r4, r0
 80124a8:	f009 fa89 	bl	801b9be <_ZdlPvj>
 80124ac:	4620      	mov	r0, r4
 80124ae:	bd10      	pop	{r4, pc}

080124b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80124b0:	b510      	push	{r4, lr}
 80124b2:	2104      	movs	r1, #4
 80124b4:	4604      	mov	r4, r0
 80124b6:	f009 fa82 	bl	801b9be <_ZdlPvj>
 80124ba:	4620      	mov	r0, r4
 80124bc:	bd10      	pop	{r4, pc}

080124be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80124be:	b510      	push	{r4, lr}
 80124c0:	2104      	movs	r1, #4
 80124c2:	4604      	mov	r4, r0
 80124c4:	f009 fa7b 	bl	801b9be <_ZdlPvj>
 80124c8:	4620      	mov	r0, r4
 80124ca:	bd10      	pop	{r4, pc}

080124cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80124cc:	b510      	push	{r4, lr}
 80124ce:	2104      	movs	r1, #4
 80124d0:	4604      	mov	r4, r0
 80124d2:	f009 fa74 	bl	801b9be <_ZdlPvj>
 80124d6:	4620      	mov	r0, r4
 80124d8:	bd10      	pop	{r4, pc}

080124da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80124da:	b510      	push	{r4, lr}
 80124dc:	2104      	movs	r1, #4
 80124de:	4604      	mov	r4, r0
 80124e0:	f009 fa6d 	bl	801b9be <_ZdlPvj>
 80124e4:	4620      	mov	r0, r4
 80124e6:	bd10      	pop	{r4, pc}

080124e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80124e8:	b510      	push	{r4, lr}
 80124ea:	2104      	movs	r1, #4
 80124ec:	4604      	mov	r4, r0
 80124ee:	f009 fa66 	bl	801b9be <_ZdlPvj>
 80124f2:	4620      	mov	r0, r4
 80124f4:	bd10      	pop	{r4, pc}

080124f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80124f6:	b510      	push	{r4, lr}
 80124f8:	2104      	movs	r1, #4
 80124fa:	4604      	mov	r4, r0
 80124fc:	f009 fa5f 	bl	801b9be <_ZdlPvj>
 8012500:	4620      	mov	r0, r4
 8012502:	bd10      	pop	{r4, pc}

08012504 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012504:	b510      	push	{r4, lr}
 8012506:	2104      	movs	r1, #4
 8012508:	4604      	mov	r4, r0
 801250a:	f009 fa58 	bl	801b9be <_ZdlPvj>
 801250e:	4620      	mov	r0, r4
 8012510:	bd10      	pop	{r4, pc}

08012512 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012512:	b510      	push	{r4, lr}
 8012514:	2104      	movs	r1, #4
 8012516:	4604      	mov	r4, r0
 8012518:	f009 fa51 	bl	801b9be <_ZdlPvj>
 801251c:	4620      	mov	r0, r4
 801251e:	bd10      	pop	{r4, pc}

08012520 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012520:	b510      	push	{r4, lr}
 8012522:	2104      	movs	r1, #4
 8012524:	4604      	mov	r4, r0
 8012526:	f009 fa4a 	bl	801b9be <_ZdlPvj>
 801252a:	4620      	mov	r0, r4
 801252c:	bd10      	pop	{r4, pc}

0801252e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801252e:	b510      	push	{r4, lr}
 8012530:	2104      	movs	r1, #4
 8012532:	4604      	mov	r4, r0
 8012534:	f009 fa43 	bl	801b9be <_ZdlPvj>
 8012538:	4620      	mov	r0, r4
 801253a:	bd10      	pop	{r4, pc}

0801253c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801253c:	b510      	push	{r4, lr}
 801253e:	2104      	movs	r1, #4
 8012540:	4604      	mov	r4, r0
 8012542:	f009 fa3c 	bl	801b9be <_ZdlPvj>
 8012546:	4620      	mov	r0, r4
 8012548:	bd10      	pop	{r4, pc}

0801254a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801254a:	b510      	push	{r4, lr}
 801254c:	2104      	movs	r1, #4
 801254e:	4604      	mov	r4, r0
 8012550:	f009 fa35 	bl	801b9be <_ZdlPvj>
 8012554:	4620      	mov	r0, r4
 8012556:	bd10      	pop	{r4, pc}

08012558 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012558:	b510      	push	{r4, lr}
 801255a:	2104      	movs	r1, #4
 801255c:	4604      	mov	r4, r0
 801255e:	f009 fa2e 	bl	801b9be <_ZdlPvj>
 8012562:	4620      	mov	r0, r4
 8012564:	bd10      	pop	{r4, pc}

08012566 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012566:	b510      	push	{r4, lr}
 8012568:	2104      	movs	r1, #4
 801256a:	4604      	mov	r4, r0
 801256c:	f009 fa27 	bl	801b9be <_ZdlPvj>
 8012570:	4620      	mov	r0, r4
 8012572:	bd10      	pop	{r4, pc}

08012574 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012574:	b510      	push	{r4, lr}
 8012576:	2104      	movs	r1, #4
 8012578:	4604      	mov	r4, r0
 801257a:	f009 fa20 	bl	801b9be <_ZdlPvj>
 801257e:	4620      	mov	r0, r4
 8012580:	bd10      	pop	{r4, pc}

08012582 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012582:	b510      	push	{r4, lr}
 8012584:	2104      	movs	r1, #4
 8012586:	4604      	mov	r4, r0
 8012588:	f009 fa19 	bl	801b9be <_ZdlPvj>
 801258c:	4620      	mov	r0, r4
 801258e:	bd10      	pop	{r4, pc}

08012590 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012590:	b510      	push	{r4, lr}
 8012592:	2104      	movs	r1, #4
 8012594:	4604      	mov	r4, r0
 8012596:	f009 fa12 	bl	801b9be <_ZdlPvj>
 801259a:	4620      	mov	r0, r4
 801259c:	bd10      	pop	{r4, pc}

0801259e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801259e:	b510      	push	{r4, lr}
 80125a0:	2104      	movs	r1, #4
 80125a2:	4604      	mov	r4, r0
 80125a4:	f009 fa0b 	bl	801b9be <_ZdlPvj>
 80125a8:	4620      	mov	r0, r4
 80125aa:	bd10      	pop	{r4, pc}

080125ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80125ac:	b510      	push	{r4, lr}
 80125ae:	2104      	movs	r1, #4
 80125b0:	4604      	mov	r4, r0
 80125b2:	f009 fa04 	bl	801b9be <_ZdlPvj>
 80125b6:	4620      	mov	r0, r4
 80125b8:	bd10      	pop	{r4, pc}

080125ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80125ba:	b510      	push	{r4, lr}
 80125bc:	2104      	movs	r1, #4
 80125be:	4604      	mov	r4, r0
 80125c0:	f009 f9fd 	bl	801b9be <_ZdlPvj>
 80125c4:	4620      	mov	r0, r4
 80125c6:	bd10      	pop	{r4, pc}

080125c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80125c8:	b510      	push	{r4, lr}
 80125ca:	2104      	movs	r1, #4
 80125cc:	4604      	mov	r4, r0
 80125ce:	f009 f9f6 	bl	801b9be <_ZdlPvj>
 80125d2:	4620      	mov	r0, r4
 80125d4:	bd10      	pop	{r4, pc}

080125d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80125d6:	b510      	push	{r4, lr}
 80125d8:	2104      	movs	r1, #4
 80125da:	4604      	mov	r4, r0
 80125dc:	f009 f9ef 	bl	801b9be <_ZdlPvj>
 80125e0:	4620      	mov	r0, r4
 80125e2:	bd10      	pop	{r4, pc}

080125e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80125e4:	b510      	push	{r4, lr}
 80125e6:	2104      	movs	r1, #4
 80125e8:	4604      	mov	r4, r0
 80125ea:	f009 f9e8 	bl	801b9be <_ZdlPvj>
 80125ee:	4620      	mov	r0, r4
 80125f0:	bd10      	pop	{r4, pc}

080125f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80125f2:	b510      	push	{r4, lr}
 80125f4:	2104      	movs	r1, #4
 80125f6:	4604      	mov	r4, r0
 80125f8:	f009 f9e1 	bl	801b9be <_ZdlPvj>
 80125fc:	4620      	mov	r0, r4
 80125fe:	bd10      	pop	{r4, pc}

08012600 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8012600:	b510      	push	{r4, lr}
 8012602:	2104      	movs	r1, #4
 8012604:	4604      	mov	r4, r0
 8012606:	f009 f9da 	bl	801b9be <_ZdlPvj>
 801260a:	4620      	mov	r0, r4
 801260c:	bd10      	pop	{r4, pc}
	...

08012610 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8012610:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012612:	4606      	mov	r6, r0
 8012614:	b087      	sub	sp, #28
 8012616:	460c      	mov	r4, r1
 8012618:	4617      	mov	r7, r2
 801261a:	461d      	mov	r5, r3
 801261c:	b333      	cbz	r3, 801266c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801261e:	4608      	mov	r0, r1
 8012620:	f7f7 f8fd 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 8012624:	bb10      	cbnz	r0, 801266c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012626:	6820      	ldr	r0, [r4, #0]
 8012628:	6861      	ldr	r1, [r4, #4]
 801262a:	4c1c      	ldr	r4, [pc, #112]	; (801269c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801262c:	ab04      	add	r3, sp, #16
 801262e:	c303      	stmia	r3!, {r0, r1}
 8012630:	a804      	add	r0, sp, #16
 8012632:	f7f9 ffe9 	bl	800c608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012636:	6820      	ldr	r0, [r4, #0]
 8012638:	6803      	ldr	r3, [r0, #0]
 801263a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801263c:	4798      	blx	r3
 801263e:	2dff      	cmp	r5, #255	; 0xff
 8012640:	d016      	beq.n	8012670 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8012642:	f010 0f08 	tst.w	r0, #8
 8012646:	6820      	ldr	r0, [r4, #0]
 8012648:	d015      	beq.n	8012676 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801264a:	2400      	movs	r4, #0
 801264c:	6801      	ldr	r1, [r0, #0]
 801264e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012652:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012656:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801265a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801265e:	9401      	str	r4, [sp, #4]
 8012660:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8012664:	9400      	str	r4, [sp, #0]
 8012666:	6dcc      	ldr	r4, [r1, #92]	; 0x5c
 8012668:	4639      	mov	r1, r7
 801266a:	47a0      	blx	r4
 801266c:	b007      	add	sp, #28
 801266e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012670:	f010 0f02 	tst.w	r0, #2
 8012674:	e7e7      	b.n	8012646 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8012676:	6803      	ldr	r3, [r0, #0]
 8012678:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801267a:	4798      	blx	r3
 801267c:	4b08      	ldr	r3, [pc, #32]	; (80126a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801267e:	881a      	ldrh	r2, [r3, #0]
 8012680:	6833      	ldr	r3, [r6, #0]
 8012682:	e9cd 7500 	strd	r7, r5, [sp]
 8012686:	4601      	mov	r1, r0
 8012688:	69dd      	ldr	r5, [r3, #28]
 801268a:	4630      	mov	r0, r6
 801268c:	ab04      	add	r3, sp, #16
 801268e:	47a8      	blx	r5
 8012690:	6820      	ldr	r0, [r4, #0]
 8012692:	6803      	ldr	r3, [r0, #0]
 8012694:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012696:	4798      	blx	r3
 8012698:	e7e8      	b.n	801266c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801269a:	bf00      	nop
 801269c:	20013508 	.word	0x20013508
 80126a0:	20013502 	.word	0x20013502

080126a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80126a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126a8:	4f97      	ldr	r7, [pc, #604]	; (8012908 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 80126aa:	4616      	mov	r6, r2
 80126ac:	683a      	ldr	r2, [r7, #0]
 80126ae:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 80126b2:	2a02      	cmp	r2, #2
 80126b4:	b08f      	sub	sp, #60	; 0x3c
 80126b6:	4604      	mov	r4, r0
 80126b8:	4689      	mov	r9, r1
 80126ba:	d106      	bne.n	80126ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 80126bc:	4b93      	ldr	r3, [pc, #588]	; (801290c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 80126be:	4a94      	ldr	r2, [pc, #592]	; (8012910 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80126c0:	f44f 7159 	mov.w	r1, #868	; 0x364
 80126c4:	4893      	ldr	r0, [pc, #588]	; (8012914 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 80126c6:	f009 f9a9 	bl	801ba1c <__assert_func>
 80126ca:	ad0e      	add	r5, sp, #56	; 0x38
 80126cc:	f825 3d24 	strh.w	r3, [r5, #-36]!
 80126d0:	4628      	mov	r0, r5
 80126d2:	f7fd fac9 	bl	800fc68 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80126d6:	6823      	ldr	r3, [r4, #0]
 80126d8:	4680      	mov	r8, r0
 80126da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80126dc:	4620      	mov	r0, r4
 80126de:	4798      	blx	r3
 80126e0:	4580      	cmp	r8, r0
 80126e2:	d004      	beq.n	80126ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 80126e4:	4b8c      	ldr	r3, [pc, #560]	; (8012918 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 80126e6:	4a8a      	ldr	r2, [pc, #552]	; (8012910 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80126e8:	f240 3166 	movw	r1, #870	; 0x366
 80126ec:	e7ea      	b.n	80126c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80126ee:	4628      	mov	r0, r5
 80126f0:	f7fd fa30 	bl	800fb54 <_ZNK8touchgfx6Bitmap7getDataEv>
 80126f4:	4680      	mov	r8, r0
 80126f6:	b920      	cbnz	r0, 8012702 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 80126f8:	4b88      	ldr	r3, [pc, #544]	; (801291c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 80126fa:	4a85      	ldr	r2, [pc, #532]	; (8012910 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80126fc:	f44f 715a 	mov.w	r1, #872	; 0x368
 8012700:	e7e0      	b.n	80126c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012702:	6830      	ldr	r0, [r6, #0]
 8012704:	6871      	ldr	r1, [r6, #4]
 8012706:	f9b6 a000 	ldrsh.w	sl, [r6]
 801270a:	ab06      	add	r3, sp, #24
 801270c:	c303      	stmia	r3!, {r0, r1}
 801270e:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8012712:	f8d9 0000 	ldr.w	r0, [r9]
 8012716:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801271a:	ab08      	add	r3, sp, #32
 801271c:	c303      	stmia	r3!, {r0, r1}
 801271e:	4628      	mov	r0, r5
 8012720:	f7fd f910 	bl	800f944 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012724:	4606      	mov	r6, r0
 8012726:	4628      	mov	r0, r5
 8012728:	f7fd f946 	bl	800f9b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801272c:	f10d 0b20 	add.w	fp, sp, #32
 8012730:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8012734:	a806      	add	r0, sp, #24
 8012736:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 801273a:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801273e:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8012742:	f7f9 ff61 	bl	800c608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012746:	4658      	mov	r0, fp
 8012748:	f7f9 ff5e 	bl	800c608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801274c:	a80a      	add	r0, sp, #40	; 0x28
 801274e:	f7f9 ff5b 	bl	800c608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012752:	4d73      	ldr	r5, [pc, #460]	; (8012920 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8012754:	4b73      	ldr	r3, [pc, #460]	; (8012924 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8012756:	f9b5 2000 	ldrsh.w	r2, [r5]
 801275a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801275e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8012762:	2100      	movs	r1, #0
 8012764:	910c      	str	r1, [sp, #48]	; 0x30
 8012766:	4658      	mov	r0, fp
 8012768:	a90c      	add	r1, sp, #48	; 0x30
 801276a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801276e:	f7f7 f813 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 8012772:	4658      	mov	r0, fp
 8012774:	f7f7 f853 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 8012778:	2800      	cmp	r0, #0
 801277a:	f040 8099 	bne.w	80128b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801277e:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8012782:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8012786:	4288      	cmp	r0, r1
 8012788:	db37      	blt.n	80127fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801278a:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 801278e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012792:	429a      	cmp	r2, r3
 8012794:	db31      	blt.n	80127fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8012796:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 801279a:	4430      	add	r0, r6
 801279c:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80127a0:	4431      	add	r1, r6
 80127a2:	b200      	sxth	r0, r0
 80127a4:	b209      	sxth	r1, r1
 80127a6:	4288      	cmp	r0, r1
 80127a8:	dc27      	bgt.n	80127fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80127aa:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 80127ae:	440a      	add	r2, r1
 80127b0:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 80127b4:	440b      	add	r3, r1
 80127b6:	b212      	sxth	r2, r2
 80127b8:	b21b      	sxth	r3, r3
 80127ba:	429a      	cmp	r2, r3
 80127bc:	dc1d      	bgt.n	80127fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80127be:	6823      	ldr	r3, [r4, #0]
 80127c0:	4620      	mov	r0, r4
 80127c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80127c4:	4798      	blx	r3
 80127c6:	4682      	mov	sl, r0
 80127c8:	6838      	ldr	r0, [r7, #0]
 80127ca:	6803      	ldr	r3, [r0, #0]
 80127cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80127ce:	4798      	blx	r3
 80127d0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80127d4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80127d8:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80127dc:	1a5b      	subs	r3, r3, r1
 80127de:	b29b      	uxth	r3, r3
 80127e0:	b21c      	sxth	r4, r3
 80127e2:	2c00      	cmp	r4, #0
 80127e4:	dc0e      	bgt.n	8012804 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 80127e6:	bf1f      	itttt	ne
 80127e8:	f8ad 1020 	strhne.w	r1, [sp, #32]
 80127ec:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 80127f0:	185b      	addne	r3, r3, r1
 80127f2:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 80127f6:	4644      	mov	r4, r8
 80127f8:	e009      	b.n	801280e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 80127fa:	4b4b      	ldr	r3, [pc, #300]	; (8012928 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 80127fc:	4a44      	ldr	r2, [pc, #272]	; (8012910 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80127fe:	f240 3176 	movw	r1, #886	; 0x376
 8012802:	e75f      	b.n	80126c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012804:	1ad3      	subs	r3, r2, r3
 8012806:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801280a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801280e:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 8012812:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012816:	1b9b      	subs	r3, r3, r6
 8012818:	b29b      	uxth	r3, r3
 801281a:	b219      	sxth	r1, r3
 801281c:	2900      	cmp	r1, #0
 801281e:	dd4b      	ble.n	80128b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 8012820:	4351      	muls	r1, r2
 8012822:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8012826:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801282a:	1acb      	subs	r3, r1, r3
 801282c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012830:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8012834:	2e00      	cmp	r6, #0
 8012836:	dd3b      	ble.n	80128b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012838:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801283c:	2b00      	cmp	r3, #0
 801283e:	dd37      	ble.n	80128b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012840:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8012844:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8012848:	fb0a f90c 	mul.w	r9, sl, ip
 801284c:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 8012850:	4481      	add	r9, r0
 8012852:	8828      	ldrh	r0, [r5, #0]
 8012854:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 8012858:	42ae      	cmp	r6, r5
 801285a:	bfa8      	it	ge
 801285c:	462e      	movge	r6, r5
 801285e:	1a41      	subs	r1, r0, r1
 8012860:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8012864:	428e      	cmp	r6, r1
 8012866:	bfa8      	it	ge
 8012868:	460e      	movge	r6, r1
 801286a:	429d      	cmp	r5, r3
 801286c:	bfa8      	it	ge
 801286e:	461d      	movge	r5, r3
 8012870:	4b2c      	ldr	r3, [pc, #176]	; (8012924 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8012872:	881b      	ldrh	r3, [r3, #0]
 8012874:	eba3 030c 	sub.w	r3, r3, ip
 8012878:	429d      	cmp	r5, r3
 801287a:	bfa8      	it	ge
 801287c:	461d      	movge	r5, r3
 801287e:	42b0      	cmp	r0, r6
 8012880:	d12c      	bne.n	80128dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8012882:	4290      	cmp	r0, r2
 8012884:	d12a      	bne.n	80128dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8012886:	6838      	ldr	r0, [r7, #0]
 8012888:	9203      	str	r2, [sp, #12]
 801288a:	6803      	ldr	r3, [r0, #0]
 801288c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801288e:	4798      	blx	r3
 8012890:	07c3      	lsls	r3, r0, #31
 8012892:	d51a      	bpl.n	80128ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 8012894:	9a03      	ldr	r2, [sp, #12]
 8012896:	6838      	ldr	r0, [r7, #0]
 8012898:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 801289c:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80128a0:	6803      	ldr	r3, [r0, #0]
 80128a2:	9200      	str	r2, [sp, #0]
 80128a4:	6e9d      	ldr	r5, [r3, #104]	; 0x68
 80128a6:	e89b 0006 	ldmia.w	fp, {r1, r2}
 80128aa:	4623      	mov	r3, r4
 80128ac:	47a8      	blx	r5
 80128ae:	4680      	mov	r8, r0
 80128b0:	4640      	mov	r0, r8
 80128b2:	b00f      	add	sp, #60	; 0x3c
 80128b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128b8:	bf1f      	itttt	ne
 80128ba:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 80128be:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 80128c2:	185b      	addne	r3, r3, r1
 80128c4:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 80128c8:	e7b2      	b.n	8012830 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 80128ca:	6838      	ldr	r0, [r7, #0]
 80128cc:	6803      	ldr	r3, [r0, #0]
 80128ce:	464a      	mov	r2, r9
 80128d0:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 80128d2:	4621      	mov	r1, r4
 80128d4:	fb05 f30a 	mul.w	r3, r5, sl
 80128d8:	47b0      	blx	r6
 80128da:	e7e9      	b.n	80128b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80128dc:	4355      	muls	r5, r2
 80128de:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 80128e2:	9303      	str	r3, [sp, #12]
 80128e4:	0076      	lsls	r6, r6, #1
 80128e6:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 80128ea:	9b03      	ldr	r3, [sp, #12]
 80128ec:	429c      	cmp	r4, r3
 80128ee:	d2df      	bcs.n	80128b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80128f0:	6838      	ldr	r0, [r7, #0]
 80128f2:	6803      	ldr	r3, [r0, #0]
 80128f4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80128f6:	464a      	mov	r2, r9
 80128f8:	461d      	mov	r5, r3
 80128fa:	4621      	mov	r1, r4
 80128fc:	4633      	mov	r3, r6
 80128fe:	47a8      	blx	r5
 8012900:	44d1      	add	r9, sl
 8012902:	445c      	add	r4, fp
 8012904:	e7f1      	b.n	80128ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 8012906:	bf00      	nop
 8012908:	20013508 	.word	0x20013508
 801290c:	08020348 	.word	0x08020348
 8012910:	08020bfc 	.word	0x08020bfc
 8012914:	080203fa 	.word	0x080203fa
 8012918:	0802042c 	.word	0x0802042c
 801291c:	08020481 	.word	0x08020481
 8012920:	20013502 	.word	0x20013502
 8012924:	20013504 	.word	0x20013504
 8012928:	080204bf 	.word	0x080204bf

0801292c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801292c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012930:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8012934:	9e08      	ldr	r6, [sp, #32]
 8012936:	4688      	mov	r8, r1
 8012938:	4614      	mov	r4, r2
 801293a:	461d      	mov	r5, r3
 801293c:	2f00      	cmp	r7, #0
 801293e:	f000 80b3 	beq.w	8012aa8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012942:	4618      	mov	r0, r3
 8012944:	f7f6 ff6b 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 8012948:	2800      	cmp	r0, #0
 801294a:	f040 80ad 	bne.w	8012aa8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801294e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012952:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012956:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801295a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801295e:	fb04 1303 	mla	r3, r4, r3, r1
 8012962:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8012966:	4365      	muls	r5, r4
 8012968:	2fff      	cmp	r7, #255	; 0xff
 801296a:	eba4 0200 	sub.w	r2, r4, r0
 801296e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8012972:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8012976:	d04b      	beq.n	8012a10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8012978:	b2bc      	uxth	r4, r7
 801297a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801297e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8012982:	fa5f f788 	uxtb.w	r7, r8
 8012986:	b2f3      	uxtb	r3, r6
 8012988:	0040      	lsls	r0, r0, #1
 801298a:	fb0e fe04 	mul.w	lr, lr, r4
 801298e:	4367      	muls	r7, r4
 8012990:	4363      	muls	r3, r4
 8012992:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8012996:	fa1f fc8c 	uxth.w	ip, ip
 801299a:	42a9      	cmp	r1, r5
 801299c:	f080 8084 	bcs.w	8012aa8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 80129a0:	eb01 0900 	add.w	r9, r1, r0
 80129a4:	4549      	cmp	r1, r9
 80129a6:	d231      	bcs.n	8012a0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 80129a8:	880a      	ldrh	r2, [r1, #0]
 80129aa:	1214      	asrs	r4, r2, #8
 80129ac:	10d6      	asrs	r6, r2, #3
 80129ae:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80129b2:	00d2      	lsls	r2, r2, #3
 80129b4:	b2d2      	uxtb	r2, r2
 80129b6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80129ba:	fb14 f40c 	smulbb	r4, r4, ip
 80129be:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80129c2:	4474      	add	r4, lr
 80129c4:	fb12 f20c 	smulbb	r2, r2, ip
 80129c8:	b2a4      	uxth	r4, r4
 80129ca:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80129ce:	441a      	add	r2, r3
 80129d0:	b292      	uxth	r2, r2
 80129d2:	f104 0a01 	add.w	sl, r4, #1
 80129d6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80129da:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80129de:	fb16 f60c 	smulbb	r6, r6, ip
 80129e2:	f102 0a01 	add.w	sl, r2, #1
 80129e6:	443e      	add	r6, r7
 80129e8:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80129ec:	b2b6      	uxth	r6, r6
 80129ee:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80129f2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80129f6:	4322      	orrs	r2, r4
 80129f8:	1c74      	adds	r4, r6, #1
 80129fa:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80129fe:	0976      	lsrs	r6, r6, #5
 8012a00:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012a04:	4332      	orrs	r2, r6
 8012a06:	f821 2b02 	strh.w	r2, [r1], #2
 8012a0a:	e7cb      	b.n	80129a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8012a0c:	4441      	add	r1, r8
 8012a0e:	e7c4      	b.n	801299a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8012a10:	4f26      	ldr	r7, [pc, #152]	; (8012aac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 8012a12:	0973      	lsrs	r3, r6, #5
 8012a14:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012a18:	ea08 0707 	and.w	r7, r8, r7
 8012a1c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8012a20:	433b      	orrs	r3, r7
 8012a22:	4333      	orrs	r3, r6
 8012a24:	07e6      	lsls	r6, r4, #31
 8012a26:	b29b      	uxth	r3, r3
 8012a28:	d50b      	bpl.n	8012a42 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 8012a2a:	0040      	lsls	r0, r0, #1
 8012a2c:	0052      	lsls	r2, r2, #1
 8012a2e:	42a9      	cmp	r1, r5
 8012a30:	d23a      	bcs.n	8012aa8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012a32:	180c      	adds	r4, r1, r0
 8012a34:	42a1      	cmp	r1, r4
 8012a36:	d202      	bcs.n	8012a3e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 8012a38:	f821 3b02 	strh.w	r3, [r1], #2
 8012a3c:	e7fa      	b.n	8012a34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 8012a3e:	4411      	add	r1, r2
 8012a40:	e7f5      	b.n	8012a2e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 8012a42:	078f      	lsls	r7, r1, #30
 8012a44:	d008      	beq.n	8012a58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 8012a46:	0066      	lsls	r6, r4, #1
 8012a48:	460a      	mov	r2, r1
 8012a4a:	42aa      	cmp	r2, r5
 8012a4c:	d202      	bcs.n	8012a54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 8012a4e:	8013      	strh	r3, [r2, #0]
 8012a50:	4432      	add	r2, r6
 8012a52:	e7fa      	b.n	8012a4a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 8012a54:	3102      	adds	r1, #2
 8012a56:	3801      	subs	r0, #1
 8012a58:	07c6      	lsls	r6, r0, #31
 8012a5a:	d50b      	bpl.n	8012a74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8012a5c:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8012a60:	3a01      	subs	r2, #1
 8012a62:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8012a66:	0066      	lsls	r6, r4, #1
 8012a68:	42aa      	cmp	r2, r5
 8012a6a:	d202      	bcs.n	8012a72 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8012a6c:	8013      	strh	r3, [r2, #0]
 8012a6e:	4432      	add	r2, r6
 8012a70:	e7fa      	b.n	8012a68 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 8012a72:	3801      	subs	r0, #1
 8012a74:	b1c0      	cbz	r0, 8012aa8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012a76:	1040      	asrs	r0, r0, #1
 8012a78:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8012a7c:	0080      	lsls	r0, r0, #2
 8012a7e:	0064      	lsls	r4, r4, #1
 8012a80:	42a9      	cmp	r1, r5
 8012a82:	d211      	bcs.n	8012aa8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012a84:	078a      	lsls	r2, r1, #30
 8012a86:	d006      	beq.n	8012a96 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 8012a88:	4b09      	ldr	r3, [pc, #36]	; (8012ab0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 8012a8a:	4a0a      	ldr	r2, [pc, #40]	; (8012ab4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8012a8c:	480a      	ldr	r0, [pc, #40]	; (8012ab8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 8012a8e:	f44f 6185 	mov.w	r1, #1064	; 0x428
 8012a92:	f008 ffc3 	bl	801ba1c <__assert_func>
 8012a96:	180e      	adds	r6, r1, r0
 8012a98:	460a      	mov	r2, r1
 8012a9a:	42b2      	cmp	r2, r6
 8012a9c:	d202      	bcs.n	8012aa4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 8012a9e:	f842 3b04 	str.w	r3, [r2], #4
 8012aa2:	e7fa      	b.n	8012a9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 8012aa4:	4421      	add	r1, r4
 8012aa6:	e7eb      	b.n	8012a80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 8012aa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012aac:	00fff800 	.word	0x00fff800
 8012ab0:	080201f9 	.word	0x080201f9
 8012ab4:	08020848 	.word	0x08020848
 8012ab8:	080203fa 	.word	0x080203fa

08012abc <_ZN8touchgfx8LCD16bppC1Ev>:
 8012abc:	2200      	movs	r2, #0
 8012abe:	4910      	ldr	r1, [pc, #64]	; (8012b00 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8012ac0:	6042      	str	r2, [r0, #4]
 8012ac2:	6001      	str	r1, [r0, #0]
 8012ac4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8012ac8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8012acc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8012ad0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8012ad4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8012ad8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8012adc:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8012ae0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8012ae4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8012ae8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8012aec:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8012af0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8012af4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8012af8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8012afc:	4770      	bx	lr
 8012afe:	bf00      	nop
 8012b00:	08020800 	.word	0x08020800

08012b04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8012b04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b08:	460d      	mov	r5, r1
 8012b0a:	b08d      	sub	sp, #52	; 0x34
 8012b0c:	4604      	mov	r4, r0
 8012b0e:	6808      	ldr	r0, [r1, #0]
 8012b10:	6849      	ldr	r1, [r1, #4]
 8012b12:	4699      	mov	r9, r3
 8012b14:	ab08      	add	r3, sp, #32
 8012b16:	c303      	stmia	r3!, {r0, r1}
 8012b18:	6810      	ldr	r0, [r2, #0]
 8012b1a:	6851      	ldr	r1, [r2, #4]
 8012b1c:	ab0a      	add	r3, sp, #40	; 0x28
 8012b1e:	c303      	stmia	r3!, {r0, r1}
 8012b20:	a808      	add	r0, sp, #32
 8012b22:	f7f9 fd71 	bl	800c608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012b26:	4629      	mov	r1, r5
 8012b28:	a80a      	add	r0, sp, #40	; 0x28
 8012b2a:	f7f9 fd95 	bl	800c658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012b2e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012b32:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8012b36:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8012b3a:	4d63      	ldr	r5, [pc, #396]	; (8012cc8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8012b3c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8012b40:	6828      	ldr	r0, [r5, #0]
 8012b42:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8012b46:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012b4a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8012b4e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8012b52:	440a      	add	r2, r1
 8012b54:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012b58:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8012b5c:	4413      	add	r3, r2
 8012b5e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012b62:	6803      	ldr	r3, [r0, #0]
 8012b64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012b66:	4798      	blx	r3
 8012b68:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012b6c:	d119      	bne.n	8012ba2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8012b6e:	f010 0f20 	tst.w	r0, #32
 8012b72:	6828      	ldr	r0, [r5, #0]
 8012b74:	d018      	beq.n	8012ba8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8012b76:	2500      	movs	r5, #0
 8012b78:	6801      	ldr	r1, [r0, #0]
 8012b7a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8012b7e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012b82:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8012b86:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8012b8a:	9502      	str	r5, [sp, #8]
 8012b8c:	b2b6      	uxth	r6, r6
 8012b8e:	fa1f f588 	uxth.w	r5, r8
 8012b92:	9601      	str	r6, [sp, #4]
 8012b94:	9500      	str	r5, [sp, #0]
 8012b96:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8012b98:	4621      	mov	r1, r4
 8012b9a:	47a8      	blx	r5
 8012b9c:	b00d      	add	sp, #52	; 0x34
 8012b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ba2:	f010 0f40 	tst.w	r0, #64	; 0x40
 8012ba6:	e7e4      	b.n	8012b72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8012ba8:	6803      	ldr	r3, [r0, #0]
 8012baa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012bac:	4798      	blx	r3
 8012bae:	4947      	ldr	r1, [pc, #284]	; (8012ccc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8012bb0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8012bb4:	880b      	ldrh	r3, [r1, #0]
 8012bb6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8012bba:	fb03 5202 	mla	r2, r3, r2, r5
 8012bbe:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012bc2:	4373      	muls	r3, r6
 8012bc4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012bc8:	9307      	str	r3, [sp, #28]
 8012bca:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8012bce:	9306      	str	r3, [sp, #24]
 8012bd0:	468a      	mov	sl, r1
 8012bd2:	9b07      	ldr	r3, [sp, #28]
 8012bd4:	4298      	cmp	r0, r3
 8012bd6:	d270      	bcs.n	8012cba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8012bd8:	9b06      	ldr	r3, [sp, #24]
 8012bda:	4621      	mov	r1, r4
 8012bdc:	eb00 0b03 	add.w	fp, r0, r3
 8012be0:	4558      	cmp	r0, fp
 8012be2:	d25d      	bcs.n	8012ca0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8012be4:	f851 4b04 	ldr.w	r4, [r1], #4
 8012be8:	0e23      	lsrs	r3, r4, #24
 8012bea:	d014      	beq.n	8012c16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8012bec:	2bff      	cmp	r3, #255	; 0xff
 8012bee:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8012bf2:	d112      	bne.n	8012c1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8012bf4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012bf8:	d10f      	bne.n	8012c1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8012bfa:	0963      	lsrs	r3, r4, #5
 8012bfc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8012c00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012c04:	f02c 0c07 	bic.w	ip, ip, #7
 8012c08:	ea43 0c0c 	orr.w	ip, r3, ip
 8012c0c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012c10:	ea4c 0404 	orr.w	r4, ip, r4
 8012c14:	8004      	strh	r4, [r0, #0]
 8012c16:	3002      	adds	r0, #2
 8012c18:	e7e2      	b.n	8012be0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8012c1a:	fb09 f303 	mul.w	r3, r9, r3
 8012c1e:	8807      	ldrh	r7, [r0, #0]
 8012c20:	1c5a      	adds	r2, r3, #1
 8012c22:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8012c26:	1212      	asrs	r2, r2, #8
 8012c28:	123e      	asrs	r6, r7, #8
 8012c2a:	b293      	uxth	r3, r2
 8012c2c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8012c30:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012c34:	43d2      	mvns	r2, r2
 8012c36:	b2d2      	uxtb	r2, r2
 8012c38:	10fd      	asrs	r5, r7, #3
 8012c3a:	fb1e fe03 	smulbb	lr, lr, r3
 8012c3e:	00ff      	lsls	r7, r7, #3
 8012c40:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8012c44:	fb06 e602 	mla	r6, r6, r2, lr
 8012c48:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012c4c:	b2ff      	uxtb	r7, r7
 8012c4e:	fa5f fc8c 	uxtb.w	ip, ip
 8012c52:	b2e4      	uxtb	r4, r4
 8012c54:	b2b6      	uxth	r6, r6
 8012c56:	fb1c fc03 	smulbb	ip, ip, r3
 8012c5a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8012c5e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8012c62:	fb14 f403 	smulbb	r4, r4, r3
 8012c66:	fb05 c502 	mla	r5, r5, r2, ip
 8012c6a:	f106 0e01 	add.w	lr, r6, #1
 8012c6e:	fb07 4702 	mla	r7, r7, r2, r4
 8012c72:	b2ad      	uxth	r5, r5
 8012c74:	b2bf      	uxth	r7, r7
 8012c76:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8012c7a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8012c7e:	f105 0c01 	add.w	ip, r5, #1
 8012c82:	1c7e      	adds	r6, r7, #1
 8012c84:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8012c88:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8012c8c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012c90:	096d      	lsrs	r5, r5, #5
 8012c92:	ea46 060e 	orr.w	r6, r6, lr
 8012c96:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012c9a:	432e      	orrs	r6, r5
 8012c9c:	8006      	strh	r6, [r0, #0]
 8012c9e:	e7ba      	b.n	8012c16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8012ca0:	f8ba 3000 	ldrh.w	r3, [sl]
 8012ca4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8012ca8:	eba3 0308 	sub.w	r3, r3, r8
 8012cac:	eba4 0408 	sub.w	r4, r4, r8
 8012cb0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012cb4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8012cb8:	e78b      	b.n	8012bd2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8012cba:	4b03      	ldr	r3, [pc, #12]	; (8012cc8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8012cbc:	6818      	ldr	r0, [r3, #0]
 8012cbe:	6803      	ldr	r3, [r0, #0]
 8012cc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012cc2:	4798      	blx	r3
 8012cc4:	e76a      	b.n	8012b9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8012cc6:	bf00      	nop
 8012cc8:	20013508 	.word	0x20013508
 8012ccc:	20013502 	.word	0x20013502

08012cd0 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8012cd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012cd4:	460c      	mov	r4, r1
 8012cd6:	b085      	sub	sp, #20
 8012cd8:	6810      	ldr	r0, [r2, #0]
 8012cda:	6851      	ldr	r1, [r2, #4]
 8012cdc:	466d      	mov	r5, sp
 8012cde:	c503      	stmia	r5!, {r0, r1}
 8012ce0:	6818      	ldr	r0, [r3, #0]
 8012ce2:	6859      	ldr	r1, [r3, #4]
 8012ce4:	4616      	mov	r6, r2
 8012ce6:	c503      	stmia	r5!, {r0, r1}
 8012ce8:	4668      	mov	r0, sp
 8012cea:	f7f9 fc8d 	bl	800c608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012cee:	4631      	mov	r1, r6
 8012cf0:	a802      	add	r0, sp, #8
 8012cf2:	f7f9 fcb1 	bl	800c658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012cf6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8012cfa:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8012cfe:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8012d02:	4d28      	ldr	r5, [pc, #160]	; (8012da4 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8012d04:	4e28      	ldr	r6, [pc, #160]	; (8012da8 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8012d06:	6828      	ldr	r0, [r5, #0]
 8012d08:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8012d0c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8012d10:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012d14:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8012d18:	f8bd 1000 	ldrh.w	r1, [sp]
 8012d1c:	440a      	add	r2, r1
 8012d1e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8012d22:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8012d26:	4413      	add	r3, r2
 8012d28:	f8ad 300a 	strh.w	r3, [sp, #10]
 8012d2c:	6803      	ldr	r3, [r0, #0]
 8012d2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012d30:	4798      	blx	r3
 8012d32:	8833      	ldrh	r3, [r6, #0]
 8012d34:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8012d38:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8012d3c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8012dac <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8012d40:	fb03 1202 	mla	r2, r3, r2, r1
 8012d44:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012d48:	fb08 f303 	mul.w	r3, r8, r3
 8012d4c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012d50:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8012d54:	4298      	cmp	r0, r3
 8012d56:	d21d      	bcs.n	8012d94 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8012d58:	eb00 080c 	add.w	r8, r0, ip
 8012d5c:	4540      	cmp	r0, r8
 8012d5e:	d20f      	bcs.n	8012d80 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8012d60:	f854 1b04 	ldr.w	r1, [r4], #4
 8012d64:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8012d68:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8012d6c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8012d70:	ea42 0209 	orr.w	r2, r2, r9
 8012d74:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8012d78:	430a      	orrs	r2, r1
 8012d7a:	f820 2b02 	strh.w	r2, [r0], #2
 8012d7e:	e7ed      	b.n	8012d5c <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8012d80:	8832      	ldrh	r2, [r6, #0]
 8012d82:	1bd2      	subs	r2, r2, r7
 8012d84:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012d88:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8012d8c:	1bd2      	subs	r2, r2, r7
 8012d8e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8012d92:	e7df      	b.n	8012d54 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8012d94:	6828      	ldr	r0, [r5, #0]
 8012d96:	6803      	ldr	r3, [r0, #0]
 8012d98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012d9a:	4798      	blx	r3
 8012d9c:	b005      	add	sp, #20
 8012d9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012da2:	bf00      	nop
 8012da4:	20013508 	.word	0x20013508
 8012da8:	20013502 	.word	0x20013502
 8012dac:	fffff800 	.word	0xfffff800

08012db0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8012db0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012db4:	460e      	mov	r6, r1
 8012db6:	b08e      	sub	sp, #56	; 0x38
 8012db8:	4604      	mov	r4, r0
 8012dba:	6808      	ldr	r0, [r1, #0]
 8012dbc:	6849      	ldr	r1, [r1, #4]
 8012dbe:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8012f98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8012dc2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8012f9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8012dc6:	461d      	mov	r5, r3
 8012dc8:	ab0a      	add	r3, sp, #40	; 0x28
 8012dca:	c303      	stmia	r3!, {r0, r1}
 8012dcc:	6810      	ldr	r0, [r2, #0]
 8012dce:	6851      	ldr	r1, [r2, #4]
 8012dd0:	ab0c      	add	r3, sp, #48	; 0x30
 8012dd2:	c303      	stmia	r3!, {r0, r1}
 8012dd4:	a80a      	add	r0, sp, #40	; 0x28
 8012dd6:	f7f9 fc17 	bl	800c608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012dda:	4631      	mov	r1, r6
 8012ddc:	a80c      	add	r0, sp, #48	; 0x30
 8012dde:	f7f9 fc3b 	bl	800c658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012de2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8012de6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012dea:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8012dee:	f8d8 0000 	ldr.w	r0, [r8]
 8012df2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8012df6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8012dfa:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012dfe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8012e02:	440c      	add	r4, r1
 8012e04:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8012e08:	440a      	add	r2, r1
 8012e0a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8012e0e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8012e12:	4413      	add	r3, r2
 8012e14:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012e18:	6803      	ldr	r3, [r0, #0]
 8012e1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012e1c:	4798      	blx	r3
 8012e1e:	2dff      	cmp	r5, #255	; 0xff
 8012e20:	d124      	bne.n	8012e6c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8012e22:	f010 0f01 	tst.w	r0, #1
 8012e26:	f8d8 0000 	ldr.w	r0, [r8]
 8012e2a:	d022      	beq.n	8012e72 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8012e2c:	2100      	movs	r1, #0
 8012e2e:	f8d0 c000 	ldr.w	ip, [r0]
 8012e32:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8012e36:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8012e3a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8012e3e:	f04f 0e01 	mov.w	lr, #1
 8012e42:	f8cd e018 	str.w	lr, [sp, #24]
 8012e46:	f8b9 e000 	ldrh.w	lr, [r9]
 8012e4a:	9503      	str	r5, [sp, #12]
 8012e4c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8012e50:	b2b6      	uxth	r6, r6
 8012e52:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8012e56:	9102      	str	r1, [sp, #8]
 8012e58:	b2bf      	uxth	r7, r7
 8012e5a:	9601      	str	r6, [sp, #4]
 8012e5c:	9700      	str	r7, [sp, #0]
 8012e5e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8012e62:	4621      	mov	r1, r4
 8012e64:	47a8      	blx	r5
 8012e66:	b00e      	add	sp, #56	; 0x38
 8012e68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012e6c:	f010 0f04 	tst.w	r0, #4
 8012e70:	e7d9      	b.n	8012e26 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8012e72:	6803      	ldr	r3, [r0, #0]
 8012e74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012e76:	4798      	blx	r3
 8012e78:	f8b9 3000 	ldrh.w	r3, [r9]
 8012e7c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8012e80:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8012e84:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8012e88:	fb03 1202 	mla	r2, r3, r2, r1
 8012e8c:	ebac 0c07 	sub.w	ip, ip, r7
 8012e90:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012e94:	435e      	muls	r6, r3
 8012e96:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8012e9a:	2dff      	cmp	r5, #255	; 0xff
 8012e9c:	eba3 0707 	sub.w	r7, r3, r7
 8012ea0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012ea4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8012ea8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8012eac:	d049      	beq.n	8012f42 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8012eae:	43eb      	mvns	r3, r5
 8012eb0:	fa1f f985 	uxth.w	r9, r5
 8012eb4:	b2db      	uxtb	r3, r3
 8012eb6:	42b0      	cmp	r0, r6
 8012eb8:	d266      	bcs.n	8012f88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8012eba:	eb00 0a0e 	add.w	sl, r0, lr
 8012ebe:	4550      	cmp	r0, sl
 8012ec0:	4621      	mov	r1, r4
 8012ec2:	f104 0403 	add.w	r4, r4, #3
 8012ec6:	d25b      	bcs.n	8012f80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8012ec8:	8802      	ldrh	r2, [r0, #0]
 8012eca:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8012ece:	ea4f 2822 	mov.w	r8, r2, asr #8
 8012ed2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8012ed6:	fb11 f109 	smulbb	r1, r1, r9
 8012eda:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8012ede:	10d5      	asrs	r5, r2, #3
 8012ee0:	fb08 1803 	mla	r8, r8, r3, r1
 8012ee4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8012ee8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012eec:	fb11 f109 	smulbb	r1, r1, r9
 8012ef0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8012ef4:	fb05 1503 	mla	r5, r5, r3, r1
 8012ef8:	00d2      	lsls	r2, r2, #3
 8012efa:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8012efe:	b2d2      	uxtb	r2, r2
 8012f00:	fb11 f109 	smulbb	r1, r1, r9
 8012f04:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8012f08:	fa1f f888 	uxth.w	r8, r8
 8012f0c:	fb02 1203 	mla	r2, r2, r3, r1
 8012f10:	b292      	uxth	r2, r2
 8012f12:	f108 0101 	add.w	r1, r8, #1
 8012f16:	b2ad      	uxth	r5, r5
 8012f18:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8012f1c:	1c51      	adds	r1, r2, #1
 8012f1e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8012f22:	1c69      	adds	r1, r5, #1
 8012f24:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8012f28:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8012f2c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012f30:	096d      	lsrs	r5, r5, #5
 8012f32:	ea42 0208 	orr.w	r2, r2, r8
 8012f36:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012f3a:	432a      	orrs	r2, r5
 8012f3c:	f820 2b02 	strh.w	r2, [r0], #2
 8012f40:	e7bd      	b.n	8012ebe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8012f42:	4a14      	ldr	r2, [pc, #80]	; (8012f94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8012f44:	42b0      	cmp	r0, r6
 8012f46:	d21f      	bcs.n	8012f88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8012f48:	eb00 050e 	add.w	r5, r0, lr
 8012f4c:	42a8      	cmp	r0, r5
 8012f4e:	4621      	mov	r1, r4
 8012f50:	f104 0403 	add.w	r4, r4, #3
 8012f54:	d210      	bcs.n	8012f78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8012f56:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8012f5a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8012f5e:	00db      	lsls	r3, r3, #3
 8012f60:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8012f64:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012f68:	430b      	orrs	r3, r1
 8012f6a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8012f6e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8012f72:	f820 3b02 	strh.w	r3, [r0], #2
 8012f76:	e7e9      	b.n	8012f4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8012f78:	4438      	add	r0, r7
 8012f7a:	eb01 040c 	add.w	r4, r1, ip
 8012f7e:	e7e1      	b.n	8012f44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8012f80:	4438      	add	r0, r7
 8012f82:	eb01 040c 	add.w	r4, r1, ip
 8012f86:	e796      	b.n	8012eb6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8012f88:	4b03      	ldr	r3, [pc, #12]	; (8012f98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8012f8a:	6818      	ldr	r0, [r3, #0]
 8012f8c:	6803      	ldr	r3, [r0, #0]
 8012f8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012f90:	4798      	blx	r3
 8012f92:	e768      	b.n	8012e66 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8012f94:	fffff800 	.word	0xfffff800
 8012f98:	20013508 	.word	0x20013508
 8012f9c:	20013502 	.word	0x20013502

08012fa0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8012fa0:	b570      	push	{r4, r5, r6, lr}
 8012fa2:	9c04      	ldr	r4, [sp, #16]
 8012fa4:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8012fa8:	4605      	mov	r5, r0
 8012faa:	4608      	mov	r0, r1
 8012fac:	4619      	mov	r1, r3
 8012fae:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012fb2:	2a0d      	cmp	r2, #13
 8012fb4:	d825      	bhi.n	8013002 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 8012fb6:	e8df f002 	tbb	[pc, r2]
 8012fba:	1807      	.short	0x1807
 8012fbc:	1d1d1d13 	.word	0x1d1d1d13
 8012fc0:	1d1d1d1d 	.word	0x1d1d1d1d
 8012fc4:	1d1d1d1d 	.word	0x1d1d1d1d
 8012fc8:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8012fcc:	682a      	ldr	r2, [r5, #0]
 8012fce:	68d6      	ldr	r6, [r2, #12]
 8012fd0:	4623      	mov	r3, r4
 8012fd2:	460a      	mov	r2, r1
 8012fd4:	46b4      	mov	ip, r6
 8012fd6:	4601      	mov	r1, r0
 8012fd8:	4628      	mov	r0, r5
 8012fda:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012fde:	4760      	bx	ip
 8012fe0:	4622      	mov	r2, r4
 8012fe2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012fe6:	f7ff bd8d 	b.w	8012b04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012fea:	4622      	mov	r2, r4
 8012fec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012ff0:	f7ff bede 	b.w	8012db0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8012ff4:	4b03      	ldr	r3, [pc, #12]	; (8013004 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 8012ff6:	4a04      	ldr	r2, [pc, #16]	; (8013008 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 8012ff8:	4804      	ldr	r0, [pc, #16]	; (801300c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 8012ffa:	f240 315d 	movw	r1, #861	; 0x35d
 8012ffe:	f008 fd0d 	bl	801ba1c <__assert_func>
 8013002:	bd70      	pop	{r4, r5, r6, pc}
 8013004:	0802051f 	.word	0x0802051f
 8013008:	08020c82 	.word	0x08020c82
 801300c:	080203fa 	.word	0x080203fa

08013010 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8013010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013014:	b093      	sub	sp, #76	; 0x4c
 8013016:	880e      	ldrh	r6, [r1, #0]
 8013018:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801301c:	4681      	mov	r9, r0
 801301e:	4688      	mov	r8, r1
 8013020:	4615      	mov	r5, r2
 8013022:	b136      	cbz	r6, 8013032 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 8013024:	4b70      	ldr	r3, [pc, #448]	; (80131e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8013026:	4a71      	ldr	r2, [pc, #452]	; (80131ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8013028:	4871      	ldr	r0, [pc, #452]	; (80131f0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 801302a:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 801302e:	f008 fcf5 	bl	801ba1c <__assert_func>
 8013032:	6810      	ldr	r0, [r2, #0]
 8013034:	6851      	ldr	r1, [r2, #4]
 8013036:	4f6f      	ldr	r7, [pc, #444]	; (80131f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8013038:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 80131f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 801303c:	ac0e      	add	r4, sp, #56	; 0x38
 801303e:	c403      	stmia	r4!, {r0, r1}
 8013040:	6818      	ldr	r0, [r3, #0]
 8013042:	6859      	ldr	r1, [r3, #4]
 8013044:	ac10      	add	r4, sp, #64	; 0x40
 8013046:	c403      	stmia	r4!, {r0, r1}
 8013048:	a80e      	add	r0, sp, #56	; 0x38
 801304a:	f7f9 fadd 	bl	800c608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801304e:	4629      	mov	r1, r5
 8013050:	a810      	add	r0, sp, #64	; 0x40
 8013052:	f7f9 fb01 	bl	800c658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013056:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801305a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801305e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8013062:	6838      	ldr	r0, [r7, #0]
 8013064:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8013068:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801306c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013070:	4489      	add	r9, r1
 8013072:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8013076:	440a      	add	r2, r1
 8013078:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801307c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013080:	4413      	add	r3, r2
 8013082:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8013086:	6803      	ldr	r3, [r0, #0]
 8013088:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801308a:	4798      	blx	r3
 801308c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8013090:	6838      	ldr	r0, [r7, #0]
 8013092:	d01d      	beq.n	80130d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 8013094:	6802      	ldr	r2, [r0, #0]
 8013096:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801309a:	e9cd 6608 	strd	r6, r6, [sp, #32]
 801309e:	210b      	movs	r1, #11
 80130a0:	9107      	str	r1, [sp, #28]
 80130a2:	f8bb 1000 	ldrh.w	r1, [fp]
 80130a6:	9106      	str	r1, [sp, #24]
 80130a8:	2101      	movs	r1, #1
 80130aa:	e9cd a104 	strd	sl, r1, [sp, #16]
 80130ae:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80130b2:	9103      	str	r1, [sp, #12]
 80130b4:	b2a4      	uxth	r4, r4
 80130b6:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 80130ba:	9100      	str	r1, [sp, #0]
 80130bc:	b2ad      	uxth	r5, r5
 80130be:	9502      	str	r5, [sp, #8]
 80130c0:	9401      	str	r4, [sp, #4]
 80130c2:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 80130c4:	4649      	mov	r1, r9
 80130c6:	4642      	mov	r2, r8
 80130c8:	47a0      	blx	r4
 80130ca:	b013      	add	sp, #76	; 0x4c
 80130cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130d0:	6803      	ldr	r3, [r0, #0]
 80130d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80130d4:	4798      	blx	r3
 80130d6:	f8bb 3000 	ldrh.w	r3, [fp]
 80130da:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80130de:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 80130e2:	fb03 1202 	mla	r2, r3, r2, r1
 80130e6:	435d      	muls	r5, r3
 80130e8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80130ec:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80130f0:	920c      	str	r2, [sp, #48]	; 0x30
 80130f2:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 80130f6:	1b12      	subs	r2, r2, r4
 80130f8:	920d      	str	r2, [sp, #52]	; 0x34
 80130fa:	0062      	lsls	r2, r4, #1
 80130fc:	1b1c      	subs	r4, r3, r4
 80130fe:	0063      	lsls	r3, r4, #1
 8013100:	920a      	str	r2, [sp, #40]	; 0x28
 8013102:	930b      	str	r3, [sp, #44]	; 0x2c
 8013104:	f04f 0e04 	mov.w	lr, #4
 8013108:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801310a:	4298      	cmp	r0, r3
 801310c:	d266      	bcs.n	80131dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 801310e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013110:	eb00 0b03 	add.w	fp, r0, r3
 8013114:	4558      	cmp	r0, fp
 8013116:	d25c      	bcs.n	80131d2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 8013118:	f819 3b01 	ldrb.w	r3, [r9], #1
 801311c:	fb1e e303 	smlabb	r3, lr, r3, lr
 8013120:	f858 2003 	ldr.w	r2, [r8, r3]
 8013124:	0e11      	lsrs	r1, r2, #24
 8013126:	d012      	beq.n	801314e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 8013128:	29ff      	cmp	r1, #255	; 0xff
 801312a:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801312e:	d110      	bne.n	8013152 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 8013130:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013134:	d10d      	bne.n	8013152 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 8013136:	0953      	lsrs	r3, r2, #5
 8013138:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801313c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013140:	f027 0707 	bic.w	r7, r7, #7
 8013144:	431f      	orrs	r7, r3
 8013146:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801314a:	433a      	orrs	r2, r7
 801314c:	8002      	strh	r2, [r0, #0]
 801314e:	3002      	adds	r0, #2
 8013150:	e7e0      	b.n	8013114 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 8013152:	fb0a f101 	mul.w	r1, sl, r1
 8013156:	8806      	ldrh	r6, [r0, #0]
 8013158:	1c4b      	adds	r3, r1, #1
 801315a:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801315e:	1235      	asrs	r5, r6, #8
 8013160:	10f4      	asrs	r4, r6, #3
 8013162:	121b      	asrs	r3, r3, #8
 8013164:	00f6      	lsls	r6, r6, #3
 8013166:	b299      	uxth	r1, r3
 8013168:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801316c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8013170:	b2f6      	uxtb	r6, r6
 8013172:	43db      	mvns	r3, r3
 8013174:	b2d2      	uxtb	r2, r2
 8013176:	b2db      	uxtb	r3, r3
 8013178:	fb1c fc01 	smulbb	ip, ip, r1
 801317c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8013180:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8013184:	fb12 f201 	smulbb	r2, r2, r1
 8013188:	fb05 c503 	mla	r5, r5, r3, ip
 801318c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8013190:	b2ff      	uxtb	r7, r7
 8013192:	fb06 2203 	mla	r2, r6, r3, r2
 8013196:	b2ad      	uxth	r5, r5
 8013198:	fb17 f701 	smulbb	r7, r7, r1
 801319c:	b292      	uxth	r2, r2
 801319e:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80131a2:	fb04 7403 	mla	r4, r4, r3, r7
 80131a6:	f105 0c01 	add.w	ip, r5, #1
 80131aa:	1c57      	adds	r7, r2, #1
 80131ac:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80131b0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80131b4:	b2a4      	uxth	r4, r4
 80131b6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80131ba:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80131be:	433d      	orrs	r5, r7
 80131c0:	1c67      	adds	r7, r4, #1
 80131c2:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80131c6:	0964      	lsrs	r4, r4, #5
 80131c8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80131cc:	4325      	orrs	r5, r4
 80131ce:	8005      	strh	r5, [r0, #0]
 80131d0:	e7bd      	b.n	801314e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 80131d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80131d4:	4418      	add	r0, r3
 80131d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80131d8:	4499      	add	r9, r3
 80131da:	e795      	b.n	8013108 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 80131dc:	4b05      	ldr	r3, [pc, #20]	; (80131f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 80131de:	6818      	ldr	r0, [r3, #0]
 80131e0:	6803      	ldr	r3, [r0, #0]
 80131e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80131e4:	4798      	blx	r3
 80131e6:	e770      	b.n	80130ca <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 80131e8:	080202f8 	.word	0x080202f8
 80131ec:	08020a53 	.word	0x08020a53
 80131f0:	080203fa 	.word	0x080203fa
 80131f4:	20013508 	.word	0x20013508
 80131f8:	20013502 	.word	0x20013502

080131fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80131fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013200:	4614      	mov	r4, r2
 8013202:	880a      	ldrh	r2, [r1, #0]
 8013204:	b087      	sub	sp, #28
 8013206:	2a02      	cmp	r2, #2
 8013208:	4680      	mov	r8, r0
 801320a:	460d      	mov	r5, r1
 801320c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8013210:	d006      	beq.n	8013220 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8013212:	4b63      	ldr	r3, [pc, #396]	; (80133a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 8013214:	4a63      	ldr	r2, [pc, #396]	; (80133a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8013216:	4864      	ldr	r0, [pc, #400]	; (80133a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8013218:	f240 11e1 	movw	r1, #481	; 0x1e1
 801321c:	f008 fbfe 	bl	801ba1c <__assert_func>
 8013220:	2e00      	cmp	r6, #0
 8013222:	f000 80b9 	beq.w	8013398 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 8013226:	6820      	ldr	r0, [r4, #0]
 8013228:	6861      	ldr	r1, [r4, #4]
 801322a:	af02      	add	r7, sp, #8
 801322c:	c703      	stmia	r7!, {r0, r1}
 801322e:	6818      	ldr	r0, [r3, #0]
 8013230:	6859      	ldr	r1, [r3, #4]
 8013232:	af04      	add	r7, sp, #16
 8013234:	c703      	stmia	r7!, {r0, r1}
 8013236:	a802      	add	r0, sp, #8
 8013238:	f7f9 f9e6 	bl	800c608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801323c:	4621      	mov	r1, r4
 801323e:	a804      	add	r0, sp, #16
 8013240:	f7f9 fa0a 	bl	800c658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013244:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013248:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801324c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8013250:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8013254:	fb14 2103 	smlabb	r1, r4, r3, r2
 8013258:	eb08 0401 	add.w	r4, r8, r1
 801325c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8013260:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8013264:	440a      	add	r2, r1
 8013266:	f8ad 2010 	strh.w	r2, [sp, #16]
 801326a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801326e:	4413      	add	r3, r2
 8013270:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013274:	4b4d      	ldr	r3, [pc, #308]	; (80133ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8013276:	6818      	ldr	r0, [r3, #0]
 8013278:	6803      	ldr	r3, [r0, #0]
 801327a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801327c:	4798      	blx	r3
 801327e:	4b4c      	ldr	r3, [pc, #304]	; (80133b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 8013280:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8013284:	881a      	ldrh	r2, [r3, #0]
 8013286:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801328a:	2eff      	cmp	r6, #255	; 0xff
 801328c:	fb02 c101 	mla	r1, r2, r1, ip
 8013290:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8013294:	fb02 f207 	mul.w	r2, r2, r7
 8013298:	f105 0104 	add.w	r1, r5, #4
 801329c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80132a0:	461d      	mov	r5, r3
 80132a2:	d05a      	beq.n	801335a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 80132a4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 80132a8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80132ac:	b2b6      	uxth	r6, r6
 80132ae:	fa1f fe8e 	uxth.w	lr, lr
 80132b2:	9301      	str	r3, [sp, #4]
 80132b4:	4282      	cmp	r2, r0
 80132b6:	d96a      	bls.n	801338e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 80132b8:	eb00 0b0a 	add.w	fp, r0, sl
 80132bc:	4583      	cmp	fp, r0
 80132be:	d940      	bls.n	8013342 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 80132c0:	f814 3b01 	ldrb.w	r3, [r4], #1
 80132c4:	8805      	ldrh	r5, [r0, #0]
 80132c6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80132ca:	122f      	asrs	r7, r5, #8
 80132cc:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80132d0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80132d4:	fb17 f70e 	smulbb	r7, r7, lr
 80132d8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80132dc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80132e0:	00ed      	lsls	r5, r5, #3
 80132e2:	fb0c 7c06 	mla	ip, ip, r6, r7
 80132e6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80132ea:	10df      	asrs	r7, r3, #3
 80132ec:	b2ed      	uxtb	r5, r5
 80132ee:	00db      	lsls	r3, r3, #3
 80132f0:	fa1f fc8c 	uxth.w	ip, ip
 80132f4:	fb19 f90e 	smulbb	r9, r9, lr
 80132f8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80132fc:	b2db      	uxtb	r3, r3
 80132fe:	fb15 f50e 	smulbb	r5, r5, lr
 8013302:	fb07 9706 	mla	r7, r7, r6, r9
 8013306:	fb03 5306 	mla	r3, r3, r6, r5
 801330a:	f10c 0901 	add.w	r9, ip, #1
 801330e:	b29b      	uxth	r3, r3
 8013310:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8013314:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8013318:	f103 0c01 	add.w	ip, r3, #1
 801331c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013320:	b2bf      	uxth	r7, r7
 8013322:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013326:	ea4c 0c09 	orr.w	ip, ip, r9
 801332a:	f107 0901 	add.w	r9, r7, #1
 801332e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8013332:	097f      	lsrs	r7, r7, #5
 8013334:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8013338:	ea4c 0c07 	orr.w	ip, ip, r7
 801333c:	f820 cb02 	strh.w	ip, [r0], #2
 8013340:	e7bc      	b.n	80132bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8013342:	9b01      	ldr	r3, [sp, #4]
 8013344:	881b      	ldrh	r3, [r3, #0]
 8013346:	eba3 0308 	sub.w	r3, r3, r8
 801334a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801334e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8013352:	eba3 0308 	sub.w	r3, r3, r8
 8013356:	441c      	add	r4, r3
 8013358:	e7ac      	b.n	80132b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 801335a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801335e:	4282      	cmp	r2, r0
 8013360:	d915      	bls.n	801338e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8013362:	eb00 060a 	add.w	r6, r0, sl
 8013366:	4286      	cmp	r6, r0
 8013368:	d906      	bls.n	8013378 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 801336a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801336e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8013372:	f820 3b02 	strh.w	r3, [r0], #2
 8013376:	e7f6      	b.n	8013366 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 8013378:	882b      	ldrh	r3, [r5, #0]
 801337a:	eba3 0308 	sub.w	r3, r3, r8
 801337e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013382:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8013386:	eba3 0308 	sub.w	r3, r3, r8
 801338a:	441c      	add	r4, r3
 801338c:	e7e7      	b.n	801335e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 801338e:	4b07      	ldr	r3, [pc, #28]	; (80133ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8013390:	6818      	ldr	r0, [r3, #0]
 8013392:	6803      	ldr	r3, [r0, #0]
 8013394:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013396:	4798      	blx	r3
 8013398:	b007      	add	sp, #28
 801339a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801339e:	bf00      	nop
 80133a0:	08020228 	.word	0x08020228
 80133a4:	080208bd 	.word	0x080208bd
 80133a8:	080203fa 	.word	0x080203fa
 80133ac:	20013508 	.word	0x20013508
 80133b0:	20013502 	.word	0x20013502

080133b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80133b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133b8:	f8b1 9000 	ldrh.w	r9, [r1]
 80133bc:	b091      	sub	sp, #68	; 0x44
 80133be:	f1b9 0f01 	cmp.w	r9, #1
 80133c2:	4604      	mov	r4, r0
 80133c4:	460f      	mov	r7, r1
 80133c6:	4690      	mov	r8, r2
 80133c8:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 80133cc:	d006      	beq.n	80133dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 80133ce:	4b84      	ldr	r3, [pc, #528]	; (80135e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 80133d0:	4a84      	ldr	r2, [pc, #528]	; (80135e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 80133d2:	4885      	ldr	r0, [pc, #532]	; (80135e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 80133d4:	f240 212f 	movw	r1, #559	; 0x22f
 80133d8:	f008 fb20 	bl	801ba1c <__assert_func>
 80133dc:	2d00      	cmp	r5, #0
 80133de:	d04f      	beq.n	8013480 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 80133e0:	6810      	ldr	r0, [r2, #0]
 80133e2:	6851      	ldr	r1, [r2, #4]
 80133e4:	f8df b208 	ldr.w	fp, [pc, #520]	; 80135f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 80133e8:	ae0c      	add	r6, sp, #48	; 0x30
 80133ea:	c603      	stmia	r6!, {r0, r1}
 80133ec:	6818      	ldr	r0, [r3, #0]
 80133ee:	6859      	ldr	r1, [r3, #4]
 80133f0:	ae0e      	add	r6, sp, #56	; 0x38
 80133f2:	c603      	stmia	r6!, {r0, r1}
 80133f4:	a80c      	add	r0, sp, #48	; 0x30
 80133f6:	f7f9 f907 	bl	800c608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80133fa:	4641      	mov	r1, r8
 80133fc:	a80e      	add	r0, sp, #56	; 0x38
 80133fe:	f7f9 f92b 	bl	800c658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013402:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8013406:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801340a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801340e:	f8db 0000 	ldr.w	r0, [fp]
 8013412:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8013416:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801341a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 80135f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 801341e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013422:	440c      	add	r4, r1
 8013424:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8013428:	440a      	add	r2, r1
 801342a:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801342e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8013432:	4413      	add	r3, r2
 8013434:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8013438:	6803      	ldr	r3, [r0, #0]
 801343a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801343c:	4798      	blx	r3
 801343e:	f010 0f80 	tst.w	r0, #128	; 0x80
 8013442:	f8db 0000 	ldr.w	r0, [fp]
 8013446:	d01e      	beq.n	8013486 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 8013448:	2200      	movs	r2, #0
 801344a:	6801      	ldr	r1, [r0, #0]
 801344c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013450:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8013454:	220b      	movs	r2, #11
 8013456:	9207      	str	r2, [sp, #28]
 8013458:	f8b8 2000 	ldrh.w	r2, [r8]
 801345c:	9504      	str	r5, [sp, #16]
 801345e:	e9cd 9205 	strd	r9, r2, [sp, #20]
 8013462:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8013466:	9203      	str	r2, [sp, #12]
 8013468:	fa1f f28a 	uxth.w	r2, sl
 801346c:	9202      	str	r2, [sp, #8]
 801346e:	b2b6      	uxth	r6, r6
 8013470:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013474:	9200      	str	r2, [sp, #0]
 8013476:	9601      	str	r6, [sp, #4]
 8013478:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801347a:	463a      	mov	r2, r7
 801347c:	4621      	mov	r1, r4
 801347e:	47a8      	blx	r5
 8013480:	b011      	add	sp, #68	; 0x44
 8013482:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013486:	6803      	ldr	r3, [r0, #0]
 8013488:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801348a:	4798      	blx	r3
 801348c:	f8b8 2000 	ldrh.w	r2, [r8]
 8013490:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8013494:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8013498:	2dff      	cmp	r5, #255	; 0xff
 801349a:	fb02 1303 	mla	r3, r2, r3, r1
 801349e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80134a2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80134a6:	fb0a fa02 	mul.w	sl, sl, r2
 80134aa:	d062      	beq.n	8013572 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 80134ac:	ea6f 0c05 	mvn.w	ip, r5
 80134b0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80134b4:	930a      	str	r3, [sp, #40]	; 0x28
 80134b6:	b2ad      	uxth	r5, r5
 80134b8:	fa5f fc8c 	uxtb.w	ip, ip
 80134bc:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80134c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80134c2:	4298      	cmp	r0, r3
 80134c4:	f080 8085 	bcs.w	80135d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80134c8:	eb00 0b09 	add.w	fp, r0, r9
 80134cc:	4558      	cmp	r0, fp
 80134ce:	d246      	bcs.n	801355e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80134d0:	f814 eb01 	ldrb.w	lr, [r4], #1
 80134d4:	2303      	movs	r3, #3
 80134d6:	2204      	movs	r2, #4
 80134d8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80134dc:	eb07 0a0e 	add.w	sl, r7, lr
 80134e0:	8803      	ldrh	r3, [r0, #0]
 80134e2:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80134e6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80134ea:	1219      	asrs	r1, r3, #8
 80134ec:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80134f0:	fb18 f805 	smulbb	r8, r8, r5
 80134f4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80134f8:	10da      	asrs	r2, r3, #3
 80134fa:	fb01 810c 	mla	r1, r1, ip, r8
 80134fe:	00db      	lsls	r3, r3, #3
 8013500:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8013504:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8013508:	b2db      	uxtb	r3, r3
 801350a:	fb18 f805 	smulbb	r8, r8, r5
 801350e:	fb1e fe05 	smulbb	lr, lr, r5
 8013512:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8013516:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801351a:	b289      	uxth	r1, r1
 801351c:	fb02 820c 	mla	r2, r2, ip, r8
 8013520:	fb03 e30c 	mla	r3, r3, ip, lr
 8013524:	b292      	uxth	r2, r2
 8013526:	b29b      	uxth	r3, r3
 8013528:	f101 0801 	add.w	r8, r1, #1
 801352c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8013530:	f103 0e01 	add.w	lr, r3, #1
 8013534:	f102 0801 	add.w	r8, r2, #1
 8013538:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801353c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8013540:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8013544:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8013548:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801354c:	ea4e 0101 	orr.w	r1, lr, r1
 8013550:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013554:	ea41 0108 	orr.w	r1, r1, r8
 8013558:	f820 1b02 	strh.w	r1, [r0], #2
 801355c:	e7b6      	b.n	80134cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 801355e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013560:	881b      	ldrh	r3, [r3, #0]
 8013562:	1b9b      	subs	r3, r3, r6
 8013564:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013568:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801356c:	1b9b      	subs	r3, r3, r6
 801356e:	441c      	add	r4, r3
 8013570:	e7a6      	b.n	80134c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 8013572:	491e      	ldr	r1, [pc, #120]	; (80135ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 8013574:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8013578:	2203      	movs	r2, #3
 801357a:	2504      	movs	r5, #4
 801357c:	4550      	cmp	r0, sl
 801357e:	d228      	bcs.n	80135d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8013580:	eb00 0c09 	add.w	ip, r0, r9
 8013584:	4560      	cmp	r0, ip
 8013586:	4623      	mov	r3, r4
 8013588:	d219      	bcs.n	80135be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801358a:	f893 e000 	ldrb.w	lr, [r3]
 801358e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8013592:	eb07 0b0e 	add.w	fp, r7, lr
 8013596:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801359a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801359e:	f89b b001 	ldrb.w	fp, [fp, #1]
 80135a2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80135a6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80135aa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80135ae:	ea43 030b 	orr.w	r3, r3, fp
 80135b2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80135b6:	3401      	adds	r4, #1
 80135b8:	f820 3b02 	strh.w	r3, [r0], #2
 80135bc:	e7e2      	b.n	8013584 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 80135be:	f8b8 3000 	ldrh.w	r3, [r8]
 80135c2:	1b9b      	subs	r3, r3, r6
 80135c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80135c8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80135cc:	1b9b      	subs	r3, r3, r6
 80135ce:	441c      	add	r4, r3
 80135d0:	e7d4      	b.n	801357c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 80135d2:	4b07      	ldr	r3, [pc, #28]	; (80135f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 80135d4:	6818      	ldr	r0, [r3, #0]
 80135d6:	6803      	ldr	r3, [r0, #0]
 80135d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80135da:	4798      	blx	r3
 80135dc:	e750      	b.n	8013480 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 80135de:	bf00      	nop
 80135e0:	08020276 	.word	0x08020276
 80135e4:	08020946 	.word	0x08020946
 80135e8:	080203fa 	.word	0x080203fa
 80135ec:	fffff800 	.word	0xfffff800
 80135f0:	20013508 	.word	0x20013508
 80135f4:	20013502 	.word	0x20013502

080135f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80135f8:	b430      	push	{r4, r5}
 80135fa:	780d      	ldrb	r5, [r1, #0]
 80135fc:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8013600:	2d01      	cmp	r5, #1
 8013602:	d00a      	beq.n	801361a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8013604:	d305      	bcc.n	8013612 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8013606:	2d02      	cmp	r5, #2
 8013608:	d10b      	bne.n	8013622 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801360a:	9402      	str	r4, [sp, #8]
 801360c:	bc30      	pop	{r4, r5}
 801360e:	f7ff bdf5 	b.w	80131fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8013612:	9402      	str	r4, [sp, #8]
 8013614:	bc30      	pop	{r4, r5}
 8013616:	f7ff bcfb 	b.w	8013010 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801361a:	9402      	str	r4, [sp, #8]
 801361c:	bc30      	pop	{r4, r5}
 801361e:	f7ff bec9 	b.w	80133b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8013622:	bc30      	pop	{r4, r5}
 8013624:	4770      	bx	lr
	...

08013628 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8013628:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801362c:	4604      	mov	r4, r0
 801362e:	b087      	sub	sp, #28
 8013630:	6810      	ldr	r0, [r2, #0]
 8013632:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8013636:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8013870 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801363a:	460e      	mov	r6, r1
 801363c:	6851      	ldr	r1, [r2, #4]
 801363e:	ad02      	add	r5, sp, #8
 8013640:	c503      	stmia	r5!, {r0, r1}
 8013642:	6818      	ldr	r0, [r3, #0]
 8013644:	6859      	ldr	r1, [r3, #4]
 8013646:	ad04      	add	r5, sp, #16
 8013648:	4617      	mov	r7, r2
 801364a:	c503      	stmia	r5!, {r0, r1}
 801364c:	a802      	add	r0, sp, #8
 801364e:	f7f8 ffdb 	bl	800c608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013652:	4639      	mov	r1, r7
 8013654:	a804      	add	r0, sp, #16
 8013656:	f7f8 ffff 	bl	800c658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801365a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801365e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013662:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8013666:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801366a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801366e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013672:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8013676:	440e      	add	r6, r1
 8013678:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801367c:	440a      	add	r2, r1
 801367e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013682:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013686:	4413      	add	r3, r2
 8013688:	f8ad 3012 	strh.w	r3, [sp, #18]
 801368c:	4b77      	ldr	r3, [pc, #476]	; (801386c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801368e:	6818      	ldr	r0, [r3, #0]
 8013690:	6803      	ldr	r3, [r0, #0]
 8013692:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013694:	4798      	blx	r3
 8013696:	f8b9 b000 	ldrh.w	fp, [r9]
 801369a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801369e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80136a2:	fb0b 2303 	mla	r3, fp, r3, r2
 80136a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80136aa:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80136ae:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80136b2:	fb05 f50b 	mul.w	r5, r5, fp
 80136b6:	9300      	str	r3, [sp, #0]
 80136b8:	d069      	beq.n	801378e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80136ba:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80136be:	4558      	cmp	r0, fp
 80136c0:	f080 80cc 	bcs.w	801385c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80136c4:	9b00      	ldr	r3, [sp, #0]
 80136c6:	18c3      	adds	r3, r0, r3
 80136c8:	9301      	str	r3, [sp, #4]
 80136ca:	4631      	mov	r1, r6
 80136cc:	9b01      	ldr	r3, [sp, #4]
 80136ce:	4298      	cmp	r0, r3
 80136d0:	d24f      	bcs.n	8013772 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80136d2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80136d6:	2a00      	cmp	r2, #0
 80136d8:	d048      	beq.n	801376c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80136da:	fb0a f202 	mul.w	r2, sl, r2
 80136de:	1c53      	adds	r3, r2, #1
 80136e0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80136e4:	121b      	asrs	r3, r3, #8
 80136e6:	d041      	beq.n	801376c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80136e8:	8802      	ldrh	r2, [r0, #0]
 80136ea:	f8b4 c000 	ldrh.w	ip, [r4]
 80136ee:	b29e      	uxth	r6, r3
 80136f0:	1215      	asrs	r5, r2, #8
 80136f2:	43db      	mvns	r3, r3
 80136f4:	b2db      	uxtb	r3, r3
 80136f6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80136fa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80136fe:	fb15 f503 	smulbb	r5, r5, r3
 8013702:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8013706:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801370a:	00d2      	lsls	r2, r2, #3
 801370c:	fb07 5706 	mla	r7, r7, r6, r5
 8013710:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013714:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8013718:	b2d2      	uxtb	r2, r2
 801371a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801371e:	b2bf      	uxth	r7, r7
 8013720:	fb1e fe03 	smulbb	lr, lr, r3
 8013724:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013728:	fa5f fc8c 	uxtb.w	ip, ip
 801372c:	fb12 f203 	smulbb	r2, r2, r3
 8013730:	fb05 e506 	mla	r5, r5, r6, lr
 8013734:	fb0c 2c06 	mla	ip, ip, r6, r2
 8013738:	f107 0e01 	add.w	lr, r7, #1
 801373c:	fa1f fc8c 	uxth.w	ip, ip
 8013740:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8013744:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8013748:	f10c 0701 	add.w	r7, ip, #1
 801374c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8013750:	b2ad      	uxth	r5, r5
 8013752:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013756:	ea47 070e 	orr.w	r7, r7, lr
 801375a:	f105 0e01 	add.w	lr, r5, #1
 801375e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8013762:	096d      	lsrs	r5, r5, #5
 8013764:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013768:	432f      	orrs	r7, r5
 801376a:	8007      	strh	r7, [r0, #0]
 801376c:	3002      	adds	r0, #2
 801376e:	3402      	adds	r4, #2
 8013770:	e7ac      	b.n	80136cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8013772:	f8b9 3000 	ldrh.w	r3, [r9]
 8013776:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801377a:	eba3 0308 	sub.w	r3, r3, r8
 801377e:	eba6 0608 	sub.w	r6, r6, r8
 8013782:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013786:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801378a:	440e      	add	r6, r1
 801378c:	e797      	b.n	80136be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801378e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013792:	42a8      	cmp	r0, r5
 8013794:	d262      	bcs.n	801385c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8013796:	9b00      	ldr	r3, [sp, #0]
 8013798:	4631      	mov	r1, r6
 801379a:	eb00 0b03 	add.w	fp, r0, r3
 801379e:	4558      	cmp	r0, fp
 80137a0:	d24e      	bcs.n	8013840 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80137a2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80137a6:	b12b      	cbz	r3, 80137b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80137a8:	2bff      	cmp	r3, #255	; 0xff
 80137aa:	f8b4 e000 	ldrh.w	lr, [r4]
 80137ae:	d104      	bne.n	80137ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80137b0:	f8a0 e000 	strh.w	lr, [r0]
 80137b4:	3002      	adds	r0, #2
 80137b6:	3402      	adds	r4, #2
 80137b8:	e7f1      	b.n	801379e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80137ba:	8802      	ldrh	r2, [r0, #0]
 80137bc:	b29f      	uxth	r7, r3
 80137be:	1216      	asrs	r6, r2, #8
 80137c0:	43db      	mvns	r3, r3
 80137c2:	b2db      	uxtb	r3, r3
 80137c4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80137c8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80137cc:	fb16 f603 	smulbb	r6, r6, r3
 80137d0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80137d4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80137d8:	00d2      	lsls	r2, r2, #3
 80137da:	fb0c 6c07 	mla	ip, ip, r7, r6
 80137de:	b2d2      	uxtb	r2, r2
 80137e0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80137e4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80137e8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80137ec:	fb1a fa03 	smulbb	sl, sl, r3
 80137f0:	fa1f fc8c 	uxth.w	ip, ip
 80137f4:	fb12 f303 	smulbb	r3, r2, r3
 80137f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80137fc:	fa5f fe8e 	uxtb.w	lr, lr
 8013800:	fb06 a607 	mla	r6, r6, r7, sl
 8013804:	f10c 0201 	add.w	r2, ip, #1
 8013808:	fb0e 3307 	mla	r3, lr, r7, r3
 801380c:	b2b6      	uxth	r6, r6
 801380e:	b29b      	uxth	r3, r3
 8013810:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8013814:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8013818:	f106 0a01 	add.w	sl, r6, #1
 801381c:	f103 0c01 	add.w	ip, r3, #1
 8013820:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013824:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8013828:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801382c:	0976      	lsrs	r6, r6, #5
 801382e:	ea4c 0c02 	orr.w	ip, ip, r2
 8013832:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013836:	ea4c 0c06 	orr.w	ip, ip, r6
 801383a:	f8a0 c000 	strh.w	ip, [r0]
 801383e:	e7b9      	b.n	80137b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8013840:	f8b9 3000 	ldrh.w	r3, [r9]
 8013844:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013848:	eba3 0308 	sub.w	r3, r3, r8
 801384c:	eba6 0608 	sub.w	r6, r6, r8
 8013850:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013854:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013858:	440e      	add	r6, r1
 801385a:	e79a      	b.n	8013792 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801385c:	4b03      	ldr	r3, [pc, #12]	; (801386c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801385e:	6818      	ldr	r0, [r3, #0]
 8013860:	6803      	ldr	r3, [r0, #0]
 8013862:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013864:	4798      	blx	r3
 8013866:	b007      	add	sp, #28
 8013868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801386c:	20013508 	.word	0x20013508
 8013870:	20013502 	.word	0x20013502

08013874 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8013874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013878:	b089      	sub	sp, #36	; 0x24
 801387a:	4682      	mov	sl, r0
 801387c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8013880:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013882:	460f      	mov	r7, r1
 8013884:	4691      	mov	r9, r2
 8013886:	4698      	mov	r8, r3
 8013888:	2e00      	cmp	r6, #0
 801388a:	d03d      	beq.n	8013908 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801388c:	4608      	mov	r0, r1
 801388e:	f7fc f859 	bl	800f944 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013892:	4605      	mov	r5, r0
 8013894:	4638      	mov	r0, r7
 8013896:	f7fc f88f 	bl	800f9b8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801389a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801389e:	4638      	mov	r0, r7
 80138a0:	f8ad 9008 	strh.w	r9, [sp, #8]
 80138a4:	f8ad 500c 	strh.w	r5, [sp, #12]
 80138a8:	f8ad 800a 	strh.w	r8, [sp, #10]
 80138ac:	f7fc f952 	bl	800fb54 <_ZNK8touchgfx6Bitmap7getDataEv>
 80138b0:	4605      	mov	r5, r0
 80138b2:	4638      	mov	r0, r7
 80138b4:	f7fc f980 	bl	800fbb8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80138b8:	4681      	mov	r9, r0
 80138ba:	4638      	mov	r0, r7
 80138bc:	f7fc f9d4 	bl	800fc68 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80138c0:	280b      	cmp	r0, #11
 80138c2:	f200 816f 	bhi.w	8013ba4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 80138c6:	e8df f010 	tbh	[pc, r0, lsl #1]
 80138ca:	00c3      	.short	0x00c3
 80138cc:	000c00b4 	.word	0x000c00b4
 80138d0:	016d016d 	.word	0x016d016d
 80138d4:	016d016d 	.word	0x016d016d
 80138d8:	016d016d 	.word	0x016d016d
 80138dc:	016d016d 	.word	0x016d016d
 80138e0:	00bb      	.short	0x00bb
 80138e2:	4bb3      	ldr	r3, [pc, #716]	; (8013bb0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 80138e4:	6818      	ldr	r0, [r3, #0]
 80138e6:	6803      	ldr	r3, [r0, #0]
 80138e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80138ea:	4798      	blx	r3
 80138ec:	2eff      	cmp	r6, #255	; 0xff
 80138ee:	d121      	bne.n	8013934 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80138f0:	0683      	lsls	r3, r0, #26
 80138f2:	d41f      	bmi.n	8013934 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80138f4:	4638      	mov	r0, r7
 80138f6:	f7fc f8f3 	bl	800fae0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80138fa:	b940      	cbnz	r0, 801390e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 80138fc:	4623      	mov	r3, r4
 80138fe:	aa02      	add	r2, sp, #8
 8013900:	4629      	mov	r1, r5
 8013902:	4650      	mov	r0, sl
 8013904:	f7ff f9e4 	bl	8012cd0 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8013908:	b009      	add	sp, #36	; 0x24
 801390a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801390e:	f10d 0818 	add.w	r8, sp, #24
 8013912:	4639      	mov	r1, r7
 8013914:	4640      	mov	r0, r8
 8013916:	f7fc f889 	bl	800fa2c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801391a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801391e:	af04      	add	r7, sp, #16
 8013920:	e887 0003 	stmia.w	r7, {r0, r1}
 8013924:	4638      	mov	r0, r7
 8013926:	4621      	mov	r1, r4
 8013928:	f7f5 ff36 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 801392c:	4638      	mov	r0, r7
 801392e:	f7f5 ff76 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 8013932:	b130      	cbz	r0, 8013942 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 8013934:	4633      	mov	r3, r6
 8013936:	4622      	mov	r2, r4
 8013938:	a902      	add	r1, sp, #8
 801393a:	4628      	mov	r0, r5
 801393c:	f7ff f8e2 	bl	8012b04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013940:	e7e2      	b.n	8013908 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013942:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013946:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801394a:	4293      	cmp	r3, r2
 801394c:	dd12      	ble.n	8013974 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 801394e:	1a9b      	subs	r3, r3, r2
 8013950:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013954:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013958:	f8ad 0018 	strh.w	r0, [sp, #24]
 801395c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013960:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013964:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013968:	4642      	mov	r2, r8
 801396a:	4633      	mov	r3, r6
 801396c:	a902      	add	r1, sp, #8
 801396e:	4628      	mov	r0, r5
 8013970:	f7ff f8c8 	bl	8012b04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013974:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013978:	f9b4 2000 	ldrsh.w	r2, [r4]
 801397c:	4293      	cmp	r3, r2
 801397e:	dd12      	ble.n	80139a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 8013980:	1a9b      	subs	r3, r3, r2
 8013982:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013986:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801398a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801398e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013992:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013996:	f8ad 101e 	strh.w	r1, [sp, #30]
 801399a:	23ff      	movs	r3, #255	; 0xff
 801399c:	4642      	mov	r2, r8
 801399e:	a902      	add	r1, sp, #8
 80139a0:	4628      	mov	r0, r5
 80139a2:	f7ff f8af 	bl	8012b04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80139a6:	463b      	mov	r3, r7
 80139a8:	aa02      	add	r2, sp, #8
 80139aa:	4629      	mov	r1, r5
 80139ac:	4650      	mov	r0, sl
 80139ae:	f7ff f98f 	bl	8012cd0 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80139b2:	88a2      	ldrh	r2, [r4, #4]
 80139b4:	8823      	ldrh	r3, [r4, #0]
 80139b6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80139ba:	4413      	add	r3, r2
 80139bc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80139c0:	440a      	add	r2, r1
 80139c2:	b29b      	uxth	r3, r3
 80139c4:	b292      	uxth	r2, r2
 80139c6:	b211      	sxth	r1, r2
 80139c8:	b218      	sxth	r0, r3
 80139ca:	4288      	cmp	r0, r1
 80139cc:	dd12      	ble.n	80139f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 80139ce:	1a9b      	subs	r3, r3, r2
 80139d0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80139d4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80139d8:	f8ad 1018 	strh.w	r1, [sp, #24]
 80139dc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80139e0:	f8ad 001e 	strh.w	r0, [sp, #30]
 80139e4:	23ff      	movs	r3, #255	; 0xff
 80139e6:	4642      	mov	r2, r8
 80139e8:	a902      	add	r1, sp, #8
 80139ea:	4628      	mov	r0, r5
 80139ec:	f8ad 601a 	strh.w	r6, [sp, #26]
 80139f0:	f7ff f888 	bl	8012b04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80139f4:	88e2      	ldrh	r2, [r4, #6]
 80139f6:	8863      	ldrh	r3, [r4, #2]
 80139f8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80139fc:	4413      	add	r3, r2
 80139fe:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013a02:	440a      	add	r2, r1
 8013a04:	b29b      	uxth	r3, r3
 8013a06:	b292      	uxth	r2, r2
 8013a08:	b211      	sxth	r1, r2
 8013a0a:	b218      	sxth	r0, r3
 8013a0c:	4288      	cmp	r0, r1
 8013a0e:	f77f af7b 	ble.w	8013908 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013a12:	1a9b      	subs	r3, r3, r2
 8013a14:	f9b4 6000 	ldrsh.w	r6, [r4]
 8013a18:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013a1c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013a20:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013a24:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013a28:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013a2c:	23ff      	movs	r3, #255	; 0xff
 8013a2e:	4642      	mov	r2, r8
 8013a30:	e782      	b.n	8013938 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 8013a32:	4633      	mov	r3, r6
 8013a34:	4622      	mov	r2, r4
 8013a36:	a902      	add	r1, sp, #8
 8013a38:	4628      	mov	r0, r5
 8013a3a:	f7ff f9b9 	bl	8012db0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8013a3e:	e763      	b.n	8013908 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013a40:	9600      	str	r6, [sp, #0]
 8013a42:	4623      	mov	r3, r4
 8013a44:	aa02      	add	r2, sp, #8
 8013a46:	4649      	mov	r1, r9
 8013a48:	4628      	mov	r0, r5
 8013a4a:	f7ff fdd5 	bl	80135f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8013a4e:	e75b      	b.n	8013908 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013a50:	4638      	mov	r0, r7
 8013a52:	f7fc f845 	bl	800fae0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013a56:	b950      	cbnz	r0, 8013a6e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 8013a58:	e9cd 6000 	strd	r6, r0, [sp]
 8013a5c:	f8da 3000 	ldr.w	r3, [sl]
 8013a60:	aa02      	add	r2, sp, #8
 8013a62:	68de      	ldr	r6, [r3, #12]
 8013a64:	4629      	mov	r1, r5
 8013a66:	4623      	mov	r3, r4
 8013a68:	4650      	mov	r0, sl
 8013a6a:	47b0      	blx	r6
 8013a6c:	e74c      	b.n	8013908 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013a6e:	f10d 0818 	add.w	r8, sp, #24
 8013a72:	4639      	mov	r1, r7
 8013a74:	4640      	mov	r0, r8
 8013a76:	f7fb ffd9 	bl	800fa2c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013a7a:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013a7e:	af04      	add	r7, sp, #16
 8013a80:	e887 0003 	stmia.w	r7, {r0, r1}
 8013a84:	4638      	mov	r0, r7
 8013a86:	4621      	mov	r1, r4
 8013a88:	f7f5 fe86 	bl	8009798 <_ZN8touchgfx4RectaNERKS0_>
 8013a8c:	4638      	mov	r0, r7
 8013a8e:	f7f5 fec6 	bl	800981e <_ZNK8touchgfx4Rect7isEmptyEv>
 8013a92:	b138      	cbz	r0, 8013aa4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8013a94:	9600      	str	r6, [sp, #0]
 8013a96:	4623      	mov	r3, r4
 8013a98:	aa02      	add	r2, sp, #8
 8013a9a:	4649      	mov	r1, r9
 8013a9c:	4628      	mov	r0, r5
 8013a9e:	f7ff fdc3 	bl	8013628 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013aa2:	e731      	b.n	8013908 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013aa4:	e9cd 6000 	strd	r6, r0, [sp]
 8013aa8:	f8da 3000 	ldr.w	r3, [sl]
 8013aac:	aa02      	add	r2, sp, #8
 8013aae:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8013ab2:	4629      	mov	r1, r5
 8013ab4:	463b      	mov	r3, r7
 8013ab6:	4650      	mov	r0, sl
 8013ab8:	47d8      	blx	fp
 8013aba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013abe:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013ac2:	4293      	cmp	r3, r2
 8013ac4:	dd13      	ble.n	8013aee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 8013ac6:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013aca:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013ace:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013ad2:	1a9b      	subs	r3, r3, r2
 8013ad4:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013ad8:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013adc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013ae0:	9600      	str	r6, [sp, #0]
 8013ae2:	4643      	mov	r3, r8
 8013ae4:	aa02      	add	r2, sp, #8
 8013ae6:	4649      	mov	r1, r9
 8013ae8:	4628      	mov	r0, r5
 8013aea:	f7ff fd9d 	bl	8013628 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013aee:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013af2:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013af6:	4293      	cmp	r3, r2
 8013af8:	dd13      	ble.n	8013b22 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 8013afa:	1a9b      	subs	r3, r3, r2
 8013afc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013b00:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013b04:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013b08:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013b0c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013b10:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013b14:	9600      	str	r6, [sp, #0]
 8013b16:	4643      	mov	r3, r8
 8013b18:	aa02      	add	r2, sp, #8
 8013b1a:	4649      	mov	r1, r9
 8013b1c:	4628      	mov	r0, r5
 8013b1e:	f7ff fd83 	bl	8013628 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013b22:	88a2      	ldrh	r2, [r4, #4]
 8013b24:	8823      	ldrh	r3, [r4, #0]
 8013b26:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013b2a:	4413      	add	r3, r2
 8013b2c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013b30:	440a      	add	r2, r1
 8013b32:	b29b      	uxth	r3, r3
 8013b34:	b292      	uxth	r2, r2
 8013b36:	b211      	sxth	r1, r2
 8013b38:	b218      	sxth	r0, r3
 8013b3a:	4288      	cmp	r0, r1
 8013b3c:	dd13      	ble.n	8013b66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 8013b3e:	1a9b      	subs	r3, r3, r2
 8013b40:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013b44:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8013b48:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013b4c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013b50:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013b54:	9600      	str	r6, [sp, #0]
 8013b56:	4643      	mov	r3, r8
 8013b58:	aa02      	add	r2, sp, #8
 8013b5a:	4649      	mov	r1, r9
 8013b5c:	4628      	mov	r0, r5
 8013b5e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013b62:	f7ff fd61 	bl	8013628 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013b66:	88e2      	ldrh	r2, [r4, #6]
 8013b68:	8863      	ldrh	r3, [r4, #2]
 8013b6a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013b6e:	4413      	add	r3, r2
 8013b70:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013b74:	440a      	add	r2, r1
 8013b76:	b29b      	uxth	r3, r3
 8013b78:	b292      	uxth	r2, r2
 8013b7a:	b211      	sxth	r1, r2
 8013b7c:	b218      	sxth	r0, r3
 8013b7e:	4288      	cmp	r0, r1
 8013b80:	f77f aec2 	ble.w	8013908 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013b84:	f9b4 7000 	ldrsh.w	r7, [r4]
 8013b88:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013b8c:	f8ad 7018 	strh.w	r7, [sp, #24]
 8013b90:	1a9b      	subs	r3, r3, r2
 8013b92:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013b96:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013b9a:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013b9e:	9600      	str	r6, [sp, #0]
 8013ba0:	4643      	mov	r3, r8
 8013ba2:	e779      	b.n	8013a98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8013ba4:	4b03      	ldr	r3, [pc, #12]	; (8013bb4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 8013ba6:	4a04      	ldr	r2, [pc, #16]	; (8013bb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 8013ba8:	4804      	ldr	r0, [pc, #16]	; (8013bbc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 8013baa:	21b4      	movs	r1, #180	; 0xb4
 8013bac:	f007 ff36 	bl	801ba1c <__assert_func>
 8013bb0:	20013508 	.word	0x20013508
 8013bb4:	080202c4 	.word	0x080202c4
 8013bb8:	080209cf 	.word	0x080209cf
 8013bbc:	080203fa 	.word	0x080203fa

08013bc0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8013bc0:	b508      	push	{r3, lr}
 8013bc2:	b180      	cbz	r0, 8013be6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8013bc4:	2902      	cmp	r1, #2
 8013bc6:	d014      	beq.n	8013bf2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8013bc8:	2903      	cmp	r1, #3
 8013bca:	d01d      	beq.n	8013c08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013bcc:	2901      	cmp	r1, #1
 8013bce:	d101      	bne.n	8013bd4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013bd0:	2001      	movs	r0, #1
 8013bd2:	bd08      	pop	{r3, pc}
 8013bd4:	4b0e      	ldr	r3, [pc, #56]	; (8013c10 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013bd6:	8818      	ldrh	r0, [r3, #0]
 8013bd8:	b990      	cbnz	r0, 8013c00 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8013bda:	4b0e      	ldr	r3, [pc, #56]	; (8013c14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8013bdc:	4a0e      	ldr	r2, [pc, #56]	; (8013c18 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8013bde:	480f      	ldr	r0, [pc, #60]	; (8013c1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8013be0:	2150      	movs	r1, #80	; 0x50
 8013be2:	f007 ff1b 	bl	801ba1c <__assert_func>
 8013be6:	2902      	cmp	r1, #2
 8013be8:	d00e      	beq.n	8013c08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013bea:	2903      	cmp	r1, #3
 8013bec:	d0f2      	beq.n	8013bd4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013bee:	2901      	cmp	r1, #1
 8013bf0:	d1ee      	bne.n	8013bd0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8013bf2:	4b07      	ldr	r3, [pc, #28]	; (8013c10 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013bf4:	8818      	ldrh	r0, [r3, #0]
 8013bf6:	2800      	cmp	r0, #0
 8013bf8:	d0ef      	beq.n	8013bda <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8013bfa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013bfe:	e7e8      	b.n	8013bd2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013c00:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013c04:	4240      	negs	r0, r0
 8013c06:	e7e4      	b.n	8013bd2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013c08:	f04f 30ff 	mov.w	r0, #4294967295
 8013c0c:	e7e1      	b.n	8013bd2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013c0e:	bf00      	nop
 8013c10:	20013502 	.word	0x20013502
 8013c14:	08020550 	.word	0x08020550
 8013c18:	08020b4c 	.word	0x08020b4c
 8013c1c:	08020592 	.word	0x08020592

08013c20 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8013c20:	b508      	push	{r3, lr}
 8013c22:	b180      	cbz	r0, 8013c46 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8013c24:	2902      	cmp	r1, #2
 8013c26:	d014      	beq.n	8013c52 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8013c28:	2903      	cmp	r1, #3
 8013c2a:	d018      	beq.n	8013c5e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013c2c:	2901      	cmp	r1, #1
 8013c2e:	d001      	beq.n	8013c34 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013c30:	2001      	movs	r0, #1
 8013c32:	e013      	b.n	8013c5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013c34:	4b0e      	ldr	r3, [pc, #56]	; (8013c70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013c36:	8818      	ldrh	r0, [r3, #0]
 8013c38:	b970      	cbnz	r0, 8013c58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8013c3a:	4b0e      	ldr	r3, [pc, #56]	; (8013c74 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8013c3c:	4a0e      	ldr	r2, [pc, #56]	; (8013c78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8013c3e:	480f      	ldr	r0, [pc, #60]	; (8013c7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8013c40:	2150      	movs	r1, #80	; 0x50
 8013c42:	f007 feeb 	bl	801ba1c <__assert_func>
 8013c46:	2902      	cmp	r1, #2
 8013c48:	d009      	beq.n	8013c5e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013c4a:	2903      	cmp	r1, #3
 8013c4c:	d0f0      	beq.n	8013c30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8013c4e:	2901      	cmp	r1, #1
 8013c50:	d1f0      	bne.n	8013c34 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013c52:	f04f 30ff 	mov.w	r0, #4294967295
 8013c56:	e001      	b.n	8013c5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013c58:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013c5c:	bd08      	pop	{r3, pc}
 8013c5e:	4b04      	ldr	r3, [pc, #16]	; (8013c70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013c60:	8818      	ldrh	r0, [r3, #0]
 8013c62:	2800      	cmp	r0, #0
 8013c64:	d0e9      	beq.n	8013c3a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8013c66:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013c6a:	4240      	negs	r0, r0
 8013c6c:	e7f6      	b.n	8013c5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013c6e:	bf00      	nop
 8013c70:	20013502 	.word	0x20013502
 8013c74:	08020550 	.word	0x08020550
 8013c78:	08020b4c 	.word	0x08020b4c
 8013c7c:	08020592 	.word	0x08020592

08013c80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8013c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c84:	b099      	sub	sp, #100	; 0x64
 8013c86:	910b      	str	r1, [sp, #44]	; 0x2c
 8013c88:	a914      	add	r1, sp, #80	; 0x50
 8013c8a:	e881 000c 	stmia.w	r1, {r2, r3}
 8013c8e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8013c92:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8013c96:	930a      	str	r3, [sp, #40]	; 0x28
 8013c98:	f891 900d 	ldrb.w	r9, [r1, #13]
 8013c9c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8013ca0:	9311      	str	r3, [sp, #68]	; 0x44
 8013ca2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8013ca6:	930c      	str	r3, [sp, #48]	; 0x30
 8013ca8:	7988      	ldrb	r0, [r1, #6]
 8013caa:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8013cae:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8013cb2:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8013cb6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8013cba:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8013cbe:	ea4f 1349 	mov.w	r3, r9, lsl #5
 8013cc2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013cc6:	4303      	orrs	r3, r0
 8013cc8:	9309      	str	r3, [sp, #36]	; 0x24
 8013cca:	f000 81a1 	beq.w	8014010 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013cce:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8013cd2:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8013cd6:	f891 9007 	ldrb.w	r9, [r1, #7]
 8013cda:	ea59 0903 	orrs.w	r9, r9, r3
 8013cde:	f000 8197 	beq.w	8014010 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013ce2:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8013ce6:	b29b      	uxth	r3, r3
 8013ce8:	2e00      	cmp	r6, #0
 8013cea:	f000 813a 	beq.w	8013f62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8013cee:	1af6      	subs	r6, r6, r3
 8013cf0:	b2b6      	uxth	r6, r6
 8013cf2:	0433      	lsls	r3, r6, #16
 8013cf4:	d502      	bpl.n	8013cfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8013cf6:	1bad      	subs	r5, r5, r6
 8013cf8:	b22d      	sxth	r5, r5
 8013cfa:	2600      	movs	r6, #0
 8013cfc:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013d00:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8013d04:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8013d08:	428d      	cmp	r5, r1
 8013d0a:	b28b      	uxth	r3, r1
 8013d0c:	bfbf      	itttt	lt
 8013d0e:	18f6      	addlt	r6, r6, r3
 8013d10:	1b75      	sublt	r5, r6, r5
 8013d12:	b2ae      	uxthlt	r6, r5
 8013d14:	460d      	movlt	r5, r1
 8013d16:	8891      	ldrh	r1, [r2, #4]
 8013d18:	440b      	add	r3, r1
 8013d1a:	b21b      	sxth	r3, r3
 8013d1c:	9310      	str	r3, [sp, #64]	; 0x40
 8013d1e:	88d3      	ldrh	r3, [r2, #6]
 8013d20:	8852      	ldrh	r2, [r2, #2]
 8013d22:	4413      	add	r3, r2
 8013d24:	b21b      	sxth	r3, r3
 8013d26:	930f      	str	r3, [sp, #60]	; 0x3c
 8013d28:	4bbc      	ldr	r3, [pc, #752]	; (801401c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8013d2a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013d2c:	f893 b000 	ldrb.w	fp, [r3]
 8013d30:	f10b 3cff 	add.w	ip, fp, #4294967295
 8013d34:	f1dc 0300 	rsbs	r3, ip, #0
 8013d38:	eb43 030c 	adc.w	r3, r3, ip
 8013d3c:	930e      	str	r3, [sp, #56]	; 0x38
 8013d3e:	4629      	mov	r1, r5
 8013d40:	4653      	mov	r3, sl
 8013d42:	a814      	add	r0, sp, #80	; 0x50
 8013d44:	f7f8 fae5 	bl	800c312 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8013d48:	4629      	mov	r1, r5
 8013d4a:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8013d4e:	4653      	mov	r3, sl
 8013d50:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013d52:	a814      	add	r0, sp, #80	; 0x50
 8013d54:	f7f8 faf5 	bl	800c342 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8013d58:	a918      	add	r1, sp, #96	; 0x60
 8013d5a:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8013d5e:	a817      	add	r0, sp, #92	; 0x5c
 8013d60:	f7f8 fc10 	bl	800c584 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8013d64:	f1ba 0f00 	cmp.w	sl, #0
 8013d68:	f040 80fe 	bne.w	8013f68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8013d6c:	f1bb 0f01 	cmp.w	fp, #1
 8013d70:	f040 8102 	bne.w	8013f78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 8013d74:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013d76:	b153      	cbz	r3, 8013d8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8013d78:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013d7a:	2408      	movs	r4, #8
 8013d7c:	fb94 f3f8 	sdiv	r3, r4, r8
 8013d80:	1e5c      	subs	r4, r3, #1
 8013d82:	4414      	add	r4, r2
 8013d84:	fb94 f4f3 	sdiv	r4, r4, r3
 8013d88:	fb14 f403 	smulbb	r4, r4, r3
 8013d8c:	b2a4      	uxth	r4, r4
 8013d8e:	b906      	cbnz	r6, 8013d92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8013d90:	b16f      	cbz	r7, 8013dae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 8013d92:	fb07 6304 	mla	r3, r7, r4, r6
 8013d96:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013d98:	fb08 f303 	mul.w	r3, r8, r3
 8013d9c:	463a      	mov	r2, r7
 8013d9e:	f003 0707 	and.w	r7, r3, #7
 8013da2:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 8013da6:	9328      	str	r3, [sp, #160]	; 0xa0
 8013da8:	eba9 0302 	sub.w	r3, r9, r2
 8013dac:	930d      	str	r3, [sp, #52]	; 0x34
 8013dae:	4651      	mov	r1, sl
 8013db0:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013db2:	f7ff ff05 	bl	8013bc0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8013db6:	4651      	mov	r1, sl
 8013db8:	4681      	mov	r9, r0
 8013dba:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013dbc:	f7ff ff30 	bl	8013c20 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8013dc0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013dc2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013dc4:	eba3 0a02 	sub.w	sl, r3, r2
 8013dc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013dca:	459a      	cmp	sl, r3
 8013dcc:	bfa8      	it	ge
 8013dce:	469a      	movge	sl, r3
 8013dd0:	f1ba 0f00 	cmp.w	sl, #0
 8013dd4:	4683      	mov	fp, r0
 8013dd6:	f340 811b 	ble.w	8014010 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013dda:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013ddc:	1bad      	subs	r5, r5, r6
 8013dde:	1b5d      	subs	r5, r3, r5
 8013de0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013de2:	429d      	cmp	r5, r3
 8013de4:	bfd4      	ite	le
 8013de6:	ebc6 0605 	rsble	r6, r6, r5
 8013dea:	ebc6 0603 	rsbgt	r6, r6, r3
 8013dee:	2e00      	cmp	r6, #0
 8013df0:	f340 810e 	ble.w	8014010 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013df4:	1ba4      	subs	r4, r4, r6
 8013df6:	fb08 f304 	mul.w	r3, r8, r4
 8013dfa:	930f      	str	r3, [sp, #60]	; 0x3c
 8013dfc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013dfe:	2b00      	cmp	r3, #0
 8013e00:	f040 8114 	bne.w	801402c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8013e04:	4b86      	ldr	r3, [pc, #536]	; (8014020 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8013e06:	6818      	ldr	r0, [r3, #0]
 8013e08:	6803      	ldr	r3, [r0, #0]
 8013e0a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013e0c:	4798      	blx	r3
 8013e0e:	2301      	movs	r3, #1
 8013e10:	fa03 f308 	lsl.w	r3, r3, r8
 8013e14:	4a83      	ldr	r2, [pc, #524]	; (8014024 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8013e16:	3b01      	subs	r3, #1
 8013e18:	b2db      	uxtb	r3, r3
 8013e1a:	8811      	ldrh	r1, [r2, #0]
 8013e1c:	930e      	str	r3, [sp, #56]	; 0x38
 8013e1e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8013e22:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8013e26:	fb01 2303 	mla	r3, r1, r3, r2
 8013e2a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013e2e:	930a      	str	r3, [sp, #40]	; 0x28
 8013e30:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013e32:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8013e36:	9313      	str	r3, [sp, #76]	; 0x4c
 8013e38:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013e3a:	0a19      	lsrs	r1, r3, #8
 8013e3c:	b2cb      	uxtb	r3, r1
 8013e3e:	9312      	str	r3, [sp, #72]	; 0x48
 8013e40:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013e42:	b2db      	uxtb	r3, r3
 8013e44:	9311      	str	r3, [sp, #68]	; 0x44
 8013e46:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013e48:	095a      	lsrs	r2, r3, #5
 8013e4a:	4b77      	ldr	r3, [pc, #476]	; (8014028 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8013e4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013e50:	400b      	ands	r3, r1
 8013e52:	4313      	orrs	r3, r2
 8013e54:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8013e56:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8013e5a:	4313      	orrs	r3, r2
 8013e5c:	b29b      	uxth	r3, r3
 8013e5e:	9310      	str	r3, [sp, #64]	; 0x40
 8013e60:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013e62:	781a      	ldrb	r2, [r3, #0]
 8013e64:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8013e68:	413a      	asrs	r2, r7
 8013e6a:	fb06 b919 	mls	r9, r6, r9, fp
 8013e6e:	fb03 fb06 	mul.w	fp, r3, r6
 8013e72:	b2d2      	uxtb	r2, r2
 8013e74:	930d      	str	r3, [sp, #52]	; 0x34
 8013e76:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8013e7a:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8013e7e:	f0c0 80ea 	bcc.w	8014056 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 8013e82:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8013e86:	46b6      	mov	lr, r6
 8013e88:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8013e8c:	f0c0 80d2 	bcc.w	8014034 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8013e90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013e92:	4013      	ands	r3, r2
 8013e94:	d055      	beq.n	8013f42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 8013e96:	20ff      	movs	r0, #255	; 0xff
 8013e98:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013e9a:	fb90 f1f1 	sdiv	r1, r0, r1
 8013e9e:	434b      	muls	r3, r1
 8013ea0:	2bfe      	cmp	r3, #254	; 0xfe
 8013ea2:	dd03      	ble.n	8013eac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 8013ea4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013ea6:	4281      	cmp	r1, r0
 8013ea8:	f000 80c2 	beq.w	8014030 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8013eac:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013eae:	f8bc 4000 	ldrh.w	r4, [ip]
 8013eb2:	fb11 f303 	smulbb	r3, r1, r3
 8013eb6:	b29b      	uxth	r3, r3
 8013eb8:	1c59      	adds	r1, r3, #1
 8013eba:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8013ebe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013ec2:	b29d      	uxth	r5, r3
 8013ec4:	43db      	mvns	r3, r3
 8013ec6:	b2db      	uxtb	r3, r3
 8013ec8:	9309      	str	r3, [sp, #36]	; 0x24
 8013eca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013ecc:	1220      	asrs	r0, r4, #8
 8013ece:	fb13 f905 	smulbb	r9, r3, r5
 8013ed2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013ed6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013ed8:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8013edc:	fb00 9003 	mla	r0, r0, r3, r9
 8013ee0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013ee2:	10e1      	asrs	r1, r4, #3
 8013ee4:	fb13 f905 	smulbb	r9, r3, r5
 8013ee8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013eec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013eee:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8013ef2:	fb01 9103 	mla	r1, r1, r3, r9
 8013ef6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013ef8:	00e4      	lsls	r4, r4, #3
 8013efa:	fb13 f505 	smulbb	r5, r3, r5
 8013efe:	b2e4      	uxtb	r4, r4
 8013f00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f02:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8013f06:	fb04 5403 	mla	r4, r4, r3, r5
 8013f0a:	b280      	uxth	r0, r0
 8013f0c:	b2a4      	uxth	r4, r4
 8013f0e:	1c43      	adds	r3, r0, #1
 8013f10:	f104 0901 	add.w	r9, r4, #1
 8013f14:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8013f18:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8013f1c:	b289      	uxth	r1, r1
 8013f1e:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8013f22:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8013f26:	ea49 0000 	orr.w	r0, r9, r0
 8013f2a:	f101 0901 	add.w	r9, r1, #1
 8013f2e:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8013f32:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013f36:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013f3a:	ea40 0009 	orr.w	r0, r0, r9
 8013f3e:	f8ac 0000 	strh.w	r0, [ip]
 8013f42:	4447      	add	r7, r8
 8013f44:	b2bf      	uxth	r7, r7
 8013f46:	2f07      	cmp	r7, #7
 8013f48:	bf81      	itttt	hi
 8013f4a:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8013f4c:	785a      	ldrbhi	r2, [r3, #1]
 8013f4e:	3301      	addhi	r3, #1
 8013f50:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8013f52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f54:	bf9a      	itte	ls
 8013f56:	fa42 f208 	asrls.w	r2, r2, r8
 8013f5a:	b2d2      	uxtbls	r2, r2
 8013f5c:	2700      	movhi	r7, #0
 8013f5e:	449c      	add	ip, r3
 8013f60:	e792      	b.n	8013e88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 8013f62:	441d      	add	r5, r3
 8013f64:	b22d      	sxth	r5, r5
 8013f66:	e6c9      	b.n	8013cfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8013f68:	f1ba 0f01 	cmp.w	sl, #1
 8013f6c:	f47f af02 	bne.w	8013d74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8013f70:	f1bb 0f01 	cmp.w	fp, #1
 8013f74:	f47f aefe 	bne.w	8013d74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8013f78:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 8014020 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8013f7c:	f8db 0000 	ldr.w	r0, [fp]
 8013f80:	6803      	ldr	r3, [r0, #0]
 8013f82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013f84:	4798      	blx	r3
 8013f86:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8013f8a:	465a      	mov	r2, fp
 8013f8c:	d006      	beq.n	8013f9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 8013f8e:	f1b8 0f04 	cmp.w	r8, #4
 8013f92:	d140      	bne.n	8014016 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8013f94:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013f96:	3300      	adds	r3, #0
 8013f98:	bf18      	it	ne
 8013f9a:	2301      	movne	r3, #1
 8013f9c:	0580      	lsls	r0, r0, #22
 8013f9e:	d563      	bpl.n	8014068 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8013fa0:	f1b8 0f08 	cmp.w	r8, #8
 8013fa4:	d160      	bne.n	8014068 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8013fa6:	2b00      	cmp	r3, #0
 8013fa8:	bf0c      	ite	eq
 8013faa:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8013fae:	f44f 7180 	movne.w	r1, #256	; 0x100
 8013fb2:	2e00      	cmp	r6, #0
 8013fb4:	f47f aede 	bne.w	8013d74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8013fb8:	2f00      	cmp	r7, #0
 8013fba:	f47f aedb 	bne.w	8013d74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8013fbe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fc0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8013fc2:	18eb      	adds	r3, r5, r3
 8013fc4:	4283      	cmp	r3, r0
 8013fc6:	f73f aed5 	bgt.w	8013d74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8013fca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013fcc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013fce:	444b      	add	r3, r9
 8013fd0:	4283      	cmp	r3, r0
 8013fd2:	f73f aecf 	bgt.w	8013d74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8013fd6:	6810      	ldr	r0, [r2, #0]
 8013fd8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8013fdc:	6805      	ldr	r5, [r0, #0]
 8013fde:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8013fe2:	f1b8 0f08 	cmp.w	r8, #8
 8013fe6:	f04f 0600 	mov.w	r6, #0
 8013fea:	bf18      	it	ne
 8013fec:	3401      	addne	r4, #1
 8013fee:	e9cd 1605 	strd	r1, r6, [sp, #20]
 8013ff2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013ff4:	9104      	str	r1, [sp, #16]
 8013ff6:	bf18      	it	ne
 8013ff8:	f024 0401 	bicne.w	r4, r4, #1
 8013ffc:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013ffe:	bf18      	it	ne
 8014000:	b2a4      	uxthne	r4, r4
 8014002:	e9cd 4102 	strd	r4, r1, [sp, #8]
 8014006:	e9cd 4900 	strd	r4, r9, [sp]
 801400a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801400c:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 801400e:	47a0      	blx	r4
 8014010:	b019      	add	sp, #100	; 0x64
 8014012:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014016:	2300      	movs	r3, #0
 8014018:	e7c0      	b.n	8013f9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801401a:	bf00      	nop
 801401c:	20013500 	.word	0x20013500
 8014020:	20013508 	.word	0x20013508
 8014024:	20013502 	.word	0x20013502
 8014028:	00fff800 	.word	0x00fff800
 801402c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801402e:	e6ee      	b.n	8013e0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 8014030:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014032:	e784      	b.n	8013f3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 8014034:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014036:	b153      	cbz	r3, 801404e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 8014038:	441f      	add	r7, r3
 801403a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801403c:	b2bf      	uxth	r7, r7
 801403e:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8014042:	f007 0707 	and.w	r7, r7, #7
 8014046:	781a      	ldrb	r2, [r3, #0]
 8014048:	9328      	str	r3, [sp, #160]	; 0xa0
 801404a:	413a      	asrs	r2, r7
 801404c:	b2d2      	uxtb	r2, r2
 801404e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014050:	445b      	add	r3, fp
 8014052:	930a      	str	r3, [sp, #40]	; 0x28
 8014054:	e711      	b.n	8013e7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 8014056:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014058:	2b00      	cmp	r3, #0
 801405a:	d1d9      	bne.n	8014010 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801405c:	4b05      	ldr	r3, [pc, #20]	; (8014074 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 801405e:	6818      	ldr	r0, [r3, #0]
 8014060:	6803      	ldr	r3, [r0, #0]
 8014062:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014064:	4798      	blx	r3
 8014066:	e7d3      	b.n	8014010 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8014068:	2b00      	cmp	r3, #0
 801406a:	f43f ae83 	beq.w	8013d74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801406e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8014072:	e79e      	b.n	8013fb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 8014074:	20013508 	.word	0x20013508

08014078 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8014078:	b538      	push	{r3, r4, r5, lr}
 801407a:	4c15      	ldr	r4, [pc, #84]	; (80140d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801407c:	7823      	ldrb	r3, [r4, #0]
 801407e:	f3bf 8f5b 	dmb	ish
 8014082:	07da      	lsls	r2, r3, #31
 8014084:	4605      	mov	r5, r0
 8014086:	d40b      	bmi.n	80140a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014088:	4620      	mov	r0, r4
 801408a:	f007 fc9a 	bl	801b9c2 <__cxa_guard_acquire>
 801408e:	b138      	cbz	r0, 80140a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014090:	4620      	mov	r0, r4
 8014092:	f007 fca2 	bl	801b9da <__cxa_guard_release>
 8014096:	4a0f      	ldr	r2, [pc, #60]	; (80140d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8014098:	490f      	ldr	r1, [pc, #60]	; (80140d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801409a:	4810      	ldr	r0, [pc, #64]	; (80140dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801409c:	f007 fc8a 	bl	801b9b4 <__aeabi_atexit>
 80140a0:	4c0f      	ldr	r4, [pc, #60]	; (80140e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80140a2:	7823      	ldrb	r3, [r4, #0]
 80140a4:	f3bf 8f5b 	dmb	ish
 80140a8:	07db      	lsls	r3, r3, #31
 80140aa:	d40b      	bmi.n	80140c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80140ac:	4620      	mov	r0, r4
 80140ae:	f007 fc88 	bl	801b9c2 <__cxa_guard_acquire>
 80140b2:	b138      	cbz	r0, 80140c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80140b4:	4620      	mov	r0, r4
 80140b6:	f007 fc90 	bl	801b9da <__cxa_guard_release>
 80140ba:	4a06      	ldr	r2, [pc, #24]	; (80140d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80140bc:	4909      	ldr	r1, [pc, #36]	; (80140e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80140be:	480a      	ldr	r0, [pc, #40]	; (80140e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80140c0:	f007 fc78 	bl	801b9b4 <__aeabi_atexit>
 80140c4:	4b05      	ldr	r3, [pc, #20]	; (80140dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80140c6:	612b      	str	r3, [r5, #16]
 80140c8:	4b07      	ldr	r3, [pc, #28]	; (80140e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80140ca:	616b      	str	r3, [r5, #20]
 80140cc:	bd38      	pop	{r3, r4, r5, pc}
 80140ce:	bf00      	nop
 80140d0:	200135d4 	.word	0x200135d4
 80140d4:	20000000 	.word	0x20000000
 80140d8:	08012269 	.word	0x08012269
 80140dc:	200000c8 	.word	0x200000c8
 80140e0:	200135d8 	.word	0x200135d8
 80140e4:	08012267 	.word	0x08012267
 80140e8:	200000cc 	.word	0x200000cc

080140ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80140ec:	b538      	push	{r3, r4, r5, lr}
 80140ee:	4c15      	ldr	r4, [pc, #84]	; (8014144 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80140f0:	7823      	ldrb	r3, [r4, #0]
 80140f2:	f3bf 8f5b 	dmb	ish
 80140f6:	07da      	lsls	r2, r3, #31
 80140f8:	4605      	mov	r5, r0
 80140fa:	d40b      	bmi.n	8014114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80140fc:	4620      	mov	r0, r4
 80140fe:	f007 fc60 	bl	801b9c2 <__cxa_guard_acquire>
 8014102:	b138      	cbz	r0, 8014114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8014104:	4620      	mov	r0, r4
 8014106:	f007 fc68 	bl	801b9da <__cxa_guard_release>
 801410a:	4a0f      	ldr	r2, [pc, #60]	; (8014148 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801410c:	490f      	ldr	r1, [pc, #60]	; (801414c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801410e:	4810      	ldr	r0, [pc, #64]	; (8014150 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8014110:	f007 fc50 	bl	801b9b4 <__aeabi_atexit>
 8014114:	4c0f      	ldr	r4, [pc, #60]	; (8014154 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8014116:	7823      	ldrb	r3, [r4, #0]
 8014118:	f3bf 8f5b 	dmb	ish
 801411c:	07db      	lsls	r3, r3, #31
 801411e:	d40b      	bmi.n	8014138 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8014120:	4620      	mov	r0, r4
 8014122:	f007 fc4e 	bl	801b9c2 <__cxa_guard_acquire>
 8014126:	b138      	cbz	r0, 8014138 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8014128:	4620      	mov	r0, r4
 801412a:	f007 fc56 	bl	801b9da <__cxa_guard_release>
 801412e:	4a06      	ldr	r2, [pc, #24]	; (8014148 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8014130:	4909      	ldr	r1, [pc, #36]	; (8014158 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8014132:	480a      	ldr	r0, [pc, #40]	; (801415c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8014134:	f007 fc3e 	bl	801b9b4 <__aeabi_atexit>
 8014138:	4b05      	ldr	r3, [pc, #20]	; (8014150 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801413a:	60ab      	str	r3, [r5, #8]
 801413c:	4b07      	ldr	r3, [pc, #28]	; (801415c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801413e:	60eb      	str	r3, [r5, #12]
 8014140:	bd38      	pop	{r3, r4, r5, pc}
 8014142:	bf00      	nop
 8014144:	200135ac 	.word	0x200135ac
 8014148:	20000000 	.word	0x20000000
 801414c:	0801226d 	.word	0x0801226d
 8014150:	200000a0 	.word	0x200000a0
 8014154:	200135b0 	.word	0x200135b0
 8014158:	0801226b 	.word	0x0801226b
 801415c:	200000a4 	.word	0x200000a4

08014160 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8014160:	b510      	push	{r4, lr}
 8014162:	4604      	mov	r4, r0
 8014164:	f7ff ff88 	bl	8014078 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8014168:	4620      	mov	r0, r4
 801416a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801416e:	f7ff bfbd 	b.w	80140ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08014174 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8014174:	b538      	push	{r3, r4, r5, lr}
 8014176:	4c15      	ldr	r4, [pc, #84]	; (80141cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8014178:	7823      	ldrb	r3, [r4, #0]
 801417a:	f3bf 8f5b 	dmb	ish
 801417e:	07da      	lsls	r2, r3, #31
 8014180:	4605      	mov	r5, r0
 8014182:	d40b      	bmi.n	801419c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014184:	4620      	mov	r0, r4
 8014186:	f007 fc1c 	bl	801b9c2 <__cxa_guard_acquire>
 801418a:	b138      	cbz	r0, 801419c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801418c:	4620      	mov	r0, r4
 801418e:	f007 fc24 	bl	801b9da <__cxa_guard_release>
 8014192:	4a0f      	ldr	r2, [pc, #60]	; (80141d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8014194:	490f      	ldr	r1, [pc, #60]	; (80141d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8014196:	4810      	ldr	r0, [pc, #64]	; (80141d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014198:	f007 fc0c 	bl	801b9b4 <__aeabi_atexit>
 801419c:	4c0f      	ldr	r4, [pc, #60]	; (80141dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801419e:	7823      	ldrb	r3, [r4, #0]
 80141a0:	f3bf 8f5b 	dmb	ish
 80141a4:	07db      	lsls	r3, r3, #31
 80141a6:	d40b      	bmi.n	80141c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80141a8:	4620      	mov	r0, r4
 80141aa:	f007 fc0a 	bl	801b9c2 <__cxa_guard_acquire>
 80141ae:	b138      	cbz	r0, 80141c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80141b0:	4620      	mov	r0, r4
 80141b2:	f007 fc12 	bl	801b9da <__cxa_guard_release>
 80141b6:	4a06      	ldr	r2, [pc, #24]	; (80141d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80141b8:	4909      	ldr	r1, [pc, #36]	; (80141e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80141ba:	480a      	ldr	r0, [pc, #40]	; (80141e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80141bc:	f007 fbfa 	bl	801b9b4 <__aeabi_atexit>
 80141c0:	4b05      	ldr	r3, [pc, #20]	; (80141d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80141c2:	622b      	str	r3, [r5, #32]
 80141c4:	4b07      	ldr	r3, [pc, #28]	; (80141e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80141c6:	626b      	str	r3, [r5, #36]	; 0x24
 80141c8:	bd38      	pop	{r3, r4, r5, pc}
 80141ca:	bf00      	nop
 80141cc:	200135dc 	.word	0x200135dc
 80141d0:	20000000 	.word	0x20000000
 80141d4:	08012261 	.word	0x08012261
 80141d8:	200000d0 	.word	0x200000d0
 80141dc:	200135e0 	.word	0x200135e0
 80141e0:	0801225f 	.word	0x0801225f
 80141e4:	200000d4 	.word	0x200000d4

080141e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80141e8:	b538      	push	{r3, r4, r5, lr}
 80141ea:	4c15      	ldr	r4, [pc, #84]	; (8014240 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80141ec:	7823      	ldrb	r3, [r4, #0]
 80141ee:	f3bf 8f5b 	dmb	ish
 80141f2:	07da      	lsls	r2, r3, #31
 80141f4:	4605      	mov	r5, r0
 80141f6:	d40b      	bmi.n	8014210 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80141f8:	4620      	mov	r0, r4
 80141fa:	f007 fbe2 	bl	801b9c2 <__cxa_guard_acquire>
 80141fe:	b138      	cbz	r0, 8014210 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8014200:	4620      	mov	r0, r4
 8014202:	f007 fbea 	bl	801b9da <__cxa_guard_release>
 8014206:	4a0f      	ldr	r2, [pc, #60]	; (8014244 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014208:	490f      	ldr	r1, [pc, #60]	; (8014248 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801420a:	4810      	ldr	r0, [pc, #64]	; (801424c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801420c:	f007 fbd2 	bl	801b9b4 <__aeabi_atexit>
 8014210:	4c0f      	ldr	r4, [pc, #60]	; (8014250 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8014212:	7823      	ldrb	r3, [r4, #0]
 8014214:	f3bf 8f5b 	dmb	ish
 8014218:	07db      	lsls	r3, r3, #31
 801421a:	d40b      	bmi.n	8014234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801421c:	4620      	mov	r0, r4
 801421e:	f007 fbd0 	bl	801b9c2 <__cxa_guard_acquire>
 8014222:	b138      	cbz	r0, 8014234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8014224:	4620      	mov	r0, r4
 8014226:	f007 fbd8 	bl	801b9da <__cxa_guard_release>
 801422a:	4a06      	ldr	r2, [pc, #24]	; (8014244 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801422c:	4909      	ldr	r1, [pc, #36]	; (8014254 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801422e:	480a      	ldr	r0, [pc, #40]	; (8014258 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014230:	f007 fbc0 	bl	801b9b4 <__aeabi_atexit>
 8014234:	4b05      	ldr	r3, [pc, #20]	; (801424c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8014236:	61ab      	str	r3, [r5, #24]
 8014238:	4b07      	ldr	r3, [pc, #28]	; (8014258 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801423a:	61eb      	str	r3, [r5, #28]
 801423c:	bd38      	pop	{r3, r4, r5, pc}
 801423e:	bf00      	nop
 8014240:	200135b4 	.word	0x200135b4
 8014244:	20000000 	.word	0x20000000
 8014248:	08012265 	.word	0x08012265
 801424c:	200000a8 	.word	0x200000a8
 8014250:	200135b8 	.word	0x200135b8
 8014254:	08012263 	.word	0x08012263
 8014258:	200000ac 	.word	0x200000ac

0801425c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801425c:	b510      	push	{r4, lr}
 801425e:	4604      	mov	r4, r0
 8014260:	f7ff ff88 	bl	8014174 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8014264:	4620      	mov	r0, r4
 8014266:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801426a:	f7ff bfbd 	b.w	80141e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08014270 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8014270:	b538      	push	{r3, r4, r5, lr}
 8014272:	4c15      	ldr	r4, [pc, #84]	; (80142c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8014274:	7823      	ldrb	r3, [r4, #0]
 8014276:	f3bf 8f5b 	dmb	ish
 801427a:	07da      	lsls	r2, r3, #31
 801427c:	4605      	mov	r5, r0
 801427e:	d40b      	bmi.n	8014298 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014280:	4620      	mov	r0, r4
 8014282:	f007 fb9e 	bl	801b9c2 <__cxa_guard_acquire>
 8014286:	b138      	cbz	r0, 8014298 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014288:	4620      	mov	r0, r4
 801428a:	f007 fba6 	bl	801b9da <__cxa_guard_release>
 801428e:	4a0f      	ldr	r2, [pc, #60]	; (80142cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8014290:	490f      	ldr	r1, [pc, #60]	; (80142d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8014292:	4810      	ldr	r0, [pc, #64]	; (80142d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8014294:	f007 fb8e 	bl	801b9b4 <__aeabi_atexit>
 8014298:	4c0f      	ldr	r4, [pc, #60]	; (80142d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801429a:	7823      	ldrb	r3, [r4, #0]
 801429c:	f3bf 8f5b 	dmb	ish
 80142a0:	07db      	lsls	r3, r3, #31
 80142a2:	d40b      	bmi.n	80142bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80142a4:	4620      	mov	r0, r4
 80142a6:	f007 fb8c 	bl	801b9c2 <__cxa_guard_acquire>
 80142aa:	b138      	cbz	r0, 80142bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80142ac:	4620      	mov	r0, r4
 80142ae:	f007 fb94 	bl	801b9da <__cxa_guard_release>
 80142b2:	4a06      	ldr	r2, [pc, #24]	; (80142cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80142b4:	4909      	ldr	r1, [pc, #36]	; (80142dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80142b6:	480a      	ldr	r0, [pc, #40]	; (80142e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80142b8:	f007 fb7c 	bl	801b9b4 <__aeabi_atexit>
 80142bc:	4b05      	ldr	r3, [pc, #20]	; (80142d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80142be:	632b      	str	r3, [r5, #48]	; 0x30
 80142c0:	4b07      	ldr	r3, [pc, #28]	; (80142e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80142c2:	636b      	str	r3, [r5, #52]	; 0x34
 80142c4:	bd38      	pop	{r3, r4, r5, pc}
 80142c6:	bf00      	nop
 80142c8:	200135ec 	.word	0x200135ec
 80142cc:	20000000 	.word	0x20000000
 80142d0:	08012259 	.word	0x08012259
 80142d4:	200000e0 	.word	0x200000e0
 80142d8:	200135f0 	.word	0x200135f0
 80142dc:	08012257 	.word	0x08012257
 80142e0:	200000e4 	.word	0x200000e4

080142e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80142e4:	b538      	push	{r3, r4, r5, lr}
 80142e6:	4c15      	ldr	r4, [pc, #84]	; (801433c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80142e8:	7823      	ldrb	r3, [r4, #0]
 80142ea:	f3bf 8f5b 	dmb	ish
 80142ee:	07da      	lsls	r2, r3, #31
 80142f0:	4605      	mov	r5, r0
 80142f2:	d40b      	bmi.n	801430c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80142f4:	4620      	mov	r0, r4
 80142f6:	f007 fb64 	bl	801b9c2 <__cxa_guard_acquire>
 80142fa:	b138      	cbz	r0, 801430c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80142fc:	4620      	mov	r0, r4
 80142fe:	f007 fb6c 	bl	801b9da <__cxa_guard_release>
 8014302:	4a0f      	ldr	r2, [pc, #60]	; (8014340 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8014304:	490f      	ldr	r1, [pc, #60]	; (8014344 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8014306:	4810      	ldr	r0, [pc, #64]	; (8014348 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8014308:	f007 fb54 	bl	801b9b4 <__aeabi_atexit>
 801430c:	4c0f      	ldr	r4, [pc, #60]	; (801434c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801430e:	7823      	ldrb	r3, [r4, #0]
 8014310:	f3bf 8f5b 	dmb	ish
 8014314:	07db      	lsls	r3, r3, #31
 8014316:	d40b      	bmi.n	8014330 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8014318:	4620      	mov	r0, r4
 801431a:	f007 fb52 	bl	801b9c2 <__cxa_guard_acquire>
 801431e:	b138      	cbz	r0, 8014330 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8014320:	4620      	mov	r0, r4
 8014322:	f007 fb5a 	bl	801b9da <__cxa_guard_release>
 8014326:	4a06      	ldr	r2, [pc, #24]	; (8014340 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8014328:	4909      	ldr	r1, [pc, #36]	; (8014350 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801432a:	480a      	ldr	r0, [pc, #40]	; (8014354 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801432c:	f007 fb42 	bl	801b9b4 <__aeabi_atexit>
 8014330:	4b05      	ldr	r3, [pc, #20]	; (8014348 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8014332:	62ab      	str	r3, [r5, #40]	; 0x28
 8014334:	4b07      	ldr	r3, [pc, #28]	; (8014354 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8014336:	62eb      	str	r3, [r5, #44]	; 0x2c
 8014338:	bd38      	pop	{r3, r4, r5, pc}
 801433a:	bf00      	nop
 801433c:	200135bc 	.word	0x200135bc
 8014340:	20000000 	.word	0x20000000
 8014344:	0801225d 	.word	0x0801225d
 8014348:	200000b0 	.word	0x200000b0
 801434c:	200135c0 	.word	0x200135c0
 8014350:	0801225b 	.word	0x0801225b
 8014354:	200000b4 	.word	0x200000b4

08014358 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8014358:	b510      	push	{r4, lr}
 801435a:	4604      	mov	r4, r0
 801435c:	f7ff ff88 	bl	8014270 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8014360:	4620      	mov	r0, r4
 8014362:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014366:	f7ff bfbd 	b.w	80142e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801436c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801436c:	b538      	push	{r3, r4, r5, lr}
 801436e:	4c15      	ldr	r4, [pc, #84]	; (80143c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8014370:	7823      	ldrb	r3, [r4, #0]
 8014372:	f3bf 8f5b 	dmb	ish
 8014376:	07da      	lsls	r2, r3, #31
 8014378:	4605      	mov	r5, r0
 801437a:	d40b      	bmi.n	8014394 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801437c:	4620      	mov	r0, r4
 801437e:	f007 fb20 	bl	801b9c2 <__cxa_guard_acquire>
 8014382:	b138      	cbz	r0, 8014394 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8014384:	4620      	mov	r0, r4
 8014386:	f007 fb28 	bl	801b9da <__cxa_guard_release>
 801438a:	4a0f      	ldr	r2, [pc, #60]	; (80143c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801438c:	490f      	ldr	r1, [pc, #60]	; (80143cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801438e:	4810      	ldr	r0, [pc, #64]	; (80143d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8014390:	f007 fb10 	bl	801b9b4 <__aeabi_atexit>
 8014394:	4c0f      	ldr	r4, [pc, #60]	; (80143d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8014396:	7823      	ldrb	r3, [r4, #0]
 8014398:	f3bf 8f5b 	dmb	ish
 801439c:	07db      	lsls	r3, r3, #31
 801439e:	d40b      	bmi.n	80143b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80143a0:	4620      	mov	r0, r4
 80143a2:	f007 fb0e 	bl	801b9c2 <__cxa_guard_acquire>
 80143a6:	b138      	cbz	r0, 80143b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80143a8:	4620      	mov	r0, r4
 80143aa:	f007 fb16 	bl	801b9da <__cxa_guard_release>
 80143ae:	4a06      	ldr	r2, [pc, #24]	; (80143c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80143b0:	4909      	ldr	r1, [pc, #36]	; (80143d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80143b2:	480a      	ldr	r0, [pc, #40]	; (80143dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80143b4:	f007 fafe 	bl	801b9b4 <__aeabi_atexit>
 80143b8:	4b05      	ldr	r3, [pc, #20]	; (80143d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80143ba:	652b      	str	r3, [r5, #80]	; 0x50
 80143bc:	4b07      	ldr	r3, [pc, #28]	; (80143dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80143be:	656b      	str	r3, [r5, #84]	; 0x54
 80143c0:	bd38      	pop	{r3, r4, r5, pc}
 80143c2:	bf00      	nop
 80143c4:	200135f4 	.word	0x200135f4
 80143c8:	20000000 	.word	0x20000000
 80143cc:	08012249 	.word	0x08012249
 80143d0:	200000e8 	.word	0x200000e8
 80143d4:	200135f8 	.word	0x200135f8
 80143d8:	08012247 	.word	0x08012247
 80143dc:	200000ec 	.word	0x200000ec

080143e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80143e0:	b538      	push	{r3, r4, r5, lr}
 80143e2:	4c15      	ldr	r4, [pc, #84]	; (8014438 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80143e4:	7823      	ldrb	r3, [r4, #0]
 80143e6:	f3bf 8f5b 	dmb	ish
 80143ea:	07da      	lsls	r2, r3, #31
 80143ec:	4605      	mov	r5, r0
 80143ee:	d40b      	bmi.n	8014408 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80143f0:	4620      	mov	r0, r4
 80143f2:	f007 fae6 	bl	801b9c2 <__cxa_guard_acquire>
 80143f6:	b138      	cbz	r0, 8014408 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80143f8:	4620      	mov	r0, r4
 80143fa:	f007 faee 	bl	801b9da <__cxa_guard_release>
 80143fe:	4a0f      	ldr	r2, [pc, #60]	; (801443c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8014400:	490f      	ldr	r1, [pc, #60]	; (8014440 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8014402:	4810      	ldr	r0, [pc, #64]	; (8014444 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8014404:	f007 fad6 	bl	801b9b4 <__aeabi_atexit>
 8014408:	4c0f      	ldr	r4, [pc, #60]	; (8014448 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801440a:	7823      	ldrb	r3, [r4, #0]
 801440c:	f3bf 8f5b 	dmb	ish
 8014410:	07db      	lsls	r3, r3, #31
 8014412:	d40b      	bmi.n	801442c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8014414:	4620      	mov	r0, r4
 8014416:	f007 fad4 	bl	801b9c2 <__cxa_guard_acquire>
 801441a:	b138      	cbz	r0, 801442c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801441c:	4620      	mov	r0, r4
 801441e:	f007 fadc 	bl	801b9da <__cxa_guard_release>
 8014422:	4a06      	ldr	r2, [pc, #24]	; (801443c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8014424:	4909      	ldr	r1, [pc, #36]	; (801444c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8014426:	480a      	ldr	r0, [pc, #40]	; (8014450 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8014428:	f007 fac4 	bl	801b9b4 <__aeabi_atexit>
 801442c:	4b05      	ldr	r3, [pc, #20]	; (8014444 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801442e:	64ab      	str	r3, [r5, #72]	; 0x48
 8014430:	4b07      	ldr	r3, [pc, #28]	; (8014450 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8014432:	64eb      	str	r3, [r5, #76]	; 0x4c
 8014434:	bd38      	pop	{r3, r4, r5, pc}
 8014436:	bf00      	nop
 8014438:	200135fc 	.word	0x200135fc
 801443c:	20000000 	.word	0x20000000
 8014440:	0801224d 	.word	0x0801224d
 8014444:	200000f0 	.word	0x200000f0
 8014448:	20013600 	.word	0x20013600
 801444c:	0801224b 	.word	0x0801224b
 8014450:	200000f4 	.word	0x200000f4

08014454 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8014454:	b538      	push	{r3, r4, r5, lr}
 8014456:	4c15      	ldr	r4, [pc, #84]	; (80144ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8014458:	7823      	ldrb	r3, [r4, #0]
 801445a:	f3bf 8f5b 	dmb	ish
 801445e:	07da      	lsls	r2, r3, #31
 8014460:	4605      	mov	r5, r0
 8014462:	d40b      	bmi.n	801447c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8014464:	4620      	mov	r0, r4
 8014466:	f007 faac 	bl	801b9c2 <__cxa_guard_acquire>
 801446a:	b138      	cbz	r0, 801447c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801446c:	4620      	mov	r0, r4
 801446e:	f007 fab4 	bl	801b9da <__cxa_guard_release>
 8014472:	4a0f      	ldr	r2, [pc, #60]	; (80144b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014474:	490f      	ldr	r1, [pc, #60]	; (80144b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8014476:	4810      	ldr	r0, [pc, #64]	; (80144b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8014478:	f007 fa9c 	bl	801b9b4 <__aeabi_atexit>
 801447c:	4c0f      	ldr	r4, [pc, #60]	; (80144bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801447e:	7823      	ldrb	r3, [r4, #0]
 8014480:	f3bf 8f5b 	dmb	ish
 8014484:	07db      	lsls	r3, r3, #31
 8014486:	d40b      	bmi.n	80144a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014488:	4620      	mov	r0, r4
 801448a:	f007 fa9a 	bl	801b9c2 <__cxa_guard_acquire>
 801448e:	b138      	cbz	r0, 80144a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014490:	4620      	mov	r0, r4
 8014492:	f007 faa2 	bl	801b9da <__cxa_guard_release>
 8014496:	4a06      	ldr	r2, [pc, #24]	; (80144b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014498:	4909      	ldr	r1, [pc, #36]	; (80144c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801449a:	480a      	ldr	r0, [pc, #40]	; (80144c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801449c:	f007 fa8a 	bl	801b9b4 <__aeabi_atexit>
 80144a0:	4b05      	ldr	r3, [pc, #20]	; (80144b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80144a2:	642b      	str	r3, [r5, #64]	; 0x40
 80144a4:	4b07      	ldr	r3, [pc, #28]	; (80144c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80144a6:	646b      	str	r3, [r5, #68]	; 0x44
 80144a8:	bd38      	pop	{r3, r4, r5, pc}
 80144aa:	bf00      	nop
 80144ac:	200135c4 	.word	0x200135c4
 80144b0:	20000000 	.word	0x20000000
 80144b4:	08012251 	.word	0x08012251
 80144b8:	200000b8 	.word	0x200000b8
 80144bc:	200135c8 	.word	0x200135c8
 80144c0:	0801224f 	.word	0x0801224f
 80144c4:	200000bc 	.word	0x200000bc

080144c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80144c8:	b538      	push	{r3, r4, r5, lr}
 80144ca:	4c15      	ldr	r4, [pc, #84]	; (8014520 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80144cc:	7823      	ldrb	r3, [r4, #0]
 80144ce:	f3bf 8f5b 	dmb	ish
 80144d2:	07da      	lsls	r2, r3, #31
 80144d4:	4605      	mov	r5, r0
 80144d6:	d40b      	bmi.n	80144f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80144d8:	4620      	mov	r0, r4
 80144da:	f007 fa72 	bl	801b9c2 <__cxa_guard_acquire>
 80144de:	b138      	cbz	r0, 80144f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80144e0:	4620      	mov	r0, r4
 80144e2:	f007 fa7a 	bl	801b9da <__cxa_guard_release>
 80144e6:	4a0f      	ldr	r2, [pc, #60]	; (8014524 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80144e8:	490f      	ldr	r1, [pc, #60]	; (8014528 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80144ea:	4810      	ldr	r0, [pc, #64]	; (801452c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80144ec:	f007 fa62 	bl	801b9b4 <__aeabi_atexit>
 80144f0:	4c0f      	ldr	r4, [pc, #60]	; (8014530 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80144f2:	7823      	ldrb	r3, [r4, #0]
 80144f4:	f3bf 8f5b 	dmb	ish
 80144f8:	07db      	lsls	r3, r3, #31
 80144fa:	d40b      	bmi.n	8014514 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80144fc:	4620      	mov	r0, r4
 80144fe:	f007 fa60 	bl	801b9c2 <__cxa_guard_acquire>
 8014502:	b138      	cbz	r0, 8014514 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8014504:	4620      	mov	r0, r4
 8014506:	f007 fa68 	bl	801b9da <__cxa_guard_release>
 801450a:	4a06      	ldr	r2, [pc, #24]	; (8014524 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801450c:	4909      	ldr	r1, [pc, #36]	; (8014534 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801450e:	480a      	ldr	r0, [pc, #40]	; (8014538 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8014510:	f007 fa50 	bl	801b9b4 <__aeabi_atexit>
 8014514:	4b05      	ldr	r3, [pc, #20]	; (801452c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8014516:	63ab      	str	r3, [r5, #56]	; 0x38
 8014518:	4b07      	ldr	r3, [pc, #28]	; (8014538 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801451a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801451c:	bd38      	pop	{r3, r4, r5, pc}
 801451e:	bf00      	nop
 8014520:	200135e4 	.word	0x200135e4
 8014524:	20000000 	.word	0x20000000
 8014528:	08012255 	.word	0x08012255
 801452c:	200000d8 	.word	0x200000d8
 8014530:	200135e8 	.word	0x200135e8
 8014534:	08012253 	.word	0x08012253
 8014538:	200000dc 	.word	0x200000dc

0801453c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801453c:	b510      	push	{r4, lr}
 801453e:	4604      	mov	r4, r0
 8014540:	f7ff ff14 	bl	801436c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8014544:	4620      	mov	r0, r4
 8014546:	f7ff ff85 	bl	8014454 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801454a:	4620      	mov	r0, r4
 801454c:	f7ff ff48 	bl	80143e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8014550:	4620      	mov	r0, r4
 8014552:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014556:	f7ff bfb7 	b.w	80144c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801455c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801455c:	b538      	push	{r3, r4, r5, lr}
 801455e:	4c15      	ldr	r4, [pc, #84]	; (80145b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8014560:	7823      	ldrb	r3, [r4, #0]
 8014562:	f3bf 8f5b 	dmb	ish
 8014566:	07da      	lsls	r2, r3, #31
 8014568:	4605      	mov	r5, r0
 801456a:	d40b      	bmi.n	8014584 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801456c:	4620      	mov	r0, r4
 801456e:	f007 fa28 	bl	801b9c2 <__cxa_guard_acquire>
 8014572:	b138      	cbz	r0, 8014584 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8014574:	4620      	mov	r0, r4
 8014576:	f007 fa30 	bl	801b9da <__cxa_guard_release>
 801457a:	4a0f      	ldr	r2, [pc, #60]	; (80145b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801457c:	490f      	ldr	r1, [pc, #60]	; (80145bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801457e:	4810      	ldr	r0, [pc, #64]	; (80145c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014580:	f007 fa18 	bl	801b9b4 <__aeabi_atexit>
 8014584:	4c0f      	ldr	r4, [pc, #60]	; (80145c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8014586:	7823      	ldrb	r3, [r4, #0]
 8014588:	f3bf 8f5b 	dmb	ish
 801458c:	07db      	lsls	r3, r3, #31
 801458e:	d40b      	bmi.n	80145a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014590:	4620      	mov	r0, r4
 8014592:	f007 fa16 	bl	801b9c2 <__cxa_guard_acquire>
 8014596:	b138      	cbz	r0, 80145a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014598:	4620      	mov	r0, r4
 801459a:	f007 fa1e 	bl	801b9da <__cxa_guard_release>
 801459e:	4a06      	ldr	r2, [pc, #24]	; (80145b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80145a0:	4909      	ldr	r1, [pc, #36]	; (80145c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80145a2:	480a      	ldr	r0, [pc, #40]	; (80145cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80145a4:	f007 fa06 	bl	801b9b4 <__aeabi_atexit>
 80145a8:	4b05      	ldr	r3, [pc, #20]	; (80145c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80145aa:	662b      	str	r3, [r5, #96]	; 0x60
 80145ac:	4b07      	ldr	r3, [pc, #28]	; (80145cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80145ae:	666b      	str	r3, [r5, #100]	; 0x64
 80145b0:	bd38      	pop	{r3, r4, r5, pc}
 80145b2:	bf00      	nop
 80145b4:	200135cc 	.word	0x200135cc
 80145b8:	20000000 	.word	0x20000000
 80145bc:	08012241 	.word	0x08012241
 80145c0:	200000c0 	.word	0x200000c0
 80145c4:	200135d0 	.word	0x200135d0
 80145c8:	0801223f 	.word	0x0801223f
 80145cc:	200000c4 	.word	0x200000c4

080145d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80145d0:	b538      	push	{r3, r4, r5, lr}
 80145d2:	4c15      	ldr	r4, [pc, #84]	; (8014628 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80145d4:	7823      	ldrb	r3, [r4, #0]
 80145d6:	f3bf 8f5b 	dmb	ish
 80145da:	07da      	lsls	r2, r3, #31
 80145dc:	4605      	mov	r5, r0
 80145de:	d40b      	bmi.n	80145f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80145e0:	4620      	mov	r0, r4
 80145e2:	f007 f9ee 	bl	801b9c2 <__cxa_guard_acquire>
 80145e6:	b138      	cbz	r0, 80145f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80145e8:	4620      	mov	r0, r4
 80145ea:	f007 f9f6 	bl	801b9da <__cxa_guard_release>
 80145ee:	4a0f      	ldr	r2, [pc, #60]	; (801462c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80145f0:	490f      	ldr	r1, [pc, #60]	; (8014630 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80145f2:	4810      	ldr	r0, [pc, #64]	; (8014634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80145f4:	f007 f9de 	bl	801b9b4 <__aeabi_atexit>
 80145f8:	4c0f      	ldr	r4, [pc, #60]	; (8014638 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80145fa:	7823      	ldrb	r3, [r4, #0]
 80145fc:	f3bf 8f5b 	dmb	ish
 8014600:	07db      	lsls	r3, r3, #31
 8014602:	d40b      	bmi.n	801461c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8014604:	4620      	mov	r0, r4
 8014606:	f007 f9dc 	bl	801b9c2 <__cxa_guard_acquire>
 801460a:	b138      	cbz	r0, 801461c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801460c:	4620      	mov	r0, r4
 801460e:	f007 f9e4 	bl	801b9da <__cxa_guard_release>
 8014612:	4a06      	ldr	r2, [pc, #24]	; (801462c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8014614:	4909      	ldr	r1, [pc, #36]	; (801463c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8014616:	480a      	ldr	r0, [pc, #40]	; (8014640 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8014618:	f007 f9cc 	bl	801b9b4 <__aeabi_atexit>
 801461c:	4b05      	ldr	r3, [pc, #20]	; (8014634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801461e:	65ab      	str	r3, [r5, #88]	; 0x58
 8014620:	4b07      	ldr	r3, [pc, #28]	; (8014640 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8014622:	65eb      	str	r3, [r5, #92]	; 0x5c
 8014624:	bd38      	pop	{r3, r4, r5, pc}
 8014626:	bf00      	nop
 8014628:	200135a4 	.word	0x200135a4
 801462c:	20000000 	.word	0x20000000
 8014630:	08012245 	.word	0x08012245
 8014634:	20000098 	.word	0x20000098
 8014638:	200135a8 	.word	0x200135a8
 801463c:	08012243 	.word	0x08012243
 8014640:	2000009c 	.word	0x2000009c

08014644 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8014644:	b510      	push	{r4, lr}
 8014646:	4604      	mov	r4, r0
 8014648:	f7ff ff88 	bl	801455c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801464c:	4620      	mov	r0, r4
 801464e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014652:	f7ff bfbd 	b.w	80145d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08014658 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8014658:	b538      	push	{r3, r4, r5, lr}
 801465a:	4c15      	ldr	r4, [pc, #84]	; (80146b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801465c:	7823      	ldrb	r3, [r4, #0]
 801465e:	f3bf 8f5b 	dmb	ish
 8014662:	07da      	lsls	r2, r3, #31
 8014664:	4605      	mov	r5, r0
 8014666:	d40b      	bmi.n	8014680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014668:	4620      	mov	r0, r4
 801466a:	f007 f9aa 	bl	801b9c2 <__cxa_guard_acquire>
 801466e:	b138      	cbz	r0, 8014680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014670:	4620      	mov	r0, r4
 8014672:	f007 f9b2 	bl	801b9da <__cxa_guard_release>
 8014676:	4a0f      	ldr	r2, [pc, #60]	; (80146b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014678:	490f      	ldr	r1, [pc, #60]	; (80146b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801467a:	4810      	ldr	r0, [pc, #64]	; (80146bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801467c:	f007 f99a 	bl	801b9b4 <__aeabi_atexit>
 8014680:	4c0f      	ldr	r4, [pc, #60]	; (80146c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8014682:	7823      	ldrb	r3, [r4, #0]
 8014684:	f3bf 8f5b 	dmb	ish
 8014688:	07db      	lsls	r3, r3, #31
 801468a:	d40b      	bmi.n	80146a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801468c:	4620      	mov	r0, r4
 801468e:	f007 f998 	bl	801b9c2 <__cxa_guard_acquire>
 8014692:	b138      	cbz	r0, 80146a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014694:	4620      	mov	r0, r4
 8014696:	f007 f9a0 	bl	801b9da <__cxa_guard_release>
 801469a:	4a06      	ldr	r2, [pc, #24]	; (80146b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801469c:	4909      	ldr	r1, [pc, #36]	; (80146c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801469e:	480a      	ldr	r0, [pc, #40]	; (80146c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80146a0:	f007 f988 	bl	801b9b4 <__aeabi_atexit>
 80146a4:	4b05      	ldr	r3, [pc, #20]	; (80146bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80146a6:	672b      	str	r3, [r5, #112]	; 0x70
 80146a8:	4b07      	ldr	r3, [pc, #28]	; (80146c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80146aa:	676b      	str	r3, [r5, #116]	; 0x74
 80146ac:	bd38      	pop	{r3, r4, r5, pc}
 80146ae:	bf00      	nop
 80146b0:	2001359c 	.word	0x2001359c
 80146b4:	20000000 	.word	0x20000000
 80146b8:	08012239 	.word	0x08012239
 80146bc:	20000090 	.word	0x20000090
 80146c0:	200135a0 	.word	0x200135a0
 80146c4:	08012237 	.word	0x08012237
 80146c8:	20000094 	.word	0x20000094

080146cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80146cc:	b538      	push	{r3, r4, r5, lr}
 80146ce:	4c15      	ldr	r4, [pc, #84]	; (8014724 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80146d0:	7823      	ldrb	r3, [r4, #0]
 80146d2:	f3bf 8f5b 	dmb	ish
 80146d6:	07da      	lsls	r2, r3, #31
 80146d8:	4605      	mov	r5, r0
 80146da:	d40b      	bmi.n	80146f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80146dc:	4620      	mov	r0, r4
 80146de:	f007 f970 	bl	801b9c2 <__cxa_guard_acquire>
 80146e2:	b138      	cbz	r0, 80146f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80146e4:	4620      	mov	r0, r4
 80146e6:	f007 f978 	bl	801b9da <__cxa_guard_release>
 80146ea:	4a0f      	ldr	r2, [pc, #60]	; (8014728 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80146ec:	490f      	ldr	r1, [pc, #60]	; (801472c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80146ee:	4810      	ldr	r0, [pc, #64]	; (8014730 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80146f0:	f007 f960 	bl	801b9b4 <__aeabi_atexit>
 80146f4:	4c0f      	ldr	r4, [pc, #60]	; (8014734 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80146f6:	7823      	ldrb	r3, [r4, #0]
 80146f8:	f3bf 8f5b 	dmb	ish
 80146fc:	07db      	lsls	r3, r3, #31
 80146fe:	d40b      	bmi.n	8014718 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014700:	4620      	mov	r0, r4
 8014702:	f007 f95e 	bl	801b9c2 <__cxa_guard_acquire>
 8014706:	b138      	cbz	r0, 8014718 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014708:	4620      	mov	r0, r4
 801470a:	f007 f966 	bl	801b9da <__cxa_guard_release>
 801470e:	4a06      	ldr	r2, [pc, #24]	; (8014728 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014710:	4909      	ldr	r1, [pc, #36]	; (8014738 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8014712:	480a      	ldr	r0, [pc, #40]	; (801473c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8014714:	f007 f94e 	bl	801b9b4 <__aeabi_atexit>
 8014718:	4b05      	ldr	r3, [pc, #20]	; (8014730 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801471a:	66ab      	str	r3, [r5, #104]	; 0x68
 801471c:	4b07      	ldr	r3, [pc, #28]	; (801473c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801471e:	66eb      	str	r3, [r5, #108]	; 0x6c
 8014720:	bd38      	pop	{r3, r4, r5, pc}
 8014722:	bf00      	nop
 8014724:	20013594 	.word	0x20013594
 8014728:	20000000 	.word	0x20000000
 801472c:	0801223d 	.word	0x0801223d
 8014730:	20000088 	.word	0x20000088
 8014734:	20013598 	.word	0x20013598
 8014738:	0801223b 	.word	0x0801223b
 801473c:	2000008c 	.word	0x2000008c

08014740 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8014740:	b510      	push	{r4, lr}
 8014742:	4604      	mov	r4, r0
 8014744:	f7ff ff88 	bl	8014658 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8014748:	4620      	mov	r0, r4
 801474a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801474e:	f7ff bfbd 	b.w	80146cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08014752 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8014752:	b510      	push	{r4, lr}
 8014754:	4604      	mov	r4, r0
 8014756:	f7ff fff3 	bl	8014740 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801475a:	4620      	mov	r0, r4
 801475c:	f7ff ff72 	bl	8014644 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8014760:	4620      	mov	r0, r4
 8014762:	f7ff fdf9 	bl	8014358 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8014766:	4620      	mov	r0, r4
 8014768:	f7ff fcfa 	bl	8014160 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801476c:	4620      	mov	r0, r4
 801476e:	f7ff fd75 	bl	801425c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8014772:	4620      	mov	r0, r4
 8014774:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014778:	f7ff bee0 	b.w	801453c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801477c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801477c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014780:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8014784:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8014788:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801478c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8014790:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8014794:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8014798:	8808      	ldrh	r0, [r1, #0]
 801479a:	fb0e 4708 	mla	r7, lr, r8, r4
 801479e:	f1be 0f00 	cmp.w	lr, #0
 80147a2:	eb02 0a07 	add.w	sl, r2, r7
 80147a6:	db37      	blt.n	8014818 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80147a8:	45f3      	cmp	fp, lr
 80147aa:	dd35      	ble.n	8014818 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80147ac:	2c00      	cmp	r4, #0
 80147ae:	db31      	blt.n	8014814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80147b0:	45a0      	cmp	r8, r4
 80147b2:	dd2f      	ble.n	8014814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80147b4:	5dd2      	ldrb	r2, [r2, r7]
 80147b6:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80147ba:	1c62      	adds	r2, r4, #1
 80147bc:	d42f      	bmi.n	801481e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80147be:	4590      	cmp	r8, r2
 80147c0:	dd2d      	ble.n	801481e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80147c2:	b366      	cbz	r6, 801481e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80147c4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80147c8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80147cc:	f11e 0e01 	adds.w	lr, lr, #1
 80147d0:	d429      	bmi.n	8014826 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80147d2:	45f3      	cmp	fp, lr
 80147d4:	dd27      	ble.n	8014826 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80147d6:	f1bc 0f00 	cmp.w	ip, #0
 80147da:	f000 80a1 	beq.w	8014920 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 80147de:	2c00      	cmp	r4, #0
 80147e0:	db1f      	blt.n	8014822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80147e2:	45a0      	cmp	r8, r4
 80147e4:	dd1d      	ble.n	8014822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80147e6:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80147ea:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80147ee:	3401      	adds	r4, #1
 80147f0:	d41c      	bmi.n	801482c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80147f2:	45a0      	cmp	r8, r4
 80147f4:	dd1a      	ble.n	801482c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80147f6:	b1de      	cbz	r6, 8014830 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80147f8:	44d0      	add	r8, sl
 80147fa:	f898 2001 	ldrb.w	r2, [r8, #1]
 80147fe:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8014802:	2e0f      	cmp	r6, #15
 8014804:	d915      	bls.n	8014832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8014806:	4b49      	ldr	r3, [pc, #292]	; (801492c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8014808:	4a49      	ldr	r2, [pc, #292]	; (8014930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 801480a:	484a      	ldr	r0, [pc, #296]	; (8014934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 801480c:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8014810:	f007 f904 	bl	801ba1c <__assert_func>
 8014814:	4681      	mov	r9, r0
 8014816:	e7d0      	b.n	80147ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8014818:	4607      	mov	r7, r0
 801481a:	4681      	mov	r9, r0
 801481c:	e7d6      	b.n	80147cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801481e:	4607      	mov	r7, r0
 8014820:	e7d4      	b.n	80147cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8014822:	4686      	mov	lr, r0
 8014824:	e7e3      	b.n	80147ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8014826:	4603      	mov	r3, r0
 8014828:	4686      	mov	lr, r0
 801482a:	e7ea      	b.n	8014802 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801482c:	4603      	mov	r3, r0
 801482e:	e7e8      	b.n	8014802 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8014830:	4603      	mov	r3, r0
 8014832:	f1bc 0f0f 	cmp.w	ip, #15
 8014836:	d8e6      	bhi.n	8014806 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014838:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801483c:	fb16 f80c 	smulbb	r8, r6, ip
 8014840:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014844:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014848:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801484c:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8014850:	ea44 0909 	orr.w	r9, r4, r9
 8014854:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8014858:	f1cc 0410 	rsb	r4, ip, #16
 801485c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014860:	1ba4      	subs	r4, r4, r6
 8014862:	041a      	lsls	r2, r3, #16
 8014864:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8014868:	ea4a 0707 	orr.w	r7, sl, r7
 801486c:	4377      	muls	r7, r6
 801486e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014872:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8014876:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801487a:	fb04 7409 	mla	r4, r4, r9, r7
 801487e:	4313      	orrs	r3, r2
 8014880:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8014884:	fb08 4303 	mla	r3, r8, r3, r4
 8014888:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801488c:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8014890:	4322      	orrs	r2, r4
 8014892:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8014896:	fb0c 3202 	mla	r2, ip, r2, r3
 801489a:	0d53      	lsrs	r3, r2, #21
 801489c:	0952      	lsrs	r2, r2, #5
 801489e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80148a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80148a6:	431a      	orrs	r2, r3
 80148a8:	b293      	uxth	r3, r2
 80148aa:	b2af      	uxth	r7, r5
 80148ac:	1202      	asrs	r2, r0, #8
 80148ae:	43ed      	mvns	r5, r5
 80148b0:	b2ed      	uxtb	r5, r5
 80148b2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80148b6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80148ba:	fb12 f205 	smulbb	r2, r2, r5
 80148be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80148c2:	fb0c 2c07 	mla	ip, ip, r7, r2
 80148c6:	00dc      	lsls	r4, r3, #3
 80148c8:	10da      	asrs	r2, r3, #3
 80148ca:	10c6      	asrs	r6, r0, #3
 80148cc:	00c3      	lsls	r3, r0, #3
 80148ce:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80148d2:	b2db      	uxtb	r3, r3
 80148d4:	fb16 f605 	smulbb	r6, r6, r5
 80148d8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80148dc:	b2e4      	uxtb	r4, r4
 80148de:	fb13 f305 	smulbb	r3, r3, r5
 80148e2:	fa1f fc8c 	uxth.w	ip, ip
 80148e6:	fb02 6207 	mla	r2, r2, r7, r6
 80148ea:	fb04 3307 	mla	r3, r4, r7, r3
 80148ee:	b296      	uxth	r6, r2
 80148f0:	b29a      	uxth	r2, r3
 80148f2:	f10c 0301 	add.w	r3, ip, #1
 80148f6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80148fa:	1c53      	adds	r3, r2, #1
 80148fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014900:	1c72      	adds	r2, r6, #1
 8014902:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8014906:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801490a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801490e:	0952      	lsrs	r2, r2, #5
 8014910:	ea43 030c 	orr.w	r3, r3, ip
 8014914:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014918:	4313      	orrs	r3, r2
 801491a:	800b      	strh	r3, [r1, #0]
 801491c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014920:	2e0f      	cmp	r6, #15
 8014922:	f63f af70 	bhi.w	8014806 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014926:	4603      	mov	r3, r0
 8014928:	4686      	mov	lr, r0
 801492a:	e785      	b.n	8014838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 801492c:	0802050e 	.word	0x0802050e
 8014930:	08020b87 	.word	0x08020b87
 8014934:	08020592 	.word	0x08020592

08014938 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801493c:	ed2d 8b08 	vpush	{d8-d11}
 8014940:	b099      	sub	sp, #100	; 0x64
 8014942:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8014946:	9215      	str	r2, [sp, #84]	; 0x54
 8014948:	9309      	str	r3, [sp, #36]	; 0x24
 801494a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801494c:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8014950:	930d      	str	r3, [sp, #52]	; 0x34
 8014952:	910c      	str	r1, [sp, #48]	; 0x30
 8014954:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8014958:	9016      	str	r0, [sp, #88]	; 0x58
 801495a:	6850      	ldr	r0, [r2, #4]
 801495c:	6812      	ldr	r2, [r2, #0]
 801495e:	fb00 1303 	mla	r3, r0, r3, r1
 8014962:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8014966:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014968:	681b      	ldr	r3, [r3, #0]
 801496a:	930b      	str	r3, [sp, #44]	; 0x2c
 801496c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801496e:	685e      	ldr	r6, [r3, #4]
 8014970:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014972:	43db      	mvns	r3, r3
 8014974:	b2db      	uxtb	r3, r3
 8014976:	eeb0 aa40 	vmov.f32	s20, s0
 801497a:	eef0 9a60 	vmov.f32	s19, s1
 801497e:	eeb0 9a41 	vmov.f32	s18, s2
 8014982:	eeb0 8a62 	vmov.f32	s16, s5
 8014986:	eef0 8a43 	vmov.f32	s17, s6
 801498a:	eef0 ba44 	vmov.f32	s23, s8
 801498e:	eeb0 ba64 	vmov.f32	s22, s9
 8014992:	eef0 aa45 	vmov.f32	s21, s10
 8014996:	3604      	adds	r6, #4
 8014998:	930a      	str	r3, [sp, #40]	; 0x28
 801499a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801499c:	2b00      	cmp	r3, #0
 801499e:	dc03      	bgt.n	80149a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80149a0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80149a2:	2b00      	cmp	r3, #0
 80149a4:	f340 8225 	ble.w	8014df2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 80149a8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80149aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80149ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80149b2:	1e48      	subs	r0, r1, #1
 80149b4:	1e57      	subs	r7, r2, #1
 80149b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80149b8:	2b00      	cmp	r3, #0
 80149ba:	f340 80e3 	ble.w	8014b84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 80149be:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80149c2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80149c6:	d406      	bmi.n	80149d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80149c8:	4584      	cmp	ip, r0
 80149ca:	da04      	bge.n	80149d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80149cc:	2b00      	cmp	r3, #0
 80149ce:	db02      	blt.n	80149d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80149d0:	42bb      	cmp	r3, r7
 80149d2:	f2c0 80d8 	blt.w	8014b86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80149d6:	f11c 0c01 	adds.w	ip, ip, #1
 80149da:	f100 80c9 	bmi.w	8014b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80149de:	4561      	cmp	r1, ip
 80149e0:	f2c0 80c6 	blt.w	8014b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80149e4:	3301      	adds	r3, #1
 80149e6:	f100 80c3 	bmi.w	8014b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80149ea:	429a      	cmp	r2, r3
 80149ec:	f2c0 80c0 	blt.w	8014b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80149f0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80149f4:	4647      	mov	r7, r8
 80149f6:	f1bb 0f00 	cmp.w	fp, #0
 80149fa:	f340 80e3 	ble.w	8014bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80149fe:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014a00:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014a02:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8014a06:	689b      	ldr	r3, [r3, #8]
 8014a08:	ea5f 422a 	movs.w	r2, sl, asr #16
 8014a0c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8014a10:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8014a14:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8014a18:	f100 8121 	bmi.w	8014c5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014a1c:	f103 39ff 	add.w	r9, r3, #4294967295
 8014a20:	454a      	cmp	r2, r9
 8014a22:	f280 811c 	bge.w	8014c5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014a26:	f1bc 0f00 	cmp.w	ip, #0
 8014a2a:	f2c0 8118 	blt.w	8014c5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014a2e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8014a32:	45cc      	cmp	ip, r9
 8014a34:	f280 8113 	bge.w	8014c5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014a38:	b21b      	sxth	r3, r3
 8014a3a:	fb0c 2203 	mla	r2, ip, r3, r2
 8014a3e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014a40:	eb04 0902 	add.w	r9, r4, r2
 8014a44:	5ca2      	ldrb	r2, [r4, r2]
 8014a46:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8014a4a:	2800      	cmp	r0, #0
 8014a4c:	f000 80fe 	beq.w	8014c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8014a50:	f899 2001 	ldrb.w	r2, [r9, #1]
 8014a54:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014a58:	9211      	str	r2, [sp, #68]	; 0x44
 8014a5a:	b151      	cbz	r1, 8014a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014a5c:	eb09 0203 	add.w	r2, r9, r3
 8014a60:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014a64:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014a68:	930f      	str	r3, [sp, #60]	; 0x3c
 8014a6a:	7853      	ldrb	r3, [r2, #1]
 8014a6c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014a70:	9312      	str	r3, [sp, #72]	; 0x48
 8014a72:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014a74:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014a76:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014a7a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014a7e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014a82:	ea4c 0c03 	orr.w	ip, ip, r3
 8014a86:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014a88:	041b      	lsls	r3, r3, #16
 8014a8a:	fb10 f201 	smulbb	r2, r0, r1
 8014a8e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8014a92:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014a96:	10d2      	asrs	r2, r2, #3
 8014a98:	4323      	orrs	r3, r4
 8014a9a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8014a9e:	4353      	muls	r3, r2
 8014aa0:	fb09 330c 	mla	r3, r9, ip, r3
 8014aa4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014aa8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014aac:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014ab0:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014ab4:	f1c1 0c10 	rsb	ip, r1, #16
 8014ab8:	ebac 0c00 	sub.w	ip, ip, r0
 8014abc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014ac0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014ac4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014ac6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014ac8:	0418      	lsls	r0, r3, #16
 8014aca:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014ace:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014ad2:	4318      	orrs	r0, r3
 8014ad4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014ad8:	fb02 c200 	mla	r2, r2, r0, ip
 8014adc:	0d53      	lsrs	r3, r2, #21
 8014ade:	0952      	lsrs	r2, r2, #5
 8014ae0:	8838      	ldrh	r0, [r7, #0]
 8014ae2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014ae6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014aea:	431a      	orrs	r2, r3
 8014aec:	b292      	uxth	r2, r2
 8014aee:	1201      	asrs	r1, r0, #8
 8014af0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8014af4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8014af8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014afc:	fb11 f104 	smulbb	r1, r1, r4
 8014b00:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8014b04:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014b08:	00c0      	lsls	r0, r0, #3
 8014b0a:	fb0c 1c03 	mla	ip, ip, r3, r1
 8014b0e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014b12:	10d1      	asrs	r1, r2, #3
 8014b14:	b2c0      	uxtb	r0, r0
 8014b16:	00d2      	lsls	r2, r2, #3
 8014b18:	b2d2      	uxtb	r2, r2
 8014b1a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014b1e:	fb1e fe04 	smulbb	lr, lr, r4
 8014b22:	fb10 f004 	smulbb	r0, r0, r4
 8014b26:	fa1f fc8c 	uxth.w	ip, ip
 8014b2a:	fb01 e103 	mla	r1, r1, r3, lr
 8014b2e:	fb02 0303 	mla	r3, r2, r3, r0
 8014b32:	b29a      	uxth	r2, r3
 8014b34:	f10c 0301 	add.w	r3, ip, #1
 8014b38:	b289      	uxth	r1, r1
 8014b3a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8014b3e:	1c53      	adds	r3, r2, #1
 8014b40:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014b44:	1c4a      	adds	r2, r1, #1
 8014b46:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014b4a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014b4e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014b52:	0949      	lsrs	r1, r1, #5
 8014b54:	ea43 030c 	orr.w	r3, r3, ip
 8014b58:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014b5c:	430b      	orrs	r3, r1
 8014b5e:	803b      	strh	r3, [r7, #0]
 8014b60:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014b62:	449a      	add	sl, r3
 8014b64:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014b66:	3702      	adds	r7, #2
 8014b68:	441d      	add	r5, r3
 8014b6a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014b6e:	e742      	b.n	80149f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8014b70:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014b72:	449a      	add	sl, r3
 8014b74:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014b76:	441d      	add	r5, r3
 8014b78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014b7a:	3b01      	subs	r3, #1
 8014b7c:	9309      	str	r3, [sp, #36]	; 0x24
 8014b7e:	f108 0802 	add.w	r8, r8, #2
 8014b82:	e718      	b.n	80149b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014b84:	d023      	beq.n	8014bce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8014b86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014b88:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8014b8a:	3b01      	subs	r3, #1
 8014b8c:	fb00 a003 	mla	r0, r0, r3, sl
 8014b90:	1400      	asrs	r0, r0, #16
 8014b92:	f53f af2d 	bmi.w	80149f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014b96:	3901      	subs	r1, #1
 8014b98:	4288      	cmp	r0, r1
 8014b9a:	f6bf af29 	bge.w	80149f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014b9e:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8014ba0:	fb01 5303 	mla	r3, r1, r3, r5
 8014ba4:	141b      	asrs	r3, r3, #16
 8014ba6:	f53f af23 	bmi.w	80149f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014baa:	3a01      	subs	r2, #1
 8014bac:	4293      	cmp	r3, r2
 8014bae:	f6bf af1f 	bge.w	80149f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014bb2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8014bb6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8014bba:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8014bbe:	f1be 0f00 	cmp.w	lr, #0
 8014bc2:	dc6c      	bgt.n	8014c9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8014bc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014bc6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8014bca:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8014bce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014bd0:	2b00      	cmp	r3, #0
 8014bd2:	f340 810e 	ble.w	8014df2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8014bd6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014bda:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014bde:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014be2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014be4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014be8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014bec:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014bf0:	eef0 6a48 	vmov.f32	s13, s16
 8014bf4:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014bf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014bfc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014c00:	ee16 aa90 	vmov	sl, s13
 8014c04:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014c08:	eef0 6a68 	vmov.f32	s13, s17
 8014c0c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014c10:	ee18 2a10 	vmov	r2, s16
 8014c14:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014c18:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c1c:	ee18 2a90 	vmov	r2, s17
 8014c20:	932d      	str	r3, [sp, #180]	; 0xb4
 8014c22:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014c24:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c28:	932e      	str	r3, [sp, #184]	; 0xb8
 8014c2a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c2c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8014c2e:	3b01      	subs	r3, #1
 8014c30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014c34:	930c      	str	r3, [sp, #48]	; 0x30
 8014c36:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014c38:	bf08      	it	eq
 8014c3a:	4613      	moveq	r3, r2
 8014c3c:	ee16 5a90 	vmov	r5, s13
 8014c40:	9309      	str	r3, [sp, #36]	; 0x24
 8014c42:	eef0 8a67 	vmov.f32	s17, s15
 8014c46:	eeb0 8a47 	vmov.f32	s16, s14
 8014c4a:	e6a6      	b.n	801499a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8014c4c:	2900      	cmp	r1, #0
 8014c4e:	f43f af10 	beq.w	8014a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014c52:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014c56:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014c5a:	930f      	str	r3, [sp, #60]	; 0x3c
 8014c5c:	e709      	b.n	8014a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014c5e:	f112 0901 	adds.w	r9, r2, #1
 8014c62:	f53f af7d 	bmi.w	8014b60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014c66:	454b      	cmp	r3, r9
 8014c68:	f6ff af7a 	blt.w	8014b60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014c6c:	f11c 0901 	adds.w	r9, ip, #1
 8014c70:	f53f af76 	bmi.w	8014b60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014c74:	45ce      	cmp	lr, r9
 8014c76:	f6ff af73 	blt.w	8014b60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014c7a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014c7c:	9202      	str	r2, [sp, #8]
 8014c7e:	b21b      	sxth	r3, r3
 8014c80:	fa0f f28e 	sxth.w	r2, lr
 8014c84:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8014c88:	e9cd c003 	strd	ip, r0, [sp, #12]
 8014c8c:	9201      	str	r2, [sp, #4]
 8014c8e:	9300      	str	r3, [sp, #0]
 8014c90:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014c92:	9816      	ldr	r0, [sp, #88]	; 0x58
 8014c94:	4633      	mov	r3, r6
 8014c96:	4639      	mov	r1, r7
 8014c98:	f7ff fd70 	bl	801477c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8014c9c:	e760      	b.n	8014b60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014c9e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014ca0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014ca2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014ca6:	ea4f 422a 	mov.w	r2, sl, asr #16
 8014caa:	1429      	asrs	r1, r5, #16
 8014cac:	fb03 2101 	mla	r1, r3, r1, r2
 8014cb0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014cb2:	440a      	add	r2, r1
 8014cb4:	5c61      	ldrb	r1, [r4, r1]
 8014cb6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8014cba:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8014cbe:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8014cc2:	f1bc 0f00 	cmp.w	ip, #0
 8014cc6:	f000 808c 	beq.w	8014de2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8014cca:	7857      	ldrb	r7, [r2, #1]
 8014ccc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8014cd0:	9413      	str	r4, [sp, #76]	; 0x4c
 8014cd2:	b140      	cbz	r0, 8014ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8014cd4:	18d7      	adds	r7, r2, r3
 8014cd6:	5cd3      	ldrb	r3, [r2, r3]
 8014cd8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014cdc:	9310      	str	r3, [sp, #64]	; 0x40
 8014cde:	787b      	ldrb	r3, [r7, #1]
 8014ce0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014ce4:	9314      	str	r3, [sp, #80]	; 0x50
 8014ce6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014ce8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014cea:	fb1c f200 	smulbb	r2, ip, r0
 8014cee:	041f      	lsls	r7, r3, #16
 8014cf0:	10d2      	asrs	r2, r2, #3
 8014cf2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014cf6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8014cfa:	431f      	orrs	r7, r3
 8014cfc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8014d00:	9317      	str	r3, [sp, #92]	; 0x5c
 8014d02:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014d04:	041b      	lsls	r3, r3, #16
 8014d06:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8014d0a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014d0e:	ea43 030b 	orr.w	r3, r3, fp
 8014d12:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014d14:	4353      	muls	r3, r2
 8014d16:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014d1a:	fb04 3707 	mla	r7, r4, r7, r3
 8014d1e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014d22:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014d26:	ea43 0b01 	orr.w	fp, r3, r1
 8014d2a:	f1c0 0110 	rsb	r1, r0, #16
 8014d2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014d30:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014d32:	eba1 0c0c 	sub.w	ip, r1, ip
 8014d36:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014d3a:	fb0c 770b 	mla	r7, ip, fp, r7
 8014d3e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014d42:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8014d46:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014d4a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014d4e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014d52:	fb02 770c 	mla	r7, r2, ip, r7
 8014d56:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014d58:	0d79      	lsrs	r1, r7, #21
 8014d5a:	097f      	lsrs	r7, r7, #5
 8014d5c:	8812      	ldrh	r2, [r2, #0]
 8014d5e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014d62:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014d66:	430f      	orrs	r7, r1
 8014d68:	b2bb      	uxth	r3, r7
 8014d6a:	1211      	asrs	r1, r2, #8
 8014d6c:	1218      	asrs	r0, r3, #8
 8014d6e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014d72:	fb11 f104 	smulbb	r1, r1, r4
 8014d76:	10d7      	asrs	r7, r2, #3
 8014d78:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014d7c:	00d2      	lsls	r2, r2, #3
 8014d7e:	fb00 1009 	mla	r0, r0, r9, r1
 8014d82:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014d86:	10d9      	asrs	r1, r3, #3
 8014d88:	b2d2      	uxtb	r2, r2
 8014d8a:	00db      	lsls	r3, r3, #3
 8014d8c:	fb17 f704 	smulbb	r7, r7, r4
 8014d90:	fb12 f204 	smulbb	r2, r2, r4
 8014d94:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014d98:	b2db      	uxtb	r3, r3
 8014d9a:	b280      	uxth	r0, r0
 8014d9c:	fb01 7109 	mla	r1, r1, r9, r7
 8014da0:	fb03 2309 	mla	r3, r3, r9, r2
 8014da4:	b29b      	uxth	r3, r3
 8014da6:	b289      	uxth	r1, r1
 8014da8:	1c42      	adds	r2, r0, #1
 8014daa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8014dae:	1c4f      	adds	r7, r1, #1
 8014db0:	1c5a      	adds	r2, r3, #1
 8014db2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8014db6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8014dba:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8014dbe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014dc2:	0949      	lsrs	r1, r1, #5
 8014dc4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014dc6:	4310      	orrs	r0, r2
 8014dc8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014dcc:	4308      	orrs	r0, r1
 8014dce:	f823 0b02 	strh.w	r0, [r3], #2
 8014dd2:	930e      	str	r3, [sp, #56]	; 0x38
 8014dd4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014dd6:	449a      	add	sl, r3
 8014dd8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014dda:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014dde:	441d      	add	r5, r3
 8014de0:	e6ed      	b.n	8014bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8014de2:	2800      	cmp	r0, #0
 8014de4:	f43f af7f 	beq.w	8014ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8014de8:	5cd3      	ldrb	r3, [r2, r3]
 8014dea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014dee:	9310      	str	r3, [sp, #64]	; 0x40
 8014df0:	e779      	b.n	8014ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8014df2:	b019      	add	sp, #100	; 0x64
 8014df4:	ecbd 8b08 	vpop	{d8-d11}
 8014df8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8014dfc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014e00:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8014e04:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8014e08:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8014e0c:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8014e10:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8014e14:	8808      	ldrh	r0, [r1, #0]
 8014e16:	fb06 570e 	mla	r7, r6, lr, r5
 8014e1a:	2e00      	cmp	r6, #0
 8014e1c:	eb02 0807 	add.w	r8, r2, r7
 8014e20:	db38      	blt.n	8014e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8014e22:	45b1      	cmp	r9, r6
 8014e24:	dd36      	ble.n	8014e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8014e26:	2d00      	cmp	r5, #0
 8014e28:	db32      	blt.n	8014e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014e2a:	45ae      	cmp	lr, r5
 8014e2c:	dd30      	ble.n	8014e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014e2e:	5dd2      	ldrb	r2, [r2, r7]
 8014e30:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8014e34:	1c6a      	adds	r2, r5, #1
 8014e36:	d430      	bmi.n	8014e9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014e38:	4596      	cmp	lr, r2
 8014e3a:	dd2e      	ble.n	8014e9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014e3c:	b36c      	cbz	r4, 8014e9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014e3e:	f898 2001 	ldrb.w	r2, [r8, #1]
 8014e42:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8014e46:	3601      	adds	r6, #1
 8014e48:	d42b      	bmi.n	8014ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014e4a:	45b1      	cmp	r9, r6
 8014e4c:	dd29      	ble.n	8014ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014e4e:	f1bc 0f00 	cmp.w	ip, #0
 8014e52:	d028      	beq.n	8014ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8014e54:	2d00      	cmp	r5, #0
 8014e56:	db22      	blt.n	8014e9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014e58:	45ae      	cmp	lr, r5
 8014e5a:	dd20      	ble.n	8014e9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014e5c:	f818 600e 	ldrb.w	r6, [r8, lr]
 8014e60:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8014e64:	3501      	adds	r5, #1
 8014e66:	d407      	bmi.n	8014e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014e68:	45ae      	cmp	lr, r5
 8014e6a:	dd05      	ble.n	8014e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014e6c:	b134      	cbz	r4, 8014e7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8014e6e:	44c6      	add	lr, r8
 8014e70:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8014e74:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014e78:	2c0f      	cmp	r4, #15
 8014e7a:	d802      	bhi.n	8014e82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014e7c:	f1bc 0f0f 	cmp.w	ip, #15
 8014e80:	d914      	bls.n	8014eac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8014e82:	4b26      	ldr	r3, [pc, #152]	; (8014f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8014e84:	4a26      	ldr	r2, [pc, #152]	; (8014f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8014e86:	4827      	ldr	r0, [pc, #156]	; (8014f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8014e88:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8014e8c:	f006 fdc6 	bl	801ba1c <__assert_func>
 8014e90:	4607      	mov	r7, r0
 8014e92:	e7cf      	b.n	8014e34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8014e94:	4602      	mov	r2, r0
 8014e96:	4607      	mov	r7, r0
 8014e98:	e7d5      	b.n	8014e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014e9a:	4602      	mov	r2, r0
 8014e9c:	e7d3      	b.n	8014e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014e9e:	4606      	mov	r6, r0
 8014ea0:	e7e0      	b.n	8014e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8014ea2:	4606      	mov	r6, r0
 8014ea4:	e7e8      	b.n	8014e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014ea6:	2c0f      	cmp	r4, #15
 8014ea8:	d8eb      	bhi.n	8014e82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014eaa:	4606      	mov	r6, r0
 8014eac:	043d      	lsls	r5, r7, #16
 8014eae:	fb14 f30c 	smulbb	r3, r4, ip
 8014eb2:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8014eb6:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8014eba:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014ebe:	10db      	asrs	r3, r3, #3
 8014ec0:	432f      	orrs	r7, r5
 8014ec2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8014ec6:	f1cc 0510 	rsb	r5, ip, #16
 8014eca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014ece:	1b2d      	subs	r5, r5, r4
 8014ed0:	ea4e 0202 	orr.w	r2, lr, r2
 8014ed4:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8014ed8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8014edc:	4354      	muls	r4, r2
 8014ede:	fb05 4507 	mla	r5, r5, r7, r4
 8014ee2:	0404      	lsls	r4, r0, #16
 8014ee4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014ee8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014eec:	4320      	orrs	r0, r4
 8014eee:	fb03 5400 	mla	r4, r3, r0, r5
 8014ef2:	0430      	lsls	r0, r6, #16
 8014ef4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014ef8:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8014efc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8014f00:	4330      	orrs	r0, r6
 8014f02:	fb03 4000 	mla	r0, r3, r0, r4
 8014f06:	0d43      	lsrs	r3, r0, #21
 8014f08:	0940      	lsrs	r0, r0, #5
 8014f0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014f0e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014f12:	4318      	orrs	r0, r3
 8014f14:	8008      	strh	r0, [r1, #0]
 8014f16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014f1a:	bf00      	nop
 8014f1c:	0802050e 	.word	0x0802050e
 8014f20:	08020b87 	.word	0x08020b87
 8014f24:	08020592 	.word	0x08020592

08014f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014f28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f2c:	ed2d 8b0a 	vpush	{d8-d12}
 8014f30:	b093      	sub	sp, #76	; 0x4c
 8014f32:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8014f36:	920f      	str	r2, [sp, #60]	; 0x3c
 8014f38:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014f3a:	9108      	str	r1, [sp, #32]
 8014f3c:	9306      	str	r3, [sp, #24]
 8014f3e:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8014f42:	9010      	str	r0, [sp, #64]	; 0x40
 8014f44:	6850      	ldr	r0, [r2, #4]
 8014f46:	6812      	ldr	r2, [r2, #0]
 8014f48:	fb00 1303 	mla	r3, r0, r3, r1
 8014f4c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8014f50:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014f52:	681b      	ldr	r3, [r3, #0]
 8014f54:	9307      	str	r3, [sp, #28]
 8014f56:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014f58:	685f      	ldr	r7, [r3, #4]
 8014f5a:	eeb0 aa40 	vmov.f32	s20, s0
 8014f5e:	eef0 9a60 	vmov.f32	s19, s1
 8014f62:	eeb0 9a41 	vmov.f32	s18, s2
 8014f66:	eeb0 8a62 	vmov.f32	s16, s5
 8014f6a:	eef0 8a43 	vmov.f32	s17, s6
 8014f6e:	eeb0 ca44 	vmov.f32	s24, s8
 8014f72:	eef0 ba64 	vmov.f32	s23, s9
 8014f76:	eeb0 ba45 	vmov.f32	s22, s10
 8014f7a:	3704      	adds	r7, #4
 8014f7c:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8014f80:	9b08      	ldr	r3, [sp, #32]
 8014f82:	2b00      	cmp	r3, #0
 8014f84:	dc03      	bgt.n	8014f8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014f86:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014f88:	2b00      	cmp	r3, #0
 8014f8a:	f340 81b2 	ble.w	80152f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8014f8e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014f90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014f94:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014f98:	1e48      	subs	r0, r1, #1
 8014f9a:	f102 3cff 	add.w	ip, r2, #4294967295
 8014f9e:	9b06      	ldr	r3, [sp, #24]
 8014fa0:	2b00      	cmp	r3, #0
 8014fa2:	f340 80a9 	ble.w	80150f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8014fa6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8014faa:	ea4f 4326 	mov.w	r3, r6, asr #16
 8014fae:	d406      	bmi.n	8014fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014fb0:	4586      	cmp	lr, r0
 8014fb2:	da04      	bge.n	8014fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014fb4:	2b00      	cmp	r3, #0
 8014fb6:	db02      	blt.n	8014fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014fb8:	4563      	cmp	r3, ip
 8014fba:	f2c0 809e 	blt.w	80150fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014fbe:	f11e 0e01 	adds.w	lr, lr, #1
 8014fc2:	f100 808f 	bmi.w	80150e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014fc6:	4571      	cmp	r1, lr
 8014fc8:	f2c0 808c 	blt.w	80150e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014fcc:	3301      	adds	r3, #1
 8014fce:	f100 8089 	bmi.w	80150e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014fd2:	429a      	cmp	r2, r3
 8014fd4:	f2c0 8086 	blt.w	80150e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014fd8:	f8dd b018 	ldr.w	fp, [sp, #24]
 8014fdc:	46c8      	mov	r8, r9
 8014fde:	f1bb 0f00 	cmp.w	fp, #0
 8014fe2:	f340 80a6 	ble.w	8015132 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8014fe6:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014fe8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014fea:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8014fee:	689b      	ldr	r3, [r3, #8]
 8014ff0:	1422      	asrs	r2, r4, #16
 8014ff2:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8014ff6:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8014ffa:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8014ffe:	f100 80e3 	bmi.w	80151c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015002:	f103 3aff 	add.w	sl, r3, #4294967295
 8015006:	4552      	cmp	r2, sl
 8015008:	f280 80de 	bge.w	80151c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801500c:	f1bc 0f00 	cmp.w	ip, #0
 8015010:	f2c0 80da 	blt.w	80151c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015014:	f10e 3aff 	add.w	sl, lr, #4294967295
 8015018:	45d4      	cmp	ip, sl
 801501a:	f280 80d5 	bge.w	80151c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801501e:	b21b      	sxth	r3, r3
 8015020:	fb0c 2203 	mla	r2, ip, r3, r2
 8015024:	9d07      	ldr	r5, [sp, #28]
 8015026:	eb05 0a02 	add.w	sl, r5, r2
 801502a:	5caa      	ldrb	r2, [r5, r2]
 801502c:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8015030:	2800      	cmp	r0, #0
 8015032:	f000 80c0 	beq.w	80151b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8015036:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801503a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801503e:	920b      	str	r2, [sp, #44]	; 0x2c
 8015040:	b151      	cbz	r1, 8015058 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8015042:	eb0a 0203 	add.w	r2, sl, r3
 8015046:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801504a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801504e:	9309      	str	r3, [sp, #36]	; 0x24
 8015050:	7853      	ldrb	r3, [r2, #1]
 8015052:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015056:	930c      	str	r3, [sp, #48]	; 0x30
 8015058:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801505a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801505c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015060:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015064:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015068:	ea4c 0c03 	orr.w	ip, ip, r3
 801506c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801506e:	041b      	lsls	r3, r3, #16
 8015070:	fb10 f201 	smulbb	r2, r0, r1
 8015074:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015078:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801507c:	10d2      	asrs	r2, r2, #3
 801507e:	432b      	orrs	r3, r5
 8015080:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8015084:	4353      	muls	r3, r2
 8015086:	fb0a 330c 	mla	r3, sl, ip, r3
 801508a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801508e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015092:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015096:	ea4c 0e0e 	orr.w	lr, ip, lr
 801509a:	f1c1 0c10 	rsb	ip, r1, #16
 801509e:	ebac 0c00 	sub.w	ip, ip, r0
 80150a2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80150a6:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80150aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80150ac:	0418      	lsls	r0, r3, #16
 80150ae:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80150b2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80150b6:	4318      	orrs	r0, r3
 80150b8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80150bc:	fb02 c200 	mla	r2, r2, r0, ip
 80150c0:	0d53      	lsrs	r3, r2, #21
 80150c2:	0952      	lsrs	r2, r2, #5
 80150c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80150c8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80150cc:	431a      	orrs	r2, r3
 80150ce:	f8a8 2000 	strh.w	r2, [r8]
 80150d2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80150d4:	441c      	add	r4, r3
 80150d6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80150d8:	f108 0802 	add.w	r8, r8, #2
 80150dc:	441e      	add	r6, r3
 80150de:	f10b 3bff 	add.w	fp, fp, #4294967295
 80150e2:	e77c      	b.n	8014fde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80150e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80150e6:	441c      	add	r4, r3
 80150e8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80150ea:	441e      	add	r6, r3
 80150ec:	9b06      	ldr	r3, [sp, #24]
 80150ee:	3b01      	subs	r3, #1
 80150f0:	9306      	str	r3, [sp, #24]
 80150f2:	f109 0902 	add.w	r9, r9, #2
 80150f6:	e752      	b.n	8014f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80150f8:	d020      	beq.n	801513c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80150fa:	9b06      	ldr	r3, [sp, #24]
 80150fc:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80150fe:	3b01      	subs	r3, #1
 8015100:	fb00 4003 	mla	r0, r0, r3, r4
 8015104:	1400      	asrs	r0, r0, #16
 8015106:	f53f af67 	bmi.w	8014fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801510a:	3901      	subs	r1, #1
 801510c:	4288      	cmp	r0, r1
 801510e:	f6bf af63 	bge.w	8014fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015112:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015114:	fb01 6303 	mla	r3, r1, r3, r6
 8015118:	141b      	asrs	r3, r3, #16
 801511a:	f53f af5d 	bmi.w	8014fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801511e:	3a01      	subs	r2, #1
 8015120:	4293      	cmp	r3, r2
 8015122:	f6bf af59 	bge.w	8014fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015126:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801512a:	46ca      	mov	sl, r9
 801512c:	f1b8 0f00 	cmp.w	r8, #0
 8015130:	dc67      	bgt.n	8015202 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8015132:	9b06      	ldr	r3, [sp, #24]
 8015134:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8015138:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801513c:	9b08      	ldr	r3, [sp, #32]
 801513e:	2b00      	cmp	r3, #0
 8015140:	f340 80d7 	ble.w	80152f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8015144:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8015148:	ee79 9aab 	vadd.f32	s19, s19, s23
 801514c:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8015150:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015152:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8015156:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801515a:	eef0 6a48 	vmov.f32	s13, s16
 801515e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015162:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015166:	ee37 8a48 	vsub.f32	s16, s14, s16
 801516a:	ee16 4a90 	vmov	r4, s13
 801516e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015172:	eef0 6a68 	vmov.f32	s13, s17
 8015176:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801517a:	ee18 2a10 	vmov	r2, s16
 801517e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015182:	fb92 f3f3 	sdiv	r3, r2, r3
 8015186:	ee18 2a90 	vmov	r2, s17
 801518a:	9329      	str	r3, [sp, #164]	; 0xa4
 801518c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801518e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015192:	932a      	str	r3, [sp, #168]	; 0xa8
 8015194:	9b08      	ldr	r3, [sp, #32]
 8015196:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015198:	3b01      	subs	r3, #1
 801519a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801519e:	9308      	str	r3, [sp, #32]
 80151a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80151a2:	bf08      	it	eq
 80151a4:	4613      	moveq	r3, r2
 80151a6:	ee16 6a90 	vmov	r6, s13
 80151aa:	9306      	str	r3, [sp, #24]
 80151ac:	eef0 8a67 	vmov.f32	s17, s15
 80151b0:	eeb0 8a47 	vmov.f32	s16, s14
 80151b4:	e6e4      	b.n	8014f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80151b6:	2900      	cmp	r1, #0
 80151b8:	f43f af4e 	beq.w	8015058 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80151bc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80151c0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80151c4:	9309      	str	r3, [sp, #36]	; 0x24
 80151c6:	e747      	b.n	8015058 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80151c8:	f112 0a01 	adds.w	sl, r2, #1
 80151cc:	d481      	bmi.n	80150d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80151ce:	4553      	cmp	r3, sl
 80151d0:	f6ff af7f 	blt.w	80150d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80151d4:	f11c 0a01 	adds.w	sl, ip, #1
 80151d8:	f53f af7b 	bmi.w	80150d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80151dc:	45d6      	cmp	lr, sl
 80151de:	f6ff af78 	blt.w	80150d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80151e2:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80151e6:	b21b      	sxth	r3, r3
 80151e8:	fa0f f28e 	sxth.w	r2, lr
 80151ec:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80151f0:	9201      	str	r2, [sp, #4]
 80151f2:	9300      	str	r3, [sp, #0]
 80151f4:	9a07      	ldr	r2, [sp, #28]
 80151f6:	9810      	ldr	r0, [sp, #64]	; 0x40
 80151f8:	463b      	mov	r3, r7
 80151fa:	4641      	mov	r1, r8
 80151fc:	f7ff fdfe 	bl	8014dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8015200:	e767      	b.n	80150d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015202:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015204:	9d07      	ldr	r5, [sp, #28]
 8015206:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801520a:	1422      	asrs	r2, r4, #16
 801520c:	1431      	asrs	r1, r6, #16
 801520e:	fb03 2101 	mla	r1, r3, r1, r2
 8015212:	9a07      	ldr	r2, [sp, #28]
 8015214:	440a      	add	r2, r1
 8015216:	5c69      	ldrb	r1, [r5, r1]
 8015218:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801521c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8015220:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8015224:	f1be 0f00 	cmp.w	lr, #0
 8015228:	d05c      	beq.n	80152e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801522a:	f892 c001 	ldrb.w	ip, [r2, #1]
 801522e:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8015232:	950d      	str	r5, [sp, #52]	; 0x34
 8015234:	b150      	cbz	r0, 801524c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8015236:	eb02 0c03 	add.w	ip, r2, r3
 801523a:	5cd3      	ldrb	r3, [r2, r3]
 801523c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015240:	930a      	str	r3, [sp, #40]	; 0x28
 8015242:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8015246:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801524a:	930e      	str	r3, [sp, #56]	; 0x38
 801524c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801524e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015250:	fb1e f200 	smulbb	r2, lr, r0
 8015254:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015258:	10d2      	asrs	r2, r2, #3
 801525a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801525e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015262:	ea4c 0c03 	orr.w	ip, ip, r3
 8015266:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801526a:	9311      	str	r3, [sp, #68]	; 0x44
 801526c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801526e:	041b      	lsls	r3, r3, #16
 8015270:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8015274:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015278:	ea43 030b 	orr.w	r3, r3, fp
 801527c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801527e:	4353      	muls	r3, r2
 8015280:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8015284:	fb05 3c0c 	mla	ip, r5, ip, r3
 8015288:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801528c:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8015290:	ea43 0b01 	orr.w	fp, r3, r1
 8015294:	f1c0 0110 	rsb	r1, r0, #16
 8015298:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801529a:	eba1 0e0e 	sub.w	lr, r1, lr
 801529e:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80152a2:	fb0e cc0b 	mla	ip, lr, fp, ip
 80152a6:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80152aa:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80152ae:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80152b2:	ea4b 0e0e 	orr.w	lr, fp, lr
 80152b6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80152ba:	fb02 cc0e 	mla	ip, r2, lr, ip
 80152be:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80152c2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80152c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80152ca:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80152ce:	ea43 0c0c 	orr.w	ip, r3, ip
 80152d2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80152d4:	f82a cb02 	strh.w	ip, [sl], #2
 80152d8:	441c      	add	r4, r3
 80152da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80152dc:	f108 38ff 	add.w	r8, r8, #4294967295
 80152e0:	441e      	add	r6, r3
 80152e2:	e723      	b.n	801512c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80152e4:	2800      	cmp	r0, #0
 80152e6:	d0b1      	beq.n	801524c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80152e8:	5cd3      	ldrb	r3, [r2, r3]
 80152ea:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80152ee:	930a      	str	r3, [sp, #40]	; 0x28
 80152f0:	e7ac      	b.n	801524c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80152f2:	b013      	add	sp, #76	; 0x4c
 80152f4:	ecbd 8b0a 	vpop	{d8-d12}
 80152f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080152fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80152fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015300:	468b      	mov	fp, r1
 8015302:	8809      	ldrh	r1, [r1, #0]
 8015304:	b089      	sub	sp, #36	; 0x24
 8015306:	10cd      	asrs	r5, r1, #3
 8015308:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 801530c:	ea4f 2921 	mov.w	r9, r1, asr #8
 8015310:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015314:	00c9      	lsls	r1, r1, #3
 8015316:	9500      	str	r5, [sp, #0]
 8015318:	b2c9      	uxtb	r1, r1
 801531a:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 801531e:	9101      	str	r1, [sp, #4]
 8015320:	9900      	ldr	r1, [sp, #0]
 8015322:	9202      	str	r2, [sp, #8]
 8015324:	fb04 650e 	mla	r5, r4, lr, r6
 8015328:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801532c:	eb02 0805 	add.w	r8, r2, r5
 8015330:	0209      	lsls	r1, r1, #8
 8015332:	9a01      	ldr	r2, [sp, #4]
 8015334:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8015338:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 801533c:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8015340:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8015344:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8015348:	4311      	orrs	r1, r2
 801534a:	2c00      	cmp	r4, #0
 801534c:	9107      	str	r1, [sp, #28]
 801534e:	db43      	blt.n	80153d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8015350:	45a2      	cmp	sl, r4
 8015352:	dd41      	ble.n	80153d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8015354:	2e00      	cmp	r6, #0
 8015356:	db3d      	blt.n	80153d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8015358:	45b6      	cmp	lr, r6
 801535a:	dd3b      	ble.n	80153d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801535c:	9a02      	ldr	r2, [sp, #8]
 801535e:	5d55      	ldrb	r5, [r2, r5]
 8015360:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015364:	441d      	add	r5, r3
 8015366:	1c72      	adds	r2, r6, #1
 8015368:	d439      	bmi.n	80153de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801536a:	4596      	cmp	lr, r2
 801536c:	dd37      	ble.n	80153de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801536e:	2f00      	cmp	r7, #0
 8015370:	d035      	beq.n	80153de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8015372:	f898 1001 	ldrb.w	r1, [r8, #1]
 8015376:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801537a:	4419      	add	r1, r3
 801537c:	3401      	adds	r4, #1
 801537e:	d432      	bmi.n	80153e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015380:	45a2      	cmp	sl, r4
 8015382:	dd30      	ble.n	80153e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015384:	b378      	cbz	r0, 80153e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015386:	2e00      	cmp	r6, #0
 8015388:	db2b      	blt.n	80153e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801538a:	45b6      	cmp	lr, r6
 801538c:	dd29      	ble.n	80153e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801538e:	f818 400e 	ldrb.w	r4, [r8, lr]
 8015392:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015396:	441c      	add	r4, r3
 8015398:	3601      	adds	r6, #1
 801539a:	d427      	bmi.n	80153ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801539c:	45b6      	cmp	lr, r6
 801539e:	dd25      	ble.n	80153ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80153a0:	b327      	cbz	r7, 80153ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80153a2:	44c6      	add	lr, r8
 80153a4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80153a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80153ac:	4413      	add	r3, r2
 80153ae:	782a      	ldrb	r2, [r5, #0]
 80153b0:	9202      	str	r2, [sp, #8]
 80153b2:	780a      	ldrb	r2, [r1, #0]
 80153b4:	9203      	str	r2, [sp, #12]
 80153b6:	7822      	ldrb	r2, [r4, #0]
 80153b8:	9204      	str	r2, [sp, #16]
 80153ba:	2f0f      	cmp	r7, #15
 80153bc:	781a      	ldrb	r2, [r3, #0]
 80153be:	9205      	str	r2, [sp, #20]
 80153c0:	d801      	bhi.n	80153c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 80153c2:	280f      	cmp	r0, #15
 80153c4:	d914      	bls.n	80153f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 80153c6:	4b3f      	ldr	r3, [pc, #252]	; (80154c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 80153c8:	4a3f      	ldr	r2, [pc, #252]	; (80154c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 80153ca:	4840      	ldr	r0, [pc, #256]	; (80154cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 80153cc:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 80153d0:	f006 fb24 	bl	801ba1c <__assert_func>
 80153d4:	ad07      	add	r5, sp, #28
 80153d6:	e7c6      	b.n	8015366 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 80153d8:	a907      	add	r1, sp, #28
 80153da:	460d      	mov	r5, r1
 80153dc:	e7ce      	b.n	801537c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80153de:	a907      	add	r1, sp, #28
 80153e0:	e7cc      	b.n	801537c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80153e2:	ac07      	add	r4, sp, #28
 80153e4:	e7d8      	b.n	8015398 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 80153e6:	ab07      	add	r3, sp, #28
 80153e8:	461c      	mov	r4, r3
 80153ea:	e7e0      	b.n	80153ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80153ec:	ab07      	add	r3, sp, #28
 80153ee:	e7de      	b.n	80153ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80153f0:	b2ba      	uxth	r2, r7
 80153f2:	b280      	uxth	r0, r0
 80153f4:	fb02 fa00 	mul.w	sl, r2, r0
 80153f8:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80153fc:	0112      	lsls	r2, r2, #4
 80153fe:	b280      	uxth	r0, r0
 8015400:	f891 8002 	ldrb.w	r8, [r1, #2]
 8015404:	7849      	ldrb	r1, [r1, #1]
 8015406:	78ae      	ldrb	r6, [r5, #2]
 8015408:	786d      	ldrb	r5, [r5, #1]
 801540a:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 801540e:	eba2 020a 	sub.w	r2, r2, sl
 8015412:	b292      	uxth	r2, r2
 8015414:	ebae 0e00 	sub.w	lr, lr, r0
 8015418:	fa1f fe8e 	uxth.w	lr, lr
 801541c:	4351      	muls	r1, r2
 801541e:	fb02 f808 	mul.w	r8, r2, r8
 8015422:	fb0e 8806 	mla	r8, lr, r6, r8
 8015426:	fb0e 1505 	mla	r5, lr, r5, r1
 801542a:	78a6      	ldrb	r6, [r4, #2]
 801542c:	7861      	ldrb	r1, [r4, #1]
 801542e:	fa1f f78c 	uxth.w	r7, ip
 8015432:	fb00 8806 	mla	r8, r0, r6, r8
 8015436:	fb00 5501 	mla	r5, r0, r1, r5
 801543a:	789e      	ldrb	r6, [r3, #2]
 801543c:	7859      	ldrb	r1, [r3, #1]
 801543e:	9b00      	ldr	r3, [sp, #0]
 8015440:	ea6f 0c0c 	mvn.w	ip, ip
 8015444:	fa5f fc8c 	uxtb.w	ip, ip
 8015448:	fb0a 5101 	mla	r1, sl, r1, r5
 801544c:	fb13 f50c 	smulbb	r5, r3, ip
 8015450:	9b03      	ldr	r3, [sp, #12]
 8015452:	435a      	muls	r2, r3
 8015454:	9b02      	ldr	r3, [sp, #8]
 8015456:	fb0e 2203 	mla	r2, lr, r3, r2
 801545a:	9b04      	ldr	r3, [sp, #16]
 801545c:	fb00 2003 	mla	r0, r0, r3, r2
 8015460:	9b05      	ldr	r3, [sp, #20]
 8015462:	fb0a 8606 	mla	r6, sl, r6, r8
 8015466:	fb19 f90c 	smulbb	r9, r9, ip
 801546a:	fb0a 0a03 	mla	sl, sl, r3, r0
 801546e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015472:	9b01      	ldr	r3, [sp, #4]
 8015474:	fb06 9607 	mla	r6, r6, r7, r9
 8015478:	b2b6      	uxth	r6, r6
 801547a:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 801547e:	fb13 fc0c 	smulbb	ip, r3, ip
 8015482:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015486:	fb01 5107 	mla	r1, r1, r7, r5
 801548a:	f106 0901 	add.w	r9, r6, #1
 801548e:	fb0a c707 	mla	r7, sl, r7, ip
 8015492:	b2bf      	uxth	r7, r7
 8015494:	b289      	uxth	r1, r1
 8015496:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801549a:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 801549e:	1c4d      	adds	r5, r1, #1
 80154a0:	1c7e      	adds	r6, r7, #1
 80154a2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80154a6:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80154aa:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80154ae:	0949      	lsrs	r1, r1, #5
 80154b0:	ea46 0609 	orr.w	r6, r6, r9
 80154b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80154b8:	430e      	orrs	r6, r1
 80154ba:	f8ab 6000 	strh.w	r6, [fp]
 80154be:	b009      	add	sp, #36	; 0x24
 80154c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80154c4:	0802050e 	.word	0x0802050e
 80154c8:	08020ade 	.word	0x08020ade
 80154cc:	08020592 	.word	0x08020592

080154d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80154d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154d4:	ed2d 8b08 	vpush	{d8-d11}
 80154d8:	b095      	sub	sp, #84	; 0x54
 80154da:	eeb0 aa40 	vmov.f32	s20, s0
 80154de:	9212      	str	r2, [sp, #72]	; 0x48
 80154e0:	9309      	str	r3, [sp, #36]	; 0x24
 80154e2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80154e4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80154e8:	930f      	str	r3, [sp, #60]	; 0x3c
 80154ea:	910e      	str	r1, [sp, #56]	; 0x38
 80154ec:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80154f0:	9013      	str	r0, [sp, #76]	; 0x4c
 80154f2:	6850      	ldr	r0, [r2, #4]
 80154f4:	6812      	ldr	r2, [r2, #0]
 80154f6:	fb00 1303 	mla	r3, r0, r3, r1
 80154fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80154fe:	930a      	str	r3, [sp, #40]	; 0x28
 8015500:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015502:	681b      	ldr	r3, [r3, #0]
 8015504:	930d      	str	r3, [sp, #52]	; 0x34
 8015506:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015508:	685c      	ldr	r4, [r3, #4]
 801550a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801550c:	43db      	mvns	r3, r3
 801550e:	b2db      	uxtb	r3, r3
 8015510:	eef0 9a60 	vmov.f32	s19, s1
 8015514:	eeb0 9a41 	vmov.f32	s18, s2
 8015518:	eeb0 8a62 	vmov.f32	s16, s5
 801551c:	eef0 8a43 	vmov.f32	s17, s6
 8015520:	eef0 ba44 	vmov.f32	s23, s8
 8015524:	eeb0 ba64 	vmov.f32	s22, s9
 8015528:	eef0 aa45 	vmov.f32	s21, s10
 801552c:	3404      	adds	r4, #4
 801552e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015530:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015532:	2b00      	cmp	r3, #0
 8015534:	dc03      	bgt.n	801553e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015536:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015538:	2b00      	cmp	r3, #0
 801553a:	f340 8255 	ble.w	80159e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801553e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015540:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015544:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015548:	1e48      	subs	r0, r1, #1
 801554a:	1e55      	subs	r5, r2, #1
 801554c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801554e:	2b00      	cmp	r3, #0
 8015550:	f340 80f9 	ble.w	8015746 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015554:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8015556:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015558:	1436      	asrs	r6, r6, #16
 801555a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801555e:	d406      	bmi.n	801556e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015560:	4286      	cmp	r6, r0
 8015562:	da04      	bge.n	801556e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015564:	2b00      	cmp	r3, #0
 8015566:	db02      	blt.n	801556e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015568:	42ab      	cmp	r3, r5
 801556a:	f2c0 80ed 	blt.w	8015748 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801556e:	3601      	adds	r6, #1
 8015570:	f100 80da 	bmi.w	8015728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015574:	42b1      	cmp	r1, r6
 8015576:	f2c0 80d7 	blt.w	8015728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801557a:	3301      	adds	r3, #1
 801557c:	f100 80d4 	bmi.w	8015728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015580:	429a      	cmp	r2, r3
 8015582:	f2c0 80d1 	blt.w	8015728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015586:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015588:	9311      	str	r3, [sp, #68]	; 0x44
 801558a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801558c:	930c      	str	r3, [sp, #48]	; 0x30
 801558e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015590:	2b00      	cmp	r3, #0
 8015592:	f340 80fa 	ble.w	801578a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015596:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8015598:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801559a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801559c:	68c6      	ldr	r6, [r0, #12]
 801559e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80155a0:	141d      	asrs	r5, r3, #16
 80155a2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80155a6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80155a8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80155aa:	1400      	asrs	r0, r0, #16
 80155ac:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80155b0:	6892      	ldr	r2, [r2, #8]
 80155b2:	f100 813e 	bmi.w	8015832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80155b6:	1e57      	subs	r7, r2, #1
 80155b8:	42b8      	cmp	r0, r7
 80155ba:	f280 813a 	bge.w	8015832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80155be:	2d00      	cmp	r5, #0
 80155c0:	f2c0 8137 	blt.w	8015832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80155c4:	1e77      	subs	r7, r6, #1
 80155c6:	42bd      	cmp	r5, r7
 80155c8:	f280 8133 	bge.w	8015832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80155cc:	b212      	sxth	r2, r2
 80155ce:	fb05 0002 	mla	r0, r5, r2, r0
 80155d2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80155d4:	f815 a000 	ldrb.w	sl, [r5, r0]
 80155d8:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80155dc:	182e      	adds	r6, r5, r0
 80155de:	eb04 050a 	add.w	r5, r4, sl
 80155e2:	2b00      	cmp	r3, #0
 80155e4:	f000 8117 	beq.w	8015816 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 80155e8:	f896 c001 	ldrb.w	ip, [r6, #1]
 80155ec:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80155f0:	44a4      	add	ip, r4
 80155f2:	2900      	cmp	r1, #0
 80155f4:	f000 8117 	beq.w	8015826 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80155f8:	18b0      	adds	r0, r6, r2
 80155fa:	5cb2      	ldrb	r2, [r6, r2]
 80155fc:	7840      	ldrb	r0, [r0, #1]
 80155fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015602:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015606:	4422      	add	r2, r4
 8015608:	4420      	add	r0, r4
 801560a:	b29b      	uxth	r3, r3
 801560c:	b289      	uxth	r1, r1
 801560e:	fb03 f901 	mul.w	r9, r3, r1
 8015612:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015616:	011b      	lsls	r3, r3, #4
 8015618:	b289      	uxth	r1, r1
 801561a:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801561e:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015622:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8015624:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8015628:	f8b6 e000 	ldrh.w	lr, [r6]
 801562c:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8015630:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8015634:	eba3 0309 	sub.w	r3, r3, r9
 8015638:	b29b      	uxth	r3, r3
 801563a:	eba8 0801 	sub.w	r8, r8, r1
 801563e:	fa1f f888 	uxth.w	r8, r8
 8015642:	435f      	muls	r7, r3
 8015644:	fb08 770b 	mla	r7, r8, fp, r7
 8015648:	f892 b002 	ldrb.w	fp, [r2, #2]
 801564c:	9310      	str	r3, [sp, #64]	; 0x40
 801564e:	fb01 770b 	mla	r7, r1, fp, r7
 8015652:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015656:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015658:	fb09 770b 	mla	r7, r9, fp, r7
 801565c:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8015660:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015664:	fb1b fb03 	smulbb	fp, fp, r3
 8015668:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801566c:	fb07 b706 	mla	r7, r7, r6, fp
 8015670:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015672:	f895 b001 	ldrb.w	fp, [r5, #1]
 8015676:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801567a:	f89c c000 	ldrb.w	ip, [ip]
 801567e:	435d      	muls	r5, r3
 8015680:	fb08 550b 	mla	r5, r8, fp, r5
 8015684:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015688:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801568a:	fb01 550b 	mla	r5, r1, fp, r5
 801568e:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015692:	fb09 550b 	mla	r5, r9, fp, r5
 8015696:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801569a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801569e:	fb1b fb03 	smulbb	fp, fp, r3
 80156a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80156a4:	fb03 f30c 	mul.w	r3, r3, ip
 80156a8:	f892 c000 	ldrb.w	ip, [r2]
 80156ac:	fb08 330a 	mla	r3, r8, sl, r3
 80156b0:	fb01 330c 	mla	r3, r1, ip, r3
 80156b4:	f890 c000 	ldrb.w	ip, [r0]
 80156b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80156bc:	fb09 3c0c 	mla	ip, r9, ip, r3
 80156c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80156c2:	fa5f fe8e 	uxtb.w	lr, lr
 80156c6:	b2bf      	uxth	r7, r7
 80156c8:	fb1e fe03 	smulbb	lr, lr, r3
 80156cc:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80156d0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80156d4:	fb05 b506 	mla	r5, r5, r6, fp
 80156d8:	1c7b      	adds	r3, r7, #1
 80156da:	fb0c e606 	mla	r6, ip, r6, lr
 80156de:	b2ad      	uxth	r5, r5
 80156e0:	b2b6      	uxth	r6, r6
 80156e2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80156e6:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80156ea:	f105 0b01 	add.w	fp, r5, #1
 80156ee:	1c77      	adds	r7, r6, #1
 80156f0:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80156f4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80156f8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80156fc:	096d      	lsrs	r5, r5, #5
 80156fe:	431f      	orrs	r7, r3
 8015700:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015704:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015706:	433d      	orrs	r5, r7
 8015708:	801d      	strh	r5, [r3, #0]
 801570a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801570c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801570e:	3302      	adds	r3, #2
 8015710:	930c      	str	r3, [sp, #48]	; 0x30
 8015712:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015714:	4413      	add	r3, r2
 8015716:	9327      	str	r3, [sp, #156]	; 0x9c
 8015718:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801571a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801571c:	4413      	add	r3, r2
 801571e:	9328      	str	r3, [sp, #160]	; 0xa0
 8015720:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015722:	3b01      	subs	r3, #1
 8015724:	9311      	str	r3, [sp, #68]	; 0x44
 8015726:	e732      	b.n	801558e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8015728:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801572a:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 801572c:	4433      	add	r3, r6
 801572e:	9327      	str	r3, [sp, #156]	; 0x9c
 8015730:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8015732:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015734:	4433      	add	r3, r6
 8015736:	9328      	str	r3, [sp, #160]	; 0xa0
 8015738:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801573a:	3b01      	subs	r3, #1
 801573c:	9309      	str	r3, [sp, #36]	; 0x24
 801573e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015740:	3302      	adds	r3, #2
 8015742:	930a      	str	r3, [sp, #40]	; 0x28
 8015744:	e702      	b.n	801554c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015746:	d027      	beq.n	8015798 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015748:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801574a:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801574c:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801574e:	3b01      	subs	r3, #1
 8015750:	fb00 5003 	mla	r0, r0, r3, r5
 8015754:	1400      	asrs	r0, r0, #16
 8015756:	f53f af16 	bmi.w	8015586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801575a:	3901      	subs	r1, #1
 801575c:	4288      	cmp	r0, r1
 801575e:	f6bf af12 	bge.w	8015586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015762:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015764:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015766:	fb01 0303 	mla	r3, r1, r3, r0
 801576a:	141b      	asrs	r3, r3, #16
 801576c:	f53f af0b 	bmi.w	8015586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015770:	3a01      	subs	r2, #1
 8015772:	4293      	cmp	r3, r2
 8015774:	f6bf af07 	bge.w	8015586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015778:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801577a:	9311      	str	r3, [sp, #68]	; 0x44
 801577c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8015780:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015782:	930c      	str	r3, [sp, #48]	; 0x30
 8015784:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015786:	2b00      	cmp	r3, #0
 8015788:	dc70      	bgt.n	801586c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801578a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801578c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801578e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015792:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015796:	930a      	str	r3, [sp, #40]	; 0x28
 8015798:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801579a:	2b00      	cmp	r3, #0
 801579c:	f340 8124 	ble.w	80159e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80157a0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80157a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80157a8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80157ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80157ae:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80157b2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80157b6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80157ba:	eef0 6a48 	vmov.f32	s13, s16
 80157be:	ee69 7a27 	vmul.f32	s15, s18, s15
 80157c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80157c6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80157ca:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80157ce:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80157d2:	eef0 6a68 	vmov.f32	s13, s17
 80157d6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80157da:	ee18 2a10 	vmov	r2, s16
 80157de:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80157e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80157e6:	ee18 2a90 	vmov	r2, s17
 80157ea:	9329      	str	r3, [sp, #164]	; 0xa4
 80157ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80157ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80157f2:	932a      	str	r3, [sp, #168]	; 0xa8
 80157f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80157f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80157f8:	3b01      	subs	r3, #1
 80157fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80157fe:	930e      	str	r3, [sp, #56]	; 0x38
 8015800:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015802:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8015806:	bf08      	it	eq
 8015808:	4613      	moveq	r3, r2
 801580a:	9309      	str	r3, [sp, #36]	; 0x24
 801580c:	eef0 8a67 	vmov.f32	s17, s15
 8015810:	eeb0 8a47 	vmov.f32	s16, s14
 8015814:	e68c      	b.n	8015530 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015816:	b149      	cbz	r1, 801582c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8015818:	5cb2      	ldrb	r2, [r6, r2]
 801581a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801581e:	4422      	add	r2, r4
 8015820:	4628      	mov	r0, r5
 8015822:	46ac      	mov	ip, r5
 8015824:	e6f1      	b.n	801560a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015826:	4628      	mov	r0, r5
 8015828:	462a      	mov	r2, r5
 801582a:	e6ee      	b.n	801560a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801582c:	4628      	mov	r0, r5
 801582e:	462a      	mov	r2, r5
 8015830:	e7f7      	b.n	8015822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8015832:	1c47      	adds	r7, r0, #1
 8015834:	f53f af69 	bmi.w	801570a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015838:	42ba      	cmp	r2, r7
 801583a:	f6ff af66 	blt.w	801570a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801583e:	1c6f      	adds	r7, r5, #1
 8015840:	f53f af63 	bmi.w	801570a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015844:	42be      	cmp	r6, r7
 8015846:	f6ff af60 	blt.w	801570a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801584a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801584c:	9002      	str	r0, [sp, #8]
 801584e:	b236      	sxth	r6, r6
 8015850:	b212      	sxth	r2, r2
 8015852:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8015856:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801585a:	9200      	str	r2, [sp, #0]
 801585c:	9601      	str	r6, [sp, #4]
 801585e:	4623      	mov	r3, r4
 8015860:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8015864:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015866:	f7ff fd49 	bl	80152fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801586a:	e74e      	b.n	801570a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801586c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801586e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015870:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8015872:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015874:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015878:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801587a:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801587e:	142d      	asrs	r5, r5, #16
 8015880:	1400      	asrs	r0, r0, #16
 8015882:	fb02 5000 	mla	r0, r2, r0, r5
 8015886:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015888:	f815 9000 	ldrb.w	r9, [r5, r0]
 801588c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015890:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8015894:	182e      	adds	r6, r5, r0
 8015896:	eb04 0509 	add.w	r5, r4, r9
 801589a:	2b00      	cmp	r3, #0
 801589c:	f000 8096 	beq.w	80159cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 80158a0:	7877      	ldrb	r7, [r6, #1]
 80158a2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80158a6:	4427      	add	r7, r4
 80158a8:	2900      	cmp	r1, #0
 80158aa:	f000 8097 	beq.w	80159dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 80158ae:	18b0      	adds	r0, r6, r2
 80158b0:	5cb2      	ldrb	r2, [r6, r2]
 80158b2:	7840      	ldrb	r0, [r0, #1]
 80158b4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80158b8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80158bc:	4422      	add	r2, r4
 80158be:	4420      	add	r0, r4
 80158c0:	b29b      	uxth	r3, r3
 80158c2:	b289      	uxth	r1, r1
 80158c4:	fb03 f801 	mul.w	r8, r3, r1
 80158c8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80158ca:	f895 b002 	ldrb.w	fp, [r5, #2]
 80158ce:	f8b6 c000 	ldrh.w	ip, [r6]
 80158d2:	78be      	ldrb	r6, [r7, #2]
 80158d4:	f814 9009 	ldrb.w	r9, [r4, r9]
 80158d8:	011b      	lsls	r3, r3, #4
 80158da:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80158de:	b289      	uxth	r1, r1
 80158e0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80158e4:	eba3 0308 	sub.w	r3, r3, r8
 80158e8:	b29b      	uxth	r3, r3
 80158ea:	ebae 0e01 	sub.w	lr, lr, r1
 80158ee:	fa1f fe8e 	uxth.w	lr, lr
 80158f2:	435e      	muls	r6, r3
 80158f4:	fb0e 660b 	mla	r6, lr, fp, r6
 80158f8:	f892 b002 	ldrb.w	fp, [r2, #2]
 80158fc:	9310      	str	r3, [sp, #64]	; 0x40
 80158fe:	fb01 660b 	mla	r6, r1, fp, r6
 8015902:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015906:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015908:	fb08 660b 	mla	r6, r8, fp, r6
 801590c:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8015910:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015914:	fb1b fb03 	smulbb	fp, fp, r3
 8015918:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801591c:	fb06 b60a 	mla	r6, r6, sl, fp
 8015920:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015922:	f895 b001 	ldrb.w	fp, [r5, #1]
 8015926:	787d      	ldrb	r5, [r7, #1]
 8015928:	783f      	ldrb	r7, [r7, #0]
 801592a:	435d      	muls	r5, r3
 801592c:	fb0e 550b 	mla	r5, lr, fp, r5
 8015930:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015934:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015936:	fb01 550b 	mla	r5, r1, fp, r5
 801593a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801593e:	fb08 550b 	mla	r5, r8, fp, r5
 8015942:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015946:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801594a:	fb1b fb03 	smulbb	fp, fp, r3
 801594e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015950:	437b      	muls	r3, r7
 8015952:	7817      	ldrb	r7, [r2, #0]
 8015954:	fb0e 3309 	mla	r3, lr, r9, r3
 8015958:	fb01 3307 	mla	r3, r1, r7, r3
 801595c:	7807      	ldrb	r7, [r0, #0]
 801595e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015962:	fb08 3707 	mla	r7, r8, r7, r3
 8015966:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015968:	fa5f fc8c 	uxtb.w	ip, ip
 801596c:	fb1c fc03 	smulbb	ip, ip, r3
 8015970:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8015974:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015978:	fb05 b50a 	mla	r5, r5, sl, fp
 801597c:	fb07 c70a 	mla	r7, r7, sl, ip
 8015980:	b2b6      	uxth	r6, r6
 8015982:	b2ad      	uxth	r5, r5
 8015984:	b2bf      	uxth	r7, r7
 8015986:	1c73      	adds	r3, r6, #1
 8015988:	1c7a      	adds	r2, r7, #1
 801598a:	f105 0b01 	add.w	fp, r5, #1
 801598e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8015992:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8015996:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801599a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801599e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80159a2:	096d      	lsrs	r5, r5, #5
 80159a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80159a6:	4316      	orrs	r6, r2
 80159a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80159ac:	432e      	orrs	r6, r5
 80159ae:	f823 6b02 	strh.w	r6, [r3], #2
 80159b2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80159b4:	930c      	str	r3, [sp, #48]	; 0x30
 80159b6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80159b8:	4413      	add	r3, r2
 80159ba:	9327      	str	r3, [sp, #156]	; 0x9c
 80159bc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80159be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80159c0:	4413      	add	r3, r2
 80159c2:	9328      	str	r3, [sp, #160]	; 0xa0
 80159c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80159c6:	3b01      	subs	r3, #1
 80159c8:	9311      	str	r3, [sp, #68]	; 0x44
 80159ca:	e6db      	b.n	8015784 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 80159cc:	b149      	cbz	r1, 80159e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 80159ce:	5cb2      	ldrb	r2, [r6, r2]
 80159d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80159d4:	4422      	add	r2, r4
 80159d6:	4628      	mov	r0, r5
 80159d8:	462f      	mov	r7, r5
 80159da:	e771      	b.n	80158c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 80159dc:	4628      	mov	r0, r5
 80159de:	462a      	mov	r2, r5
 80159e0:	e76e      	b.n	80158c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 80159e2:	4628      	mov	r0, r5
 80159e4:	462a      	mov	r2, r5
 80159e6:	e7f7      	b.n	80159d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80159e8:	b015      	add	sp, #84	; 0x54
 80159ea:	ecbd 8b08 	vpop	{d8-d11}
 80159ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080159f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80159f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80159f8:	880e      	ldrh	r6, [r1, #0]
 80159fa:	b085      	sub	sp, #20
 80159fc:	0230      	lsls	r0, r6, #8
 80159fe:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8015a02:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8015a06:	0170      	lsls	r0, r6, #5
 8015a08:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015a0c:	9101      	str	r1, [sp, #4]
 8015a0e:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8015a12:	00f6      	lsls	r6, r6, #3
 8015a14:	ea4b 0000 	orr.w	r0, fp, r0
 8015a18:	b2f6      	uxtb	r6, r6
 8015a1a:	4691      	mov	r9, r2
 8015a1c:	fb05 7a0c 	mla	sl, r5, ip, r7
 8015a20:	4306      	orrs	r6, r0
 8015a22:	2d00      	cmp	r5, #0
 8015a24:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015a28:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8015a2c:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8015a30:	9603      	str	r6, [sp, #12]
 8015a32:	eb09 0e0a 	add.w	lr, r9, sl
 8015a36:	db42      	blt.n	8015abe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8015a38:	45a8      	cmp	r8, r5
 8015a3a:	dd40      	ble.n	8015abe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8015a3c:	2f00      	cmp	r7, #0
 8015a3e:	db3c      	blt.n	8015aba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8015a40:	45bc      	cmp	ip, r7
 8015a42:	dd3a      	ble.n	8015aba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8015a44:	f819 600a 	ldrb.w	r6, [r9, sl]
 8015a48:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015a4c:	441e      	add	r6, r3
 8015a4e:	1c78      	adds	r0, r7, #1
 8015a50:	d438      	bmi.n	8015ac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015a52:	4584      	cmp	ip, r0
 8015a54:	dd36      	ble.n	8015ac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015a56:	b3aa      	cbz	r2, 8015ac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015a58:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015a5c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015a60:	4418      	add	r0, r3
 8015a62:	3501      	adds	r5, #1
 8015a64:	d432      	bmi.n	8015acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015a66:	45a8      	cmp	r8, r5
 8015a68:	dd30      	ble.n	8015acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015a6a:	b37c      	cbz	r4, 8015acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015a6c:	2f00      	cmp	r7, #0
 8015a6e:	db2b      	blt.n	8015ac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8015a70:	45bc      	cmp	ip, r7
 8015a72:	dd29      	ble.n	8015ac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8015a74:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8015a78:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015a7c:	441d      	add	r5, r3
 8015a7e:	3701      	adds	r7, #1
 8015a80:	d427      	bmi.n	8015ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015a82:	45bc      	cmp	ip, r7
 8015a84:	dd25      	ble.n	8015ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015a86:	b322      	cbz	r2, 8015ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015a88:	44f4      	add	ip, lr
 8015a8a:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8015a8e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015a92:	443b      	add	r3, r7
 8015a94:	781f      	ldrb	r7, [r3, #0]
 8015a96:	f896 9000 	ldrb.w	r9, [r6]
 8015a9a:	f890 a000 	ldrb.w	sl, [r0]
 8015a9e:	f895 8000 	ldrb.w	r8, [r5]
 8015aa2:	2a0f      	cmp	r2, #15
 8015aa4:	4639      	mov	r1, r7
 8015aa6:	d801      	bhi.n	8015aac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 8015aa8:	2c0f      	cmp	r4, #15
 8015aaa:	d914      	bls.n	8015ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 8015aac:	4b2c      	ldr	r3, [pc, #176]	; (8015b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8015aae:	4a2d      	ldr	r2, [pc, #180]	; (8015b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8015ab0:	482d      	ldr	r0, [pc, #180]	; (8015b68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 8015ab2:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8015ab6:	f005 ffb1 	bl	801ba1c <__assert_func>
 8015aba:	ae03      	add	r6, sp, #12
 8015abc:	e7c7      	b.n	8015a4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 8015abe:	a803      	add	r0, sp, #12
 8015ac0:	4606      	mov	r6, r0
 8015ac2:	e7ce      	b.n	8015a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015ac4:	a803      	add	r0, sp, #12
 8015ac6:	e7cc      	b.n	8015a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015ac8:	ad03      	add	r5, sp, #12
 8015aca:	e7d8      	b.n	8015a7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 8015acc:	ab03      	add	r3, sp, #12
 8015ace:	461d      	mov	r5, r3
 8015ad0:	e7e0      	b.n	8015a94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8015ad2:	ab03      	add	r3, sp, #12
 8015ad4:	e7de      	b.n	8015a94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8015ad6:	b292      	uxth	r2, r2
 8015ad8:	b2a4      	uxth	r4, r4
 8015ada:	fb02 fe04 	mul.w	lr, r2, r4
 8015ade:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8015ae2:	0112      	lsls	r2, r2, #4
 8015ae4:	b2a4      	uxth	r4, r4
 8015ae6:	f890 c002 	ldrb.w	ip, [r0, #2]
 8015aea:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015aee:	7840      	ldrb	r0, [r0, #1]
 8015af0:	7876      	ldrb	r6, [r6, #1]
 8015af2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8015af6:	eba2 020e 	sub.w	r2, r2, lr
 8015afa:	b292      	uxth	r2, r2
 8015afc:	1b3f      	subs	r7, r7, r4
 8015afe:	b2bf      	uxth	r7, r7
 8015b00:	fb02 fc0c 	mul.w	ip, r2, ip
 8015b04:	fb07 cc0b 	mla	ip, r7, fp, ip
 8015b08:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015b0c:	fb04 cc0b 	mla	ip, r4, fp, ip
 8015b10:	f893 b002 	ldrb.w	fp, [r3, #2]
 8015b14:	785b      	ldrb	r3, [r3, #1]
 8015b16:	fb0e cc0b 	mla	ip, lr, fp, ip
 8015b1a:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8015b1e:	fb02 fc0a 	mul.w	ip, r2, sl
 8015b22:	4342      	muls	r2, r0
 8015b24:	7868      	ldrb	r0, [r5, #1]
 8015b26:	fb07 cc09 	mla	ip, r7, r9, ip
 8015b2a:	fb07 2206 	mla	r2, r7, r6, r2
 8015b2e:	fb04 cc08 	mla	ip, r4, r8, ip
 8015b32:	fb04 2400 	mla	r4, r4, r0, r2
 8015b36:	fb0e cc01 	mla	ip, lr, r1, ip
 8015b3a:	fb0e 4e03 	mla	lr, lr, r3, r4
 8015b3e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015b42:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015b46:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015b4a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8015b4e:	9b01      	ldr	r3, [sp, #4]
 8015b50:	ea4c 0c0e 	orr.w	ip, ip, lr
 8015b54:	f8a3 c000 	strh.w	ip, [r3]
 8015b58:	b005      	add	sp, #20
 8015b5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b5e:	bf00      	nop
 8015b60:	0802050e 	.word	0x0802050e
 8015b64:	08020ade 	.word	0x08020ade
 8015b68:	08020592 	.word	0x08020592

08015b6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b70:	ed2d 8b08 	vpush	{d8-d11}
 8015b74:	b08f      	sub	sp, #60	; 0x3c
 8015b76:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8015b7a:	920c      	str	r2, [sp, #48]	; 0x30
 8015b7c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8015b7e:	910a      	str	r1, [sp, #40]	; 0x28
 8015b80:	9306      	str	r3, [sp, #24]
 8015b82:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8015b86:	900d      	str	r0, [sp, #52]	; 0x34
 8015b88:	6850      	ldr	r0, [r2, #4]
 8015b8a:	6812      	ldr	r2, [r2, #0]
 8015b8c:	fb00 1303 	mla	r3, r0, r3, r1
 8015b90:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015b94:	9307      	str	r3, [sp, #28]
 8015b96:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015b98:	681b      	ldr	r3, [r3, #0]
 8015b9a:	9308      	str	r3, [sp, #32]
 8015b9c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015b9e:	685c      	ldr	r4, [r3, #4]
 8015ba0:	eeb0 aa40 	vmov.f32	s20, s0
 8015ba4:	eef0 9a60 	vmov.f32	s19, s1
 8015ba8:	eeb0 9a41 	vmov.f32	s18, s2
 8015bac:	eeb0 8a62 	vmov.f32	s16, s5
 8015bb0:	eef0 8a43 	vmov.f32	s17, s6
 8015bb4:	eef0 ba44 	vmov.f32	s23, s8
 8015bb8:	eeb0 ba64 	vmov.f32	s22, s9
 8015bbc:	eef0 aa45 	vmov.f32	s21, s10
 8015bc0:	3404      	adds	r4, #4
 8015bc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015bc4:	2b00      	cmp	r3, #0
 8015bc6:	dc03      	bgt.n	8015bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015bc8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015bca:	2b00      	cmp	r3, #0
 8015bcc:	f340 81d6 	ble.w	8015f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8015bd0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015bd2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015bd6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015bda:	1e48      	subs	r0, r1, #1
 8015bdc:	1e56      	subs	r6, r2, #1
 8015bde:	9b06      	ldr	r3, [sp, #24]
 8015be0:	2b00      	cmp	r3, #0
 8015be2:	f340 80b7 	ble.w	8015d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015be6:	ea5f 472b 	movs.w	r7, fp, asr #16
 8015bea:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015bee:	d406      	bmi.n	8015bfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015bf0:	4287      	cmp	r7, r0
 8015bf2:	da04      	bge.n	8015bfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015bf4:	2b00      	cmp	r3, #0
 8015bf6:	db02      	blt.n	8015bfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015bf8:	42b3      	cmp	r3, r6
 8015bfa:	f2c0 80ac 	blt.w	8015d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8015bfe:	3701      	adds	r7, #1
 8015c00:	f100 809d 	bmi.w	8015d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015c04:	42b9      	cmp	r1, r7
 8015c06:	f2c0 809a 	blt.w	8015d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015c0a:	3301      	adds	r3, #1
 8015c0c:	f100 8097 	bmi.w	8015d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015c10:	429a      	cmp	r2, r3
 8015c12:	f2c0 8094 	blt.w	8015d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015c16:	9b06      	ldr	r3, [sp, #24]
 8015c18:	930b      	str	r3, [sp, #44]	; 0x2c
 8015c1a:	9b07      	ldr	r3, [sp, #28]
 8015c1c:	9309      	str	r3, [sp, #36]	; 0x24
 8015c1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015c20:	2b00      	cmp	r3, #0
 8015c22:	f340 80b5 	ble.w	8015d90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8015c26:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015c28:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015c2a:	68c7      	ldr	r7, [r0, #12]
 8015c2c:	6892      	ldr	r2, [r2, #8]
 8015c2e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8015c32:	ea4f 4625 	mov.w	r6, r5, asr #16
 8015c36:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8015c3a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015c3e:	f100 80fb 	bmi.w	8015e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015c42:	f102 3cff 	add.w	ip, r2, #4294967295
 8015c46:	4560      	cmp	r0, ip
 8015c48:	f280 80f6 	bge.w	8015e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015c4c:	2e00      	cmp	r6, #0
 8015c4e:	f2c0 80f3 	blt.w	8015e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015c52:	f107 3cff 	add.w	ip, r7, #4294967295
 8015c56:	4566      	cmp	r6, ip
 8015c58:	f280 80ee 	bge.w	8015e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015c5c:	b212      	sxth	r2, r2
 8015c5e:	fb06 0002 	mla	r0, r6, r2, r0
 8015c62:	9e08      	ldr	r6, [sp, #32]
 8015c64:	1837      	adds	r7, r6, r0
 8015c66:	5c30      	ldrb	r0, [r6, r0]
 8015c68:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8015c6c:	eb04 0c08 	add.w	ip, r4, r8
 8015c70:	2b00      	cmp	r3, #0
 8015c72:	f000 80d3 	beq.w	8015e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8015c76:	787e      	ldrb	r6, [r7, #1]
 8015c78:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015c7c:	4426      	add	r6, r4
 8015c7e:	2900      	cmp	r1, #0
 8015c80:	f000 80d4 	beq.w	8015e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8015c84:	18b8      	adds	r0, r7, r2
 8015c86:	5cba      	ldrb	r2, [r7, r2]
 8015c88:	7840      	ldrb	r0, [r0, #1]
 8015c8a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015c8e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015c92:	4422      	add	r2, r4
 8015c94:	4420      	add	r0, r4
 8015c96:	b29b      	uxth	r3, r3
 8015c98:	b289      	uxth	r1, r1
 8015c9a:	fb03 f901 	mul.w	r9, r3, r1
 8015c9e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015ca2:	011b      	lsls	r3, r3, #4
 8015ca4:	b289      	uxth	r1, r1
 8015ca6:	78b7      	ldrb	r7, [r6, #2]
 8015ca8:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015cac:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015cb0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015cb4:	eba3 0309 	sub.w	r3, r3, r9
 8015cb8:	b29b      	uxth	r3, r3
 8015cba:	ebae 0e01 	sub.w	lr, lr, r1
 8015cbe:	fa1f fe8e 	uxth.w	lr, lr
 8015cc2:	435f      	muls	r7, r3
 8015cc4:	fb0e 770a 	mla	r7, lr, sl, r7
 8015cc8:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015ccc:	fb01 770a 	mla	r7, r1, sl, r7
 8015cd0:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015cd4:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015cd8:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015cdc:	f896 8000 	ldrb.w	r8, [r6]
 8015ce0:	7876      	ldrb	r6, [r6, #1]
 8015ce2:	fb03 f808 	mul.w	r8, r3, r8
 8015ce6:	fb0e 8807 	mla	r8, lr, r7, r8
 8015cea:	7817      	ldrb	r7, [r2, #0]
 8015cec:	fb01 8807 	mla	r8, r1, r7, r8
 8015cf0:	7807      	ldrb	r7, [r0, #0]
 8015cf2:	fb09 8707 	mla	r7, r9, r7, r8
 8015cf6:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015cfa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015cfe:	ea47 070a 	orr.w	r7, r7, sl
 8015d02:	4373      	muls	r3, r6
 8015d04:	f892 a001 	ldrb.w	sl, [r2, #1]
 8015d08:	fb0e 330c 	mla	r3, lr, ip, r3
 8015d0c:	fb01 310a 	mla	r1, r1, sl, r3
 8015d10:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015d14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015d16:	fb09 1a0a 	mla	sl, r9, sl, r1
 8015d1a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015d1e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015d22:	ea47 070a 	orr.w	r7, r7, sl
 8015d26:	801f      	strh	r7, [r3, #0]
 8015d28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015d2a:	3302      	adds	r3, #2
 8015d2c:	9309      	str	r3, [sp, #36]	; 0x24
 8015d2e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015d30:	449b      	add	fp, r3
 8015d32:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015d34:	441d      	add	r5, r3
 8015d36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015d38:	3b01      	subs	r3, #1
 8015d3a:	930b      	str	r3, [sp, #44]	; 0x2c
 8015d3c:	e76f      	b.n	8015c1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015d3e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015d40:	449b      	add	fp, r3
 8015d42:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015d44:	441d      	add	r5, r3
 8015d46:	9b06      	ldr	r3, [sp, #24]
 8015d48:	3b01      	subs	r3, #1
 8015d4a:	9306      	str	r3, [sp, #24]
 8015d4c:	9b07      	ldr	r3, [sp, #28]
 8015d4e:	3302      	adds	r3, #2
 8015d50:	9307      	str	r3, [sp, #28]
 8015d52:	e744      	b.n	8015bde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015d54:	d023      	beq.n	8015d9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8015d56:	9b06      	ldr	r3, [sp, #24]
 8015d58:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8015d5a:	3b01      	subs	r3, #1
 8015d5c:	fb00 b003 	mla	r0, r0, r3, fp
 8015d60:	1400      	asrs	r0, r0, #16
 8015d62:	f53f af58 	bmi.w	8015c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015d66:	3901      	subs	r1, #1
 8015d68:	4288      	cmp	r0, r1
 8015d6a:	f6bf af54 	bge.w	8015c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015d6e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8015d70:	fb01 5303 	mla	r3, r1, r3, r5
 8015d74:	141b      	asrs	r3, r3, #16
 8015d76:	f53f af4e 	bmi.w	8015c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015d7a:	3a01      	subs	r2, #1
 8015d7c:	4293      	cmp	r3, r2
 8015d7e:	f6bf af4a 	bge.w	8015c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015d82:	9b06      	ldr	r3, [sp, #24]
 8015d84:	9309      	str	r3, [sp, #36]	; 0x24
 8015d86:	9b07      	ldr	r3, [sp, #28]
 8015d88:	930b      	str	r3, [sp, #44]	; 0x2c
 8015d8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015d8c:	2b00      	cmp	r3, #0
 8015d8e:	dc70      	bgt.n	8015e72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8015d90:	9b06      	ldr	r3, [sp, #24]
 8015d92:	9a07      	ldr	r2, [sp, #28]
 8015d94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015d98:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015d9c:	9307      	str	r3, [sp, #28]
 8015d9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015da0:	2b00      	cmp	r3, #0
 8015da2:	f340 80eb 	ble.w	8015f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8015da6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015daa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015dae:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015db2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015db4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015db8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015dbc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015dc0:	eef0 6a48 	vmov.f32	s13, s16
 8015dc4:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015dc8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015dcc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015dd0:	ee16 ba90 	vmov	fp, s13
 8015dd4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015dd8:	eef0 6a68 	vmov.f32	s13, s17
 8015ddc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015de0:	ee18 2a10 	vmov	r2, s16
 8015de4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015de8:	fb92 f3f3 	sdiv	r3, r2, r3
 8015dec:	ee18 2a90 	vmov	r2, s17
 8015df0:	9323      	str	r3, [sp, #140]	; 0x8c
 8015df2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015df4:	fb92 f3f3 	sdiv	r3, r2, r3
 8015df8:	9324      	str	r3, [sp, #144]	; 0x90
 8015dfa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015dfc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015dfe:	3b01      	subs	r3, #1
 8015e00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015e04:	930a      	str	r3, [sp, #40]	; 0x28
 8015e06:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015e08:	bf08      	it	eq
 8015e0a:	4613      	moveq	r3, r2
 8015e0c:	ee16 5a90 	vmov	r5, s13
 8015e10:	9306      	str	r3, [sp, #24]
 8015e12:	eef0 8a67 	vmov.f32	s17, s15
 8015e16:	eeb0 8a47 	vmov.f32	s16, s14
 8015e1a:	e6d2      	b.n	8015bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8015e1c:	b149      	cbz	r1, 8015e32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8015e1e:	5cba      	ldrb	r2, [r7, r2]
 8015e20:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015e24:	4422      	add	r2, r4
 8015e26:	4660      	mov	r0, ip
 8015e28:	4666      	mov	r6, ip
 8015e2a:	e734      	b.n	8015c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8015e2c:	4660      	mov	r0, ip
 8015e2e:	4662      	mov	r2, ip
 8015e30:	e731      	b.n	8015c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8015e32:	4660      	mov	r0, ip
 8015e34:	4662      	mov	r2, ip
 8015e36:	e7f7      	b.n	8015e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8015e38:	f110 0c01 	adds.w	ip, r0, #1
 8015e3c:	f53f af74 	bmi.w	8015d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015e40:	4562      	cmp	r2, ip
 8015e42:	f6ff af71 	blt.w	8015d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015e46:	f116 0c01 	adds.w	ip, r6, #1
 8015e4a:	f53f af6d 	bmi.w	8015d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015e4e:	4567      	cmp	r7, ip
 8015e50:	f6ff af6a 	blt.w	8015d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015e54:	b23f      	sxth	r7, r7
 8015e56:	b212      	sxth	r2, r2
 8015e58:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8015e5c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8015e60:	9200      	str	r2, [sp, #0]
 8015e62:	9701      	str	r7, [sp, #4]
 8015e64:	4623      	mov	r3, r4
 8015e66:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8015e6a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8015e6c:	f7ff fdc2 	bl	80159f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8015e70:	e75a      	b.n	8015d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015e72:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015e74:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015e78:	ea4f 462b 	mov.w	r6, fp, asr #16
 8015e7c:	1428      	asrs	r0, r5, #16
 8015e7e:	fb02 6000 	mla	r0, r2, r0, r6
 8015e82:	9e08      	ldr	r6, [sp, #32]
 8015e84:	f816 8000 	ldrb.w	r8, [r6, r0]
 8015e88:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8015e8c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015e90:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015e94:	1837      	adds	r7, r6, r0
 8015e96:	eb04 0c08 	add.w	ip, r4, r8
 8015e9a:	2b00      	cmp	r3, #0
 8015e9c:	d060      	beq.n	8015f60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8015e9e:	787e      	ldrb	r6, [r7, #1]
 8015ea0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015ea4:	4426      	add	r6, r4
 8015ea6:	2900      	cmp	r1, #0
 8015ea8:	d062      	beq.n	8015f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8015eaa:	18b8      	adds	r0, r7, r2
 8015eac:	5cba      	ldrb	r2, [r7, r2]
 8015eae:	7840      	ldrb	r0, [r0, #1]
 8015eb0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015eb4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015eb8:	4422      	add	r2, r4
 8015eba:	4420      	add	r0, r4
 8015ebc:	b29b      	uxth	r3, r3
 8015ebe:	b289      	uxth	r1, r1
 8015ec0:	fb03 f901 	mul.w	r9, r3, r1
 8015ec4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015ec8:	011b      	lsls	r3, r3, #4
 8015eca:	b289      	uxth	r1, r1
 8015ecc:	78b7      	ldrb	r7, [r6, #2]
 8015ece:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015ed2:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015ed6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015eda:	eba3 0309 	sub.w	r3, r3, r9
 8015ede:	b29b      	uxth	r3, r3
 8015ee0:	ebae 0e01 	sub.w	lr, lr, r1
 8015ee4:	fa1f fe8e 	uxth.w	lr, lr
 8015ee8:	435f      	muls	r7, r3
 8015eea:	fb0e 770a 	mla	r7, lr, sl, r7
 8015eee:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015ef2:	fb01 770a 	mla	r7, r1, sl, r7
 8015ef6:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015efa:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015efe:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015f02:	f896 8000 	ldrb.w	r8, [r6]
 8015f06:	7876      	ldrb	r6, [r6, #1]
 8015f08:	fb03 f808 	mul.w	r8, r3, r8
 8015f0c:	fb0e 8807 	mla	r8, lr, r7, r8
 8015f10:	7817      	ldrb	r7, [r2, #0]
 8015f12:	fb01 8807 	mla	r8, r1, r7, r8
 8015f16:	7807      	ldrb	r7, [r0, #0]
 8015f18:	fb09 8707 	mla	r7, r9, r7, r8
 8015f1c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015f20:	4373      	muls	r3, r6
 8015f22:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015f26:	7856      	ldrb	r6, [r2, #1]
 8015f28:	ea47 070a 	orr.w	r7, r7, sl
 8015f2c:	fb0e 330c 	mla	r3, lr, ip, r3
 8015f30:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015f34:	fb01 3306 	mla	r3, r1, r6, r3
 8015f38:	fb09 3a0a 	mla	sl, r9, sl, r3
 8015f3c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015f40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015f42:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015f46:	ea47 070a 	orr.w	r7, r7, sl
 8015f4a:	f823 7b02 	strh.w	r7, [r3], #2
 8015f4e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015f50:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015f52:	449b      	add	fp, r3
 8015f54:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015f56:	441d      	add	r5, r3
 8015f58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f5a:	3b01      	subs	r3, #1
 8015f5c:	9309      	str	r3, [sp, #36]	; 0x24
 8015f5e:	e714      	b.n	8015d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8015f60:	b149      	cbz	r1, 8015f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8015f62:	5cba      	ldrb	r2, [r7, r2]
 8015f64:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015f68:	4422      	add	r2, r4
 8015f6a:	4660      	mov	r0, ip
 8015f6c:	4666      	mov	r6, ip
 8015f6e:	e7a5      	b.n	8015ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8015f70:	4660      	mov	r0, ip
 8015f72:	4662      	mov	r2, ip
 8015f74:	e7a2      	b.n	8015ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8015f76:	4660      	mov	r0, ip
 8015f78:	4662      	mov	r2, ip
 8015f7a:	e7f7      	b.n	8015f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8015f7c:	b00f      	add	sp, #60	; 0x3c
 8015f7e:	ecbd 8b08 	vpop	{d8-d11}
 8015f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015f88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8015f88:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f8c:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 8015f90:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8015f94:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8015f98:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8015f9c:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 8015fa0:	fb04 560c 	mla	r6, r4, ip, r5
 8015fa4:	2c00      	cmp	r4, #0
 8015fa6:	eb02 0e06 	add.w	lr, r2, r6
 8015faa:	db3d      	blt.n	8016028 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8015fac:	45a0      	cmp	r8, r4
 8015fae:	dd3b      	ble.n	8016028 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8015fb0:	2d00      	cmp	r5, #0
 8015fb2:	db37      	blt.n	8016024 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8015fb4:	45ac      	cmp	ip, r5
 8015fb6:	dd35      	ble.n	8016024 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8015fb8:	5d92      	ldrb	r2, [r2, r6]
 8015fba:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8015fbe:	1c6e      	adds	r6, r5, #1
 8015fc0:	d435      	bmi.n	801602e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8015fc2:	45b4      	cmp	ip, r6
 8015fc4:	dd33      	ble.n	801602e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8015fc6:	b3a0      	cbz	r0, 8016032 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 8015fc8:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8015fcc:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8015fd0:	3401      	adds	r4, #1
 8015fd2:	d432      	bmi.n	801603a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8015fd4:	45a0      	cmp	r8, r4
 8015fd6:	dd30      	ble.n	801603a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8015fd8:	b397      	cbz	r7, 8016040 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 8015fda:	2d00      	cmp	r5, #0
 8015fdc:	db2b      	blt.n	8016036 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8015fde:	45ac      	cmp	ip, r5
 8015fe0:	dd29      	ble.n	8016036 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8015fe2:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8015fe6:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8015fea:	3501      	adds	r5, #1
 8015fec:	d42b      	bmi.n	8016046 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8015fee:	45ac      	cmp	ip, r5
 8015ff0:	dd29      	ble.n	8016046 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8015ff2:	b350      	cbz	r0, 801604a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8015ff4:	44f4      	add	ip, lr
 8015ff6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8015ffa:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8015ffe:	280f      	cmp	r0, #15
 8016000:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016004:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016008:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801600c:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8016010:	d801      	bhi.n	8016016 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 8016012:	2f0f      	cmp	r7, #15
 8016014:	d91b      	bls.n	801604e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 8016016:	4b8d      	ldr	r3, [pc, #564]	; (801624c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8016018:	4a8d      	ldr	r2, [pc, #564]	; (8016250 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 801601a:	488e      	ldr	r0, [pc, #568]	; (8016254 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 801601c:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8016020:	f005 fcfc 	bl	801ba1c <__assert_func>
 8016024:	2200      	movs	r2, #0
 8016026:	e7ca      	b.n	8015fbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 8016028:	2600      	movs	r6, #0
 801602a:	4632      	mov	r2, r6
 801602c:	e7d0      	b.n	8015fd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801602e:	2600      	movs	r6, #0
 8016030:	e7ce      	b.n	8015fd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8016032:	4606      	mov	r6, r0
 8016034:	e7cc      	b.n	8015fd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8016036:	2400      	movs	r4, #0
 8016038:	e7d7      	b.n	8015fea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 801603a:	2300      	movs	r3, #0
 801603c:	461c      	mov	r4, r3
 801603e:	e7de      	b.n	8015ffe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8016040:	463b      	mov	r3, r7
 8016042:	463c      	mov	r4, r7
 8016044:	e7db      	b.n	8015ffe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8016046:	2300      	movs	r3, #0
 8016048:	e7d9      	b.n	8015ffe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801604a:	4603      	mov	r3, r0
 801604c:	e7d7      	b.n	8015ffe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801604e:	b280      	uxth	r0, r0
 8016050:	b2bf      	uxth	r7, r7
 8016052:	fb07 fe00 	mul.w	lr, r7, r0
 8016056:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801605a:	0100      	lsls	r0, r0, #4
 801605c:	eba0 0c0e 	sub.w	ip, r0, lr
 8016060:	b2bf      	uxth	r7, r7
 8016062:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8016066:	fa1f fc8c 	uxth.w	ip, ip
 801606a:	1bed      	subs	r5, r5, r7
 801606c:	b2ad      	uxth	r5, r5
 801606e:	fb0a f00c 	mul.w	r0, sl, ip
 8016072:	fb0b 0005 	mla	r0, fp, r5, r0
 8016076:	fb07 0009 	mla	r0, r7, r9, r0
 801607a:	fb0e 0008 	mla	r0, lr, r8, r0
 801607e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016082:	9001      	str	r0, [sp, #4]
 8016084:	2800      	cmp	r0, #0
 8016086:	f000 80de 	beq.w	8016246 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 801608a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801608e:	d018      	beq.n	80160c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 8016090:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016094:	fb0b f000 	mul.w	r0, fp, r0
 8016098:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801609c:	fb0b fb02 	mul.w	fp, fp, r2
 80160a0:	0a02      	lsrs	r2, r0, #8
 80160a2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80160a6:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80160aa:	4402      	add	r2, r0
 80160ac:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80160b0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80160b4:	0a12      	lsrs	r2, r2, #8
 80160b6:	0a00      	lsrs	r0, r0, #8
 80160b8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80160bc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80160c0:	4302      	orrs	r2, r0
 80160c2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80160c6:	d01a      	beq.n	80160fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 80160c8:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 80160cc:	fb0a f000 	mul.w	r0, sl, r0
 80160d0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80160d4:	fb0a fa06 	mul.w	sl, sl, r6
 80160d8:	0a06      	lsrs	r6, r0, #8
 80160da:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80160de:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80160e2:	4406      	add	r6, r0
 80160e4:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80160e8:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 80160ec:	0a36      	lsrs	r6, r6, #8
 80160ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80160f2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80160f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80160fa:	ea46 060a 	orr.w	r6, r6, sl
 80160fe:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016102:	d01b      	beq.n	801613c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 8016104:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8016108:	fb09 fa0a 	mul.w	sl, r9, sl
 801610c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016110:	fb09 f004 	mul.w	r0, r9, r4
 8016114:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8016118:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801611c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016120:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8016124:	4454      	add	r4, sl
 8016126:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801612a:	0a24      	lsrs	r4, r4, #8
 801612c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016130:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016134:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016138:	ea44 0409 	orr.w	r4, r4, r9
 801613c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016140:	d01b      	beq.n	801617a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 8016142:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8016146:	fb08 f909 	mul.w	r9, r8, r9
 801614a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801614e:	fb08 f003 	mul.w	r0, r8, r3
 8016152:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8016156:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801615a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801615e:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8016162:	444b      	add	r3, r9
 8016164:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8016168:	0a1b      	lsrs	r3, r3, #8
 801616a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801616e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016172:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016176:	ea43 0308 	orr.w	r3, r3, r8
 801617a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801617e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016182:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8016186:	fb0c f808 	mul.w	r8, ip, r8
 801618a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801618e:	fb0c f606 	mul.w	r6, ip, r6
 8016192:	fb05 8909 	mla	r9, r5, r9, r8
 8016196:	fb05 6502 	mla	r5, r5, r2, r6
 801619a:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801619e:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80161a2:	9a01      	ldr	r2, [sp, #4]
 80161a4:	8808      	ldrh	r0, [r1, #0]
 80161a6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80161aa:	fb07 9908 	mla	r9, r7, r8, r9
 80161ae:	fb07 5704 	mla	r7, r7, r4, r5
 80161b2:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 80161b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80161ba:	b2b6      	uxth	r6, r6
 80161bc:	fb0e 9808 	mla	r8, lr, r8, r9
 80161c0:	fb0e 7e03 	mla	lr, lr, r3, r7
 80161c4:	4372      	muls	r2, r6
 80161c6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80161ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80161ce:	1c53      	adds	r3, r2, #1
 80161d0:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 80161d4:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80161d8:	ea48 0e0e 	orr.w	lr, r8, lr
 80161dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80161e0:	1205      	asrs	r5, r0, #8
 80161e2:	ea4f 421e 	mov.w	r2, lr, lsr #16
 80161e6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80161ea:	b2db      	uxtb	r3, r3
 80161ec:	fb12 f206 	smulbb	r2, r2, r6
 80161f0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80161f4:	fb05 2503 	mla	r5, r5, r3, r2
 80161f8:	f3ce 2407 	ubfx	r4, lr, #8, #8
 80161fc:	10c2      	asrs	r2, r0, #3
 80161fe:	fa5f fe8e 	uxtb.w	lr, lr
 8016202:	00c0      	lsls	r0, r0, #3
 8016204:	fb14 f406 	smulbb	r4, r4, r6
 8016208:	b2c0      	uxtb	r0, r0
 801620a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801620e:	fb1e fe06 	smulbb	lr, lr, r6
 8016212:	fb02 4203 	mla	r2, r2, r3, r4
 8016216:	b2ad      	uxth	r5, r5
 8016218:	fb00 e303 	mla	r3, r0, r3, lr
 801621c:	b298      	uxth	r0, r3
 801621e:	b294      	uxth	r4, r2
 8016220:	1c6b      	adds	r3, r5, #1
 8016222:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8016226:	1c62      	adds	r2, r4, #1
 8016228:	1c43      	adds	r3, r0, #1
 801622a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801622e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8016232:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8016236:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801623a:	0952      	lsrs	r2, r2, #5
 801623c:	432b      	orrs	r3, r5
 801623e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016242:	4313      	orrs	r3, r2
 8016244:	800b      	strh	r3, [r1, #0]
 8016246:	b003      	add	sp, #12
 8016248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801624c:	0802050e 	.word	0x0802050e
 8016250:	08020ade 	.word	0x08020ade
 8016254:	08020592 	.word	0x08020592

08016258 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801625c:	ed2d 8b08 	vpush	{d8-d11}
 8016260:	b09f      	sub	sp, #124	; 0x7c
 8016262:	eeb0 aa40 	vmov.f32	s20, s0
 8016266:	921b      	str	r2, [sp, #108]	; 0x6c
 8016268:	9309      	str	r3, [sp, #36]	; 0x24
 801626a:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 801626c:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8016270:	931c      	str	r3, [sp, #112]	; 0x70
 8016272:	9119      	str	r1, [sp, #100]	; 0x64
 8016274:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8016278:	901d      	str	r0, [sp, #116]	; 0x74
 801627a:	6850      	ldr	r0, [r2, #4]
 801627c:	6812      	ldr	r2, [r2, #0]
 801627e:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8016280:	fb00 1303 	mla	r3, r0, r3, r1
 8016284:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016288:	930c      	str	r3, [sp, #48]	; 0x30
 801628a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801628c:	681b      	ldr	r3, [r3, #0]
 801628e:	9312      	str	r3, [sp, #72]	; 0x48
 8016290:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016292:	685e      	ldr	r6, [r3, #4]
 8016294:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8016298:	930d      	str	r3, [sp, #52]	; 0x34
 801629a:	eef0 9a60 	vmov.f32	s19, s1
 801629e:	eeb0 9a41 	vmov.f32	s18, s2
 80162a2:	eeb0 8a62 	vmov.f32	s16, s5
 80162a6:	eef0 8a43 	vmov.f32	s17, s6
 80162aa:	eef0 ba44 	vmov.f32	s23, s8
 80162ae:	eeb0 ba64 	vmov.f32	s22, s9
 80162b2:	eef0 aa45 	vmov.f32	s21, s10
 80162b6:	3604      	adds	r6, #4
 80162b8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80162ba:	2b00      	cmp	r3, #0
 80162bc:	dc03      	bgt.n	80162c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80162be:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80162c0:	2b00      	cmp	r3, #0
 80162c2:	f340 8388 	ble.w	80169d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80162c6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80162c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80162cc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80162d0:	1e48      	subs	r0, r1, #1
 80162d2:	1e57      	subs	r7, r2, #1
 80162d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80162d6:	2b00      	cmp	r3, #0
 80162d8:	f340 8195 	ble.w	8016606 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80162dc:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80162de:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80162e2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80162e6:	d406      	bmi.n	80162f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80162e8:	4584      	cmp	ip, r0
 80162ea:	da04      	bge.n	80162f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80162ec:	2b00      	cmp	r3, #0
 80162ee:	db02      	blt.n	80162f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80162f0:	42bb      	cmp	r3, r7
 80162f2:	f2c0 8189 	blt.w	8016608 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80162f6:	f11c 0c01 	adds.w	ip, ip, #1
 80162fa:	f100 8177 	bmi.w	80165ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80162fe:	4561      	cmp	r1, ip
 8016300:	f2c0 8174 	blt.w	80165ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8016304:	3301      	adds	r3, #1
 8016306:	f100 8171 	bmi.w	80165ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801630a:	429a      	cmp	r2, r3
 801630c:	f2c0 816e 	blt.w	80165ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8016310:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016312:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8016314:	931a      	str	r3, [sp, #104]	; 0x68
 8016316:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8016318:	2b00      	cmp	r3, #0
 801631a:	f340 8193 	ble.w	8016644 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801631e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8016320:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016324:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016326:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801632a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801632c:	141b      	asrs	r3, r3, #16
 801632e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016332:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016336:	f100 81d6 	bmi.w	80166e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801633a:	f100 38ff 	add.w	r8, r0, #4294967295
 801633e:	4543      	cmp	r3, r8
 8016340:	f280 81d1 	bge.w	80166e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8016344:	f1bc 0f00 	cmp.w	ip, #0
 8016348:	f2c0 81cd 	blt.w	80166e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801634c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8016350:	45c4      	cmp	ip, r8
 8016352:	f280 81c8 	bge.w	80166e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8016356:	b200      	sxth	r0, r0
 8016358:	fb0c 3300 	mla	r3, ip, r0, r3
 801635c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801635e:	eb04 0803 	add.w	r8, r4, r3
 8016362:	5ce3      	ldrb	r3, [r4, r3]
 8016364:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016368:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801636c:	2a00      	cmp	r2, #0
 801636e:	f000 81af 	beq.w	80166d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016372:	f898 c001 	ldrb.w	ip, [r8, #1]
 8016376:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801637a:	940e      	str	r4, [sp, #56]	; 0x38
 801637c:	0e24      	lsrs	r4, r4, #24
 801637e:	9415      	str	r4, [sp, #84]	; 0x54
 8016380:	b179      	cbz	r1, 80163a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8016382:	eb08 0c00 	add.w	ip, r8, r0
 8016386:	f818 0000 	ldrb.w	r0, [r8, r0]
 801638a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801638e:	900a      	str	r0, [sp, #40]	; 0x28
 8016390:	0e00      	lsrs	r0, r0, #24
 8016392:	9013      	str	r0, [sp, #76]	; 0x4c
 8016394:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8016398:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801639c:	900f      	str	r0, [sp, #60]	; 0x3c
 801639e:	0e00      	lsrs	r0, r0, #24
 80163a0:	9016      	str	r0, [sp, #88]	; 0x58
 80163a2:	b292      	uxth	r2, r2
 80163a4:	b289      	uxth	r1, r1
 80163a6:	fb02 f901 	mul.w	r9, r2, r1
 80163aa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80163ae:	0112      	lsls	r2, r2, #4
 80163b0:	eba2 0809 	sub.w	r8, r2, r9
 80163b4:	b289      	uxth	r1, r1
 80163b6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80163ba:	9815      	ldr	r0, [sp, #84]	; 0x54
 80163bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80163be:	fa1f f888 	uxth.w	r8, r8
 80163c2:	1a52      	subs	r2, r2, r1
 80163c4:	b292      	uxth	r2, r2
 80163c6:	fb08 f000 	mul.w	r0, r8, r0
 80163ca:	fb02 000e 	mla	r0, r2, lr, r0
 80163ce:	fb01 0004 	mla	r0, r1, r4, r0
 80163d2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80163d4:	fb09 0004 	mla	r0, r9, r4, r0
 80163d8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80163dc:	2800      	cmp	r0, #0
 80163de:	f000 80fa 	beq.w	80165d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80163e2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80163e6:	d01b      	beq.n	8016420 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80163e8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80163ec:	fb0e fa0a 	mul.w	sl, lr, sl
 80163f0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80163f4:	fb0e fe03 	mul.w	lr, lr, r3
 80163f8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80163fc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016400:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016404:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8016408:	4453      	add	r3, sl
 801640a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801640e:	0a1b      	lsrs	r3, r3, #8
 8016410:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016414:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016418:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801641c:	ea43 030c 	orr.w	r3, r3, ip
 8016420:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016422:	2cff      	cmp	r4, #255	; 0xff
 8016424:	d021      	beq.n	801646a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8016426:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016428:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801642c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801642e:	fb04 fb0b 	mul.w	fp, r4, fp
 8016432:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016434:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016438:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801643a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801643e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016442:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016446:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801644a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801644e:	44de      	add	lr, fp
 8016450:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016454:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016458:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801645c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016460:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016464:	ea4e 040a 	orr.w	r4, lr, sl
 8016468:	940e      	str	r4, [sp, #56]	; 0x38
 801646a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801646c:	2cff      	cmp	r4, #255	; 0xff
 801646e:	d021      	beq.n	80164b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8016470:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016472:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016476:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016478:	fb04 fb0b 	mul.w	fp, r4, fp
 801647c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801647e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016482:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016484:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016488:	fb04 fa0a 	mul.w	sl, r4, sl
 801648c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016490:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016494:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016498:	44de      	add	lr, fp
 801649a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801649e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80164a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80164a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80164aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80164ae:	ea4e 040a 	orr.w	r4, lr, sl
 80164b2:	940a      	str	r4, [sp, #40]	; 0x28
 80164b4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80164b6:	2cff      	cmp	r4, #255	; 0xff
 80164b8:	d021      	beq.n	80164fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80164ba:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80164bc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80164c0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80164c2:	fb04 fb0b 	mul.w	fp, r4, fp
 80164c6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80164c8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80164cc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80164ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80164d2:	fb04 fa0a 	mul.w	sl, r4, sl
 80164d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80164da:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80164de:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80164e2:	44de      	add	lr, fp
 80164e4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80164e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80164ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80164f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80164f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80164f8:	ea4e 040a 	orr.w	r4, lr, sl
 80164fc:	940f      	str	r4, [sp, #60]	; 0x3c
 80164fe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016500:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016504:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016506:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801650a:	fb08 fc0c 	mul.w	ip, r8, ip
 801650e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016512:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016516:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016518:	fb01 cc0e 	mla	ip, r1, lr, ip
 801651c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016520:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016522:	fb09 cc0e 	mla	ip, r9, lr, ip
 8016526:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801652a:	fb08 f80e 	mul.w	r8, r8, lr
 801652e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016532:	fb02 8303 	mla	r3, r2, r3, r8
 8016536:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016538:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801653a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801653e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016540:	fb01 330a 	mla	r3, r1, sl, r3
 8016544:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8016548:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801654a:	fb09 3901 	mla	r9, r9, r1, r3
 801654e:	4342      	muls	r2, r0
 8016550:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016554:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016558:	883b      	ldrh	r3, [r7, #0]
 801655a:	1c50      	adds	r0, r2, #1
 801655c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016560:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016564:	ea4c 0c09 	orr.w	ip, ip, r9
 8016568:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801656c:	1219      	asrs	r1, r3, #8
 801656e:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8016572:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8016576:	b2c0      	uxtb	r0, r0
 8016578:	fb12 f204 	smulbb	r2, r2, r4
 801657c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016580:	fb01 2100 	mla	r1, r1, r0, r2
 8016584:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8016588:	10da      	asrs	r2, r3, #3
 801658a:	fa5f fc8c 	uxtb.w	ip, ip
 801658e:	00db      	lsls	r3, r3, #3
 8016590:	fb1c fc04 	smulbb	ip, ip, r4
 8016594:	b2db      	uxtb	r3, r3
 8016596:	b289      	uxth	r1, r1
 8016598:	fb03 c300 	mla	r3, r3, r0, ip
 801659c:	fa1f fc83 	uxth.w	ip, r3
 80165a0:	1c4b      	adds	r3, r1, #1
 80165a2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80165a6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80165aa:	fb1e fe04 	smulbb	lr, lr, r4
 80165ae:	f10c 0301 	add.w	r3, ip, #1
 80165b2:	fb02 e200 	mla	r2, r2, r0, lr
 80165b6:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80165ba:	b292      	uxth	r2, r2
 80165bc:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80165c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80165c4:	430b      	orrs	r3, r1
 80165c6:	1c51      	adds	r1, r2, #1
 80165c8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80165cc:	0952      	lsrs	r2, r2, #5
 80165ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80165d2:	4313      	orrs	r3, r2
 80165d4:	803b      	strh	r3, [r7, #0]
 80165d6:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80165d8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80165da:	441a      	add	r2, r3
 80165dc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80165de:	9231      	str	r2, [sp, #196]	; 0xc4
 80165e0:	441d      	add	r5, r3
 80165e2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80165e4:	3b01      	subs	r3, #1
 80165e6:	3702      	adds	r7, #2
 80165e8:	931a      	str	r3, [sp, #104]	; 0x68
 80165ea:	e694      	b.n	8016316 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80165ec:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80165ee:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80165f0:	441c      	add	r4, r3
 80165f2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80165f4:	9431      	str	r4, [sp, #196]	; 0xc4
 80165f6:	441d      	add	r5, r3
 80165f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80165fa:	3b01      	subs	r3, #1
 80165fc:	9309      	str	r3, [sp, #36]	; 0x24
 80165fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016600:	3302      	adds	r3, #2
 8016602:	930c      	str	r3, [sp, #48]	; 0x30
 8016604:	e666      	b.n	80162d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016606:	d024      	beq.n	8016652 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8016608:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801660a:	9833      	ldr	r0, [sp, #204]	; 0xcc
 801660c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801660e:	3b01      	subs	r3, #1
 8016610:	fb00 4003 	mla	r0, r0, r3, r4
 8016614:	1400      	asrs	r0, r0, #16
 8016616:	f53f ae7b 	bmi.w	8016310 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801661a:	3901      	subs	r1, #1
 801661c:	4288      	cmp	r0, r1
 801661e:	f6bf ae77 	bge.w	8016310 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016622:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8016624:	fb01 5303 	mla	r3, r1, r3, r5
 8016628:	141b      	asrs	r3, r3, #16
 801662a:	f53f ae71 	bmi.w	8016310 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801662e:	3a01      	subs	r2, #1
 8016630:	4293      	cmp	r3, r2
 8016632:	f6bf ae6d 	bge.w	8016310 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016636:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801663a:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801663e:	f1bb 0f00 	cmp.w	fp, #0
 8016642:	dc70      	bgt.n	8016726 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 8016644:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016646:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801664a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801664c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016650:	930c      	str	r3, [sp, #48]	; 0x30
 8016652:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016654:	2b00      	cmp	r3, #0
 8016656:	f340 81be 	ble.w	80169d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801665a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801665e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016662:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016666:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016668:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801666c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016670:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016674:	eef0 6a48 	vmov.f32	s13, s16
 8016678:	ee69 7a27 	vmul.f32	s15, s18, s15
 801667c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016680:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016684:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8016688:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801668c:	eef0 6a68 	vmov.f32	s13, s17
 8016690:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016694:	ee18 2a10 	vmov	r2, s16
 8016698:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801669c:	fb92 f3f3 	sdiv	r3, r2, r3
 80166a0:	ee18 2a90 	vmov	r2, s17
 80166a4:	9333      	str	r3, [sp, #204]	; 0xcc
 80166a6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80166a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80166ac:	9334      	str	r3, [sp, #208]	; 0xd0
 80166ae:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80166b0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80166b2:	3b01      	subs	r3, #1
 80166b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80166b8:	9319      	str	r3, [sp, #100]	; 0x64
 80166ba:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80166bc:	bf08      	it	eq
 80166be:	4613      	moveq	r3, r2
 80166c0:	ee16 5a90 	vmov	r5, s13
 80166c4:	9309      	str	r3, [sp, #36]	; 0x24
 80166c6:	eef0 8a67 	vmov.f32	s17, s15
 80166ca:	eeb0 8a47 	vmov.f32	s16, s14
 80166ce:	e5f3      	b.n	80162b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80166d0:	2900      	cmp	r1, #0
 80166d2:	f43f ae66 	beq.w	80163a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80166d6:	f818 0000 	ldrb.w	r0, [r8, r0]
 80166da:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80166de:	900a      	str	r0, [sp, #40]	; 0x28
 80166e0:	0e00      	lsrs	r0, r0, #24
 80166e2:	9013      	str	r0, [sp, #76]	; 0x4c
 80166e4:	e65d      	b.n	80163a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80166e6:	f113 0801 	adds.w	r8, r3, #1
 80166ea:	f53f af74 	bmi.w	80165d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80166ee:	4540      	cmp	r0, r8
 80166f0:	f6ff af71 	blt.w	80165d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80166f4:	f11c 0801 	adds.w	r8, ip, #1
 80166f8:	f53f af6d 	bmi.w	80165d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80166fc:	45c6      	cmp	lr, r8
 80166fe:	f6ff af6a 	blt.w	80165d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016702:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8016704:	9302      	str	r3, [sp, #8]
 8016706:	b200      	sxth	r0, r0
 8016708:	fa0f f38e 	sxth.w	r3, lr
 801670c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8016710:	e9cd c203 	strd	ip, r2, [sp, #12]
 8016714:	9301      	str	r3, [sp, #4]
 8016716:	9000      	str	r0, [sp, #0]
 8016718:	4633      	mov	r3, r6
 801671a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801671c:	981d      	ldr	r0, [sp, #116]	; 0x74
 801671e:	4639      	mov	r1, r7
 8016720:	f7ff fc32 	bl	8015f88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8016724:	e757      	b.n	80165d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016726:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8016728:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801672a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801672e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016730:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016734:	1427      	asrs	r7, r4, #16
 8016736:	142b      	asrs	r3, r5, #16
 8016738:	fb01 7303 	mla	r3, r1, r3, r7
 801673c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801673e:	18e7      	adds	r7, r4, r3
 8016740:	5ce3      	ldrb	r3, [r4, r3]
 8016742:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016746:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801674a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801674e:	2a00      	cmp	r2, #0
 8016750:	f000 8137 	beq.w	80169c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8016754:	f897 e001 	ldrb.w	lr, [r7, #1]
 8016758:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801675c:	9410      	str	r4, [sp, #64]	; 0x40
 801675e:	0e24      	lsrs	r4, r4, #24
 8016760:	9417      	str	r4, [sp, #92]	; 0x5c
 8016762:	b170      	cbz	r0, 8016782 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8016764:	eb07 0e01 	add.w	lr, r7, r1
 8016768:	5c79      	ldrb	r1, [r7, r1]
 801676a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801676e:	910b      	str	r1, [sp, #44]	; 0x2c
 8016770:	0e09      	lsrs	r1, r1, #24
 8016772:	9114      	str	r1, [sp, #80]	; 0x50
 8016774:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016778:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801677c:	9111      	str	r1, [sp, #68]	; 0x44
 801677e:	0e09      	lsrs	r1, r1, #24
 8016780:	9118      	str	r1, [sp, #96]	; 0x60
 8016782:	b292      	uxth	r2, r2
 8016784:	b280      	uxth	r0, r0
 8016786:	fb02 f800 	mul.w	r8, r2, r0
 801678a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801678e:	0112      	lsls	r2, r2, #4
 8016790:	eba2 0e08 	sub.w	lr, r2, r8
 8016794:	b280      	uxth	r0, r0
 8016796:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801679a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801679c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801679e:	fa1f fe8e 	uxth.w	lr, lr
 80167a2:	1a12      	subs	r2, r2, r0
 80167a4:	b292      	uxth	r2, r2
 80167a6:	fb0e f101 	mul.w	r1, lr, r1
 80167aa:	fb02 110c 	mla	r1, r2, ip, r1
 80167ae:	fb00 1104 	mla	r1, r0, r4, r1
 80167b2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80167b4:	fb08 1104 	mla	r1, r8, r4, r1
 80167b8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80167bc:	2900      	cmp	r1, #0
 80167be:	f000 80f5 	beq.w	80169ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 80167c2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80167c6:	d019      	beq.n	80167fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80167c8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80167cc:	fb0c fa0a 	mul.w	sl, ip, sl
 80167d0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80167d4:	fb0c fc03 	mul.w	ip, ip, r3
 80167d8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80167dc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80167e0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80167e4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80167e8:	4453      	add	r3, sl
 80167ea:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80167ee:	0a1b      	lsrs	r3, r3, #8
 80167f0:	0a3f      	lsrs	r7, r7, #8
 80167f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80167f6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80167fa:	433b      	orrs	r3, r7
 80167fc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80167fe:	2cff      	cmp	r4, #255	; 0xff
 8016800:	d020      	beq.n	8016844 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8016802:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016804:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016808:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801680a:	4367      	muls	r7, r4
 801680c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801680e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016812:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016814:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016818:	fb04 fa0a 	mul.w	sl, r4, sl
 801681c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016820:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016824:	44bc      	add	ip, r7
 8016826:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801682a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801682e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016832:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016836:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801683a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801683e:	ea4c 040a 	orr.w	r4, ip, sl
 8016842:	9410      	str	r4, [sp, #64]	; 0x40
 8016844:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016846:	2cff      	cmp	r4, #255	; 0xff
 8016848:	d020      	beq.n	801688c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801684a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801684c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016850:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016852:	4367      	muls	r7, r4
 8016854:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016856:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801685a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801685c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016860:	fb04 fa0a 	mul.w	sl, r4, sl
 8016864:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016868:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801686c:	44bc      	add	ip, r7
 801686e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016872:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016876:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801687a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801687e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016882:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016886:	ea4c 040a 	orr.w	r4, ip, sl
 801688a:	940b      	str	r4, [sp, #44]	; 0x2c
 801688c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801688e:	2cff      	cmp	r4, #255	; 0xff
 8016890:	d020      	beq.n	80168d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 8016892:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016894:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016898:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801689a:	4367      	muls	r7, r4
 801689c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801689e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80168a2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80168a4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80168a8:	fb04 fa0a 	mul.w	sl, r4, sl
 80168ac:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80168b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80168b4:	44bc      	add	ip, r7
 80168b6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80168ba:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80168be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80168c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80168c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80168ca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80168ce:	ea4c 040a 	orr.w	r4, ip, sl
 80168d2:	9411      	str	r4, [sp, #68]	; 0x44
 80168d4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80168d6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80168da:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80168dc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80168e0:	fb0e f707 	mul.w	r7, lr, r7
 80168e4:	fb02 770c 	mla	r7, r2, ip, r7
 80168e8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80168ec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80168ee:	fb00 770c 	mla	r7, r0, ip, r7
 80168f2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80168f6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80168f8:	fb08 770c 	mla	r7, r8, ip, r7
 80168fc:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016900:	fb0e fe0c 	mul.w	lr, lr, ip
 8016904:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016908:	fb02 e303 	mla	r3, r2, r3, lr
 801690c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801690e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016910:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016914:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016916:	fb00 330a 	mla	r3, r0, sl, r3
 801691a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801691e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8016922:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016924:	f8b9 0000 	ldrh.w	r0, [r9]
 8016928:	434b      	muls	r3, r1
 801692a:	0a3f      	lsrs	r7, r7, #8
 801692c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016930:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016934:	1c59      	adds	r1, r3, #1
 8016936:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801693a:	ea47 070c 	orr.w	r7, r7, ip
 801693e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8016942:	1202      	asrs	r2, r0, #8
 8016944:	0c3b      	lsrs	r3, r7, #16
 8016946:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801694a:	b2c9      	uxtb	r1, r1
 801694c:	fb13 f304 	smulbb	r3, r3, r4
 8016950:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016954:	fb02 3201 	mla	r2, r2, r1, r3
 8016958:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801695c:	10c3      	asrs	r3, r0, #3
 801695e:	b2ff      	uxtb	r7, r7
 8016960:	00c0      	lsls	r0, r0, #3
 8016962:	b292      	uxth	r2, r2
 8016964:	fb1c fc04 	smulbb	ip, ip, r4
 8016968:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801696c:	b2c0      	uxtb	r0, r0
 801696e:	fb17 f704 	smulbb	r7, r7, r4
 8016972:	fb03 c301 	mla	r3, r3, r1, ip
 8016976:	fb00 7001 	mla	r0, r0, r1, r7
 801697a:	f102 0c01 	add.w	ip, r2, #1
 801697e:	b280      	uxth	r0, r0
 8016980:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016984:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8016988:	1c42      	adds	r2, r0, #1
 801698a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801698e:	b29b      	uxth	r3, r3
 8016990:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016994:	ea42 020c 	orr.w	r2, r2, ip
 8016998:	f103 0c01 	add.w	ip, r3, #1
 801699c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80169a0:	095b      	lsrs	r3, r3, #5
 80169a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80169a6:	431a      	orrs	r2, r3
 80169a8:	f8a9 2000 	strh.w	r2, [r9]
 80169ac:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80169ae:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80169b0:	441a      	add	r2, r3
 80169b2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80169b4:	9231      	str	r2, [sp, #196]	; 0xc4
 80169b6:	f109 0902 	add.w	r9, r9, #2
 80169ba:	441d      	add	r5, r3
 80169bc:	f10b 3bff 	add.w	fp, fp, #4294967295
 80169c0:	e63d      	b.n	801663e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80169c2:	2800      	cmp	r0, #0
 80169c4:	f43f aedd 	beq.w	8016782 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80169c8:	5c79      	ldrb	r1, [r7, r1]
 80169ca:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80169ce:	910b      	str	r1, [sp, #44]	; 0x2c
 80169d0:	0e09      	lsrs	r1, r1, #24
 80169d2:	9114      	str	r1, [sp, #80]	; 0x50
 80169d4:	e6d5      	b.n	8016782 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80169d6:	b01f      	add	sp, #124	; 0x7c
 80169d8:	ecbd 8b08 	vpop	{d8-d11}
 80169dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080169e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80169e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80169e4:	880e      	ldrh	r6, [r1, #0]
 80169e6:	b085      	sub	sp, #20
 80169e8:	ea4f 2826 	mov.w	r8, r6, asr #8
 80169ec:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 80169f0:	4691      	mov	r9, r2
 80169f2:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80169f6:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 80169fa:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80169fe:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8016a02:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8016a06:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8016a0a:	9200      	str	r2, [sp, #0]
 8016a0c:	00f6      	lsls	r6, r6, #3
 8016a0e:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8016a12:	9201      	str	r2, [sp, #4]
 8016a14:	2c00      	cmp	r4, #0
 8016a16:	b2f2      	uxtb	r2, r6
 8016a18:	fb04 560c 	mla	r6, r4, ip, r5
 8016a1c:	9202      	str	r2, [sp, #8]
 8016a1e:	eb09 0806 	add.w	r8, r9, r6
 8016a22:	db3f      	blt.n	8016aa4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8016a24:	45a6      	cmp	lr, r4
 8016a26:	dd3d      	ble.n	8016aa4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8016a28:	2d00      	cmp	r5, #0
 8016a2a:	db39      	blt.n	8016aa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8016a2c:	45ac      	cmp	ip, r5
 8016a2e:	dd37      	ble.n	8016aa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8016a30:	f819 2006 	ldrb.w	r2, [r9, r6]
 8016a34:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016a38:	1c6e      	adds	r6, r5, #1
 8016a3a:	d436      	bmi.n	8016aaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8016a3c:	45b4      	cmp	ip, r6
 8016a3e:	dd34      	ble.n	8016aaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8016a40:	b3a8      	cbz	r0, 8016aae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8016a42:	f898 6001 	ldrb.w	r6, [r8, #1]
 8016a46:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8016a4a:	3401      	adds	r4, #1
 8016a4c:	d433      	bmi.n	8016ab6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016a4e:	45a6      	cmp	lr, r4
 8016a50:	dd31      	ble.n	8016ab6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016a52:	b39f      	cbz	r7, 8016abc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8016a54:	2d00      	cmp	r5, #0
 8016a56:	eb08 0e0c 	add.w	lr, r8, ip
 8016a5a:	db2a      	blt.n	8016ab2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8016a5c:	45ac      	cmp	ip, r5
 8016a5e:	dd28      	ble.n	8016ab2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8016a60:	f818 400c 	ldrb.w	r4, [r8, ip]
 8016a64:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8016a68:	3501      	adds	r5, #1
 8016a6a:	d42a      	bmi.n	8016ac2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016a6c:	45ac      	cmp	ip, r5
 8016a6e:	dd28      	ble.n	8016ac2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016a70:	b348      	cbz	r0, 8016ac6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8016a72:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8016a76:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8016a7a:	280f      	cmp	r0, #15
 8016a7c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016a80:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016a84:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016a88:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8016a8c:	d801      	bhi.n	8016a92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 8016a8e:	2f0f      	cmp	r7, #15
 8016a90:	d91b      	bls.n	8016aca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 8016a92:	4b7d      	ldr	r3, [pc, #500]	; (8016c88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8016a94:	4a7d      	ldr	r2, [pc, #500]	; (8016c8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8016a96:	487e      	ldr	r0, [pc, #504]	; (8016c90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8016a98:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8016a9c:	f004 ffbe 	bl	801ba1c <__assert_func>
 8016aa0:	2200      	movs	r2, #0
 8016aa2:	e7c9      	b.n	8016a38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8016aa4:	2600      	movs	r6, #0
 8016aa6:	4632      	mov	r2, r6
 8016aa8:	e7cf      	b.n	8016a4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016aaa:	2600      	movs	r6, #0
 8016aac:	e7cd      	b.n	8016a4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016aae:	4606      	mov	r6, r0
 8016ab0:	e7cb      	b.n	8016a4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016ab2:	2400      	movs	r4, #0
 8016ab4:	e7d8      	b.n	8016a68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 8016ab6:	2300      	movs	r3, #0
 8016ab8:	461c      	mov	r4, r3
 8016aba:	e7de      	b.n	8016a7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016abc:	463b      	mov	r3, r7
 8016abe:	463c      	mov	r4, r7
 8016ac0:	e7db      	b.n	8016a7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016ac2:	2300      	movs	r3, #0
 8016ac4:	e7d9      	b.n	8016a7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016ac6:	4603      	mov	r3, r0
 8016ac8:	e7d7      	b.n	8016a7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016aca:	b280      	uxth	r0, r0
 8016acc:	b2bf      	uxth	r7, r7
 8016ace:	fb00 fe07 	mul.w	lr, r0, r7
 8016ad2:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8016ad6:	0100      	lsls	r0, r0, #4
 8016ad8:	eba0 0c0e 	sub.w	ip, r0, lr
 8016adc:	b2bf      	uxth	r7, r7
 8016ade:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8016ae2:	fa1f fc8c 	uxth.w	ip, ip
 8016ae6:	1bed      	subs	r5, r5, r7
 8016ae8:	b2ad      	uxth	r5, r5
 8016aea:	fb0c f00a 	mul.w	r0, ip, sl
 8016aee:	fb05 000b 	mla	r0, r5, fp, r0
 8016af2:	fb07 0009 	mla	r0, r7, r9, r0
 8016af6:	fb0e 0008 	mla	r0, lr, r8, r0
 8016afa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016afe:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016b02:	9003      	str	r0, [sp, #12]
 8016b04:	d018      	beq.n	8016b38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8016b06:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016b0a:	fb0b f000 	mul.w	r0, fp, r0
 8016b0e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016b12:	fb0b fb02 	mul.w	fp, fp, r2
 8016b16:	0a02      	lsrs	r2, r0, #8
 8016b18:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016b1c:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8016b20:	4402      	add	r2, r0
 8016b22:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8016b26:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016b2a:	0a12      	lsrs	r2, r2, #8
 8016b2c:	0a00      	lsrs	r0, r0, #8
 8016b2e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016b32:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016b36:	4302      	orrs	r2, r0
 8016b38:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016b3c:	d019      	beq.n	8016b72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8016b3e:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016b42:	fb0a fb0b 	mul.w	fp, sl, fp
 8016b46:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016b4a:	fb0a fa06 	mul.w	sl, sl, r6
 8016b4e:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8016b52:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016b56:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016b5a:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8016b5e:	445e      	add	r6, fp
 8016b60:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8016b64:	0a36      	lsrs	r6, r6, #8
 8016b66:	0a00      	lsrs	r0, r0, #8
 8016b68:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016b6c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016b70:	4306      	orrs	r6, r0
 8016b72:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016b76:	d019      	beq.n	8016bac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8016b78:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8016b7c:	fb09 fa0a 	mul.w	sl, r9, sl
 8016b80:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016b84:	fb09 f904 	mul.w	r9, r9, r4
 8016b88:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8016b8c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016b90:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016b94:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8016b98:	4454      	add	r4, sl
 8016b9a:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8016b9e:	0a24      	lsrs	r4, r4, #8
 8016ba0:	0a00      	lsrs	r0, r0, #8
 8016ba2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016ba6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016baa:	4304      	orrs	r4, r0
 8016bac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016bb0:	d019      	beq.n	8016be6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8016bb2:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8016bb6:	fb08 f909 	mul.w	r9, r8, r9
 8016bba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016bbe:	fb08 f803 	mul.w	r8, r8, r3
 8016bc2:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8016bc6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016bca:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8016bce:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8016bd2:	444b      	add	r3, r9
 8016bd4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8016bd8:	0a1b      	lsrs	r3, r3, #8
 8016bda:	0a00      	lsrs	r0, r0, #8
 8016bdc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016be0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016be4:	4303      	orrs	r3, r0
 8016be6:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016bea:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016bee:	fb0c f808 	mul.w	r8, ip, r8
 8016bf2:	fb05 8800 	mla	r8, r5, r0, r8
 8016bf6:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8016bfa:	fb07 8800 	mla	r8, r7, r0, r8
 8016bfe:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8016c02:	fb0e 8000 	mla	r0, lr, r0, r8
 8016c06:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016c0a:	fb0c f606 	mul.w	r6, ip, r6
 8016c0e:	0a00      	lsrs	r0, r0, #8
 8016c10:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016c14:	fb05 6202 	mla	r2, r5, r2, r6
 8016c18:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8016c1c:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8016c20:	fb07 2700 	mla	r7, r7, r0, r2
 8016c24:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8016c28:	9b03      	ldr	r3, [sp, #12]
 8016c2a:	9d00      	ldr	r5, [sp, #0]
 8016c2c:	9a02      	ldr	r2, [sp, #8]
 8016c2e:	fb0e 7000 	mla	r0, lr, r0, r7
 8016c32:	43dc      	mvns	r4, r3
 8016c34:	9b01      	ldr	r3, [sp, #4]
 8016c36:	b2e4      	uxtb	r4, r4
 8016c38:	0a00      	lsrs	r0, r0, #8
 8016c3a:	4363      	muls	r3, r4
 8016c3c:	4365      	muls	r5, r4
 8016c3e:	4362      	muls	r2, r4
 8016c40:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016c44:	ea48 0000 	orr.w	r0, r8, r0
 8016c48:	4614      	mov	r4, r2
 8016c4a:	1c5e      	adds	r6, r3, #1
 8016c4c:	1c6a      	adds	r2, r5, #1
 8016c4e:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8016c52:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016c56:	0a03      	lsrs	r3, r0, #8
 8016c58:	0c02      	lsrs	r2, r0, #16
 8016c5a:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8016c5e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8016c62:	00db      	lsls	r3, r3, #3
 8016c64:	0212      	lsls	r2, r2, #8
 8016c66:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8016c6a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016c6e:	4313      	orrs	r3, r2
 8016c70:	1c62      	adds	r2, r4, #1
 8016c72:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8016c76:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8016c7a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016c7e:	4318      	orrs	r0, r3
 8016c80:	8008      	strh	r0, [r1, #0]
 8016c82:	b005      	add	sp, #20
 8016c84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c88:	0802050e 	.word	0x0802050e
 8016c8c:	08020ade 	.word	0x08020ade
 8016c90:	08020592 	.word	0x08020592

08016c94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016c94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c98:	ed2d 8b08 	vpush	{d8-d11}
 8016c9c:	b09b      	sub	sp, #108	; 0x6c
 8016c9e:	eeb0 aa40 	vmov.f32	s20, s0
 8016ca2:	9218      	str	r2, [sp, #96]	; 0x60
 8016ca4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8016ca6:	9116      	str	r1, [sp, #88]	; 0x58
 8016ca8:	9307      	str	r3, [sp, #28]
 8016caa:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8016cae:	9019      	str	r0, [sp, #100]	; 0x64
 8016cb0:	6850      	ldr	r0, [r2, #4]
 8016cb2:	6812      	ldr	r2, [r2, #0]
 8016cb4:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8016cb6:	fb00 1303 	mla	r3, r0, r3, r1
 8016cba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016cbe:	930a      	str	r3, [sp, #40]	; 0x28
 8016cc0:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016cc2:	681b      	ldr	r3, [r3, #0]
 8016cc4:	930f      	str	r3, [sp, #60]	; 0x3c
 8016cc6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016cc8:	685e      	ldr	r6, [r3, #4]
 8016cca:	eef0 9a60 	vmov.f32	s19, s1
 8016cce:	eeb0 9a41 	vmov.f32	s18, s2
 8016cd2:	eeb0 8a62 	vmov.f32	s16, s5
 8016cd6:	eef0 8a43 	vmov.f32	s17, s6
 8016cda:	eef0 ba44 	vmov.f32	s23, s8
 8016cde:	eeb0 ba64 	vmov.f32	s22, s9
 8016ce2:	eef0 aa45 	vmov.f32	s21, s10
 8016ce6:	3604      	adds	r6, #4
 8016ce8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016cea:	2b00      	cmp	r3, #0
 8016cec:	dc03      	bgt.n	8016cf6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8016cee:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016cf0:	2b00      	cmp	r3, #0
 8016cf2:	f340 8373 	ble.w	80173dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8016cf6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016cf8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016cfc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016d00:	1e48      	subs	r0, r1, #1
 8016d02:	1e57      	subs	r7, r2, #1
 8016d04:	9b07      	ldr	r3, [sp, #28]
 8016d06:	2b00      	cmp	r3, #0
 8016d08:	f340 8190 	ble.w	801702c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8016d0c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016d0e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8016d12:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016d16:	d406      	bmi.n	8016d26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016d18:	4584      	cmp	ip, r0
 8016d1a:	da04      	bge.n	8016d26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016d1c:	2b00      	cmp	r3, #0
 8016d1e:	db02      	blt.n	8016d26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016d20:	42bb      	cmp	r3, r7
 8016d22:	f2c0 8184 	blt.w	801702e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8016d26:	f11c 0c01 	adds.w	ip, ip, #1
 8016d2a:	f100 8172 	bmi.w	8017012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016d2e:	4561      	cmp	r1, ip
 8016d30:	f2c0 816f 	blt.w	8017012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016d34:	3301      	adds	r3, #1
 8016d36:	f100 816c 	bmi.w	8017012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016d3a:	429a      	cmp	r2, r3
 8016d3c:	f2c0 8169 	blt.w	8017012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016d40:	9b07      	ldr	r3, [sp, #28]
 8016d42:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016d44:	9317      	str	r3, [sp, #92]	; 0x5c
 8016d46:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016d48:	2b00      	cmp	r3, #0
 8016d4a:	f340 818e 	ble.w	801706a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8016d4e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016d50:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016d54:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016d56:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8016d5a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016d5c:	141b      	asrs	r3, r3, #16
 8016d5e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016d62:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016d66:	f100 81d1 	bmi.w	801710c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016d6a:	f101 38ff 	add.w	r8, r1, #4294967295
 8016d6e:	4543      	cmp	r3, r8
 8016d70:	f280 81cc 	bge.w	801710c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016d74:	f1bc 0f00 	cmp.w	ip, #0
 8016d78:	f2c0 81c8 	blt.w	801710c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016d7c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8016d80:	45c4      	cmp	ip, r8
 8016d82:	f280 81c3 	bge.w	801710c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016d86:	b209      	sxth	r1, r1
 8016d88:	fb0c 3301 	mla	r3, ip, r1, r3
 8016d8c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016d8e:	eb04 0803 	add.w	r8, r4, r3
 8016d92:	5ce3      	ldrb	r3, [r4, r3]
 8016d94:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016d98:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8016d9c:	2a00      	cmp	r2, #0
 8016d9e:	f000 81aa 	beq.w	80170f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8016da2:	f898 c001 	ldrb.w	ip, [r8, #1]
 8016da6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8016daa:	940b      	str	r4, [sp, #44]	; 0x2c
 8016dac:	0e24      	lsrs	r4, r4, #24
 8016dae:	9412      	str	r4, [sp, #72]	; 0x48
 8016db0:	b178      	cbz	r0, 8016dd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016db2:	eb08 0c01 	add.w	ip, r8, r1
 8016db6:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016dba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016dbe:	9108      	str	r1, [sp, #32]
 8016dc0:	0e09      	lsrs	r1, r1, #24
 8016dc2:	9110      	str	r1, [sp, #64]	; 0x40
 8016dc4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8016dc8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016dcc:	910c      	str	r1, [sp, #48]	; 0x30
 8016dce:	0e09      	lsrs	r1, r1, #24
 8016dd0:	9113      	str	r1, [sp, #76]	; 0x4c
 8016dd2:	b292      	uxth	r2, r2
 8016dd4:	b280      	uxth	r0, r0
 8016dd6:	fb02 f900 	mul.w	r9, r2, r0
 8016dda:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8016dde:	0112      	lsls	r2, r2, #4
 8016de0:	eba2 0809 	sub.w	r8, r2, r9
 8016de4:	b280      	uxth	r0, r0
 8016de6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016dea:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016dec:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016dee:	fa1f f888 	uxth.w	r8, r8
 8016df2:	1a12      	subs	r2, r2, r0
 8016df4:	b292      	uxth	r2, r2
 8016df6:	fb08 f101 	mul.w	r1, r8, r1
 8016dfa:	fb02 110e 	mla	r1, r2, lr, r1
 8016dfe:	fb00 1104 	mla	r1, r0, r4, r1
 8016e02:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016e04:	fb09 1104 	mla	r1, r9, r4, r1
 8016e08:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016e0c:	2900      	cmp	r1, #0
 8016e0e:	f000 80f5 	beq.w	8016ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016e12:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016e16:	d01b      	beq.n	8016e50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016e18:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016e1c:	fb0e fa0a 	mul.w	sl, lr, sl
 8016e20:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016e24:	fb0e fe03 	mul.w	lr, lr, r3
 8016e28:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016e2c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016e30:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016e34:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8016e38:	4453      	add	r3, sl
 8016e3a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016e3e:	0a1b      	lsrs	r3, r3, #8
 8016e40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016e44:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016e48:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016e4c:	ea43 030c 	orr.w	r3, r3, ip
 8016e50:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016e52:	2cff      	cmp	r4, #255	; 0xff
 8016e54:	d021      	beq.n	8016e9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8016e56:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016e58:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016e5c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016e5e:	fb04 fb0b 	mul.w	fp, r4, fp
 8016e62:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016e64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016e68:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016e6a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016e6e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016e72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016e76:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016e7a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016e7e:	44de      	add	lr, fp
 8016e80:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016e84:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016e88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016e8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016e90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016e94:	ea4e 040a 	orr.w	r4, lr, sl
 8016e98:	940b      	str	r4, [sp, #44]	; 0x2c
 8016e9a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016e9c:	2cff      	cmp	r4, #255	; 0xff
 8016e9e:	d021      	beq.n	8016ee4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016ea0:	9c08      	ldr	r4, [sp, #32]
 8016ea2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016ea6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016ea8:	fb04 fb0b 	mul.w	fp, r4, fp
 8016eac:	9c08      	ldr	r4, [sp, #32]
 8016eae:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016eb2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016eb4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016eb8:	fb04 fa0a 	mul.w	sl, r4, sl
 8016ebc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016ec0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016ec4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016ec8:	44de      	add	lr, fp
 8016eca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016ece:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016ed2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016ed6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016eda:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016ede:	ea4e 040a 	orr.w	r4, lr, sl
 8016ee2:	9408      	str	r4, [sp, #32]
 8016ee4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016ee6:	2cff      	cmp	r4, #255	; 0xff
 8016ee8:	d021      	beq.n	8016f2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016eea:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016eec:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016ef0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016ef2:	fb04 fb0b 	mul.w	fp, r4, fp
 8016ef6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016ef8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016efc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016efe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016f02:	fb04 fa0a 	mul.w	sl, r4, sl
 8016f06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f0a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016f0e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016f12:	44de      	add	lr, fp
 8016f14:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016f18:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016f1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016f20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f24:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016f28:	ea4e 040a 	orr.w	r4, lr, sl
 8016f2c:	940c      	str	r4, [sp, #48]	; 0x30
 8016f2e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016f30:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016f34:	9c08      	ldr	r4, [sp, #32]
 8016f36:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8016f3a:	fb08 fc0c 	mul.w	ip, r8, ip
 8016f3e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016f42:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016f46:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016f48:	fb00 cc0e 	mla	ip, r0, lr, ip
 8016f4c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016f50:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016f52:	fb09 cc0e 	mla	ip, r9, lr, ip
 8016f56:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8016f5a:	fb08 f80e 	mul.w	r8, r8, lr
 8016f5e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016f62:	fb02 8303 	mla	r3, r2, r3, r8
 8016f66:	9a08      	ldr	r2, [sp, #32]
 8016f68:	f8b7 8000 	ldrh.w	r8, [r7]
 8016f6c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016f70:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016f72:	fb00 330a 	mla	r3, r0, sl, r3
 8016f76:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8016f7a:	fb09 3900 	mla	r9, r9, r0, r3
 8016f7e:	43c9      	mvns	r1, r1
 8016f80:	ea4f 2228 	mov.w	r2, r8, asr #8
 8016f84:	fa5f fe81 	uxtb.w	lr, r1
 8016f88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016f8c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016f90:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016f94:	fb02 f20e 	mul.w	r2, r2, lr
 8016f98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016f9c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016fa0:	ea4c 0c09 	orr.w	ip, ip, r9
 8016fa4:	1c53      	adds	r3, r2, #1
 8016fa6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8016faa:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8016fae:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8016fb2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016fb6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016fba:	4a63      	ldr	r2, [pc, #396]	; (8017148 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8016fbc:	fb00 f00e 	mul.w	r0, r0, lr
 8016fc0:	b2db      	uxtb	r3, r3
 8016fc2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8016fc6:	1c43      	adds	r3, r0, #1
 8016fc8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016fcc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8016fd0:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8016fd4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016fd8:	b2c9      	uxtb	r1, r1
 8016fda:	00db      	lsls	r3, r3, #3
 8016fdc:	fb01 f10e 	mul.w	r1, r1, lr
 8016fe0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016fe4:	4313      	orrs	r3, r2
 8016fe6:	1c4a      	adds	r2, r1, #1
 8016fe8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016fec:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8016ff0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8016ff4:	ea4c 0c03 	orr.w	ip, ip, r3
 8016ff8:	f8a7 c000 	strh.w	ip, [r7]
 8016ffc:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8016ffe:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017000:	441a      	add	r2, r3
 8017002:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017004:	922d      	str	r2, [sp, #180]	; 0xb4
 8017006:	441d      	add	r5, r3
 8017008:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801700a:	3b01      	subs	r3, #1
 801700c:	3702      	adds	r7, #2
 801700e:	9317      	str	r3, [sp, #92]	; 0x5c
 8017010:	e699      	b.n	8016d46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017012:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8017014:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8017016:	441c      	add	r4, r3
 8017018:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801701a:	942d      	str	r4, [sp, #180]	; 0xb4
 801701c:	441d      	add	r5, r3
 801701e:	9b07      	ldr	r3, [sp, #28]
 8017020:	3b01      	subs	r3, #1
 8017022:	9307      	str	r3, [sp, #28]
 8017024:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017026:	3302      	adds	r3, #2
 8017028:	930a      	str	r3, [sp, #40]	; 0x28
 801702a:	e66b      	b.n	8016d04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801702c:	d024      	beq.n	8017078 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801702e:	9b07      	ldr	r3, [sp, #28]
 8017030:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8017032:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8017034:	3b01      	subs	r3, #1
 8017036:	fb00 4003 	mla	r0, r0, r3, r4
 801703a:	1400      	asrs	r0, r0, #16
 801703c:	f53f ae80 	bmi.w	8016d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8017040:	3901      	subs	r1, #1
 8017042:	4288      	cmp	r0, r1
 8017044:	f6bf ae7c 	bge.w	8016d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8017048:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801704a:	fb01 5303 	mla	r3, r1, r3, r5
 801704e:	141b      	asrs	r3, r3, #16
 8017050:	f53f ae76 	bmi.w	8016d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8017054:	3a01      	subs	r2, #1
 8017056:	4293      	cmp	r3, r2
 8017058:	f6bf ae72 	bge.w	8016d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801705c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8017060:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8017064:	f1bb 0f00 	cmp.w	fp, #0
 8017068:	dc70      	bgt.n	801714c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 801706a:	9b07      	ldr	r3, [sp, #28]
 801706c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017070:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017072:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017076:	930a      	str	r3, [sp, #40]	; 0x28
 8017078:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801707a:	2b00      	cmp	r3, #0
 801707c:	f340 81ae 	ble.w	80173dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8017080:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017084:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017088:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801708c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801708e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017092:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017096:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801709a:	eef0 6a48 	vmov.f32	s13, s16
 801709e:	ee69 7a27 	vmul.f32	s15, s18, s15
 80170a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80170a6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80170aa:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 80170ae:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80170b2:	eef0 6a68 	vmov.f32	s13, s17
 80170b6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80170ba:	ee18 2a10 	vmov	r2, s16
 80170be:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80170c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80170c6:	ee18 2a90 	vmov	r2, s17
 80170ca:	932f      	str	r3, [sp, #188]	; 0xbc
 80170cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80170ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80170d2:	9330      	str	r3, [sp, #192]	; 0xc0
 80170d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80170d6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80170d8:	3b01      	subs	r3, #1
 80170da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80170de:	9316      	str	r3, [sp, #88]	; 0x58
 80170e0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80170e2:	bf08      	it	eq
 80170e4:	4613      	moveq	r3, r2
 80170e6:	ee16 5a90 	vmov	r5, s13
 80170ea:	9307      	str	r3, [sp, #28]
 80170ec:	eef0 8a67 	vmov.f32	s17, s15
 80170f0:	eeb0 8a47 	vmov.f32	s16, s14
 80170f4:	e5f8      	b.n	8016ce8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80170f6:	2800      	cmp	r0, #0
 80170f8:	f43f ae6b 	beq.w	8016dd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80170fc:	f818 1001 	ldrb.w	r1, [r8, r1]
 8017100:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017104:	9108      	str	r1, [sp, #32]
 8017106:	0e09      	lsrs	r1, r1, #24
 8017108:	9110      	str	r1, [sp, #64]	; 0x40
 801710a:	e662      	b.n	8016dd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801710c:	f113 0801 	adds.w	r8, r3, #1
 8017110:	f53f af74 	bmi.w	8016ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017114:	4541      	cmp	r1, r8
 8017116:	f6ff af71 	blt.w	8016ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801711a:	f11c 0801 	adds.w	r8, ip, #1
 801711e:	f53f af6d 	bmi.w	8016ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017122:	45c6      	cmp	lr, r8
 8017124:	f6ff af6a 	blt.w	8016ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017128:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801712c:	b209      	sxth	r1, r1
 801712e:	fa0f f38e 	sxth.w	r3, lr
 8017132:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8017136:	9301      	str	r3, [sp, #4]
 8017138:	9100      	str	r1, [sp, #0]
 801713a:	4633      	mov	r3, r6
 801713c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801713e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8017140:	4639      	mov	r1, r7
 8017142:	f7ff fc4d 	bl	80169e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8017146:	e759      	b.n	8016ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017148:	fffff800 	.word	0xfffff800
 801714c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801714e:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8017150:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017154:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017156:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801715a:	1427      	asrs	r7, r4, #16
 801715c:	142b      	asrs	r3, r5, #16
 801715e:	fb01 7303 	mla	r3, r1, r3, r7
 8017162:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017164:	18e7      	adds	r7, r4, r3
 8017166:	5ce3      	ldrb	r3, [r4, r3]
 8017168:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801716c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017170:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8017174:	2a00      	cmp	r2, #0
 8017176:	f000 8127 	beq.w	80173c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801717a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801717e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8017182:	940d      	str	r4, [sp, #52]	; 0x34
 8017184:	0e24      	lsrs	r4, r4, #24
 8017186:	9414      	str	r4, [sp, #80]	; 0x50
 8017188:	b170      	cbz	r0, 80171a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801718a:	eb07 0e01 	add.w	lr, r7, r1
 801718e:	5c79      	ldrb	r1, [r7, r1]
 8017190:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017194:	9109      	str	r1, [sp, #36]	; 0x24
 8017196:	0e09      	lsrs	r1, r1, #24
 8017198:	9111      	str	r1, [sp, #68]	; 0x44
 801719a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801719e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80171a2:	910e      	str	r1, [sp, #56]	; 0x38
 80171a4:	0e09      	lsrs	r1, r1, #24
 80171a6:	9115      	str	r1, [sp, #84]	; 0x54
 80171a8:	b292      	uxth	r2, r2
 80171aa:	b280      	uxth	r0, r0
 80171ac:	fb02 f800 	mul.w	r8, r2, r0
 80171b0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80171b4:	0112      	lsls	r2, r2, #4
 80171b6:	eba2 0e08 	sub.w	lr, r2, r8
 80171ba:	b280      	uxth	r0, r0
 80171bc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80171c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80171c2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80171c4:	fa1f fe8e 	uxth.w	lr, lr
 80171c8:	1a09      	subs	r1, r1, r0
 80171ca:	b289      	uxth	r1, r1
 80171cc:	fb0e f202 	mul.w	r2, lr, r2
 80171d0:	fb01 220c 	mla	r2, r1, ip, r2
 80171d4:	fb00 2204 	mla	r2, r0, r4, r2
 80171d8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80171da:	fb08 2204 	mla	r2, r8, r4, r2
 80171de:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80171e2:	2a00      	cmp	r2, #0
 80171e4:	f000 80e5 	beq.w	80173b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80171e8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80171ec:	d019      	beq.n	8017222 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 80171ee:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80171f2:	fb0c fa0a 	mul.w	sl, ip, sl
 80171f6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80171fa:	fb0c fc03 	mul.w	ip, ip, r3
 80171fe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017202:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017206:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801720a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801720e:	4453      	add	r3, sl
 8017210:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017214:	0a1b      	lsrs	r3, r3, #8
 8017216:	0a3f      	lsrs	r7, r7, #8
 8017218:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801721c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8017220:	433b      	orrs	r3, r7
 8017222:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017224:	2cff      	cmp	r4, #255	; 0xff
 8017226:	d020      	beq.n	801726a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8017228:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801722a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801722e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017230:	4367      	muls	r7, r4
 8017232:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017234:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017238:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801723a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801723e:	fb04 fa0a 	mul.w	sl, r4, sl
 8017242:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017246:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801724a:	44bc      	add	ip, r7
 801724c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017250:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017254:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017258:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801725c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017260:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017264:	ea4c 040a 	orr.w	r4, ip, sl
 8017268:	940d      	str	r4, [sp, #52]	; 0x34
 801726a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801726c:	2cff      	cmp	r4, #255	; 0xff
 801726e:	d020      	beq.n	80172b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 8017270:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017272:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017276:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017278:	4367      	muls	r7, r4
 801727a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801727c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017280:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017282:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017286:	fb04 fa0a 	mul.w	sl, r4, sl
 801728a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801728e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017292:	44bc      	add	ip, r7
 8017294:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017298:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801729c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80172a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80172a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80172a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80172ac:	ea4c 040a 	orr.w	r4, ip, sl
 80172b0:	9409      	str	r4, [sp, #36]	; 0x24
 80172b2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80172b4:	2cff      	cmp	r4, #255	; 0xff
 80172b6:	d020      	beq.n	80172fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 80172b8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80172ba:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80172be:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80172c0:	4367      	muls	r7, r4
 80172c2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80172c4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80172c8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80172ca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80172ce:	fb04 fa0a 	mul.w	sl, r4, sl
 80172d2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80172d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80172da:	44bc      	add	ip, r7
 80172dc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80172e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80172e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80172e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80172ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80172f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80172f4:	ea4c 040a 	orr.w	r4, ip, sl
 80172f8:	940e      	str	r4, [sp, #56]	; 0x38
 80172fa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80172fc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017300:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017302:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8017306:	fb0e f707 	mul.w	r7, lr, r7
 801730a:	fb01 770c 	mla	r7, r1, ip, r7
 801730e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017312:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017314:	fb00 770c 	mla	r7, r0, ip, r7
 8017318:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801731c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801731e:	fb08 770c 	mla	r7, r8, ip, r7
 8017322:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8017326:	fb0e fe0c 	mul.w	lr, lr, ip
 801732a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801732e:	fb01 e303 	mla	r3, r1, r3, lr
 8017332:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017334:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8017338:	990e      	ldr	r1, [sp, #56]	; 0x38
 801733a:	fb00 330a 	mla	r3, r0, sl, r3
 801733e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8017342:	fb08 3c0c 	mla	ip, r8, ip, r3
 8017346:	f8b9 3000 	ldrh.w	r3, [r9]
 801734a:	43d2      	mvns	r2, r2
 801734c:	1218      	asrs	r0, r3, #8
 801734e:	b2d2      	uxtb	r2, r2
 8017350:	10d9      	asrs	r1, r3, #3
 8017352:	0a3f      	lsrs	r7, r7, #8
 8017354:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017358:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801735c:	00db      	lsls	r3, r3, #3
 801735e:	4350      	muls	r0, r2
 8017360:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017364:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017368:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801736c:	b2db      	uxtb	r3, r3
 801736e:	ea47 070c 	orr.w	r7, r7, ip
 8017372:	4351      	muls	r1, r2
 8017374:	4353      	muls	r3, r2
 8017376:	1c42      	adds	r2, r0, #1
 8017378:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801737c:	0c3a      	lsrs	r2, r7, #16
 801737e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017382:	4a19      	ldr	r2, [pc, #100]	; (80173e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 8017384:	b2c0      	uxtb	r0, r0
 8017386:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801738a:	1c4a      	adds	r2, r1, #1
 801738c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017390:	0a3a      	lsrs	r2, r7, #8
 8017392:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017396:	00c9      	lsls	r1, r1, #3
 8017398:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801739c:	4301      	orrs	r1, r0
 801739e:	1c58      	adds	r0, r3, #1
 80173a0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80173a4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80173a8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80173ac:	4308      	orrs	r0, r1
 80173ae:	f8a9 0000 	strh.w	r0, [r9]
 80173b2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80173b4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80173b6:	441a      	add	r2, r3
 80173b8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80173ba:	922d      	str	r2, [sp, #180]	; 0xb4
 80173bc:	f109 0902 	add.w	r9, r9, #2
 80173c0:	441d      	add	r5, r3
 80173c2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80173c6:	e64d      	b.n	8017064 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80173c8:	2800      	cmp	r0, #0
 80173ca:	f43f aeed 	beq.w	80171a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80173ce:	5c79      	ldrb	r1, [r7, r1]
 80173d0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80173d4:	9109      	str	r1, [sp, #36]	; 0x24
 80173d6:	0e09      	lsrs	r1, r1, #24
 80173d8:	9111      	str	r1, [sp, #68]	; 0x44
 80173da:	e6e5      	b.n	80171a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80173dc:	b01b      	add	sp, #108	; 0x6c
 80173de:	ecbd 8b08 	vpop	{d8-d11}
 80173e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173e6:	bf00      	nop
 80173e8:	fffff800 	.word	0xfffff800

080173ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80173ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173f0:	b085      	sub	sp, #20
 80173f2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80173f6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80173fa:	9103      	str	r1, [sp, #12]
 80173fc:	fb05 7106 	mla	r1, r5, r6, r7
 8017400:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8017404:	2d00      	cmp	r5, #0
 8017406:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801740a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801740e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8017412:	9401      	str	r4, [sp, #4]
 8017414:	eb03 0901 	add.w	r9, r3, r1
 8017418:	f2c0 80c0 	blt.w	801759c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801741c:	45a8      	cmp	r8, r5
 801741e:	f340 80bd 	ble.w	801759c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8017422:	2f00      	cmp	r7, #0
 8017424:	f2c0 80b6 	blt.w	8017594 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8017428:	42be      	cmp	r6, r7
 801742a:	f340 80b3 	ble.w	8017594 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801742e:	f813 c001 	ldrb.w	ip, [r3, r1]
 8017432:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8017436:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801743a:	d019      	beq.n	8017470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 801743c:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8017440:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017444:	435a      	muls	r2, r3
 8017446:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801744a:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801744e:	fb0c f403 	mul.w	r4, ip, r3
 8017452:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8017456:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801745a:	441a      	add	r2, r3
 801745c:	f104 0320 	add.w	r3, r4, #32
 8017460:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8017464:	0a1b      	lsrs	r3, r3, #8
 8017466:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801746a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801746e:	4319      	orrs	r1, r3
 8017470:	b289      	uxth	r1, r1
 8017472:	1c7b      	adds	r3, r7, #1
 8017474:	f100 8097 	bmi.w	80175a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8017478:	429e      	cmp	r6, r3
 801747a:	f340 8094 	ble.w	80175a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801747e:	2800      	cmp	r0, #0
 8017480:	f000 8094 	beq.w	80175ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 8017484:	f899 4001 	ldrb.w	r4, [r9, #1]
 8017488:	9b01      	ldr	r3, [sp, #4]
 801748a:	2cff      	cmp	r4, #255	; 0xff
 801748c:	885b      	ldrh	r3, [r3, #2]
 801748e:	d01b      	beq.n	80174c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 8017490:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8017494:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017498:	fb0a f202 	mul.w	r2, sl, r2
 801749c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80174a0:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80174a4:	fb04 fa03 	mul.w	sl, r4, r3
 80174a8:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80174ac:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80174b0:	441a      	add	r2, r3
 80174b2:	f10a 0320 	add.w	r3, sl, #32
 80174b6:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80174ba:	0a1b      	lsrs	r3, r3, #8
 80174bc:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80174c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80174c4:	ea4b 0303 	orr.w	r3, fp, r3
 80174c8:	b29b      	uxth	r3, r3
 80174ca:	3501      	adds	r5, #1
 80174cc:	d474      	bmi.n	80175b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80174ce:	45a8      	cmp	r8, r5
 80174d0:	dd72      	ble.n	80175b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80174d2:	f1be 0f00 	cmp.w	lr, #0
 80174d6:	f000 8120 	beq.w	801771a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 80174da:	2f00      	cmp	r7, #0
 80174dc:	db69      	blt.n	80175b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80174de:	42be      	cmp	r6, r7
 80174e0:	dd67      	ble.n	80175b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80174e2:	f819 5006 	ldrb.w	r5, [r9, r6]
 80174e6:	9a01      	ldr	r2, [sp, #4]
 80174e8:	2dff      	cmp	r5, #255	; 0xff
 80174ea:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 80174ee:	d01c      	beq.n	801752a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 80174f0:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 80174f4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80174f8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80174fc:	fb05 fa0b 	mul.w	sl, r5, fp
 8017500:	fb08 f802 	mul.w	r8, r8, r2
 8017504:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017508:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801750c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017510:	4490      	add	r8, r2
 8017512:	f10a 0220 	add.w	r2, sl, #32
 8017516:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801751a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801751e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8017522:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017526:	ea4b 0b0a 	orr.w	fp, fp, sl
 801752a:	fa1f fb8b 	uxth.w	fp, fp
 801752e:	3701      	adds	r7, #1
 8017530:	d447      	bmi.n	80175c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8017532:	42be      	cmp	r6, r7
 8017534:	dd45      	ble.n	80175c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8017536:	2800      	cmp	r0, #0
 8017538:	d046      	beq.n	80175c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 801753a:	3601      	adds	r6, #1
 801753c:	9a01      	ldr	r2, [sp, #4]
 801753e:	f819 7006 	ldrb.w	r7, [r9, r6]
 8017542:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8017546:	2fff      	cmp	r7, #255	; 0xff
 8017548:	d01a      	beq.n	8017580 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 801754a:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801754e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8017552:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017556:	fb07 f902 	mul.w	r9, r7, r2
 801755a:	fb08 f806 	mul.w	r8, r8, r6
 801755e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8017562:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8017566:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801756a:	44b0      	add	r8, r6
 801756c:	f109 0620 	add.w	r6, r9, #32
 8017570:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8017574:	0a36      	lsrs	r6, r6, #8
 8017576:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801757a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801757e:	4332      	orrs	r2, r6
 8017580:	b292      	uxth	r2, r2
 8017582:	280f      	cmp	r0, #15
 8017584:	d922      	bls.n	80175cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8017586:	4b69      	ldr	r3, [pc, #420]	; (801772c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 8017588:	4a69      	ldr	r2, [pc, #420]	; (8017730 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 801758a:	486a      	ldr	r0, [pc, #424]	; (8017734 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 801758c:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8017590:	f004 fa44 	bl	801ba1c <__assert_func>
 8017594:	f04f 0c00 	mov.w	ip, #0
 8017598:	4661      	mov	r1, ip
 801759a:	e76a      	b.n	8017472 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 801759c:	2400      	movs	r4, #0
 801759e:	46a4      	mov	ip, r4
 80175a0:	4623      	mov	r3, r4
 80175a2:	4621      	mov	r1, r4
 80175a4:	e791      	b.n	80174ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80175a6:	2400      	movs	r4, #0
 80175a8:	4623      	mov	r3, r4
 80175aa:	e78e      	b.n	80174ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80175ac:	4604      	mov	r4, r0
 80175ae:	4603      	mov	r3, r0
 80175b0:	e78b      	b.n	80174ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80175b2:	2500      	movs	r5, #0
 80175b4:	46ab      	mov	fp, r5
 80175b6:	e7ba      	b.n	801752e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 80175b8:	2700      	movs	r7, #0
 80175ba:	463d      	mov	r5, r7
 80175bc:	463a      	mov	r2, r7
 80175be:	46bb      	mov	fp, r7
 80175c0:	e7df      	b.n	8017582 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80175c2:	2700      	movs	r7, #0
 80175c4:	463a      	mov	r2, r7
 80175c6:	e7dc      	b.n	8017582 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80175c8:	4607      	mov	r7, r0
 80175ca:	4602      	mov	r2, r0
 80175cc:	f1be 0f0f 	cmp.w	lr, #15
 80175d0:	d8d9      	bhi.n	8017586 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80175d2:	b286      	uxth	r6, r0
 80175d4:	fa1f f98e 	uxth.w	r9, lr
 80175d8:	fb06 f809 	mul.w	r8, r6, r9
 80175dc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80175e0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80175e4:	0136      	lsls	r6, r6, #4
 80175e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80175ea:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80175ee:	9601      	str	r6, [sp, #4]
 80175f0:	ea4a 0101 	orr.w	r1, sl, r1
 80175f4:	fa1f f689 	uxth.w	r6, r9
 80175f8:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80175fc:	fb10 f90e 	smulbb	r9, r0, lr
 8017600:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8017604:	9602      	str	r6, [sp, #8]
 8017606:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801760a:	460e      	mov	r6, r1
 801760c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017610:	f1ce 0110 	rsb	r1, lr, #16
 8017614:	1a09      	subs	r1, r1, r0
 8017616:	ea4a 0303 	orr.w	r3, sl, r3
 801761a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801761e:	4343      	muls	r3, r0
 8017620:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8017624:	9801      	ldr	r0, [sp, #4]
 8017626:	fb01 3106 	mla	r1, r1, r6, r3
 801762a:	9e02      	ldr	r6, [sp, #8]
 801762c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8017630:	1b80      	subs	r0, r0, r6
 8017632:	9e01      	ldr	r6, [sp, #4]
 8017634:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017638:	eba6 0608 	sub.w	r6, r6, r8
 801763c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017640:	b2b6      	uxth	r6, r6
 8017642:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017646:	ea4a 0202 	orr.w	r2, sl, r2
 801764a:	b280      	uxth	r0, r0
 801764c:	4374      	muls	r4, r6
 801764e:	fb09 1302 	mla	r3, r9, r2, r1
 8017652:	fb0c 4400 	mla	r4, ip, r0, r4
 8017656:	9a03      	ldr	r2, [sp, #12]
 8017658:	9802      	ldr	r0, [sp, #8]
 801765a:	8811      	ldrh	r1, [r2, #0]
 801765c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8017660:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8017664:	fb00 4505 	mla	r5, r0, r5, r4
 8017668:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801766c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017670:	fb08 5707 	mla	r7, r8, r7, r5
 8017674:	ea4a 0b0b 	orr.w	fp, sl, fp
 8017678:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801767c:	b292      	uxth	r2, r2
 801767e:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8017682:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8017686:	4357      	muls	r7, r2
 8017688:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801768c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017690:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017694:	f107 0801 	add.w	r8, r7, #1
 8017698:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801769c:	ea43 0e0e 	orr.w	lr, r3, lr
 80176a0:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80176a4:	fa1f f38e 	uxth.w	r3, lr
 80176a8:	1208      	asrs	r0, r1, #8
 80176aa:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80176ae:	b2ff      	uxtb	r7, r7
 80176b0:	121c      	asrs	r4, r3, #8
 80176b2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80176b6:	fb10 f007 	smulbb	r0, r0, r7
 80176ba:	10cd      	asrs	r5, r1, #3
 80176bc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80176c0:	fb04 0402 	mla	r4, r4, r2, r0
 80176c4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80176c8:	10d8      	asrs	r0, r3, #3
 80176ca:	fb15 f507 	smulbb	r5, r5, r7
 80176ce:	00db      	lsls	r3, r3, #3
 80176d0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80176d4:	fb00 5002 	mla	r0, r0, r2, r5
 80176d8:	b2dd      	uxtb	r5, r3
 80176da:	00cb      	lsls	r3, r1, #3
 80176dc:	b2db      	uxtb	r3, r3
 80176de:	fb13 f307 	smulbb	r3, r3, r7
 80176e2:	fb05 3202 	mla	r2, r5, r2, r3
 80176e6:	b2a4      	uxth	r4, r4
 80176e8:	b292      	uxth	r2, r2
 80176ea:	1c63      	adds	r3, r4, #1
 80176ec:	b280      	uxth	r0, r0
 80176ee:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80176f2:	1c53      	adds	r3, r2, #1
 80176f4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80176f8:	1c42      	adds	r2, r0, #1
 80176fa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80176fe:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017702:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017706:	0940      	lsrs	r0, r0, #5
 8017708:	4323      	orrs	r3, r4
 801770a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801770e:	9a03      	ldr	r2, [sp, #12]
 8017710:	4303      	orrs	r3, r0
 8017712:	8013      	strh	r3, [r2, #0]
 8017714:	b005      	add	sp, #20
 8017716:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801771a:	280f      	cmp	r0, #15
 801771c:	f63f af33 	bhi.w	8017586 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8017720:	4677      	mov	r7, lr
 8017722:	4675      	mov	r5, lr
 8017724:	4672      	mov	r2, lr
 8017726:	46f3      	mov	fp, lr
 8017728:	e753      	b.n	80175d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 801772a:	bf00      	nop
 801772c:	0802050e 	.word	0x0802050e
 8017730:	08020ade 	.word	0x08020ade
 8017734:	08020592 	.word	0x08020592

08017738 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801773c:	ed2d 8b08 	vpush	{d8-d11}
 8017740:	b097      	sub	sp, #92	; 0x5c
 8017742:	eeb0 aa40 	vmov.f32	s20, s0
 8017746:	9214      	str	r2, [sp, #80]	; 0x50
 8017748:	9308      	str	r3, [sp, #32]
 801774a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801774c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017750:	9312      	str	r3, [sp, #72]	; 0x48
 8017752:	9111      	str	r1, [sp, #68]	; 0x44
 8017754:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8017758:	9015      	str	r0, [sp, #84]	; 0x54
 801775a:	6850      	ldr	r0, [r2, #4]
 801775c:	6812      	ldr	r2, [r2, #0]
 801775e:	fb00 1303 	mla	r3, r0, r3, r1
 8017762:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017766:	9309      	str	r3, [sp, #36]	; 0x24
 8017768:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801776a:	681b      	ldr	r3, [r3, #0]
 801776c:	930b      	str	r3, [sp, #44]	; 0x2c
 801776e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017770:	685b      	ldr	r3, [r3, #4]
 8017772:	930c      	str	r3, [sp, #48]	; 0x30
 8017774:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8017778:	930a      	str	r3, [sp, #40]	; 0x28
 801777a:	eef0 9a60 	vmov.f32	s19, s1
 801777e:	eeb0 9a41 	vmov.f32	s18, s2
 8017782:	eeb0 8a62 	vmov.f32	s16, s5
 8017786:	eef0 8a43 	vmov.f32	s17, s6
 801778a:	eef0 ba44 	vmov.f32	s23, s8
 801778e:	eeb0 ba64 	vmov.f32	s22, s9
 8017792:	eef0 aa45 	vmov.f32	s21, s10
 8017796:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017798:	2b00      	cmp	r3, #0
 801779a:	dc03      	bgt.n	80177a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801779c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801779e:	2b00      	cmp	r3, #0
 80177a0:	f340 83cb 	ble.w	8017f3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 80177a4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80177a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80177aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80177ae:	1e48      	subs	r0, r1, #1
 80177b0:	1e55      	subs	r5, r2, #1
 80177b2:	9b08      	ldr	r3, [sp, #32]
 80177b4:	2b00      	cmp	r3, #0
 80177b6:	f340 81a3 	ble.w	8017b00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80177ba:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80177bc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80177be:	1436      	asrs	r6, r6, #16
 80177c0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80177c4:	d406      	bmi.n	80177d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80177c6:	4286      	cmp	r6, r0
 80177c8:	da04      	bge.n	80177d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80177ca:	2b00      	cmp	r3, #0
 80177cc:	db02      	blt.n	80177d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80177ce:	42ab      	cmp	r3, r5
 80177d0:	f2c0 8197 	blt.w	8017b02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80177d4:	3601      	adds	r6, #1
 80177d6:	f100 8184 	bmi.w	8017ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80177da:	42b1      	cmp	r1, r6
 80177dc:	f2c0 8181 	blt.w	8017ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80177e0:	3301      	adds	r3, #1
 80177e2:	f100 817e 	bmi.w	8017ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80177e6:	429a      	cmp	r2, r3
 80177e8:	f2c0 817b 	blt.w	8017ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80177ec:	9b08      	ldr	r3, [sp, #32]
 80177ee:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80177f0:	9313      	str	r3, [sp, #76]	; 0x4c
 80177f2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80177f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80177f8:	2b00      	cmp	r3, #0
 80177fa:	f340 81a4 	ble.w	8017b46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80177fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017800:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8017802:	1418      	asrs	r0, r3, #16
 8017804:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017806:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801780a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801780c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017810:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017812:	142d      	asrs	r5, r5, #16
 8017814:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8017818:	f100 81f8 	bmi.w	8017c0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801781c:	f102 3eff 	add.w	lr, r2, #4294967295
 8017820:	4575      	cmp	r5, lr
 8017822:	f280 81f3 	bge.w	8017c0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017826:	2800      	cmp	r0, #0
 8017828:	f2c0 81f0 	blt.w	8017c0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801782c:	f103 3eff 	add.w	lr, r3, #4294967295
 8017830:	4570      	cmp	r0, lr
 8017832:	f280 81eb 	bge.w	8017c0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017836:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017838:	b212      	sxth	r2, r2
 801783a:	fb00 5002 	mla	r0, r0, r2, r5
 801783e:	fa1f fe81 	uxth.w	lr, r1
 8017842:	eb03 0a00 	add.w	sl, r3, r0
 8017846:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801784a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801784e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017852:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8017856:	b29b      	uxth	r3, r3
 8017858:	f1bc 0f00 	cmp.w	ip, #0
 801785c:	f000 81b9 	beq.w	8017bd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8017860:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017864:	940d      	str	r4, [sp, #52]	; 0x34
 8017866:	eb0a 0b02 	add.w	fp, sl, r2
 801786a:	fa1f fa8c 	uxth.w	sl, ip
 801786e:	fb0a fe0e 	mul.w	lr, sl, lr
 8017872:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017876:	fa1f fa8a 	uxth.w	sl, sl
 801787a:	eba5 050e 	sub.w	r5, r5, lr
 801787e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017882:	940e      	str	r4, [sp, #56]	; 0x38
 8017884:	eba3 030a 	sub.w	r3, r3, sl
 8017888:	b2ad      	uxth	r5, r5
 801788a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801788c:	b29b      	uxth	r3, r3
 801788e:	fb08 f505 	mul.w	r5, r8, r5
 8017892:	fb09 5303 	mla	r3, r9, r3, r5
 8017896:	fb0a 3304 	mla	r3, sl, r4, r3
 801789a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801789c:	fb0e 3304 	mla	r3, lr, r4, r3
 80178a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80178a4:	2b00      	cmp	r3, #0
 80178a6:	f000 810f 	beq.w	8017ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80178aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80178ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80178b0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80178b4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80178b8:	f000 8190 	beq.w	8017bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 80178bc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80178c0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80178c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80178c8:	fb09 f000 	mul.w	r0, r9, r0
 80178cc:	fb0a fe0e 	mul.w	lr, sl, lr
 80178d0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80178d4:	f100 0b20 	add.w	fp, r0, #32
 80178d8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80178dc:	44ce      	add	lr, r9
 80178de:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80178e2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80178e6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80178ea:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80178ee:	ea4e 0909 	orr.w	r9, lr, r9
 80178f2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80178f6:	8868      	ldrh	r0, [r5, #2]
 80178f8:	d019      	beq.n	801792e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80178fa:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80178fe:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017902:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017906:	fb08 f800 	mul.w	r8, r8, r0
 801790a:	fb0a fe0e 	mul.w	lr, sl, lr
 801790e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8017912:	f108 0b20 	add.w	fp, r8, #32
 8017916:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801791a:	4486      	add	lr, r0
 801791c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8017920:	0a00      	lsrs	r0, r0, #8
 8017922:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017926:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801792a:	ea4e 0000 	orr.w	r0, lr, r0
 801792e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017932:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8017936:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801793a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801793e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017942:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017946:	ea4e 0909 	orr.w	r9, lr, r9
 801794a:	ea4a 0000 	orr.w	r0, sl, r0
 801794e:	f1bc 0f00 	cmp.w	ip, #0
 8017952:	f000 8145 	beq.w	8017be0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8017956:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801795a:	3a01      	subs	r2, #1
 801795c:	0052      	lsls	r2, r2, #1
 801795e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017960:	3202      	adds	r2, #2
 8017962:	2cff      	cmp	r4, #255	; 0xff
 8017964:	eb05 0e02 	add.w	lr, r5, r2
 8017968:	5aaa      	ldrh	r2, [r5, r2]
 801796a:	d018      	beq.n	801799e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801796c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8017970:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017974:	fb04 fa02 	mul.w	sl, r4, r2
 8017978:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801797c:	fb08 f805 	mul.w	r8, r8, r5
 8017980:	f10a 0520 	add.w	r5, sl, #32
 8017984:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8017988:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801798c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017990:	4442      	add	r2, r8
 8017992:	0a2d      	lsrs	r5, r5, #8
 8017994:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8017998:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801799c:	432a      	orrs	r2, r5
 801799e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80179a0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80179a4:	2cff      	cmp	r4, #255	; 0xff
 80179a6:	d01a      	beq.n	80179de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80179a8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80179ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80179b0:	fb04 fa05 	mul.w	sl, r4, r5
 80179b4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80179b8:	fb08 f80e 	mul.w	r8, r8, lr
 80179bc:	f10a 0e20 	add.w	lr, sl, #32
 80179c0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80179c4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80179c8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80179cc:	4445      	add	r5, r8
 80179ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80179d2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80179d6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80179da:	ea45 050e 	orr.w	r5, r5, lr
 80179de:	fb1c fe01 	smulbb	lr, ip, r1
 80179e2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80179e6:	f1cc 0810 	rsb	r8, ip, #16
 80179ea:	eba8 0801 	sub.w	r8, r8, r1
 80179ee:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80179f2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80179f6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80179fa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80179fe:	4341      	muls	r1, r0
 8017a00:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017a04:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017a08:	ea4a 0202 	orr.w	r2, sl, r2
 8017a0c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8017a10:	fb09 1108 	mla	r1, r9, r8, r1
 8017a14:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017a18:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8017a1c:	fb0c 1102 	mla	r1, ip, r2, r1
 8017a20:	ea4b 0505 	orr.w	r5, fp, r5
 8017a24:	fb0e 1e05 	mla	lr, lr, r5, r1
 8017a28:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8017a2c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017a30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017a34:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017a38:	ea42 0e0e 	orr.w	lr, r2, lr
 8017a3c:	fa1f f28e 	uxth.w	r2, lr
 8017a40:	2bff      	cmp	r3, #255	; 0xff
 8017a42:	d103      	bne.n	8017a4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8017a44:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017a46:	29ff      	cmp	r1, #255	; 0xff
 8017a48:	f000 80de 	beq.w	8017c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8017a4c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017a4e:	8838      	ldrh	r0, [r7, #0]
 8017a50:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017a52:	434b      	muls	r3, r1
 8017a54:	f103 0c01 	add.w	ip, r3, #1
 8017a58:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8017a5c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017a60:	fa5f fc83 	uxtb.w	ip, r3
 8017a64:	1203      	asrs	r3, r0, #8
 8017a66:	1215      	asrs	r5, r2, #8
 8017a68:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017a6c:	fb13 f30c 	smulbb	r3, r3, ip
 8017a70:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017a74:	fb05 3501 	mla	r5, r5, r1, r3
 8017a78:	10c3      	asrs	r3, r0, #3
 8017a7a:	10d1      	asrs	r1, r2, #3
 8017a7c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017a80:	fb13 f30c 	smulbb	r3, r3, ip
 8017a84:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017a88:	fb01 3104 	mla	r1, r1, r4, r3
 8017a8c:	00c3      	lsls	r3, r0, #3
 8017a8e:	00d2      	lsls	r2, r2, #3
 8017a90:	b2db      	uxtb	r3, r3
 8017a92:	b2d2      	uxtb	r2, r2
 8017a94:	fb13 f30c 	smulbb	r3, r3, ip
 8017a98:	b2ad      	uxth	r5, r5
 8017a9a:	fb02 3304 	mla	r3, r2, r4, r3
 8017a9e:	b29a      	uxth	r2, r3
 8017aa0:	1c6b      	adds	r3, r5, #1
 8017aa2:	b289      	uxth	r1, r1
 8017aa4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017aa8:	1c53      	adds	r3, r2, #1
 8017aaa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017aae:	1c4a      	adds	r2, r1, #1
 8017ab0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017ab4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017ab8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017abc:	0949      	lsrs	r1, r1, #5
 8017abe:	432b      	orrs	r3, r5
 8017ac0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017ac4:	430b      	orrs	r3, r1
 8017ac6:	803b      	strh	r3, [r7, #0]
 8017ac8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017aca:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017acc:	4413      	add	r3, r2
 8017ace:	9329      	str	r3, [sp, #164]	; 0xa4
 8017ad0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017ad2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017ad4:	441a      	add	r2, r3
 8017ad6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017ad8:	922a      	str	r2, [sp, #168]	; 0xa8
 8017ada:	3b01      	subs	r3, #1
 8017adc:	3702      	adds	r7, #2
 8017ade:	9313      	str	r3, [sp, #76]	; 0x4c
 8017ae0:	e689      	b.n	80177f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8017ae2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017ae4:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8017ae6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8017ae8:	4433      	add	r3, r6
 8017aea:	9329      	str	r3, [sp, #164]	; 0xa4
 8017aec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017aee:	441c      	add	r4, r3
 8017af0:	9b08      	ldr	r3, [sp, #32]
 8017af2:	942a      	str	r4, [sp, #168]	; 0xa8
 8017af4:	3b01      	subs	r3, #1
 8017af6:	9308      	str	r3, [sp, #32]
 8017af8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017afa:	3302      	adds	r3, #2
 8017afc:	9309      	str	r3, [sp, #36]	; 0x24
 8017afe:	e658      	b.n	80177b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017b00:	d028      	beq.n	8017b54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8017b02:	9b08      	ldr	r3, [sp, #32]
 8017b04:	982b      	ldr	r0, [sp, #172]	; 0xac
 8017b06:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8017b08:	3b01      	subs	r3, #1
 8017b0a:	fb00 5003 	mla	r0, r0, r3, r5
 8017b0e:	1400      	asrs	r0, r0, #16
 8017b10:	f53f ae6c 	bmi.w	80177ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017b14:	3901      	subs	r1, #1
 8017b16:	4288      	cmp	r0, r1
 8017b18:	f6bf ae68 	bge.w	80177ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017b1c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8017b1e:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8017b20:	fb01 0303 	mla	r3, r1, r3, r0
 8017b24:	141b      	asrs	r3, r3, #16
 8017b26:	f53f ae61 	bmi.w	80177ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017b2a:	3a01      	subs	r2, #1
 8017b2c:	4293      	cmp	r3, r2
 8017b2e:	f6bf ae5d 	bge.w	80177ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017b32:	9b08      	ldr	r3, [sp, #32]
 8017b34:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8017b38:	9313      	str	r3, [sp, #76]	; 0x4c
 8017b3a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017b3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017b40:	2b00      	cmp	r3, #0
 8017b42:	f300 8082 	bgt.w	8017c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8017b46:	9b08      	ldr	r3, [sp, #32]
 8017b48:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017b4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017b4e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017b52:	9309      	str	r3, [sp, #36]	; 0x24
 8017b54:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017b56:	2b00      	cmp	r3, #0
 8017b58:	f340 81ef 	ble.w	8017f3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8017b5c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017b60:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017b64:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017b68:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017b6a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017b6e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017b72:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017b76:	eef0 6a48 	vmov.f32	s13, s16
 8017b7a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017b7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017b82:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017b86:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8017b8a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017b8e:	eef0 6a68 	vmov.f32	s13, s17
 8017b92:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017b96:	ee18 2a10 	vmov	r2, s16
 8017b9a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017b9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017ba2:	ee18 2a90 	vmov	r2, s17
 8017ba6:	932b      	str	r3, [sp, #172]	; 0xac
 8017ba8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017baa:	fb92 f3f3 	sdiv	r3, r2, r3
 8017bae:	932c      	str	r3, [sp, #176]	; 0xb0
 8017bb0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017bb2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017bb4:	3b01      	subs	r3, #1
 8017bb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017bba:	9311      	str	r3, [sp, #68]	; 0x44
 8017bbc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017bbe:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8017bc2:	bf08      	it	eq
 8017bc4:	4613      	moveq	r3, r2
 8017bc6:	9308      	str	r3, [sp, #32]
 8017bc8:	eef0 8a67 	vmov.f32	s17, s15
 8017bcc:	eeb0 8a47 	vmov.f32	s16, s14
 8017bd0:	e5e1      	b.n	8017796 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017bd2:	fb08 f505 	mul.w	r5, r8, r5
 8017bd6:	fb09 5303 	mla	r3, r9, r3, r5
 8017bda:	e661      	b.n	80178a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8017bdc:	4681      	mov	r9, r0
 8017bde:	e688      	b.n	80178f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8017be0:	f1c1 0210 	rsb	r2, r1, #16
 8017be4:	4341      	muls	r1, r0
 8017be6:	fb09 1902 	mla	r9, r9, r2, r1
 8017bea:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017bee:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017bf2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017bf6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017bfa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017bfe:	ea42 0909 	orr.w	r9, r2, r9
 8017c02:	fa1f f289 	uxth.w	r2, r9
 8017c06:	e71b      	b.n	8017a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8017c08:	803a      	strh	r2, [r7, #0]
 8017c0a:	e75d      	b.n	8017ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017c0c:	f115 0e01 	adds.w	lr, r5, #1
 8017c10:	f53f af5a 	bmi.w	8017ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017c14:	4572      	cmp	r2, lr
 8017c16:	f6ff af57 	blt.w	8017ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017c1a:	f110 0e01 	adds.w	lr, r0, #1
 8017c1e:	f53f af53 	bmi.w	8017ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017c22:	4573      	cmp	r3, lr
 8017c24:	f6ff af50 	blt.w	8017ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017c28:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017c2a:	9502      	str	r5, [sp, #8]
 8017c2c:	b21b      	sxth	r3, r3
 8017c2e:	b212      	sxth	r2, r2
 8017c30:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8017c34:	9301      	str	r3, [sp, #4]
 8017c36:	9200      	str	r2, [sp, #0]
 8017c38:	e9cd c405 	strd	ip, r4, [sp, #20]
 8017c3c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8017c40:	4639      	mov	r1, r7
 8017c42:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017c44:	f7ff fbd2 	bl	80173ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8017c48:	e73e      	b.n	8017ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017c4a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017c4c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017c50:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017c52:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8017c56:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017c58:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017c5c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017c5e:	141f      	asrs	r7, r3, #16
 8017c60:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017c62:	141b      	asrs	r3, r3, #16
 8017c64:	fb01 3707 	mla	r7, r1, r7, r3
 8017c68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017c6a:	fa1f fc82 	uxth.w	ip, r2
 8017c6e:	eb03 0a07 	add.w	sl, r3, r7
 8017c72:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8017c76:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017c7a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017c7e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017c82:	b29b      	uxth	r3, r3
 8017c84:	2d00      	cmp	r5, #0
 8017c86:	f000 813d 	beq.w	8017f04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8017c8a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8017c8e:	940f      	str	r4, [sp, #60]	; 0x3c
 8017c90:	eb0a 0b01 	add.w	fp, sl, r1
 8017c94:	fa1f fa85 	uxth.w	sl, r5
 8017c98:	fb0a fc0c 	mul.w	ip, sl, ip
 8017c9c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017ca0:	fa1f fa8a 	uxth.w	sl, sl
 8017ca4:	eba0 000c 	sub.w	r0, r0, ip
 8017ca8:	eba3 030a 	sub.w	r3, r3, sl
 8017cac:	b280      	uxth	r0, r0
 8017cae:	fb08 f000 	mul.w	r0, r8, r0
 8017cb2:	b29b      	uxth	r3, r3
 8017cb4:	fb09 0303 	mla	r3, r9, r3, r0
 8017cb8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017cba:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017cbe:	9410      	str	r4, [sp, #64]	; 0x40
 8017cc0:	fb0a 3300 	mla	r3, sl, r0, r3
 8017cc4:	fb0c 3304 	mla	r3, ip, r4, r3
 8017cc8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017ccc:	2b00      	cmp	r3, #0
 8017cce:	f000 810b 	beq.w	8017ee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8017cd2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017cd4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017cd6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017cda:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8017cde:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017ce2:	f000 8114 	beq.w	8017f0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8017ce6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017cea:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017cee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017cf2:	fb09 f707 	mul.w	r7, r9, r7
 8017cf6:	fb0a fc0c 	mul.w	ip, sl, ip
 8017cfa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017cfe:	f107 0b20 	add.w	fp, r7, #32
 8017d02:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017d06:	44cc      	add	ip, r9
 8017d08:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017d0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017d10:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017d14:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017d18:	ea4c 0909 	orr.w	r9, ip, r9
 8017d1c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017d20:	8847      	ldrh	r7, [r0, #2]
 8017d22:	d019      	beq.n	8017d58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8017d24:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017d28:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017d2c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017d30:	fb08 f807 	mul.w	r8, r8, r7
 8017d34:	fb0a fc0c 	mul.w	ip, sl, ip
 8017d38:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017d3c:	f108 0b20 	add.w	fp, r8, #32
 8017d40:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017d44:	44bc      	add	ip, r7
 8017d46:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8017d4a:	0a3f      	lsrs	r7, r7, #8
 8017d4c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017d50:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017d54:	ea4c 0707 	orr.w	r7, ip, r7
 8017d58:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8017d5c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017d60:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017d64:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017d68:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017d6c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017d70:	ea4c 0909 	orr.w	r9, ip, r9
 8017d74:	ea4a 0707 	orr.w	r7, sl, r7
 8017d78:	2d00      	cmp	r5, #0
 8017d7a:	f000 80ca 	beq.w	8017f12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8017d7e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8017d82:	3901      	subs	r1, #1
 8017d84:	0049      	lsls	r1, r1, #1
 8017d86:	3102      	adds	r1, #2
 8017d88:	eb00 0c01 	add.w	ip, r0, r1
 8017d8c:	5a41      	ldrh	r1, [r0, r1]
 8017d8e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017d90:	28ff      	cmp	r0, #255	; 0xff
 8017d92:	d019      	beq.n	8017dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8017d94:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017d96:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8017d9a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017d9e:	fb04 fa01 	mul.w	sl, r4, r1
 8017da2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017da6:	fb08 f800 	mul.w	r8, r8, r0
 8017daa:	f10a 0020 	add.w	r0, sl, #32
 8017dae:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8017db2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8017db6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017dba:	4441      	add	r1, r8
 8017dbc:	0a00      	lsrs	r0, r0, #8
 8017dbe:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017dc2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017dc6:	4301      	orrs	r1, r0
 8017dc8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017dca:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8017dce:	2cff      	cmp	r4, #255	; 0xff
 8017dd0:	d01a      	beq.n	8017e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8017dd2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8017dd6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017dda:	fb04 fa00 	mul.w	sl, r4, r0
 8017dde:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017de2:	fb08 f80c 	mul.w	r8, r8, ip
 8017de6:	f10a 0c20 	add.w	ip, sl, #32
 8017dea:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8017dee:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8017df2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017df6:	4440      	add	r0, r8
 8017df8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017dfc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017e00:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017e04:	ea40 000c 	orr.w	r0, r0, ip
 8017e08:	fb15 fc02 	smulbb	ip, r5, r2
 8017e0c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017e10:	f1c5 0810 	rsb	r8, r5, #16
 8017e14:	eba8 0802 	sub.w	r8, r8, r2
 8017e18:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017e1c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8017e20:	437a      	muls	r2, r7
 8017e22:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8017e26:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8017e2a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017e2e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017e32:	fb09 2208 	mla	r2, r9, r8, r2
 8017e36:	ea4a 0101 	orr.w	r1, sl, r1
 8017e3a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8017e3e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017e42:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017e46:	fb05 2201 	mla	r2, r5, r1, r2
 8017e4a:	ea4b 0000 	orr.w	r0, fp, r0
 8017e4e:	fb0c 2200 	mla	r2, ip, r0, r2
 8017e52:	0d57      	lsrs	r7, r2, #21
 8017e54:	0952      	lsrs	r2, r2, #5
 8017e56:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017e5a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017e5e:	433a      	orrs	r2, r7
 8017e60:	2bff      	cmp	r3, #255	; 0xff
 8017e62:	b292      	uxth	r2, r2
 8017e64:	d102      	bne.n	8017e6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8017e66:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017e68:	29ff      	cmp	r1, #255	; 0xff
 8017e6a:	d063      	beq.n	8017f34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8017e6c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017e6e:	f8be 1000 	ldrh.w	r1, [lr]
 8017e72:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017e74:	4343      	muls	r3, r0
 8017e76:	1c58      	adds	r0, r3, #1
 8017e78:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8017e7c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017e80:	1208      	asrs	r0, r1, #8
 8017e82:	b2db      	uxtb	r3, r3
 8017e84:	1215      	asrs	r5, r2, #8
 8017e86:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017e8a:	fb10 f003 	smulbb	r0, r0, r3
 8017e8e:	10cf      	asrs	r7, r1, #3
 8017e90:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017e94:	00c9      	lsls	r1, r1, #3
 8017e96:	fb05 0504 	mla	r5, r5, r4, r0
 8017e9a:	b2c9      	uxtb	r1, r1
 8017e9c:	10d0      	asrs	r0, r2, #3
 8017e9e:	00d2      	lsls	r2, r2, #3
 8017ea0:	fb11 f103 	smulbb	r1, r1, r3
 8017ea4:	b2d2      	uxtb	r2, r2
 8017ea6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017eaa:	fb02 1204 	mla	r2, r2, r4, r1
 8017eae:	fb17 f703 	smulbb	r7, r7, r3
 8017eb2:	b2ad      	uxth	r5, r5
 8017eb4:	b292      	uxth	r2, r2
 8017eb6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017eba:	fb00 7004 	mla	r0, r0, r4, r7
 8017ebe:	1c6b      	adds	r3, r5, #1
 8017ec0:	1c57      	adds	r7, r2, #1
 8017ec2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017ec6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017eca:	b280      	uxth	r0, r0
 8017ecc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017ed0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017ed4:	433d      	orrs	r5, r7
 8017ed6:	1c47      	adds	r7, r0, #1
 8017ed8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8017edc:	097f      	lsrs	r7, r7, #5
 8017ede:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017ee2:	433d      	orrs	r5, r7
 8017ee4:	f8ae 5000 	strh.w	r5, [lr]
 8017ee8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017eea:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017eec:	4413      	add	r3, r2
 8017eee:	9329      	str	r3, [sp, #164]	; 0xa4
 8017ef0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017ef2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017ef4:	441a      	add	r2, r3
 8017ef6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017ef8:	922a      	str	r2, [sp, #168]	; 0xa8
 8017efa:	3b01      	subs	r3, #1
 8017efc:	f10e 0e02 	add.w	lr, lr, #2
 8017f00:	9313      	str	r3, [sp, #76]	; 0x4c
 8017f02:	e61c      	b.n	8017b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8017f04:	fb08 f000 	mul.w	r0, r8, r0
 8017f08:	fb09 0303 	mla	r3, r9, r3, r0
 8017f0c:	e6dc      	b.n	8017cc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8017f0e:	46b9      	mov	r9, r7
 8017f10:	e704      	b.n	8017d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8017f12:	f1c2 0110 	rsb	r1, r2, #16
 8017f16:	437a      	muls	r2, r7
 8017f18:	fb09 2901 	mla	r9, r9, r1, r2
 8017f1c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017f20:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017f24:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017f28:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017f2c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017f30:	4302      	orrs	r2, r0
 8017f32:	e795      	b.n	8017e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8017f34:	f8ae 2000 	strh.w	r2, [lr]
 8017f38:	e7d6      	b.n	8017ee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8017f3a:	b017      	add	sp, #92	; 0x5c
 8017f3c:	ecbd 8b08 	vpop	{d8-d11}
 8017f40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8017f44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f48:	b085      	sub	sp, #20
 8017f4a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8017f4e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8017f52:	9103      	str	r1, [sp, #12]
 8017f54:	fb05 7106 	mla	r1, r5, r6, r7
 8017f58:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8017f5c:	2d00      	cmp	r5, #0
 8017f5e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8017f62:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8017f66:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8017f6a:	9401      	str	r4, [sp, #4]
 8017f6c:	eb02 0901 	add.w	r9, r2, r1
 8017f70:	f2c0 80c0 	blt.w	80180f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017f74:	45a8      	cmp	r8, r5
 8017f76:	f340 80bd 	ble.w	80180f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017f7a:	2f00      	cmp	r7, #0
 8017f7c:	f2c0 80b6 	blt.w	80180ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8017f80:	42be      	cmp	r6, r7
 8017f82:	f340 80b3 	ble.w	80180ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8017f86:	f812 c001 	ldrb.w	ip, [r2, r1]
 8017f8a:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8017f8e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017f92:	d019      	beq.n	8017fc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8017f94:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8017f98:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017f9c:	435a      	muls	r2, r3
 8017f9e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8017fa2:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8017fa6:	fb0c f403 	mul.w	r4, ip, r3
 8017faa:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8017fae:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017fb2:	441a      	add	r2, r3
 8017fb4:	f104 0320 	add.w	r3, r4, #32
 8017fb8:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8017fbc:	0a1b      	lsrs	r3, r3, #8
 8017fbe:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8017fc2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017fc6:	4319      	orrs	r1, r3
 8017fc8:	b289      	uxth	r1, r1
 8017fca:	1c7b      	adds	r3, r7, #1
 8017fcc:	f100 8097 	bmi.w	80180fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8017fd0:	429e      	cmp	r6, r3
 8017fd2:	f340 8094 	ble.w	80180fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8017fd6:	2800      	cmp	r0, #0
 8017fd8:	f000 8094 	beq.w	8018104 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8017fdc:	f899 4001 	ldrb.w	r4, [r9, #1]
 8017fe0:	9b01      	ldr	r3, [sp, #4]
 8017fe2:	2cff      	cmp	r4, #255	; 0xff
 8017fe4:	885b      	ldrh	r3, [r3, #2]
 8017fe6:	d01b      	beq.n	8018020 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8017fe8:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8017fec:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017ff0:	fb0a f202 	mul.w	r2, sl, r2
 8017ff4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017ff8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017ffc:	fb04 fa03 	mul.w	sl, r4, r3
 8018000:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8018004:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8018008:	441a      	add	r2, r3
 801800a:	f10a 0320 	add.w	r3, sl, #32
 801800e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018012:	0a1b      	lsrs	r3, r3, #8
 8018014:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8018018:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801801c:	ea4b 0303 	orr.w	r3, fp, r3
 8018020:	b29b      	uxth	r3, r3
 8018022:	3501      	adds	r5, #1
 8018024:	d474      	bmi.n	8018110 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8018026:	45a8      	cmp	r8, r5
 8018028:	dd72      	ble.n	8018110 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801802a:	f1be 0f00 	cmp.w	lr, #0
 801802e:	f000 8110 	beq.w	8018252 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 8018032:	2f00      	cmp	r7, #0
 8018034:	db69      	blt.n	801810a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8018036:	42be      	cmp	r6, r7
 8018038:	dd67      	ble.n	801810a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801803a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801803e:	9a01      	ldr	r2, [sp, #4]
 8018040:	2dff      	cmp	r5, #255	; 0xff
 8018042:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8018046:	d01c      	beq.n	8018082 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8018048:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801804c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018050:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018054:	fb05 fa0b 	mul.w	sl, r5, fp
 8018058:	fb08 f802 	mul.w	r8, r8, r2
 801805c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018060:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8018064:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018068:	4490      	add	r8, r2
 801806a:	f10a 0220 	add.w	r2, sl, #32
 801806e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8018072:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018076:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801807a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801807e:	ea4b 0b0a 	orr.w	fp, fp, sl
 8018082:	fa1f fb8b 	uxth.w	fp, fp
 8018086:	3701      	adds	r7, #1
 8018088:	d447      	bmi.n	801811a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801808a:	42be      	cmp	r6, r7
 801808c:	dd45      	ble.n	801811a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801808e:	2800      	cmp	r0, #0
 8018090:	d046      	beq.n	8018120 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8018092:	3601      	adds	r6, #1
 8018094:	9a01      	ldr	r2, [sp, #4]
 8018096:	f819 7006 	ldrb.w	r7, [r9, r6]
 801809a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801809e:	2fff      	cmp	r7, #255	; 0xff
 80180a0:	d01a      	beq.n	80180d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 80180a2:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 80180a6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80180aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80180ae:	fb07 f902 	mul.w	r9, r7, r2
 80180b2:	fb08 f806 	mul.w	r8, r8, r6
 80180b6:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80180ba:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 80180be:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80180c2:	44b0      	add	r8, r6
 80180c4:	f109 0620 	add.w	r6, r9, #32
 80180c8:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80180cc:	0a36      	lsrs	r6, r6, #8
 80180ce:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80180d2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80180d6:	4332      	orrs	r2, r6
 80180d8:	b292      	uxth	r2, r2
 80180da:	280f      	cmp	r0, #15
 80180dc:	d922      	bls.n	8018124 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 80180de:	4b61      	ldr	r3, [pc, #388]	; (8018264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 80180e0:	4a61      	ldr	r2, [pc, #388]	; (8018268 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 80180e2:	4862      	ldr	r0, [pc, #392]	; (801826c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 80180e4:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 80180e8:	f003 fc98 	bl	801ba1c <__assert_func>
 80180ec:	f04f 0c00 	mov.w	ip, #0
 80180f0:	4661      	mov	r1, ip
 80180f2:	e76a      	b.n	8017fca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80180f4:	2400      	movs	r4, #0
 80180f6:	46a4      	mov	ip, r4
 80180f8:	4623      	mov	r3, r4
 80180fa:	4621      	mov	r1, r4
 80180fc:	e791      	b.n	8018022 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 80180fe:	2400      	movs	r4, #0
 8018100:	4623      	mov	r3, r4
 8018102:	e78e      	b.n	8018022 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8018104:	4604      	mov	r4, r0
 8018106:	4603      	mov	r3, r0
 8018108:	e78b      	b.n	8018022 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801810a:	2500      	movs	r5, #0
 801810c:	46ab      	mov	fp, r5
 801810e:	e7ba      	b.n	8018086 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8018110:	2700      	movs	r7, #0
 8018112:	463d      	mov	r5, r7
 8018114:	463a      	mov	r2, r7
 8018116:	46bb      	mov	fp, r7
 8018118:	e7df      	b.n	80180da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801811a:	2700      	movs	r7, #0
 801811c:	463a      	mov	r2, r7
 801811e:	e7dc      	b.n	80180da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8018120:	4607      	mov	r7, r0
 8018122:	4602      	mov	r2, r0
 8018124:	f1be 0f0f 	cmp.w	lr, #15
 8018128:	d8d9      	bhi.n	80180de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801812a:	b286      	uxth	r6, r0
 801812c:	fa1f f98e 	uxth.w	r9, lr
 8018130:	fb06 f809 	mul.w	r8, r6, r9
 8018134:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018138:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801813c:	0136      	lsls	r6, r6, #4
 801813e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018142:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018146:	9601      	str	r6, [sp, #4]
 8018148:	ea4a 0101 	orr.w	r1, sl, r1
 801814c:	fa1f f689 	uxth.w	r6, r9
 8018150:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8018154:	fb10 f90e 	smulbb	r9, r0, lr
 8018158:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801815c:	9602      	str	r6, [sp, #8]
 801815e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018162:	460e      	mov	r6, r1
 8018164:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018168:	f1ce 0110 	rsb	r1, lr, #16
 801816c:	1a09      	subs	r1, r1, r0
 801816e:	ea4a 0303 	orr.w	r3, sl, r3
 8018172:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8018176:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801817a:	4343      	muls	r3, r0
 801817c:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8018180:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018184:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018188:	fb01 3106 	mla	r1, r1, r6, r3
 801818c:	ea4a 0202 	orr.w	r2, sl, r2
 8018190:	fb09 1302 	mla	r3, r9, r2, r1
 8018194:	9a03      	ldr	r2, [sp, #12]
 8018196:	9802      	ldr	r0, [sp, #8]
 8018198:	8811      	ldrh	r1, [r2, #0]
 801819a:	9a01      	ldr	r2, [sp, #4]
 801819c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80181a0:	1a12      	subs	r2, r2, r0
 80181a2:	9801      	ldr	r0, [sp, #4]
 80181a4:	eba0 0608 	sub.w	r6, r0, r8
 80181a8:	b2b6      	uxth	r6, r6
 80181aa:	b292      	uxth	r2, r2
 80181ac:	4374      	muls	r4, r6
 80181ae:	fb0c 4402 	mla	r4, ip, r2, r4
 80181b2:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80181b6:	9a02      	ldr	r2, [sp, #8]
 80181b8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80181bc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80181c0:	fb02 4505 	mla	r5, r2, r5, r4
 80181c4:	ea4a 0b0b 	orr.w	fp, sl, fp
 80181c8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80181cc:	fb0e 3e0b 	mla	lr, lr, fp, r3
 80181d0:	fb08 5707 	mla	r7, r8, r7, r5
 80181d4:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80181d8:	120a      	asrs	r2, r1, #8
 80181da:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80181de:	ea6f 2727 	mvn.w	r7, r7, asr #8
 80181e2:	b2ff      	uxtb	r7, r7
 80181e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80181e8:	10c8      	asrs	r0, r1, #3
 80181ea:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80181ee:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80181f2:	00c9      	lsls	r1, r1, #3
 80181f4:	437a      	muls	r2, r7
 80181f6:	ea43 0e0e 	orr.w	lr, r3, lr
 80181fa:	b2c9      	uxtb	r1, r1
 80181fc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018200:	fa1f f38e 	uxth.w	r3, lr
 8018204:	4378      	muls	r0, r7
 8018206:	434f      	muls	r7, r1
 8018208:	1c51      	adds	r1, r2, #1
 801820a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801820e:	121a      	asrs	r2, r3, #8
 8018210:	f022 0207 	bic.w	r2, r2, #7
 8018214:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8018218:	1c41      	adds	r1, r0, #1
 801821a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801821e:	10d9      	asrs	r1, r3, #3
 8018220:	f021 0103 	bic.w	r1, r1, #3
 8018224:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8018228:	0212      	lsls	r2, r2, #8
 801822a:	00c9      	lsls	r1, r1, #3
 801822c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018230:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8018234:	430a      	orrs	r2, r1
 8018236:	1c79      	adds	r1, r7, #1
 8018238:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801823c:	00db      	lsls	r3, r3, #3
 801823e:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8018242:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8018246:	4313      	orrs	r3, r2
 8018248:	9a03      	ldr	r2, [sp, #12]
 801824a:	8013      	strh	r3, [r2, #0]
 801824c:	b005      	add	sp, #20
 801824e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018252:	280f      	cmp	r0, #15
 8018254:	f63f af43 	bhi.w	80180de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8018258:	4677      	mov	r7, lr
 801825a:	4675      	mov	r5, lr
 801825c:	4672      	mov	r2, lr
 801825e:	46f3      	mov	fp, lr
 8018260:	e763      	b.n	801812a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8018262:	bf00      	nop
 8018264:	0802050e 	.word	0x0802050e
 8018268:	08020ade 	.word	0x08020ade
 801826c:	08020592 	.word	0x08020592

08018270 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018274:	ed2d 8b08 	vpush	{d8-d11}
 8018278:	b093      	sub	sp, #76	; 0x4c
 801827a:	eeb0 aa40 	vmov.f32	s20, s0
 801827e:	9210      	str	r2, [sp, #64]	; 0x40
 8018280:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018282:	910e      	str	r1, [sp, #56]	; 0x38
 8018284:	9306      	str	r3, [sp, #24]
 8018286:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801828a:	9011      	str	r0, [sp, #68]	; 0x44
 801828c:	6850      	ldr	r0, [r2, #4]
 801828e:	6812      	ldr	r2, [r2, #0]
 8018290:	fb00 1303 	mla	r3, r0, r3, r1
 8018294:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018298:	9307      	str	r3, [sp, #28]
 801829a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801829c:	681b      	ldr	r3, [r3, #0]
 801829e:	9308      	str	r3, [sp, #32]
 80182a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80182a2:	685b      	ldr	r3, [r3, #4]
 80182a4:	9309      	str	r3, [sp, #36]	; 0x24
 80182a6:	eef0 9a60 	vmov.f32	s19, s1
 80182aa:	eeb0 9a41 	vmov.f32	s18, s2
 80182ae:	eeb0 8a62 	vmov.f32	s16, s5
 80182b2:	eef0 8a43 	vmov.f32	s17, s6
 80182b6:	eef0 ba44 	vmov.f32	s23, s8
 80182ba:	eeb0 ba64 	vmov.f32	s22, s9
 80182be:	eef0 aa45 	vmov.f32	s21, s10
 80182c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80182c4:	2b00      	cmp	r3, #0
 80182c6:	dc03      	bgt.n	80182d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80182c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80182ca:	2b00      	cmp	r3, #0
 80182cc:	f340 83b4 	ble.w	8018a38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 80182d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80182d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80182d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80182da:	1e48      	subs	r0, r1, #1
 80182dc:	1e55      	subs	r5, r2, #1
 80182de:	9b06      	ldr	r3, [sp, #24]
 80182e0:	2b00      	cmp	r3, #0
 80182e2:	f340 8163 	ble.w	80185ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 80182e6:	9e25      	ldr	r6, [sp, #148]	; 0x94
 80182e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80182ea:	1436      	asrs	r6, r6, #16
 80182ec:	ea4f 4323 	mov.w	r3, r3, asr #16
 80182f0:	d406      	bmi.n	8018300 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80182f2:	4286      	cmp	r6, r0
 80182f4:	da04      	bge.n	8018300 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80182f6:	2b00      	cmp	r3, #0
 80182f8:	db02      	blt.n	8018300 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80182fa:	42ab      	cmp	r3, r5
 80182fc:	f2c0 8157 	blt.w	80185ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018300:	3601      	adds	r6, #1
 8018302:	f100 8144 	bmi.w	801858e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8018306:	42b1      	cmp	r1, r6
 8018308:	f2c0 8141 	blt.w	801858e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801830c:	3301      	adds	r3, #1
 801830e:	f100 813e 	bmi.w	801858e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8018312:	429a      	cmp	r2, r3
 8018314:	f2c0 813b 	blt.w	801858e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8018318:	9b06      	ldr	r3, [sp, #24]
 801831a:	9f07      	ldr	r7, [sp, #28]
 801831c:	930f      	str	r3, [sp, #60]	; 0x3c
 801831e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018322:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018324:	2b00      	cmp	r3, #0
 8018326:	f340 8164 	ble.w	80185f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 801832a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801832c:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801832e:	1418      	asrs	r0, r3, #16
 8018330:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018332:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8018336:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018338:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801833c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801833e:	142d      	asrs	r5, r5, #16
 8018340:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8018344:	f100 81ee 	bmi.w	8018724 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018348:	f102 3eff 	add.w	lr, r2, #4294967295
 801834c:	4575      	cmp	r5, lr
 801834e:	f280 81e9 	bge.w	8018724 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018352:	2800      	cmp	r0, #0
 8018354:	f2c0 81e6 	blt.w	8018724 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018358:	f103 3eff 	add.w	lr, r3, #4294967295
 801835c:	4570      	cmp	r0, lr
 801835e:	f280 81e1 	bge.w	8018724 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018362:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018364:	b212      	sxth	r2, r2
 8018366:	fb00 5002 	mla	r0, r0, r2, r5
 801836a:	fa1f fe81 	uxth.w	lr, r1
 801836e:	eb03 0a00 	add.w	sl, r3, r0
 8018372:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8018376:	f813 9000 	ldrb.w	r9, [r3, r0]
 801837a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801837e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8018382:	b29b      	uxth	r3, r3
 8018384:	f1bc 0f00 	cmp.w	ip, #0
 8018388:	f000 8179 	beq.w	801867e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 801838c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8018390:	940a      	str	r4, [sp, #40]	; 0x28
 8018392:	eb0a 0b02 	add.w	fp, sl, r2
 8018396:	fa1f fa8c 	uxth.w	sl, ip
 801839a:	fb0a fe0e 	mul.w	lr, sl, lr
 801839e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80183a2:	fa1f fa8a 	uxth.w	sl, sl
 80183a6:	eba5 050e 	sub.w	r5, r5, lr
 80183aa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80183ae:	940b      	str	r4, [sp, #44]	; 0x2c
 80183b0:	eba3 030a 	sub.w	r3, r3, sl
 80183b4:	b2ad      	uxth	r5, r5
 80183b6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80183b8:	b29b      	uxth	r3, r3
 80183ba:	fb08 f505 	mul.w	r5, r8, r5
 80183be:	fb09 5303 	mla	r3, r9, r3, r5
 80183c2:	fb0a 3304 	mla	r3, sl, r4, r3
 80183c6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80183c8:	fb0e 3304 	mla	r3, lr, r4, r3
 80183cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80183d0:	2b00      	cmp	r3, #0
 80183d2:	f000 80cf 	beq.w	8018574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80183d6:	9c08      	ldr	r4, [sp, #32]
 80183d8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80183dc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80183e0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80183e4:	f000 8150 	beq.w	8018688 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 80183e8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80183ec:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80183f0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80183f4:	fb09 f000 	mul.w	r0, r9, r0
 80183f8:	fb0a fe0e 	mul.w	lr, sl, lr
 80183fc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8018400:	f100 0b20 	add.w	fp, r0, #32
 8018404:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018408:	44ce      	add	lr, r9
 801840a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801840e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018412:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018416:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801841a:	ea4e 0909 	orr.w	r9, lr, r9
 801841e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018422:	8868      	ldrh	r0, [r5, #2]
 8018424:	d019      	beq.n	801845a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8018426:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801842a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801842e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018432:	fb08 f800 	mul.w	r8, r8, r0
 8018436:	fb0a fe0e 	mul.w	lr, sl, lr
 801843a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801843e:	f108 0b20 	add.w	fp, r8, #32
 8018442:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018446:	4486      	add	lr, r0
 8018448:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801844c:	0a00      	lsrs	r0, r0, #8
 801844e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018452:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018456:	ea4e 0000 	orr.w	r0, lr, r0
 801845a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801845e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8018462:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018466:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801846a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801846e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018472:	ea4e 0909 	orr.w	r9, lr, r9
 8018476:	ea4a 0000 	orr.w	r0, sl, r0
 801847a:	f1bc 0f00 	cmp.w	ip, #0
 801847e:	f000 8105 	beq.w	801868c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8018482:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8018486:	3a01      	subs	r2, #1
 8018488:	0052      	lsls	r2, r2, #1
 801848a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801848c:	3202      	adds	r2, #2
 801848e:	2cff      	cmp	r4, #255	; 0xff
 8018490:	eb05 0e02 	add.w	lr, r5, r2
 8018494:	5aaa      	ldrh	r2, [r5, r2]
 8018496:	d018      	beq.n	80184ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8018498:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801849c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80184a0:	fb04 fa02 	mul.w	sl, r4, r2
 80184a4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80184a8:	fb08 f805 	mul.w	r8, r8, r5
 80184ac:	f10a 0520 	add.w	r5, sl, #32
 80184b0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80184b4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80184b8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80184bc:	4442      	add	r2, r8
 80184be:	0a2d      	lsrs	r5, r5, #8
 80184c0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80184c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80184c8:	432a      	orrs	r2, r5
 80184ca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80184cc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80184d0:	2cff      	cmp	r4, #255	; 0xff
 80184d2:	d01a      	beq.n	801850a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80184d4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80184d8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80184dc:	fb04 fa05 	mul.w	sl, r4, r5
 80184e0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80184e4:	fb08 f80e 	mul.w	r8, r8, lr
 80184e8:	f10a 0e20 	add.w	lr, sl, #32
 80184ec:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80184f0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80184f4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80184f8:	4445      	add	r5, r8
 80184fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80184fe:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8018502:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8018506:	ea45 050e 	orr.w	r5, r5, lr
 801850a:	fb1c fe01 	smulbb	lr, ip, r1
 801850e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8018512:	f1cc 0810 	rsb	r8, ip, #16
 8018516:	eba8 0801 	sub.w	r8, r8, r1
 801851a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801851e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8018522:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8018526:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801852a:	4341      	muls	r1, r0
 801852c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018530:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018534:	ea4a 0202 	orr.w	r2, sl, r2
 8018538:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801853c:	fb09 1108 	mla	r1, r9, r8, r1
 8018540:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018544:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018548:	fb0c 1102 	mla	r1, ip, r2, r1
 801854c:	ea4b 0505 	orr.w	r5, fp, r5
 8018550:	fb0e 1e05 	mla	lr, lr, r5, r1
 8018554:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8018558:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801855c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018560:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018564:	ea42 0e0e 	orr.w	lr, r2, lr
 8018568:	fa1f f28e 	uxth.w	r2, lr
 801856c:	2bff      	cmp	r3, #255	; 0xff
 801856e:	f040 80a1 	bne.w	80186b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 8018572:	803a      	strh	r2, [r7, #0]
 8018574:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018576:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8018578:	4413      	add	r3, r2
 801857a:	9325      	str	r3, [sp, #148]	; 0x94
 801857c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801857e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018580:	441a      	add	r2, r3
 8018582:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018584:	9226      	str	r2, [sp, #152]	; 0x98
 8018586:	3b01      	subs	r3, #1
 8018588:	3702      	adds	r7, #2
 801858a:	930f      	str	r3, [sp, #60]	; 0x3c
 801858c:	e6c9      	b.n	8018322 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801858e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018590:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8018592:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8018594:	4433      	add	r3, r6
 8018596:	9325      	str	r3, [sp, #148]	; 0x94
 8018598:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801859a:	441c      	add	r4, r3
 801859c:	9b06      	ldr	r3, [sp, #24]
 801859e:	9426      	str	r4, [sp, #152]	; 0x98
 80185a0:	3b01      	subs	r3, #1
 80185a2:	9306      	str	r3, [sp, #24]
 80185a4:	9b07      	ldr	r3, [sp, #28]
 80185a6:	3302      	adds	r3, #2
 80185a8:	9307      	str	r3, [sp, #28]
 80185aa:	e698      	b.n	80182de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80185ac:	d028      	beq.n	8018600 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80185ae:	9b06      	ldr	r3, [sp, #24]
 80185b0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80185b2:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80185b4:	3b01      	subs	r3, #1
 80185b6:	fb00 5003 	mla	r0, r0, r3, r5
 80185ba:	1400      	asrs	r0, r0, #16
 80185bc:	f53f aeac 	bmi.w	8018318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80185c0:	3901      	subs	r1, #1
 80185c2:	4288      	cmp	r0, r1
 80185c4:	f6bf aea8 	bge.w	8018318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80185c8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80185ca:	9826      	ldr	r0, [sp, #152]	; 0x98
 80185cc:	fb01 0303 	mla	r3, r1, r3, r0
 80185d0:	141b      	asrs	r3, r3, #16
 80185d2:	f53f aea1 	bmi.w	8018318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80185d6:	3a01      	subs	r2, #1
 80185d8:	4293      	cmp	r3, r2
 80185da:	f6bf ae9d 	bge.w	8018318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80185de:	9b06      	ldr	r3, [sp, #24]
 80185e0:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80185e4:	930f      	str	r3, [sp, #60]	; 0x3c
 80185e6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80185ea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80185ec:	2b00      	cmp	r3, #0
 80185ee:	f300 80b6 	bgt.w	801875e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80185f2:	9b06      	ldr	r3, [sp, #24]
 80185f4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80185f8:	9b07      	ldr	r3, [sp, #28]
 80185fa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80185fe:	9307      	str	r3, [sp, #28]
 8018600:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018602:	2b00      	cmp	r3, #0
 8018604:	f340 8218 	ble.w	8018a38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8018608:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801860c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018610:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018614:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018616:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801861a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801861e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018622:	eef0 6a48 	vmov.f32	s13, s16
 8018626:	ee69 7a27 	vmul.f32	s15, s18, s15
 801862a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801862e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018632:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8018636:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801863a:	eef0 6a68 	vmov.f32	s13, s17
 801863e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018642:	ee18 2a10 	vmov	r2, s16
 8018646:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801864a:	fb92 f3f3 	sdiv	r3, r2, r3
 801864e:	ee18 2a90 	vmov	r2, s17
 8018652:	9327      	str	r3, [sp, #156]	; 0x9c
 8018654:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018656:	fb92 f3f3 	sdiv	r3, r2, r3
 801865a:	9328      	str	r3, [sp, #160]	; 0xa0
 801865c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801865e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018660:	3b01      	subs	r3, #1
 8018662:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018666:	930e      	str	r3, [sp, #56]	; 0x38
 8018668:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801866a:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 801866e:	bf08      	it	eq
 8018670:	4613      	moveq	r3, r2
 8018672:	9306      	str	r3, [sp, #24]
 8018674:	eef0 8a67 	vmov.f32	s17, s15
 8018678:	eeb0 8a47 	vmov.f32	s16, s14
 801867c:	e621      	b.n	80182c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801867e:	fb08 f505 	mul.w	r5, r8, r5
 8018682:	fb09 5303 	mla	r3, r9, r3, r5
 8018686:	e6a1      	b.n	80183cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8018688:	4681      	mov	r9, r0
 801868a:	e6c8      	b.n	801841e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801868c:	f1c1 0210 	rsb	r2, r1, #16
 8018690:	4341      	muls	r1, r0
 8018692:	fb09 1902 	mla	r9, r9, r2, r1
 8018696:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801869a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801869e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80186a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80186a6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80186aa:	ea42 0909 	orr.w	r9, r2, r9
 80186ae:	fa1f f289 	uxth.w	r2, r9
 80186b2:	e75b      	b.n	801856c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80186b4:	f8b7 c000 	ldrh.w	ip, [r7]
 80186b8:	43db      	mvns	r3, r3
 80186ba:	ea4f 202c 	mov.w	r0, ip, asr #8
 80186be:	fa5f fe83 	uxtb.w	lr, r3
 80186c2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80186c6:	fb00 f00e 	mul.w	r0, r0, lr
 80186ca:	1c41      	adds	r1, r0, #1
 80186cc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80186d0:	1211      	asrs	r1, r2, #8
 80186d2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80186d6:	f021 0107 	bic.w	r1, r1, #7
 80186da:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80186de:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80186e2:	48d8      	ldr	r0, [pc, #864]	; (8018a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 80186e4:	fb05 f50e 	mul.w	r5, r5, lr
 80186e8:	b2c9      	uxtb	r1, r1
 80186ea:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80186ee:	1c69      	adds	r1, r5, #1
 80186f0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80186f4:	10d1      	asrs	r1, r2, #3
 80186f6:	f021 0103 	bic.w	r1, r1, #3
 80186fa:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80186fe:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018702:	b2db      	uxtb	r3, r3
 8018704:	00c9      	lsls	r1, r1, #3
 8018706:	fb03 f30e 	mul.w	r3, r3, lr
 801870a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801870e:	4301      	orrs	r1, r0
 8018710:	1c58      	adds	r0, r3, #1
 8018712:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8018716:	00d2      	lsls	r2, r2, #3
 8018718:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801871c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018720:	430a      	orrs	r2, r1
 8018722:	e726      	b.n	8018572 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018724:	f115 0e01 	adds.w	lr, r5, #1
 8018728:	f53f af24 	bmi.w	8018574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801872c:	4572      	cmp	r2, lr
 801872e:	f6ff af21 	blt.w	8018574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8018732:	f110 0e01 	adds.w	lr, r0, #1
 8018736:	f53f af1d 	bmi.w	8018574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801873a:	4573      	cmp	r3, lr
 801873c:	f6ff af1a 	blt.w	8018574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8018740:	b21b      	sxth	r3, r3
 8018742:	b212      	sxth	r2, r2
 8018744:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8018748:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801874c:	9301      	str	r3, [sp, #4]
 801874e:	9200      	str	r2, [sp, #0]
 8018750:	4639      	mov	r1, r7
 8018752:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8018756:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018758:	f7ff fbf4 	bl	8017f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801875c:	e70a      	b.n	8018574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801875e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018760:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018764:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018766:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801876a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801876c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018770:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018772:	141f      	asrs	r7, r3, #16
 8018774:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018776:	141b      	asrs	r3, r3, #16
 8018778:	fb01 3707 	mla	r7, r1, r7, r3
 801877c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801877e:	fa1f fc82 	uxth.w	ip, r2
 8018782:	eb03 0a07 	add.w	sl, r3, r7
 8018786:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801878a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801878e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018792:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8018796:	b29b      	uxth	r3, r3
 8018798:	2d00      	cmp	r5, #0
 801879a:	f000 80fe 	beq.w	801899a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 801879e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80187a2:	940c      	str	r4, [sp, #48]	; 0x30
 80187a4:	eb0a 0b01 	add.w	fp, sl, r1
 80187a8:	fa1f fa85 	uxth.w	sl, r5
 80187ac:	fb0a fc0c 	mul.w	ip, sl, ip
 80187b0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80187b4:	fa1f fa8a 	uxth.w	sl, sl
 80187b8:	eba0 000c 	sub.w	r0, r0, ip
 80187bc:	eba3 030a 	sub.w	r3, r3, sl
 80187c0:	b280      	uxth	r0, r0
 80187c2:	fb08 f000 	mul.w	r0, r8, r0
 80187c6:	b29b      	uxth	r3, r3
 80187c8:	fb09 0303 	mla	r3, r9, r3, r0
 80187cc:	980c      	ldr	r0, [sp, #48]	; 0x30
 80187ce:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80187d2:	940d      	str	r4, [sp, #52]	; 0x34
 80187d4:	fb0a 3300 	mla	r3, sl, r0, r3
 80187d8:	fb0c 3304 	mla	r3, ip, r4, r3
 80187dc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80187e0:	2b00      	cmp	r3, #0
 80187e2:	f000 80cc 	beq.w	801897e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 80187e6:	9808      	ldr	r0, [sp, #32]
 80187e8:	9c08      	ldr	r4, [sp, #32]
 80187ea:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80187ee:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80187f2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80187f6:	f000 80d5 	beq.w	80189a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80187fa:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80187fe:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018802:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018806:	fb09 f707 	mul.w	r7, r9, r7
 801880a:	fb0a fc0c 	mul.w	ip, sl, ip
 801880e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8018812:	f107 0b20 	add.w	fp, r7, #32
 8018816:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801881a:	44cc      	add	ip, r9
 801881c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018820:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018824:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018828:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801882c:	ea4c 0909 	orr.w	r9, ip, r9
 8018830:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018834:	8847      	ldrh	r7, [r0, #2]
 8018836:	d019      	beq.n	801886c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8018838:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801883c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018840:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018844:	fb08 f807 	mul.w	r8, r8, r7
 8018848:	fb0a fc0c 	mul.w	ip, sl, ip
 801884c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8018850:	f108 0b20 	add.w	fp, r8, #32
 8018854:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018858:	44bc      	add	ip, r7
 801885a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801885e:	0a3f      	lsrs	r7, r7, #8
 8018860:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018864:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018868:	ea4c 0707 	orr.w	r7, ip, r7
 801886c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018870:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8018874:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018878:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801887c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018880:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018884:	ea4c 0909 	orr.w	r9, ip, r9
 8018888:	ea4a 0707 	orr.w	r7, sl, r7
 801888c:	2d00      	cmp	r5, #0
 801888e:	f000 808b 	beq.w	80189a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 8018892:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018896:	3901      	subs	r1, #1
 8018898:	0049      	lsls	r1, r1, #1
 801889a:	3102      	adds	r1, #2
 801889c:	eb00 0c01 	add.w	ip, r0, r1
 80188a0:	5a41      	ldrh	r1, [r0, r1]
 80188a2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80188a4:	28ff      	cmp	r0, #255	; 0xff
 80188a6:	d019      	beq.n	80188dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80188a8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80188aa:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80188ae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80188b2:	fb04 fa01 	mul.w	sl, r4, r1
 80188b6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80188ba:	fb08 f800 	mul.w	r8, r8, r0
 80188be:	f10a 0020 	add.w	r0, sl, #32
 80188c2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80188c6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80188ca:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80188ce:	4441      	add	r1, r8
 80188d0:	0a00      	lsrs	r0, r0, #8
 80188d2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80188d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80188da:	4301      	orrs	r1, r0
 80188dc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80188de:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80188e2:	2cff      	cmp	r4, #255	; 0xff
 80188e4:	d01a      	beq.n	801891c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80188e6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80188ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80188ee:	fb04 fa00 	mul.w	sl, r4, r0
 80188f2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80188f6:	fb08 f80c 	mul.w	r8, r8, ip
 80188fa:	f10a 0c20 	add.w	ip, sl, #32
 80188fe:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8018902:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8018906:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801890a:	4440      	add	r0, r8
 801890c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018910:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8018914:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018918:	ea40 000c 	orr.w	r0, r0, ip
 801891c:	fb15 fc02 	smulbb	ip, r5, r2
 8018920:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8018924:	f1c5 0810 	rsb	r8, r5, #16
 8018928:	eba8 0802 	sub.w	r8, r8, r2
 801892c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018930:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8018934:	437a      	muls	r2, r7
 8018936:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801893a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801893e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018942:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018946:	fb09 2208 	mla	r2, r9, r8, r2
 801894a:	ea4a 0101 	orr.w	r1, sl, r1
 801894e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8018952:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018956:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801895a:	fb05 2201 	mla	r2, r5, r1, r2
 801895e:	ea4b 0000 	orr.w	r0, fp, r0
 8018962:	fb0c 2200 	mla	r2, ip, r0, r2
 8018966:	0d57      	lsrs	r7, r2, #21
 8018968:	0952      	lsrs	r2, r2, #5
 801896a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801896e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018972:	433a      	orrs	r2, r7
 8018974:	2bff      	cmp	r3, #255	; 0xff
 8018976:	b292      	uxth	r2, r2
 8018978:	d127      	bne.n	80189ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801897a:	f8ae 2000 	strh.w	r2, [lr]
 801897e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018980:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8018982:	4413      	add	r3, r2
 8018984:	9325      	str	r3, [sp, #148]	; 0x94
 8018986:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8018988:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801898a:	441a      	add	r2, r3
 801898c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801898e:	9226      	str	r2, [sp, #152]	; 0x98
 8018990:	3b01      	subs	r3, #1
 8018992:	f10e 0e02 	add.w	lr, lr, #2
 8018996:	930f      	str	r3, [sp, #60]	; 0x3c
 8018998:	e627      	b.n	80185ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801899a:	fb08 f000 	mul.w	r0, r8, r0
 801899e:	fb09 0303 	mla	r3, r9, r3, r0
 80189a2:	e71b      	b.n	80187dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80189a4:	46b9      	mov	r9, r7
 80189a6:	e743      	b.n	8018830 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80189a8:	f1c2 0110 	rsb	r1, r2, #16
 80189ac:	437a      	muls	r2, r7
 80189ae:	fb09 2901 	mla	r9, r9, r1, r2
 80189b2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80189b6:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80189ba:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80189be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80189c2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80189c6:	4302      	orrs	r2, r0
 80189c8:	e7d4      	b.n	8018974 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80189ca:	f8be 7000 	ldrh.w	r7, [lr]
 80189ce:	4c1d      	ldr	r4, [pc, #116]	; (8018a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 80189d0:	43db      	mvns	r3, r3
 80189d2:	1238      	asrs	r0, r7, #8
 80189d4:	fa5f fc83 	uxtb.w	ip, r3
 80189d8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80189dc:	10fd      	asrs	r5, r7, #3
 80189de:	fb00 f00c 	mul.w	r0, r0, ip
 80189e2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80189e6:	fb05 f10c 	mul.w	r1, r5, ip
 80189ea:	1c45      	adds	r5, r0, #1
 80189ec:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80189f0:	1215      	asrs	r5, r2, #8
 80189f2:	f025 0507 	bic.w	r5, r5, #7
 80189f6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80189fa:	1c4d      	adds	r5, r1, #1
 80189fc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8018a00:	10d1      	asrs	r1, r2, #3
 8018a02:	f021 0103 	bic.w	r1, r1, #3
 8018a06:	00fb      	lsls	r3, r7, #3
 8018a08:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018a0c:	b2db      	uxtb	r3, r3
 8018a0e:	b2c0      	uxtb	r0, r0
 8018a10:	00c9      	lsls	r1, r1, #3
 8018a12:	fb03 f30c 	mul.w	r3, r3, ip
 8018a16:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018a1a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8018a1e:	4308      	orrs	r0, r1
 8018a20:	1c59      	adds	r1, r3, #1
 8018a22:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018a26:	00d2      	lsls	r2, r2, #3
 8018a28:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018a2c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8018a30:	4318      	orrs	r0, r3
 8018a32:	f8ae 0000 	strh.w	r0, [lr]
 8018a36:	e7a2      	b.n	801897e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8018a38:	b013      	add	sp, #76	; 0x4c
 8018a3a:	ecbd 8b08 	vpop	{d8-d11}
 8018a3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a42:	bf00      	nop
 8018a44:	fffff800 	.word	0xfffff800

08018a48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8018a48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018a4c:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8018a50:	fb0c 4e03 	mla	lr, ip, r3, r4
 8018a54:	f1bc 0f00 	cmp.w	ip, #0
 8018a58:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8018a5c:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8018a60:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8018a64:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8018a68:	8808      	ldrh	r0, [r1, #0]
 8018a6a:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8018a6e:	db2f      	blt.n	8018ad0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018a70:	45e2      	cmp	sl, ip
 8018a72:	dd2d      	ble.n	8018ad0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018a74:	2c00      	cmp	r4, #0
 8018a76:	db29      	blt.n	8018acc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018a78:	42a3      	cmp	r3, r4
 8018a7a:	dd27      	ble.n	8018acc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018a7c:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8018a80:	1c62      	adds	r2, r4, #1
 8018a82:	d428      	bmi.n	8018ad6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018a84:	4293      	cmp	r3, r2
 8018a86:	dd26      	ble.n	8018ad6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018a88:	b32f      	cbz	r7, 8018ad6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018a8a:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8018a8e:	f11c 0c01 	adds.w	ip, ip, #1
 8018a92:	d424      	bmi.n	8018ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018a94:	45e2      	cmp	sl, ip
 8018a96:	dd22      	ble.n	8018ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018a98:	2e00      	cmp	r6, #0
 8018a9a:	f000 809d 	beq.w	8018bd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 8018a9e:	2c00      	cmp	r4, #0
 8018aa0:	db1b      	blt.n	8018ada <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018aa2:	42a3      	cmp	r3, r4
 8018aa4:	dd19      	ble.n	8018ada <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018aa6:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8018aaa:	3401      	adds	r4, #1
 8018aac:	d41a      	bmi.n	8018ae4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018aae:	42a3      	cmp	r3, r4
 8018ab0:	dd18      	ble.n	8018ae4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018ab2:	b1cf      	cbz	r7, 8018ae8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8018ab4:	3301      	adds	r3, #1
 8018ab6:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8018aba:	2f0f      	cmp	r7, #15
 8018abc:	d915      	bls.n	8018aea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8018abe:	4b49      	ldr	r3, [pc, #292]	; (8018be4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8018ac0:	4a49      	ldr	r2, [pc, #292]	; (8018be8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8018ac2:	484a      	ldr	r0, [pc, #296]	; (8018bec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8018ac4:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8018ac8:	f002 ffa8 	bl	801ba1c <__assert_func>
 8018acc:	4681      	mov	r9, r0
 8018ace:	e7d7      	b.n	8018a80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8018ad0:	4686      	mov	lr, r0
 8018ad2:	4681      	mov	r9, r0
 8018ad4:	e7db      	b.n	8018a8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018ad6:	4686      	mov	lr, r0
 8018ad8:	e7d9      	b.n	8018a8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018ada:	4684      	mov	ip, r0
 8018adc:	e7e5      	b.n	8018aaa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8018ade:	4603      	mov	r3, r0
 8018ae0:	4684      	mov	ip, r0
 8018ae2:	e7ea      	b.n	8018aba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018ae4:	4603      	mov	r3, r0
 8018ae6:	e7e8      	b.n	8018aba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018ae8:	4603      	mov	r3, r0
 8018aea:	2e0f      	cmp	r6, #15
 8018aec:	d8e7      	bhi.n	8018abe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018aee:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8018af2:	fb17 f806 	smulbb	r8, r7, r6
 8018af6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018afa:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8018afe:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018b02:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8018b06:	ea44 0909 	orr.w	r9, r4, r9
 8018b0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018b0e:	f1c6 0410 	rsb	r4, r6, #16
 8018b12:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018b16:	1be4      	subs	r4, r4, r7
 8018b18:	041a      	lsls	r2, r3, #16
 8018b1a:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8018b1e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018b22:	fb07 fe0e 	mul.w	lr, r7, lr
 8018b26:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018b2a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8018b2e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018b32:	fb04 e409 	mla	r4, r4, r9, lr
 8018b36:	4313      	orrs	r3, r2
 8018b38:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8018b3c:	fb08 4303 	mla	r3, r8, r3, r4
 8018b40:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018b44:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8018b48:	4322      	orrs	r2, r4
 8018b4a:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8018b4e:	fb06 3202 	mla	r2, r6, r2, r3
 8018b52:	0d53      	lsrs	r3, r2, #21
 8018b54:	0952      	lsrs	r2, r2, #5
 8018b56:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018b5a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018b5e:	431a      	orrs	r2, r3
 8018b60:	b293      	uxth	r3, r2
 8018b62:	b2af      	uxth	r7, r5
 8018b64:	1202      	asrs	r2, r0, #8
 8018b66:	43ed      	mvns	r5, r5
 8018b68:	b2ed      	uxtb	r5, r5
 8018b6a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018b6e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018b72:	fb12 f205 	smulbb	r2, r2, r5
 8018b76:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018b7a:	fb0c 2c07 	mla	ip, ip, r7, r2
 8018b7e:	00dc      	lsls	r4, r3, #3
 8018b80:	10da      	asrs	r2, r3, #3
 8018b82:	10c6      	asrs	r6, r0, #3
 8018b84:	00c3      	lsls	r3, r0, #3
 8018b86:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018b8a:	b2db      	uxtb	r3, r3
 8018b8c:	fb16 f605 	smulbb	r6, r6, r5
 8018b90:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018b94:	b2e4      	uxtb	r4, r4
 8018b96:	fb13 f305 	smulbb	r3, r3, r5
 8018b9a:	fa1f fc8c 	uxth.w	ip, ip
 8018b9e:	fb02 6207 	mla	r2, r2, r7, r6
 8018ba2:	fb04 3307 	mla	r3, r4, r7, r3
 8018ba6:	b296      	uxth	r6, r2
 8018ba8:	b29a      	uxth	r2, r3
 8018baa:	f10c 0301 	add.w	r3, ip, #1
 8018bae:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018bb2:	1c53      	adds	r3, r2, #1
 8018bb4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018bb8:	1c72      	adds	r2, r6, #1
 8018bba:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8018bbe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018bc2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018bc6:	0952      	lsrs	r2, r2, #5
 8018bc8:	ea43 030c 	orr.w	r3, r3, ip
 8018bcc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018bd0:	4313      	orrs	r3, r2
 8018bd2:	800b      	strh	r3, [r1, #0]
 8018bd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018bd8:	2f0f      	cmp	r7, #15
 8018bda:	f63f af70 	bhi.w	8018abe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018bde:	4603      	mov	r3, r0
 8018be0:	4684      	mov	ip, r0
 8018be2:	e784      	b.n	8018aee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8018be4:	0802050e 	.word	0x0802050e
 8018be8:	08020b87 	.word	0x08020b87
 8018bec:	08020592 	.word	0x08020592

08018bf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018bf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018bf4:	ed2d 8b08 	vpush	{d8-d11}
 8018bf8:	b093      	sub	sp, #76	; 0x4c
 8018bfa:	461d      	mov	r5, r3
 8018bfc:	9210      	str	r2, [sp, #64]	; 0x40
 8018bfe:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018c00:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8018c04:	920b      	str	r2, [sp, #44]	; 0x2c
 8018c06:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8018c0a:	910a      	str	r1, [sp, #40]	; 0x28
 8018c0c:	6859      	ldr	r1, [r3, #4]
 8018c0e:	681b      	ldr	r3, [r3, #0]
 8018c10:	9011      	str	r0, [sp, #68]	; 0x44
 8018c12:	fb01 2707 	mla	r7, r1, r7, r2
 8018c16:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8018c1a:	9307      	str	r3, [sp, #28]
 8018c1c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018c1e:	681b      	ldr	r3, [r3, #0]
 8018c20:	9309      	str	r3, [sp, #36]	; 0x24
 8018c22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018c24:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8018c28:	43db      	mvns	r3, r3
 8018c2a:	b2db      	uxtb	r3, r3
 8018c2c:	eeb0 aa40 	vmov.f32	s20, s0
 8018c30:	eef0 9a60 	vmov.f32	s19, s1
 8018c34:	eeb0 9a41 	vmov.f32	s18, s2
 8018c38:	eeb0 8a62 	vmov.f32	s16, s5
 8018c3c:	eef0 8a43 	vmov.f32	s17, s6
 8018c40:	eef0 ba44 	vmov.f32	s23, s8
 8018c44:	eeb0 ba64 	vmov.f32	s22, s9
 8018c48:	eef0 aa45 	vmov.f32	s21, s10
 8018c4c:	9308      	str	r3, [sp, #32]
 8018c4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018c50:	2b00      	cmp	r3, #0
 8018c52:	dc03      	bgt.n	8018c5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018c54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018c56:	2b00      	cmp	r3, #0
 8018c58:	f340 8203 	ble.w	8019062 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8018c5c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018c5e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018c62:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018c66:	1e48      	subs	r0, r1, #1
 8018c68:	f102 3cff 	add.w	ip, r2, #4294967295
 8018c6c:	2d00      	cmp	r5, #0
 8018c6e:	f340 80da 	ble.w	8018e26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018c72:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018c76:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018c7a:	d406      	bmi.n	8018c8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018c7c:	4586      	cmp	lr, r0
 8018c7e:	da04      	bge.n	8018c8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018c80:	2b00      	cmp	r3, #0
 8018c82:	db02      	blt.n	8018c8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018c84:	4563      	cmp	r3, ip
 8018c86:	f2c0 80cf 	blt.w	8018e28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8018c8a:	f11e 0e01 	adds.w	lr, lr, #1
 8018c8e:	f100 80c1 	bmi.w	8018e14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018c92:	4571      	cmp	r1, lr
 8018c94:	f2c0 80be 	blt.w	8018e14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018c98:	3301      	adds	r3, #1
 8018c9a:	f100 80bb 	bmi.w	8018e14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018c9e:	429a      	cmp	r2, r3
 8018ca0:	f2c0 80b8 	blt.w	8018e14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018ca4:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8018ca8:	46a9      	mov	r9, r5
 8018caa:	f1b9 0f00 	cmp.w	r9, #0
 8018cae:	f340 80d8 	ble.w	8018e62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8018cb2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018cb4:	1421      	asrs	r1, r4, #16
 8018cb6:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018cba:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018cbe:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018cc2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8018cc6:	f100 8111 	bmi.w	8018eec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018cca:	f10e 3aff 	add.w	sl, lr, #4294967295
 8018cce:	4551      	cmp	r1, sl
 8018cd0:	f280 810c 	bge.w	8018eec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018cd4:	2800      	cmp	r0, #0
 8018cd6:	f2c0 8109 	blt.w	8018eec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018cda:	f103 3aff 	add.w	sl, r3, #4294967295
 8018cde:	4550      	cmp	r0, sl
 8018ce0:	f280 8104 	bge.w	8018eec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018ce4:	fa0f f38e 	sxth.w	r3, lr
 8018ce8:	fb00 1103 	mla	r1, r0, r3, r1
 8018cec:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018cee:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8018cf2:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8018cf6:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8018cfa:	f1bc 0f00 	cmp.w	ip, #0
 8018cfe:	d007      	beq.n	8018d10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8018d00:	005b      	lsls	r3, r3, #1
 8018d02:	eb0a 0003 	add.w	r0, sl, r3
 8018d06:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8018d0a:	930c      	str	r3, [sp, #48]	; 0x30
 8018d0c:	8843      	ldrh	r3, [r0, #2]
 8018d0e:	930d      	str	r3, [sp, #52]	; 0x34
 8018d10:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8018d14:	fb12 f30c 	smulbb	r3, r2, ip
 8018d18:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018d1c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018d20:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018d24:	10db      	asrs	r3, r3, #3
 8018d26:	ea40 000e 	orr.w	r0, r0, lr
 8018d2a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018d2e:	f1cc 0e10 	rsb	lr, ip, #16
 8018d32:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018d36:	ebae 0e02 	sub.w	lr, lr, r2
 8018d3a:	ea4a 0101 	orr.w	r1, sl, r1
 8018d3e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018d42:	4351      	muls	r1, r2
 8018d44:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018d46:	9f08      	ldr	r7, [sp, #32]
 8018d48:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018d4c:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018d50:	0410      	lsls	r0, r2, #16
 8018d52:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018d56:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018d5a:	4310      	orrs	r0, r2
 8018d5c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018d5e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018d60:	0412      	lsls	r2, r2, #16
 8018d62:	fb03 e000 	mla	r0, r3, r0, lr
 8018d66:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018d6a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018d6e:	ea42 020e 	orr.w	r2, r2, lr
 8018d72:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8018d76:	fb03 0302 	mla	r3, r3, r2, r0
 8018d7a:	0d5a      	lsrs	r2, r3, #21
 8018d7c:	095b      	lsrs	r3, r3, #5
 8018d7e:	f8b8 0000 	ldrh.w	r0, [r8]
 8018d82:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018d86:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018d8a:	4313      	orrs	r3, r2
 8018d8c:	b29b      	uxth	r3, r3
 8018d8e:	1201      	asrs	r1, r0, #8
 8018d90:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018d94:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018d98:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018d9c:	fb11 f107 	smulbb	r1, r1, r7
 8018da0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8018da4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018da8:	00c0      	lsls	r0, r0, #3
 8018daa:	fb0c 1c02 	mla	ip, ip, r2, r1
 8018dae:	b2c0      	uxtb	r0, r0
 8018db0:	10d9      	asrs	r1, r3, #3
 8018db2:	00db      	lsls	r3, r3, #3
 8018db4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018db8:	b2db      	uxtb	r3, r3
 8018dba:	fb10 f007 	smulbb	r0, r0, r7
 8018dbe:	fa1f fc8c 	uxth.w	ip, ip
 8018dc2:	fb03 0302 	mla	r3, r3, r2, r0
 8018dc6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018dca:	fb1e fe07 	smulbb	lr, lr, r7
 8018dce:	fb01 e102 	mla	r1, r1, r2, lr
 8018dd2:	b29a      	uxth	r2, r3
 8018dd4:	f10c 0301 	add.w	r3, ip, #1
 8018dd8:	b289      	uxth	r1, r1
 8018dda:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018dde:	1c53      	adds	r3, r2, #1
 8018de0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018de4:	1c4a      	adds	r2, r1, #1
 8018de6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018dea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018dee:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018df2:	0949      	lsrs	r1, r1, #5
 8018df4:	ea43 030c 	orr.w	r3, r3, ip
 8018df8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018dfc:	430b      	orrs	r3, r1
 8018dfe:	f8a8 3000 	strh.w	r3, [r8]
 8018e02:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018e04:	441c      	add	r4, r3
 8018e06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018e08:	f108 0802 	add.w	r8, r8, #2
 8018e0c:	441e      	add	r6, r3
 8018e0e:	f109 39ff 	add.w	r9, r9, #4294967295
 8018e12:	e74a      	b.n	8018caa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8018e14:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018e16:	441c      	add	r4, r3
 8018e18:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018e1a:	441e      	add	r6, r3
 8018e1c:	9b07      	ldr	r3, [sp, #28]
 8018e1e:	3302      	adds	r3, #2
 8018e20:	3d01      	subs	r5, #1
 8018e22:	9307      	str	r3, [sp, #28]
 8018e24:	e722      	b.n	8018c6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018e26:	d022      	beq.n	8018e6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8018e28:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018e2a:	1e6b      	subs	r3, r5, #1
 8018e2c:	fb00 4003 	mla	r0, r0, r3, r4
 8018e30:	1400      	asrs	r0, r0, #16
 8018e32:	f53f af37 	bmi.w	8018ca4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018e36:	3901      	subs	r1, #1
 8018e38:	4288      	cmp	r0, r1
 8018e3a:	f6bf af33 	bge.w	8018ca4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018e3e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018e40:	fb01 6303 	mla	r3, r1, r3, r6
 8018e44:	141b      	asrs	r3, r3, #16
 8018e46:	f53f af2d 	bmi.w	8018ca4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018e4a:	3a01      	subs	r2, #1
 8018e4c:	4293      	cmp	r3, r2
 8018e4e:	f6bf af29 	bge.w	8018ca4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018e52:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8018e56:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8018e5a:	46a8      	mov	r8, r5
 8018e5c:	f1b8 0f00 	cmp.w	r8, #0
 8018e60:	dc5e      	bgt.n	8018f20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8018e62:	9b07      	ldr	r3, [sp, #28]
 8018e64:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018e68:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018e6c:	9307      	str	r3, [sp, #28]
 8018e6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018e70:	2b00      	cmp	r3, #0
 8018e72:	f340 80f6 	ble.w	8019062 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8018e76:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018e7a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018e7e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018e82:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018e84:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018e88:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018e8c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018e90:	eef0 6a48 	vmov.f32	s13, s16
 8018e94:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018e98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018e9c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018ea0:	ee16 4a90 	vmov	r4, s13
 8018ea4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018ea8:	eef0 6a68 	vmov.f32	s13, s17
 8018eac:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018eb0:	ee18 2a10 	vmov	r2, s16
 8018eb4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018eb8:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ebc:	ee18 2a90 	vmov	r2, s17
 8018ec0:	9327      	str	r3, [sp, #156]	; 0x9c
 8018ec2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018ec4:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ec8:	9328      	str	r3, [sp, #160]	; 0xa0
 8018eca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018ecc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018ece:	3b01      	subs	r3, #1
 8018ed0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018ed4:	930a      	str	r3, [sp, #40]	; 0x28
 8018ed6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018ed8:	ee16 6a90 	vmov	r6, s13
 8018edc:	bf14      	ite	ne
 8018ede:	461d      	movne	r5, r3
 8018ee0:	4615      	moveq	r5, r2
 8018ee2:	eef0 8a67 	vmov.f32	s17, s15
 8018ee6:	eeb0 8a47 	vmov.f32	s16, s14
 8018eea:	e6b0      	b.n	8018c4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018eec:	f111 0a01 	adds.w	sl, r1, #1
 8018ef0:	d487      	bmi.n	8018e02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018ef2:	45d6      	cmp	lr, sl
 8018ef4:	db85      	blt.n	8018e02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018ef6:	f110 0a01 	adds.w	sl, r0, #1
 8018efa:	d482      	bmi.n	8018e02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018efc:	4553      	cmp	r3, sl
 8018efe:	db80      	blt.n	8018e02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018f00:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8018f02:	9101      	str	r1, [sp, #4]
 8018f04:	b21b      	sxth	r3, r3
 8018f06:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8018f0a:	9300      	str	r3, [sp, #0]
 8018f0c:	e9cd c704 	strd	ip, r7, [sp, #16]
 8018f10:	fa0f f38e 	sxth.w	r3, lr
 8018f14:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018f16:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018f18:	4641      	mov	r1, r8
 8018f1a:	f7ff fd95 	bl	8018a48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8018f1e:	e770      	b.n	8018e02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018f20:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018f22:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8018f24:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018f28:	1430      	asrs	r0, r6, #16
 8018f2a:	1423      	asrs	r3, r4, #16
 8018f2c:	fb01 3000 	mla	r0, r1, r0, r3
 8018f30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f32:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8018f36:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8018f3a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018f3e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018f42:	8858      	ldrh	r0, [r3, #2]
 8018f44:	f1be 0f00 	cmp.w	lr, #0
 8018f48:	d00b      	beq.n	8018f62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018f4a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018f4e:	3901      	subs	r1, #1
 8018f50:	0049      	lsls	r1, r1, #1
 8018f52:	3102      	adds	r1, #2
 8018f54:	eb03 0b01 	add.w	fp, r3, r1
 8018f58:	5a5b      	ldrh	r3, [r3, r1]
 8018f5a:	930e      	str	r3, [sp, #56]	; 0x38
 8018f5c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018f60:	930f      	str	r3, [sp, #60]	; 0x3c
 8018f62:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8018f66:	fb12 f30e 	smulbb	r3, r2, lr
 8018f6a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018f6e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018f72:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8018f76:	10db      	asrs	r3, r3, #3
 8018f78:	ea41 010c 	orr.w	r1, r1, ip
 8018f7c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018f80:	f1ce 0c10 	rsb	ip, lr, #16
 8018f84:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018f88:	ebac 0c02 	sub.w	ip, ip, r2
 8018f8c:	ea4b 0000 	orr.w	r0, fp, r0
 8018f90:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018f94:	4350      	muls	r0, r2
 8018f96:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018f98:	9f08      	ldr	r7, [sp, #32]
 8018f9a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8018f9e:	fb0c 0c01 	mla	ip, ip, r1, r0
 8018fa2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8018fa6:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8018faa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018fac:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018fae:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018fb2:	0412      	lsls	r2, r2, #16
 8018fb4:	ea4b 0101 	orr.w	r1, fp, r1
 8018fb8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018fbc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018fc0:	fb03 c101 	mla	r1, r3, r1, ip
 8018fc4:	4302      	orrs	r2, r0
 8018fc6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8018fca:	fb03 1202 	mla	r2, r3, r2, r1
 8018fce:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8018fd2:	0952      	lsrs	r2, r2, #5
 8018fd4:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8018fd8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018fdc:	f8b9 2000 	ldrh.w	r2, [r9]
 8018fe0:	ea4b 0303 	orr.w	r3, fp, r3
 8018fe4:	b29b      	uxth	r3, r3
 8018fe6:	1211      	asrs	r1, r2, #8
 8018fe8:	1218      	asrs	r0, r3, #8
 8018fea:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018fee:	fb11 f107 	smulbb	r1, r1, r7
 8018ff2:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8018ff6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018ffa:	00d2      	lsls	r2, r2, #3
 8018ffc:	fb00 100a 	mla	r0, r0, sl, r1
 8019000:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019004:	10d9      	asrs	r1, r3, #3
 8019006:	b2d2      	uxtb	r2, r2
 8019008:	00db      	lsls	r3, r3, #3
 801900a:	fb1c fc07 	smulbb	ip, ip, r7
 801900e:	fb12 f207 	smulbb	r2, r2, r7
 8019012:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019016:	b2db      	uxtb	r3, r3
 8019018:	b280      	uxth	r0, r0
 801901a:	fb01 c10a 	mla	r1, r1, sl, ip
 801901e:	fb03 230a 	mla	r3, r3, sl, r2
 8019022:	b29b      	uxth	r3, r3
 8019024:	b289      	uxth	r1, r1
 8019026:	1c42      	adds	r2, r0, #1
 8019028:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801902c:	f101 0c01 	add.w	ip, r1, #1
 8019030:	1c5a      	adds	r2, r3, #1
 8019032:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019036:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801903a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801903c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019040:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019044:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019048:	4310      	orrs	r0, r2
 801904a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801904e:	441c      	add	r4, r3
 8019050:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019052:	ea40 000c 	orr.w	r0, r0, ip
 8019056:	f829 0b02 	strh.w	r0, [r9], #2
 801905a:	441e      	add	r6, r3
 801905c:	f108 38ff 	add.w	r8, r8, #4294967295
 8019060:	e6fc      	b.n	8018e5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8019062:	b013      	add	sp, #76	; 0x4c
 8019064:	ecbd 8b08 	vpop	{d8-d11}
 8019068:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801906c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801906c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019070:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8019074:	fb06 5c03 	mla	ip, r6, r3, r5
 8019078:	2e00      	cmp	r6, #0
 801907a:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 801907e:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8019082:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8019086:	8808      	ldrh	r0, [r1, #0]
 8019088:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801908c:	db2e      	blt.n	80190ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801908e:	45b0      	cmp	r8, r6
 8019090:	dd2c      	ble.n	80190ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8019092:	2d00      	cmp	r5, #0
 8019094:	db28      	blt.n	80190e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8019096:	42ab      	cmp	r3, r5
 8019098:	dd26      	ble.n	80190e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801909a:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 801909e:	1c6a      	adds	r2, r5, #1
 80190a0:	d427      	bmi.n	80190f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80190a2:	4293      	cmp	r3, r2
 80190a4:	dd25      	ble.n	80190f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80190a6:	b324      	cbz	r4, 80190f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80190a8:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80190ac:	3601      	adds	r6, #1
 80190ae:	d424      	bmi.n	80190fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80190b0:	45b0      	cmp	r8, r6
 80190b2:	dd22      	ble.n	80190fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80190b4:	b31f      	cbz	r7, 80190fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 80190b6:	2d00      	cmp	r5, #0
 80190b8:	db1d      	blt.n	80190f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80190ba:	42ab      	cmp	r3, r5
 80190bc:	dd1b      	ble.n	80190f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80190be:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 80190c2:	3501      	adds	r5, #1
 80190c4:	d405      	bmi.n	80190d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80190c6:	42ab      	cmp	r3, r5
 80190c8:	dd03      	ble.n	80190d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80190ca:	b124      	cbz	r4, 80190d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 80190cc:	3301      	adds	r3, #1
 80190ce:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 80190d2:	2c0f      	cmp	r4, #15
 80190d4:	d801      	bhi.n	80190da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80190d6:	2f0f      	cmp	r7, #15
 80190d8:	d914      	bls.n	8019104 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 80190da:	4b27      	ldr	r3, [pc, #156]	; (8019178 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 80190dc:	4a27      	ldr	r2, [pc, #156]	; (801917c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 80190de:	4828      	ldr	r0, [pc, #160]	; (8019180 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 80190e0:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 80190e4:	f002 fc9a 	bl	801ba1c <__assert_func>
 80190e8:	4684      	mov	ip, r0
 80190ea:	e7d8      	b.n	801909e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 80190ec:	4602      	mov	r2, r0
 80190ee:	4684      	mov	ip, r0
 80190f0:	e7dc      	b.n	80190ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80190f2:	4602      	mov	r2, r0
 80190f4:	e7da      	b.n	80190ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80190f6:	4606      	mov	r6, r0
 80190f8:	e7e3      	b.n	80190c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 80190fa:	4606      	mov	r6, r0
 80190fc:	e7e9      	b.n	80190d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80190fe:	2c0f      	cmp	r4, #15
 8019100:	d8eb      	bhi.n	80190da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8019102:	4606      	mov	r6, r0
 8019104:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8019108:	fb14 f307 	smulbb	r3, r4, r7
 801910c:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8019110:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8019114:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019118:	10db      	asrs	r3, r3, #3
 801911a:	ea45 0c0c 	orr.w	ip, r5, ip
 801911e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019122:	f1c7 0510 	rsb	r5, r7, #16
 8019126:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801912a:	1b2d      	subs	r5, r5, r4
 801912c:	ea4e 0202 	orr.w	r2, lr, r2
 8019130:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8019134:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019138:	4354      	muls	r4, r2
 801913a:	fb05 450c 	mla	r5, r5, ip, r4
 801913e:	0404      	lsls	r4, r0, #16
 8019140:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019144:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019148:	4320      	orrs	r0, r4
 801914a:	fb03 5400 	mla	r4, r3, r0, r5
 801914e:	0430      	lsls	r0, r6, #16
 8019150:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019154:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8019158:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 801915c:	4330      	orrs	r0, r6
 801915e:	fb07 4000 	mla	r0, r7, r0, r4
 8019162:	0d43      	lsrs	r3, r0, #21
 8019164:	0940      	lsrs	r0, r0, #5
 8019166:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801916a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801916e:	4318      	orrs	r0, r3
 8019170:	8008      	strh	r0, [r1, #0]
 8019172:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019176:	bf00      	nop
 8019178:	0802050e 	.word	0x0802050e
 801917c:	08020b87 	.word	0x08020b87
 8019180:	08020592 	.word	0x08020592

08019184 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019188:	ed2d 8b08 	vpush	{d8-d11}
 801918c:	b08f      	sub	sp, #60	; 0x3c
 801918e:	461d      	mov	r5, r3
 8019190:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019192:	920c      	str	r2, [sp, #48]	; 0x30
 8019194:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8019198:	9107      	str	r1, [sp, #28]
 801919a:	6859      	ldr	r1, [r3, #4]
 801919c:	681b      	ldr	r3, [r3, #0]
 801919e:	900d      	str	r0, [sp, #52]	; 0x34
 80191a0:	fb01 2707 	mla	r7, r1, r7, r2
 80191a4:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80191a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80191aa:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80191ae:	f8d3 8000 	ldr.w	r8, [r3]
 80191b2:	eeb0 aa40 	vmov.f32	s20, s0
 80191b6:	eef0 9a60 	vmov.f32	s19, s1
 80191ba:	eeb0 9a41 	vmov.f32	s18, s2
 80191be:	eeb0 8a62 	vmov.f32	s16, s5
 80191c2:	eef0 8a43 	vmov.f32	s17, s6
 80191c6:	eef0 ba44 	vmov.f32	s23, s8
 80191ca:	eeb0 ba64 	vmov.f32	s22, s9
 80191ce:	eef0 aa45 	vmov.f32	s21, s10
 80191d2:	9b07      	ldr	r3, [sp, #28]
 80191d4:	2b00      	cmp	r3, #0
 80191d6:	dc03      	bgt.n	80191e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80191d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80191da:	2b00      	cmp	r3, #0
 80191dc:	f340 8181 	ble.w	80194e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80191e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80191e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80191e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80191ea:	1e48      	subs	r0, r1, #1
 80191ec:	f102 3cff 	add.w	ip, r2, #4294967295
 80191f0:	2d00      	cmp	r5, #0
 80191f2:	f340 809b 	ble.w	801932c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 80191f6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80191fa:	ea4f 4326 	mov.w	r3, r6, asr #16
 80191fe:	d406      	bmi.n	801920e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019200:	4586      	cmp	lr, r0
 8019202:	da04      	bge.n	801920e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019204:	2b00      	cmp	r3, #0
 8019206:	db02      	blt.n	801920e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019208:	4563      	cmp	r3, ip
 801920a:	f2c0 8090 	blt.w	801932e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801920e:	f11e 0e01 	adds.w	lr, lr, #1
 8019212:	f100 8084 	bmi.w	801931e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019216:	4571      	cmp	r1, lr
 8019218:	f2c0 8081 	blt.w	801931e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801921c:	3301      	adds	r3, #1
 801921e:	d47e      	bmi.n	801931e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019220:	429a      	cmp	r2, r3
 8019222:	db7c      	blt.n	801931e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019224:	46aa      	mov	sl, r5
 8019226:	46b9      	mov	r9, r7
 8019228:	f1ba 0f00 	cmp.w	sl, #0
 801922c:	f340 8099 	ble.w	8019362 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8019230:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019232:	1421      	asrs	r1, r4, #16
 8019234:	ea4f 4026 	mov.w	r0, r6, asr #16
 8019238:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801923c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019240:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8019244:	f100 80d0 	bmi.w	80193e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8019248:	f10e 3bff 	add.w	fp, lr, #4294967295
 801924c:	4559      	cmp	r1, fp
 801924e:	f280 80cb 	bge.w	80193e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8019252:	2800      	cmp	r0, #0
 8019254:	f2c0 80c8 	blt.w	80193e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8019258:	f103 3bff 	add.w	fp, r3, #4294967295
 801925c:	4558      	cmp	r0, fp
 801925e:	f280 80c3 	bge.w	80193e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8019262:	fa0f fe8e 	sxth.w	lr, lr
 8019266:	fb00 110e 	mla	r1, r0, lr, r1
 801926a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801926e:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8019272:	8841      	ldrh	r1, [r0, #2]
 8019274:	f1bc 0f00 	cmp.w	ip, #0
 8019278:	d00b      	beq.n	8019292 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801927a:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801927e:	3b01      	subs	r3, #1
 8019280:	005b      	lsls	r3, r3, #1
 8019282:	3302      	adds	r3, #2
 8019284:	eb00 0e03 	add.w	lr, r0, r3
 8019288:	5ac3      	ldrh	r3, [r0, r3]
 801928a:	9308      	str	r3, [sp, #32]
 801928c:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8019290:	9309      	str	r3, [sp, #36]	; 0x24
 8019292:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8019296:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801929a:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801929e:	ea40 000b 	orr.w	r0, r0, fp
 80192a2:	fb12 f30c 	smulbb	r3, r2, ip
 80192a6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80192aa:	10db      	asrs	r3, r3, #3
 80192ac:	f1cc 0e10 	rsb	lr, ip, #16
 80192b0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80192b4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80192b8:	ebae 0e02 	sub.w	lr, lr, r2
 80192bc:	ea4b 0101 	orr.w	r1, fp, r1
 80192c0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80192c4:	4351      	muls	r1, r2
 80192c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80192c8:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80192cc:	fb0e 1e00 	mla	lr, lr, r0, r1
 80192d0:	0410      	lsls	r0, r2, #16
 80192d2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80192d6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80192da:	4310      	orrs	r0, r2
 80192dc:	9a08      	ldr	r2, [sp, #32]
 80192de:	9908      	ldr	r1, [sp, #32]
 80192e0:	0412      	lsls	r2, r2, #16
 80192e2:	fb03 e000 	mla	r0, r3, r0, lr
 80192e6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80192ea:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80192ee:	ea42 020e 	orr.w	r2, r2, lr
 80192f2:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80192f6:	fb03 0302 	mla	r3, r3, r2, r0
 80192fa:	0d5a      	lsrs	r2, r3, #21
 80192fc:	095b      	lsrs	r3, r3, #5
 80192fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019302:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019306:	4313      	orrs	r3, r2
 8019308:	f8a9 3000 	strh.w	r3, [r9]
 801930c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801930e:	441c      	add	r4, r3
 8019310:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019312:	f109 0902 	add.w	r9, r9, #2
 8019316:	441e      	add	r6, r3
 8019318:	f10a 3aff 	add.w	sl, sl, #4294967295
 801931c:	e784      	b.n	8019228 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801931e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019320:	441c      	add	r4, r3
 8019322:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019324:	3d01      	subs	r5, #1
 8019326:	441e      	add	r6, r3
 8019328:	3702      	adds	r7, #2
 801932a:	e761      	b.n	80191f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801932c:	d01d      	beq.n	801936a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801932e:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8019330:	1e6b      	subs	r3, r5, #1
 8019332:	fb00 4003 	mla	r0, r0, r3, r4
 8019336:	1400      	asrs	r0, r0, #16
 8019338:	f53f af74 	bmi.w	8019224 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801933c:	3901      	subs	r1, #1
 801933e:	4288      	cmp	r0, r1
 8019340:	f6bf af70 	bge.w	8019224 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019344:	9924      	ldr	r1, [sp, #144]	; 0x90
 8019346:	fb01 6303 	mla	r3, r1, r3, r6
 801934a:	141b      	asrs	r3, r3, #16
 801934c:	f53f af6a 	bmi.w	8019224 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019350:	3a01      	subs	r2, #1
 8019352:	4293      	cmp	r3, r2
 8019354:	f6bf af66 	bge.w	8019224 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019358:	46a9      	mov	r9, r5
 801935a:	46ba      	mov	sl, r7
 801935c:	f1b9 0f00 	cmp.w	r9, #0
 8019360:	dc5a      	bgt.n	8019418 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019362:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8019366:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801936a:	9b07      	ldr	r3, [sp, #28]
 801936c:	2b00      	cmp	r3, #0
 801936e:	f340 80b8 	ble.w	80194e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8019372:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019376:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801937a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801937e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019380:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019384:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019388:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801938c:	eef0 6a48 	vmov.f32	s13, s16
 8019390:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019394:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019398:	ee37 8a48 	vsub.f32	s16, s14, s16
 801939c:	ee16 4a90 	vmov	r4, s13
 80193a0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80193a4:	eef0 6a68 	vmov.f32	s13, s17
 80193a8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80193ac:	ee18 2a10 	vmov	r2, s16
 80193b0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80193b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80193b8:	ee18 2a90 	vmov	r2, s17
 80193bc:	9323      	str	r3, [sp, #140]	; 0x8c
 80193be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80193c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80193c4:	9324      	str	r3, [sp, #144]	; 0x90
 80193c6:	9b07      	ldr	r3, [sp, #28]
 80193c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80193ca:	3b01      	subs	r3, #1
 80193cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80193d0:	9307      	str	r3, [sp, #28]
 80193d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80193d4:	ee16 6a90 	vmov	r6, s13
 80193d8:	bf14      	ite	ne
 80193da:	461d      	movne	r5, r3
 80193dc:	4615      	moveq	r5, r2
 80193de:	eef0 8a67 	vmov.f32	s17, s15
 80193e2:	eeb0 8a47 	vmov.f32	s16, s14
 80193e6:	e6f4      	b.n	80191d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80193e8:	f111 0b01 	adds.w	fp, r1, #1
 80193ec:	d48e      	bmi.n	801930c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80193ee:	45de      	cmp	lr, fp
 80193f0:	db8c      	blt.n	801930c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80193f2:	f110 0b01 	adds.w	fp, r0, #1
 80193f6:	d489      	bmi.n	801930c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80193f8:	455b      	cmp	r3, fp
 80193fa:	db87      	blt.n	801930c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80193fc:	b21b      	sxth	r3, r3
 80193fe:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8019402:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8019406:	9300      	str	r3, [sp, #0]
 8019408:	4642      	mov	r2, r8
 801940a:	fa0f f38e 	sxth.w	r3, lr
 801940e:	4649      	mov	r1, r9
 8019410:	980d      	ldr	r0, [sp, #52]	; 0x34
 8019412:	f7ff fe2b 	bl	801906c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8019416:	e779      	b.n	801930c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019418:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801941a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801941e:	1420      	asrs	r0, r4, #16
 8019420:	1431      	asrs	r1, r6, #16
 8019422:	fb03 0101 	mla	r1, r3, r1, r0
 8019426:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801942a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801942e:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8019432:	8841      	ldrh	r1, [r0, #2]
 8019434:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019438:	f1be 0f00 	cmp.w	lr, #0
 801943c:	d00b      	beq.n	8019456 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801943e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8019442:	3b01      	subs	r3, #1
 8019444:	005b      	lsls	r3, r3, #1
 8019446:	3302      	adds	r3, #2
 8019448:	eb00 0b03 	add.w	fp, r0, r3
 801944c:	5ac3      	ldrh	r3, [r0, r3]
 801944e:	930a      	str	r3, [sp, #40]	; 0x28
 8019450:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8019454:	930b      	str	r3, [sp, #44]	; 0x2c
 8019456:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801945a:	fb12 f30e 	smulbb	r3, r2, lr
 801945e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019462:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019466:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801946a:	10db      	asrs	r3, r3, #3
 801946c:	ea40 000c 	orr.w	r0, r0, ip
 8019470:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019474:	f1ce 0c10 	rsb	ip, lr, #16
 8019478:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801947c:	ebac 0c02 	sub.w	ip, ip, r2
 8019480:	ea4b 0101 	orr.w	r1, fp, r1
 8019484:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019488:	4351      	muls	r1, r2
 801948a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801948c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8019490:	fb0c 1c00 	mla	ip, ip, r0, r1
 8019494:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8019498:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801949c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801949e:	990a      	ldr	r1, [sp, #40]	; 0x28
 80194a0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80194a4:	0412      	lsls	r2, r2, #16
 80194a6:	ea4b 0000 	orr.w	r0, fp, r0
 80194aa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80194ae:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80194b2:	fb03 c000 	mla	r0, r3, r0, ip
 80194b6:	ea42 0b0b 	orr.w	fp, r2, fp
 80194ba:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80194be:	fb03 000b 	mla	r0, r3, fp, r0
 80194c2:	0d43      	lsrs	r3, r0, #21
 80194c4:	0940      	lsrs	r0, r0, #5
 80194c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80194ca:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80194ce:	4318      	orrs	r0, r3
 80194d0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80194d2:	f82a 0b02 	strh.w	r0, [sl], #2
 80194d6:	441c      	add	r4, r3
 80194d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80194da:	f109 39ff 	add.w	r9, r9, #4294967295
 80194de:	441e      	add	r6, r3
 80194e0:	e73c      	b.n	801935c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80194e2:	b00f      	add	sp, #60	; 0x3c
 80194e4:	ecbd 8b08 	vpop	{d8-d11}
 80194e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080194ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80194ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194f0:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 80194f4:	fb04 5603 	mla	r6, r4, r3, r5
 80194f8:	2c00      	cmp	r4, #0
 80194fa:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80194fe:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8019502:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8019506:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801950a:	db36      	blt.n	801957a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 801950c:	45a6      	cmp	lr, r4
 801950e:	dd34      	ble.n	801957a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8019510:	2d00      	cmp	r5, #0
 8019512:	db30      	blt.n	8019576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8019514:	42ab      	cmp	r3, r5
 8019516:	dd2e      	ble.n	8019576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8019518:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801951c:	1c6e      	adds	r6, r5, #1
 801951e:	d42f      	bmi.n	8019580 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8019520:	42b3      	cmp	r3, r6
 8019522:	dd2d      	ble.n	8019580 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8019524:	b370      	cbz	r0, 8019584 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8019526:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801952a:	3401      	adds	r4, #1
 801952c:	d42e      	bmi.n	801958c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 801952e:	45a6      	cmp	lr, r4
 8019530:	dd2c      	ble.n	801958c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 8019532:	b377      	cbz	r7, 8019592 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 8019534:	2d00      	cmp	r5, #0
 8019536:	db27      	blt.n	8019588 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8019538:	42ab      	cmp	r3, r5
 801953a:	dd25      	ble.n	8019588 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801953c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8019540:	3501      	adds	r5, #1
 8019542:	d429      	bmi.n	8019598 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 8019544:	42ab      	cmp	r3, r5
 8019546:	dd27      	ble.n	8019598 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 8019548:	b340      	cbz	r0, 801959c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 801954a:	3301      	adds	r3, #1
 801954c:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8019550:	280f      	cmp	r0, #15
 8019552:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019556:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801955a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801955e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8019562:	d801      	bhi.n	8019568 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 8019564:	2f0f      	cmp	r7, #15
 8019566:	d91b      	bls.n	80195a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8019568:	4b8d      	ldr	r3, [pc, #564]	; (80197a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 801956a:	4a8e      	ldr	r2, [pc, #568]	; (80197a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 801956c:	488e      	ldr	r0, [pc, #568]	; (80197a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 801956e:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8019572:	f002 fa53 	bl	801ba1c <__assert_func>
 8019576:	2200      	movs	r2, #0
 8019578:	e7d0      	b.n	801951c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 801957a:	2600      	movs	r6, #0
 801957c:	4632      	mov	r2, r6
 801957e:	e7d4      	b.n	801952a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8019580:	2600      	movs	r6, #0
 8019582:	e7d2      	b.n	801952a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8019584:	4606      	mov	r6, r0
 8019586:	e7d0      	b.n	801952a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8019588:	2400      	movs	r4, #0
 801958a:	e7d9      	b.n	8019540 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 801958c:	2300      	movs	r3, #0
 801958e:	461c      	mov	r4, r3
 8019590:	e7de      	b.n	8019550 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8019592:	463b      	mov	r3, r7
 8019594:	463c      	mov	r4, r7
 8019596:	e7db      	b.n	8019550 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8019598:	2300      	movs	r3, #0
 801959a:	e7d9      	b.n	8019550 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801959c:	4603      	mov	r3, r0
 801959e:	e7d7      	b.n	8019550 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80195a0:	b280      	uxth	r0, r0
 80195a2:	b2bf      	uxth	r7, r7
 80195a4:	fb07 fe00 	mul.w	lr, r7, r0
 80195a8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80195ac:	0100      	lsls	r0, r0, #4
 80195ae:	eba0 0c0e 	sub.w	ip, r0, lr
 80195b2:	b2bf      	uxth	r7, r7
 80195b4:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80195b8:	fa1f fc8c 	uxth.w	ip, ip
 80195bc:	1bed      	subs	r5, r5, r7
 80195be:	b2ad      	uxth	r5, r5
 80195c0:	fb0a f00c 	mul.w	r0, sl, ip
 80195c4:	fb0b 0005 	mla	r0, fp, r5, r0
 80195c8:	fb07 0009 	mla	r0, r7, r9, r0
 80195cc:	fb0e 0008 	mla	r0, lr, r8, r0
 80195d0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80195d4:	9001      	str	r0, [sp, #4]
 80195d6:	2800      	cmp	r0, #0
 80195d8:	f000 80de 	beq.w	8019798 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 80195dc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80195e0:	d018      	beq.n	8019614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 80195e2:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80195e6:	fb0b f000 	mul.w	r0, fp, r0
 80195ea:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80195ee:	fb0b fb02 	mul.w	fp, fp, r2
 80195f2:	0a02      	lsrs	r2, r0, #8
 80195f4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80195f8:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80195fc:	4402      	add	r2, r0
 80195fe:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8019602:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019606:	0a12      	lsrs	r2, r2, #8
 8019608:	0a00      	lsrs	r0, r0, #8
 801960a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801960e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019612:	4302      	orrs	r2, r0
 8019614:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019618:	d01a      	beq.n	8019650 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 801961a:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801961e:	fb0a f000 	mul.w	r0, sl, r0
 8019622:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019626:	fb0a fa06 	mul.w	sl, sl, r6
 801962a:	0a06      	lsrs	r6, r0, #8
 801962c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019630:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019634:	4406      	add	r6, r0
 8019636:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801963a:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801963e:	0a36      	lsrs	r6, r6, #8
 8019640:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019644:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019648:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801964c:	ea46 060a 	orr.w	r6, r6, sl
 8019650:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019654:	d01b      	beq.n	801968e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 8019656:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801965a:	fb09 fa0a 	mul.w	sl, r9, sl
 801965e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019662:	fb09 f004 	mul.w	r0, r9, r4
 8019666:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801966a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801966e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019672:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8019676:	4454      	add	r4, sl
 8019678:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801967c:	0a24      	lsrs	r4, r4, #8
 801967e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019682:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019686:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801968a:	ea44 0409 	orr.w	r4, r4, r9
 801968e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019692:	d01b      	beq.n	80196cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 8019694:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8019698:	fb08 f909 	mul.w	r9, r8, r9
 801969c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80196a0:	fb08 f003 	mul.w	r0, r8, r3
 80196a4:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80196a8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80196ac:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80196b0:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80196b4:	444b      	add	r3, r9
 80196b6:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 80196ba:	0a1b      	lsrs	r3, r3, #8
 80196bc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80196c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80196c4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80196c8:	ea43 0308 	orr.w	r3, r3, r8
 80196cc:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80196d0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80196d4:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 80196d8:	fb0c f808 	mul.w	r8, ip, r8
 80196dc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80196e0:	fb0c f606 	mul.w	r6, ip, r6
 80196e4:	fb05 8909 	mla	r9, r5, r9, r8
 80196e8:	fb05 6502 	mla	r5, r5, r2, r6
 80196ec:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80196f0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80196f4:	9a01      	ldr	r2, [sp, #4]
 80196f6:	8808      	ldrh	r0, [r1, #0]
 80196f8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80196fc:	fb07 9908 	mla	r9, r7, r8, r9
 8019700:	fb07 5704 	mla	r7, r7, r4, r5
 8019704:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8019708:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801970c:	b2b6      	uxth	r6, r6
 801970e:	fb0e 9808 	mla	r8, lr, r8, r9
 8019712:	fb0e 7e03 	mla	lr, lr, r3, r7
 8019716:	4372      	muls	r2, r6
 8019718:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801971c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019720:	1c53      	adds	r3, r2, #1
 8019722:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8019726:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801972a:	ea48 0e0e 	orr.w	lr, r8, lr
 801972e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019732:	1205      	asrs	r5, r0, #8
 8019734:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8019738:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801973c:	b2db      	uxtb	r3, r3
 801973e:	fb12 f206 	smulbb	r2, r2, r6
 8019742:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019746:	fb05 2503 	mla	r5, r5, r3, r2
 801974a:	f3ce 2407 	ubfx	r4, lr, #8, #8
 801974e:	10c2      	asrs	r2, r0, #3
 8019750:	fa5f fe8e 	uxtb.w	lr, lr
 8019754:	00c0      	lsls	r0, r0, #3
 8019756:	fb14 f406 	smulbb	r4, r4, r6
 801975a:	b2c0      	uxtb	r0, r0
 801975c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019760:	fb1e fe06 	smulbb	lr, lr, r6
 8019764:	fb02 4203 	mla	r2, r2, r3, r4
 8019768:	b2ad      	uxth	r5, r5
 801976a:	fb00 e303 	mla	r3, r0, r3, lr
 801976e:	b298      	uxth	r0, r3
 8019770:	b294      	uxth	r4, r2
 8019772:	1c6b      	adds	r3, r5, #1
 8019774:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019778:	1c62      	adds	r2, r4, #1
 801977a:	1c43      	adds	r3, r0, #1
 801977c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019780:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019784:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019788:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801978c:	0952      	lsrs	r2, r2, #5
 801978e:	432b      	orrs	r3, r5
 8019790:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019794:	4313      	orrs	r3, r2
 8019796:	800b      	strh	r3, [r1, #0]
 8019798:	b003      	add	sp, #12
 801979a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801979e:	bf00      	nop
 80197a0:	0802050e 	.word	0x0802050e
 80197a4:	08020ade 	.word	0x08020ade
 80197a8:	08020592 	.word	0x08020592

080197ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80197ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197b0:	ed2d 8b08 	vpush	{d8-d11}
 80197b4:	b09d      	sub	sp, #116	; 0x74
 80197b6:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 80197ba:	9219      	str	r2, [sp, #100]	; 0x64
 80197bc:	9307      	str	r3, [sp, #28]
 80197be:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 80197c0:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80197c4:	931a      	str	r3, [sp, #104]	; 0x68
 80197c6:	9117      	str	r1, [sp, #92]	; 0x5c
 80197c8:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 80197cc:	901b      	str	r0, [sp, #108]	; 0x6c
 80197ce:	6850      	ldr	r0, [r2, #4]
 80197d0:	6812      	ldr	r2, [r2, #0]
 80197d2:	fb00 1303 	mla	r3, r0, r3, r1
 80197d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80197da:	930a      	str	r3, [sp, #40]	; 0x28
 80197dc:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80197de:	681b      	ldr	r3, [r3, #0]
 80197e0:	9310      	str	r3, [sp, #64]	; 0x40
 80197e2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80197e6:	930b      	str	r3, [sp, #44]	; 0x2c
 80197e8:	eeb0 aa40 	vmov.f32	s20, s0
 80197ec:	eef0 9a60 	vmov.f32	s19, s1
 80197f0:	eeb0 9a41 	vmov.f32	s18, s2
 80197f4:	eeb0 8a62 	vmov.f32	s16, s5
 80197f8:	eef0 8a43 	vmov.f32	s17, s6
 80197fc:	eef0 ba44 	vmov.f32	s23, s8
 8019800:	eeb0 ba64 	vmov.f32	s22, s9
 8019804:	eef0 aa45 	vmov.f32	s21, s10
 8019808:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801980a:	2b00      	cmp	r3, #0
 801980c:	dc03      	bgt.n	8019816 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801980e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019810:	2b00      	cmp	r3, #0
 8019812:	f340 8375 	ble.w	8019f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8019816:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019818:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801981c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019820:	1e48      	subs	r0, r1, #1
 8019822:	1e57      	subs	r7, r2, #1
 8019824:	9b07      	ldr	r3, [sp, #28]
 8019826:	2b00      	cmp	r3, #0
 8019828:	f340 818e 	ble.w	8019b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801982c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019830:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019834:	d406      	bmi.n	8019844 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019836:	4584      	cmp	ip, r0
 8019838:	da04      	bge.n	8019844 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801983a:	2b00      	cmp	r3, #0
 801983c:	db02      	blt.n	8019844 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801983e:	42bb      	cmp	r3, r7
 8019840:	f2c0 8183 	blt.w	8019b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8019844:	f11c 0c01 	adds.w	ip, ip, #1
 8019848:	f100 8173 	bmi.w	8019b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801984c:	4561      	cmp	r1, ip
 801984e:	f2c0 8170 	blt.w	8019b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019852:	3301      	adds	r3, #1
 8019854:	f100 816d 	bmi.w	8019b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019858:	429a      	cmp	r2, r3
 801985a:	f2c0 816a 	blt.w	8019b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801985e:	9b07      	ldr	r3, [sp, #28]
 8019860:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019862:	9318      	str	r3, [sp, #96]	; 0x60
 8019864:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019866:	2b00      	cmp	r3, #0
 8019868:	f340 818c 	ble.w	8019b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 801986c:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801986e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019870:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019874:	689b      	ldr	r3, [r3, #8]
 8019876:	1422      	asrs	r2, r4, #16
 8019878:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801987c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019880:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019884:	f100 81cd 	bmi.w	8019c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019888:	f103 38ff 	add.w	r8, r3, #4294967295
 801988c:	4542      	cmp	r2, r8
 801988e:	f280 81c8 	bge.w	8019c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019892:	f1bc 0f00 	cmp.w	ip, #0
 8019896:	f2c0 81c4 	blt.w	8019c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801989a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801989e:	45c4      	cmp	ip, r8
 80198a0:	f280 81bf 	bge.w	8019c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80198a4:	b21b      	sxth	r3, r3
 80198a6:	fb0c 2203 	mla	r2, ip, r3, r2
 80198aa:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80198ac:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80198b0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80198b4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80198b8:	2800      	cmp	r0, #0
 80198ba:	f000 81a9 	beq.w	8019c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 80198be:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80198c2:	950c      	str	r5, [sp, #48]	; 0x30
 80198c4:	0e2d      	lsrs	r5, r5, #24
 80198c6:	9513      	str	r5, [sp, #76]	; 0x4c
 80198c8:	b181      	cbz	r1, 80198ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80198ca:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80198ce:	3b01      	subs	r3, #1
 80198d0:	009b      	lsls	r3, r3, #2
 80198d2:	3304      	adds	r3, #4
 80198d4:	eb08 0c03 	add.w	ip, r8, r3
 80198d8:	f858 3003 	ldr.w	r3, [r8, r3]
 80198dc:	9308      	str	r3, [sp, #32]
 80198de:	0e1b      	lsrs	r3, r3, #24
 80198e0:	9311      	str	r3, [sp, #68]	; 0x44
 80198e2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80198e6:	930d      	str	r3, [sp, #52]	; 0x34
 80198e8:	0e1b      	lsrs	r3, r3, #24
 80198ea:	9314      	str	r3, [sp, #80]	; 0x50
 80198ec:	b280      	uxth	r0, r0
 80198ee:	b289      	uxth	r1, r1
 80198f0:	fb00 f901 	mul.w	r9, r0, r1
 80198f4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80198f8:	0100      	lsls	r0, r0, #4
 80198fa:	eba0 0809 	sub.w	r8, r0, r9
 80198fe:	b289      	uxth	r1, r1
 8019900:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019904:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019906:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019908:	fa1f f888 	uxth.w	r8, r8
 801990c:	1a5b      	subs	r3, r3, r1
 801990e:	b29b      	uxth	r3, r3
 8019910:	fb08 f000 	mul.w	r0, r8, r0
 8019914:	fb03 000e 	mla	r0, r3, lr, r0
 8019918:	fb01 0005 	mla	r0, r1, r5, r0
 801991c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801991e:	fb09 0005 	mla	r0, r9, r5, r0
 8019922:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019926:	2800      	cmp	r0, #0
 8019928:	f000 80fa 	beq.w	8019b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801992c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019930:	d01b      	beq.n	801996a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8019932:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8019936:	fb0e fa0a 	mul.w	sl, lr, sl
 801993a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801993e:	fb0e fe02 	mul.w	lr, lr, r2
 8019942:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8019946:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801994a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801994e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019952:	4452      	add	r2, sl
 8019954:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019958:	0a12      	lsrs	r2, r2, #8
 801995a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801995e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019962:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019966:	ea42 020c 	orr.w	r2, r2, ip
 801996a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801996c:	2dff      	cmp	r5, #255	; 0xff
 801996e:	d021      	beq.n	80199b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8019970:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019972:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019976:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019978:	fb05 fb0b 	mul.w	fp, r5, fp
 801997c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801997e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019982:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019984:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019988:	fb05 fa0a 	mul.w	sl, r5, sl
 801998c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019990:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019994:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019998:	44de      	add	lr, fp
 801999a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801999e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80199a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80199a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80199aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80199ae:	ea4e 050a 	orr.w	r5, lr, sl
 80199b2:	950c      	str	r5, [sp, #48]	; 0x30
 80199b4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80199b6:	2dff      	cmp	r5, #255	; 0xff
 80199b8:	d021      	beq.n	80199fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80199ba:	9d08      	ldr	r5, [sp, #32]
 80199bc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80199c0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80199c2:	fb05 fb0b 	mul.w	fp, r5, fp
 80199c6:	9d08      	ldr	r5, [sp, #32]
 80199c8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80199cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80199ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80199d2:	fb05 fa0a 	mul.w	sl, r5, sl
 80199d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80199da:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80199de:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80199e2:	44de      	add	lr, fp
 80199e4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80199e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80199ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80199f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80199f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80199f8:	ea4e 050a 	orr.w	r5, lr, sl
 80199fc:	9508      	str	r5, [sp, #32]
 80199fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019a00:	2dff      	cmp	r5, #255	; 0xff
 8019a02:	d021      	beq.n	8019a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8019a04:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019a06:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019a0a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019a0c:	fb05 fb0b 	mul.w	fp, r5, fp
 8019a10:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019a12:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019a16:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019a18:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019a1c:	fb05 fa0a 	mul.w	sl, r5, sl
 8019a20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a24:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019a28:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019a2c:	44de      	add	lr, fp
 8019a2e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019a32:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019a36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019a3a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a3e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019a42:	ea4e 050a 	orr.w	r5, lr, sl
 8019a46:	950d      	str	r5, [sp, #52]	; 0x34
 8019a48:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019a4a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019a4e:	9d08      	ldr	r5, [sp, #32]
 8019a50:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8019a54:	fb08 fc0c 	mul.w	ip, r8, ip
 8019a58:	fb03 cc0e 	mla	ip, r3, lr, ip
 8019a5c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019a60:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019a62:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019a66:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019a6a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019a6c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019a70:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019a74:	fb08 f80e 	mul.w	r8, r8, lr
 8019a78:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019a7c:	fb03 8202 	mla	r2, r3, r2, r8
 8019a80:	9b08      	ldr	r3, [sp, #32]
 8019a82:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019a84:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8019a88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019a8a:	fb01 220a 	mla	r2, r1, sl, r2
 8019a8e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8019a92:	fb09 2901 	mla	r9, r9, r1, r2
 8019a96:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019a98:	883b      	ldrh	r3, [r7, #0]
 8019a9a:	4342      	muls	r2, r0
 8019a9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019aa0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019aa4:	1c50      	adds	r0, r2, #1
 8019aa6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019aaa:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019aae:	ea4c 0c09 	orr.w	ip, ip, r9
 8019ab2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019ab6:	1219      	asrs	r1, r3, #8
 8019ab8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8019abc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019ac0:	b2c0      	uxtb	r0, r0
 8019ac2:	fb12 f205 	smulbb	r2, r2, r5
 8019ac6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019aca:	fb01 2100 	mla	r1, r1, r0, r2
 8019ace:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8019ad2:	10da      	asrs	r2, r3, #3
 8019ad4:	fa5f fc8c 	uxtb.w	ip, ip
 8019ad8:	00db      	lsls	r3, r3, #3
 8019ada:	fb1c fc05 	smulbb	ip, ip, r5
 8019ade:	b2db      	uxtb	r3, r3
 8019ae0:	b289      	uxth	r1, r1
 8019ae2:	fb03 c300 	mla	r3, r3, r0, ip
 8019ae6:	fa1f fc83 	uxth.w	ip, r3
 8019aea:	1c4b      	adds	r3, r1, #1
 8019aec:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019af0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019af4:	fb1e fe05 	smulbb	lr, lr, r5
 8019af8:	f10c 0301 	add.w	r3, ip, #1
 8019afc:	fb02 e200 	mla	r2, r2, r0, lr
 8019b00:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8019b04:	b292      	uxth	r2, r2
 8019b06:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8019b0a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019b0e:	430b      	orrs	r3, r1
 8019b10:	1c51      	adds	r1, r2, #1
 8019b12:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019b16:	0952      	lsrs	r2, r2, #5
 8019b18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019b1c:	4313      	orrs	r3, r2
 8019b1e:	803b      	strh	r3, [r7, #0]
 8019b20:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019b22:	441c      	add	r4, r3
 8019b24:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019b26:	441e      	add	r6, r3
 8019b28:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019b2a:	3b01      	subs	r3, #1
 8019b2c:	3702      	adds	r7, #2
 8019b2e:	9318      	str	r3, [sp, #96]	; 0x60
 8019b30:	e698      	b.n	8019864 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019b32:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019b34:	441c      	add	r4, r3
 8019b36:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019b38:	441e      	add	r6, r3
 8019b3a:	9b07      	ldr	r3, [sp, #28]
 8019b3c:	3b01      	subs	r3, #1
 8019b3e:	9307      	str	r3, [sp, #28]
 8019b40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019b42:	3302      	adds	r3, #2
 8019b44:	930a      	str	r3, [sp, #40]	; 0x28
 8019b46:	e66d      	b.n	8019824 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019b48:	d023      	beq.n	8019b92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8019b4a:	9b07      	ldr	r3, [sp, #28]
 8019b4c:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8019b4e:	3b01      	subs	r3, #1
 8019b50:	fb00 4003 	mla	r0, r0, r3, r4
 8019b54:	1400      	asrs	r0, r0, #16
 8019b56:	f53f ae82 	bmi.w	801985e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019b5a:	3901      	subs	r1, #1
 8019b5c:	4288      	cmp	r0, r1
 8019b5e:	f6bf ae7e 	bge.w	801985e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019b62:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8019b64:	fb01 6303 	mla	r3, r1, r3, r6
 8019b68:	141b      	asrs	r3, r3, #16
 8019b6a:	f53f ae78 	bmi.w	801985e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019b6e:	3a01      	subs	r2, #1
 8019b70:	4293      	cmp	r3, r2
 8019b72:	f6bf ae74 	bge.w	801985e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019b76:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019b7a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8019b7e:	f1bb 0f00 	cmp.w	fp, #0
 8019b82:	dc6c      	bgt.n	8019c5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8019b84:	9b07      	ldr	r3, [sp, #28]
 8019b86:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019b8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019b8c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019b90:	930a      	str	r3, [sp, #40]	; 0x28
 8019b92:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019b94:	2b00      	cmp	r3, #0
 8019b96:	f340 81b3 	ble.w	8019f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8019b9a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019b9e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019ba2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019ba6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019ba8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019bac:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019bb0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019bb4:	eef0 6a48 	vmov.f32	s13, s16
 8019bb8:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019bbc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019bc0:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019bc4:	ee16 4a90 	vmov	r4, s13
 8019bc8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019bcc:	eef0 6a68 	vmov.f32	s13, s17
 8019bd0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019bd4:	ee18 2a10 	vmov	r2, s16
 8019bd8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019bdc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019be0:	ee18 2a90 	vmov	r2, s17
 8019be4:	9331      	str	r3, [sp, #196]	; 0xc4
 8019be6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019be8:	fb92 f3f3 	sdiv	r3, r2, r3
 8019bec:	9332      	str	r3, [sp, #200]	; 0xc8
 8019bee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019bf0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8019bf2:	3b01      	subs	r3, #1
 8019bf4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019bf8:	9317      	str	r3, [sp, #92]	; 0x5c
 8019bfa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019bfc:	bf08      	it	eq
 8019bfe:	4613      	moveq	r3, r2
 8019c00:	ee16 6a90 	vmov	r6, s13
 8019c04:	9307      	str	r3, [sp, #28]
 8019c06:	eef0 8a67 	vmov.f32	s17, s15
 8019c0a:	eeb0 8a47 	vmov.f32	s16, s14
 8019c0e:	e5fb      	b.n	8019808 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019c10:	2900      	cmp	r1, #0
 8019c12:	f43f ae6b 	beq.w	80198ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019c16:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8019c1a:	9308      	str	r3, [sp, #32]
 8019c1c:	0e1b      	lsrs	r3, r3, #24
 8019c1e:	9311      	str	r3, [sp, #68]	; 0x44
 8019c20:	e664      	b.n	80198ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019c22:	f112 0801 	adds.w	r8, r2, #1
 8019c26:	f53f af7b 	bmi.w	8019b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019c2a:	4543      	cmp	r3, r8
 8019c2c:	f6ff af78 	blt.w	8019b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019c30:	f11c 0801 	adds.w	r8, ip, #1
 8019c34:	f53f af74 	bmi.w	8019b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019c38:	45c6      	cmp	lr, r8
 8019c3a:	f6ff af71 	blt.w	8019b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019c3e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8019c40:	9201      	str	r2, [sp, #4]
 8019c42:	fa0f f28e 	sxth.w	r2, lr
 8019c46:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8019c4a:	e9cd c002 	strd	ip, r0, [sp, #8]
 8019c4e:	9200      	str	r2, [sp, #0]
 8019c50:	b21b      	sxth	r3, r3
 8019c52:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019c54:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8019c56:	4639      	mov	r1, r7
 8019c58:	f7ff fc48 	bl	80194ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8019c5c:	e760      	b.n	8019b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019c5e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019c60:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019c62:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019c66:	1427      	asrs	r7, r4, #16
 8019c68:	1433      	asrs	r3, r6, #16
 8019c6a:	fb01 7303 	mla	r3, r1, r3, r7
 8019c6e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8019c72:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8019c76:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019c7a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019c7e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019c82:	2a00      	cmp	r2, #0
 8019c84:	f000 8133 	beq.w	8019eee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8019c88:	687d      	ldr	r5, [r7, #4]
 8019c8a:	950e      	str	r5, [sp, #56]	; 0x38
 8019c8c:	0e2d      	lsrs	r5, r5, #24
 8019c8e:	9515      	str	r5, [sp, #84]	; 0x54
 8019c90:	b178      	cbz	r0, 8019cb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019c92:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8019c96:	3901      	subs	r1, #1
 8019c98:	0089      	lsls	r1, r1, #2
 8019c9a:	3104      	adds	r1, #4
 8019c9c:	eb07 0e01 	add.w	lr, r7, r1
 8019ca0:	5879      	ldr	r1, [r7, r1]
 8019ca2:	9109      	str	r1, [sp, #36]	; 0x24
 8019ca4:	0e09      	lsrs	r1, r1, #24
 8019ca6:	9112      	str	r1, [sp, #72]	; 0x48
 8019ca8:	f8de 1004 	ldr.w	r1, [lr, #4]
 8019cac:	910f      	str	r1, [sp, #60]	; 0x3c
 8019cae:	0e09      	lsrs	r1, r1, #24
 8019cb0:	9116      	str	r1, [sp, #88]	; 0x58
 8019cb2:	b292      	uxth	r2, r2
 8019cb4:	b280      	uxth	r0, r0
 8019cb6:	fb02 f800 	mul.w	r8, r2, r0
 8019cba:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8019cbe:	0112      	lsls	r2, r2, #4
 8019cc0:	eba2 0e08 	sub.w	lr, r2, r8
 8019cc4:	b280      	uxth	r0, r0
 8019cc6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019cca:	9915      	ldr	r1, [sp, #84]	; 0x54
 8019ccc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019cce:	fa1f fe8e 	uxth.w	lr, lr
 8019cd2:	1a12      	subs	r2, r2, r0
 8019cd4:	b292      	uxth	r2, r2
 8019cd6:	fb0e f101 	mul.w	r1, lr, r1
 8019cda:	fb02 110c 	mla	r1, r2, ip, r1
 8019cde:	fb00 1105 	mla	r1, r0, r5, r1
 8019ce2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019ce4:	fb08 1105 	mla	r1, r8, r5, r1
 8019ce8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019cec:	2900      	cmp	r1, #0
 8019cee:	f000 80f5 	beq.w	8019edc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8019cf2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019cf6:	d019      	beq.n	8019d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8019cf8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019cfc:	fb0c fa0a 	mul.w	sl, ip, sl
 8019d00:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019d04:	fb0c fc03 	mul.w	ip, ip, r3
 8019d08:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019d0c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019d10:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019d14:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019d18:	4453      	add	r3, sl
 8019d1a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019d1e:	0a1b      	lsrs	r3, r3, #8
 8019d20:	0a3f      	lsrs	r7, r7, #8
 8019d22:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019d26:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019d2a:	433b      	orrs	r3, r7
 8019d2c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019d2e:	2dff      	cmp	r5, #255	; 0xff
 8019d30:	d020      	beq.n	8019d74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8019d32:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019d34:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019d38:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019d3a:	436f      	muls	r7, r5
 8019d3c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019d3e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019d42:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019d44:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019d48:	fb05 fa0a 	mul.w	sl, r5, sl
 8019d4c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019d50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019d54:	44bc      	add	ip, r7
 8019d56:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019d5a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019d5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019d62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019d66:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019d6a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019d6e:	ea4c 050a 	orr.w	r5, ip, sl
 8019d72:	950e      	str	r5, [sp, #56]	; 0x38
 8019d74:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d76:	2dff      	cmp	r5, #255	; 0xff
 8019d78:	d020      	beq.n	8019dbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8019d7a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019d7c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019d80:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d82:	436f      	muls	r7, r5
 8019d84:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019d86:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019d8a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d8c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019d90:	fb05 fa0a 	mul.w	sl, r5, sl
 8019d94:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019d98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019d9c:	44bc      	add	ip, r7
 8019d9e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019da2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019da6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019daa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019dae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019db2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019db6:	ea4c 050a 	orr.w	r5, ip, sl
 8019dba:	9509      	str	r5, [sp, #36]	; 0x24
 8019dbc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019dbe:	2dff      	cmp	r5, #255	; 0xff
 8019dc0:	d020      	beq.n	8019e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8019dc2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019dc4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019dc8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019dca:	436f      	muls	r7, r5
 8019dcc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019dce:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019dd2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019dd4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019dd8:	fb05 fa0a 	mul.w	sl, r5, sl
 8019ddc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019de0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019de4:	44bc      	add	ip, r7
 8019de6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019dea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019dee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019df2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019df6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019dfa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019dfe:	ea4c 050a 	orr.w	r5, ip, sl
 8019e02:	950f      	str	r5, [sp, #60]	; 0x3c
 8019e04:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019e06:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019e0a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019e0c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019e10:	fb0e f707 	mul.w	r7, lr, r7
 8019e14:	fb02 770c 	mla	r7, r2, ip, r7
 8019e18:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019e1c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019e1e:	fb00 770c 	mla	r7, r0, ip, r7
 8019e22:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019e26:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019e28:	fb08 770c 	mla	r7, r8, ip, r7
 8019e2c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8019e30:	fb0e fe0c 	mul.w	lr, lr, ip
 8019e34:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019e38:	fb02 e303 	mla	r3, r2, r3, lr
 8019e3c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019e3e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019e40:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019e44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019e46:	fb00 330a 	mla	r3, r0, sl, r3
 8019e4a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8019e4e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019e52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019e54:	f8b9 0000 	ldrh.w	r0, [r9]
 8019e58:	4359      	muls	r1, r3
 8019e5a:	0a3f      	lsrs	r7, r7, #8
 8019e5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019e60:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019e64:	1c4b      	adds	r3, r1, #1
 8019e66:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019e6a:	ea47 070c 	orr.w	r7, r7, ip
 8019e6e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019e72:	1202      	asrs	r2, r0, #8
 8019e74:	0c3b      	lsrs	r3, r7, #16
 8019e76:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019e7a:	b2c9      	uxtb	r1, r1
 8019e7c:	fb13 f305 	smulbb	r3, r3, r5
 8019e80:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019e84:	fb02 3201 	mla	r2, r2, r1, r3
 8019e88:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8019e8c:	10c3      	asrs	r3, r0, #3
 8019e8e:	b2ff      	uxtb	r7, r7
 8019e90:	00c0      	lsls	r0, r0, #3
 8019e92:	b2c0      	uxtb	r0, r0
 8019e94:	fb17 f705 	smulbb	r7, r7, r5
 8019e98:	fb00 7001 	mla	r0, r0, r1, r7
 8019e9c:	b292      	uxth	r2, r2
 8019e9e:	fb1c fc05 	smulbb	ip, ip, r5
 8019ea2:	b280      	uxth	r0, r0
 8019ea4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019ea8:	fb03 c301 	mla	r3, r3, r1, ip
 8019eac:	1c51      	adds	r1, r2, #1
 8019eae:	f100 0c01 	add.w	ip, r0, #1
 8019eb2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019eb6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8019eba:	b29b      	uxth	r3, r3
 8019ebc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019ec0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019ec4:	ea4c 0202 	orr.w	r2, ip, r2
 8019ec8:	f103 0c01 	add.w	ip, r3, #1
 8019ecc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8019ed0:	095b      	lsrs	r3, r3, #5
 8019ed2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019ed6:	431a      	orrs	r2, r3
 8019ed8:	f8a9 2000 	strh.w	r2, [r9]
 8019edc:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019ede:	441c      	add	r4, r3
 8019ee0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019ee2:	f109 0902 	add.w	r9, r9, #2
 8019ee6:	441e      	add	r6, r3
 8019ee8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019eec:	e647      	b.n	8019b7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 8019eee:	2800      	cmp	r0, #0
 8019ef0:	f43f aedf 	beq.w	8019cb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019ef4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8019ef8:	9109      	str	r1, [sp, #36]	; 0x24
 8019efa:	0e09      	lsrs	r1, r1, #24
 8019efc:	9112      	str	r1, [sp, #72]	; 0x48
 8019efe:	e6d8      	b.n	8019cb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019f00:	b01d      	add	sp, #116	; 0x74
 8019f02:	ecbd 8b08 	vpop	{d8-d11}
 8019f06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019f0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8019f0c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f10:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 8019f14:	fb04 5603 	mla	r6, r4, r3, r5
 8019f18:	2c00      	cmp	r4, #0
 8019f1a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8019f1e:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8019f22:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8019f26:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8019f2a:	db37      	blt.n	8019f9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8019f2c:	45a6      	cmp	lr, r4
 8019f2e:	dd35      	ble.n	8019f9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8019f30:	2d00      	cmp	r5, #0
 8019f32:	db31      	blt.n	8019f98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8019f34:	42ab      	cmp	r3, r5
 8019f36:	dd2f      	ble.n	8019f98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8019f38:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8019f3c:	1c6e      	adds	r6, r5, #1
 8019f3e:	d430      	bmi.n	8019fa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8019f40:	42b3      	cmp	r3, r6
 8019f42:	dd2e      	ble.n	8019fa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8019f44:	b378      	cbz	r0, 8019fa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 8019f46:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8019f4a:	3401      	adds	r4, #1
 8019f4c:	d42f      	bmi.n	8019fae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8019f4e:	45a6      	cmp	lr, r4
 8019f50:	dd2d      	ble.n	8019fae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8019f52:	b37f      	cbz	r7, 8019fb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 8019f54:	2d00      	cmp	r5, #0
 8019f56:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 8019f5a:	db26      	blt.n	8019faa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8019f5c:	42ab      	cmp	r3, r5
 8019f5e:	dd24      	ble.n	8019faa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8019f60:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8019f64:	3501      	adds	r5, #1
 8019f66:	d428      	bmi.n	8019fba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8019f68:	42ab      	cmp	r3, r5
 8019f6a:	dd26      	ble.n	8019fba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8019f6c:	b338      	cbz	r0, 8019fbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 8019f6e:	f8de 3004 	ldr.w	r3, [lr, #4]
 8019f72:	280f      	cmp	r0, #15
 8019f74:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019f78:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8019f7c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019f80:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8019f84:	d801      	bhi.n	8019f8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 8019f86:	2f0f      	cmp	r7, #15
 8019f88:	d91b      	bls.n	8019fc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 8019f8a:	4b87      	ldr	r3, [pc, #540]	; (801a1a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 8019f8c:	4a87      	ldr	r2, [pc, #540]	; (801a1ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 8019f8e:	4888      	ldr	r0, [pc, #544]	; (801a1b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8019f90:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8019f94:	f001 fd42 	bl	801ba1c <__assert_func>
 8019f98:	2200      	movs	r2, #0
 8019f9a:	e7cf      	b.n	8019f3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 8019f9c:	2600      	movs	r6, #0
 8019f9e:	4632      	mov	r2, r6
 8019fa0:	e7d3      	b.n	8019f4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8019fa2:	2600      	movs	r6, #0
 8019fa4:	e7d1      	b.n	8019f4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8019fa6:	4606      	mov	r6, r0
 8019fa8:	e7cf      	b.n	8019f4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8019faa:	2400      	movs	r4, #0
 8019fac:	e7da      	b.n	8019f64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 8019fae:	2300      	movs	r3, #0
 8019fb0:	461c      	mov	r4, r3
 8019fb2:	e7de      	b.n	8019f72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8019fb4:	463b      	mov	r3, r7
 8019fb6:	463c      	mov	r4, r7
 8019fb8:	e7db      	b.n	8019f72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8019fba:	2300      	movs	r3, #0
 8019fbc:	e7d9      	b.n	8019f72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8019fbe:	4603      	mov	r3, r0
 8019fc0:	e7d7      	b.n	8019f72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8019fc2:	b280      	uxth	r0, r0
 8019fc4:	b2bf      	uxth	r7, r7
 8019fc6:	fb07 fe00 	mul.w	lr, r7, r0
 8019fca:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019fce:	0100      	lsls	r0, r0, #4
 8019fd0:	eba0 0c0e 	sub.w	ip, r0, lr
 8019fd4:	b2bf      	uxth	r7, r7
 8019fd6:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8019fda:	fa1f fc8c 	uxth.w	ip, ip
 8019fde:	1bed      	subs	r5, r5, r7
 8019fe0:	b2ad      	uxth	r5, r5
 8019fe2:	fb0c f00a 	mul.w	r0, ip, sl
 8019fe6:	fb0b 0005 	mla	r0, fp, r5, r0
 8019fea:	fb07 0009 	mla	r0, r7, r9, r0
 8019fee:	fb0e 0008 	mla	r0, lr, r8, r0
 8019ff2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019ff6:	9001      	str	r0, [sp, #4]
 8019ff8:	2800      	cmp	r0, #0
 8019ffa:	f000 80d1 	beq.w	801a1a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 8019ffe:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a002:	d018      	beq.n	801a036 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 801a004:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a008:	fb0b f000 	mul.w	r0, fp, r0
 801a00c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a010:	fb0b fb02 	mul.w	fp, fp, r2
 801a014:	0a02      	lsrs	r2, r0, #8
 801a016:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a01a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a01e:	4402      	add	r2, r0
 801a020:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801a024:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801a028:	0a12      	lsrs	r2, r2, #8
 801a02a:	0a00      	lsrs	r0, r0, #8
 801a02c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a030:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a034:	4302      	orrs	r2, r0
 801a036:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a03a:	d01a      	beq.n	801a072 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 801a03c:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801a040:	fb0a f000 	mul.w	r0, sl, r0
 801a044:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a048:	fb0a fa06 	mul.w	sl, sl, r6
 801a04c:	0a06      	lsrs	r6, r0, #8
 801a04e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a052:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a056:	4406      	add	r6, r0
 801a058:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801a05c:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801a060:	0a36      	lsrs	r6, r6, #8
 801a062:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a066:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a06a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a06e:	ea46 060a 	orr.w	r6, r6, sl
 801a072:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a076:	d01b      	beq.n	801a0b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 801a078:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801a07c:	fb09 fa0a 	mul.w	sl, r9, sl
 801a080:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a084:	fb09 f004 	mul.w	r0, r9, r4
 801a088:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801a08c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a090:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a094:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801a098:	4454      	add	r4, sl
 801a09a:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801a09e:	0a24      	lsrs	r4, r4, #8
 801a0a0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a0a4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a0a8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a0ac:	ea44 0409 	orr.w	r4, r4, r9
 801a0b0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a0b4:	d01b      	beq.n	801a0ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 801a0b6:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801a0ba:	fb08 f909 	mul.w	r9, r8, r9
 801a0be:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a0c2:	fb08 f003 	mul.w	r0, r8, r3
 801a0c6:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801a0ca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a0ce:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801a0d2:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801a0d6:	444b      	add	r3, r9
 801a0d8:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801a0dc:	0a1b      	lsrs	r3, r3, #8
 801a0de:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a0e2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a0e6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a0ea:	ea43 0308 	orr.w	r3, r3, r8
 801a0ee:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a0f2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a0f6:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801a0fa:	fb0c f808 	mul.w	r8, ip, r8
 801a0fe:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a102:	fb0c f606 	mul.w	r6, ip, r6
 801a106:	fb05 8909 	mla	r9, r5, r9, r8
 801a10a:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801a10e:	fb05 6502 	mla	r5, r5, r2, r6
 801a112:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a116:	fb07 9908 	mla	r9, r7, r8, r9
 801a11a:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801a11e:	fb07 5704 	mla	r7, r7, r4, r5
 801a122:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a126:	8808      	ldrh	r0, [r1, #0]
 801a128:	fb0e 9808 	mla	r8, lr, r8, r9
 801a12c:	fb0e 7e03 	mla	lr, lr, r3, r7
 801a130:	9b01      	ldr	r3, [sp, #4]
 801a132:	43da      	mvns	r2, r3
 801a134:	1203      	asrs	r3, r0, #8
 801a136:	b2d2      	uxtb	r2, r2
 801a138:	10c4      	asrs	r4, r0, #3
 801a13a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a13e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a142:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801a146:	00c0      	lsls	r0, r0, #3
 801a148:	4353      	muls	r3, r2
 801a14a:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801a14e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a152:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801a156:	b2c0      	uxtb	r0, r0
 801a158:	ea48 0e0e 	orr.w	lr, r8, lr
 801a15c:	4354      	muls	r4, r2
 801a15e:	4350      	muls	r0, r2
 801a160:	1c5a      	adds	r2, r3, #1
 801a162:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a166:	ea4f 431e 	mov.w	r3, lr, lsr #16
 801a16a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a16e:	1c62      	adds	r2, r4, #1
 801a170:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801a174:	ea4f 221e 	mov.w	r2, lr, lsr #8
 801a178:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a17c:	021b      	lsls	r3, r3, #8
 801a17e:	00d2      	lsls	r2, r2, #3
 801a180:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a184:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801a188:	4313      	orrs	r3, r2
 801a18a:	1c42      	adds	r2, r0, #1
 801a18c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a190:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 801a194:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 801a198:	ea4e 0e03 	orr.w	lr, lr, r3
 801a19c:	f8a1 e000 	strh.w	lr, [r1]
 801a1a0:	b003      	add	sp, #12
 801a1a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1a6:	bf00      	nop
 801a1a8:	0802050e 	.word	0x0802050e
 801a1ac:	08020ade 	.word	0x08020ade
 801a1b0:	08020592 	.word	0x08020592

0801a1b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a1b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1b8:	ed2d 8b08 	vpush	{d8-d11}
 801a1bc:	b09b      	sub	sp, #108	; 0x6c
 801a1be:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801a1c2:	9218      	str	r2, [sp, #96]	; 0x60
 801a1c4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801a1c6:	9116      	str	r1, [sp, #88]	; 0x58
 801a1c8:	9307      	str	r3, [sp, #28]
 801a1ca:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801a1ce:	9019      	str	r0, [sp, #100]	; 0x64
 801a1d0:	6850      	ldr	r0, [r2, #4]
 801a1d2:	6812      	ldr	r2, [r2, #0]
 801a1d4:	fb00 1303 	mla	r3, r0, r3, r1
 801a1d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a1dc:	930a      	str	r3, [sp, #40]	; 0x28
 801a1de:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a1e0:	681b      	ldr	r3, [r3, #0]
 801a1e2:	930f      	str	r3, [sp, #60]	; 0x3c
 801a1e4:	eeb0 aa40 	vmov.f32	s20, s0
 801a1e8:	eef0 9a60 	vmov.f32	s19, s1
 801a1ec:	eeb0 9a41 	vmov.f32	s18, s2
 801a1f0:	eeb0 8a62 	vmov.f32	s16, s5
 801a1f4:	eef0 8a43 	vmov.f32	s17, s6
 801a1f8:	eef0 ba44 	vmov.f32	s23, s8
 801a1fc:	eeb0 ba64 	vmov.f32	s22, s9
 801a200:	eef0 aa45 	vmov.f32	s21, s10
 801a204:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a206:	2b00      	cmp	r3, #0
 801a208:	dc03      	bgt.n	801a212 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a20a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a20c:	2b00      	cmp	r3, #0
 801a20e:	f340 8386 	ble.w	801a91e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801a212:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a214:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a218:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a21c:	1e48      	subs	r0, r1, #1
 801a21e:	1e57      	subs	r7, r2, #1
 801a220:	9b07      	ldr	r3, [sp, #28]
 801a222:	2b00      	cmp	r3, #0
 801a224:	f340 8166 	ble.w	801a4f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 801a228:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a22c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a230:	d406      	bmi.n	801a240 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a232:	4584      	cmp	ip, r0
 801a234:	da04      	bge.n	801a240 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a236:	2b00      	cmp	r3, #0
 801a238:	db02      	blt.n	801a240 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a23a:	42bb      	cmp	r3, r7
 801a23c:	f2c0 815b 	blt.w	801a4f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801a240:	f11c 0c01 	adds.w	ip, ip, #1
 801a244:	f100 814b 	bmi.w	801a4de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a248:	4561      	cmp	r1, ip
 801a24a:	f2c0 8148 	blt.w	801a4de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a24e:	3301      	adds	r3, #1
 801a250:	f100 8145 	bmi.w	801a4de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a254:	429a      	cmp	r2, r3
 801a256:	f2c0 8142 	blt.w	801a4de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a25a:	9b07      	ldr	r3, [sp, #28]
 801a25c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a25e:	9317      	str	r3, [sp, #92]	; 0x5c
 801a260:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a262:	2b00      	cmp	r3, #0
 801a264:	f340 8165 	ble.w	801a532 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a268:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801a26a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a26c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a270:	689b      	ldr	r3, [r3, #8]
 801a272:	1422      	asrs	r2, r4, #16
 801a274:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a278:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a27c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a280:	f100 81d5 	bmi.w	801a62e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a284:	f103 38ff 	add.w	r8, r3, #4294967295
 801a288:	4542      	cmp	r2, r8
 801a28a:	f280 81d0 	bge.w	801a62e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a28e:	f1bc 0f00 	cmp.w	ip, #0
 801a292:	f2c0 81cc 	blt.w	801a62e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a296:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a29a:	45c4      	cmp	ip, r8
 801a29c:	f280 81c7 	bge.w	801a62e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a2a0:	b21b      	sxth	r3, r3
 801a2a2:	fb0c 2203 	mla	r2, ip, r3, r2
 801a2a6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a2a8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801a2ac:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801a2b0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801a2b4:	2900      	cmp	r1, #0
 801a2b6:	f000 8182 	beq.w	801a5be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 801a2ba:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801a2be:	950b      	str	r5, [sp, #44]	; 0x2c
 801a2c0:	0e2d      	lsrs	r5, r5, #24
 801a2c2:	9512      	str	r5, [sp, #72]	; 0x48
 801a2c4:	b180      	cbz	r0, 801a2e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a2c6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801a2ca:	3b01      	subs	r3, #1
 801a2cc:	009b      	lsls	r3, r3, #2
 801a2ce:	3304      	adds	r3, #4
 801a2d0:	eb08 0c03 	add.w	ip, r8, r3
 801a2d4:	f858 3003 	ldr.w	r3, [r8, r3]
 801a2d8:	9308      	str	r3, [sp, #32]
 801a2da:	0e1b      	lsrs	r3, r3, #24
 801a2dc:	9310      	str	r3, [sp, #64]	; 0x40
 801a2de:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801a2e2:	930c      	str	r3, [sp, #48]	; 0x30
 801a2e4:	0e1b      	lsrs	r3, r3, #24
 801a2e6:	9313      	str	r3, [sp, #76]	; 0x4c
 801a2e8:	b289      	uxth	r1, r1
 801a2ea:	b280      	uxth	r0, r0
 801a2ec:	fb01 f900 	mul.w	r9, r1, r0
 801a2f0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a2f4:	0109      	lsls	r1, r1, #4
 801a2f6:	eba1 0809 	sub.w	r8, r1, r9
 801a2fa:	b280      	uxth	r0, r0
 801a2fc:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801a300:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a302:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a304:	fa1f f888 	uxth.w	r8, r8
 801a308:	1a09      	subs	r1, r1, r0
 801a30a:	b289      	uxth	r1, r1
 801a30c:	fb08 f303 	mul.w	r3, r8, r3
 801a310:	fb01 330e 	mla	r3, r1, lr, r3
 801a314:	fb00 3305 	mla	r3, r0, r5, r3
 801a318:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a31a:	fb09 3305 	mla	r3, r9, r5, r3
 801a31e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a322:	2b00      	cmp	r3, #0
 801a324:	f000 80d2 	beq.w	801a4cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a328:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a32c:	d01b      	beq.n	801a366 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801a32e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801a332:	fb0e fa0a 	mul.w	sl, lr, sl
 801a336:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a33a:	fb0e fe02 	mul.w	lr, lr, r2
 801a33e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801a342:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a346:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a34a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a34e:	4452      	add	r2, sl
 801a350:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a354:	0a12      	lsrs	r2, r2, #8
 801a356:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a35a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a35e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a362:	ea42 020c 	orr.w	r2, r2, ip
 801a366:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a368:	2dff      	cmp	r5, #255	; 0xff
 801a36a:	d021      	beq.n	801a3b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801a36c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a36e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a372:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a374:	fb05 fb0b 	mul.w	fp, r5, fp
 801a378:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a37a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a37e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a380:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a384:	fb05 fa0a 	mul.w	sl, r5, sl
 801a388:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a38c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a390:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a394:	44de      	add	lr, fp
 801a396:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a39a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a39e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a3a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a3a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a3aa:	ea4e 050a 	orr.w	r5, lr, sl
 801a3ae:	950b      	str	r5, [sp, #44]	; 0x2c
 801a3b0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a3b2:	2dff      	cmp	r5, #255	; 0xff
 801a3b4:	d021      	beq.n	801a3fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a3b6:	9d08      	ldr	r5, [sp, #32]
 801a3b8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a3bc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a3be:	fb05 fb0b 	mul.w	fp, r5, fp
 801a3c2:	9d08      	ldr	r5, [sp, #32]
 801a3c4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a3c8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a3ca:	fb05 fa0e 	mul.w	sl, r5, lr
 801a3ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a3d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a3d6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a3da:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a3de:	44de      	add	lr, fp
 801a3e0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a3e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a3e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a3ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a3f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a3f4:	ea4e 050a 	orr.w	r5, lr, sl
 801a3f8:	9508      	str	r5, [sp, #32]
 801a3fa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a3fc:	2dff      	cmp	r5, #255	; 0xff
 801a3fe:	d021      	beq.n	801a444 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a400:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a402:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a406:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a408:	fb05 fb0b 	mul.w	fp, r5, fp
 801a40c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a40e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a412:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a414:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a418:	fb05 fa0a 	mul.w	sl, r5, sl
 801a41c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a420:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a424:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a428:	44de      	add	lr, fp
 801a42a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a42e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a432:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a436:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a43a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a43e:	ea4e 050a 	orr.w	r5, lr, sl
 801a442:	950c      	str	r5, [sp, #48]	; 0x30
 801a444:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a446:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a44a:	9d08      	ldr	r5, [sp, #32]
 801a44c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801a450:	fb08 fc0c 	mul.w	ip, r8, ip
 801a454:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a458:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a45c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a45e:	fb00 cc0e 	mla	ip, r0, lr, ip
 801a462:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a466:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a468:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a46c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a470:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a474:	fb08 f80e 	mul.w	r8, r8, lr
 801a478:	fb01 8202 	mla	r2, r1, r2, r8
 801a47c:	9908      	ldr	r1, [sp, #32]
 801a47e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a482:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a484:	fb00 220a 	mla	r2, r0, sl, r2
 801a488:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801a48c:	fb09 2900 	mla	r9, r9, r0, r2
 801a490:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a494:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a498:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a49c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a4a0:	ea4c 0c09 	orr.w	ip, ip, r9
 801a4a4:	2bff      	cmp	r3, #255	; 0xff
 801a4a6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801a4aa:	f040 8091 	bne.w	801a5d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801a4ae:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801a4b2:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801a4b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a4ba:	f022 0207 	bic.w	r2, r2, #7
 801a4be:	431a      	orrs	r2, r3
 801a4c0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801a4c4:	ea4c 0c02 	orr.w	ip, ip, r2
 801a4c8:	f8a7 c000 	strh.w	ip, [r7]
 801a4cc:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a4ce:	441c      	add	r4, r3
 801a4d0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a4d2:	441e      	add	r6, r3
 801a4d4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a4d6:	3b01      	subs	r3, #1
 801a4d8:	3702      	adds	r7, #2
 801a4da:	9317      	str	r3, [sp, #92]	; 0x5c
 801a4dc:	e6c0      	b.n	801a260 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801a4de:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a4e0:	441c      	add	r4, r3
 801a4e2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a4e4:	441e      	add	r6, r3
 801a4e6:	9b07      	ldr	r3, [sp, #28]
 801a4e8:	3b01      	subs	r3, #1
 801a4ea:	9307      	str	r3, [sp, #28]
 801a4ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a4ee:	3302      	adds	r3, #2
 801a4f0:	930a      	str	r3, [sp, #40]	; 0x28
 801a4f2:	e695      	b.n	801a220 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a4f4:	d024      	beq.n	801a540 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801a4f6:	9b07      	ldr	r3, [sp, #28]
 801a4f8:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801a4fa:	3b01      	subs	r3, #1
 801a4fc:	fb00 4003 	mla	r0, r0, r3, r4
 801a500:	1400      	asrs	r0, r0, #16
 801a502:	f53f aeaa 	bmi.w	801a25a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a506:	3901      	subs	r1, #1
 801a508:	4288      	cmp	r0, r1
 801a50a:	f6bf aea6 	bge.w	801a25a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a50e:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801a510:	fb01 6303 	mla	r3, r1, r3, r6
 801a514:	141b      	asrs	r3, r3, #16
 801a516:	f53f aea0 	bmi.w	801a25a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a51a:	3a01      	subs	r2, #1
 801a51c:	4293      	cmp	r3, r2
 801a51e:	f6bf ae9c 	bge.w	801a25a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a522:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a526:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801a52a:	f1bb 0f00 	cmp.w	fp, #0
 801a52e:	f300 809a 	bgt.w	801a666 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801a532:	9b07      	ldr	r3, [sp, #28]
 801a534:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a538:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a53a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a53e:	930a      	str	r3, [sp, #40]	; 0x28
 801a540:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a542:	2b00      	cmp	r3, #0
 801a544:	f340 81eb 	ble.w	801a91e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801a548:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a54c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a550:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a554:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a556:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a55a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a55e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a562:	eef0 6a48 	vmov.f32	s13, s16
 801a566:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a56a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a56e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a572:	ee16 4a90 	vmov	r4, s13
 801a576:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a57a:	eef0 6a68 	vmov.f32	s13, s17
 801a57e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a582:	ee18 2a10 	vmov	r2, s16
 801a586:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a58a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a58e:	ee18 2a90 	vmov	r2, s17
 801a592:	932f      	str	r3, [sp, #188]	; 0xbc
 801a594:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a596:	fb92 f3f3 	sdiv	r3, r2, r3
 801a59a:	9330      	str	r3, [sp, #192]	; 0xc0
 801a59c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a59e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a5a0:	3b01      	subs	r3, #1
 801a5a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a5a6:	9316      	str	r3, [sp, #88]	; 0x58
 801a5a8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a5aa:	bf08      	it	eq
 801a5ac:	4613      	moveq	r3, r2
 801a5ae:	ee16 6a90 	vmov	r6, s13
 801a5b2:	9307      	str	r3, [sp, #28]
 801a5b4:	eef0 8a67 	vmov.f32	s17, s15
 801a5b8:	eeb0 8a47 	vmov.f32	s16, s14
 801a5bc:	e622      	b.n	801a204 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a5be:	2800      	cmp	r0, #0
 801a5c0:	f43f ae92 	beq.w	801a2e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a5c4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801a5c8:	9308      	str	r3, [sp, #32]
 801a5ca:	0e1b      	lsrs	r3, r3, #24
 801a5cc:	9310      	str	r3, [sp, #64]	; 0x40
 801a5ce:	e68b      	b.n	801a2e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a5d0:	8839      	ldrh	r1, [r7, #0]
 801a5d2:	4dd5      	ldr	r5, [pc, #852]	; (801a928 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801a5d4:	43db      	mvns	r3, r3
 801a5d6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801a5da:	fa5f f883 	uxtb.w	r8, r3
 801a5de:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a5e2:	fb0e fe08 	mul.w	lr, lr, r8
 801a5e6:	10c8      	asrs	r0, r1, #3
 801a5e8:	00cb      	lsls	r3, r1, #3
 801a5ea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a5ee:	f10e 0101 	add.w	r1, lr, #1
 801a5f2:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801a5f6:	fb00 f008 	mul.w	r0, r0, r8
 801a5fa:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801a5fe:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801a602:	f100 0e01 	add.w	lr, r0, #1
 801a606:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801a60a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a60e:	b2db      	uxtb	r3, r3
 801a610:	b2c9      	uxtb	r1, r1
 801a612:	00d2      	lsls	r2, r2, #3
 801a614:	fb03 f308 	mul.w	r3, r3, r8
 801a618:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801a61c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a620:	430a      	orrs	r2, r1
 801a622:	1c59      	adds	r1, r3, #1
 801a624:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a628:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a62c:	e748      	b.n	801a4c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a62e:	f112 0801 	adds.w	r8, r2, #1
 801a632:	f53f af4b 	bmi.w	801a4cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a636:	4543      	cmp	r3, r8
 801a638:	f6ff af48 	blt.w	801a4cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a63c:	f11c 0801 	adds.w	r8, ip, #1
 801a640:	f53f af44 	bmi.w	801a4cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a644:	45c6      	cmp	lr, r8
 801a646:	f6ff af41 	blt.w	801a4cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a64a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801a64e:	fa0f f28e 	sxth.w	r2, lr
 801a652:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801a656:	9200      	str	r2, [sp, #0]
 801a658:	b21b      	sxth	r3, r3
 801a65a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a65c:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a65e:	4639      	mov	r1, r7
 801a660:	f7ff fc54 	bl	8019f0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801a664:	e732      	b.n	801a4cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a666:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a668:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a66a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801a66e:	1421      	asrs	r1, r4, #16
 801a670:	1433      	asrs	r3, r6, #16
 801a672:	fb07 1303 	mla	r3, r7, r3, r1
 801a676:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a678:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801a67c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801a680:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a684:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a688:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a68c:	2a00      	cmp	r2, #0
 801a68e:	f000 8107 	beq.w	801a8a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 801a692:	684d      	ldr	r5, [r1, #4]
 801a694:	950d      	str	r5, [sp, #52]	; 0x34
 801a696:	0e2d      	lsrs	r5, r5, #24
 801a698:	9514      	str	r5, [sp, #80]	; 0x50
 801a69a:	b178      	cbz	r0, 801a6bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801a69c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801a6a0:	3f01      	subs	r7, #1
 801a6a2:	00bf      	lsls	r7, r7, #2
 801a6a4:	3704      	adds	r7, #4
 801a6a6:	eb01 0e07 	add.w	lr, r1, r7
 801a6aa:	59c9      	ldr	r1, [r1, r7]
 801a6ac:	9109      	str	r1, [sp, #36]	; 0x24
 801a6ae:	0e09      	lsrs	r1, r1, #24
 801a6b0:	9111      	str	r1, [sp, #68]	; 0x44
 801a6b2:	f8de 1004 	ldr.w	r1, [lr, #4]
 801a6b6:	910e      	str	r1, [sp, #56]	; 0x38
 801a6b8:	0e09      	lsrs	r1, r1, #24
 801a6ba:	9115      	str	r1, [sp, #84]	; 0x54
 801a6bc:	b292      	uxth	r2, r2
 801a6be:	b280      	uxth	r0, r0
 801a6c0:	fb02 f900 	mul.w	r9, r2, r0
 801a6c4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a6c8:	0112      	lsls	r2, r2, #4
 801a6ca:	eba2 0e09 	sub.w	lr, r2, r9
 801a6ce:	b280      	uxth	r0, r0
 801a6d0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a6d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a6d6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a6d8:	fa1f fe8e 	uxth.w	lr, lr
 801a6dc:	1a09      	subs	r1, r1, r0
 801a6de:	b289      	uxth	r1, r1
 801a6e0:	fb0e f202 	mul.w	r2, lr, r2
 801a6e4:	fb01 220c 	mla	r2, r1, ip, r2
 801a6e8:	fb00 2205 	mla	r2, r0, r5, r2
 801a6ec:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a6ee:	fb09 2205 	mla	r2, r9, r5, r2
 801a6f2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a6f6:	2a00      	cmp	r2, #0
 801a6f8:	f000 80c9 	beq.w	801a88e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801a6fc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a700:	d019      	beq.n	801a736 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 801a702:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a706:	fb0c fa0a 	mul.w	sl, ip, sl
 801a70a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a70e:	fb0c fc03 	mul.w	ip, ip, r3
 801a712:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a716:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a71a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a71e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a722:	4453      	add	r3, sl
 801a724:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a728:	0a1b      	lsrs	r3, r3, #8
 801a72a:	0a3f      	lsrs	r7, r7, #8
 801a72c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a730:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a734:	433b      	orrs	r3, r7
 801a736:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a738:	2dff      	cmp	r5, #255	; 0xff
 801a73a:	d020      	beq.n	801a77e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 801a73c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a73e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a742:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a744:	436f      	muls	r7, r5
 801a746:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a748:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a74c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a74e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a752:	fb05 fa0a 	mul.w	sl, r5, sl
 801a756:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a75a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a75e:	44bc      	add	ip, r7
 801a760:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a764:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a768:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a76c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a770:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a774:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a778:	ea4c 050a 	orr.w	r5, ip, sl
 801a77c:	950d      	str	r5, [sp, #52]	; 0x34
 801a77e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a780:	2dff      	cmp	r5, #255	; 0xff
 801a782:	d020      	beq.n	801a7c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 801a784:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a786:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a78a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a78c:	436f      	muls	r7, r5
 801a78e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a790:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a794:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a796:	fb05 fa0c 	mul.w	sl, r5, ip
 801a79a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a79e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a7a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a7a6:	44bc      	add	ip, r7
 801a7a8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a7ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a7b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a7b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a7b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a7bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a7c0:	ea4c 050a 	orr.w	r5, ip, sl
 801a7c4:	9509      	str	r5, [sp, #36]	; 0x24
 801a7c6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a7c8:	2dff      	cmp	r5, #255	; 0xff
 801a7ca:	d020      	beq.n	801a80e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 801a7cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a7ce:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a7d2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a7d4:	436f      	muls	r7, r5
 801a7d6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a7d8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a7dc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a7de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a7e2:	fb05 fa0a 	mul.w	sl, r5, sl
 801a7e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a7ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a7ee:	44bc      	add	ip, r7
 801a7f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a7f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a7f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a7fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a800:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a804:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a808:	ea4c 050a 	orr.w	r5, ip, sl
 801a80c:	950e      	str	r5, [sp, #56]	; 0x38
 801a80e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a810:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a814:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a816:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a81a:	fb0e f707 	mul.w	r7, lr, r7
 801a81e:	fb01 770c 	mla	r7, r1, ip, r7
 801a822:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a826:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a828:	fb00 770c 	mla	r7, r0, ip, r7
 801a82c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a830:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a832:	fb09 770c 	mla	r7, r9, ip, r7
 801a836:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a83a:	fb0e fe0c 	mul.w	lr, lr, ip
 801a83e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a842:	fb01 e303 	mla	r3, r1, r3, lr
 801a846:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a848:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a84c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a84e:	fb00 330a 	mla	r3, r0, sl, r3
 801a852:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a856:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a85a:	0a3f      	lsrs	r7, r7, #8
 801a85c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a860:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a864:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a868:	ea47 070c 	orr.w	r7, r7, ip
 801a86c:	2aff      	cmp	r2, #255	; 0xff
 801a86e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801a872:	d11e      	bne.n	801a8b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 801a874:	097a      	lsrs	r2, r7, #5
 801a876:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801a87a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a87e:	f023 0307 	bic.w	r3, r3, #7
 801a882:	4313      	orrs	r3, r2
 801a884:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801a888:	431f      	orrs	r7, r3
 801a88a:	f8a8 7000 	strh.w	r7, [r8]
 801a88e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a890:	441c      	add	r4, r3
 801a892:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a894:	f108 0802 	add.w	r8, r8, #2
 801a898:	441e      	add	r6, r3
 801a89a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a89e:	e644      	b.n	801a52a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801a8a0:	2800      	cmp	r0, #0
 801a8a2:	f43f af0b 	beq.w	801a6bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801a8a6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801a8aa:	9109      	str	r1, [sp, #36]	; 0x24
 801a8ac:	0e09      	lsrs	r1, r1, #24
 801a8ae:	9111      	str	r1, [sp, #68]	; 0x44
 801a8b0:	e704      	b.n	801a6bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801a8b2:	f8b8 1000 	ldrh.w	r1, [r8]
 801a8b6:	43d2      	mvns	r2, r2
 801a8b8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801a8bc:	fa5f fe82 	uxtb.w	lr, r2
 801a8c0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a8c4:	fb0c fc0e 	mul.w	ip, ip, lr
 801a8c8:	10c8      	asrs	r0, r1, #3
 801a8ca:	00ca      	lsls	r2, r1, #3
 801a8cc:	f10c 0101 	add.w	r1, ip, #1
 801a8d0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801a8d4:	0c39      	lsrs	r1, r7, #16
 801a8d6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801a8da:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a8de:	4912      	ldr	r1, [pc, #72]	; (801a928 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801a8e0:	fb00 f00e 	mul.w	r0, r0, lr
 801a8e4:	fa5f fc8c 	uxtb.w	ip, ip
 801a8e8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801a8ec:	b2d2      	uxtb	r2, r2
 801a8ee:	1c41      	adds	r1, r0, #1
 801a8f0:	fb02 f20e 	mul.w	r2, r2, lr
 801a8f4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801a8f8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a8fc:	1c51      	adds	r1, r2, #1
 801a8fe:	00c0      	lsls	r0, r0, #3
 801a900:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a904:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a908:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a90c:	ea4c 0c00 	orr.w	ip, ip, r0
 801a910:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801a914:	ea47 0c0c 	orr.w	ip, r7, ip
 801a918:	f8a8 c000 	strh.w	ip, [r8]
 801a91c:	e7b7      	b.n	801a88e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801a91e:	b01b      	add	sp, #108	; 0x6c
 801a920:	ecbd 8b08 	vpop	{d8-d11}
 801a924:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a928:	fffff800 	.word	0xfffff800

0801a92c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801a92c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a930:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a934:	2c00      	cmp	r4, #0
 801a936:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a93a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a93e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a942:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a946:	fb04 ce03 	mla	lr, r4, r3, ip
 801a94a:	db60      	blt.n	801aa0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a94c:	45a1      	cmp	r9, r4
 801a94e:	dd5e      	ble.n	801aa0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a950:	f1bc 0f00 	cmp.w	ip, #0
 801a954:	db59      	blt.n	801aa0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a956:	45e0      	cmp	r8, ip
 801a958:	dd57      	ble.n	801aa0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a95a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a95e:	f01e 0f01 	tst.w	lr, #1
 801a962:	5c16      	ldrb	r6, [r2, r0]
 801a964:	bf0c      	ite	eq
 801a966:	f006 060f 	andeq.w	r6, r6, #15
 801a96a:	1136      	asrne	r6, r6, #4
 801a96c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a970:	b2f6      	uxtb	r6, r6
 801a972:	f11c 0001 	adds.w	r0, ip, #1
 801a976:	d44d      	bmi.n	801aa14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a978:	4580      	cmp	r8, r0
 801a97a:	dd4b      	ble.n	801aa14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a97c:	2d00      	cmp	r5, #0
 801a97e:	d04b      	beq.n	801aa18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801a980:	f10e 0a01 	add.w	sl, lr, #1
 801a984:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a988:	f01a 0f01 	tst.w	sl, #1
 801a98c:	5c10      	ldrb	r0, [r2, r0]
 801a98e:	bf0c      	ite	eq
 801a990:	f000 000f 	andeq.w	r0, r0, #15
 801a994:	1100      	asrne	r0, r0, #4
 801a996:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a99a:	b2c0      	uxtb	r0, r0
 801a99c:	3401      	adds	r4, #1
 801a99e:	d43f      	bmi.n	801aa20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a9a0:	45a1      	cmp	r9, r4
 801a9a2:	dd3d      	ble.n	801aa20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a9a4:	2f00      	cmp	r7, #0
 801a9a6:	f000 80a8 	beq.w	801aafa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 801a9aa:	f1bc 0f00 	cmp.w	ip, #0
 801a9ae:	db35      	blt.n	801aa1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a9b0:	45e0      	cmp	r8, ip
 801a9b2:	dd33      	ble.n	801aa1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a9b4:	eb03 090e 	add.w	r9, r3, lr
 801a9b8:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a9bc:	f019 0f01 	tst.w	r9, #1
 801a9c0:	5d14      	ldrb	r4, [r2, r4]
 801a9c2:	bf0c      	ite	eq
 801a9c4:	f004 040f 	andeq.w	r4, r4, #15
 801a9c8:	1124      	asrne	r4, r4, #4
 801a9ca:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a9ce:	b2e4      	uxtb	r4, r4
 801a9d0:	f11c 0c01 	adds.w	ip, ip, #1
 801a9d4:	d427      	bmi.n	801aa26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a9d6:	45e0      	cmp	r8, ip
 801a9d8:	dd25      	ble.n	801aa26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a9da:	b335      	cbz	r5, 801aa2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801a9dc:	3301      	adds	r3, #1
 801a9de:	449e      	add	lr, r3
 801a9e0:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a9e4:	f01e 0f01 	tst.w	lr, #1
 801a9e8:	5cd2      	ldrb	r2, [r2, r3]
 801a9ea:	bf0c      	ite	eq
 801a9ec:	f002 020f 	andeq.w	r2, r2, #15
 801a9f0:	1112      	asrne	r2, r2, #4
 801a9f2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a9f6:	b2d3      	uxtb	r3, r2
 801a9f8:	2d0f      	cmp	r5, #15
 801a9fa:	d917      	bls.n	801aa2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801a9fc:	4b42      	ldr	r3, [pc, #264]	; (801ab08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 801a9fe:	4a43      	ldr	r2, [pc, #268]	; (801ab0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 801aa00:	4843      	ldr	r0, [pc, #268]	; (801ab10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 801aa02:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801aa06:	f001 f809 	bl	801ba1c <__assert_func>
 801aa0a:	2600      	movs	r6, #0
 801aa0c:	e7b1      	b.n	801a972 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801aa0e:	2000      	movs	r0, #0
 801aa10:	4606      	mov	r6, r0
 801aa12:	e7c3      	b.n	801a99c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801aa14:	2000      	movs	r0, #0
 801aa16:	e7c1      	b.n	801a99c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801aa18:	4628      	mov	r0, r5
 801aa1a:	e7bf      	b.n	801a99c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801aa1c:	2400      	movs	r4, #0
 801aa1e:	e7d7      	b.n	801a9d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801aa20:	2300      	movs	r3, #0
 801aa22:	461c      	mov	r4, r3
 801aa24:	e7e8      	b.n	801a9f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801aa26:	2300      	movs	r3, #0
 801aa28:	e7e6      	b.n	801a9f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801aa2a:	462b      	mov	r3, r5
 801aa2c:	2f0f      	cmp	r7, #15
 801aa2e:	d8e5      	bhi.n	801a9fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801aa30:	b2ad      	uxth	r5, r5
 801aa32:	b2bf      	uxth	r7, r7
 801aa34:	fb05 fc07 	mul.w	ip, r5, r7
 801aa38:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801aa3c:	012d      	lsls	r5, r5, #4
 801aa3e:	b2bf      	uxth	r7, r7
 801aa40:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801aa44:	eba5 050c 	sub.w	r5, r5, ip
 801aa48:	1bd2      	subs	r2, r2, r7
 801aa4a:	b2ad      	uxth	r5, r5
 801aa4c:	b292      	uxth	r2, r2
 801aa4e:	4368      	muls	r0, r5
 801aa50:	fb06 0002 	mla	r0, r6, r2, r0
 801aa54:	fb07 0404 	mla	r4, r7, r4, r0
 801aa58:	fb0c 4303 	mla	r3, ip, r3, r4
 801aa5c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801aa60:	b1b3      	cbz	r3, 801aa90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801aa62:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801aa66:	435a      	muls	r2, r3
 801aa68:	1c53      	adds	r3, r2, #1
 801aa6a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801aa6e:	4a29      	ldr	r2, [pc, #164]	; (801ab14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 801aa70:	121b      	asrs	r3, r3, #8
 801aa72:	6812      	ldr	r2, [r2, #0]
 801aa74:	2bff      	cmp	r3, #255	; 0xff
 801aa76:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801aa7a:	d10b      	bne.n	801aa94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 801aa7c:	4b26      	ldr	r3, [pc, #152]	; (801ab18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 801aa7e:	0950      	lsrs	r0, r2, #5
 801aa80:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801aa84:	4033      	ands	r3, r6
 801aa86:	4318      	orrs	r0, r3
 801aa88:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801aa8c:	4302      	orrs	r2, r0
 801aa8e:	800a      	strh	r2, [r1, #0]
 801aa90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801aa94:	880d      	ldrh	r5, [r1, #0]
 801aa96:	b29f      	uxth	r7, r3
 801aa98:	122c      	asrs	r4, r5, #8
 801aa9a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801aa9e:	43db      	mvns	r3, r3
 801aaa0:	b2db      	uxtb	r3, r3
 801aaa2:	fb10 f007 	smulbb	r0, r0, r7
 801aaa6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801aaaa:	fb04 0403 	mla	r4, r4, r3, r0
 801aaae:	b2f6      	uxtb	r6, r6
 801aab0:	10e8      	asrs	r0, r5, #3
 801aab2:	b2d2      	uxtb	r2, r2
 801aab4:	00ed      	lsls	r5, r5, #3
 801aab6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801aaba:	fb12 f207 	smulbb	r2, r2, r7
 801aabe:	fb16 f607 	smulbb	r6, r6, r7
 801aac2:	b2ed      	uxtb	r5, r5
 801aac4:	b2a4      	uxth	r4, r4
 801aac6:	fb00 6603 	mla	r6, r0, r3, r6
 801aaca:	fb05 2303 	mla	r3, r5, r3, r2
 801aace:	b29a      	uxth	r2, r3
 801aad0:	1c63      	adds	r3, r4, #1
 801aad2:	b2b0      	uxth	r0, r6
 801aad4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801aad8:	1c53      	adds	r3, r2, #1
 801aada:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801aade:	1c42      	adds	r2, r0, #1
 801aae0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801aae4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801aae8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801aaec:	0940      	lsrs	r0, r0, #5
 801aaee:	4323      	orrs	r3, r4
 801aaf0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801aaf4:	4303      	orrs	r3, r0
 801aaf6:	800b      	strh	r3, [r1, #0]
 801aaf8:	e7ca      	b.n	801aa90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801aafa:	2d0f      	cmp	r5, #15
 801aafc:	f63f af7e 	bhi.w	801a9fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801ab00:	463b      	mov	r3, r7
 801ab02:	463c      	mov	r4, r7
 801ab04:	e794      	b.n	801aa30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801ab06:	bf00      	nop
 801ab08:	0802050e 	.word	0x0802050e
 801ab0c:	08020ade 	.word	0x08020ade
 801ab10:	08020592 	.word	0x08020592
 801ab14:	20013510 	.word	0x20013510
 801ab18:	00fff800 	.word	0x00fff800

0801ab1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab20:	ed2d 8b08 	vpush	{d8-d11}
 801ab24:	b097      	sub	sp, #92	; 0x5c
 801ab26:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801ab2a:	9214      	str	r2, [sp, #80]	; 0x50
 801ab2c:	9309      	str	r3, [sp, #36]	; 0x24
 801ab2e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ab30:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ab34:	910d      	str	r1, [sp, #52]	; 0x34
 801ab36:	930f      	str	r3, [sp, #60]	; 0x3c
 801ab38:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ab3c:	9015      	str	r0, [sp, #84]	; 0x54
 801ab3e:	6850      	ldr	r0, [r2, #4]
 801ab40:	6812      	ldr	r2, [r2, #0]
 801ab42:	fb00 1303 	mla	r3, r0, r3, r1
 801ab46:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ab4a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ab4c:	689b      	ldr	r3, [r3, #8]
 801ab4e:	3301      	adds	r3, #1
 801ab50:	f023 0301 	bic.w	r3, r3, #1
 801ab54:	930a      	str	r3, [sp, #40]	; 0x28
 801ab56:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ab58:	681f      	ldr	r7, [r3, #0]
 801ab5a:	eeb0 aa40 	vmov.f32	s20, s0
 801ab5e:	eef0 9a60 	vmov.f32	s19, s1
 801ab62:	eeb0 9a41 	vmov.f32	s18, s2
 801ab66:	eeb0 8a62 	vmov.f32	s16, s5
 801ab6a:	eef0 8a43 	vmov.f32	s17, s6
 801ab6e:	eef0 ba44 	vmov.f32	s23, s8
 801ab72:	eeb0 ba64 	vmov.f32	s22, s9
 801ab76:	eef0 aa45 	vmov.f32	s21, s10
 801ab7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ab7c:	2b00      	cmp	r3, #0
 801ab7e:	dc03      	bgt.n	801ab88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ab80:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ab82:	2b00      	cmp	r3, #0
 801ab84:	f340 8287 	ble.w	801b096 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801ab88:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ab8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ab8e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ab92:	1e48      	subs	r0, r1, #1
 801ab94:	f102 3cff 	add.w	ip, r2, #4294967295
 801ab98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab9a:	2b00      	cmp	r3, #0
 801ab9c:	f340 80c4 	ble.w	801ad28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801aba0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801aba4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801aba8:	d406      	bmi.n	801abb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801abaa:	4586      	cmp	lr, r0
 801abac:	da04      	bge.n	801abb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801abae:	2b00      	cmp	r3, #0
 801abb0:	db02      	blt.n	801abb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801abb2:	4563      	cmp	r3, ip
 801abb4:	f2c0 80b9 	blt.w	801ad2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801abb8:	f11e 0e01 	adds.w	lr, lr, #1
 801abbc:	f100 80aa 	bmi.w	801ad14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801abc0:	4571      	cmp	r1, lr
 801abc2:	f2c0 80a7 	blt.w	801ad14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801abc6:	3301      	adds	r3, #1
 801abc8:	f100 80a4 	bmi.w	801ad14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801abcc:	429a      	cmp	r2, r3
 801abce:	f2c0 80a1 	blt.w	801ad14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801abd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801abd4:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801abd8:	930e      	str	r3, [sp, #56]	; 0x38
 801abda:	46c8      	mov	r8, r9
 801abdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801abde:	2b00      	cmp	r3, #0
 801abe0:	f340 80c3 	ble.w	801ad6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801abe4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801abe6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801abea:	1423      	asrs	r3, r4, #16
 801abec:	ea4f 4026 	mov.w	r0, r6, asr #16
 801abf0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801abf4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801abf8:	f100 814d 	bmi.w	801ae96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801abfc:	f10c 3bff 	add.w	fp, ip, #4294967295
 801ac00:	455b      	cmp	r3, fp
 801ac02:	f280 8148 	bge.w	801ae96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ac06:	2800      	cmp	r0, #0
 801ac08:	f2c0 8145 	blt.w	801ae96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ac0c:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ac10:	4558      	cmp	r0, fp
 801ac12:	f280 8140 	bge.w	801ae96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ac16:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801ac18:	fb00 3305 	mla	r3, r0, r5, r3
 801ac1c:	0858      	lsrs	r0, r3, #1
 801ac1e:	07dd      	lsls	r5, r3, #31
 801ac20:	f817 c000 	ldrb.w	ip, [r7, r0]
 801ac24:	bf54      	ite	pl
 801ac26:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ac2a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ac2e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ac32:	fa5f fc8c 	uxtb.w	ip, ip
 801ac36:	2a00      	cmp	r2, #0
 801ac38:	f000 80db 	beq.w	801adf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801ac3c:	1c58      	adds	r0, r3, #1
 801ac3e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801ac42:	07c0      	lsls	r0, r0, #31
 801ac44:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ac48:	bf54      	ite	pl
 801ac4a:	f00e 0e0f 	andpl.w	lr, lr, #15
 801ac4e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801ac52:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ac56:	fa5f f08e 	uxtb.w	r0, lr
 801ac5a:	9010      	str	r0, [sp, #64]	; 0x40
 801ac5c:	b1c9      	cbz	r1, 801ac92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ac5e:	4453      	add	r3, sl
 801ac60:	0858      	lsrs	r0, r3, #1
 801ac62:	07dd      	lsls	r5, r3, #31
 801ac64:	5c38      	ldrb	r0, [r7, r0]
 801ac66:	bf54      	ite	pl
 801ac68:	f000 000f 	andpl.w	r0, r0, #15
 801ac6c:	1100      	asrmi	r0, r0, #4
 801ac6e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ac72:	3301      	adds	r3, #1
 801ac74:	b2c0      	uxtb	r0, r0
 801ac76:	900b      	str	r0, [sp, #44]	; 0x2c
 801ac78:	0858      	lsrs	r0, r3, #1
 801ac7a:	07dd      	lsls	r5, r3, #31
 801ac7c:	f817 e000 	ldrb.w	lr, [r7, r0]
 801ac80:	bf54      	ite	pl
 801ac82:	f00e 030f 	andpl.w	r3, lr, #15
 801ac86:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801ac8a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ac8e:	b2db      	uxtb	r3, r3
 801ac90:	9311      	str	r3, [sp, #68]	; 0x44
 801ac92:	b292      	uxth	r2, r2
 801ac94:	b289      	uxth	r1, r1
 801ac96:	fb02 f301 	mul.w	r3, r2, r1
 801ac9a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ac9e:	0112      	lsls	r2, r2, #4
 801aca0:	b289      	uxth	r1, r1
 801aca2:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801aca6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801aca8:	1ad2      	subs	r2, r2, r3
 801acaa:	1a40      	subs	r0, r0, r1
 801acac:	b292      	uxth	r2, r2
 801acae:	436a      	muls	r2, r5
 801acb0:	b280      	uxth	r0, r0
 801acb2:	fb0c 2c00 	mla	ip, ip, r0, r2
 801acb6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801acb8:	fb01 c102 	mla	r1, r1, r2, ip
 801acbc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801acbe:	fb03 1302 	mla	r3, r3, r2, r1
 801acc2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801acc6:	b1db      	cbz	r3, 801ad00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801acc8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801acca:	4353      	muls	r3, r2
 801accc:	1c5a      	adds	r2, r3, #1
 801acce:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801acd2:	4ac6      	ldr	r2, [pc, #792]	; (801afec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801acd4:	121b      	asrs	r3, r3, #8
 801acd6:	6812      	ldr	r2, [r2, #0]
 801acd8:	2bff      	cmp	r3, #255	; 0xff
 801acda:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801acde:	f040 8099 	bne.w	801ae14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 801ace2:	0953      	lsrs	r3, r2, #5
 801ace4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ace8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801acec:	f02c 0c07 	bic.w	ip, ip, #7
 801acf0:	ea43 0c0c 	orr.w	ip, r3, ip
 801acf4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801acf8:	ea4c 0202 	orr.w	r2, ip, r2
 801acfc:	f8a8 2000 	strh.w	r2, [r8]
 801ad00:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ad02:	441c      	add	r4, r3
 801ad04:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ad06:	441e      	add	r6, r3
 801ad08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad0a:	3b01      	subs	r3, #1
 801ad0c:	f108 0802 	add.w	r8, r8, #2
 801ad10:	930e      	str	r3, [sp, #56]	; 0x38
 801ad12:	e763      	b.n	801abdc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 801ad14:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ad16:	441c      	add	r4, r3
 801ad18:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ad1a:	441e      	add	r6, r3
 801ad1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad1e:	3b01      	subs	r3, #1
 801ad20:	9309      	str	r3, [sp, #36]	; 0x24
 801ad22:	f109 0902 	add.w	r9, r9, #2
 801ad26:	e737      	b.n	801ab98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ad28:	d024      	beq.n	801ad74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801ad2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad2c:	982b      	ldr	r0, [sp, #172]	; 0xac
 801ad2e:	3b01      	subs	r3, #1
 801ad30:	fb00 4003 	mla	r0, r0, r3, r4
 801ad34:	1400      	asrs	r0, r0, #16
 801ad36:	f53f af4c 	bmi.w	801abd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801ad3a:	3901      	subs	r1, #1
 801ad3c:	4288      	cmp	r0, r1
 801ad3e:	f6bf af48 	bge.w	801abd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801ad42:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801ad44:	fb01 6303 	mla	r3, r1, r3, r6
 801ad48:	141b      	asrs	r3, r3, #16
 801ad4a:	f53f af42 	bmi.w	801abd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801ad4e:	3a01      	subs	r2, #1
 801ad50:	4293      	cmp	r3, r2
 801ad52:	f6bf af3e 	bge.w	801abd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801ad56:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801ad5a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ad5e:	930e      	str	r3, [sp, #56]	; 0x38
 801ad60:	46c8      	mov	r8, r9
 801ad62:	f1bb 0f00 	cmp.w	fp, #0
 801ad66:	f300 80b7 	bgt.w	801aed8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801ad6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad6c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ad70:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ad74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ad76:	2b00      	cmp	r3, #0
 801ad78:	f340 818d 	ble.w	801b096 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801ad7c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ad80:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ad84:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ad88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ad8a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ad8e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801ad92:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801ad96:	eef0 6a48 	vmov.f32	s13, s16
 801ad9a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801ad9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ada2:	ee37 8a48 	vsub.f32	s16, s14, s16
 801ada6:	ee16 4a90 	vmov	r4, s13
 801adaa:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801adae:	eef0 6a68 	vmov.f32	s13, s17
 801adb2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801adb6:	ee18 2a10 	vmov	r2, s16
 801adba:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801adbe:	fb92 f3f3 	sdiv	r3, r2, r3
 801adc2:	ee18 2a90 	vmov	r2, s17
 801adc6:	932b      	str	r3, [sp, #172]	; 0xac
 801adc8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801adca:	fb92 f3f3 	sdiv	r3, r2, r3
 801adce:	932c      	str	r3, [sp, #176]	; 0xb0
 801add0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801add2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801add4:	3b01      	subs	r3, #1
 801add6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801adda:	930d      	str	r3, [sp, #52]	; 0x34
 801addc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801adde:	bf08      	it	eq
 801ade0:	4613      	moveq	r3, r2
 801ade2:	ee16 6a90 	vmov	r6, s13
 801ade6:	9309      	str	r3, [sp, #36]	; 0x24
 801ade8:	eef0 8a67 	vmov.f32	s17, s15
 801adec:	eeb0 8a47 	vmov.f32	s16, s14
 801adf0:	e6c3      	b.n	801ab7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801adf2:	2900      	cmp	r1, #0
 801adf4:	f43f af4d 	beq.w	801ac92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801adf8:	eb0a 0003 	add.w	r0, sl, r3
 801adfc:	0843      	lsrs	r3, r0, #1
 801adfe:	07c0      	lsls	r0, r0, #31
 801ae00:	5cfb      	ldrb	r3, [r7, r3]
 801ae02:	bf54      	ite	pl
 801ae04:	f003 030f 	andpl.w	r3, r3, #15
 801ae08:	111b      	asrmi	r3, r3, #4
 801ae0a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ae0e:	b2db      	uxtb	r3, r3
 801ae10:	930b      	str	r3, [sp, #44]	; 0x2c
 801ae12:	e73e      	b.n	801ac92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ae14:	f8b8 e000 	ldrh.w	lr, [r8]
 801ae18:	fa1f fb83 	uxth.w	fp, r3
 801ae1c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801ae20:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ae24:	43db      	mvns	r3, r3
 801ae26:	b2db      	uxtb	r3, r3
 801ae28:	fb11 f10b 	smulbb	r1, r1, fp
 801ae2c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ae30:	fb00 1003 	mla	r0, r0, r3, r1
 801ae34:	fa5f fc8c 	uxtb.w	ip, ip
 801ae38:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801ae3c:	b2d2      	uxtb	r2, r2
 801ae3e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ae42:	b280      	uxth	r0, r0
 801ae44:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ae48:	fb1c fc0b 	smulbb	ip, ip, fp
 801ae4c:	fa5f fe8e 	uxtb.w	lr, lr
 801ae50:	fb12 fb0b 	smulbb	fp, r2, fp
 801ae54:	fb01 cc03 	mla	ip, r1, r3, ip
 801ae58:	fb0e bb03 	mla	fp, lr, r3, fp
 801ae5c:	1c43      	adds	r3, r0, #1
 801ae5e:	fa1f fc8c 	uxth.w	ip, ip
 801ae62:	fa1f fb8b 	uxth.w	fp, fp
 801ae66:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ae6a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801ae6e:	f10c 0101 	add.w	r1, ip, #1
 801ae72:	f10b 0001 	add.w	r0, fp, #1
 801ae76:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801ae7a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ae7e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ae82:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ae86:	4318      	orrs	r0, r3
 801ae88:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801ae8c:	ea40 000c 	orr.w	r0, r0, ip
 801ae90:	f8a8 0000 	strh.w	r0, [r8]
 801ae94:	e734      	b.n	801ad00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801ae96:	f113 0b01 	adds.w	fp, r3, #1
 801ae9a:	f53f af31 	bmi.w	801ad00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801ae9e:	45dc      	cmp	ip, fp
 801aea0:	f6ff af2e 	blt.w	801ad00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801aea4:	f110 0b01 	adds.w	fp, r0, #1
 801aea8:	f53f af2a 	bmi.w	801ad00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801aeac:	45de      	cmp	lr, fp
 801aeae:	f6ff af27 	blt.w	801ad00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801aeb2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801aeb4:	9302      	str	r3, [sp, #8]
 801aeb6:	fa0f f38e 	sxth.w	r3, lr
 801aeba:	9301      	str	r3, [sp, #4]
 801aebc:	fa0f f38c 	sxth.w	r3, ip
 801aec0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801aec4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801aec8:	9300      	str	r3, [sp, #0]
 801aeca:	463a      	mov	r2, r7
 801aecc:	4653      	mov	r3, sl
 801aece:	4641      	mov	r1, r8
 801aed0:	9815      	ldr	r0, [sp, #84]	; 0x54
 801aed2:	f7ff fd2b 	bl	801a92c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801aed6:	e713      	b.n	801ad00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801aed8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801aeda:	1422      	asrs	r2, r4, #16
 801aedc:	1433      	asrs	r3, r6, #16
 801aede:	fb05 2303 	mla	r3, r5, r3, r2
 801aee2:	085a      	lsrs	r2, r3, #1
 801aee4:	07dd      	lsls	r5, r3, #31
 801aee6:	5cba      	ldrb	r2, [r7, r2]
 801aee8:	bf54      	ite	pl
 801aeea:	f002 020f 	andpl.w	r2, r2, #15
 801aeee:	1112      	asrmi	r2, r2, #4
 801aef0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aef4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801aef8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801aefc:	b2d2      	uxtb	r2, r2
 801aefe:	2900      	cmp	r1, #0
 801af00:	d076      	beq.n	801aff0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801af02:	f103 0e01 	add.w	lr, r3, #1
 801af06:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801af0a:	f01e 0f01 	tst.w	lr, #1
 801af0e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801af12:	bf0c      	ite	eq
 801af14:	f00c 0c0f 	andeq.w	ip, ip, #15
 801af18:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801af1c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801af20:	fa5f f58c 	uxtb.w	r5, ip
 801af24:	9512      	str	r5, [sp, #72]	; 0x48
 801af26:	b300      	cbz	r0, 801af6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801af28:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801af2a:	442b      	add	r3, r5
 801af2c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801af30:	07dd      	lsls	r5, r3, #31
 801af32:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801af36:	bf54      	ite	pl
 801af38:	f00c 0c0f 	andpl.w	ip, ip, #15
 801af3c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801af40:	3301      	adds	r3, #1
 801af42:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801af46:	fa5f f58c 	uxtb.w	r5, ip
 801af4a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801af4e:	950c      	str	r5, [sp, #48]	; 0x30
 801af50:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801af54:	07dd      	lsls	r5, r3, #31
 801af56:	bf54      	ite	pl
 801af58:	f00c 0c0f 	andpl.w	ip, ip, #15
 801af5c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801af60:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801af64:	fa5f f38c 	uxtb.w	r3, ip
 801af68:	9313      	str	r3, [sp, #76]	; 0x4c
 801af6a:	b289      	uxth	r1, r1
 801af6c:	b280      	uxth	r0, r0
 801af6e:	fb01 f300 	mul.w	r3, r1, r0
 801af72:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801af76:	0109      	lsls	r1, r1, #4
 801af78:	b280      	uxth	r0, r0
 801af7a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801af7e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801af80:	1ac9      	subs	r1, r1, r3
 801af82:	ebac 0c00 	sub.w	ip, ip, r0
 801af86:	b289      	uxth	r1, r1
 801af88:	4369      	muls	r1, r5
 801af8a:	fa1f fc8c 	uxth.w	ip, ip
 801af8e:	fb02 120c 	mla	r2, r2, ip, r1
 801af92:	990c      	ldr	r1, [sp, #48]	; 0x30
 801af94:	fb00 2001 	mla	r0, r0, r1, r2
 801af98:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801af9a:	fb03 0302 	mla	r3, r3, r2, r0
 801af9e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801afa2:	b1d3      	cbz	r3, 801afda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801afa4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801afa6:	4353      	muls	r3, r2
 801afa8:	1c5a      	adds	r2, r3, #1
 801afaa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801afae:	4a0f      	ldr	r2, [pc, #60]	; (801afec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801afb0:	121b      	asrs	r3, r3, #8
 801afb2:	6812      	ldr	r2, [r2, #0]
 801afb4:	2bff      	cmp	r3, #255	; 0xff
 801afb6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801afba:	d12d      	bne.n	801b018 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 801afbc:	0953      	lsrs	r3, r2, #5
 801afbe:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801afc2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801afc6:	f02c 0c07 	bic.w	ip, ip, #7
 801afca:	ea43 0c0c 	orr.w	ip, r3, ip
 801afce:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801afd2:	ea4c 0202 	orr.w	r2, ip, r2
 801afd6:	f8a8 2000 	strh.w	r2, [r8]
 801afda:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801afdc:	441c      	add	r4, r3
 801afde:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801afe0:	f108 0802 	add.w	r8, r8, #2
 801afe4:	441e      	add	r6, r3
 801afe6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801afea:	e6ba      	b.n	801ad62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801afec:	20013510 	.word	0x20013510
 801aff0:	2800      	cmp	r0, #0
 801aff2:	d0ba      	beq.n	801af6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801aff4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801aff6:	442b      	add	r3, r5
 801aff8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801affc:	07db      	lsls	r3, r3, #31
 801affe:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b002:	bf54      	ite	pl
 801b004:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b008:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b00c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b010:	fa5f f38c 	uxtb.w	r3, ip
 801b014:	930c      	str	r3, [sp, #48]	; 0x30
 801b016:	e7a8      	b.n	801af6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b018:	f8b8 e000 	ldrh.w	lr, [r8]
 801b01c:	fa1f fa83 	uxth.w	sl, r3
 801b020:	ea4f 202e 	mov.w	r0, lr, asr #8
 801b024:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b028:	43db      	mvns	r3, r3
 801b02a:	b2db      	uxtb	r3, r3
 801b02c:	fb11 f10a 	smulbb	r1, r1, sl
 801b030:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b034:	fb00 1003 	mla	r0, r0, r3, r1
 801b038:	b2d2      	uxtb	r2, r2
 801b03a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801b03e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b042:	fa5f fe8e 	uxtb.w	lr, lr
 801b046:	fb12 f20a 	smulbb	r2, r2, sl
 801b04a:	fb0e 2203 	mla	r2, lr, r3, r2
 801b04e:	fa5f fc8c 	uxtb.w	ip, ip
 801b052:	b280      	uxth	r0, r0
 801b054:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b058:	b292      	uxth	r2, r2
 801b05a:	fb1c fc0a 	smulbb	ip, ip, sl
 801b05e:	fb01 cc03 	mla	ip, r1, r3, ip
 801b062:	1c43      	adds	r3, r0, #1
 801b064:	1c51      	adds	r1, r2, #1
 801b066:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b06a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801b06e:	fa1f fc8c 	uxth.w	ip, ip
 801b072:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b076:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b07a:	4308      	orrs	r0, r1
 801b07c:	f10c 0101 	add.w	r1, ip, #1
 801b080:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801b084:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b088:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b08c:	ea40 000c 	orr.w	r0, r0, ip
 801b090:	f8a8 0000 	strh.w	r0, [r8]
 801b094:	e7a1      	b.n	801afda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801b096:	b017      	add	sp, #92	; 0x5c
 801b098:	ecbd 8b08 	vpop	{d8-d11}
 801b09c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b0a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801b0a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b0a4:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801b0a8:	2c00      	cmp	r4, #0
 801b0aa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801b0ae:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801b0b2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801b0b6:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801b0ba:	fb04 ce03 	mla	lr, r4, r3, ip
 801b0be:	db60      	blt.n	801b182 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801b0c0:	45a1      	cmp	r9, r4
 801b0c2:	dd5e      	ble.n	801b182 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801b0c4:	f1bc 0f00 	cmp.w	ip, #0
 801b0c8:	db59      	blt.n	801b17e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b0ca:	45e0      	cmp	r8, ip
 801b0cc:	dd57      	ble.n	801b17e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b0ce:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801b0d2:	f01e 0f01 	tst.w	lr, #1
 801b0d6:	5c16      	ldrb	r6, [r2, r0]
 801b0d8:	bf0c      	ite	eq
 801b0da:	f006 060f 	andeq.w	r6, r6, #15
 801b0de:	1136      	asrne	r6, r6, #4
 801b0e0:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801b0e4:	b2f6      	uxtb	r6, r6
 801b0e6:	f11c 0001 	adds.w	r0, ip, #1
 801b0ea:	d44d      	bmi.n	801b188 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b0ec:	4580      	cmp	r8, r0
 801b0ee:	dd4b      	ble.n	801b188 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b0f0:	2d00      	cmp	r5, #0
 801b0f2:	d04b      	beq.n	801b18c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801b0f4:	f10e 0a01 	add.w	sl, lr, #1
 801b0f8:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801b0fc:	f01a 0f01 	tst.w	sl, #1
 801b100:	5c10      	ldrb	r0, [r2, r0]
 801b102:	bf0c      	ite	eq
 801b104:	f000 000f 	andeq.w	r0, r0, #15
 801b108:	1100      	asrne	r0, r0, #4
 801b10a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b10e:	b2c0      	uxtb	r0, r0
 801b110:	3401      	adds	r4, #1
 801b112:	d43f      	bmi.n	801b194 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801b114:	45a1      	cmp	r9, r4
 801b116:	dd3d      	ble.n	801b194 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801b118:	2f00      	cmp	r7, #0
 801b11a:	f000 8093 	beq.w	801b244 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801b11e:	f1bc 0f00 	cmp.w	ip, #0
 801b122:	db35      	blt.n	801b190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801b124:	45e0      	cmp	r8, ip
 801b126:	dd33      	ble.n	801b190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801b128:	eb03 090e 	add.w	r9, r3, lr
 801b12c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801b130:	f019 0f01 	tst.w	r9, #1
 801b134:	5d14      	ldrb	r4, [r2, r4]
 801b136:	bf0c      	ite	eq
 801b138:	f004 040f 	andeq.w	r4, r4, #15
 801b13c:	1124      	asrne	r4, r4, #4
 801b13e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801b142:	b2e4      	uxtb	r4, r4
 801b144:	f11c 0c01 	adds.w	ip, ip, #1
 801b148:	d427      	bmi.n	801b19a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801b14a:	45e0      	cmp	r8, ip
 801b14c:	dd25      	ble.n	801b19a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801b14e:	b335      	cbz	r5, 801b19e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801b150:	3301      	adds	r3, #1
 801b152:	449e      	add	lr, r3
 801b154:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801b158:	f01e 0f01 	tst.w	lr, #1
 801b15c:	5cd2      	ldrb	r2, [r2, r3]
 801b15e:	bf0c      	ite	eq
 801b160:	f002 020f 	andeq.w	r2, r2, #15
 801b164:	1112      	asrne	r2, r2, #4
 801b166:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b16a:	b2d3      	uxtb	r3, r2
 801b16c:	2d0f      	cmp	r5, #15
 801b16e:	d917      	bls.n	801b1a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801b170:	4b37      	ldr	r3, [pc, #220]	; (801b250 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 801b172:	4a38      	ldr	r2, [pc, #224]	; (801b254 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 801b174:	4838      	ldr	r0, [pc, #224]	; (801b258 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801b176:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801b17a:	f000 fc4f 	bl	801ba1c <__assert_func>
 801b17e:	2600      	movs	r6, #0
 801b180:	e7b1      	b.n	801b0e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801b182:	2000      	movs	r0, #0
 801b184:	4606      	mov	r6, r0
 801b186:	e7c3      	b.n	801b110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b188:	2000      	movs	r0, #0
 801b18a:	e7c1      	b.n	801b110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b18c:	4628      	mov	r0, r5
 801b18e:	e7bf      	b.n	801b110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b190:	2400      	movs	r4, #0
 801b192:	e7d7      	b.n	801b144 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801b194:	2300      	movs	r3, #0
 801b196:	461c      	mov	r4, r3
 801b198:	e7e8      	b.n	801b16c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801b19a:	2300      	movs	r3, #0
 801b19c:	e7e6      	b.n	801b16c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801b19e:	462b      	mov	r3, r5
 801b1a0:	2f0f      	cmp	r7, #15
 801b1a2:	d8e5      	bhi.n	801b170 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801b1a4:	b2ad      	uxth	r5, r5
 801b1a6:	b2bf      	uxth	r7, r7
 801b1a8:	fb05 fc07 	mul.w	ip, r5, r7
 801b1ac:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801b1b0:	012d      	lsls	r5, r5, #4
 801b1b2:	b2bf      	uxth	r7, r7
 801b1b4:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801b1b8:	eba5 050c 	sub.w	r5, r5, ip
 801b1bc:	1bd2      	subs	r2, r2, r7
 801b1be:	b2ad      	uxth	r5, r5
 801b1c0:	b292      	uxth	r2, r2
 801b1c2:	4368      	muls	r0, r5
 801b1c4:	fb06 0002 	mla	r0, r6, r2, r0
 801b1c8:	fb07 0404 	mla	r4, r7, r4, r0
 801b1cc:	fb0c 4303 	mla	r3, ip, r3, r4
 801b1d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b1d4:	b3a3      	cbz	r3, 801b240 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801b1d6:	4a21      	ldr	r2, [pc, #132]	; (801b25c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801b1d8:	880e      	ldrh	r6, [r1, #0]
 801b1da:	6815      	ldr	r5, [r2, #0]
 801b1dc:	1234      	asrs	r4, r6, #8
 801b1de:	b29a      	uxth	r2, r3
 801b1e0:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801b1e4:	43db      	mvns	r3, r3
 801b1e6:	b2db      	uxtb	r3, r3
 801b1e8:	fb10 f002 	smulbb	r0, r0, r2
 801b1ec:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b1f0:	fb04 0403 	mla	r4, r4, r3, r0
 801b1f4:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801b1f8:	10f0      	asrs	r0, r6, #3
 801b1fa:	b2ed      	uxtb	r5, r5
 801b1fc:	00f6      	lsls	r6, r6, #3
 801b1fe:	fb17 f702 	smulbb	r7, r7, r2
 801b202:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b206:	fb15 f202 	smulbb	r2, r5, r2
 801b20a:	b2f6      	uxtb	r6, r6
 801b20c:	b2a4      	uxth	r4, r4
 801b20e:	fb00 7003 	mla	r0, r0, r3, r7
 801b212:	fb06 2303 	mla	r3, r6, r3, r2
 801b216:	b29a      	uxth	r2, r3
 801b218:	1c63      	adds	r3, r4, #1
 801b21a:	b280      	uxth	r0, r0
 801b21c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801b220:	1c53      	adds	r3, r2, #1
 801b222:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b226:	1c42      	adds	r2, r0, #1
 801b228:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b22c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b230:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b234:	0940      	lsrs	r0, r0, #5
 801b236:	4323      	orrs	r3, r4
 801b238:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b23c:	4303      	orrs	r3, r0
 801b23e:	800b      	strh	r3, [r1, #0]
 801b240:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b244:	2d0f      	cmp	r5, #15
 801b246:	d893      	bhi.n	801b170 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801b248:	463b      	mov	r3, r7
 801b24a:	463c      	mov	r4, r7
 801b24c:	e7aa      	b.n	801b1a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801b24e:	bf00      	nop
 801b250:	0802050e 	.word	0x0802050e
 801b254:	08020ade 	.word	0x08020ade
 801b258:	08020592 	.word	0x08020592
 801b25c:	20013510 	.word	0x20013510

0801b260 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b264:	ed2d 8b08 	vpush	{d8-d11}
 801b268:	b093      	sub	sp, #76	; 0x4c
 801b26a:	461d      	mov	r5, r3
 801b26c:	920c      	str	r2, [sp, #48]	; 0x30
 801b26e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b270:	9107      	str	r1, [sp, #28]
 801b272:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b276:	9011      	str	r0, [sp, #68]	; 0x44
 801b278:	6850      	ldr	r0, [r2, #4]
 801b27a:	6812      	ldr	r2, [r2, #0]
 801b27c:	fb00 1303 	mla	r3, r0, r3, r1
 801b280:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801b284:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b286:	689b      	ldr	r3, [r3, #8]
 801b288:	3301      	adds	r3, #1
 801b28a:	f023 0301 	bic.w	r3, r3, #1
 801b28e:	9306      	str	r3, [sp, #24]
 801b290:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b292:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801b296:	681f      	ldr	r7, [r3, #0]
 801b298:	eeb0 aa40 	vmov.f32	s20, s0
 801b29c:	eef0 9a60 	vmov.f32	s19, s1
 801b2a0:	eeb0 9a41 	vmov.f32	s18, s2
 801b2a4:	eeb0 8a62 	vmov.f32	s16, s5
 801b2a8:	eef0 8a43 	vmov.f32	s17, s6
 801b2ac:	eef0 ba44 	vmov.f32	s23, s8
 801b2b0:	eeb0 ba64 	vmov.f32	s22, s9
 801b2b4:	eef0 aa45 	vmov.f32	s21, s10
 801b2b8:	9b07      	ldr	r3, [sp, #28]
 801b2ba:	2b00      	cmp	r3, #0
 801b2bc:	dc03      	bgt.n	801b2c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b2be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b2c0:	2b00      	cmp	r3, #0
 801b2c2:	f340 8267 	ble.w	801b794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801b2c6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b2c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b2cc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b2d0:	1e48      	subs	r0, r1, #1
 801b2d2:	f102 3cff 	add.w	ip, r2, #4294967295
 801b2d6:	2d00      	cmp	r5, #0
 801b2d8:	f340 80b8 	ble.w	801b44c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801b2dc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b2e0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b2e4:	d406      	bmi.n	801b2f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b2e6:	4586      	cmp	lr, r0
 801b2e8:	da04      	bge.n	801b2f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b2ea:	2b00      	cmp	r3, #0
 801b2ec:	db02      	blt.n	801b2f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b2ee:	4563      	cmp	r3, ip
 801b2f0:	f2c0 80ad 	blt.w	801b44e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b2f4:	f11e 0e01 	adds.w	lr, lr, #1
 801b2f8:	f100 80a0 	bmi.w	801b43c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b2fc:	4571      	cmp	r1, lr
 801b2fe:	f2c0 809d 	blt.w	801b43c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b302:	3301      	adds	r3, #1
 801b304:	f100 809a 	bmi.w	801b43c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b308:	429a      	cmp	r2, r3
 801b30a:	f2c0 8097 	blt.w	801b43c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b30e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801b312:	9509      	str	r5, [sp, #36]	; 0x24
 801b314:	46c8      	mov	r8, r9
 801b316:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b318:	2b00      	cmp	r3, #0
 801b31a:	f340 80b6 	ble.w	801b48a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b31e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801b322:	9308      	str	r3, [sp, #32]
 801b324:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b326:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801b32a:	1423      	asrs	r3, r4, #16
 801b32c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b330:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b334:	f100 813e 	bmi.w	801b5b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b338:	f10c 3bff 	add.w	fp, ip, #4294967295
 801b33c:	455b      	cmp	r3, fp
 801b33e:	f280 8139 	bge.w	801b5b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b342:	2800      	cmp	r0, #0
 801b344:	f2c0 8136 	blt.w	801b5b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b348:	f10e 3bff 	add.w	fp, lr, #4294967295
 801b34c:	4558      	cmp	r0, fp
 801b34e:	f280 8131 	bge.w	801b5b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b352:	9a06      	ldr	r2, [sp, #24]
 801b354:	fb00 3302 	mla	r3, r0, r2, r3
 801b358:	0858      	lsrs	r0, r3, #1
 801b35a:	07da      	lsls	r2, r3, #31
 801b35c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801b360:	9a08      	ldr	r2, [sp, #32]
 801b362:	bf54      	ite	pl
 801b364:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b368:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b36c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b370:	fa5f fc8c 	uxtb.w	ip, ip
 801b374:	2a00      	cmp	r2, #0
 801b376:	f000 80cb 	beq.w	801b510 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801b37a:	1c58      	adds	r0, r3, #1
 801b37c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801b380:	07c0      	lsls	r0, r0, #31
 801b382:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b386:	bf54      	ite	pl
 801b388:	f00e 0e0f 	andpl.w	lr, lr, #15
 801b38c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801b390:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801b394:	fa5f fe8e 	uxtb.w	lr, lr
 801b398:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801b39c:	b1b9      	cbz	r1, 801b3ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b39e:	4453      	add	r3, sl
 801b3a0:	0858      	lsrs	r0, r3, #1
 801b3a2:	07da      	lsls	r2, r3, #31
 801b3a4:	5c38      	ldrb	r0, [r7, r0]
 801b3a6:	bf54      	ite	pl
 801b3a8:	f000 000f 	andpl.w	r0, r0, #15
 801b3ac:	1100      	asrmi	r0, r0, #4
 801b3ae:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b3b2:	b2c0      	uxtb	r0, r0
 801b3b4:	900a      	str	r0, [sp, #40]	; 0x28
 801b3b6:	1c58      	adds	r0, r3, #1
 801b3b8:	0843      	lsrs	r3, r0, #1
 801b3ba:	07c2      	lsls	r2, r0, #31
 801b3bc:	5cfb      	ldrb	r3, [r7, r3]
 801b3be:	bf54      	ite	pl
 801b3c0:	f003 030f 	andpl.w	r3, r3, #15
 801b3c4:	111b      	asrmi	r3, r3, #4
 801b3c6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b3ca:	b2db      	uxtb	r3, r3
 801b3cc:	930e      	str	r3, [sp, #56]	; 0x38
 801b3ce:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b3d2:	b289      	uxth	r1, r1
 801b3d4:	fb02 f301 	mul.w	r3, r2, r1
 801b3d8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801b3dc:	0112      	lsls	r2, r2, #4
 801b3de:	b289      	uxth	r1, r1
 801b3e0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801b3e4:	1a40      	subs	r0, r0, r1
 801b3e6:	fa1f fe80 	uxth.w	lr, r0
 801b3ea:	1ad2      	subs	r2, r2, r3
 801b3ec:	980d      	ldr	r0, [sp, #52]	; 0x34
 801b3ee:	b292      	uxth	r2, r2
 801b3f0:	4342      	muls	r2, r0
 801b3f2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801b3f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b3f8:	fb01 c102 	mla	r1, r1, r2, ip
 801b3fc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801b3fe:	fb03 1302 	mla	r3, r3, r2, r1
 801b402:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b406:	2bff      	cmp	r3, #255	; 0xff
 801b408:	f040 8093 	bne.w	801b532 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801b40c:	4bbe      	ldr	r3, [pc, #760]	; (801b708 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b40e:	681a      	ldr	r2, [r3, #0]
 801b410:	4bbe      	ldr	r3, [pc, #760]	; (801b70c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801b412:	0951      	lsrs	r1, r2, #5
 801b414:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801b418:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b41c:	430b      	orrs	r3, r1
 801b41e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b422:	4313      	orrs	r3, r2
 801b424:	f8a8 3000 	strh.w	r3, [r8]
 801b428:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b42a:	441c      	add	r4, r3
 801b42c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b42e:	441e      	add	r6, r3
 801b430:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b432:	3b01      	subs	r3, #1
 801b434:	f108 0802 	add.w	r8, r8, #2
 801b438:	9309      	str	r3, [sp, #36]	; 0x24
 801b43a:	e76c      	b.n	801b316 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801b43c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b43e:	441c      	add	r4, r3
 801b440:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b442:	3d01      	subs	r5, #1
 801b444:	441e      	add	r6, r3
 801b446:	f109 0902 	add.w	r9, r9, #2
 801b44a:	e744      	b.n	801b2d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b44c:	d021      	beq.n	801b492 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801b44e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b450:	1e6b      	subs	r3, r5, #1
 801b452:	fb00 4003 	mla	r0, r0, r3, r4
 801b456:	1400      	asrs	r0, r0, #16
 801b458:	f53f af59 	bmi.w	801b30e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b45c:	3901      	subs	r1, #1
 801b45e:	4288      	cmp	r0, r1
 801b460:	f6bf af55 	bge.w	801b30e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b464:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b466:	fb01 6303 	mla	r3, r1, r3, r6
 801b46a:	141b      	asrs	r3, r3, #16
 801b46c:	f53f af4f 	bmi.w	801b30e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b470:	3a01      	subs	r2, #1
 801b472:	4293      	cmp	r3, r2
 801b474:	f6bf af4b 	bge.w	801b30e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b478:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801b47c:	9308      	str	r3, [sp, #32]
 801b47e:	46a8      	mov	r8, r5
 801b480:	46ce      	mov	lr, r9
 801b482:	f1b8 0f00 	cmp.w	r8, #0
 801b486:	f300 80b5 	bgt.w	801b5f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801b48a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b48e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801b492:	9b07      	ldr	r3, [sp, #28]
 801b494:	2b00      	cmp	r3, #0
 801b496:	f340 817d 	ble.w	801b794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801b49a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b49e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b4a2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b4a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b4a8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b4ac:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b4b0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b4b4:	eef0 6a48 	vmov.f32	s13, s16
 801b4b8:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b4bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b4c0:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b4c4:	ee16 4a90 	vmov	r4, s13
 801b4c8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b4cc:	eef0 6a68 	vmov.f32	s13, s17
 801b4d0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b4d4:	ee18 2a10 	vmov	r2, s16
 801b4d8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b4dc:	fb92 f3f3 	sdiv	r3, r2, r3
 801b4e0:	ee18 2a90 	vmov	r2, s17
 801b4e4:	9327      	str	r3, [sp, #156]	; 0x9c
 801b4e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b4e8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b4ec:	9328      	str	r3, [sp, #160]	; 0xa0
 801b4ee:	9b07      	ldr	r3, [sp, #28]
 801b4f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b4f2:	3b01      	subs	r3, #1
 801b4f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b4f8:	9307      	str	r3, [sp, #28]
 801b4fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b4fc:	ee16 6a90 	vmov	r6, s13
 801b500:	bf14      	ite	ne
 801b502:	461d      	movne	r5, r3
 801b504:	4615      	moveq	r5, r2
 801b506:	eef0 8a67 	vmov.f32	s17, s15
 801b50a:	eeb0 8a47 	vmov.f32	s16, s14
 801b50e:	e6d3      	b.n	801b2b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b510:	2900      	cmp	r1, #0
 801b512:	f43f af5c 	beq.w	801b3ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b516:	eb0a 0003 	add.w	r0, sl, r3
 801b51a:	0843      	lsrs	r3, r0, #1
 801b51c:	07c0      	lsls	r0, r0, #31
 801b51e:	5cfb      	ldrb	r3, [r7, r3]
 801b520:	bf54      	ite	pl
 801b522:	f003 030f 	andpl.w	r3, r3, #15
 801b526:	111b      	asrmi	r3, r3, #4
 801b528:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b52c:	b2db      	uxtb	r3, r3
 801b52e:	930a      	str	r3, [sp, #40]	; 0x28
 801b530:	e74d      	b.n	801b3ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b532:	2b00      	cmp	r3, #0
 801b534:	f43f af78 	beq.w	801b428 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b538:	4a73      	ldr	r2, [pc, #460]	; (801b708 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b53a:	f8b8 c000 	ldrh.w	ip, [r8]
 801b53e:	6810      	ldr	r0, [r2, #0]
 801b540:	fa1f fe83 	uxth.w	lr, r3
 801b544:	ea4f 212c 	mov.w	r1, ip, asr #8
 801b548:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801b54c:	43db      	mvns	r3, r3
 801b54e:	b2db      	uxtb	r3, r3
 801b550:	fb12 f20e 	smulbb	r2, r2, lr
 801b554:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b558:	fb01 2103 	mla	r1, r1, r3, r2
 801b55c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801b560:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b564:	b2c0      	uxtb	r0, r0
 801b566:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b56a:	fb1b fb0e 	smulbb	fp, fp, lr
 801b56e:	b289      	uxth	r1, r1
 801b570:	fb10 fe0e 	smulbb	lr, r0, lr
 801b574:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b578:	fa5f fc8c 	uxtb.w	ip, ip
 801b57c:	fb02 b203 	mla	r2, r2, r3, fp
 801b580:	1c48      	adds	r0, r1, #1
 801b582:	fb0c e303 	mla	r3, ip, r3, lr
 801b586:	b292      	uxth	r2, r2
 801b588:	b29b      	uxth	r3, r3
 801b58a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801b58e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801b592:	f102 0b01 	add.w	fp, r2, #1
 801b596:	1c59      	adds	r1, r3, #1
 801b598:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b59c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801b5a0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b5a4:	0952      	lsrs	r2, r2, #5
 801b5a6:	4301      	orrs	r1, r0
 801b5a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b5ac:	4311      	orrs	r1, r2
 801b5ae:	f8a8 1000 	strh.w	r1, [r8]
 801b5b2:	e739      	b.n	801b428 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b5b4:	f113 0b01 	adds.w	fp, r3, #1
 801b5b8:	f53f af36 	bmi.w	801b428 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b5bc:	45dc      	cmp	ip, fp
 801b5be:	f6ff af33 	blt.w	801b428 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b5c2:	f110 0b01 	adds.w	fp, r0, #1
 801b5c6:	f53f af2f 	bmi.w	801b428 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b5ca:	45de      	cmp	lr, fp
 801b5cc:	f6ff af2c 	blt.w	801b428 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b5d0:	9a08      	ldr	r2, [sp, #32]
 801b5d2:	9302      	str	r3, [sp, #8]
 801b5d4:	fa0f f38e 	sxth.w	r3, lr
 801b5d8:	9301      	str	r3, [sp, #4]
 801b5da:	fa0f f38c 	sxth.w	r3, ip
 801b5de:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801b5e2:	9105      	str	r1, [sp, #20]
 801b5e4:	9300      	str	r3, [sp, #0]
 801b5e6:	463a      	mov	r2, r7
 801b5e8:	4653      	mov	r3, sl
 801b5ea:	4641      	mov	r1, r8
 801b5ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b5ee:	f7ff fd57 	bl	801b0a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801b5f2:	e719      	b.n	801b428 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b5f4:	9906      	ldr	r1, [sp, #24]
 801b5f6:	1422      	asrs	r2, r4, #16
 801b5f8:	1433      	asrs	r3, r6, #16
 801b5fa:	fb01 2303 	mla	r3, r1, r3, r2
 801b5fe:	085a      	lsrs	r2, r3, #1
 801b600:	07d9      	lsls	r1, r3, #31
 801b602:	5cba      	ldrb	r2, [r7, r2]
 801b604:	bf54      	ite	pl
 801b606:	f002 020f 	andpl.w	r2, r2, #15
 801b60a:	1112      	asrmi	r2, r2, #4
 801b60c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b610:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b614:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b618:	b2d2      	uxtb	r2, r2
 801b61a:	2800      	cmp	r0, #0
 801b61c:	d062      	beq.n	801b6e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801b61e:	f103 0a01 	add.w	sl, r3, #1
 801b622:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801b626:	f01a 0f01 	tst.w	sl, #1
 801b62a:	5c79      	ldrb	r1, [r7, r1]
 801b62c:	bf0c      	ite	eq
 801b62e:	f001 010f 	andeq.w	r1, r1, #15
 801b632:	1109      	asrne	r1, r1, #4
 801b634:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b638:	b2c9      	uxtb	r1, r1
 801b63a:	910f      	str	r1, [sp, #60]	; 0x3c
 801b63c:	f1bc 0f00 	cmp.w	ip, #0
 801b640:	d019      	beq.n	801b676 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b642:	9908      	ldr	r1, [sp, #32]
 801b644:	440b      	add	r3, r1
 801b646:	0859      	lsrs	r1, r3, #1
 801b648:	f013 0f01 	tst.w	r3, #1
 801b64c:	5c79      	ldrb	r1, [r7, r1]
 801b64e:	bf0c      	ite	eq
 801b650:	f001 010f 	andeq.w	r1, r1, #15
 801b654:	1109      	asrne	r1, r1, #4
 801b656:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b65a:	b2c9      	uxtb	r1, r1
 801b65c:	3301      	adds	r3, #1
 801b65e:	910b      	str	r1, [sp, #44]	; 0x2c
 801b660:	0859      	lsrs	r1, r3, #1
 801b662:	07db      	lsls	r3, r3, #31
 801b664:	5c79      	ldrb	r1, [r7, r1]
 801b666:	bf54      	ite	pl
 801b668:	f001 010f 	andpl.w	r1, r1, #15
 801b66c:	1109      	asrmi	r1, r1, #4
 801b66e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b672:	b2c9      	uxtb	r1, r1
 801b674:	9110      	str	r1, [sp, #64]	; 0x40
 801b676:	b280      	uxth	r0, r0
 801b678:	fa1f fc8c 	uxth.w	ip, ip
 801b67c:	fb00 f30c 	mul.w	r3, r0, ip
 801b680:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801b684:	0100      	lsls	r0, r0, #4
 801b686:	fa1f fc8c 	uxth.w	ip, ip
 801b68a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801b68e:	eba1 010c 	sub.w	r1, r1, ip
 801b692:	fa1f fa81 	uxth.w	sl, r1
 801b696:	1ac0      	subs	r0, r0, r3
 801b698:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b69a:	b280      	uxth	r0, r0
 801b69c:	4348      	muls	r0, r1
 801b69e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b6a0:	fb02 020a 	mla	r2, r2, sl, r0
 801b6a4:	fb0c 2c01 	mla	ip, ip, r1, r2
 801b6a8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b6aa:	fb03 c302 	mla	r3, r3, r2, ip
 801b6ae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b6b2:	2bff      	cmp	r3, #255	; 0xff
 801b6b4:	d12c      	bne.n	801b710 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801b6b6:	4b14      	ldr	r3, [pc, #80]	; (801b708 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b6b8:	681a      	ldr	r2, [r3, #0]
 801b6ba:	4b14      	ldr	r3, [pc, #80]	; (801b70c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801b6bc:	0951      	lsrs	r1, r2, #5
 801b6be:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801b6c2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b6c6:	430b      	orrs	r3, r1
 801b6c8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b6cc:	4313      	orrs	r3, r2
 801b6ce:	f8ae 3000 	strh.w	r3, [lr]
 801b6d2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b6d4:	441c      	add	r4, r3
 801b6d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b6d8:	f10e 0e02 	add.w	lr, lr, #2
 801b6dc:	441e      	add	r6, r3
 801b6de:	f108 38ff 	add.w	r8, r8, #4294967295
 801b6e2:	e6ce      	b.n	801b482 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801b6e4:	f1bc 0f00 	cmp.w	ip, #0
 801b6e8:	d0c5      	beq.n	801b676 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b6ea:	9908      	ldr	r1, [sp, #32]
 801b6ec:	440b      	add	r3, r1
 801b6ee:	0859      	lsrs	r1, r3, #1
 801b6f0:	07db      	lsls	r3, r3, #31
 801b6f2:	5c79      	ldrb	r1, [r7, r1]
 801b6f4:	bf54      	ite	pl
 801b6f6:	f001 010f 	andpl.w	r1, r1, #15
 801b6fa:	1109      	asrmi	r1, r1, #4
 801b6fc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b700:	b2c9      	uxtb	r1, r1
 801b702:	910b      	str	r1, [sp, #44]	; 0x2c
 801b704:	e7b7      	b.n	801b676 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b706:	bf00      	nop
 801b708:	20013510 	.word	0x20013510
 801b70c:	fffff800 	.word	0xfffff800
 801b710:	2b00      	cmp	r3, #0
 801b712:	d0de      	beq.n	801b6d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801b714:	4a22      	ldr	r2, [pc, #136]	; (801b7a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 801b716:	f8be c000 	ldrh.w	ip, [lr]
 801b71a:	6810      	ldr	r0, [r2, #0]
 801b71c:	fa1f fa83 	uxth.w	sl, r3
 801b720:	ea4f 212c 	mov.w	r1, ip, asr #8
 801b724:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801b728:	43db      	mvns	r3, r3
 801b72a:	b2db      	uxtb	r3, r3
 801b72c:	fb12 f20a 	smulbb	r2, r2, sl
 801b730:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b734:	fb01 2103 	mla	r1, r1, r3, r2
 801b738:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801b73c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b740:	b2c0      	uxtb	r0, r0
 801b742:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b746:	fa5f fc8c 	uxtb.w	ip, ip
 801b74a:	fb10 f00a 	smulbb	r0, r0, sl
 801b74e:	fb0c 0003 	mla	r0, ip, r3, r0
 801b752:	b289      	uxth	r1, r1
 801b754:	fb1b fb0a 	smulbb	fp, fp, sl
 801b758:	b280      	uxth	r0, r0
 801b75a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b75e:	fb02 b203 	mla	r2, r2, r3, fp
 801b762:	1c4b      	adds	r3, r1, #1
 801b764:	f100 0b01 	add.w	fp, r0, #1
 801b768:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b76c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801b770:	b292      	uxth	r2, r2
 801b772:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801b776:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b77a:	ea4b 0101 	orr.w	r1, fp, r1
 801b77e:	f102 0b01 	add.w	fp, r2, #1
 801b782:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801b786:	0952      	lsrs	r2, r2, #5
 801b788:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b78c:	4311      	orrs	r1, r2
 801b78e:	f8ae 1000 	strh.w	r1, [lr]
 801b792:	e79e      	b.n	801b6d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801b794:	b013      	add	sp, #76	; 0x4c
 801b796:	ecbd 8b08 	vpop	{d8-d11}
 801b79a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b79e:	bf00      	nop
 801b7a0:	20013510 	.word	0x20013510

0801b7a4 <CRC_Lock>:
 801b7a4:	b530      	push	{r4, r5, lr}
 801b7a6:	4a20      	ldr	r2, [pc, #128]	; (801b828 <CRC_Lock+0x84>)
 801b7a8:	6813      	ldr	r3, [r2, #0]
 801b7aa:	f023 0301 	bic.w	r3, r3, #1
 801b7ae:	6013      	str	r3, [r2, #0]
 801b7b0:	4b1e      	ldr	r3, [pc, #120]	; (801b82c <CRC_Lock+0x88>)
 801b7b2:	681a      	ldr	r2, [r3, #0]
 801b7b4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801b7b8:	4022      	ands	r2, r4
 801b7ba:	f24c 2540 	movw	r5, #49728	; 0xc240
 801b7be:	42aa      	cmp	r2, r5
 801b7c0:	d005      	beq.n	801b7ce <CRC_Lock+0x2a>
 801b7c2:	681b      	ldr	r3, [r3, #0]
 801b7c4:	f24c 2270 	movw	r2, #49776	; 0xc270
 801b7c8:	4023      	ands	r3, r4
 801b7ca:	4293      	cmp	r3, r2
 801b7cc:	d124      	bne.n	801b818 <CRC_Lock+0x74>
 801b7ce:	4b18      	ldr	r3, [pc, #96]	; (801b830 <CRC_Lock+0x8c>)
 801b7d0:	681b      	ldr	r3, [r3, #0]
 801b7d2:	bb0b      	cbnz	r3, 801b818 <CRC_Lock+0x74>
 801b7d4:	4b17      	ldr	r3, [pc, #92]	; (801b834 <CRC_Lock+0x90>)
 801b7d6:	681a      	ldr	r2, [r3, #0]
 801b7d8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b7dc:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801b7e0:	d00d      	beq.n	801b7fe <CRC_Lock+0x5a>
 801b7e2:	681a      	ldr	r2, [r3, #0]
 801b7e4:	f240 4483 	movw	r4, #1155	; 0x483
 801b7e8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b7ec:	42a2      	cmp	r2, r4
 801b7ee:	d006      	beq.n	801b7fe <CRC_Lock+0x5a>
 801b7f0:	681b      	ldr	r3, [r3, #0]
 801b7f2:	f240 4285 	movw	r2, #1157	; 0x485
 801b7f6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b7fa:	4293      	cmp	r3, r2
 801b7fc:	d10c      	bne.n	801b818 <CRC_Lock+0x74>
 801b7fe:	4b0e      	ldr	r3, [pc, #56]	; (801b838 <CRC_Lock+0x94>)
 801b800:	2201      	movs	r2, #1
 801b802:	601a      	str	r2, [r3, #0]
 801b804:	681a      	ldr	r2, [r3, #0]
 801b806:	2a00      	cmp	r2, #0
 801b808:	d1fc      	bne.n	801b804 <CRC_Lock+0x60>
 801b80a:	4b0c      	ldr	r3, [pc, #48]	; (801b83c <CRC_Lock+0x98>)
 801b80c:	6018      	str	r0, [r3, #0]
 801b80e:	6818      	ldr	r0, [r3, #0]
 801b810:	1a43      	subs	r3, r0, r1
 801b812:	4258      	negs	r0, r3
 801b814:	4158      	adcs	r0, r3
 801b816:	bd30      	pop	{r4, r5, pc}
 801b818:	4b09      	ldr	r3, [pc, #36]	; (801b840 <CRC_Lock+0x9c>)
 801b81a:	2201      	movs	r2, #1
 801b81c:	601a      	str	r2, [r3, #0]
 801b81e:	681a      	ldr	r2, [r3, #0]
 801b820:	2a00      	cmp	r2, #0
 801b822:	d1fc      	bne.n	801b81e <CRC_Lock+0x7a>
 801b824:	4b07      	ldr	r3, [pc, #28]	; (801b844 <CRC_Lock+0xa0>)
 801b826:	e7f1      	b.n	801b80c <CRC_Lock+0x68>
 801b828:	e0002000 	.word	0xe0002000
 801b82c:	e000ed00 	.word	0xe000ed00
 801b830:	e0042000 	.word	0xe0042000
 801b834:	5c001000 	.word	0x5c001000
 801b838:	58024c08 	.word	0x58024c08
 801b83c:	58024c00 	.word	0x58024c00
 801b840:	40023008 	.word	0x40023008
 801b844:	40023000 	.word	0x40023000

0801b848 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801b848:	6101      	str	r1, [r0, #16]
 801b84a:	4770      	bx	lr

0801b84c <_ZN8touchgfx8Gestures4tickEv>:
 801b84c:	7b83      	ldrb	r3, [r0, #14]
 801b84e:	b14b      	cbz	r3, 801b864 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801b850:	8903      	ldrh	r3, [r0, #8]
 801b852:	3301      	adds	r3, #1
 801b854:	b29b      	uxth	r3, r3
 801b856:	2b07      	cmp	r3, #7
 801b858:	8103      	strh	r3, [r0, #8]
 801b85a:	bf81      	itttt	hi
 801b85c:	2300      	movhi	r3, #0
 801b85e:	8143      	strhhi	r3, [r0, #10]
 801b860:	8183      	strhhi	r3, [r0, #12]
 801b862:	7383      	strbhi	r3, [r0, #14]
 801b864:	4770      	bx	lr
	...

0801b868 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801b868:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801b86c:	4604      	mov	r4, r0
 801b86e:	8880      	ldrh	r0, [r0, #4]
 801b870:	f8ad 0006 	strh.w	r0, [sp, #6]
 801b874:	4698      	mov	r8, r3
 801b876:	eba8 0000 	sub.w	r0, r8, r0
 801b87a:	4b1c      	ldr	r3, [pc, #112]	; (801b8ec <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801b87c:	9300      	str	r3, [sp, #0]
 801b87e:	b280      	uxth	r0, r0
 801b880:	2300      	movs	r3, #0
 801b882:	f88d 3004 	strb.w	r3, [sp, #4]
 801b886:	b203      	sxth	r3, r0
 801b888:	2b00      	cmp	r3, #0
 801b88a:	bfb8      	it	lt
 801b88c:	4240      	neglt	r0, r0
 801b88e:	4617      	mov	r7, r2
 801b890:	8aa2      	ldrh	r2, [r4, #20]
 801b892:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801b896:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b89a:	bfb8      	it	lt
 801b89c:	b203      	sxthlt	r3, r0
 801b89e:	460e      	mov	r6, r1
 801b8a0:	4293      	cmp	r3, r2
 801b8a2:	88e1      	ldrh	r1, [r4, #6]
 801b8a4:	f8ad 1008 	strh.w	r1, [sp, #8]
 801b8a8:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b8ac:	dc08      	bgt.n	801b8c0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801b8ae:	1a69      	subs	r1, r5, r1
 801b8b0:	b289      	uxth	r1, r1
 801b8b2:	b20b      	sxth	r3, r1
 801b8b4:	2b00      	cmp	r3, #0
 801b8b6:	bfbc      	itt	lt
 801b8b8:	4249      	neglt	r1, r1
 801b8ba:	b20b      	sxthlt	r3, r1
 801b8bc:	429a      	cmp	r2, r3
 801b8be:	da13      	bge.n	801b8e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801b8c0:	6920      	ldr	r0, [r4, #16]
 801b8c2:	6803      	ldr	r3, [r0, #0]
 801b8c4:	4669      	mov	r1, sp
 801b8c6:	685b      	ldr	r3, [r3, #4]
 801b8c8:	4798      	blx	r3
 801b8ca:	eba8 0606 	sub.w	r6, r8, r6
 801b8ce:	2300      	movs	r3, #0
 801b8d0:	1bef      	subs	r7, r5, r7
 801b8d2:	2001      	movs	r0, #1
 801b8d4:	8123      	strh	r3, [r4, #8]
 801b8d6:	8166      	strh	r6, [r4, #10]
 801b8d8:	81a7      	strh	r7, [r4, #12]
 801b8da:	f8a4 8004 	strh.w	r8, [r4, #4]
 801b8de:	80e5      	strh	r5, [r4, #6]
 801b8e0:	73a0      	strb	r0, [r4, #14]
 801b8e2:	b004      	add	sp, #16
 801b8e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b8e8:	2000      	movs	r0, #0
 801b8ea:	e7fa      	b.n	801b8e2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801b8ec:	0801f9a4 	.word	0x0801f9a4

0801b8f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801b8f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b8f2:	461e      	mov	r6, r3
 801b8f4:	1e4b      	subs	r3, r1, #1
 801b8f6:	2b01      	cmp	r3, #1
 801b8f8:	b085      	sub	sp, #20
 801b8fa:	4604      	mov	r4, r0
 801b8fc:	460d      	mov	r5, r1
 801b8fe:	4617      	mov	r7, r2
 801b900:	d84b      	bhi.n	801b99a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801b902:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801b906:	1cd3      	adds	r3, r2, #3
 801b908:	b29b      	uxth	r3, r3
 801b90a:	2b06      	cmp	r3, #6
 801b90c:	d916      	bls.n	801b93c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801b90e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801b9b0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b912:	f8cd c004 	str.w	ip, [sp, #4]
 801b916:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b91a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b91e:	6900      	ldr	r0, [r0, #16]
 801b920:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b924:	f04f 0c00 	mov.w	ip, #0
 801b928:	f88d c008 	strb.w	ip, [sp, #8]
 801b92c:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b930:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b934:	6803      	ldr	r3, [r0, #0]
 801b936:	a901      	add	r1, sp, #4
 801b938:	689b      	ldr	r3, [r3, #8]
 801b93a:	4798      	blx	r3
 801b93c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b940:	1cd3      	adds	r3, r2, #3
 801b942:	b29b      	uxth	r3, r3
 801b944:	2b06      	cmp	r3, #6
 801b946:	d916      	bls.n	801b976 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b948:	f8df c064 	ldr.w	ip, [pc, #100]	; 801b9b0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b94c:	f8cd c004 	str.w	ip, [sp, #4]
 801b950:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b954:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b958:	6920      	ldr	r0, [r4, #16]
 801b95a:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b95e:	f04f 0c01 	mov.w	ip, #1
 801b962:	f88d c008 	strb.w	ip, [sp, #8]
 801b966:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b96a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b96e:	6803      	ldr	r3, [r0, #0]
 801b970:	a901      	add	r1, sp, #4
 801b972:	689b      	ldr	r3, [r3, #8]
 801b974:	4798      	blx	r3
 801b976:	4b0d      	ldr	r3, [pc, #52]	; (801b9ac <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801b978:	9301      	str	r3, [sp, #4]
 801b97a:	6920      	ldr	r0, [r4, #16]
 801b97c:	f88d 5008 	strb.w	r5, [sp, #8]
 801b980:	2300      	movs	r3, #0
 801b982:	f8ad 700a 	strh.w	r7, [sp, #10]
 801b986:	f8ad 600c 	strh.w	r6, [sp, #12]
 801b98a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b98e:	6803      	ldr	r3, [r0, #0]
 801b990:	a901      	add	r1, sp, #4
 801b992:	681b      	ldr	r3, [r3, #0]
 801b994:	4798      	blx	r3
 801b996:	b005      	add	sp, #20
 801b998:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b99a:	2900      	cmp	r1, #0
 801b99c:	d1eb      	bne.n	801b976 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b99e:	80a2      	strh	r2, [r4, #4]
 801b9a0:	80c6      	strh	r6, [r0, #6]
 801b9a2:	60a1      	str	r1, [r4, #8]
 801b9a4:	81a1      	strh	r1, [r4, #12]
 801b9a6:	73a1      	strb	r1, [r4, #14]
 801b9a8:	e7e5      	b.n	801b976 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b9aa:	bf00      	nop
 801b9ac:	0801f990 	.word	0x0801f990
 801b9b0:	0801f9b8 	.word	0x0801f9b8

0801b9b4 <__aeabi_atexit>:
 801b9b4:	460b      	mov	r3, r1
 801b9b6:	4601      	mov	r1, r0
 801b9b8:	4618      	mov	r0, r3
 801b9ba:	f000 b853 	b.w	801ba64 <__cxa_atexit>

0801b9be <_ZdlPvj>:
 801b9be:	f000 b812 	b.w	801b9e6 <_ZdlPv>

0801b9c2 <__cxa_guard_acquire>:
 801b9c2:	6803      	ldr	r3, [r0, #0]
 801b9c4:	07db      	lsls	r3, r3, #31
 801b9c6:	d406      	bmi.n	801b9d6 <__cxa_guard_acquire+0x14>
 801b9c8:	7843      	ldrb	r3, [r0, #1]
 801b9ca:	b103      	cbz	r3, 801b9ce <__cxa_guard_acquire+0xc>
 801b9cc:	deff      	udf	#255	; 0xff
 801b9ce:	2301      	movs	r3, #1
 801b9d0:	7043      	strb	r3, [r0, #1]
 801b9d2:	4618      	mov	r0, r3
 801b9d4:	4770      	bx	lr
 801b9d6:	2000      	movs	r0, #0
 801b9d8:	4770      	bx	lr

0801b9da <__cxa_guard_release>:
 801b9da:	2301      	movs	r3, #1
 801b9dc:	6003      	str	r3, [r0, #0]
 801b9de:	4770      	bx	lr

0801b9e0 <__cxa_pure_virtual>:
 801b9e0:	b508      	push	{r3, lr}
 801b9e2:	f000 f80f 	bl	801ba04 <_ZSt9terminatev>

0801b9e6 <_ZdlPv>:
 801b9e6:	f000 b88f 	b.w	801bb08 <free>

0801b9ea <_ZN10__cxxabiv111__terminateEPFvvE>:
 801b9ea:	b508      	push	{r3, lr}
 801b9ec:	4780      	blx	r0
 801b9ee:	f000 f80e 	bl	801ba0e <abort>
	...

0801b9f4 <_ZSt13get_terminatev>:
 801b9f4:	4b02      	ldr	r3, [pc, #8]	; (801ba00 <_ZSt13get_terminatev+0xc>)
 801b9f6:	6818      	ldr	r0, [r3, #0]
 801b9f8:	f3bf 8f5b 	dmb	ish
 801b9fc:	4770      	bx	lr
 801b9fe:	bf00      	nop
 801ba00:	200000f8 	.word	0x200000f8

0801ba04 <_ZSt9terminatev>:
 801ba04:	b508      	push	{r3, lr}
 801ba06:	f7ff fff5 	bl	801b9f4 <_ZSt13get_terminatev>
 801ba0a:	f7ff ffee 	bl	801b9ea <_ZN10__cxxabiv111__terminateEPFvvE>

0801ba0e <abort>:
 801ba0e:	b508      	push	{r3, lr}
 801ba10:	2006      	movs	r0, #6
 801ba12:	f000 fc67 	bl	801c2e4 <raise>
 801ba16:	2001      	movs	r0, #1
 801ba18:	f7e6 fa80 	bl	8001f1c <_exit>

0801ba1c <__assert_func>:
 801ba1c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801ba1e:	4614      	mov	r4, r2
 801ba20:	461a      	mov	r2, r3
 801ba22:	4b09      	ldr	r3, [pc, #36]	; (801ba48 <__assert_func+0x2c>)
 801ba24:	681b      	ldr	r3, [r3, #0]
 801ba26:	4605      	mov	r5, r0
 801ba28:	68d8      	ldr	r0, [r3, #12]
 801ba2a:	b14c      	cbz	r4, 801ba40 <__assert_func+0x24>
 801ba2c:	4b07      	ldr	r3, [pc, #28]	; (801ba4c <__assert_func+0x30>)
 801ba2e:	9100      	str	r1, [sp, #0]
 801ba30:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801ba34:	4906      	ldr	r1, [pc, #24]	; (801ba50 <__assert_func+0x34>)
 801ba36:	462b      	mov	r3, r5
 801ba38:	f000 f828 	bl	801ba8c <fiprintf>
 801ba3c:	f7ff ffe7 	bl	801ba0e <abort>
 801ba40:	4b04      	ldr	r3, [pc, #16]	; (801ba54 <__assert_func+0x38>)
 801ba42:	461c      	mov	r4, r3
 801ba44:	e7f3      	b.n	801ba2e <__assert_func+0x12>
 801ba46:	bf00      	nop
 801ba48:	200000fc 	.word	0x200000fc
 801ba4c:	08020d19 	.word	0x08020d19
 801ba50:	08020d26 	.word	0x08020d26
 801ba54:	08020d54 	.word	0x08020d54

0801ba58 <atexit>:
 801ba58:	2300      	movs	r3, #0
 801ba5a:	4601      	mov	r1, r0
 801ba5c:	461a      	mov	r2, r3
 801ba5e:	4618      	mov	r0, r3
 801ba60:	f000 bd50 	b.w	801c504 <__register_exitproc>

0801ba64 <__cxa_atexit>:
 801ba64:	b510      	push	{r4, lr}
 801ba66:	4c05      	ldr	r4, [pc, #20]	; (801ba7c <__cxa_atexit+0x18>)
 801ba68:	4613      	mov	r3, r2
 801ba6a:	b12c      	cbz	r4, 801ba78 <__cxa_atexit+0x14>
 801ba6c:	460a      	mov	r2, r1
 801ba6e:	4601      	mov	r1, r0
 801ba70:	2002      	movs	r0, #2
 801ba72:	f000 fd47 	bl	801c504 <__register_exitproc>
 801ba76:	bd10      	pop	{r4, pc}
 801ba78:	4620      	mov	r0, r4
 801ba7a:	e7fc      	b.n	801ba76 <__cxa_atexit+0x12>
 801ba7c:	0801c505 	.word	0x0801c505

0801ba80 <__errno>:
 801ba80:	4b01      	ldr	r3, [pc, #4]	; (801ba88 <__errno+0x8>)
 801ba82:	6818      	ldr	r0, [r3, #0]
 801ba84:	4770      	bx	lr
 801ba86:	bf00      	nop
 801ba88:	200000fc 	.word	0x200000fc

0801ba8c <fiprintf>:
 801ba8c:	b40e      	push	{r1, r2, r3}
 801ba8e:	b503      	push	{r0, r1, lr}
 801ba90:	4601      	mov	r1, r0
 801ba92:	ab03      	add	r3, sp, #12
 801ba94:	4805      	ldr	r0, [pc, #20]	; (801baac <fiprintf+0x20>)
 801ba96:	f853 2b04 	ldr.w	r2, [r3], #4
 801ba9a:	6800      	ldr	r0, [r0, #0]
 801ba9c:	9301      	str	r3, [sp, #4]
 801ba9e:	f000 f925 	bl	801bcec <_vfiprintf_r>
 801baa2:	b002      	add	sp, #8
 801baa4:	f85d eb04 	ldr.w	lr, [sp], #4
 801baa8:	b003      	add	sp, #12
 801baaa:	4770      	bx	lr
 801baac:	200000fc 	.word	0x200000fc

0801bab0 <__libc_init_array>:
 801bab0:	b570      	push	{r4, r5, r6, lr}
 801bab2:	4d0d      	ldr	r5, [pc, #52]	; (801bae8 <__libc_init_array+0x38>)
 801bab4:	4c0d      	ldr	r4, [pc, #52]	; (801baec <__libc_init_array+0x3c>)
 801bab6:	1b64      	subs	r4, r4, r5
 801bab8:	10a4      	asrs	r4, r4, #2
 801baba:	2600      	movs	r6, #0
 801babc:	42a6      	cmp	r6, r4
 801babe:	d109      	bne.n	801bad4 <__libc_init_array+0x24>
 801bac0:	4d0b      	ldr	r5, [pc, #44]	; (801baf0 <__libc_init_array+0x40>)
 801bac2:	4c0c      	ldr	r4, [pc, #48]	; (801baf4 <__libc_init_array+0x44>)
 801bac4:	f001 f9fc 	bl	801cec0 <_init>
 801bac8:	1b64      	subs	r4, r4, r5
 801baca:	10a4      	asrs	r4, r4, #2
 801bacc:	2600      	movs	r6, #0
 801bace:	42a6      	cmp	r6, r4
 801bad0:	d105      	bne.n	801bade <__libc_init_array+0x2e>
 801bad2:	bd70      	pop	{r4, r5, r6, pc}
 801bad4:	f855 3b04 	ldr.w	r3, [r5], #4
 801bad8:	4798      	blx	r3
 801bada:	3601      	adds	r6, #1
 801badc:	e7ee      	b.n	801babc <__libc_init_array+0xc>
 801bade:	f855 3b04 	ldr.w	r3, [r5], #4
 801bae2:	4798      	blx	r3
 801bae4:	3601      	adds	r6, #1
 801bae6:	e7f2      	b.n	801bace <__libc_init_array+0x1e>
 801bae8:	0805a33c 	.word	0x0805a33c
 801baec:	0805a33c 	.word	0x0805a33c
 801baf0:	0805a33c 	.word	0x0805a33c
 801baf4:	0805a350 	.word	0x0805a350

0801baf8 <malloc>:
 801baf8:	4b02      	ldr	r3, [pc, #8]	; (801bb04 <malloc+0xc>)
 801bafa:	4601      	mov	r1, r0
 801bafc:	6818      	ldr	r0, [r3, #0]
 801bafe:	f000 b871 	b.w	801bbe4 <_malloc_r>
 801bb02:	bf00      	nop
 801bb04:	200000fc 	.word	0x200000fc

0801bb08 <free>:
 801bb08:	4b02      	ldr	r3, [pc, #8]	; (801bb14 <free+0xc>)
 801bb0a:	4601      	mov	r1, r0
 801bb0c:	6818      	ldr	r0, [r3, #0]
 801bb0e:	f000 b819 	b.w	801bb44 <_free_r>
 801bb12:	bf00      	nop
 801bb14:	200000fc 	.word	0x200000fc

0801bb18 <memcpy>:
 801bb18:	440a      	add	r2, r1
 801bb1a:	4291      	cmp	r1, r2
 801bb1c:	f100 33ff 	add.w	r3, r0, #4294967295
 801bb20:	d100      	bne.n	801bb24 <memcpy+0xc>
 801bb22:	4770      	bx	lr
 801bb24:	b510      	push	{r4, lr}
 801bb26:	f811 4b01 	ldrb.w	r4, [r1], #1
 801bb2a:	f803 4f01 	strb.w	r4, [r3, #1]!
 801bb2e:	4291      	cmp	r1, r2
 801bb30:	d1f9      	bne.n	801bb26 <memcpy+0xe>
 801bb32:	bd10      	pop	{r4, pc}

0801bb34 <memset>:
 801bb34:	4402      	add	r2, r0
 801bb36:	4603      	mov	r3, r0
 801bb38:	4293      	cmp	r3, r2
 801bb3a:	d100      	bne.n	801bb3e <memset+0xa>
 801bb3c:	4770      	bx	lr
 801bb3e:	f803 1b01 	strb.w	r1, [r3], #1
 801bb42:	e7f9      	b.n	801bb38 <memset+0x4>

0801bb44 <_free_r>:
 801bb44:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801bb46:	2900      	cmp	r1, #0
 801bb48:	d048      	beq.n	801bbdc <_free_r+0x98>
 801bb4a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801bb4e:	9001      	str	r0, [sp, #4]
 801bb50:	2b00      	cmp	r3, #0
 801bb52:	f1a1 0404 	sub.w	r4, r1, #4
 801bb56:	bfb8      	it	lt
 801bb58:	18e4      	addlt	r4, r4, r3
 801bb5a:	f000 ff6f 	bl	801ca3c <__malloc_lock>
 801bb5e:	4a20      	ldr	r2, [pc, #128]	; (801bbe0 <_free_r+0x9c>)
 801bb60:	9801      	ldr	r0, [sp, #4]
 801bb62:	6813      	ldr	r3, [r2, #0]
 801bb64:	4615      	mov	r5, r2
 801bb66:	b933      	cbnz	r3, 801bb76 <_free_r+0x32>
 801bb68:	6063      	str	r3, [r4, #4]
 801bb6a:	6014      	str	r4, [r2, #0]
 801bb6c:	b003      	add	sp, #12
 801bb6e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801bb72:	f000 bf69 	b.w	801ca48 <__malloc_unlock>
 801bb76:	42a3      	cmp	r3, r4
 801bb78:	d90b      	bls.n	801bb92 <_free_r+0x4e>
 801bb7a:	6821      	ldr	r1, [r4, #0]
 801bb7c:	1862      	adds	r2, r4, r1
 801bb7e:	4293      	cmp	r3, r2
 801bb80:	bf04      	itt	eq
 801bb82:	681a      	ldreq	r2, [r3, #0]
 801bb84:	685b      	ldreq	r3, [r3, #4]
 801bb86:	6063      	str	r3, [r4, #4]
 801bb88:	bf04      	itt	eq
 801bb8a:	1852      	addeq	r2, r2, r1
 801bb8c:	6022      	streq	r2, [r4, #0]
 801bb8e:	602c      	str	r4, [r5, #0]
 801bb90:	e7ec      	b.n	801bb6c <_free_r+0x28>
 801bb92:	461a      	mov	r2, r3
 801bb94:	685b      	ldr	r3, [r3, #4]
 801bb96:	b10b      	cbz	r3, 801bb9c <_free_r+0x58>
 801bb98:	42a3      	cmp	r3, r4
 801bb9a:	d9fa      	bls.n	801bb92 <_free_r+0x4e>
 801bb9c:	6811      	ldr	r1, [r2, #0]
 801bb9e:	1855      	adds	r5, r2, r1
 801bba0:	42a5      	cmp	r5, r4
 801bba2:	d10b      	bne.n	801bbbc <_free_r+0x78>
 801bba4:	6824      	ldr	r4, [r4, #0]
 801bba6:	4421      	add	r1, r4
 801bba8:	1854      	adds	r4, r2, r1
 801bbaa:	42a3      	cmp	r3, r4
 801bbac:	6011      	str	r1, [r2, #0]
 801bbae:	d1dd      	bne.n	801bb6c <_free_r+0x28>
 801bbb0:	681c      	ldr	r4, [r3, #0]
 801bbb2:	685b      	ldr	r3, [r3, #4]
 801bbb4:	6053      	str	r3, [r2, #4]
 801bbb6:	4421      	add	r1, r4
 801bbb8:	6011      	str	r1, [r2, #0]
 801bbba:	e7d7      	b.n	801bb6c <_free_r+0x28>
 801bbbc:	d902      	bls.n	801bbc4 <_free_r+0x80>
 801bbbe:	230c      	movs	r3, #12
 801bbc0:	6003      	str	r3, [r0, #0]
 801bbc2:	e7d3      	b.n	801bb6c <_free_r+0x28>
 801bbc4:	6825      	ldr	r5, [r4, #0]
 801bbc6:	1961      	adds	r1, r4, r5
 801bbc8:	428b      	cmp	r3, r1
 801bbca:	bf04      	itt	eq
 801bbcc:	6819      	ldreq	r1, [r3, #0]
 801bbce:	685b      	ldreq	r3, [r3, #4]
 801bbd0:	6063      	str	r3, [r4, #4]
 801bbd2:	bf04      	itt	eq
 801bbd4:	1949      	addeq	r1, r1, r5
 801bbd6:	6021      	streq	r1, [r4, #0]
 801bbd8:	6054      	str	r4, [r2, #4]
 801bbda:	e7c7      	b.n	801bb6c <_free_r+0x28>
 801bbdc:	b003      	add	sp, #12
 801bbde:	bd30      	pop	{r4, r5, pc}
 801bbe0:	20013604 	.word	0x20013604

0801bbe4 <_malloc_r>:
 801bbe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bbe6:	1ccd      	adds	r5, r1, #3
 801bbe8:	f025 0503 	bic.w	r5, r5, #3
 801bbec:	3508      	adds	r5, #8
 801bbee:	2d0c      	cmp	r5, #12
 801bbf0:	bf38      	it	cc
 801bbf2:	250c      	movcc	r5, #12
 801bbf4:	2d00      	cmp	r5, #0
 801bbf6:	4606      	mov	r6, r0
 801bbf8:	db01      	blt.n	801bbfe <_malloc_r+0x1a>
 801bbfa:	42a9      	cmp	r1, r5
 801bbfc:	d903      	bls.n	801bc06 <_malloc_r+0x22>
 801bbfe:	230c      	movs	r3, #12
 801bc00:	6033      	str	r3, [r6, #0]
 801bc02:	2000      	movs	r0, #0
 801bc04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801bc06:	f000 ff19 	bl	801ca3c <__malloc_lock>
 801bc0a:	4921      	ldr	r1, [pc, #132]	; (801bc90 <_malloc_r+0xac>)
 801bc0c:	680a      	ldr	r2, [r1, #0]
 801bc0e:	4614      	mov	r4, r2
 801bc10:	b99c      	cbnz	r4, 801bc3a <_malloc_r+0x56>
 801bc12:	4f20      	ldr	r7, [pc, #128]	; (801bc94 <_malloc_r+0xb0>)
 801bc14:	683b      	ldr	r3, [r7, #0]
 801bc16:	b923      	cbnz	r3, 801bc22 <_malloc_r+0x3e>
 801bc18:	4621      	mov	r1, r4
 801bc1a:	4630      	mov	r0, r6
 801bc1c:	f000 fb2a 	bl	801c274 <_sbrk_r>
 801bc20:	6038      	str	r0, [r7, #0]
 801bc22:	4629      	mov	r1, r5
 801bc24:	4630      	mov	r0, r6
 801bc26:	f000 fb25 	bl	801c274 <_sbrk_r>
 801bc2a:	1c43      	adds	r3, r0, #1
 801bc2c:	d123      	bne.n	801bc76 <_malloc_r+0x92>
 801bc2e:	230c      	movs	r3, #12
 801bc30:	6033      	str	r3, [r6, #0]
 801bc32:	4630      	mov	r0, r6
 801bc34:	f000 ff08 	bl	801ca48 <__malloc_unlock>
 801bc38:	e7e3      	b.n	801bc02 <_malloc_r+0x1e>
 801bc3a:	6823      	ldr	r3, [r4, #0]
 801bc3c:	1b5b      	subs	r3, r3, r5
 801bc3e:	d417      	bmi.n	801bc70 <_malloc_r+0x8c>
 801bc40:	2b0b      	cmp	r3, #11
 801bc42:	d903      	bls.n	801bc4c <_malloc_r+0x68>
 801bc44:	6023      	str	r3, [r4, #0]
 801bc46:	441c      	add	r4, r3
 801bc48:	6025      	str	r5, [r4, #0]
 801bc4a:	e004      	b.n	801bc56 <_malloc_r+0x72>
 801bc4c:	6863      	ldr	r3, [r4, #4]
 801bc4e:	42a2      	cmp	r2, r4
 801bc50:	bf0c      	ite	eq
 801bc52:	600b      	streq	r3, [r1, #0]
 801bc54:	6053      	strne	r3, [r2, #4]
 801bc56:	4630      	mov	r0, r6
 801bc58:	f000 fef6 	bl	801ca48 <__malloc_unlock>
 801bc5c:	f104 000b 	add.w	r0, r4, #11
 801bc60:	1d23      	adds	r3, r4, #4
 801bc62:	f020 0007 	bic.w	r0, r0, #7
 801bc66:	1ac2      	subs	r2, r0, r3
 801bc68:	d0cc      	beq.n	801bc04 <_malloc_r+0x20>
 801bc6a:	1a1b      	subs	r3, r3, r0
 801bc6c:	50a3      	str	r3, [r4, r2]
 801bc6e:	e7c9      	b.n	801bc04 <_malloc_r+0x20>
 801bc70:	4622      	mov	r2, r4
 801bc72:	6864      	ldr	r4, [r4, #4]
 801bc74:	e7cc      	b.n	801bc10 <_malloc_r+0x2c>
 801bc76:	1cc4      	adds	r4, r0, #3
 801bc78:	f024 0403 	bic.w	r4, r4, #3
 801bc7c:	42a0      	cmp	r0, r4
 801bc7e:	d0e3      	beq.n	801bc48 <_malloc_r+0x64>
 801bc80:	1a21      	subs	r1, r4, r0
 801bc82:	4630      	mov	r0, r6
 801bc84:	f000 faf6 	bl	801c274 <_sbrk_r>
 801bc88:	3001      	adds	r0, #1
 801bc8a:	d1dd      	bne.n	801bc48 <_malloc_r+0x64>
 801bc8c:	e7cf      	b.n	801bc2e <_malloc_r+0x4a>
 801bc8e:	bf00      	nop
 801bc90:	20013604 	.word	0x20013604
 801bc94:	20013608 	.word	0x20013608

0801bc98 <__sfputc_r>:
 801bc98:	6893      	ldr	r3, [r2, #8]
 801bc9a:	3b01      	subs	r3, #1
 801bc9c:	2b00      	cmp	r3, #0
 801bc9e:	b410      	push	{r4}
 801bca0:	6093      	str	r3, [r2, #8]
 801bca2:	da08      	bge.n	801bcb6 <__sfputc_r+0x1e>
 801bca4:	6994      	ldr	r4, [r2, #24]
 801bca6:	42a3      	cmp	r3, r4
 801bca8:	db01      	blt.n	801bcae <__sfputc_r+0x16>
 801bcaa:	290a      	cmp	r1, #10
 801bcac:	d103      	bne.n	801bcb6 <__sfputc_r+0x1e>
 801bcae:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bcb2:	f000 bb67 	b.w	801c384 <__swbuf_r>
 801bcb6:	6813      	ldr	r3, [r2, #0]
 801bcb8:	1c58      	adds	r0, r3, #1
 801bcba:	6010      	str	r0, [r2, #0]
 801bcbc:	7019      	strb	r1, [r3, #0]
 801bcbe:	4608      	mov	r0, r1
 801bcc0:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bcc4:	4770      	bx	lr

0801bcc6 <__sfputs_r>:
 801bcc6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bcc8:	4606      	mov	r6, r0
 801bcca:	460f      	mov	r7, r1
 801bccc:	4614      	mov	r4, r2
 801bcce:	18d5      	adds	r5, r2, r3
 801bcd0:	42ac      	cmp	r4, r5
 801bcd2:	d101      	bne.n	801bcd8 <__sfputs_r+0x12>
 801bcd4:	2000      	movs	r0, #0
 801bcd6:	e007      	b.n	801bce8 <__sfputs_r+0x22>
 801bcd8:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bcdc:	463a      	mov	r2, r7
 801bcde:	4630      	mov	r0, r6
 801bce0:	f7ff ffda 	bl	801bc98 <__sfputc_r>
 801bce4:	1c43      	adds	r3, r0, #1
 801bce6:	d1f3      	bne.n	801bcd0 <__sfputs_r+0xa>
 801bce8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801bcec <_vfiprintf_r>:
 801bcec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bcf0:	460d      	mov	r5, r1
 801bcf2:	b09d      	sub	sp, #116	; 0x74
 801bcf4:	4614      	mov	r4, r2
 801bcf6:	4698      	mov	r8, r3
 801bcf8:	4606      	mov	r6, r0
 801bcfa:	b118      	cbz	r0, 801bd04 <_vfiprintf_r+0x18>
 801bcfc:	6983      	ldr	r3, [r0, #24]
 801bcfe:	b90b      	cbnz	r3, 801bd04 <_vfiprintf_r+0x18>
 801bd00:	f000 fd7c 	bl	801c7fc <__sinit>
 801bd04:	4b89      	ldr	r3, [pc, #548]	; (801bf2c <_vfiprintf_r+0x240>)
 801bd06:	429d      	cmp	r5, r3
 801bd08:	d11b      	bne.n	801bd42 <_vfiprintf_r+0x56>
 801bd0a:	6875      	ldr	r5, [r6, #4]
 801bd0c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bd0e:	07d9      	lsls	r1, r3, #31
 801bd10:	d405      	bmi.n	801bd1e <_vfiprintf_r+0x32>
 801bd12:	89ab      	ldrh	r3, [r5, #12]
 801bd14:	059a      	lsls	r2, r3, #22
 801bd16:	d402      	bmi.n	801bd1e <_vfiprintf_r+0x32>
 801bd18:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801bd1a:	f000 fe0d 	bl	801c938 <__retarget_lock_acquire_recursive>
 801bd1e:	89ab      	ldrh	r3, [r5, #12]
 801bd20:	071b      	lsls	r3, r3, #28
 801bd22:	d501      	bpl.n	801bd28 <_vfiprintf_r+0x3c>
 801bd24:	692b      	ldr	r3, [r5, #16]
 801bd26:	b9eb      	cbnz	r3, 801bd64 <_vfiprintf_r+0x78>
 801bd28:	4629      	mov	r1, r5
 801bd2a:	4630      	mov	r0, r6
 801bd2c:	f000 fb7c 	bl	801c428 <__swsetup_r>
 801bd30:	b1c0      	cbz	r0, 801bd64 <_vfiprintf_r+0x78>
 801bd32:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bd34:	07dc      	lsls	r4, r3, #31
 801bd36:	d50e      	bpl.n	801bd56 <_vfiprintf_r+0x6a>
 801bd38:	f04f 30ff 	mov.w	r0, #4294967295
 801bd3c:	b01d      	add	sp, #116	; 0x74
 801bd3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd42:	4b7b      	ldr	r3, [pc, #492]	; (801bf30 <_vfiprintf_r+0x244>)
 801bd44:	429d      	cmp	r5, r3
 801bd46:	d101      	bne.n	801bd4c <_vfiprintf_r+0x60>
 801bd48:	68b5      	ldr	r5, [r6, #8]
 801bd4a:	e7df      	b.n	801bd0c <_vfiprintf_r+0x20>
 801bd4c:	4b79      	ldr	r3, [pc, #484]	; (801bf34 <_vfiprintf_r+0x248>)
 801bd4e:	429d      	cmp	r5, r3
 801bd50:	bf08      	it	eq
 801bd52:	68f5      	ldreq	r5, [r6, #12]
 801bd54:	e7da      	b.n	801bd0c <_vfiprintf_r+0x20>
 801bd56:	89ab      	ldrh	r3, [r5, #12]
 801bd58:	0598      	lsls	r0, r3, #22
 801bd5a:	d4ed      	bmi.n	801bd38 <_vfiprintf_r+0x4c>
 801bd5c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801bd5e:	f000 fded 	bl	801c93c <__retarget_lock_release_recursive>
 801bd62:	e7e9      	b.n	801bd38 <_vfiprintf_r+0x4c>
 801bd64:	2300      	movs	r3, #0
 801bd66:	9309      	str	r3, [sp, #36]	; 0x24
 801bd68:	2320      	movs	r3, #32
 801bd6a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801bd6e:	f8cd 800c 	str.w	r8, [sp, #12]
 801bd72:	2330      	movs	r3, #48	; 0x30
 801bd74:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801bf38 <_vfiprintf_r+0x24c>
 801bd78:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801bd7c:	f04f 0901 	mov.w	r9, #1
 801bd80:	4623      	mov	r3, r4
 801bd82:	469a      	mov	sl, r3
 801bd84:	f813 2b01 	ldrb.w	r2, [r3], #1
 801bd88:	b10a      	cbz	r2, 801bd8e <_vfiprintf_r+0xa2>
 801bd8a:	2a25      	cmp	r2, #37	; 0x25
 801bd8c:	d1f9      	bne.n	801bd82 <_vfiprintf_r+0x96>
 801bd8e:	ebba 0b04 	subs.w	fp, sl, r4
 801bd92:	d00b      	beq.n	801bdac <_vfiprintf_r+0xc0>
 801bd94:	465b      	mov	r3, fp
 801bd96:	4622      	mov	r2, r4
 801bd98:	4629      	mov	r1, r5
 801bd9a:	4630      	mov	r0, r6
 801bd9c:	f7ff ff93 	bl	801bcc6 <__sfputs_r>
 801bda0:	3001      	adds	r0, #1
 801bda2:	f000 80aa 	beq.w	801befa <_vfiprintf_r+0x20e>
 801bda6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bda8:	445a      	add	r2, fp
 801bdaa:	9209      	str	r2, [sp, #36]	; 0x24
 801bdac:	f89a 3000 	ldrb.w	r3, [sl]
 801bdb0:	2b00      	cmp	r3, #0
 801bdb2:	f000 80a2 	beq.w	801befa <_vfiprintf_r+0x20e>
 801bdb6:	2300      	movs	r3, #0
 801bdb8:	f04f 32ff 	mov.w	r2, #4294967295
 801bdbc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801bdc0:	f10a 0a01 	add.w	sl, sl, #1
 801bdc4:	9304      	str	r3, [sp, #16]
 801bdc6:	9307      	str	r3, [sp, #28]
 801bdc8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801bdcc:	931a      	str	r3, [sp, #104]	; 0x68
 801bdce:	4654      	mov	r4, sl
 801bdd0:	2205      	movs	r2, #5
 801bdd2:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bdd6:	4858      	ldr	r0, [pc, #352]	; (801bf38 <_vfiprintf_r+0x24c>)
 801bdd8:	f7e4 fa12 	bl	8000200 <memchr>
 801bddc:	9a04      	ldr	r2, [sp, #16]
 801bdde:	b9d8      	cbnz	r0, 801be18 <_vfiprintf_r+0x12c>
 801bde0:	06d1      	lsls	r1, r2, #27
 801bde2:	bf44      	itt	mi
 801bde4:	2320      	movmi	r3, #32
 801bde6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801bdea:	0713      	lsls	r3, r2, #28
 801bdec:	bf44      	itt	mi
 801bdee:	232b      	movmi	r3, #43	; 0x2b
 801bdf0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801bdf4:	f89a 3000 	ldrb.w	r3, [sl]
 801bdf8:	2b2a      	cmp	r3, #42	; 0x2a
 801bdfa:	d015      	beq.n	801be28 <_vfiprintf_r+0x13c>
 801bdfc:	9a07      	ldr	r2, [sp, #28]
 801bdfe:	4654      	mov	r4, sl
 801be00:	2000      	movs	r0, #0
 801be02:	f04f 0c0a 	mov.w	ip, #10
 801be06:	4621      	mov	r1, r4
 801be08:	f811 3b01 	ldrb.w	r3, [r1], #1
 801be0c:	3b30      	subs	r3, #48	; 0x30
 801be0e:	2b09      	cmp	r3, #9
 801be10:	d94e      	bls.n	801beb0 <_vfiprintf_r+0x1c4>
 801be12:	b1b0      	cbz	r0, 801be42 <_vfiprintf_r+0x156>
 801be14:	9207      	str	r2, [sp, #28]
 801be16:	e014      	b.n	801be42 <_vfiprintf_r+0x156>
 801be18:	eba0 0308 	sub.w	r3, r0, r8
 801be1c:	fa09 f303 	lsl.w	r3, r9, r3
 801be20:	4313      	orrs	r3, r2
 801be22:	9304      	str	r3, [sp, #16]
 801be24:	46a2      	mov	sl, r4
 801be26:	e7d2      	b.n	801bdce <_vfiprintf_r+0xe2>
 801be28:	9b03      	ldr	r3, [sp, #12]
 801be2a:	1d19      	adds	r1, r3, #4
 801be2c:	681b      	ldr	r3, [r3, #0]
 801be2e:	9103      	str	r1, [sp, #12]
 801be30:	2b00      	cmp	r3, #0
 801be32:	bfbb      	ittet	lt
 801be34:	425b      	neglt	r3, r3
 801be36:	f042 0202 	orrlt.w	r2, r2, #2
 801be3a:	9307      	strge	r3, [sp, #28]
 801be3c:	9307      	strlt	r3, [sp, #28]
 801be3e:	bfb8      	it	lt
 801be40:	9204      	strlt	r2, [sp, #16]
 801be42:	7823      	ldrb	r3, [r4, #0]
 801be44:	2b2e      	cmp	r3, #46	; 0x2e
 801be46:	d10c      	bne.n	801be62 <_vfiprintf_r+0x176>
 801be48:	7863      	ldrb	r3, [r4, #1]
 801be4a:	2b2a      	cmp	r3, #42	; 0x2a
 801be4c:	d135      	bne.n	801beba <_vfiprintf_r+0x1ce>
 801be4e:	9b03      	ldr	r3, [sp, #12]
 801be50:	1d1a      	adds	r2, r3, #4
 801be52:	681b      	ldr	r3, [r3, #0]
 801be54:	9203      	str	r2, [sp, #12]
 801be56:	2b00      	cmp	r3, #0
 801be58:	bfb8      	it	lt
 801be5a:	f04f 33ff 	movlt.w	r3, #4294967295
 801be5e:	3402      	adds	r4, #2
 801be60:	9305      	str	r3, [sp, #20]
 801be62:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801bf48 <_vfiprintf_r+0x25c>
 801be66:	7821      	ldrb	r1, [r4, #0]
 801be68:	2203      	movs	r2, #3
 801be6a:	4650      	mov	r0, sl
 801be6c:	f7e4 f9c8 	bl	8000200 <memchr>
 801be70:	b140      	cbz	r0, 801be84 <_vfiprintf_r+0x198>
 801be72:	2340      	movs	r3, #64	; 0x40
 801be74:	eba0 000a 	sub.w	r0, r0, sl
 801be78:	fa03 f000 	lsl.w	r0, r3, r0
 801be7c:	9b04      	ldr	r3, [sp, #16]
 801be7e:	4303      	orrs	r3, r0
 801be80:	3401      	adds	r4, #1
 801be82:	9304      	str	r3, [sp, #16]
 801be84:	f814 1b01 	ldrb.w	r1, [r4], #1
 801be88:	482c      	ldr	r0, [pc, #176]	; (801bf3c <_vfiprintf_r+0x250>)
 801be8a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801be8e:	2206      	movs	r2, #6
 801be90:	f7e4 f9b6 	bl	8000200 <memchr>
 801be94:	2800      	cmp	r0, #0
 801be96:	d03f      	beq.n	801bf18 <_vfiprintf_r+0x22c>
 801be98:	4b29      	ldr	r3, [pc, #164]	; (801bf40 <_vfiprintf_r+0x254>)
 801be9a:	bb1b      	cbnz	r3, 801bee4 <_vfiprintf_r+0x1f8>
 801be9c:	9b03      	ldr	r3, [sp, #12]
 801be9e:	3307      	adds	r3, #7
 801bea0:	f023 0307 	bic.w	r3, r3, #7
 801bea4:	3308      	adds	r3, #8
 801bea6:	9303      	str	r3, [sp, #12]
 801bea8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801beaa:	443b      	add	r3, r7
 801beac:	9309      	str	r3, [sp, #36]	; 0x24
 801beae:	e767      	b.n	801bd80 <_vfiprintf_r+0x94>
 801beb0:	fb0c 3202 	mla	r2, ip, r2, r3
 801beb4:	460c      	mov	r4, r1
 801beb6:	2001      	movs	r0, #1
 801beb8:	e7a5      	b.n	801be06 <_vfiprintf_r+0x11a>
 801beba:	2300      	movs	r3, #0
 801bebc:	3401      	adds	r4, #1
 801bebe:	9305      	str	r3, [sp, #20]
 801bec0:	4619      	mov	r1, r3
 801bec2:	f04f 0c0a 	mov.w	ip, #10
 801bec6:	4620      	mov	r0, r4
 801bec8:	f810 2b01 	ldrb.w	r2, [r0], #1
 801becc:	3a30      	subs	r2, #48	; 0x30
 801bece:	2a09      	cmp	r2, #9
 801bed0:	d903      	bls.n	801beda <_vfiprintf_r+0x1ee>
 801bed2:	2b00      	cmp	r3, #0
 801bed4:	d0c5      	beq.n	801be62 <_vfiprintf_r+0x176>
 801bed6:	9105      	str	r1, [sp, #20]
 801bed8:	e7c3      	b.n	801be62 <_vfiprintf_r+0x176>
 801beda:	fb0c 2101 	mla	r1, ip, r1, r2
 801bede:	4604      	mov	r4, r0
 801bee0:	2301      	movs	r3, #1
 801bee2:	e7f0      	b.n	801bec6 <_vfiprintf_r+0x1da>
 801bee4:	ab03      	add	r3, sp, #12
 801bee6:	9300      	str	r3, [sp, #0]
 801bee8:	462a      	mov	r2, r5
 801beea:	4b16      	ldr	r3, [pc, #88]	; (801bf44 <_vfiprintf_r+0x258>)
 801beec:	a904      	add	r1, sp, #16
 801beee:	4630      	mov	r0, r6
 801bef0:	f3af 8000 	nop.w
 801bef4:	4607      	mov	r7, r0
 801bef6:	1c78      	adds	r0, r7, #1
 801bef8:	d1d6      	bne.n	801bea8 <_vfiprintf_r+0x1bc>
 801befa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801befc:	07d9      	lsls	r1, r3, #31
 801befe:	d405      	bmi.n	801bf0c <_vfiprintf_r+0x220>
 801bf00:	89ab      	ldrh	r3, [r5, #12]
 801bf02:	059a      	lsls	r2, r3, #22
 801bf04:	d402      	bmi.n	801bf0c <_vfiprintf_r+0x220>
 801bf06:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801bf08:	f000 fd18 	bl	801c93c <__retarget_lock_release_recursive>
 801bf0c:	89ab      	ldrh	r3, [r5, #12]
 801bf0e:	065b      	lsls	r3, r3, #25
 801bf10:	f53f af12 	bmi.w	801bd38 <_vfiprintf_r+0x4c>
 801bf14:	9809      	ldr	r0, [sp, #36]	; 0x24
 801bf16:	e711      	b.n	801bd3c <_vfiprintf_r+0x50>
 801bf18:	ab03      	add	r3, sp, #12
 801bf1a:	9300      	str	r3, [sp, #0]
 801bf1c:	462a      	mov	r2, r5
 801bf1e:	4b09      	ldr	r3, [pc, #36]	; (801bf44 <_vfiprintf_r+0x258>)
 801bf20:	a904      	add	r1, sp, #16
 801bf22:	4630      	mov	r0, r6
 801bf24:	f000 f880 	bl	801c028 <_printf_i>
 801bf28:	e7e4      	b.n	801bef4 <_vfiprintf_r+0x208>
 801bf2a:	bf00      	nop
 801bf2c:	08020db4 	.word	0x08020db4
 801bf30:	08020dd4 	.word	0x08020dd4
 801bf34:	08020d94 	.word	0x08020d94
 801bf38:	08020d5c 	.word	0x08020d5c
 801bf3c:	08020d66 	.word	0x08020d66
 801bf40:	00000000 	.word	0x00000000
 801bf44:	0801bcc7 	.word	0x0801bcc7
 801bf48:	08020d62 	.word	0x08020d62

0801bf4c <_printf_common>:
 801bf4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bf50:	4616      	mov	r6, r2
 801bf52:	4699      	mov	r9, r3
 801bf54:	688a      	ldr	r2, [r1, #8]
 801bf56:	690b      	ldr	r3, [r1, #16]
 801bf58:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801bf5c:	4293      	cmp	r3, r2
 801bf5e:	bfb8      	it	lt
 801bf60:	4613      	movlt	r3, r2
 801bf62:	6033      	str	r3, [r6, #0]
 801bf64:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801bf68:	4607      	mov	r7, r0
 801bf6a:	460c      	mov	r4, r1
 801bf6c:	b10a      	cbz	r2, 801bf72 <_printf_common+0x26>
 801bf6e:	3301      	adds	r3, #1
 801bf70:	6033      	str	r3, [r6, #0]
 801bf72:	6823      	ldr	r3, [r4, #0]
 801bf74:	0699      	lsls	r1, r3, #26
 801bf76:	bf42      	ittt	mi
 801bf78:	6833      	ldrmi	r3, [r6, #0]
 801bf7a:	3302      	addmi	r3, #2
 801bf7c:	6033      	strmi	r3, [r6, #0]
 801bf7e:	6825      	ldr	r5, [r4, #0]
 801bf80:	f015 0506 	ands.w	r5, r5, #6
 801bf84:	d106      	bne.n	801bf94 <_printf_common+0x48>
 801bf86:	f104 0a19 	add.w	sl, r4, #25
 801bf8a:	68e3      	ldr	r3, [r4, #12]
 801bf8c:	6832      	ldr	r2, [r6, #0]
 801bf8e:	1a9b      	subs	r3, r3, r2
 801bf90:	42ab      	cmp	r3, r5
 801bf92:	dc26      	bgt.n	801bfe2 <_printf_common+0x96>
 801bf94:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801bf98:	1e13      	subs	r3, r2, #0
 801bf9a:	6822      	ldr	r2, [r4, #0]
 801bf9c:	bf18      	it	ne
 801bf9e:	2301      	movne	r3, #1
 801bfa0:	0692      	lsls	r2, r2, #26
 801bfa2:	d42b      	bmi.n	801bffc <_printf_common+0xb0>
 801bfa4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801bfa8:	4649      	mov	r1, r9
 801bfaa:	4638      	mov	r0, r7
 801bfac:	47c0      	blx	r8
 801bfae:	3001      	adds	r0, #1
 801bfb0:	d01e      	beq.n	801bff0 <_printf_common+0xa4>
 801bfb2:	6823      	ldr	r3, [r4, #0]
 801bfb4:	68e5      	ldr	r5, [r4, #12]
 801bfb6:	6832      	ldr	r2, [r6, #0]
 801bfb8:	f003 0306 	and.w	r3, r3, #6
 801bfbc:	2b04      	cmp	r3, #4
 801bfbe:	bf08      	it	eq
 801bfc0:	1aad      	subeq	r5, r5, r2
 801bfc2:	68a3      	ldr	r3, [r4, #8]
 801bfc4:	6922      	ldr	r2, [r4, #16]
 801bfc6:	bf0c      	ite	eq
 801bfc8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801bfcc:	2500      	movne	r5, #0
 801bfce:	4293      	cmp	r3, r2
 801bfd0:	bfc4      	itt	gt
 801bfd2:	1a9b      	subgt	r3, r3, r2
 801bfd4:	18ed      	addgt	r5, r5, r3
 801bfd6:	2600      	movs	r6, #0
 801bfd8:	341a      	adds	r4, #26
 801bfda:	42b5      	cmp	r5, r6
 801bfdc:	d11a      	bne.n	801c014 <_printf_common+0xc8>
 801bfde:	2000      	movs	r0, #0
 801bfe0:	e008      	b.n	801bff4 <_printf_common+0xa8>
 801bfe2:	2301      	movs	r3, #1
 801bfe4:	4652      	mov	r2, sl
 801bfe6:	4649      	mov	r1, r9
 801bfe8:	4638      	mov	r0, r7
 801bfea:	47c0      	blx	r8
 801bfec:	3001      	adds	r0, #1
 801bfee:	d103      	bne.n	801bff8 <_printf_common+0xac>
 801bff0:	f04f 30ff 	mov.w	r0, #4294967295
 801bff4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bff8:	3501      	adds	r5, #1
 801bffa:	e7c6      	b.n	801bf8a <_printf_common+0x3e>
 801bffc:	18e1      	adds	r1, r4, r3
 801bffe:	1c5a      	adds	r2, r3, #1
 801c000:	2030      	movs	r0, #48	; 0x30
 801c002:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801c006:	4422      	add	r2, r4
 801c008:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801c00c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801c010:	3302      	adds	r3, #2
 801c012:	e7c7      	b.n	801bfa4 <_printf_common+0x58>
 801c014:	2301      	movs	r3, #1
 801c016:	4622      	mov	r2, r4
 801c018:	4649      	mov	r1, r9
 801c01a:	4638      	mov	r0, r7
 801c01c:	47c0      	blx	r8
 801c01e:	3001      	adds	r0, #1
 801c020:	d0e6      	beq.n	801bff0 <_printf_common+0xa4>
 801c022:	3601      	adds	r6, #1
 801c024:	e7d9      	b.n	801bfda <_printf_common+0x8e>
	...

0801c028 <_printf_i>:
 801c028:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c02c:	460c      	mov	r4, r1
 801c02e:	4691      	mov	r9, r2
 801c030:	7e27      	ldrb	r7, [r4, #24]
 801c032:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c034:	2f78      	cmp	r7, #120	; 0x78
 801c036:	4680      	mov	r8, r0
 801c038:	469a      	mov	sl, r3
 801c03a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801c03e:	d807      	bhi.n	801c050 <_printf_i+0x28>
 801c040:	2f62      	cmp	r7, #98	; 0x62
 801c042:	d80a      	bhi.n	801c05a <_printf_i+0x32>
 801c044:	2f00      	cmp	r7, #0
 801c046:	f000 80d8 	beq.w	801c1fa <_printf_i+0x1d2>
 801c04a:	2f58      	cmp	r7, #88	; 0x58
 801c04c:	f000 80a3 	beq.w	801c196 <_printf_i+0x16e>
 801c050:	f104 0642 	add.w	r6, r4, #66	; 0x42
 801c054:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801c058:	e03a      	b.n	801c0d0 <_printf_i+0xa8>
 801c05a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801c05e:	2b15      	cmp	r3, #21
 801c060:	d8f6      	bhi.n	801c050 <_printf_i+0x28>
 801c062:	a001      	add	r0, pc, #4	; (adr r0, 801c068 <_printf_i+0x40>)
 801c064:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 801c068:	0801c0c1 	.word	0x0801c0c1
 801c06c:	0801c0d5 	.word	0x0801c0d5
 801c070:	0801c051 	.word	0x0801c051
 801c074:	0801c051 	.word	0x0801c051
 801c078:	0801c051 	.word	0x0801c051
 801c07c:	0801c051 	.word	0x0801c051
 801c080:	0801c0d5 	.word	0x0801c0d5
 801c084:	0801c051 	.word	0x0801c051
 801c088:	0801c051 	.word	0x0801c051
 801c08c:	0801c051 	.word	0x0801c051
 801c090:	0801c051 	.word	0x0801c051
 801c094:	0801c1e1 	.word	0x0801c1e1
 801c098:	0801c105 	.word	0x0801c105
 801c09c:	0801c1c3 	.word	0x0801c1c3
 801c0a0:	0801c051 	.word	0x0801c051
 801c0a4:	0801c051 	.word	0x0801c051
 801c0a8:	0801c203 	.word	0x0801c203
 801c0ac:	0801c051 	.word	0x0801c051
 801c0b0:	0801c105 	.word	0x0801c105
 801c0b4:	0801c051 	.word	0x0801c051
 801c0b8:	0801c051 	.word	0x0801c051
 801c0bc:	0801c1cb 	.word	0x0801c1cb
 801c0c0:	680b      	ldr	r3, [r1, #0]
 801c0c2:	1d1a      	adds	r2, r3, #4
 801c0c4:	681b      	ldr	r3, [r3, #0]
 801c0c6:	600a      	str	r2, [r1, #0]
 801c0c8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 801c0cc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801c0d0:	2301      	movs	r3, #1
 801c0d2:	e0a3      	b.n	801c21c <_printf_i+0x1f4>
 801c0d4:	6825      	ldr	r5, [r4, #0]
 801c0d6:	6808      	ldr	r0, [r1, #0]
 801c0d8:	062e      	lsls	r6, r5, #24
 801c0da:	f100 0304 	add.w	r3, r0, #4
 801c0de:	d50a      	bpl.n	801c0f6 <_printf_i+0xce>
 801c0e0:	6805      	ldr	r5, [r0, #0]
 801c0e2:	600b      	str	r3, [r1, #0]
 801c0e4:	2d00      	cmp	r5, #0
 801c0e6:	da03      	bge.n	801c0f0 <_printf_i+0xc8>
 801c0e8:	232d      	movs	r3, #45	; 0x2d
 801c0ea:	426d      	negs	r5, r5
 801c0ec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c0f0:	485e      	ldr	r0, [pc, #376]	; (801c26c <_printf_i+0x244>)
 801c0f2:	230a      	movs	r3, #10
 801c0f4:	e019      	b.n	801c12a <_printf_i+0x102>
 801c0f6:	f015 0f40 	tst.w	r5, #64	; 0x40
 801c0fa:	6805      	ldr	r5, [r0, #0]
 801c0fc:	600b      	str	r3, [r1, #0]
 801c0fe:	bf18      	it	ne
 801c100:	b22d      	sxthne	r5, r5
 801c102:	e7ef      	b.n	801c0e4 <_printf_i+0xbc>
 801c104:	680b      	ldr	r3, [r1, #0]
 801c106:	6825      	ldr	r5, [r4, #0]
 801c108:	1d18      	adds	r0, r3, #4
 801c10a:	6008      	str	r0, [r1, #0]
 801c10c:	0628      	lsls	r0, r5, #24
 801c10e:	d501      	bpl.n	801c114 <_printf_i+0xec>
 801c110:	681d      	ldr	r5, [r3, #0]
 801c112:	e002      	b.n	801c11a <_printf_i+0xf2>
 801c114:	0669      	lsls	r1, r5, #25
 801c116:	d5fb      	bpl.n	801c110 <_printf_i+0xe8>
 801c118:	881d      	ldrh	r5, [r3, #0]
 801c11a:	4854      	ldr	r0, [pc, #336]	; (801c26c <_printf_i+0x244>)
 801c11c:	2f6f      	cmp	r7, #111	; 0x6f
 801c11e:	bf0c      	ite	eq
 801c120:	2308      	moveq	r3, #8
 801c122:	230a      	movne	r3, #10
 801c124:	2100      	movs	r1, #0
 801c126:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801c12a:	6866      	ldr	r6, [r4, #4]
 801c12c:	60a6      	str	r6, [r4, #8]
 801c12e:	2e00      	cmp	r6, #0
 801c130:	bfa2      	ittt	ge
 801c132:	6821      	ldrge	r1, [r4, #0]
 801c134:	f021 0104 	bicge.w	r1, r1, #4
 801c138:	6021      	strge	r1, [r4, #0]
 801c13a:	b90d      	cbnz	r5, 801c140 <_printf_i+0x118>
 801c13c:	2e00      	cmp	r6, #0
 801c13e:	d04d      	beq.n	801c1dc <_printf_i+0x1b4>
 801c140:	4616      	mov	r6, r2
 801c142:	fbb5 f1f3 	udiv	r1, r5, r3
 801c146:	fb03 5711 	mls	r7, r3, r1, r5
 801c14a:	5dc7      	ldrb	r7, [r0, r7]
 801c14c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c150:	462f      	mov	r7, r5
 801c152:	42bb      	cmp	r3, r7
 801c154:	460d      	mov	r5, r1
 801c156:	d9f4      	bls.n	801c142 <_printf_i+0x11a>
 801c158:	2b08      	cmp	r3, #8
 801c15a:	d10b      	bne.n	801c174 <_printf_i+0x14c>
 801c15c:	6823      	ldr	r3, [r4, #0]
 801c15e:	07df      	lsls	r7, r3, #31
 801c160:	d508      	bpl.n	801c174 <_printf_i+0x14c>
 801c162:	6923      	ldr	r3, [r4, #16]
 801c164:	6861      	ldr	r1, [r4, #4]
 801c166:	4299      	cmp	r1, r3
 801c168:	bfde      	ittt	le
 801c16a:	2330      	movle	r3, #48	; 0x30
 801c16c:	f806 3c01 	strble.w	r3, [r6, #-1]
 801c170:	f106 36ff 	addle.w	r6, r6, #4294967295
 801c174:	1b92      	subs	r2, r2, r6
 801c176:	6122      	str	r2, [r4, #16]
 801c178:	f8cd a000 	str.w	sl, [sp]
 801c17c:	464b      	mov	r3, r9
 801c17e:	aa03      	add	r2, sp, #12
 801c180:	4621      	mov	r1, r4
 801c182:	4640      	mov	r0, r8
 801c184:	f7ff fee2 	bl	801bf4c <_printf_common>
 801c188:	3001      	adds	r0, #1
 801c18a:	d14c      	bne.n	801c226 <_printf_i+0x1fe>
 801c18c:	f04f 30ff 	mov.w	r0, #4294967295
 801c190:	b004      	add	sp, #16
 801c192:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c196:	4835      	ldr	r0, [pc, #212]	; (801c26c <_printf_i+0x244>)
 801c198:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 801c19c:	6823      	ldr	r3, [r4, #0]
 801c19e:	680e      	ldr	r6, [r1, #0]
 801c1a0:	061f      	lsls	r7, r3, #24
 801c1a2:	f856 5b04 	ldr.w	r5, [r6], #4
 801c1a6:	600e      	str	r6, [r1, #0]
 801c1a8:	d514      	bpl.n	801c1d4 <_printf_i+0x1ac>
 801c1aa:	07d9      	lsls	r1, r3, #31
 801c1ac:	bf44      	itt	mi
 801c1ae:	f043 0320 	orrmi.w	r3, r3, #32
 801c1b2:	6023      	strmi	r3, [r4, #0]
 801c1b4:	b91d      	cbnz	r5, 801c1be <_printf_i+0x196>
 801c1b6:	6823      	ldr	r3, [r4, #0]
 801c1b8:	f023 0320 	bic.w	r3, r3, #32
 801c1bc:	6023      	str	r3, [r4, #0]
 801c1be:	2310      	movs	r3, #16
 801c1c0:	e7b0      	b.n	801c124 <_printf_i+0xfc>
 801c1c2:	6823      	ldr	r3, [r4, #0]
 801c1c4:	f043 0320 	orr.w	r3, r3, #32
 801c1c8:	6023      	str	r3, [r4, #0]
 801c1ca:	2378      	movs	r3, #120	; 0x78
 801c1cc:	4828      	ldr	r0, [pc, #160]	; (801c270 <_printf_i+0x248>)
 801c1ce:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801c1d2:	e7e3      	b.n	801c19c <_printf_i+0x174>
 801c1d4:	065e      	lsls	r6, r3, #25
 801c1d6:	bf48      	it	mi
 801c1d8:	b2ad      	uxthmi	r5, r5
 801c1da:	e7e6      	b.n	801c1aa <_printf_i+0x182>
 801c1dc:	4616      	mov	r6, r2
 801c1de:	e7bb      	b.n	801c158 <_printf_i+0x130>
 801c1e0:	680b      	ldr	r3, [r1, #0]
 801c1e2:	6826      	ldr	r6, [r4, #0]
 801c1e4:	6960      	ldr	r0, [r4, #20]
 801c1e6:	1d1d      	adds	r5, r3, #4
 801c1e8:	600d      	str	r5, [r1, #0]
 801c1ea:	0635      	lsls	r5, r6, #24
 801c1ec:	681b      	ldr	r3, [r3, #0]
 801c1ee:	d501      	bpl.n	801c1f4 <_printf_i+0x1cc>
 801c1f0:	6018      	str	r0, [r3, #0]
 801c1f2:	e002      	b.n	801c1fa <_printf_i+0x1d2>
 801c1f4:	0671      	lsls	r1, r6, #25
 801c1f6:	d5fb      	bpl.n	801c1f0 <_printf_i+0x1c8>
 801c1f8:	8018      	strh	r0, [r3, #0]
 801c1fa:	2300      	movs	r3, #0
 801c1fc:	6123      	str	r3, [r4, #16]
 801c1fe:	4616      	mov	r6, r2
 801c200:	e7ba      	b.n	801c178 <_printf_i+0x150>
 801c202:	680b      	ldr	r3, [r1, #0]
 801c204:	1d1a      	adds	r2, r3, #4
 801c206:	600a      	str	r2, [r1, #0]
 801c208:	681e      	ldr	r6, [r3, #0]
 801c20a:	6862      	ldr	r2, [r4, #4]
 801c20c:	2100      	movs	r1, #0
 801c20e:	4630      	mov	r0, r6
 801c210:	f7e3 fff6 	bl	8000200 <memchr>
 801c214:	b108      	cbz	r0, 801c21a <_printf_i+0x1f2>
 801c216:	1b80      	subs	r0, r0, r6
 801c218:	6060      	str	r0, [r4, #4]
 801c21a:	6863      	ldr	r3, [r4, #4]
 801c21c:	6123      	str	r3, [r4, #16]
 801c21e:	2300      	movs	r3, #0
 801c220:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c224:	e7a8      	b.n	801c178 <_printf_i+0x150>
 801c226:	6923      	ldr	r3, [r4, #16]
 801c228:	4632      	mov	r2, r6
 801c22a:	4649      	mov	r1, r9
 801c22c:	4640      	mov	r0, r8
 801c22e:	47d0      	blx	sl
 801c230:	3001      	adds	r0, #1
 801c232:	d0ab      	beq.n	801c18c <_printf_i+0x164>
 801c234:	6823      	ldr	r3, [r4, #0]
 801c236:	079b      	lsls	r3, r3, #30
 801c238:	d413      	bmi.n	801c262 <_printf_i+0x23a>
 801c23a:	68e0      	ldr	r0, [r4, #12]
 801c23c:	9b03      	ldr	r3, [sp, #12]
 801c23e:	4298      	cmp	r0, r3
 801c240:	bfb8      	it	lt
 801c242:	4618      	movlt	r0, r3
 801c244:	e7a4      	b.n	801c190 <_printf_i+0x168>
 801c246:	2301      	movs	r3, #1
 801c248:	4632      	mov	r2, r6
 801c24a:	4649      	mov	r1, r9
 801c24c:	4640      	mov	r0, r8
 801c24e:	47d0      	blx	sl
 801c250:	3001      	adds	r0, #1
 801c252:	d09b      	beq.n	801c18c <_printf_i+0x164>
 801c254:	3501      	adds	r5, #1
 801c256:	68e3      	ldr	r3, [r4, #12]
 801c258:	9903      	ldr	r1, [sp, #12]
 801c25a:	1a5b      	subs	r3, r3, r1
 801c25c:	42ab      	cmp	r3, r5
 801c25e:	dcf2      	bgt.n	801c246 <_printf_i+0x21e>
 801c260:	e7eb      	b.n	801c23a <_printf_i+0x212>
 801c262:	2500      	movs	r5, #0
 801c264:	f104 0619 	add.w	r6, r4, #25
 801c268:	e7f5      	b.n	801c256 <_printf_i+0x22e>
 801c26a:	bf00      	nop
 801c26c:	08020d6d 	.word	0x08020d6d
 801c270:	08020d7e 	.word	0x08020d7e

0801c274 <_sbrk_r>:
 801c274:	b538      	push	{r3, r4, r5, lr}
 801c276:	4d06      	ldr	r5, [pc, #24]	; (801c290 <_sbrk_r+0x1c>)
 801c278:	2300      	movs	r3, #0
 801c27a:	4604      	mov	r4, r0
 801c27c:	4608      	mov	r0, r1
 801c27e:	602b      	str	r3, [r5, #0]
 801c280:	f7e5 fe78 	bl	8001f74 <_sbrk>
 801c284:	1c43      	adds	r3, r0, #1
 801c286:	d102      	bne.n	801c28e <_sbrk_r+0x1a>
 801c288:	682b      	ldr	r3, [r5, #0]
 801c28a:	b103      	cbz	r3, 801c28e <_sbrk_r+0x1a>
 801c28c:	6023      	str	r3, [r4, #0]
 801c28e:	bd38      	pop	{r3, r4, r5, pc}
 801c290:	20013a4c 	.word	0x20013a4c

0801c294 <_raise_r>:
 801c294:	291f      	cmp	r1, #31
 801c296:	b538      	push	{r3, r4, r5, lr}
 801c298:	4604      	mov	r4, r0
 801c29a:	460d      	mov	r5, r1
 801c29c:	d904      	bls.n	801c2a8 <_raise_r+0x14>
 801c29e:	2316      	movs	r3, #22
 801c2a0:	6003      	str	r3, [r0, #0]
 801c2a2:	f04f 30ff 	mov.w	r0, #4294967295
 801c2a6:	bd38      	pop	{r3, r4, r5, pc}
 801c2a8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801c2aa:	b112      	cbz	r2, 801c2b2 <_raise_r+0x1e>
 801c2ac:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801c2b0:	b94b      	cbnz	r3, 801c2c6 <_raise_r+0x32>
 801c2b2:	4620      	mov	r0, r4
 801c2b4:	f000 f830 	bl	801c318 <_getpid_r>
 801c2b8:	462a      	mov	r2, r5
 801c2ba:	4601      	mov	r1, r0
 801c2bc:	4620      	mov	r0, r4
 801c2be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c2c2:	f000 b817 	b.w	801c2f4 <_kill_r>
 801c2c6:	2b01      	cmp	r3, #1
 801c2c8:	d00a      	beq.n	801c2e0 <_raise_r+0x4c>
 801c2ca:	1c59      	adds	r1, r3, #1
 801c2cc:	d103      	bne.n	801c2d6 <_raise_r+0x42>
 801c2ce:	2316      	movs	r3, #22
 801c2d0:	6003      	str	r3, [r0, #0]
 801c2d2:	2001      	movs	r0, #1
 801c2d4:	e7e7      	b.n	801c2a6 <_raise_r+0x12>
 801c2d6:	2400      	movs	r4, #0
 801c2d8:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801c2dc:	4628      	mov	r0, r5
 801c2de:	4798      	blx	r3
 801c2e0:	2000      	movs	r0, #0
 801c2e2:	e7e0      	b.n	801c2a6 <_raise_r+0x12>

0801c2e4 <raise>:
 801c2e4:	4b02      	ldr	r3, [pc, #8]	; (801c2f0 <raise+0xc>)
 801c2e6:	4601      	mov	r1, r0
 801c2e8:	6818      	ldr	r0, [r3, #0]
 801c2ea:	f7ff bfd3 	b.w	801c294 <_raise_r>
 801c2ee:	bf00      	nop
 801c2f0:	200000fc 	.word	0x200000fc

0801c2f4 <_kill_r>:
 801c2f4:	b538      	push	{r3, r4, r5, lr}
 801c2f6:	4d07      	ldr	r5, [pc, #28]	; (801c314 <_kill_r+0x20>)
 801c2f8:	2300      	movs	r3, #0
 801c2fa:	4604      	mov	r4, r0
 801c2fc:	4608      	mov	r0, r1
 801c2fe:	4611      	mov	r1, r2
 801c300:	602b      	str	r3, [r5, #0]
 801c302:	f7e5 fe03 	bl	8001f0c <_kill>
 801c306:	1c43      	adds	r3, r0, #1
 801c308:	d102      	bne.n	801c310 <_kill_r+0x1c>
 801c30a:	682b      	ldr	r3, [r5, #0]
 801c30c:	b103      	cbz	r3, 801c310 <_kill_r+0x1c>
 801c30e:	6023      	str	r3, [r4, #0]
 801c310:	bd38      	pop	{r3, r4, r5, pc}
 801c312:	bf00      	nop
 801c314:	20013a4c 	.word	0x20013a4c

0801c318 <_getpid_r>:
 801c318:	f7e5 bdf6 	b.w	8001f08 <_getpid>

0801c31c <siprintf>:
 801c31c:	b40e      	push	{r1, r2, r3}
 801c31e:	b500      	push	{lr}
 801c320:	b09c      	sub	sp, #112	; 0x70
 801c322:	ab1d      	add	r3, sp, #116	; 0x74
 801c324:	9002      	str	r0, [sp, #8]
 801c326:	9006      	str	r0, [sp, #24]
 801c328:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 801c32c:	4809      	ldr	r0, [pc, #36]	; (801c354 <siprintf+0x38>)
 801c32e:	9107      	str	r1, [sp, #28]
 801c330:	9104      	str	r1, [sp, #16]
 801c332:	4909      	ldr	r1, [pc, #36]	; (801c358 <siprintf+0x3c>)
 801c334:	f853 2b04 	ldr.w	r2, [r3], #4
 801c338:	9105      	str	r1, [sp, #20]
 801c33a:	6800      	ldr	r0, [r0, #0]
 801c33c:	9301      	str	r3, [sp, #4]
 801c33e:	a902      	add	r1, sp, #8
 801c340:	f000 fc0a 	bl	801cb58 <_svfiprintf_r>
 801c344:	9b02      	ldr	r3, [sp, #8]
 801c346:	2200      	movs	r2, #0
 801c348:	701a      	strb	r2, [r3, #0]
 801c34a:	b01c      	add	sp, #112	; 0x70
 801c34c:	f85d eb04 	ldr.w	lr, [sp], #4
 801c350:	b003      	add	sp, #12
 801c352:	4770      	bx	lr
 801c354:	200000fc 	.word	0x200000fc
 801c358:	ffff0208 	.word	0xffff0208

0801c35c <strncpy>:
 801c35c:	b510      	push	{r4, lr}
 801c35e:	3901      	subs	r1, #1
 801c360:	4603      	mov	r3, r0
 801c362:	b132      	cbz	r2, 801c372 <strncpy+0x16>
 801c364:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 801c368:	f803 4b01 	strb.w	r4, [r3], #1
 801c36c:	3a01      	subs	r2, #1
 801c36e:	2c00      	cmp	r4, #0
 801c370:	d1f7      	bne.n	801c362 <strncpy+0x6>
 801c372:	441a      	add	r2, r3
 801c374:	2100      	movs	r1, #0
 801c376:	4293      	cmp	r3, r2
 801c378:	d100      	bne.n	801c37c <strncpy+0x20>
 801c37a:	bd10      	pop	{r4, pc}
 801c37c:	f803 1b01 	strb.w	r1, [r3], #1
 801c380:	e7f9      	b.n	801c376 <strncpy+0x1a>
	...

0801c384 <__swbuf_r>:
 801c384:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c386:	460e      	mov	r6, r1
 801c388:	4614      	mov	r4, r2
 801c38a:	4605      	mov	r5, r0
 801c38c:	b118      	cbz	r0, 801c396 <__swbuf_r+0x12>
 801c38e:	6983      	ldr	r3, [r0, #24]
 801c390:	b90b      	cbnz	r3, 801c396 <__swbuf_r+0x12>
 801c392:	f000 fa33 	bl	801c7fc <__sinit>
 801c396:	4b21      	ldr	r3, [pc, #132]	; (801c41c <__swbuf_r+0x98>)
 801c398:	429c      	cmp	r4, r3
 801c39a:	d12b      	bne.n	801c3f4 <__swbuf_r+0x70>
 801c39c:	686c      	ldr	r4, [r5, #4]
 801c39e:	69a3      	ldr	r3, [r4, #24]
 801c3a0:	60a3      	str	r3, [r4, #8]
 801c3a2:	89a3      	ldrh	r3, [r4, #12]
 801c3a4:	071a      	lsls	r2, r3, #28
 801c3a6:	d52f      	bpl.n	801c408 <__swbuf_r+0x84>
 801c3a8:	6923      	ldr	r3, [r4, #16]
 801c3aa:	b36b      	cbz	r3, 801c408 <__swbuf_r+0x84>
 801c3ac:	6923      	ldr	r3, [r4, #16]
 801c3ae:	6820      	ldr	r0, [r4, #0]
 801c3b0:	1ac0      	subs	r0, r0, r3
 801c3b2:	6963      	ldr	r3, [r4, #20]
 801c3b4:	b2f6      	uxtb	r6, r6
 801c3b6:	4283      	cmp	r3, r0
 801c3b8:	4637      	mov	r7, r6
 801c3ba:	dc04      	bgt.n	801c3c6 <__swbuf_r+0x42>
 801c3bc:	4621      	mov	r1, r4
 801c3be:	4628      	mov	r0, r5
 801c3c0:	f000 f988 	bl	801c6d4 <_fflush_r>
 801c3c4:	bb30      	cbnz	r0, 801c414 <__swbuf_r+0x90>
 801c3c6:	68a3      	ldr	r3, [r4, #8]
 801c3c8:	3b01      	subs	r3, #1
 801c3ca:	60a3      	str	r3, [r4, #8]
 801c3cc:	6823      	ldr	r3, [r4, #0]
 801c3ce:	1c5a      	adds	r2, r3, #1
 801c3d0:	6022      	str	r2, [r4, #0]
 801c3d2:	701e      	strb	r6, [r3, #0]
 801c3d4:	6963      	ldr	r3, [r4, #20]
 801c3d6:	3001      	adds	r0, #1
 801c3d8:	4283      	cmp	r3, r0
 801c3da:	d004      	beq.n	801c3e6 <__swbuf_r+0x62>
 801c3dc:	89a3      	ldrh	r3, [r4, #12]
 801c3de:	07db      	lsls	r3, r3, #31
 801c3e0:	d506      	bpl.n	801c3f0 <__swbuf_r+0x6c>
 801c3e2:	2e0a      	cmp	r6, #10
 801c3e4:	d104      	bne.n	801c3f0 <__swbuf_r+0x6c>
 801c3e6:	4621      	mov	r1, r4
 801c3e8:	4628      	mov	r0, r5
 801c3ea:	f000 f973 	bl	801c6d4 <_fflush_r>
 801c3ee:	b988      	cbnz	r0, 801c414 <__swbuf_r+0x90>
 801c3f0:	4638      	mov	r0, r7
 801c3f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c3f4:	4b0a      	ldr	r3, [pc, #40]	; (801c420 <__swbuf_r+0x9c>)
 801c3f6:	429c      	cmp	r4, r3
 801c3f8:	d101      	bne.n	801c3fe <__swbuf_r+0x7a>
 801c3fa:	68ac      	ldr	r4, [r5, #8]
 801c3fc:	e7cf      	b.n	801c39e <__swbuf_r+0x1a>
 801c3fe:	4b09      	ldr	r3, [pc, #36]	; (801c424 <__swbuf_r+0xa0>)
 801c400:	429c      	cmp	r4, r3
 801c402:	bf08      	it	eq
 801c404:	68ec      	ldreq	r4, [r5, #12]
 801c406:	e7ca      	b.n	801c39e <__swbuf_r+0x1a>
 801c408:	4621      	mov	r1, r4
 801c40a:	4628      	mov	r0, r5
 801c40c:	f000 f80c 	bl	801c428 <__swsetup_r>
 801c410:	2800      	cmp	r0, #0
 801c412:	d0cb      	beq.n	801c3ac <__swbuf_r+0x28>
 801c414:	f04f 37ff 	mov.w	r7, #4294967295
 801c418:	e7ea      	b.n	801c3f0 <__swbuf_r+0x6c>
 801c41a:	bf00      	nop
 801c41c:	08020db4 	.word	0x08020db4
 801c420:	08020dd4 	.word	0x08020dd4
 801c424:	08020d94 	.word	0x08020d94

0801c428 <__swsetup_r>:
 801c428:	4b32      	ldr	r3, [pc, #200]	; (801c4f4 <__swsetup_r+0xcc>)
 801c42a:	b570      	push	{r4, r5, r6, lr}
 801c42c:	681d      	ldr	r5, [r3, #0]
 801c42e:	4606      	mov	r6, r0
 801c430:	460c      	mov	r4, r1
 801c432:	b125      	cbz	r5, 801c43e <__swsetup_r+0x16>
 801c434:	69ab      	ldr	r3, [r5, #24]
 801c436:	b913      	cbnz	r3, 801c43e <__swsetup_r+0x16>
 801c438:	4628      	mov	r0, r5
 801c43a:	f000 f9df 	bl	801c7fc <__sinit>
 801c43e:	4b2e      	ldr	r3, [pc, #184]	; (801c4f8 <__swsetup_r+0xd0>)
 801c440:	429c      	cmp	r4, r3
 801c442:	d10f      	bne.n	801c464 <__swsetup_r+0x3c>
 801c444:	686c      	ldr	r4, [r5, #4]
 801c446:	89a3      	ldrh	r3, [r4, #12]
 801c448:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c44c:	0719      	lsls	r1, r3, #28
 801c44e:	d42c      	bmi.n	801c4aa <__swsetup_r+0x82>
 801c450:	06dd      	lsls	r5, r3, #27
 801c452:	d411      	bmi.n	801c478 <__swsetup_r+0x50>
 801c454:	2309      	movs	r3, #9
 801c456:	6033      	str	r3, [r6, #0]
 801c458:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801c45c:	81a3      	strh	r3, [r4, #12]
 801c45e:	f04f 30ff 	mov.w	r0, #4294967295
 801c462:	e03e      	b.n	801c4e2 <__swsetup_r+0xba>
 801c464:	4b25      	ldr	r3, [pc, #148]	; (801c4fc <__swsetup_r+0xd4>)
 801c466:	429c      	cmp	r4, r3
 801c468:	d101      	bne.n	801c46e <__swsetup_r+0x46>
 801c46a:	68ac      	ldr	r4, [r5, #8]
 801c46c:	e7eb      	b.n	801c446 <__swsetup_r+0x1e>
 801c46e:	4b24      	ldr	r3, [pc, #144]	; (801c500 <__swsetup_r+0xd8>)
 801c470:	429c      	cmp	r4, r3
 801c472:	bf08      	it	eq
 801c474:	68ec      	ldreq	r4, [r5, #12]
 801c476:	e7e6      	b.n	801c446 <__swsetup_r+0x1e>
 801c478:	0758      	lsls	r0, r3, #29
 801c47a:	d512      	bpl.n	801c4a2 <__swsetup_r+0x7a>
 801c47c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c47e:	b141      	cbz	r1, 801c492 <__swsetup_r+0x6a>
 801c480:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c484:	4299      	cmp	r1, r3
 801c486:	d002      	beq.n	801c48e <__swsetup_r+0x66>
 801c488:	4630      	mov	r0, r6
 801c48a:	f7ff fb5b 	bl	801bb44 <_free_r>
 801c48e:	2300      	movs	r3, #0
 801c490:	6363      	str	r3, [r4, #52]	; 0x34
 801c492:	89a3      	ldrh	r3, [r4, #12]
 801c494:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801c498:	81a3      	strh	r3, [r4, #12]
 801c49a:	2300      	movs	r3, #0
 801c49c:	6063      	str	r3, [r4, #4]
 801c49e:	6923      	ldr	r3, [r4, #16]
 801c4a0:	6023      	str	r3, [r4, #0]
 801c4a2:	89a3      	ldrh	r3, [r4, #12]
 801c4a4:	f043 0308 	orr.w	r3, r3, #8
 801c4a8:	81a3      	strh	r3, [r4, #12]
 801c4aa:	6923      	ldr	r3, [r4, #16]
 801c4ac:	b94b      	cbnz	r3, 801c4c2 <__swsetup_r+0x9a>
 801c4ae:	89a3      	ldrh	r3, [r4, #12]
 801c4b0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801c4b4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801c4b8:	d003      	beq.n	801c4c2 <__swsetup_r+0x9a>
 801c4ba:	4621      	mov	r1, r4
 801c4bc:	4630      	mov	r0, r6
 801c4be:	f000 fa63 	bl	801c988 <__smakebuf_r>
 801c4c2:	89a0      	ldrh	r0, [r4, #12]
 801c4c4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c4c8:	f010 0301 	ands.w	r3, r0, #1
 801c4cc:	d00a      	beq.n	801c4e4 <__swsetup_r+0xbc>
 801c4ce:	2300      	movs	r3, #0
 801c4d0:	60a3      	str	r3, [r4, #8]
 801c4d2:	6963      	ldr	r3, [r4, #20]
 801c4d4:	425b      	negs	r3, r3
 801c4d6:	61a3      	str	r3, [r4, #24]
 801c4d8:	6923      	ldr	r3, [r4, #16]
 801c4da:	b943      	cbnz	r3, 801c4ee <__swsetup_r+0xc6>
 801c4dc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801c4e0:	d1ba      	bne.n	801c458 <__swsetup_r+0x30>
 801c4e2:	bd70      	pop	{r4, r5, r6, pc}
 801c4e4:	0781      	lsls	r1, r0, #30
 801c4e6:	bf58      	it	pl
 801c4e8:	6963      	ldrpl	r3, [r4, #20]
 801c4ea:	60a3      	str	r3, [r4, #8]
 801c4ec:	e7f4      	b.n	801c4d8 <__swsetup_r+0xb0>
 801c4ee:	2000      	movs	r0, #0
 801c4f0:	e7f7      	b.n	801c4e2 <__swsetup_r+0xba>
 801c4f2:	bf00      	nop
 801c4f4:	200000fc 	.word	0x200000fc
 801c4f8:	08020db4 	.word	0x08020db4
 801c4fc:	08020dd4 	.word	0x08020dd4
 801c500:	08020d94 	.word	0x08020d94

0801c504 <__register_exitproc>:
 801c504:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c508:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801c5c4 <__register_exitproc+0xc0>
 801c50c:	4606      	mov	r6, r0
 801c50e:	f8d8 0000 	ldr.w	r0, [r8]
 801c512:	461f      	mov	r7, r3
 801c514:	460d      	mov	r5, r1
 801c516:	4691      	mov	r9, r2
 801c518:	f000 fa0e 	bl	801c938 <__retarget_lock_acquire_recursive>
 801c51c:	4b25      	ldr	r3, [pc, #148]	; (801c5b4 <__register_exitproc+0xb0>)
 801c51e:	681c      	ldr	r4, [r3, #0]
 801c520:	b934      	cbnz	r4, 801c530 <__register_exitproc+0x2c>
 801c522:	4c25      	ldr	r4, [pc, #148]	; (801c5b8 <__register_exitproc+0xb4>)
 801c524:	601c      	str	r4, [r3, #0]
 801c526:	4b25      	ldr	r3, [pc, #148]	; (801c5bc <__register_exitproc+0xb8>)
 801c528:	b113      	cbz	r3, 801c530 <__register_exitproc+0x2c>
 801c52a:	681b      	ldr	r3, [r3, #0]
 801c52c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801c530:	6863      	ldr	r3, [r4, #4]
 801c532:	2b1f      	cmp	r3, #31
 801c534:	dd07      	ble.n	801c546 <__register_exitproc+0x42>
 801c536:	f8d8 0000 	ldr.w	r0, [r8]
 801c53a:	f000 f9ff 	bl	801c93c <__retarget_lock_release_recursive>
 801c53e:	f04f 30ff 	mov.w	r0, #4294967295
 801c542:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c546:	b34e      	cbz	r6, 801c59c <__register_exitproc+0x98>
 801c548:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801c54c:	b988      	cbnz	r0, 801c572 <__register_exitproc+0x6e>
 801c54e:	4b1c      	ldr	r3, [pc, #112]	; (801c5c0 <__register_exitproc+0xbc>)
 801c550:	b923      	cbnz	r3, 801c55c <__register_exitproc+0x58>
 801c552:	f8d8 0000 	ldr.w	r0, [r8]
 801c556:	f000 f9f0 	bl	801c93a <__retarget_lock_release>
 801c55a:	e7f0      	b.n	801c53e <__register_exitproc+0x3a>
 801c55c:	f44f 7084 	mov.w	r0, #264	; 0x108
 801c560:	f7ff faca 	bl	801baf8 <malloc>
 801c564:	2800      	cmp	r0, #0
 801c566:	d0f4      	beq.n	801c552 <__register_exitproc+0x4e>
 801c568:	2300      	movs	r3, #0
 801c56a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801c56e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801c572:	6863      	ldr	r3, [r4, #4]
 801c574:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801c578:	2201      	movs	r2, #1
 801c57a:	409a      	lsls	r2, r3
 801c57c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801c580:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801c584:	4313      	orrs	r3, r2
 801c586:	2e02      	cmp	r6, #2
 801c588:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801c58c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801c590:	bf02      	ittt	eq
 801c592:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801c596:	431a      	orreq	r2, r3
 801c598:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 801c59c:	6863      	ldr	r3, [r4, #4]
 801c59e:	f8d8 0000 	ldr.w	r0, [r8]
 801c5a2:	1c5a      	adds	r2, r3, #1
 801c5a4:	3302      	adds	r3, #2
 801c5a6:	6062      	str	r2, [r4, #4]
 801c5a8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801c5ac:	f000 f9c6 	bl	801c93c <__retarget_lock_release_recursive>
 801c5b0:	2000      	movs	r0, #0
 801c5b2:	e7c6      	b.n	801c542 <__register_exitproc+0x3e>
 801c5b4:	200137a0 	.word	0x200137a0
 801c5b8:	20013714 	.word	0x20013714
 801c5bc:	08020d90 	.word	0x08020d90
 801c5c0:	0801baf9 	.word	0x0801baf9
 801c5c4:	20000160 	.word	0x20000160

0801c5c8 <__sflush_r>:
 801c5c8:	898a      	ldrh	r2, [r1, #12]
 801c5ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c5ce:	4605      	mov	r5, r0
 801c5d0:	0710      	lsls	r0, r2, #28
 801c5d2:	460c      	mov	r4, r1
 801c5d4:	d458      	bmi.n	801c688 <__sflush_r+0xc0>
 801c5d6:	684b      	ldr	r3, [r1, #4]
 801c5d8:	2b00      	cmp	r3, #0
 801c5da:	dc05      	bgt.n	801c5e8 <__sflush_r+0x20>
 801c5dc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801c5de:	2b00      	cmp	r3, #0
 801c5e0:	dc02      	bgt.n	801c5e8 <__sflush_r+0x20>
 801c5e2:	2000      	movs	r0, #0
 801c5e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c5e8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c5ea:	2e00      	cmp	r6, #0
 801c5ec:	d0f9      	beq.n	801c5e2 <__sflush_r+0x1a>
 801c5ee:	2300      	movs	r3, #0
 801c5f0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801c5f4:	682f      	ldr	r7, [r5, #0]
 801c5f6:	602b      	str	r3, [r5, #0]
 801c5f8:	d032      	beq.n	801c660 <__sflush_r+0x98>
 801c5fa:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801c5fc:	89a3      	ldrh	r3, [r4, #12]
 801c5fe:	075a      	lsls	r2, r3, #29
 801c600:	d505      	bpl.n	801c60e <__sflush_r+0x46>
 801c602:	6863      	ldr	r3, [r4, #4]
 801c604:	1ac0      	subs	r0, r0, r3
 801c606:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801c608:	b10b      	cbz	r3, 801c60e <__sflush_r+0x46>
 801c60a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801c60c:	1ac0      	subs	r0, r0, r3
 801c60e:	2300      	movs	r3, #0
 801c610:	4602      	mov	r2, r0
 801c612:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c614:	6a21      	ldr	r1, [r4, #32]
 801c616:	4628      	mov	r0, r5
 801c618:	47b0      	blx	r6
 801c61a:	1c43      	adds	r3, r0, #1
 801c61c:	89a3      	ldrh	r3, [r4, #12]
 801c61e:	d106      	bne.n	801c62e <__sflush_r+0x66>
 801c620:	6829      	ldr	r1, [r5, #0]
 801c622:	291d      	cmp	r1, #29
 801c624:	d82c      	bhi.n	801c680 <__sflush_r+0xb8>
 801c626:	4a2a      	ldr	r2, [pc, #168]	; (801c6d0 <__sflush_r+0x108>)
 801c628:	40ca      	lsrs	r2, r1
 801c62a:	07d6      	lsls	r6, r2, #31
 801c62c:	d528      	bpl.n	801c680 <__sflush_r+0xb8>
 801c62e:	2200      	movs	r2, #0
 801c630:	6062      	str	r2, [r4, #4]
 801c632:	04d9      	lsls	r1, r3, #19
 801c634:	6922      	ldr	r2, [r4, #16]
 801c636:	6022      	str	r2, [r4, #0]
 801c638:	d504      	bpl.n	801c644 <__sflush_r+0x7c>
 801c63a:	1c42      	adds	r2, r0, #1
 801c63c:	d101      	bne.n	801c642 <__sflush_r+0x7a>
 801c63e:	682b      	ldr	r3, [r5, #0]
 801c640:	b903      	cbnz	r3, 801c644 <__sflush_r+0x7c>
 801c642:	6560      	str	r0, [r4, #84]	; 0x54
 801c644:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c646:	602f      	str	r7, [r5, #0]
 801c648:	2900      	cmp	r1, #0
 801c64a:	d0ca      	beq.n	801c5e2 <__sflush_r+0x1a>
 801c64c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c650:	4299      	cmp	r1, r3
 801c652:	d002      	beq.n	801c65a <__sflush_r+0x92>
 801c654:	4628      	mov	r0, r5
 801c656:	f7ff fa75 	bl	801bb44 <_free_r>
 801c65a:	2000      	movs	r0, #0
 801c65c:	6360      	str	r0, [r4, #52]	; 0x34
 801c65e:	e7c1      	b.n	801c5e4 <__sflush_r+0x1c>
 801c660:	6a21      	ldr	r1, [r4, #32]
 801c662:	2301      	movs	r3, #1
 801c664:	4628      	mov	r0, r5
 801c666:	47b0      	blx	r6
 801c668:	1c41      	adds	r1, r0, #1
 801c66a:	d1c7      	bne.n	801c5fc <__sflush_r+0x34>
 801c66c:	682b      	ldr	r3, [r5, #0]
 801c66e:	2b00      	cmp	r3, #0
 801c670:	d0c4      	beq.n	801c5fc <__sflush_r+0x34>
 801c672:	2b1d      	cmp	r3, #29
 801c674:	d001      	beq.n	801c67a <__sflush_r+0xb2>
 801c676:	2b16      	cmp	r3, #22
 801c678:	d101      	bne.n	801c67e <__sflush_r+0xb6>
 801c67a:	602f      	str	r7, [r5, #0]
 801c67c:	e7b1      	b.n	801c5e2 <__sflush_r+0x1a>
 801c67e:	89a3      	ldrh	r3, [r4, #12]
 801c680:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c684:	81a3      	strh	r3, [r4, #12]
 801c686:	e7ad      	b.n	801c5e4 <__sflush_r+0x1c>
 801c688:	690f      	ldr	r7, [r1, #16]
 801c68a:	2f00      	cmp	r7, #0
 801c68c:	d0a9      	beq.n	801c5e2 <__sflush_r+0x1a>
 801c68e:	0793      	lsls	r3, r2, #30
 801c690:	680e      	ldr	r6, [r1, #0]
 801c692:	bf08      	it	eq
 801c694:	694b      	ldreq	r3, [r1, #20]
 801c696:	600f      	str	r7, [r1, #0]
 801c698:	bf18      	it	ne
 801c69a:	2300      	movne	r3, #0
 801c69c:	eba6 0807 	sub.w	r8, r6, r7
 801c6a0:	608b      	str	r3, [r1, #8]
 801c6a2:	f1b8 0f00 	cmp.w	r8, #0
 801c6a6:	dd9c      	ble.n	801c5e2 <__sflush_r+0x1a>
 801c6a8:	6a21      	ldr	r1, [r4, #32]
 801c6aa:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801c6ac:	4643      	mov	r3, r8
 801c6ae:	463a      	mov	r2, r7
 801c6b0:	4628      	mov	r0, r5
 801c6b2:	47b0      	blx	r6
 801c6b4:	2800      	cmp	r0, #0
 801c6b6:	dc06      	bgt.n	801c6c6 <__sflush_r+0xfe>
 801c6b8:	89a3      	ldrh	r3, [r4, #12]
 801c6ba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c6be:	81a3      	strh	r3, [r4, #12]
 801c6c0:	f04f 30ff 	mov.w	r0, #4294967295
 801c6c4:	e78e      	b.n	801c5e4 <__sflush_r+0x1c>
 801c6c6:	4407      	add	r7, r0
 801c6c8:	eba8 0800 	sub.w	r8, r8, r0
 801c6cc:	e7e9      	b.n	801c6a2 <__sflush_r+0xda>
 801c6ce:	bf00      	nop
 801c6d0:	20400001 	.word	0x20400001

0801c6d4 <_fflush_r>:
 801c6d4:	b538      	push	{r3, r4, r5, lr}
 801c6d6:	690b      	ldr	r3, [r1, #16]
 801c6d8:	4605      	mov	r5, r0
 801c6da:	460c      	mov	r4, r1
 801c6dc:	b913      	cbnz	r3, 801c6e4 <_fflush_r+0x10>
 801c6de:	2500      	movs	r5, #0
 801c6e0:	4628      	mov	r0, r5
 801c6e2:	bd38      	pop	{r3, r4, r5, pc}
 801c6e4:	b118      	cbz	r0, 801c6ee <_fflush_r+0x1a>
 801c6e6:	6983      	ldr	r3, [r0, #24]
 801c6e8:	b90b      	cbnz	r3, 801c6ee <_fflush_r+0x1a>
 801c6ea:	f000 f887 	bl	801c7fc <__sinit>
 801c6ee:	4b14      	ldr	r3, [pc, #80]	; (801c740 <_fflush_r+0x6c>)
 801c6f0:	429c      	cmp	r4, r3
 801c6f2:	d11b      	bne.n	801c72c <_fflush_r+0x58>
 801c6f4:	686c      	ldr	r4, [r5, #4]
 801c6f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c6fa:	2b00      	cmp	r3, #0
 801c6fc:	d0ef      	beq.n	801c6de <_fflush_r+0xa>
 801c6fe:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801c700:	07d0      	lsls	r0, r2, #31
 801c702:	d404      	bmi.n	801c70e <_fflush_r+0x3a>
 801c704:	0599      	lsls	r1, r3, #22
 801c706:	d402      	bmi.n	801c70e <_fflush_r+0x3a>
 801c708:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c70a:	f000 f915 	bl	801c938 <__retarget_lock_acquire_recursive>
 801c70e:	4628      	mov	r0, r5
 801c710:	4621      	mov	r1, r4
 801c712:	f7ff ff59 	bl	801c5c8 <__sflush_r>
 801c716:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801c718:	07da      	lsls	r2, r3, #31
 801c71a:	4605      	mov	r5, r0
 801c71c:	d4e0      	bmi.n	801c6e0 <_fflush_r+0xc>
 801c71e:	89a3      	ldrh	r3, [r4, #12]
 801c720:	059b      	lsls	r3, r3, #22
 801c722:	d4dd      	bmi.n	801c6e0 <_fflush_r+0xc>
 801c724:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c726:	f000 f909 	bl	801c93c <__retarget_lock_release_recursive>
 801c72a:	e7d9      	b.n	801c6e0 <_fflush_r+0xc>
 801c72c:	4b05      	ldr	r3, [pc, #20]	; (801c744 <_fflush_r+0x70>)
 801c72e:	429c      	cmp	r4, r3
 801c730:	d101      	bne.n	801c736 <_fflush_r+0x62>
 801c732:	68ac      	ldr	r4, [r5, #8]
 801c734:	e7df      	b.n	801c6f6 <_fflush_r+0x22>
 801c736:	4b04      	ldr	r3, [pc, #16]	; (801c748 <_fflush_r+0x74>)
 801c738:	429c      	cmp	r4, r3
 801c73a:	bf08      	it	eq
 801c73c:	68ec      	ldreq	r4, [r5, #12]
 801c73e:	e7da      	b.n	801c6f6 <_fflush_r+0x22>
 801c740:	08020db4 	.word	0x08020db4
 801c744:	08020dd4 	.word	0x08020dd4
 801c748:	08020d94 	.word	0x08020d94

0801c74c <std>:
 801c74c:	2300      	movs	r3, #0
 801c74e:	b510      	push	{r4, lr}
 801c750:	4604      	mov	r4, r0
 801c752:	e9c0 3300 	strd	r3, r3, [r0]
 801c756:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801c75a:	6083      	str	r3, [r0, #8]
 801c75c:	8181      	strh	r1, [r0, #12]
 801c75e:	6643      	str	r3, [r0, #100]	; 0x64
 801c760:	81c2      	strh	r2, [r0, #14]
 801c762:	6183      	str	r3, [r0, #24]
 801c764:	4619      	mov	r1, r3
 801c766:	2208      	movs	r2, #8
 801c768:	305c      	adds	r0, #92	; 0x5c
 801c76a:	f7ff f9e3 	bl	801bb34 <memset>
 801c76e:	4b05      	ldr	r3, [pc, #20]	; (801c784 <std+0x38>)
 801c770:	6263      	str	r3, [r4, #36]	; 0x24
 801c772:	4b05      	ldr	r3, [pc, #20]	; (801c788 <std+0x3c>)
 801c774:	62a3      	str	r3, [r4, #40]	; 0x28
 801c776:	4b05      	ldr	r3, [pc, #20]	; (801c78c <std+0x40>)
 801c778:	62e3      	str	r3, [r4, #44]	; 0x2c
 801c77a:	4b05      	ldr	r3, [pc, #20]	; (801c790 <std+0x44>)
 801c77c:	6224      	str	r4, [r4, #32]
 801c77e:	6323      	str	r3, [r4, #48]	; 0x30
 801c780:	bd10      	pop	{r4, pc}
 801c782:	bf00      	nop
 801c784:	0801cd59 	.word	0x0801cd59
 801c788:	0801cd7b 	.word	0x0801cd7b
 801c78c:	0801cdb3 	.word	0x0801cdb3
 801c790:	0801cdd7 	.word	0x0801cdd7

0801c794 <_cleanup_r>:
 801c794:	4901      	ldr	r1, [pc, #4]	; (801c79c <_cleanup_r+0x8>)
 801c796:	f000 b8af 	b.w	801c8f8 <_fwalk_reent>
 801c79a:	bf00      	nop
 801c79c:	0801c6d5 	.word	0x0801c6d5

0801c7a0 <__sfmoreglue>:
 801c7a0:	b570      	push	{r4, r5, r6, lr}
 801c7a2:	1e4a      	subs	r2, r1, #1
 801c7a4:	2568      	movs	r5, #104	; 0x68
 801c7a6:	4355      	muls	r5, r2
 801c7a8:	460e      	mov	r6, r1
 801c7aa:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801c7ae:	f7ff fa19 	bl	801bbe4 <_malloc_r>
 801c7b2:	4604      	mov	r4, r0
 801c7b4:	b140      	cbz	r0, 801c7c8 <__sfmoreglue+0x28>
 801c7b6:	2100      	movs	r1, #0
 801c7b8:	e9c0 1600 	strd	r1, r6, [r0]
 801c7bc:	300c      	adds	r0, #12
 801c7be:	60a0      	str	r0, [r4, #8]
 801c7c0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801c7c4:	f7ff f9b6 	bl	801bb34 <memset>
 801c7c8:	4620      	mov	r0, r4
 801c7ca:	bd70      	pop	{r4, r5, r6, pc}

0801c7cc <__sfp_lock_acquire>:
 801c7cc:	4801      	ldr	r0, [pc, #4]	; (801c7d4 <__sfp_lock_acquire+0x8>)
 801c7ce:	f000 b8b3 	b.w	801c938 <__retarget_lock_acquire_recursive>
 801c7d2:	bf00      	nop
 801c7d4:	20013a48 	.word	0x20013a48

0801c7d8 <__sfp_lock_release>:
 801c7d8:	4801      	ldr	r0, [pc, #4]	; (801c7e0 <__sfp_lock_release+0x8>)
 801c7da:	f000 b8af 	b.w	801c93c <__retarget_lock_release_recursive>
 801c7de:	bf00      	nop
 801c7e0:	20013a48 	.word	0x20013a48

0801c7e4 <__sinit_lock_acquire>:
 801c7e4:	4801      	ldr	r0, [pc, #4]	; (801c7ec <__sinit_lock_acquire+0x8>)
 801c7e6:	f000 b8a7 	b.w	801c938 <__retarget_lock_acquire_recursive>
 801c7ea:	bf00      	nop
 801c7ec:	20013a43 	.word	0x20013a43

0801c7f0 <__sinit_lock_release>:
 801c7f0:	4801      	ldr	r0, [pc, #4]	; (801c7f8 <__sinit_lock_release+0x8>)
 801c7f2:	f000 b8a3 	b.w	801c93c <__retarget_lock_release_recursive>
 801c7f6:	bf00      	nop
 801c7f8:	20013a43 	.word	0x20013a43

0801c7fc <__sinit>:
 801c7fc:	b510      	push	{r4, lr}
 801c7fe:	4604      	mov	r4, r0
 801c800:	f7ff fff0 	bl	801c7e4 <__sinit_lock_acquire>
 801c804:	69a3      	ldr	r3, [r4, #24]
 801c806:	b11b      	cbz	r3, 801c810 <__sinit+0x14>
 801c808:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c80c:	f7ff bff0 	b.w	801c7f0 <__sinit_lock_release>
 801c810:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801c814:	6523      	str	r3, [r4, #80]	; 0x50
 801c816:	4b13      	ldr	r3, [pc, #76]	; (801c864 <__sinit+0x68>)
 801c818:	4a13      	ldr	r2, [pc, #76]	; (801c868 <__sinit+0x6c>)
 801c81a:	681b      	ldr	r3, [r3, #0]
 801c81c:	62a2      	str	r2, [r4, #40]	; 0x28
 801c81e:	42a3      	cmp	r3, r4
 801c820:	bf04      	itt	eq
 801c822:	2301      	moveq	r3, #1
 801c824:	61a3      	streq	r3, [r4, #24]
 801c826:	4620      	mov	r0, r4
 801c828:	f000 f820 	bl	801c86c <__sfp>
 801c82c:	6060      	str	r0, [r4, #4]
 801c82e:	4620      	mov	r0, r4
 801c830:	f000 f81c 	bl	801c86c <__sfp>
 801c834:	60a0      	str	r0, [r4, #8]
 801c836:	4620      	mov	r0, r4
 801c838:	f000 f818 	bl	801c86c <__sfp>
 801c83c:	2200      	movs	r2, #0
 801c83e:	60e0      	str	r0, [r4, #12]
 801c840:	2104      	movs	r1, #4
 801c842:	6860      	ldr	r0, [r4, #4]
 801c844:	f7ff ff82 	bl	801c74c <std>
 801c848:	68a0      	ldr	r0, [r4, #8]
 801c84a:	2201      	movs	r2, #1
 801c84c:	2109      	movs	r1, #9
 801c84e:	f7ff ff7d 	bl	801c74c <std>
 801c852:	68e0      	ldr	r0, [r4, #12]
 801c854:	2202      	movs	r2, #2
 801c856:	2112      	movs	r1, #18
 801c858:	f7ff ff78 	bl	801c74c <std>
 801c85c:	2301      	movs	r3, #1
 801c85e:	61a3      	str	r3, [r4, #24]
 801c860:	e7d2      	b.n	801c808 <__sinit+0xc>
 801c862:	bf00      	nop
 801c864:	08020d58 	.word	0x08020d58
 801c868:	0801c795 	.word	0x0801c795

0801c86c <__sfp>:
 801c86c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c86e:	4607      	mov	r7, r0
 801c870:	f7ff ffac 	bl	801c7cc <__sfp_lock_acquire>
 801c874:	4b1e      	ldr	r3, [pc, #120]	; (801c8f0 <__sfp+0x84>)
 801c876:	681e      	ldr	r6, [r3, #0]
 801c878:	69b3      	ldr	r3, [r6, #24]
 801c87a:	b913      	cbnz	r3, 801c882 <__sfp+0x16>
 801c87c:	4630      	mov	r0, r6
 801c87e:	f7ff ffbd 	bl	801c7fc <__sinit>
 801c882:	3648      	adds	r6, #72	; 0x48
 801c884:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801c888:	3b01      	subs	r3, #1
 801c88a:	d503      	bpl.n	801c894 <__sfp+0x28>
 801c88c:	6833      	ldr	r3, [r6, #0]
 801c88e:	b30b      	cbz	r3, 801c8d4 <__sfp+0x68>
 801c890:	6836      	ldr	r6, [r6, #0]
 801c892:	e7f7      	b.n	801c884 <__sfp+0x18>
 801c894:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801c898:	b9d5      	cbnz	r5, 801c8d0 <__sfp+0x64>
 801c89a:	4b16      	ldr	r3, [pc, #88]	; (801c8f4 <__sfp+0x88>)
 801c89c:	60e3      	str	r3, [r4, #12]
 801c89e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801c8a2:	6665      	str	r5, [r4, #100]	; 0x64
 801c8a4:	f000 f847 	bl	801c936 <__retarget_lock_init_recursive>
 801c8a8:	f7ff ff96 	bl	801c7d8 <__sfp_lock_release>
 801c8ac:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801c8b0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801c8b4:	6025      	str	r5, [r4, #0]
 801c8b6:	61a5      	str	r5, [r4, #24]
 801c8b8:	2208      	movs	r2, #8
 801c8ba:	4629      	mov	r1, r5
 801c8bc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801c8c0:	f7ff f938 	bl	801bb34 <memset>
 801c8c4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801c8c8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801c8cc:	4620      	mov	r0, r4
 801c8ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c8d0:	3468      	adds	r4, #104	; 0x68
 801c8d2:	e7d9      	b.n	801c888 <__sfp+0x1c>
 801c8d4:	2104      	movs	r1, #4
 801c8d6:	4638      	mov	r0, r7
 801c8d8:	f7ff ff62 	bl	801c7a0 <__sfmoreglue>
 801c8dc:	4604      	mov	r4, r0
 801c8de:	6030      	str	r0, [r6, #0]
 801c8e0:	2800      	cmp	r0, #0
 801c8e2:	d1d5      	bne.n	801c890 <__sfp+0x24>
 801c8e4:	f7ff ff78 	bl	801c7d8 <__sfp_lock_release>
 801c8e8:	230c      	movs	r3, #12
 801c8ea:	603b      	str	r3, [r7, #0]
 801c8ec:	e7ee      	b.n	801c8cc <__sfp+0x60>
 801c8ee:	bf00      	nop
 801c8f0:	08020d58 	.word	0x08020d58
 801c8f4:	ffff0001 	.word	0xffff0001

0801c8f8 <_fwalk_reent>:
 801c8f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c8fc:	4606      	mov	r6, r0
 801c8fe:	4688      	mov	r8, r1
 801c900:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801c904:	2700      	movs	r7, #0
 801c906:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801c90a:	f1b9 0901 	subs.w	r9, r9, #1
 801c90e:	d505      	bpl.n	801c91c <_fwalk_reent+0x24>
 801c910:	6824      	ldr	r4, [r4, #0]
 801c912:	2c00      	cmp	r4, #0
 801c914:	d1f7      	bne.n	801c906 <_fwalk_reent+0xe>
 801c916:	4638      	mov	r0, r7
 801c918:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c91c:	89ab      	ldrh	r3, [r5, #12]
 801c91e:	2b01      	cmp	r3, #1
 801c920:	d907      	bls.n	801c932 <_fwalk_reent+0x3a>
 801c922:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801c926:	3301      	adds	r3, #1
 801c928:	d003      	beq.n	801c932 <_fwalk_reent+0x3a>
 801c92a:	4629      	mov	r1, r5
 801c92c:	4630      	mov	r0, r6
 801c92e:	47c0      	blx	r8
 801c930:	4307      	orrs	r7, r0
 801c932:	3568      	adds	r5, #104	; 0x68
 801c934:	e7e9      	b.n	801c90a <_fwalk_reent+0x12>

0801c936 <__retarget_lock_init_recursive>:
 801c936:	4770      	bx	lr

0801c938 <__retarget_lock_acquire_recursive>:
 801c938:	4770      	bx	lr

0801c93a <__retarget_lock_release>:
 801c93a:	4770      	bx	lr

0801c93c <__retarget_lock_release_recursive>:
 801c93c:	4770      	bx	lr

0801c93e <__swhatbuf_r>:
 801c93e:	b570      	push	{r4, r5, r6, lr}
 801c940:	460e      	mov	r6, r1
 801c942:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c946:	2900      	cmp	r1, #0
 801c948:	b096      	sub	sp, #88	; 0x58
 801c94a:	4614      	mov	r4, r2
 801c94c:	461d      	mov	r5, r3
 801c94e:	da07      	bge.n	801c960 <__swhatbuf_r+0x22>
 801c950:	2300      	movs	r3, #0
 801c952:	602b      	str	r3, [r5, #0]
 801c954:	89b3      	ldrh	r3, [r6, #12]
 801c956:	061a      	lsls	r2, r3, #24
 801c958:	d410      	bmi.n	801c97c <__swhatbuf_r+0x3e>
 801c95a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801c95e:	e00e      	b.n	801c97e <__swhatbuf_r+0x40>
 801c960:	466a      	mov	r2, sp
 801c962:	f000 fa5f 	bl	801ce24 <_fstat_r>
 801c966:	2800      	cmp	r0, #0
 801c968:	dbf2      	blt.n	801c950 <__swhatbuf_r+0x12>
 801c96a:	9a01      	ldr	r2, [sp, #4]
 801c96c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801c970:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801c974:	425a      	negs	r2, r3
 801c976:	415a      	adcs	r2, r3
 801c978:	602a      	str	r2, [r5, #0]
 801c97a:	e7ee      	b.n	801c95a <__swhatbuf_r+0x1c>
 801c97c:	2340      	movs	r3, #64	; 0x40
 801c97e:	2000      	movs	r0, #0
 801c980:	6023      	str	r3, [r4, #0]
 801c982:	b016      	add	sp, #88	; 0x58
 801c984:	bd70      	pop	{r4, r5, r6, pc}
	...

0801c988 <__smakebuf_r>:
 801c988:	898b      	ldrh	r3, [r1, #12]
 801c98a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801c98c:	079d      	lsls	r5, r3, #30
 801c98e:	4606      	mov	r6, r0
 801c990:	460c      	mov	r4, r1
 801c992:	d507      	bpl.n	801c9a4 <__smakebuf_r+0x1c>
 801c994:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801c998:	6023      	str	r3, [r4, #0]
 801c99a:	6123      	str	r3, [r4, #16]
 801c99c:	2301      	movs	r3, #1
 801c99e:	6163      	str	r3, [r4, #20]
 801c9a0:	b002      	add	sp, #8
 801c9a2:	bd70      	pop	{r4, r5, r6, pc}
 801c9a4:	ab01      	add	r3, sp, #4
 801c9a6:	466a      	mov	r2, sp
 801c9a8:	f7ff ffc9 	bl	801c93e <__swhatbuf_r>
 801c9ac:	9900      	ldr	r1, [sp, #0]
 801c9ae:	4605      	mov	r5, r0
 801c9b0:	4630      	mov	r0, r6
 801c9b2:	f7ff f917 	bl	801bbe4 <_malloc_r>
 801c9b6:	b948      	cbnz	r0, 801c9cc <__smakebuf_r+0x44>
 801c9b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c9bc:	059a      	lsls	r2, r3, #22
 801c9be:	d4ef      	bmi.n	801c9a0 <__smakebuf_r+0x18>
 801c9c0:	f023 0303 	bic.w	r3, r3, #3
 801c9c4:	f043 0302 	orr.w	r3, r3, #2
 801c9c8:	81a3      	strh	r3, [r4, #12]
 801c9ca:	e7e3      	b.n	801c994 <__smakebuf_r+0xc>
 801c9cc:	4b0d      	ldr	r3, [pc, #52]	; (801ca04 <__smakebuf_r+0x7c>)
 801c9ce:	62b3      	str	r3, [r6, #40]	; 0x28
 801c9d0:	89a3      	ldrh	r3, [r4, #12]
 801c9d2:	6020      	str	r0, [r4, #0]
 801c9d4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801c9d8:	81a3      	strh	r3, [r4, #12]
 801c9da:	9b00      	ldr	r3, [sp, #0]
 801c9dc:	6163      	str	r3, [r4, #20]
 801c9de:	9b01      	ldr	r3, [sp, #4]
 801c9e0:	6120      	str	r0, [r4, #16]
 801c9e2:	b15b      	cbz	r3, 801c9fc <__smakebuf_r+0x74>
 801c9e4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c9e8:	4630      	mov	r0, r6
 801c9ea:	f000 fa2d 	bl	801ce48 <_isatty_r>
 801c9ee:	b128      	cbz	r0, 801c9fc <__smakebuf_r+0x74>
 801c9f0:	89a3      	ldrh	r3, [r4, #12]
 801c9f2:	f023 0303 	bic.w	r3, r3, #3
 801c9f6:	f043 0301 	orr.w	r3, r3, #1
 801c9fa:	81a3      	strh	r3, [r4, #12]
 801c9fc:	89a0      	ldrh	r0, [r4, #12]
 801c9fe:	4305      	orrs	r5, r0
 801ca00:	81a5      	strh	r5, [r4, #12]
 801ca02:	e7cd      	b.n	801c9a0 <__smakebuf_r+0x18>
 801ca04:	0801c795 	.word	0x0801c795

0801ca08 <memmove>:
 801ca08:	4288      	cmp	r0, r1
 801ca0a:	b510      	push	{r4, lr}
 801ca0c:	eb01 0402 	add.w	r4, r1, r2
 801ca10:	d902      	bls.n	801ca18 <memmove+0x10>
 801ca12:	4284      	cmp	r4, r0
 801ca14:	4623      	mov	r3, r4
 801ca16:	d807      	bhi.n	801ca28 <memmove+0x20>
 801ca18:	1e43      	subs	r3, r0, #1
 801ca1a:	42a1      	cmp	r1, r4
 801ca1c:	d008      	beq.n	801ca30 <memmove+0x28>
 801ca1e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801ca22:	f803 2f01 	strb.w	r2, [r3, #1]!
 801ca26:	e7f8      	b.n	801ca1a <memmove+0x12>
 801ca28:	4402      	add	r2, r0
 801ca2a:	4601      	mov	r1, r0
 801ca2c:	428a      	cmp	r2, r1
 801ca2e:	d100      	bne.n	801ca32 <memmove+0x2a>
 801ca30:	bd10      	pop	{r4, pc}
 801ca32:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801ca36:	f802 4d01 	strb.w	r4, [r2, #-1]!
 801ca3a:	e7f7      	b.n	801ca2c <memmove+0x24>

0801ca3c <__malloc_lock>:
 801ca3c:	4801      	ldr	r0, [pc, #4]	; (801ca44 <__malloc_lock+0x8>)
 801ca3e:	f7ff bf7b 	b.w	801c938 <__retarget_lock_acquire_recursive>
 801ca42:	bf00      	nop
 801ca44:	20013a44 	.word	0x20013a44

0801ca48 <__malloc_unlock>:
 801ca48:	4801      	ldr	r0, [pc, #4]	; (801ca50 <__malloc_unlock+0x8>)
 801ca4a:	f7ff bf77 	b.w	801c93c <__retarget_lock_release_recursive>
 801ca4e:	bf00      	nop
 801ca50:	20013a44 	.word	0x20013a44

0801ca54 <_realloc_r>:
 801ca54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ca56:	4607      	mov	r7, r0
 801ca58:	4614      	mov	r4, r2
 801ca5a:	460e      	mov	r6, r1
 801ca5c:	b921      	cbnz	r1, 801ca68 <_realloc_r+0x14>
 801ca5e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801ca62:	4611      	mov	r1, r2
 801ca64:	f7ff b8be 	b.w	801bbe4 <_malloc_r>
 801ca68:	b922      	cbnz	r2, 801ca74 <_realloc_r+0x20>
 801ca6a:	f7ff f86b 	bl	801bb44 <_free_r>
 801ca6e:	4625      	mov	r5, r4
 801ca70:	4628      	mov	r0, r5
 801ca72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ca74:	f000 fa0a 	bl	801ce8c <_malloc_usable_size_r>
 801ca78:	42a0      	cmp	r0, r4
 801ca7a:	d20f      	bcs.n	801ca9c <_realloc_r+0x48>
 801ca7c:	4621      	mov	r1, r4
 801ca7e:	4638      	mov	r0, r7
 801ca80:	f7ff f8b0 	bl	801bbe4 <_malloc_r>
 801ca84:	4605      	mov	r5, r0
 801ca86:	2800      	cmp	r0, #0
 801ca88:	d0f2      	beq.n	801ca70 <_realloc_r+0x1c>
 801ca8a:	4631      	mov	r1, r6
 801ca8c:	4622      	mov	r2, r4
 801ca8e:	f7ff f843 	bl	801bb18 <memcpy>
 801ca92:	4631      	mov	r1, r6
 801ca94:	4638      	mov	r0, r7
 801ca96:	f7ff f855 	bl	801bb44 <_free_r>
 801ca9a:	e7e9      	b.n	801ca70 <_realloc_r+0x1c>
 801ca9c:	4635      	mov	r5, r6
 801ca9e:	e7e7      	b.n	801ca70 <_realloc_r+0x1c>

0801caa0 <__ssputs_r>:
 801caa0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801caa4:	688e      	ldr	r6, [r1, #8]
 801caa6:	429e      	cmp	r6, r3
 801caa8:	4682      	mov	sl, r0
 801caaa:	460c      	mov	r4, r1
 801caac:	4690      	mov	r8, r2
 801caae:	461f      	mov	r7, r3
 801cab0:	d838      	bhi.n	801cb24 <__ssputs_r+0x84>
 801cab2:	898a      	ldrh	r2, [r1, #12]
 801cab4:	f412 6f90 	tst.w	r2, #1152	; 0x480
 801cab8:	d032      	beq.n	801cb20 <__ssputs_r+0x80>
 801caba:	6825      	ldr	r5, [r4, #0]
 801cabc:	6909      	ldr	r1, [r1, #16]
 801cabe:	eba5 0901 	sub.w	r9, r5, r1
 801cac2:	6965      	ldr	r5, [r4, #20]
 801cac4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801cac8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 801cacc:	3301      	adds	r3, #1
 801cace:	444b      	add	r3, r9
 801cad0:	106d      	asrs	r5, r5, #1
 801cad2:	429d      	cmp	r5, r3
 801cad4:	bf38      	it	cc
 801cad6:	461d      	movcc	r5, r3
 801cad8:	0553      	lsls	r3, r2, #21
 801cada:	d531      	bpl.n	801cb40 <__ssputs_r+0xa0>
 801cadc:	4629      	mov	r1, r5
 801cade:	f7ff f881 	bl	801bbe4 <_malloc_r>
 801cae2:	4606      	mov	r6, r0
 801cae4:	b950      	cbnz	r0, 801cafc <__ssputs_r+0x5c>
 801cae6:	230c      	movs	r3, #12
 801cae8:	f8ca 3000 	str.w	r3, [sl]
 801caec:	89a3      	ldrh	r3, [r4, #12]
 801caee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801caf2:	81a3      	strh	r3, [r4, #12]
 801caf4:	f04f 30ff 	mov.w	r0, #4294967295
 801caf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cafc:	6921      	ldr	r1, [r4, #16]
 801cafe:	464a      	mov	r2, r9
 801cb00:	f7ff f80a 	bl	801bb18 <memcpy>
 801cb04:	89a3      	ldrh	r3, [r4, #12]
 801cb06:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 801cb0a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801cb0e:	81a3      	strh	r3, [r4, #12]
 801cb10:	6126      	str	r6, [r4, #16]
 801cb12:	6165      	str	r5, [r4, #20]
 801cb14:	444e      	add	r6, r9
 801cb16:	eba5 0509 	sub.w	r5, r5, r9
 801cb1a:	6026      	str	r6, [r4, #0]
 801cb1c:	60a5      	str	r5, [r4, #8]
 801cb1e:	463e      	mov	r6, r7
 801cb20:	42be      	cmp	r6, r7
 801cb22:	d900      	bls.n	801cb26 <__ssputs_r+0x86>
 801cb24:	463e      	mov	r6, r7
 801cb26:	4632      	mov	r2, r6
 801cb28:	6820      	ldr	r0, [r4, #0]
 801cb2a:	4641      	mov	r1, r8
 801cb2c:	f7ff ff6c 	bl	801ca08 <memmove>
 801cb30:	68a3      	ldr	r3, [r4, #8]
 801cb32:	6822      	ldr	r2, [r4, #0]
 801cb34:	1b9b      	subs	r3, r3, r6
 801cb36:	4432      	add	r2, r6
 801cb38:	60a3      	str	r3, [r4, #8]
 801cb3a:	6022      	str	r2, [r4, #0]
 801cb3c:	2000      	movs	r0, #0
 801cb3e:	e7db      	b.n	801caf8 <__ssputs_r+0x58>
 801cb40:	462a      	mov	r2, r5
 801cb42:	f7ff ff87 	bl	801ca54 <_realloc_r>
 801cb46:	4606      	mov	r6, r0
 801cb48:	2800      	cmp	r0, #0
 801cb4a:	d1e1      	bne.n	801cb10 <__ssputs_r+0x70>
 801cb4c:	6921      	ldr	r1, [r4, #16]
 801cb4e:	4650      	mov	r0, sl
 801cb50:	f7fe fff8 	bl	801bb44 <_free_r>
 801cb54:	e7c7      	b.n	801cae6 <__ssputs_r+0x46>
	...

0801cb58 <_svfiprintf_r>:
 801cb58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb5c:	4698      	mov	r8, r3
 801cb5e:	898b      	ldrh	r3, [r1, #12]
 801cb60:	061b      	lsls	r3, r3, #24
 801cb62:	b09d      	sub	sp, #116	; 0x74
 801cb64:	4607      	mov	r7, r0
 801cb66:	460d      	mov	r5, r1
 801cb68:	4614      	mov	r4, r2
 801cb6a:	d50e      	bpl.n	801cb8a <_svfiprintf_r+0x32>
 801cb6c:	690b      	ldr	r3, [r1, #16]
 801cb6e:	b963      	cbnz	r3, 801cb8a <_svfiprintf_r+0x32>
 801cb70:	2140      	movs	r1, #64	; 0x40
 801cb72:	f7ff f837 	bl	801bbe4 <_malloc_r>
 801cb76:	6028      	str	r0, [r5, #0]
 801cb78:	6128      	str	r0, [r5, #16]
 801cb7a:	b920      	cbnz	r0, 801cb86 <_svfiprintf_r+0x2e>
 801cb7c:	230c      	movs	r3, #12
 801cb7e:	603b      	str	r3, [r7, #0]
 801cb80:	f04f 30ff 	mov.w	r0, #4294967295
 801cb84:	e0d1      	b.n	801cd2a <_svfiprintf_r+0x1d2>
 801cb86:	2340      	movs	r3, #64	; 0x40
 801cb88:	616b      	str	r3, [r5, #20]
 801cb8a:	2300      	movs	r3, #0
 801cb8c:	9309      	str	r3, [sp, #36]	; 0x24
 801cb8e:	2320      	movs	r3, #32
 801cb90:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801cb94:	f8cd 800c 	str.w	r8, [sp, #12]
 801cb98:	2330      	movs	r3, #48	; 0x30
 801cb9a:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 801cd44 <_svfiprintf_r+0x1ec>
 801cb9e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801cba2:	f04f 0901 	mov.w	r9, #1
 801cba6:	4623      	mov	r3, r4
 801cba8:	469a      	mov	sl, r3
 801cbaa:	f813 2b01 	ldrb.w	r2, [r3], #1
 801cbae:	b10a      	cbz	r2, 801cbb4 <_svfiprintf_r+0x5c>
 801cbb0:	2a25      	cmp	r2, #37	; 0x25
 801cbb2:	d1f9      	bne.n	801cba8 <_svfiprintf_r+0x50>
 801cbb4:	ebba 0b04 	subs.w	fp, sl, r4
 801cbb8:	d00b      	beq.n	801cbd2 <_svfiprintf_r+0x7a>
 801cbba:	465b      	mov	r3, fp
 801cbbc:	4622      	mov	r2, r4
 801cbbe:	4629      	mov	r1, r5
 801cbc0:	4638      	mov	r0, r7
 801cbc2:	f7ff ff6d 	bl	801caa0 <__ssputs_r>
 801cbc6:	3001      	adds	r0, #1
 801cbc8:	f000 80aa 	beq.w	801cd20 <_svfiprintf_r+0x1c8>
 801cbcc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801cbce:	445a      	add	r2, fp
 801cbd0:	9209      	str	r2, [sp, #36]	; 0x24
 801cbd2:	f89a 3000 	ldrb.w	r3, [sl]
 801cbd6:	2b00      	cmp	r3, #0
 801cbd8:	f000 80a2 	beq.w	801cd20 <_svfiprintf_r+0x1c8>
 801cbdc:	2300      	movs	r3, #0
 801cbde:	f04f 32ff 	mov.w	r2, #4294967295
 801cbe2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801cbe6:	f10a 0a01 	add.w	sl, sl, #1
 801cbea:	9304      	str	r3, [sp, #16]
 801cbec:	9307      	str	r3, [sp, #28]
 801cbee:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801cbf2:	931a      	str	r3, [sp, #104]	; 0x68
 801cbf4:	4654      	mov	r4, sl
 801cbf6:	2205      	movs	r2, #5
 801cbf8:	f814 1b01 	ldrb.w	r1, [r4], #1
 801cbfc:	4851      	ldr	r0, [pc, #324]	; (801cd44 <_svfiprintf_r+0x1ec>)
 801cbfe:	f7e3 faff 	bl	8000200 <memchr>
 801cc02:	9a04      	ldr	r2, [sp, #16]
 801cc04:	b9d8      	cbnz	r0, 801cc3e <_svfiprintf_r+0xe6>
 801cc06:	06d0      	lsls	r0, r2, #27
 801cc08:	bf44      	itt	mi
 801cc0a:	2320      	movmi	r3, #32
 801cc0c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801cc10:	0711      	lsls	r1, r2, #28
 801cc12:	bf44      	itt	mi
 801cc14:	232b      	movmi	r3, #43	; 0x2b
 801cc16:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801cc1a:	f89a 3000 	ldrb.w	r3, [sl]
 801cc1e:	2b2a      	cmp	r3, #42	; 0x2a
 801cc20:	d015      	beq.n	801cc4e <_svfiprintf_r+0xf6>
 801cc22:	9a07      	ldr	r2, [sp, #28]
 801cc24:	4654      	mov	r4, sl
 801cc26:	2000      	movs	r0, #0
 801cc28:	f04f 0c0a 	mov.w	ip, #10
 801cc2c:	4621      	mov	r1, r4
 801cc2e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801cc32:	3b30      	subs	r3, #48	; 0x30
 801cc34:	2b09      	cmp	r3, #9
 801cc36:	d94e      	bls.n	801ccd6 <_svfiprintf_r+0x17e>
 801cc38:	b1b0      	cbz	r0, 801cc68 <_svfiprintf_r+0x110>
 801cc3a:	9207      	str	r2, [sp, #28]
 801cc3c:	e014      	b.n	801cc68 <_svfiprintf_r+0x110>
 801cc3e:	eba0 0308 	sub.w	r3, r0, r8
 801cc42:	fa09 f303 	lsl.w	r3, r9, r3
 801cc46:	4313      	orrs	r3, r2
 801cc48:	9304      	str	r3, [sp, #16]
 801cc4a:	46a2      	mov	sl, r4
 801cc4c:	e7d2      	b.n	801cbf4 <_svfiprintf_r+0x9c>
 801cc4e:	9b03      	ldr	r3, [sp, #12]
 801cc50:	1d19      	adds	r1, r3, #4
 801cc52:	681b      	ldr	r3, [r3, #0]
 801cc54:	9103      	str	r1, [sp, #12]
 801cc56:	2b00      	cmp	r3, #0
 801cc58:	bfbb      	ittet	lt
 801cc5a:	425b      	neglt	r3, r3
 801cc5c:	f042 0202 	orrlt.w	r2, r2, #2
 801cc60:	9307      	strge	r3, [sp, #28]
 801cc62:	9307      	strlt	r3, [sp, #28]
 801cc64:	bfb8      	it	lt
 801cc66:	9204      	strlt	r2, [sp, #16]
 801cc68:	7823      	ldrb	r3, [r4, #0]
 801cc6a:	2b2e      	cmp	r3, #46	; 0x2e
 801cc6c:	d10c      	bne.n	801cc88 <_svfiprintf_r+0x130>
 801cc6e:	7863      	ldrb	r3, [r4, #1]
 801cc70:	2b2a      	cmp	r3, #42	; 0x2a
 801cc72:	d135      	bne.n	801cce0 <_svfiprintf_r+0x188>
 801cc74:	9b03      	ldr	r3, [sp, #12]
 801cc76:	1d1a      	adds	r2, r3, #4
 801cc78:	681b      	ldr	r3, [r3, #0]
 801cc7a:	9203      	str	r2, [sp, #12]
 801cc7c:	2b00      	cmp	r3, #0
 801cc7e:	bfb8      	it	lt
 801cc80:	f04f 33ff 	movlt.w	r3, #4294967295
 801cc84:	3402      	adds	r4, #2
 801cc86:	9305      	str	r3, [sp, #20]
 801cc88:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 801cd54 <_svfiprintf_r+0x1fc>
 801cc8c:	7821      	ldrb	r1, [r4, #0]
 801cc8e:	2203      	movs	r2, #3
 801cc90:	4650      	mov	r0, sl
 801cc92:	f7e3 fab5 	bl	8000200 <memchr>
 801cc96:	b140      	cbz	r0, 801ccaa <_svfiprintf_r+0x152>
 801cc98:	2340      	movs	r3, #64	; 0x40
 801cc9a:	eba0 000a 	sub.w	r0, r0, sl
 801cc9e:	fa03 f000 	lsl.w	r0, r3, r0
 801cca2:	9b04      	ldr	r3, [sp, #16]
 801cca4:	4303      	orrs	r3, r0
 801cca6:	3401      	adds	r4, #1
 801cca8:	9304      	str	r3, [sp, #16]
 801ccaa:	f814 1b01 	ldrb.w	r1, [r4], #1
 801ccae:	4826      	ldr	r0, [pc, #152]	; (801cd48 <_svfiprintf_r+0x1f0>)
 801ccb0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801ccb4:	2206      	movs	r2, #6
 801ccb6:	f7e3 faa3 	bl	8000200 <memchr>
 801ccba:	2800      	cmp	r0, #0
 801ccbc:	d038      	beq.n	801cd30 <_svfiprintf_r+0x1d8>
 801ccbe:	4b23      	ldr	r3, [pc, #140]	; (801cd4c <_svfiprintf_r+0x1f4>)
 801ccc0:	bb1b      	cbnz	r3, 801cd0a <_svfiprintf_r+0x1b2>
 801ccc2:	9b03      	ldr	r3, [sp, #12]
 801ccc4:	3307      	adds	r3, #7
 801ccc6:	f023 0307 	bic.w	r3, r3, #7
 801ccca:	3308      	adds	r3, #8
 801cccc:	9303      	str	r3, [sp, #12]
 801ccce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ccd0:	4433      	add	r3, r6
 801ccd2:	9309      	str	r3, [sp, #36]	; 0x24
 801ccd4:	e767      	b.n	801cba6 <_svfiprintf_r+0x4e>
 801ccd6:	fb0c 3202 	mla	r2, ip, r2, r3
 801ccda:	460c      	mov	r4, r1
 801ccdc:	2001      	movs	r0, #1
 801ccde:	e7a5      	b.n	801cc2c <_svfiprintf_r+0xd4>
 801cce0:	2300      	movs	r3, #0
 801cce2:	3401      	adds	r4, #1
 801cce4:	9305      	str	r3, [sp, #20]
 801cce6:	4619      	mov	r1, r3
 801cce8:	f04f 0c0a 	mov.w	ip, #10
 801ccec:	4620      	mov	r0, r4
 801ccee:	f810 2b01 	ldrb.w	r2, [r0], #1
 801ccf2:	3a30      	subs	r2, #48	; 0x30
 801ccf4:	2a09      	cmp	r2, #9
 801ccf6:	d903      	bls.n	801cd00 <_svfiprintf_r+0x1a8>
 801ccf8:	2b00      	cmp	r3, #0
 801ccfa:	d0c5      	beq.n	801cc88 <_svfiprintf_r+0x130>
 801ccfc:	9105      	str	r1, [sp, #20]
 801ccfe:	e7c3      	b.n	801cc88 <_svfiprintf_r+0x130>
 801cd00:	fb0c 2101 	mla	r1, ip, r1, r2
 801cd04:	4604      	mov	r4, r0
 801cd06:	2301      	movs	r3, #1
 801cd08:	e7f0      	b.n	801ccec <_svfiprintf_r+0x194>
 801cd0a:	ab03      	add	r3, sp, #12
 801cd0c:	9300      	str	r3, [sp, #0]
 801cd0e:	462a      	mov	r2, r5
 801cd10:	4b0f      	ldr	r3, [pc, #60]	; (801cd50 <_svfiprintf_r+0x1f8>)
 801cd12:	a904      	add	r1, sp, #16
 801cd14:	4638      	mov	r0, r7
 801cd16:	f3af 8000 	nop.w
 801cd1a:	1c42      	adds	r2, r0, #1
 801cd1c:	4606      	mov	r6, r0
 801cd1e:	d1d6      	bne.n	801ccce <_svfiprintf_r+0x176>
 801cd20:	89ab      	ldrh	r3, [r5, #12]
 801cd22:	065b      	lsls	r3, r3, #25
 801cd24:	f53f af2c 	bmi.w	801cb80 <_svfiprintf_r+0x28>
 801cd28:	9809      	ldr	r0, [sp, #36]	; 0x24
 801cd2a:	b01d      	add	sp, #116	; 0x74
 801cd2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd30:	ab03      	add	r3, sp, #12
 801cd32:	9300      	str	r3, [sp, #0]
 801cd34:	462a      	mov	r2, r5
 801cd36:	4b06      	ldr	r3, [pc, #24]	; (801cd50 <_svfiprintf_r+0x1f8>)
 801cd38:	a904      	add	r1, sp, #16
 801cd3a:	4638      	mov	r0, r7
 801cd3c:	f7ff f974 	bl	801c028 <_printf_i>
 801cd40:	e7eb      	b.n	801cd1a <_svfiprintf_r+0x1c2>
 801cd42:	bf00      	nop
 801cd44:	08020d5c 	.word	0x08020d5c
 801cd48:	08020d66 	.word	0x08020d66
 801cd4c:	00000000 	.word	0x00000000
 801cd50:	0801caa1 	.word	0x0801caa1
 801cd54:	08020d62 	.word	0x08020d62

0801cd58 <__sread>:
 801cd58:	b510      	push	{r4, lr}
 801cd5a:	460c      	mov	r4, r1
 801cd5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cd60:	f000 f89c 	bl	801ce9c <_read_r>
 801cd64:	2800      	cmp	r0, #0
 801cd66:	bfab      	itete	ge
 801cd68:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801cd6a:	89a3      	ldrhlt	r3, [r4, #12]
 801cd6c:	181b      	addge	r3, r3, r0
 801cd6e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801cd72:	bfac      	ite	ge
 801cd74:	6563      	strge	r3, [r4, #84]	; 0x54
 801cd76:	81a3      	strhlt	r3, [r4, #12]
 801cd78:	bd10      	pop	{r4, pc}

0801cd7a <__swrite>:
 801cd7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801cd7e:	461f      	mov	r7, r3
 801cd80:	898b      	ldrh	r3, [r1, #12]
 801cd82:	05db      	lsls	r3, r3, #23
 801cd84:	4605      	mov	r5, r0
 801cd86:	460c      	mov	r4, r1
 801cd88:	4616      	mov	r6, r2
 801cd8a:	d505      	bpl.n	801cd98 <__swrite+0x1e>
 801cd8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cd90:	2302      	movs	r3, #2
 801cd92:	2200      	movs	r2, #0
 801cd94:	f000 f868 	bl	801ce68 <_lseek_r>
 801cd98:	89a3      	ldrh	r3, [r4, #12]
 801cd9a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801cd9e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801cda2:	81a3      	strh	r3, [r4, #12]
 801cda4:	4632      	mov	r2, r6
 801cda6:	463b      	mov	r3, r7
 801cda8:	4628      	mov	r0, r5
 801cdaa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801cdae:	f000 b817 	b.w	801cde0 <_write_r>

0801cdb2 <__sseek>:
 801cdb2:	b510      	push	{r4, lr}
 801cdb4:	460c      	mov	r4, r1
 801cdb6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cdba:	f000 f855 	bl	801ce68 <_lseek_r>
 801cdbe:	1c43      	adds	r3, r0, #1
 801cdc0:	89a3      	ldrh	r3, [r4, #12]
 801cdc2:	bf15      	itete	ne
 801cdc4:	6560      	strne	r0, [r4, #84]	; 0x54
 801cdc6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801cdca:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801cdce:	81a3      	strheq	r3, [r4, #12]
 801cdd0:	bf18      	it	ne
 801cdd2:	81a3      	strhne	r3, [r4, #12]
 801cdd4:	bd10      	pop	{r4, pc}

0801cdd6 <__sclose>:
 801cdd6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cdda:	f000 b813 	b.w	801ce04 <_close_r>
	...

0801cde0 <_write_r>:
 801cde0:	b538      	push	{r3, r4, r5, lr}
 801cde2:	4d07      	ldr	r5, [pc, #28]	; (801ce00 <_write_r+0x20>)
 801cde4:	4604      	mov	r4, r0
 801cde6:	4608      	mov	r0, r1
 801cde8:	4611      	mov	r1, r2
 801cdea:	2200      	movs	r2, #0
 801cdec:	602a      	str	r2, [r5, #0]
 801cdee:	461a      	mov	r2, r3
 801cdf0:	f7e5 f8a7 	bl	8001f42 <_write>
 801cdf4:	1c43      	adds	r3, r0, #1
 801cdf6:	d102      	bne.n	801cdfe <_write_r+0x1e>
 801cdf8:	682b      	ldr	r3, [r5, #0]
 801cdfa:	b103      	cbz	r3, 801cdfe <_write_r+0x1e>
 801cdfc:	6023      	str	r3, [r4, #0]
 801cdfe:	bd38      	pop	{r3, r4, r5, pc}
 801ce00:	20013a4c 	.word	0x20013a4c

0801ce04 <_close_r>:
 801ce04:	b538      	push	{r3, r4, r5, lr}
 801ce06:	4d06      	ldr	r5, [pc, #24]	; (801ce20 <_close_r+0x1c>)
 801ce08:	2300      	movs	r3, #0
 801ce0a:	4604      	mov	r4, r0
 801ce0c:	4608      	mov	r0, r1
 801ce0e:	602b      	str	r3, [r5, #0]
 801ce10:	f7e5 f8a4 	bl	8001f5c <_close>
 801ce14:	1c43      	adds	r3, r0, #1
 801ce16:	d102      	bne.n	801ce1e <_close_r+0x1a>
 801ce18:	682b      	ldr	r3, [r5, #0]
 801ce1a:	b103      	cbz	r3, 801ce1e <_close_r+0x1a>
 801ce1c:	6023      	str	r3, [r4, #0]
 801ce1e:	bd38      	pop	{r3, r4, r5, pc}
 801ce20:	20013a4c 	.word	0x20013a4c

0801ce24 <_fstat_r>:
 801ce24:	b538      	push	{r3, r4, r5, lr}
 801ce26:	4d07      	ldr	r5, [pc, #28]	; (801ce44 <_fstat_r+0x20>)
 801ce28:	2300      	movs	r3, #0
 801ce2a:	4604      	mov	r4, r0
 801ce2c:	4608      	mov	r0, r1
 801ce2e:	4611      	mov	r1, r2
 801ce30:	602b      	str	r3, [r5, #0]
 801ce32:	f7e5 f896 	bl	8001f62 <_fstat>
 801ce36:	1c43      	adds	r3, r0, #1
 801ce38:	d102      	bne.n	801ce40 <_fstat_r+0x1c>
 801ce3a:	682b      	ldr	r3, [r5, #0]
 801ce3c:	b103      	cbz	r3, 801ce40 <_fstat_r+0x1c>
 801ce3e:	6023      	str	r3, [r4, #0]
 801ce40:	bd38      	pop	{r3, r4, r5, pc}
 801ce42:	bf00      	nop
 801ce44:	20013a4c 	.word	0x20013a4c

0801ce48 <_isatty_r>:
 801ce48:	b538      	push	{r3, r4, r5, lr}
 801ce4a:	4d06      	ldr	r5, [pc, #24]	; (801ce64 <_isatty_r+0x1c>)
 801ce4c:	2300      	movs	r3, #0
 801ce4e:	4604      	mov	r4, r0
 801ce50:	4608      	mov	r0, r1
 801ce52:	602b      	str	r3, [r5, #0]
 801ce54:	f7e5 f88a 	bl	8001f6c <_isatty>
 801ce58:	1c43      	adds	r3, r0, #1
 801ce5a:	d102      	bne.n	801ce62 <_isatty_r+0x1a>
 801ce5c:	682b      	ldr	r3, [r5, #0]
 801ce5e:	b103      	cbz	r3, 801ce62 <_isatty_r+0x1a>
 801ce60:	6023      	str	r3, [r4, #0]
 801ce62:	bd38      	pop	{r3, r4, r5, pc}
 801ce64:	20013a4c 	.word	0x20013a4c

0801ce68 <_lseek_r>:
 801ce68:	b538      	push	{r3, r4, r5, lr}
 801ce6a:	4d07      	ldr	r5, [pc, #28]	; (801ce88 <_lseek_r+0x20>)
 801ce6c:	4604      	mov	r4, r0
 801ce6e:	4608      	mov	r0, r1
 801ce70:	4611      	mov	r1, r2
 801ce72:	2200      	movs	r2, #0
 801ce74:	602a      	str	r2, [r5, #0]
 801ce76:	461a      	mov	r2, r3
 801ce78:	f7e5 f87a 	bl	8001f70 <_lseek>
 801ce7c:	1c43      	adds	r3, r0, #1
 801ce7e:	d102      	bne.n	801ce86 <_lseek_r+0x1e>
 801ce80:	682b      	ldr	r3, [r5, #0]
 801ce82:	b103      	cbz	r3, 801ce86 <_lseek_r+0x1e>
 801ce84:	6023      	str	r3, [r4, #0]
 801ce86:	bd38      	pop	{r3, r4, r5, pc}
 801ce88:	20013a4c 	.word	0x20013a4c

0801ce8c <_malloc_usable_size_r>:
 801ce8c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801ce90:	1f18      	subs	r0, r3, #4
 801ce92:	2b00      	cmp	r3, #0
 801ce94:	bfbc      	itt	lt
 801ce96:	580b      	ldrlt	r3, [r1, r0]
 801ce98:	18c0      	addlt	r0, r0, r3
 801ce9a:	4770      	bx	lr

0801ce9c <_read_r>:
 801ce9c:	b538      	push	{r3, r4, r5, lr}
 801ce9e:	4d07      	ldr	r5, [pc, #28]	; (801cebc <_read_r+0x20>)
 801cea0:	4604      	mov	r4, r0
 801cea2:	4608      	mov	r0, r1
 801cea4:	4611      	mov	r1, r2
 801cea6:	2200      	movs	r2, #0
 801cea8:	602a      	str	r2, [r5, #0]
 801ceaa:	461a      	mov	r2, r3
 801ceac:	f7e5 f83c 	bl	8001f28 <_read>
 801ceb0:	1c43      	adds	r3, r0, #1
 801ceb2:	d102      	bne.n	801ceba <_read_r+0x1e>
 801ceb4:	682b      	ldr	r3, [r5, #0]
 801ceb6:	b103      	cbz	r3, 801ceba <_read_r+0x1e>
 801ceb8:	6023      	str	r3, [r4, #0]
 801ceba:	bd38      	pop	{r3, r4, r5, pc}
 801cebc:	20013a4c 	.word	0x20013a4c

0801cec0 <_init>:
 801cec0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cec2:	bf00      	nop
 801cec4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801cec6:	bc08      	pop	{r3}
 801cec8:	469e      	mov	lr, r3
 801ceca:	4770      	bx	lr

0801cecc <_fini>:
 801cecc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cece:	bf00      	nop
 801ced0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801ced2:	bc08      	pop	{r3}
 801ced4:	469e      	mov	lr, r3
 801ced6:	4770      	bx	lr
