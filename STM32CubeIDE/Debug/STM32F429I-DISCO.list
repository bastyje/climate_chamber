
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001ce28  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003f3c  0801cfd8  0801cfd8  0002cfd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00001962  08020f14  08020f14  00030f14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000038  08022878  08022878  00032878  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000013c  080228b0  080228b0  000328b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00037a68  080229ec  080229ec  000329ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0805a454  0805a454  00070164  2**0
                  CONTENTS
  8 .ARM          00000008  0805a454  0805a454  0006a454  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0805a45c  0805a45c  00070164  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0805a45c  0805a45c  0006a45c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  0805a470  0805a470  0006a470  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000164  20000000  0805a478  00070000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013924  20000164  0805a5dc  00070164  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20013a88  0805a5dc  00073a88  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00070164  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  00080000  2**2
                  ALLOC
 17 .debug_line   0005f731  00000000  00000000  00070194  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   001041d8  00000000  00000000  000cf8c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0001c3ad  00000000  00000000  001d3a9d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00003528  00000000  00000000  001efe50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0010d2c6  00000000  00000000  001f3378  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00005b78  00000000  00000000  00300640  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    0003313a  00000000  00000000  003061b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00033f2f  00000000  00000000  003392f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000d2  00000000  00000000  0036d221  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000967c  00000000  00000000  0036d2f4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000164 	.word	0x20000164
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801cfc0 	.word	0x0801cfc0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000168 	.word	0x20000168
 80001ec:	0801cfc0 	.word	0x0801cfc0

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b96e 	b.w	8000594 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468c      	mov	ip, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	f040 8083 	bne.w	80003e6 <__udivmoddi4+0x116>
 80002e0:	428a      	cmp	r2, r1
 80002e2:	4617      	mov	r7, r2
 80002e4:	d947      	bls.n	8000376 <__udivmoddi4+0xa6>
 80002e6:	fab2 f282 	clz	r2, r2
 80002ea:	b142      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ec:	f1c2 0020 	rsb	r0, r2, #32
 80002f0:	fa24 f000 	lsr.w	r0, r4, r0
 80002f4:	4091      	lsls	r1, r2
 80002f6:	4097      	lsls	r7, r2
 80002f8:	ea40 0c01 	orr.w	ip, r0, r1
 80002fc:	4094      	lsls	r4, r2
 80002fe:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000302:	0c23      	lsrs	r3, r4, #16
 8000304:	fbbc f6f8 	udiv	r6, ip, r8
 8000308:	fa1f fe87 	uxth.w	lr, r7
 800030c:	fb08 c116 	mls	r1, r8, r6, ip
 8000310:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000314:	fb06 f10e 	mul.w	r1, r6, lr
 8000318:	4299      	cmp	r1, r3
 800031a:	d909      	bls.n	8000330 <__udivmoddi4+0x60>
 800031c:	18fb      	adds	r3, r7, r3
 800031e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000322:	f080 8119 	bcs.w	8000558 <__udivmoddi4+0x288>
 8000326:	4299      	cmp	r1, r3
 8000328:	f240 8116 	bls.w	8000558 <__udivmoddi4+0x288>
 800032c:	3e02      	subs	r6, #2
 800032e:	443b      	add	r3, r7
 8000330:	1a5b      	subs	r3, r3, r1
 8000332:	b2a4      	uxth	r4, r4
 8000334:	fbb3 f0f8 	udiv	r0, r3, r8
 8000338:	fb08 3310 	mls	r3, r8, r0, r3
 800033c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000340:	fb00 fe0e 	mul.w	lr, r0, lr
 8000344:	45a6      	cmp	lr, r4
 8000346:	d909      	bls.n	800035c <__udivmoddi4+0x8c>
 8000348:	193c      	adds	r4, r7, r4
 800034a:	f100 33ff 	add.w	r3, r0, #4294967295
 800034e:	f080 8105 	bcs.w	800055c <__udivmoddi4+0x28c>
 8000352:	45a6      	cmp	lr, r4
 8000354:	f240 8102 	bls.w	800055c <__udivmoddi4+0x28c>
 8000358:	3802      	subs	r0, #2
 800035a:	443c      	add	r4, r7
 800035c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000360:	eba4 040e 	sub.w	r4, r4, lr
 8000364:	2600      	movs	r6, #0
 8000366:	b11d      	cbz	r5, 8000370 <__udivmoddi4+0xa0>
 8000368:	40d4      	lsrs	r4, r2
 800036a:	2300      	movs	r3, #0
 800036c:	e9c5 4300 	strd	r4, r3, [r5]
 8000370:	4631      	mov	r1, r6
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	b902      	cbnz	r2, 800037a <__udivmoddi4+0xaa>
 8000378:	deff      	udf	#255	; 0xff
 800037a:	fab2 f282 	clz	r2, r2
 800037e:	2a00      	cmp	r2, #0
 8000380:	d150      	bne.n	8000424 <__udivmoddi4+0x154>
 8000382:	1bcb      	subs	r3, r1, r7
 8000384:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000388:	fa1f f887 	uxth.w	r8, r7
 800038c:	2601      	movs	r6, #1
 800038e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000392:	0c21      	lsrs	r1, r4, #16
 8000394:	fb0e 331c 	mls	r3, lr, ip, r3
 8000398:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800039c:	fb08 f30c 	mul.w	r3, r8, ip
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d907      	bls.n	80003b4 <__udivmoddi4+0xe4>
 80003a4:	1879      	adds	r1, r7, r1
 80003a6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003aa:	d202      	bcs.n	80003b2 <__udivmoddi4+0xe2>
 80003ac:	428b      	cmp	r3, r1
 80003ae:	f200 80e9 	bhi.w	8000584 <__udivmoddi4+0x2b4>
 80003b2:	4684      	mov	ip, r0
 80003b4:	1ac9      	subs	r1, r1, r3
 80003b6:	b2a3      	uxth	r3, r4
 80003b8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003bc:	fb0e 1110 	mls	r1, lr, r0, r1
 80003c0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003c4:	fb08 f800 	mul.w	r8, r8, r0
 80003c8:	45a0      	cmp	r8, r4
 80003ca:	d907      	bls.n	80003dc <__udivmoddi4+0x10c>
 80003cc:	193c      	adds	r4, r7, r4
 80003ce:	f100 33ff 	add.w	r3, r0, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x10a>
 80003d4:	45a0      	cmp	r8, r4
 80003d6:	f200 80d9 	bhi.w	800058c <__udivmoddi4+0x2bc>
 80003da:	4618      	mov	r0, r3
 80003dc:	eba4 0408 	sub.w	r4, r4, r8
 80003e0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003e4:	e7bf      	b.n	8000366 <__udivmoddi4+0x96>
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x12e>
 80003ea:	2d00      	cmp	r5, #0
 80003ec:	f000 80b1 	beq.w	8000552 <__udivmoddi4+0x282>
 80003f0:	2600      	movs	r6, #0
 80003f2:	e9c5 0100 	strd	r0, r1, [r5]
 80003f6:	4630      	mov	r0, r6
 80003f8:	4631      	mov	r1, r6
 80003fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003fe:	fab3 f683 	clz	r6, r3
 8000402:	2e00      	cmp	r6, #0
 8000404:	d14a      	bne.n	800049c <__udivmoddi4+0x1cc>
 8000406:	428b      	cmp	r3, r1
 8000408:	d302      	bcc.n	8000410 <__udivmoddi4+0x140>
 800040a:	4282      	cmp	r2, r0
 800040c:	f200 80b8 	bhi.w	8000580 <__udivmoddi4+0x2b0>
 8000410:	1a84      	subs	r4, r0, r2
 8000412:	eb61 0103 	sbc.w	r1, r1, r3
 8000416:	2001      	movs	r0, #1
 8000418:	468c      	mov	ip, r1
 800041a:	2d00      	cmp	r5, #0
 800041c:	d0a8      	beq.n	8000370 <__udivmoddi4+0xa0>
 800041e:	e9c5 4c00 	strd	r4, ip, [r5]
 8000422:	e7a5      	b.n	8000370 <__udivmoddi4+0xa0>
 8000424:	f1c2 0320 	rsb	r3, r2, #32
 8000428:	fa20 f603 	lsr.w	r6, r0, r3
 800042c:	4097      	lsls	r7, r2
 800042e:	fa01 f002 	lsl.w	r0, r1, r2
 8000432:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000436:	40d9      	lsrs	r1, r3
 8000438:	4330      	orrs	r0, r6
 800043a:	0c03      	lsrs	r3, r0, #16
 800043c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000440:	fa1f f887 	uxth.w	r8, r7
 8000444:	fb0e 1116 	mls	r1, lr, r6, r1
 8000448:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800044c:	fb06 f108 	mul.w	r1, r6, r8
 8000450:	4299      	cmp	r1, r3
 8000452:	fa04 f402 	lsl.w	r4, r4, r2
 8000456:	d909      	bls.n	800046c <__udivmoddi4+0x19c>
 8000458:	18fb      	adds	r3, r7, r3
 800045a:	f106 3cff 	add.w	ip, r6, #4294967295
 800045e:	f080 808d 	bcs.w	800057c <__udivmoddi4+0x2ac>
 8000462:	4299      	cmp	r1, r3
 8000464:	f240 808a 	bls.w	800057c <__udivmoddi4+0x2ac>
 8000468:	3e02      	subs	r6, #2
 800046a:	443b      	add	r3, r7
 800046c:	1a5b      	subs	r3, r3, r1
 800046e:	b281      	uxth	r1, r0
 8000470:	fbb3 f0fe 	udiv	r0, r3, lr
 8000474:	fb0e 3310 	mls	r3, lr, r0, r3
 8000478:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800047c:	fb00 f308 	mul.w	r3, r0, r8
 8000480:	428b      	cmp	r3, r1
 8000482:	d907      	bls.n	8000494 <__udivmoddi4+0x1c4>
 8000484:	1879      	adds	r1, r7, r1
 8000486:	f100 3cff 	add.w	ip, r0, #4294967295
 800048a:	d273      	bcs.n	8000574 <__udivmoddi4+0x2a4>
 800048c:	428b      	cmp	r3, r1
 800048e:	d971      	bls.n	8000574 <__udivmoddi4+0x2a4>
 8000490:	3802      	subs	r0, #2
 8000492:	4439      	add	r1, r7
 8000494:	1acb      	subs	r3, r1, r3
 8000496:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800049a:	e778      	b.n	800038e <__udivmoddi4+0xbe>
 800049c:	f1c6 0c20 	rsb	ip, r6, #32
 80004a0:	fa03 f406 	lsl.w	r4, r3, r6
 80004a4:	fa22 f30c 	lsr.w	r3, r2, ip
 80004a8:	431c      	orrs	r4, r3
 80004aa:	fa20 f70c 	lsr.w	r7, r0, ip
 80004ae:	fa01 f306 	lsl.w	r3, r1, r6
 80004b2:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80004b6:	fa21 f10c 	lsr.w	r1, r1, ip
 80004ba:	431f      	orrs	r7, r3
 80004bc:	0c3b      	lsrs	r3, r7, #16
 80004be:	fbb1 f9fe 	udiv	r9, r1, lr
 80004c2:	fa1f f884 	uxth.w	r8, r4
 80004c6:	fb0e 1119 	mls	r1, lr, r9, r1
 80004ca:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004ce:	fb09 fa08 	mul.w	sl, r9, r8
 80004d2:	458a      	cmp	sl, r1
 80004d4:	fa02 f206 	lsl.w	r2, r2, r6
 80004d8:	fa00 f306 	lsl.w	r3, r0, r6
 80004dc:	d908      	bls.n	80004f0 <__udivmoddi4+0x220>
 80004de:	1861      	adds	r1, r4, r1
 80004e0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004e4:	d248      	bcs.n	8000578 <__udivmoddi4+0x2a8>
 80004e6:	458a      	cmp	sl, r1
 80004e8:	d946      	bls.n	8000578 <__udivmoddi4+0x2a8>
 80004ea:	f1a9 0902 	sub.w	r9, r9, #2
 80004ee:	4421      	add	r1, r4
 80004f0:	eba1 010a 	sub.w	r1, r1, sl
 80004f4:	b2bf      	uxth	r7, r7
 80004f6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004fa:	fb0e 1110 	mls	r1, lr, r0, r1
 80004fe:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000502:	fb00 f808 	mul.w	r8, r0, r8
 8000506:	45b8      	cmp	r8, r7
 8000508:	d907      	bls.n	800051a <__udivmoddi4+0x24a>
 800050a:	19e7      	adds	r7, r4, r7
 800050c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000510:	d22e      	bcs.n	8000570 <__udivmoddi4+0x2a0>
 8000512:	45b8      	cmp	r8, r7
 8000514:	d92c      	bls.n	8000570 <__udivmoddi4+0x2a0>
 8000516:	3802      	subs	r0, #2
 8000518:	4427      	add	r7, r4
 800051a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800051e:	eba7 0708 	sub.w	r7, r7, r8
 8000522:	fba0 8902 	umull	r8, r9, r0, r2
 8000526:	454f      	cmp	r7, r9
 8000528:	46c6      	mov	lr, r8
 800052a:	4649      	mov	r1, r9
 800052c:	d31a      	bcc.n	8000564 <__udivmoddi4+0x294>
 800052e:	d017      	beq.n	8000560 <__udivmoddi4+0x290>
 8000530:	b15d      	cbz	r5, 800054a <__udivmoddi4+0x27a>
 8000532:	ebb3 020e 	subs.w	r2, r3, lr
 8000536:	eb67 0701 	sbc.w	r7, r7, r1
 800053a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800053e:	40f2      	lsrs	r2, r6
 8000540:	ea4c 0202 	orr.w	r2, ip, r2
 8000544:	40f7      	lsrs	r7, r6
 8000546:	e9c5 2700 	strd	r2, r7, [r5]
 800054a:	2600      	movs	r6, #0
 800054c:	4631      	mov	r1, r6
 800054e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e70b      	b.n	8000370 <__udivmoddi4+0xa0>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e9      	b.n	8000330 <__udivmoddi4+0x60>
 800055c:	4618      	mov	r0, r3
 800055e:	e6fd      	b.n	800035c <__udivmoddi4+0x8c>
 8000560:	4543      	cmp	r3, r8
 8000562:	d2e5      	bcs.n	8000530 <__udivmoddi4+0x260>
 8000564:	ebb8 0e02 	subs.w	lr, r8, r2
 8000568:	eb69 0104 	sbc.w	r1, r9, r4
 800056c:	3801      	subs	r0, #1
 800056e:	e7df      	b.n	8000530 <__udivmoddi4+0x260>
 8000570:	4608      	mov	r0, r1
 8000572:	e7d2      	b.n	800051a <__udivmoddi4+0x24a>
 8000574:	4660      	mov	r0, ip
 8000576:	e78d      	b.n	8000494 <__udivmoddi4+0x1c4>
 8000578:	4681      	mov	r9, r0
 800057a:	e7b9      	b.n	80004f0 <__udivmoddi4+0x220>
 800057c:	4666      	mov	r6, ip
 800057e:	e775      	b.n	800046c <__udivmoddi4+0x19c>
 8000580:	4630      	mov	r0, r6
 8000582:	e74a      	b.n	800041a <__udivmoddi4+0x14a>
 8000584:	f1ac 0c02 	sub.w	ip, ip, #2
 8000588:	4439      	add	r1, r7
 800058a:	e713      	b.n	80003b4 <__udivmoddi4+0xe4>
 800058c:	3802      	subs	r0, #2
 800058e:	443c      	add	r4, r7
 8000590:	e724      	b.n	80003dc <__udivmoddi4+0x10c>
 8000592:	bf00      	nop

08000594 <__aeabi_idiv0>:
 8000594:	4770      	bx	lr
 8000596:	bf00      	nop

08000598 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000598:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005d0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800059c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059e:	e003      	b.n	80005a8 <LoopCopyDataInit>

080005a0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005a0:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005a2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a6:	3104      	adds	r1, #4

080005a8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a8:	480b      	ldr	r0, [pc, #44]	; (80005d8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005aa:	4b0c      	ldr	r3, [pc, #48]	; (80005dc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005ac:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ae:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005b0:	d3f6      	bcc.n	80005a0 <CopyDataInit>
  ldr  r2, =_sbss
 80005b2:	4a0b      	ldr	r2, [pc, #44]	; (80005e0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b4:	e002      	b.n	80005bc <LoopFillZerobss>

080005b6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b8:	f842 3b04 	str.w	r3, [r2], #4

080005bc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005bc:	4b09      	ldr	r3, [pc, #36]	; (80005e4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005be:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005c0:	d3f9      	bcc.n	80005b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005c2:	f004 f9b3 	bl	800492c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c6:	f01b faf3 	bl	801bbb0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ca:	f000 fe13 	bl	80011f4 <main>
  bx  lr    
 80005ce:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005d0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d4:	0805a478 	.word	0x0805a478
  ldr  r0, =_sdata
 80005d8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005dc:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 80005e0:	20000164 	.word	0x20000164
  ldr  r3, = _ebss
 80005e4:	20013a88 	.word	0x20013a88

080005e8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e8:	e7fe      	b.n	80005e8 <ADC_IRQHandler>

080005ea <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005ea:	f000 bc09 	b.w	8000e00 <touchgfx_init>

080005ee <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ee:	f000 bc77 	b.w	8000ee0 <touchgfx_taskEntry>

080005f2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005f2:	4770      	bx	lr

080005f4 <_ZN20STM32TouchControllerD0Ev>:
 80005f4:	b510      	push	{r4, lr}
 80005f6:	2104      	movs	r1, #4
 80005f8:	4604      	mov	r4, r0
 80005fa:	f01b fa60 	bl	801babe <_ZdlPvj>
 80005fe:	4620      	mov	r0, r4
 8000600:	bd10      	pop	{r4, pc}
	...

08000604 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000604:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000606:	4b0c      	ldr	r3, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000608:	4c0c      	ldr	r4, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800060a:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 800060c:	4b0c      	ldr	r3, [pc, #48]	; (8000640 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000610:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000612:	6863      	ldr	r3, [r4, #4]
 8000614:	4798      	blx	r3
 8000616:	f640 0311 	movw	r3, #2065	; 0x811
 800061a:	4298      	cmp	r0, r3
 800061c:	d10a      	bne.n	8000634 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061e:	4d09      	ldr	r5, [pc, #36]	; (8000644 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000622:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000624:	2082      	movs	r0, #130	; 0x82
 8000626:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000628:	682b      	ldr	r3, [r5, #0]
 800062a:	2082      	movs	r0, #130	; 0x82
 800062c:	68db      	ldr	r3, [r3, #12]
 800062e:	4798      	blx	r3
 8000630:	2000      	movs	r0, #0
    }

    return ret;
}
 8000632:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000634:	2001      	movs	r0, #1
 8000636:	e7fc      	b.n	8000632 <_Z11BSP_TS_Inittt+0x2e>
 8000638:	20000180 	.word	0x20000180
 800063c:	2000004c 	.word	0x2000004c
 8000640:	20000182 	.word	0x20000182
 8000644:	20000184 	.word	0x20000184

08000648 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000648:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800064c:	20f0      	movs	r0, #240	; 0xf0
 800064e:	f7ff bfd9 	b.w	8000604 <_Z11BSP_TS_Inittt>
	...

08000654 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000654:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000656:	4d2d      	ldr	r5, [pc, #180]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000658:	682b      	ldr	r3, [r5, #0]
{
 800065a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800065c:	691b      	ldr	r3, [r3, #16]
 800065e:	2082      	movs	r0, #130	; 0x82
 8000660:	4798      	blx	r3
 8000662:	b280      	uxth	r0, r0
 8000664:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000666:	2800      	cmp	r0, #0
 8000668:	d043      	beq.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800066a:	682b      	ldr	r3, [r5, #0]
 800066c:	f10d 0206 	add.w	r2, sp, #6
 8000670:	695b      	ldr	r3, [r3, #20]
 8000672:	a901      	add	r1, sp, #4
 8000674:	2082      	movs	r0, #130	; 0x82
 8000676:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000678:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800067c:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 8000680:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000682:	2a0a      	cmp	r2, #10
 8000684:	d937      	bls.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000686:	230b      	movs	r3, #11
 8000688:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800068c:	4b20      	ldr	r3, [pc, #128]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068e:	881b      	ldrh	r3, [r3, #0]
 8000690:	429a      	cmp	r2, r3
 8000692:	d901      	bls.n	8000698 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000694:	1e5a      	subs	r2, r3, #1
 8000696:	b292      	uxth	r2, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000698:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800069c:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006a0:	428b      	cmp	r3, r1
 80006a2:	d82a      	bhi.n	80006fa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a4:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a8:	330e      	adds	r3, #14
 80006aa:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006ac:	210f      	movs	r1, #15
 80006ae:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006b2:	4918      	ldr	r1, [pc, #96]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b4:	8809      	ldrh	r1, [r1, #0]
 80006b6:	428b      	cmp	r3, r1
 80006b8:	d901      	bls.n	80006be <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006ba:	1e4b      	subs	r3, r1, #1
 80006bc:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	4e16      	ldr	r6, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	4d16      	ldr	r5, [pc, #88]	; (800071c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c4:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c6:	4283      	cmp	r3, r0
 80006c8:	b281      	uxth	r1, r0
 80006ca:	bf8c      	ite	hi
 80006cc:	1a59      	subhi	r1, r3, r1
 80006ce:	1ac9      	subls	r1, r1, r3
 80006d0:	b2b8      	uxth	r0, r7
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d2:	42ba      	cmp	r2, r7
 80006d4:	bf8c      	ite	hi
 80006d6:	1a10      	subhi	r0, r2, r0
 80006d8:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006da:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006dc:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006de:	4401      	add	r1, r0
 80006e0:	2905      	cmp	r1, #5
        {
            _x = x;
 80006e2:	bfc8      	it	gt
 80006e4:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e6:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e8:	bfc8      	it	gt
 80006ea:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006ec:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ee:	682b      	ldr	r3, [r5, #0]
 80006f0:	80a3      	strh	r3, [r4, #4]
    }
}
 80006f2:	b003      	add	sp, #12
 80006f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f6:	2200      	movs	r2, #0
 80006f8:	e7ce      	b.n	8000698 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006fa:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fe:	3308      	adds	r3, #8
 8000700:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000702:	2b0e      	cmp	r3, #14
 8000704:	d8d2      	bhi.n	80006ac <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000706:	2300      	movs	r3, #0
 8000708:	e7d9      	b.n	80006be <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 800070a:	bf00      	nop
 800070c:	20000184 	.word	0x20000184
 8000710:	20000182 	.word	0x20000182
 8000714:	20000180 	.word	0x20000180
 8000718:	20000188 	.word	0x20000188
 800071c:	2000018c 	.word	0x2000018c

08000720 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000720:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000722:	4668      	mov	r0, sp
{
 8000724:	460d      	mov	r5, r1
 8000726:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000728:	f7ff ff94 	bl	8000654 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 800072c:	f8bd 0000 	ldrh.w	r0, [sp]
 8000730:	b130      	cbz	r0, 8000740 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000732:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000736:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000738:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800073c:	6023      	str	r3, [r4, #0]
        return true;
 800073e:	2001      	movs	r0, #1
}
 8000740:	b003      	add	sp, #12
 8000742:	bd30      	pop	{r4, r5, pc}

08000744 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000746:	4770      	bx	lr

08000748 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000748:	4770      	bx	lr

0800074a <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800074a:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800074c:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000750:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000754:	4770      	bx	lr

08000756 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000756:	2000      	movs	r0, #0
 8000758:	4770      	bx	lr

0800075a <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800075a:	2000      	movs	r0, #0
 800075c:	4770      	bx	lr

0800075e <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800075e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000760:	b10b      	cbz	r3, 8000766 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000762:	4608      	mov	r0, r1
 8000764:	4718      	bx	r3
        }
    }
 8000766:	4770      	bx	lr

08000768 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000768:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800076c:	4770      	bx	lr

0800076e <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800076e:	6840      	ldr	r0, [r0, #4]
 8000770:	6803      	ldr	r3, [r0, #0]
 8000772:	699b      	ldr	r3, [r3, #24]
 8000774:	4718      	bx	r3

08000776 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000776:	4770      	bx	lr

08000778 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000778:	4770      	bx	lr

0800077a <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800077a:	4770      	bx	lr

0800077c <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800077c:	f000 bc52 	b.w	8001024 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000780 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000780:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000782:	6803      	ldr	r3, [r0, #0]
{
 8000784:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000786:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8000788:	4798      	blx	r3
    enableInterrupts();
 800078a:	6823      	ldr	r3, [r4, #0]
 800078c:	4620      	mov	r0, r4
 800078e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8000790:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000792:	f000 f8ed 	bl	8000970 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000796:	6823      	ldr	r3, [r4, #0]
 8000798:	4620      	mov	r0, r4
 800079a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800079c:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 800079e:	2029      	movs	r0, #41	; 0x29
 80007a0:	f000 ff74 	bl	800168c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007a4:	f000 f8e4 	bl	8000970 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007a8:	6823      	ldr	r3, [r4, #0]
 80007aa:	4620      	mov	r0, r4
 80007ac:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80007ae:	4798      	blx	r3
    for (;;)
 80007b0:	e7f8      	b.n	80007a4 <_ZN11TouchGFXHAL9taskEntryEv+0x24>

080007b2 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007b2:	b510      	push	{r4, lr}
 80007b4:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007b6:	f009 ffe1 	bl	800a77c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ba:	6823      	ldr	r3, [r4, #0]
 80007bc:	4620      	mov	r0, r4
 80007be:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
    }
 80007c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007c6:	4718      	bx	r3

080007c8 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007c8:	f000 bc1e 	b.w	8001008 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007cc <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007cc:	f000 bc22 	b.w	8001014 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007d0 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007d0:	f000 bc46 	b.w	8001060 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007d4 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007d4:	f000 bbf4 	b.w	8000fc0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007d8 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007d8:	f000 bc46 	b.w	8001068 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007dc <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007dc:	f000 bc4e 	b.w	800107c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007e0 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007e0:	f000 bbf8 	b.w	8000fd4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007e4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80007e4:	b508      	push	{r3, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80007e6:	b931      	cbnz	r1, 80007f6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x12>
 80007e8:	4b0a      	ldr	r3, [pc, #40]	; (8000814 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80007ea:	4a0b      	ldr	r2, [pc, #44]	; (8000818 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80007ec:	480b      	ldr	r0, [pc, #44]	; (800081c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80007ee:	f44f 712b 	mov.w	r1, #684	; 0x2ac
 80007f2:	f01b f993 	bl	801bb1c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80007f6:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80007fa:	3a00      	subs	r2, #0
 80007fc:	4908      	ldr	r1, [pc, #32]	; (8000820 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80007fe:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000800:	bf18      	it	ne
 8000802:	2201      	movne	r2, #1
 8000804:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000806:	3b00      	subs	r3, #0
 8000808:	4a06      	ldr	r2, [pc, #24]	; (8000824 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
 800080a:	bf18      	it	ne
 800080c:	2301      	movne	r3, #1
 800080e:	7013      	strb	r3, [r2, #0]
    }
 8000810:	bd08      	pop	{r3, pc}
 8000812:	bf00      	nop
 8000814:	0801d030 	.word	0x0801d030
 8000818:	0801d068 	.word	0x0801d068
 800081c:	0801d0b6 	.word	0x0801d0b6
 8000820:	20013506 	.word	0x20013506
 8000824:	20013507 	.word	0x20013507

08000828 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000828:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800082a:	4b09      	ldr	r3, [pc, #36]	; (8000850 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 800082c:	881b      	ldrh	r3, [r3, #0]
 800082e:	428b      	cmp	r3, r1
 8000830:	d803      	bhi.n	800083a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000832:	4b08      	ldr	r3, [pc, #32]	; (8000854 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000834:	881b      	ldrh	r3, [r3, #0]
 8000836:	4293      	cmp	r3, r2
 8000838:	d905      	bls.n	8000846 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800083a:	4b07      	ldr	r3, [pc, #28]	; (8000858 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 800083c:	4a07      	ldr	r2, [pc, #28]	; (800085c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 800083e:	4808      	ldr	r0, [pc, #32]	; (8000860 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000840:	219e      	movs	r1, #158	; 0x9e
 8000842:	f01b f96b 	bl	801bb1c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000846:	4b07      	ldr	r3, [pc, #28]	; (8000864 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000848:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800084a:	4b07      	ldr	r3, [pc, #28]	; (8000868 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 800084c:	801a      	strh	r2, [r3, #0]
    }
 800084e:	bd08      	pop	{r3, pc}
 8000850:	200134fc 	.word	0x200134fc
 8000854:	200134fe 	.word	0x200134fe
 8000858:	0801d0fb 	.word	0x0801d0fb
 800085c:	0801d15e 	.word	0x0801d15e
 8000860:	0801d0b6 	.word	0x0801d0b6
 8000864:	20013502 	.word	0x20013502
 8000868:	20013504 	.word	0x20013504

0800086c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800086c:	f009 b924 	b.w	8009ab8 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000870 <_ZN11TouchGFXHALD0Ev>:
 8000870:	b510      	push	{r4, lr}
 8000872:	217c      	movs	r1, #124	; 0x7c
 8000874:	4604      	mov	r4, r0
 8000876:	f01b f922 	bl	801babe <_ZdlPvj>
 800087a:	4620      	mov	r0, r4
 800087c:	bd10      	pop	{r4, pc}

0800087e <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800087e:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 8000882:	b11b      	cbz	r3, 800088c <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000884:	6840      	ldr	r0, [r0, #4]
 8000886:	6803      	ldr	r3, [r0, #0]
 8000888:	681b      	ldr	r3, [r3, #0]
 800088a:	4718      	bx	r3
    }
 800088c:	4618      	mov	r0, r3
 800088e:	4770      	bx	lr

08000890 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000890:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000892:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000896:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 800089a:	4b0c      	ldr	r3, [pc, #48]	; (80008cc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
 800089c:	428c      	cmp	r4, r1
 800089e:	781a      	ldrb	r2, [r3, #0]
 80008a0:	d009      	beq.n	80008b6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80008a2:	b93a      	cbnz	r2, 80008b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008a4:	4a0a      	ldr	r2, [pc, #40]	; (80008d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80008a6:	490b      	ldr	r1, [pc, #44]	; (80008d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008a8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80008aa:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80008ac:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008ae:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80008b0:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80008b2:	701a      	strb	r2, [r3, #0]
    }
 80008b4:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80008b6:	2a00      	cmp	r2, #0
 80008b8:	d0fc      	beq.n	80008b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008ba:	4a05      	ldr	r2, [pc, #20]	; (80008d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80008bc:	4905      	ldr	r1, [pc, #20]	; (80008d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008be:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80008c0:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80008c2:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008c4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80008c6:	2200      	movs	r2, #0
 80008c8:	e7f3      	b.n	80008b2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80008ca:	bf00      	nop
 80008cc:	20013500 	.word	0x20013500
 80008d0:	200134fc 	.word	0x200134fc
 80008d4:	200134fe 	.word	0x200134fe

080008d8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008d8:	2101      	movs	r1, #1
{
 80008da:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008dc:	2200      	movs	r2, #0
 80008de:	4608      	mov	r0, r1
 80008e0:	f006 fce0 	bl	80072a4 <osSemaphoreNew>
 80008e4:	4b0a      	ldr	r3, [pc, #40]	; (8000910 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008e6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008e8:	b928      	cbnz	r0, 80008f6 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008ea:	4b0a      	ldr	r3, [pc, #40]	; (8000914 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008ec:	4a0a      	ldr	r2, [pc, #40]	; (8000918 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008ee:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80008f0:	480a      	ldr	r0, [pc, #40]	; (800091c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80008f2:	f01b f913 	bl	801bb1c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80008f6:	2200      	movs	r2, #0
 80008f8:	2104      	movs	r1, #4
 80008fa:	2001      	movs	r0, #1
 80008fc:	f006 fd98 	bl	8007430 <osMessageQueueNew>
 8000900:	4b07      	ldr	r3, [pc, #28]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000902:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000904:	b918      	cbnz	r0, 800090e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000906:	4b07      	ldr	r3, [pc, #28]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000908:	4a03      	ldr	r2, [pc, #12]	; (8000918 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800090a:	212d      	movs	r1, #45	; 0x2d
 800090c:	e7f0      	b.n	80008f0 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800090e:	bd08      	pop	{r3, pc}
 8000910:	20000194 	.word	0x20000194
 8000914:	0801d274 	.word	0x0801d274
 8000918:	0801d2bd 	.word	0x0801d2bd
 800091c:	0801d2ec 	.word	0x0801d2ec
 8000920:	20000190 	.word	0x20000190
 8000924:	0801d339 	.word	0x0801d339

08000928 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000928:	4b02      	ldr	r3, [pc, #8]	; (8000934 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800092a:	f04f 31ff 	mov.w	r1, #4294967295
 800092e:	6818      	ldr	r0, [r3, #0]
 8000930:	f006 bd0e 	b.w	8007350 <osSemaphoreAcquire>
 8000934:	20000194 	.word	0x20000194

08000938 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000938:	4b01      	ldr	r3, [pc, #4]	; (8000940 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800093a:	6818      	ldr	r0, [r3, #0]
 800093c:	f006 bd42 	b.w	80073c4 <osSemaphoreRelease>
 8000940:	20000194 	.word	0x20000194

08000944 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000944:	4b02      	ldr	r3, [pc, #8]	; (8000950 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000946:	2100      	movs	r1, #0
 8000948:	6818      	ldr	r0, [r3, #0]
 800094a:	f006 bd01 	b.w	8007350 <osSemaphoreAcquire>
 800094e:	bf00      	nop
 8000950:	20000194 	.word	0x20000194

08000954 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000954:	f7ff bff0 	b.w	8000938 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000958 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000958:	4803      	ldr	r0, [pc, #12]	; (8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800095a:	4904      	ldr	r1, [pc, #16]	; (800096c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800095c:	6800      	ldr	r0, [r0, #0]
 800095e:	2300      	movs	r3, #0
 8000960:	461a      	mov	r2, r3
 8000962:	f006 bdab 	b.w	80074bc <osMessageQueuePut>
 8000966:	bf00      	nop
 8000968:	20000190 	.word	0x20000190
 800096c:	20000004 	.word	0x20000004

08000970 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000970:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000972:	4c08      	ldr	r4, [pc, #32]	; (8000994 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000974:	2300      	movs	r3, #0
 8000976:	461a      	mov	r2, r3
 8000978:	a901      	add	r1, sp, #4
 800097a:	6820      	ldr	r0, [r4, #0]
 800097c:	f006 fde0 	bl	8007540 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000980:	6820      	ldr	r0, [r4, #0]
 8000982:	f04f 33ff 	mov.w	r3, #4294967295
 8000986:	2200      	movs	r2, #0
 8000988:	a901      	add	r1, sp, #4
 800098a:	f006 fdd9 	bl	8007540 <osMessageQueueGet>
}
 800098e:	b002      	add	sp, #8
 8000990:	bd10      	pop	{r4, pc}
 8000992:	bf00      	nop
 8000994:	20000190 	.word	0x20000190

08000998 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000998:	6803      	ldr	r3, [r0, #0]
 800099a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800099c:	4718      	bx	r3

0800099e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 800099e:	2001      	movs	r0, #1
 80009a0:	4770      	bx	lr

080009a2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009a2:	6803      	ldr	r3, [r0, #0]
 80009a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009a6:	4718      	bx	r3

080009a8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009a8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009aa:	2300      	movs	r3, #0
 80009ac:	9301      	str	r3, [sp, #4]
 80009ae:	4b0d      	ldr	r3, [pc, #52]	; (80009e4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009b2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009b6:	631a      	str	r2, [r3, #48]	; 0x30
 80009b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ba:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009be:	9201      	str	r2, [sp, #4]
 80009c0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009c2:	691a      	ldr	r2, [r3, #16]
 80009c4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009ca:	691a      	ldr	r2, [r3, #16]
 80009cc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009d0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009d2:	4b05      	ldr	r3, [pc, #20]	; (80009e8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009d4:	4a05      	ldr	r2, [pc, #20]	; (80009ec <_ZN8STM32DMA10initializeEv+0x44>)
 80009d6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009d8:	4b05      	ldr	r3, [pc, #20]	; (80009f0 <_ZN8STM32DMA10initializeEv+0x48>)
 80009da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009de:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009e0:	b002      	add	sp, #8
 80009e2:	4770      	bx	lr
 80009e4:	40023800 	.word	0x40023800
 80009e8:	20013938 	.word	0x20013938
 80009ec:	080009fd 	.word	0x080009fd
 80009f0:	e000e100 	.word	0xe000e100

080009f4 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 80009f4:	f240 30ef 	movw	r0, #1007	; 0x3ef
 80009f8:	4770      	bx	lr
	...

080009fc <DMA2D_XferCpltCallback>:
        HAL::getInstance()->signalDMAInterrupt();
 80009fc:	4b02      	ldr	r3, [pc, #8]	; (8000a08 <DMA2D_XferCpltCallback+0xc>)
 80009fe:	681b      	ldr	r3, [r3, #0]
 8000a00:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a02:	6803      	ldr	r3, [r0, #0]
 8000a04:	695b      	ldr	r3, [r3, #20]
 8000a06:	4718      	bx	r3
 8000a08:	20013508 	.word	0x20013508

08000a0c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000a0c:	b508      	push	{r3, lr}
 8000a0e:	280b      	cmp	r0, #11
 8000a10:	d80b      	bhi.n	8000a2a <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000a12:	e8df f000 	tbb	[pc, r0]
 8000a16:	0612      	.short	0x0612
 8000a18:	0a0a0a10 	.word	0x0a0a0a10
 8000a1c:	0808080a 	.word	0x0808080a
 8000a20:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000a22:	2001      	movs	r0, #1
}
 8000a24:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000a26:	2005      	movs	r0, #5
        break;
 8000a28:	e7fc      	b.n	8000a24 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000a2a:	4b05      	ldr	r3, [pc, #20]	; (8000a40 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000a2c:	4a05      	ldr	r2, [pc, #20]	; (8000a44 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000a2e:	4806      	ldr	r0, [pc, #24]	; (8000a48 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000a30:	2167      	movs	r1, #103	; 0x67
 8000a32:	f01b f873 	bl	801bb1c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000a36:	2000      	movs	r0, #0
 8000a38:	e7f4      	b.n	8000a24 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000a3a:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000a3c:	e7f2      	b.n	8000a24 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000a3e:	bf00      	nop
 8000a40:	0801d37b 	.word	0x0801d37b
 8000a44:	0801d396 	.word	0x0801d396
 8000a48:	0801d3e0 	.word	0x0801d3e0

08000a4c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000a4c:	b508      	push	{r3, lr}
 8000a4e:	280a      	cmp	r0, #10
 8000a50:	d809      	bhi.n	8000a66 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000a52:	e8df f000 	tbb	[pc, r0]
 8000a56:	0610      	.short	0x0610
 8000a58:	0808080e 	.word	0x0808080e
 8000a5c:	06060608 	.word	0x06060608
 8000a60:	06          	.byte	0x06
 8000a61:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000a62:	2001      	movs	r0, #1
}
 8000a64:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000a66:	4b05      	ldr	r3, [pc, #20]	; (8000a7c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000a68:	4a05      	ldr	r2, [pc, #20]	; (8000a80 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000a6a:	4806      	ldr	r0, [pc, #24]	; (8000a84 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000a6c:	2188      	movs	r1, #136	; 0x88
 8000a6e:	f01b f855 	bl	801bb1c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000a72:	2000      	movs	r0, #0
 8000a74:	e7f6      	b.n	8000a64 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000a76:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000a78:	e7f4      	b.n	8000a64 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000a7a:	bf00      	nop
 8000a7c:	0801d37b 	.word	0x0801d37b
 8000a80:	0801d42b 	.word	0x0801d42b
 8000a84:	0801d3e0 	.word	0x0801d3e0

08000a88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000a88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000a8c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000a90:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000a92:	4640      	mov	r0, r8
 8000a94:	f7ff ffba 	bl	8000a0c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000a98:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000a9a:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000a9c:	4638      	mov	r0, r7
 8000a9e:	f7ff ffb5 	bl	8000a0c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000aa2:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000aa4:	4638      	mov	r0, r7
 8000aa6:	f7ff ffd1 	bl	8000a4c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000aaa:	8aa1      	ldrh	r1, [r4, #20]
 8000aac:	8b62      	ldrh	r2, [r4, #26]
 8000aae:	4b4b      	ldr	r3, [pc, #300]	; (8000bdc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000ab0:	1a52      	subs	r2, r2, r1
 8000ab2:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000ab4:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000ab6:	8b22      	ldrh	r2, [r4, #24]
 8000ab8:	1a52      	subs	r2, r2, r1
 8000aba:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000abc:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000abe:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000ac0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000ac4:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ac6:	6921      	ldr	r1, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000ac8:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000aca:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000acc:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000ace:	f8d4 c000 	ldr.w	ip, [r4]
 8000ad2:	f894 901c 	ldrb.w	r9, [r4, #28]
 8000ad6:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 8000ada:	ea4f 6209 	mov.w	r2, r9, lsl #24
 8000ade:	469e      	mov	lr, r3
 8000ae0:	d030      	beq.n	8000b44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 8000ae2:	d814      	bhi.n	8000b0e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x86>
 8000ae4:	f1bc 0f20 	cmp.w	ip, #32
 8000ae8:	ea45 0002 	orr.w	r0, r5, r2
 8000aec:	d068      	beq.n	8000bc0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>
 8000aee:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8000af2:	d065      	beq.n	8000bc0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>
 8000af4:	f1bc 0f04 	cmp.w	ip, #4
 8000af8:	d020      	beq.n	8000b3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000afa:	4b38      	ldr	r3, [pc, #224]	; (8000bdc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000afc:	432a      	orrs	r2, r5
 8000afe:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b02:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b04:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b06:	d148      	bne.n	8000b9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x112>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000b08:	f240 2201 	movw	r2, #513	; 0x201
 8000b0c:	e014      	b.n	8000b38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
    switch (blitOp.operation)
 8000b0e:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8000b12:	d007      	beq.n	8000b24 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
 8000b14:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8000b18:	d1ef      	bne.n	8000afa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x72>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b1a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b1e:	f042 0209 	orr.w	r2, r2, #9
 8000b22:	e003      	b.n	8000b2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa4>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b24:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b28:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b2c:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000b2e:	68e2      	ldr	r2, [r4, #12]
 8000b30:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000b32:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b34:	6159      	str	r1, [r3, #20]
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000b36:	4a2a      	ldr	r2, [pc, #168]	; (8000be0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000b38:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000b3a:	e04c      	b.n	8000bd6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b3c:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000b40:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000b42:	e7f6      	b.n	8000b32 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xaa>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000b44:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b46:	432a      	orrs	r2, r5
 8000b48:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000b4c:	1d04      	adds	r4, r0, #4
 8000b4e:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b50:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000b52:	7802      	ldrb	r2, [r0, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000b54:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b56:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000b58:	b142      	cbz	r2, 8000b6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe4>
 8000b5a:	2a01      	cmp	r2, #1
 8000b5c:	d01f      	beq.n	8000b9e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
                assert(0 && "Unsupported format");
 8000b5e:	4b21      	ldr	r3, [pc, #132]	; (8000be4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>)
 8000b60:	4a21      	ldr	r2, [pc, #132]	; (8000be8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>)
 8000b62:	4822      	ldr	r0, [pc, #136]	; (8000bec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x164>)
 8000b64:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000b68:	f01a ffd8 	bl	801bb1c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000b6c:	8842      	ldrh	r2, [r0, #2]
 8000b6e:	69d9      	ldr	r1, [r3, #28]
 8000b70:	1e50      	subs	r0, r2, #1
 8000b72:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000b76:	f022 0210 	bic.w	r2, r2, #16
 8000b7a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000b7e:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000b80:	2401      	movs	r4, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000b82:	4b16      	ldr	r3, [pc, #88]	; (8000bdc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000b84:	69da      	ldr	r2, [r3, #28]
 8000b86:	f042 0220 	orr.w	r2, r2, #32
 8000b8a:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000b8c:	69da      	ldr	r2, [r3, #28]
 8000b8e:	0692      	lsls	r2, r2, #26
 8000b90:	d4fc      	bmi.n	8000b8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000b92:	2210      	movs	r2, #16
 8000b94:	609a      	str	r2, [r3, #8]
            if(blend)
 8000b96:	2c00      	cmp	r4, #0
 8000b98:	d1cd      	bne.n	8000b36 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b9a:	4a15      	ldr	r2, [pc, #84]	; (8000bf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>)
 8000b9c:	e7cc      	b.n	8000b38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000b9e:	8842      	ldrh	r2, [r0, #2]
 8000ba0:	69d9      	ldr	r1, [r3, #28]
 8000ba2:	1e50      	subs	r0, r2, #1
 8000ba4:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000ba8:	f022 0210 	bic.w	r2, r2, #16
 8000bac:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if(blitOp.alpha == 255)
 8000bb0:	f1b9 04ff 	subs.w	r4, r9, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bb4:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000bb8:	bf18      	it	ne
 8000bba:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bbc:	61da      	str	r2, [r3, #28]
                break;
 8000bbe:	e7e0      	b.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000bc0:	4b07      	ldr	r3, [pc, #28]	; (8000be0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bc2:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000bc6:	f8ce 001c 	str.w	r0, [lr, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bca:	f8ce 6024 	str.w	r6, [lr, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bce:	f8ce 1014 	str.w	r1, [lr, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000bd2:	f8ce 3000 	str.w	r3, [lr]
}
 8000bd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000bda:	bf00      	nop
 8000bdc:	4002b000 	.word	0x4002b000
 8000be0:	00020201 	.word	0x00020201
 8000be4:	0801d476 	.word	0x0801d476
 8000be8:	0801d490 	.word	0x0801d490
 8000bec:	0801d3e0 	.word	0x0801d3e0
 8000bf0:	00010201 	.word	0x00010201

08000bf4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000bf4:	b538      	push	{r3, r4, r5, lr}
 8000bf6:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000bf8:	7f88      	ldrb	r0, [r1, #30]
 8000bfa:	f7ff ff27 	bl	8000a4c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000bfe:	8aa5      	ldrh	r5, [r4, #20]
 8000c00:	8ae1      	ldrh	r1, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c02:	4b16      	ldr	r3, [pc, #88]	; (8000c5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c04:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c06:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c08:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000c0c:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c0e:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c10:	6921      	ldr	r1, [r4, #16]
 8000c12:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c14:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c16:	6825      	ldr	r5, [r4, #0]
 8000c18:	2d08      	cmp	r5, #8
 8000c1a:	d10e      	bne.n	8000c3a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c1c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c1e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c20:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8000c22:	7f20      	ldrb	r0, [r4, #28]
 8000c24:	4a0e      	ldr	r2, [pc, #56]	; (8000c60 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c26:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c2a:	61da      	str	r2, [r3, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c2c:	68e2      	ldr	r2, [r4, #12]
 8000c2e:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c30:	4a0c      	ldr	r2, [pc, #48]	; (8000c64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c32:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c34:	60d9      	str	r1, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c36:	601a      	str	r2, [r3, #0]
    }
}
 8000c38:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c3a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c3c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c3e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000c40:	68e1      	ldr	r1, [r4, #12]
 8000c42:	0a0a      	lsrs	r2, r1, #8
 8000c44:	0948      	lsrs	r0, r1, #5
 8000c46:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000c4a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000c4e:	4302      	orrs	r2, r0
 8000c50:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000c54:	430a      	orrs	r2, r1
 8000c56:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c58:	4a03      	ldr	r2, [pc, #12]	; (8000c68 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000c5a:	e7ec      	b.n	8000c36 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000c5c:	4002b000 	.word	0x4002b000
 8000c60:	00010009 	.word	0x00010009
 8000c64:	00020201 	.word	0x00020201
 8000c68:	00030201 	.word	0x00030201

08000c6c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000c6c:	4b05      	ldr	r3, [pc, #20]	; (8000c84 <_ZN8STM32DMAD1Ev+0x18>)
 8000c6e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c70:	4b05      	ldr	r3, [pc, #20]	; (8000c88 <_ZN8STM32DMAD1Ev+0x1c>)
 8000c72:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000c76:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000c7a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000c7e:	f3bf 8f6f 	isb	sy
}
 8000c82:	4770      	bx	lr
 8000c84:	0801d4d8 	.word	0x0801d4d8
 8000c88:	e000e100 	.word	0xe000e100

08000c8c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000c8c:	b510      	push	{r4, lr}
 8000c8e:	4604      	mov	r4, r0
}
 8000c90:	f7ff ffec 	bl	8000c6c <_ZN8STM32DMAD1Ev>
 8000c94:	4620      	mov	r0, r4
 8000c96:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8000c9a:	f01a ff10 	bl	801babe <_ZdlPvj>
 8000c9e:	4620      	mov	r0, r4
 8000ca0:	bd10      	pop	{r4, pc}
	...

08000ca4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000ca4:	b570      	push	{r4, r5, r6, lr}
 8000ca6:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000ca8:	4625      	mov	r5, r4
 8000caa:	4b0a      	ldr	r3, [pc, #40]	; (8000cd4 <_ZN8STM32DMAC1Ev+0x30>)
 8000cac:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000cae:	2600      	movs	r6, #0
 8000cb0:	6060      	str	r0, [r4, #4]
 8000cb2:	7226      	strb	r6, [r4, #8]
 8000cb4:	7266      	strb	r6, [r4, #9]
 8000cb6:	f845 3b20 	str.w	r3, [r5], #32
 8000cba:	2260      	movs	r2, #96	; 0x60
 8000cbc:	4629      	mov	r1, r5
 8000cbe:	f009 fe93 	bl	800a9e8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000cc2:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000cc6:	60ee      	str	r6, [r5, #12]
 8000cc8:	3520      	adds	r5, #32
 8000cca:	42ab      	cmp	r3, r5
 8000ccc:	d1fb      	bne.n	8000cc6 <_ZN8STM32DMAC1Ev+0x22>
}
 8000cce:	4620      	mov	r0, r4
 8000cd0:	bd70      	pop	{r4, r5, r6, pc}
 8000cd2:	bf00      	nop
 8000cd4:	0801d4d8 	.word	0x0801d4d8

08000cd8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000cd8:	2001      	movs	r0, #1
 8000cda:	4770      	bx	lr

08000cdc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000cdc:	200c      	movs	r0, #12
 8000cde:	4770      	bx	lr

08000ce0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000ce0:	230c      	movs	r3, #12
 8000ce2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000ce6:	3008      	adds	r0, #8
 8000ce8:	4770      	bx	lr

08000cea <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000cea:	230c      	movs	r3, #12
 8000cec:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000cf0:	3008      	adds	r0, #8
 8000cf2:	4770      	bx	lr

08000cf4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000cf4:	2001      	movs	r0, #1
 8000cf6:	4770      	bx	lr

08000cf8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000cf8:	f241 600c 	movw	r0, #5644	; 0x160c
 8000cfc:	4770      	bx	lr

08000cfe <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000cfe:	f241 630c 	movw	r3, #5644	; 0x160c
 8000d02:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d06:	3008      	adds	r0, #8
 8000d08:	4770      	bx	lr

08000d0a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d0a:	f241 630c 	movw	r3, #5644	; 0x160c
 8000d0e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d12:	3008      	adds	r0, #8
 8000d14:	4770      	bx	lr

08000d16 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d16:	2001      	movs	r0, #1
 8000d18:	4770      	bx	lr

08000d1a <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d1a:	2010      	movs	r0, #16
 8000d1c:	4770      	bx	lr

08000d1e <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d1e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d22:	3008      	adds	r0, #8
 8000d24:	4770      	bx	lr

08000d26 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d26:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d2a:	3008      	adds	r0, #8
 8000d2c:	4770      	bx	lr

08000d2e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotomainScreenScreenNoTransition();
 8000d2e:	4608      	mov	r0, r1
 8000d30:	f001 ba48 	b.w	80021c4 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d34:	b510      	push	{r4, lr}
 8000d36:	4b03      	ldr	r3, [pc, #12]	; (8000d44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000d38:	6003      	str	r3, [r0, #0]
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	f008 fbee 	bl	800951c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d40:	4620      	mov	r0, r4
 8000d42:	bd10      	pop	{r4, pc}
 8000d44:	0801d590 	.word	0x0801d590

08000d48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000d48:	b510      	push	{r4, lr}
 8000d4a:	4604      	mov	r4, r0
 8000d4c:	f7ff fff2 	bl	8000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000d50:	4620      	mov	r0, r4
 8000d52:	2114      	movs	r1, #20
 8000d54:	f01a feb3 	bl	801babe <_ZdlPvj>
 8000d58:	4620      	mov	r0, r4
 8000d5a:	bd10      	pop	{r4, pc}

08000d5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000d5c:	b510      	push	{r4, lr}
 8000d5e:	4b03      	ldr	r3, [pc, #12]	; (8000d6c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000d60:	6003      	str	r3, [r0, #0]
 8000d62:	4604      	mov	r4, r0
 8000d64:	f008 fbda 	bl	800951c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d68:	4620      	mov	r0, r4
 8000d6a:	bd10      	pop	{r4, pc}
 8000d6c:	0801d55c 	.word	0x0801d55c

08000d70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000d70:	b510      	push	{r4, lr}
 8000d72:	4604      	mov	r4, r0
 8000d74:	f7ff fff2 	bl	8000d5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000d78:	4620      	mov	r0, r4
 8000d7a:	f241 6114 	movw	r1, #5652	; 0x1614
 8000d7e:	f01a fe9e 	bl	801babe <_ZdlPvj>
 8000d82:	4620      	mov	r0, r4
 8000d84:	bd10      	pop	{r4, pc}
	...

08000d88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000d88:	b510      	push	{r4, lr}
 8000d8a:	4b03      	ldr	r3, [pc, #12]	; (8000d98 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000d8c:	6003      	str	r3, [r0, #0]
 8000d8e:	4604      	mov	r4, r0
 8000d90:	f008 fbc4 	bl	800951c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d94:	4620      	mov	r0, r4
 8000d96:	bd10      	pop	{r4, pc}
 8000d98:	0801d528 	.word	0x0801d528

08000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000d9c:	b510      	push	{r4, lr}
 8000d9e:	4604      	mov	r4, r0
 8000da0:	f7ff fff2 	bl	8000d88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000da4:	4620      	mov	r0, r4
 8000da6:	2118      	movs	r1, #24
 8000da8:	f01a fe89 	bl	801babe <_ZdlPvj>
 8000dac:	4620      	mov	r0, r4
 8000dae:	bd10      	pop	{r4, pc}

08000db0 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000db0:	b510      	push	{r4, lr}
 8000db2:	4b08      	ldr	r3, [pc, #32]	; (8000dd4 <_ZN12FrontendHeapD1Ev+0x24>)
 8000db4:	6003      	str	r3, [r0, #0]
 8000db6:	4604      	mov	r4, r0
 8000db8:	f500 50b2 	add.w	r0, r0, #5696	; 0x1640
 8000dbc:	f7ff ffba 	bl	8000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dc0:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000dc4:	f7ff ffca 	bl	8000d5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14mainScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dc8:	f104 0014 	add.w	r0, r4, #20
 8000dcc:	f7ff ffdc 	bl	8000d88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19mainScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	bd10      	pop	{r4, pc}
 8000dd4:	0801d5c4 	.word	0x0801d5c4

08000dd8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000dd8:	b508      	push	{r3, lr}
 8000dda:	4802      	ldr	r0, [pc, #8]	; (8000de4 <__tcf_0+0xc>)
 8000ddc:	f7ff ffe8 	bl	8000db0 <_ZN12FrontendHeapD1Ev>
 8000de0:	bd08      	pop	{r3, pc}
 8000de2:	bf00      	nop
 8000de4:	2000019c 	.word	0x2000019c

08000de8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000de8:	b510      	push	{r4, lr}
 8000dea:	4604      	mov	r4, r0
 8000dec:	f7ff ffe0 	bl	8000db0 <_ZN12FrontendHeapD1Ev>
 8000df0:	4620      	mov	r0, r4
 8000df2:	f241 71b4 	movw	r1, #6068	; 0x17b4
 8000df6:	f01a fe62 	bl	801babe <_ZdlPvj>
 8000dfa:	4620      	mov	r0, r4
 8000dfc:	bd10      	pop	{r4, pc}
	...

08000e00 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e00:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e04:	f001 f920 	bl	8002048 <_ZN14BitmapDatabase11getInstanceEv>
 8000e08:	4605      	mov	r5, r0
 8000e0a:	f001 f921 	bl	8002050 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e0e:	2400      	movs	r4, #0
 8000e10:	4601      	mov	r1, r0
 8000e12:	4623      	mov	r3, r4
 8000e14:	4628      	mov	r0, r5
 8000e16:	4622      	mov	r2, r4
 8000e18:	9400      	str	r4, [sp, #0]
 8000e1a:	f00e fdff 	bl	800fa1c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e1e:	4b25      	ldr	r3, [pc, #148]	; (8000eb4 <touchgfx_init+0xb4>)
 8000e20:	4a25      	ldr	r2, [pc, #148]	; (8000eb8 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8000e22:	4d26      	ldr	r5, [pc, #152]	; (8000ebc <touchgfx_init+0xbc>)
 8000e24:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e26:	4620      	mov	r0, r4
 8000e28:	f001 fcfa 	bl	8002820 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e2c:	4824      	ldr	r0, [pc, #144]	; (8000ec0 <touchgfx_init+0xc0>)
 8000e2e:	f00e fd37 	bl	800f8a0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e32:	782b      	ldrb	r3, [r5, #0]
 8000e34:	f3bf 8f5b 	dmb	ish
 8000e38:	07db      	lsls	r3, r3, #31
 8000e3a:	d434      	bmi.n	8000ea6 <touchgfx_init+0xa6>
 8000e3c:	4628      	mov	r0, r5
 8000e3e:	f01a fe40 	bl	801bac2 <__cxa_guard_acquire>
 8000e42:	b380      	cbz	r0, 8000ea6 <touchgfx_init+0xa6>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000e44:	4c1f      	ldr	r4, [pc, #124]	; (8000ec4 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000e46:	4b20      	ldr	r3, [pc, #128]	; (8000ec8 <touchgfx_init+0xc8>)
 8000e48:	6023      	str	r3, [r4, #0]
 8000e4a:	f504 57b2 	add.w	r7, r4, #5696	; 0x1640
 8000e4e:	f107 061c 	add.w	r6, r7, #28
 8000e52:	f104 0014 	add.w	r0, r4, #20
 8000e56:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000e5a:	6060      	str	r0, [r4, #4]
 8000e5c:	f8c4 8008 	str.w	r8, [r4, #8]
 8000e60:	60e7      	str	r7, [r4, #12]
 8000e62:	6126      	str	r6, [r4, #16]
 8000e64:	f008 fb5c 	bl	8009520 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000e68:	4b18      	ldr	r3, [pc, #96]	; (8000ecc <touchgfx_init+0xcc>)
 8000e6a:	6163      	str	r3, [r4, #20]
 8000e6c:	4640      	mov	r0, r8
 8000e6e:	f008 fb57 	bl	8009520 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000e72:	4b17      	ldr	r3, [pc, #92]	; (8000ed0 <touchgfx_init+0xd0>)
 8000e74:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000e76:	4638      	mov	r0, r7
 8000e78:	f008 fb52 	bl	8009520 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000e7c:	4b15      	ldr	r3, [pc, #84]	; (8000ed4 <touchgfx_init+0xd4>)
 8000e7e:	603b      	str	r3, [r7, #0]
 8000e80:	f107 0014 	add.w	r0, r7, #20
 8000e84:	f002 fe98 	bl	8003bb8 <_ZN5ModelC1Ev>
 8000e88:	4622      	mov	r2, r4
 8000e8a:	f107 0114 	add.w	r1, r7, #20
 8000e8e:	4630      	mov	r0, r6
 8000e90:	f002 fe80 	bl	8003b94 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000e94:	4630      	mov	r0, r6
 8000e96:	f001 f995 	bl	80021c4 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8000e9a:	4628      	mov	r0, r5
 8000e9c:	f01a fe1d 	bl	801bada <__cxa_guard_release>
 8000ea0:	480d      	ldr	r0, [pc, #52]	; (8000ed8 <touchgfx_init+0xd8>)
 8000ea2:	f01a fe59 	bl	801bb58 <atexit>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000ea6:	480d      	ldr	r0, [pc, #52]	; (8000edc <touchgfx_init+0xdc>)
}
 8000ea8:	b002      	add	sp, #8
 8000eaa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000eae:	f7ff bc65 	b.w	800077c <_ZN11TouchGFXHAL10initializeEv>
 8000eb2:	bf00      	nop
 8000eb4:	20013564 	.word	0x20013564
 8000eb8:	200025f0 	.word	0x200025f0
 8000ebc:	20000198 	.word	0x20000198
 8000ec0:	20000008 	.word	0x20000008
 8000ec4:	2000019c 	.word	0x2000019c
 8000ec8:	0801d5c4 	.word	0x0801d5c4
 8000ecc:	0801d528 	.word	0x0801d528
 8000ed0:	0801d55c 	.word	0x0801d55c
 8000ed4:	0801d590 	.word	0x0801d590
 8000ed8:	08000dd9 	.word	0x08000dd9
 8000edc:	20002574 	.word	0x20002574

08000ee0 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000ee0:	4801      	ldr	r0, [pc, #4]	; (8000ee8 <touchgfx_taskEntry+0x8>)
 8000ee2:	f7ff bc4d 	b.w	8000780 <_ZN11TouchGFXHAL9taskEntryEv>
 8000ee6:	bf00      	nop
 8000ee8:	20002574 	.word	0x20002574

08000eec <_GLOBAL__sub_I_touchgfx_init>:
}
 8000eec:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000eee:	4c24      	ldr	r4, [pc, #144]	; (8000f80 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static STM32DMA dma;
 8000ef0:	4e24      	ldr	r6, [pc, #144]	; (8000f84 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000ef2:	4b25      	ldr	r3, [pc, #148]	; (8000f88 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static LCD16bpp display;
 8000ef4:	4d25      	ldr	r5, [pc, #148]	; (8000f8c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 8000ef6:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000ef8:	4630      	mov	r0, r6
 8000efa:	f7ff fed3 	bl	8000ca4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000efe:	4628      	mov	r0, r5
 8000f00:	f011 fe5c 	bl	8012bbc <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f04:	4b22      	ldr	r3, [pc, #136]	; (8000f90 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
        instance = this;
 8000f06:	4823      	ldr	r0, [pc, #140]	; (8000f94 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          lastRenderMethod(HARDWARE)
 8000f08:	60dc      	str	r4, [r3, #12]
 8000f0a:	2200      	movs	r2, #0
 8000f0c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000f10:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f14:	4c20      	ldr	r4, [pc, #128]	; (8000f98 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f16:	4921      	ldr	r1, [pc, #132]	; (8000f9c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        instance = this;
 8000f18:	6003      	str	r3, [r0, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f1a:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f1c:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f20:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f22:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f26:	4c1e      	ldr	r4, [pc, #120]	; (8000fa0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 8000f28:	6759      	str	r1, [r3, #116]	; 0x74
 8000f2a:	2101      	movs	r1, #1
 8000f2c:	e9c3 2204 	strd	r2, r2, [r3, #16]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 8000f30:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000f34:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000f38:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000f3c:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000f40:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000f44:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000f48:	851a      	strh	r2, [r3, #40]	; 0x28
 8000f4a:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f4e:	62da      	str	r2, [r3, #44]	; 0x2c
 8000f50:	861a      	strh	r2, [r3, #48]	; 0x30
 8000f52:	661a      	str	r2, [r3, #96]	; 0x60
 8000f54:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000f58:	671a      	str	r2, [r3, #112]	; 0x70
 8000f5a:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000f5e:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f62:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f64:	4c0f      	ldr	r4, [pc, #60]	; (8000fa4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000f66:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f6a:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8000f6e:	8020      	strh	r0, [r4, #0]
 8000f70:	4c0d      	ldr	r4, [pc, #52]	; (8000fa8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000f72:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000f74:	480d      	ldr	r0, [pc, #52]	; (8000fac <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000f76:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000f78:	4a0d      	ldr	r2, [pc, #52]	; (8000fb0 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 8000f7a:	601a      	str	r2, [r3, #0]
}
 8000f7c:	bd70      	pop	{r4, r5, r6, pc}
 8000f7e:	bf00      	nop
 8000f80:	20001950 	.word	0x20001950
 8000f84:	20001954 	.word	0x20001954
 8000f88:	0801d020 	.word	0x0801d020
 8000f8c:	200025f4 	.word	0x200025f4
 8000f90:	20002574 	.word	0x20002574
 8000f94:	20013508 	.word	0x20013508
 8000f98:	200134fc 	.word	0x200134fc
 8000f9c:	01000001 	.word	0x01000001
 8000fa0:	20013502 	.word	0x20013502
 8000fa4:	200134fe 	.word	0x200134fe
 8000fa8:	20013504 	.word	0x20013504
 8000fac:	20013500 	.word	0x20013500
 8000fb0:	0801d1ac 	.word	0x0801d1ac

08000fb4 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8000fb4:	4801      	ldr	r0, [pc, #4]	; (8000fbc <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8000fb6:	f7ff be59 	b.w	8000c6c <_ZN8STM32DMAD1Ev>
 8000fba:	bf00      	nop
 8000fbc:	20001954 	.word	0x20001954

08000fc0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000fc0:	4b03      	ldr	r3, [pc, #12]	; (8000fd0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8000fc2:	2290      	movs	r2, #144	; 0x90
 8000fc4:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8000fc8:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8000fcc:	4770      	bx	lr
 8000fce:	bf00      	nop
 8000fd0:	e000e100 	.word	0xe000e100

08000fd4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000fd4:	4a09      	ldr	r2, [pc, #36]	; (8000ffc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8000fd6:	490a      	ldr	r1, [pc, #40]	; (8001000 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8000fd8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000fda:	480a      	ldr	r0, [pc, #40]	; (8001004 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000fdc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000fe0:	3b01      	subs	r3, #1
 8000fe2:	b29b      	uxth	r3, r3
 8000fe4:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000fe6:	6911      	ldr	r1, [r2, #16]
 8000fe8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000fec:	3901      	subs	r1, #1
 8000fee:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8000ff0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8000ff2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000ff4:	f043 0301 	orr.w	r3, r3, #1
 8000ff8:	6353      	str	r3, [r2, #52]	; 0x34
}
 8000ffa:	4770      	bx	lr
 8000ffc:	40016800 	.word	0x40016800
 8001000:	2000266e 	.word	0x2000266e
 8001004:	2000266c 	.word	0x2000266c

08001008 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001008:	4b01      	ldr	r3, [pc, #4]	; (8001010 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800100a:	6a98      	ldr	r0, [r3, #40]	; 0x28
}
 800100c:	4770      	bx	lr
 800100e:	bf00      	nop
 8001010:	40016884 	.word	0x40016884

08001014 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001014:	4b02      	ldr	r3, [pc, #8]	; (8001020 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001016:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001018:	6299      	str	r1, [r3, #40]	; 0x28
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800101a:	f843 2c60 	str.w	r2, [r3, #-96]
}
 800101e:	4770      	bx	lr
 8001020:	40016884 	.word	0x40016884

08001024 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001024:	b570      	push	{r4, r5, r6, lr}
 8001026:	4604      	mov	r4, r0
    HAL::initialize();
 8001028:	f008 fd9b 	bl	8009b62 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800102c:	6823      	ldr	r3, [r4, #0]
 800102e:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 8001030:	f00b fd34 	bl	800ca9c <_ZN8touchgfx11Application11getInstanceEv>
 8001034:	4601      	mov	r1, r0
 8001036:	4620      	mov	r0, r4
 8001038:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800103a:	6823      	ldr	r3, [r4, #0]
 800103c:	4a05      	ldr	r2, [pc, #20]	; (8001054 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800103e:	f8d3 5084 	ldr.w	r5, [r3, #132]	; 0x84
 8001042:	4620      	mov	r0, r4
 8001044:	46ac      	mov	ip, r5
 8001046:	2300      	movs	r3, #0
}
 8001048:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800104c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001050:	4760      	bx	ip
 8001052:	bf00      	nop
 8001054:	d0025800 	.word	0xd0025800

08001058 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001058:	f008 bd6a 	b.w	8009b30 <_ZN8touchgfx3HAL10beginFrameEv>

0800105c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800105c:	f008 bd74 	b.w	8009b48 <_ZN8touchgfx3HAL8endFrameEv>

08001060 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001060:	f008 bd30 	b.w	8009ac4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001064 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001064:	f008 be8b 	b.w	8009d7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001068 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001068:	4b03      	ldr	r3, [pc, #12]	; (8001078 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800106a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800106e:	609a      	str	r2, [r3, #8]
 8001070:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001074:	609a      	str	r2, [r3, #8]
}
 8001076:	4770      	bx	lr
 8001078:	e000e100 	.word	0xe000e100

0800107c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800107c:	4b08      	ldr	r3, [pc, #32]	; (80010a0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800107e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001082:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001086:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800108a:	f3bf 8f6f 	isb	sy
 800108e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001092:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001096:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800109a:	f3bf 8f6f 	isb	sy
}
 800109e:	4770      	bx	lr
 80010a0:	e000e100 	.word	0xe000e100

080010a4 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
        if (LTDC->LIPCR == lcd_int_active_line)
 80010a4:	4b13      	ldr	r3, [pc, #76]	; (80010f4 <HAL_LTDC_LineEventCallback+0x50>)
 80010a6:	4a14      	ldr	r2, [pc, #80]	; (80010f8 <HAL_LTDC_LineEventCallback+0x54>)
 80010a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80010aa:	8811      	ldrh	r1, [r2, #0]
 80010ac:	428b      	cmp	r3, r1
    {
 80010ae:	b510      	push	{r4, lr}
 80010b0:	4c12      	ldr	r4, [pc, #72]	; (80010fc <HAL_LTDC_LineEventCallback+0x58>)
        if (LTDC->LIPCR == lcd_int_active_line)
 80010b2:	d113      	bne.n	80010dc <HAL_LTDC_LineEventCallback+0x38>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80010b4:	4b12      	ldr	r3, [pc, #72]	; (8001100 <HAL_LTDC_LineEventCallback+0x5c>)
 80010b6:	8819      	ldrh	r1, [r3, #0]
 80010b8:	f004 fcbe 	bl	8005a38 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80010bc:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80010be:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 80010c2:	3301      	adds	r3, #1
 80010c4:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80010c8:	f7ff fc46 	bl	8000958 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80010cc:	6820      	ldr	r0, [r4, #0]
 80010ce:	f009 fb55 	bl	800a77c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 80010d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80010d6:	2000      	movs	r0, #0
 80010d8:	f7ff bb34 	b.w	8000744 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80010dc:	f004 fcac 	bl	8005a38 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 80010e0:	2000      	movs	r0, #0
 80010e2:	f7ff fb30 	bl	8000746 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
        return instance;
 80010e6:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80010e8:	6803      	ldr	r3, [r0, #0]
    }
 80010ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80010ee:	6a1b      	ldr	r3, [r3, #32]
 80010f0:	4718      	bx	r3
 80010f2:	bf00      	nop
 80010f4:	40016800 	.word	0x40016800
 80010f8:	2000266e 	.word	0x2000266e
 80010fc:	20013508 	.word	0x20013508
 8001100:	2000266c 	.word	0x2000266c

08001104 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001104:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001106:	4b06      	ldr	r3, [pc, #24]	; (8001120 <SPI5_Write+0x1c>)
{
 8001108:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800110c:	681b      	ldr	r3, [r3, #0]
 800110e:	4805      	ldr	r0, [pc, #20]	; (8001124 <SPI5_Write+0x20>)
 8001110:	2201      	movs	r2, #1
 8001112:	f10d 0106 	add.w	r1, sp, #6
 8001116:	f005 f9da 	bl	80064ce <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800111a:	b003      	add	sp, #12
 800111c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001120:	20000010 	.word	0x20000010
 8001124:	200137f8 	.word	0x200137f8

08001128 <HAL_UART_RxCpltCallback>:
	HAL_UART_Receive_IT(&huart2, Rx, 50);
 8001128:	4902      	ldr	r1, [pc, #8]	; (8001134 <HAL_UART_RxCpltCallback+0xc>)
 800112a:	4803      	ldr	r0, [pc, #12]	; (8001138 <HAL_UART_RxCpltCallback+0x10>)
 800112c:	2232      	movs	r2, #50	; 0x32
 800112e:	f005 be5f 	b.w	8006df0 <HAL_UART_Receive_IT>
 8001132:	bf00      	nop
 8001134:	20013900 	.word	0x20013900
 8001138:	20013978 	.word	0x20013978

0800113c <SystemClock_Config>:
{
 800113c:	b530      	push	{r4, r5, lr}
 800113e:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001140:	2210      	movs	r2, #16
 8001142:	2100      	movs	r1, #0
 8001144:	a80a      	add	r0, sp, #40	; 0x28
 8001146:	f01a fd75 	bl	801bc34 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800114a:	2214      	movs	r2, #20
 800114c:	2100      	movs	r1, #0
 800114e:	a803      	add	r0, sp, #12
 8001150:	f01a fd70 	bl	801bc34 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001154:	2230      	movs	r2, #48	; 0x30
 8001156:	2100      	movs	r1, #0
 8001158:	a814      	add	r0, sp, #80	; 0x50
 800115a:	f01a fd6b 	bl	801bc34 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800115e:	2400      	movs	r4, #0
 8001160:	4b22      	ldr	r3, [pc, #136]	; (80011ec <SystemClock_Config+0xb0>)
 8001162:	9401      	str	r4, [sp, #4]
 8001164:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001166:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800116a:	641a      	str	r2, [r3, #64]	; 0x40
 800116c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800116e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001172:	9301      	str	r3, [sp, #4]
 8001174:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001176:	4b1e      	ldr	r3, [pc, #120]	; (80011f0 <SystemClock_Config+0xb4>)
 8001178:	9402      	str	r4, [sp, #8]
 800117a:	681a      	ldr	r2, [r3, #0]
 800117c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001180:	601a      	str	r2, [r3, #0]
 8001182:	681b      	ldr	r3, [r3, #0]
 8001184:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001188:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800118a:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800118c:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800118e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001192:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001196:	2502      	movs	r5, #2
 8001198:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 180;
 800119c:	2104      	movs	r1, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800119e:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 180;
 80011a2:	23b4      	movs	r3, #180	; 0xb4
 80011a4:	e9cd 1310 	strd	r1, r3, [sp, #64]	; 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011a8:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 3;
 80011aa:	2303      	movs	r3, #3
 80011ac:	9313      	str	r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80011ae:	9512      	str	r5, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011b0:	f004 fc9c 	bl	8005aec <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80011b4:	f004 fc5e 	bl	8005a74 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80011b8:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80011ba:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80011be:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 80011c2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80011c6:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80011ca:	2105      	movs	r1, #5
 80011cc:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80011ce:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80011d0:	f004 fe62 	bl	8005e98 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80011d4:	2308      	movs	r3, #8
 80011d6:	9314      	str	r3, [sp, #80]	; 0x50
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80011d8:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 50;
 80011da:	2332      	movs	r3, #50	; 0x32
 80011dc:	9318      	str	r3, [sp, #96]	; 0x60
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
 80011de:	951a      	str	r5, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 80011e0:	941d      	str	r4, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80011e2:	f004 ff33 	bl	800604c <HAL_RCCEx_PeriphCLKConfig>
}
 80011e6:	b021      	add	sp, #132	; 0x84
 80011e8:	bd30      	pop	{r4, r5, pc}
 80011ea:	bf00      	nop
 80011ec:	40023800 	.word	0x40023800
 80011f0:	40007000 	.word	0x40007000

080011f4 <main>:
{
 80011f4:	b580      	push	{r7, lr}
 80011f6:	b09a      	sub	sp, #104	; 0x68
  HAL_Init();
 80011f8:	f003 fba6 	bl	8004948 <HAL_Init>
  SystemClock_Config();
 80011fc:	f7ff ff9e 	bl	800113c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001200:	2214      	movs	r2, #20
 8001202:	2100      	movs	r1, #0
 8001204:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001206:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001208:	f01a fd14 	bl	801bc34 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800120c:	4bc3      	ldr	r3, [pc, #780]	; (800151c <main+0x328>)
 800120e:	9400      	str	r4, [sp, #0]
 8001210:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001212:	48c3      	ldr	r0, [pc, #780]	; (8001520 <main+0x32c>)
  hi2c3.Instance = I2C3;
 8001214:	4dc3      	ldr	r5, [pc, #780]	; (8001524 <main+0x330>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001216:	f042 0220 	orr.w	r2, r2, #32
 800121a:	631a      	str	r2, [r3, #48]	; 0x30
 800121c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800121e:	f002 0220 	and.w	r2, r2, #32
 8001222:	9200      	str	r2, [sp, #0]
 8001224:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001226:	9401      	str	r4, [sp, #4]
 8001228:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800122a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800122e:	631a      	str	r2, [r3, #48]	; 0x30
 8001230:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001232:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001236:	9201      	str	r2, [sp, #4]
 8001238:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800123a:	9402      	str	r4, [sp, #8]
 800123c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800123e:	f042 0204 	orr.w	r2, r2, #4
 8001242:	631a      	str	r2, [r3, #48]	; 0x30
 8001244:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001246:	f002 0204 	and.w	r2, r2, #4
 800124a:	9202      	str	r2, [sp, #8]
 800124c:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800124e:	9403      	str	r4, [sp, #12]
 8001250:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001252:	f042 0201 	orr.w	r2, r2, #1
 8001256:	631a      	str	r2, [r3, #48]	; 0x30
 8001258:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800125a:	f002 0201 	and.w	r2, r2, #1
 800125e:	9203      	str	r2, [sp, #12]
 8001260:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001262:	9404      	str	r4, [sp, #16]
 8001264:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001266:	f042 0202 	orr.w	r2, r2, #2
 800126a:	631a      	str	r2, [r3, #48]	; 0x30
 800126c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800126e:	f002 0202 	and.w	r2, r2, #2
 8001272:	9204      	str	r2, [sp, #16]
 8001274:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001276:	9405      	str	r4, [sp, #20]
 8001278:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800127a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800127e:	631a      	str	r2, [r3, #48]	; 0x30
 8001280:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001282:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001286:	9205      	str	r2, [sp, #20]
 8001288:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800128a:	9406      	str	r4, [sp, #24]
 800128c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800128e:	f042 0210 	orr.w	r2, r2, #16
 8001292:	631a      	str	r2, [r3, #48]	; 0x30
 8001294:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001296:	f002 0210 	and.w	r2, r2, #16
 800129a:	9206      	str	r2, [sp, #24]
 800129c:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800129e:	9407      	str	r4, [sp, #28]
 80012a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012a2:	f042 0208 	orr.w	r2, r2, #8
 80012a6:	631a      	str	r2, [r3, #48]	; 0x30
 80012a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012aa:	f003 0308 	and.w	r3, r3, #8
 80012ae:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80012b0:	4622      	mov	r2, r4
 80012b2:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80012b4:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80012b6:	f003 fde1 	bl	8004e7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80012ba:	4622      	mov	r2, r4
 80012bc:	489a      	ldr	r0, [pc, #616]	; (8001528 <main+0x334>)
 80012be:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80012c2:	f003 fddb 	bl	8004e7c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012c6:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80012c8:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012ca:	f04f 0904 	mov.w	r9, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012ce:	4894      	ldr	r0, [pc, #592]	; (8001520 <main+0x32c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012d0:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012d2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012d4:	e9cd 960d 	strd	r9, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80012d8:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012da:	f003 fce5 	bl	8004ca8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80012de:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80012e0:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80012e4:	4890      	ldr	r0, [pc, #576]	; (8001528 <main+0x334>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012e6:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80012ea:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80012ee:	f003 fcdb 	bl	8004ca8 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80012f2:	488e      	ldr	r0, [pc, #568]	; (800152c <main+0x338>)
 80012f4:	4b8e      	ldr	r3, [pc, #568]	; (8001530 <main+0x33c>)
 80012f6:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80012f8:	f003 fbb8 	bl	8004a6c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80012fc:	4a8d      	ldr	r2, [pc, #564]	; (8001534 <main+0x340>)
 80012fe:	4b8e      	ldr	r3, [pc, #568]	; (8001538 <main+0x344>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001300:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001302:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001306:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001308:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800130c:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001310:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001314:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001318:	f003 ff92 	bl	8005240 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800131c:	2110      	movs	r1, #16
 800131e:	4628      	mov	r0, r5
 8001320:	f004 f9ce 	bl	80056c0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001324:	4621      	mov	r1, r4
 8001326:	4628      	mov	r0, r5
 8001328:	f004 f9e9 	bl	80056fe <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 800132c:	4883      	ldr	r0, [pc, #524]	; (800153c <main+0x348>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800132e:	4984      	ldr	r1, [pc, #528]	; (8001540 <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001330:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001332:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001336:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800133a:	f44f 7500 	mov.w	r5, #512	; 0x200
 800133e:	2318      	movs	r3, #24
 8001340:	e9c0 5306 	strd	r5, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001344:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001346:	4d7f      	ldr	r5, [pc, #508]	; (8001544 <main+0x350>)
  hspi5.Init.CRCPolynomial = 10;
 8001348:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800134a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800134e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001352:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001356:	f005 f87d 	bl	8006454 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800135a:	4b7b      	ldr	r3, [pc, #492]	; (8001548 <main+0x354>)
  SdramTiming.LoadToActiveDelay = 2;
 800135c:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800135e:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001362:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001366:	2340      	movs	r3, #64	; 0x40
 8001368:	e9c5 c304 	strd	ip, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800136c:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001370:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001374:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001378:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800137c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  SdramTiming.WriteRecoveryTime = 3;
 8001380:	f04f 0803 	mov.w	r8, #3
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001384:	62ab      	str	r3, [r5, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001386:	a90d      	add	r1, sp, #52	; 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001388:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800138a:	4628      	mov	r0, r5
  SdramTiming.SelfRefreshTime = 4;
 800138c:	e9cd 390e 	strd	r3, r9, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 8001390:	9310      	str	r3, [sp, #64]	; 0x40
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001392:	f04f 0a08 	mov.w	sl, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001396:	e9c5 4902 	strd	r4, r9, [r5, #8]
  SdramTiming.RPDelay = 2;
 800139a:	e9cd 8711 	strd	r8, r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 800139e:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80013a0:	f004 ff7e 	bl	80062a0 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80013a4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80013a8:	a909      	add	r1, sp, #36	; 0x24
 80013aa:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 80013ac:	e9cd a60a 	strd	sl, r6, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 80013b0:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 80013b2:	9609      	str	r6, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80013b4:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80013b6:	f004 ff93 	bl	80062e0 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80013ba:	4630      	mov	r0, r6
 80013bc:	f003 faf0 	bl	80049a0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80013c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80013c4:	a909      	add	r1, sp, #36	; 0x24
 80013c6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80013c8:	e9cd 7a09 	strd	r7, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80013cc:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80013d0:	f004 ff86 	bl	80062e0 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80013d4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80013d8:	a909      	add	r1, sp, #36	; 0x24
 80013da:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80013dc:	e9cd 8a09 	strd	r8, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80013e0:	e9cd 940b 	strd	r9, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80013e4:	f004 ff7c 	bl	80062e0 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80013e8:	f44f 730c 	mov.w	r3, #560	; 0x230
 80013ec:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80013ee:	9b08      	ldr	r3, [sp, #32]
 80013f0:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80013f2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80013f6:	a909      	add	r1, sp, #36	; 0x24
 80013f8:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80013fa:	e9cd 9a09 	strd	r9, sl, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80013fe:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001400:	f004 ff6e 	bl	80062e0 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 8001404:	f240 516a 	movw	r1, #1386	; 0x56a
 8001408:	4628      	mov	r0, r5
 800140a:	f004 ff80 	bl	800630e <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800140e:	2234      	movs	r2, #52	; 0x34
 8001410:	4621      	mov	r1, r4
 8001412:	eb0d 0002 	add.w	r0, sp, r2
 8001416:	f01a fc0d 	bl	801bc34 <memset>
  hltdc.Instance = LTDC;
 800141a:	4d4c      	ldr	r5, [pc, #304]	; (800154c <main+0x358>)
 800141c:	4b4c      	ldr	r3, [pc, #304]	; (8001550 <main+0x35c>)
  hltdc.Init.Backcolor.Blue = 0;
 800141e:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001420:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001424:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001426:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800142a:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 800142c:	f240 1e0d 	movw	lr, #269	; 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 8001430:	e9c5 3807 	strd	r3, r8, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001434:	f240 1343 	movw	r3, #323	; 0x143
 8001438:	e9c5 e309 	strd	lr, r3, [r5, #36]	; 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800143c:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800143e:	f240 1347 	movw	r3, #327	; 0x147
 8001442:	f240 1917 	movw	r9, #279	; 0x117
 8001446:	e9c5 930b 	strd	r9, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800144a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800144e:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 8001450:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001454:	f004 f9f8 	bl	8005848 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001458:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 800145a:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 800145c:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001460:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 8001464:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001466:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 800146a:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800146e:	e9cd a114 	strd	sl, r1, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 8001472:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001476:	a90d      	add	r1, sp, #52	; 0x34
 8001478:	4622      	mov	r2, r4
 800147a:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800147c:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 8001480:	4d34      	ldr	r5, [pc, #208]	; (8001554 <main+0x360>)
  pLayerCfg.ImageHeight = 320;
 8001482:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 8001484:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001486:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 800148a:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800148e:	f004 faa6 	bl	80059de <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001492:	4b31      	ldr	r3, [pc, #196]	; (8001558 <main+0x364>)
 8001494:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001496:	681b      	ldr	r3, [r3, #0]
 8001498:	4798      	blx	r3
  LcdDrv->DisplayOff();
 800149a:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 800149c:	4d2f      	ldr	r5, [pc, #188]	; (800155c <main+0x368>)
  LcdDrv->DisplayOff();
 800149e:	68db      	ldr	r3, [r3, #12]
 80014a0:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 80014a2:	4b2f      	ldr	r3, [pc, #188]	; (8001560 <main+0x36c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80014a4:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80014a8:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80014ac:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 80014ae:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 80014b2:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80014b6:	f003 fafb 	bl	8004ab0 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80014ba:	4631      	mov	r1, r6
 80014bc:	4628      	mov	r0, r5
 80014be:	f003 fbaf 	bl	8004c20 <HAL_DMA2D_ConfigLayer>
  huart2.Instance = USART2;
 80014c2:	4d28      	ldr	r5, [pc, #160]	; (8001564 <main+0x370>)
  huart2.Init.BaudRate = 115200;
 80014c4:	4a28      	ldr	r2, [pc, #160]	; (8001568 <main+0x374>)
  huart2.Init.Parity = UART_PARITY_NONE;
 80014c6:	612c      	str	r4, [r5, #16]
  huart2.Init.BaudRate = 115200;
 80014c8:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 80014cc:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80014d0:	4628      	mov	r0, r5
  huart2.Init.Mode = UART_MODE_TX_RX;
 80014d2:	230c      	movs	r3, #12
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80014d4:	e9c5 3405 	strd	r3, r4, [r5, #20]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80014d8:	e9c5 4402 	strd	r4, r4, [r5, #8]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80014dc:	61ec      	str	r4, [r5, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80014de:	f005 fbfd 	bl	8006cdc <HAL_UART_Init>
  MX_TouchGFX_Init();
 80014e2:	f7ff f882 	bl	80005ea <MX_TouchGFX_Init>
  HAL_UART_Receive_IT(&huart2, Rx, 50);
 80014e6:	4921      	ldr	r1, [pc, #132]	; (800156c <main+0x378>)
 80014e8:	2232      	movs	r2, #50	; 0x32
 80014ea:	4628      	mov	r0, r5
 80014ec:	f005 fc80 	bl	8006df0 <HAL_UART_Receive_IT>
  osKernelInitialize();
 80014f0:	f005 fe2e 	bl	8007150 <osKernelInitialize>
  chamberDataQueueHandle = osMessageQueueNew (3, sizeof(uint8_t), &chamberDataQueue_attributes);
 80014f4:	4a1e      	ldr	r2, [pc, #120]	; (8001570 <main+0x37c>)
 80014f6:	4631      	mov	r1, r6
 80014f8:	4640      	mov	r0, r8
 80014fa:	f005 ff99 	bl	8007430 <osMessageQueueNew>
 80014fe:	4b1d      	ldr	r3, [pc, #116]	; (8001574 <main+0x380>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001500:	4a1d      	ldr	r2, [pc, #116]	; (8001578 <main+0x384>)
  chamberDataQueueHandle = osMessageQueueNew (3, sizeof(uint8_t), &chamberDataQueue_attributes);
 8001502:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001504:	4621      	mov	r1, r4
 8001506:	481d      	ldr	r0, [pc, #116]	; (800157c <main+0x388>)
 8001508:	f005 fe5c 	bl	80071c4 <osThreadNew>
 800150c:	4b1c      	ldr	r3, [pc, #112]	; (8001580 <main+0x38c>)
  dataRequestHandle = osThreadNew(dataRequestTask, NULL, &dataRequest_attributes);
 800150e:	4a1d      	ldr	r2, [pc, #116]	; (8001584 <main+0x390>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001510:	6018      	str	r0, [r3, #0]
  dataRequestHandle = osThreadNew(dataRequestTask, NULL, &dataRequest_attributes);
 8001512:	4621      	mov	r1, r4
 8001514:	481c      	ldr	r0, [pc, #112]	; (8001588 <main+0x394>)
 8001516:	f005 fe55 	bl	80071c4 <osThreadNew>
 800151a:	e037      	b.n	800158c <main+0x398>
 800151c:	40023800 	.word	0x40023800
 8001520:	40020800 	.word	0x40020800
 8001524:	200137a4 	.word	0x200137a4
 8001528:	40020c00 	.word	0x40020c00
 800152c:	20013850 	.word	0x20013850
 8001530:	40023000 	.word	0x40023000
 8001534:	40005c00 	.word	0x40005c00
 8001538:	000186a0 	.word	0x000186a0
 800153c:	200137f8 	.word	0x200137f8
 8001540:	40015000 	.word	0x40015000
 8001544:	200139bc 	.word	0x200139bc
 8001548:	a0000140 	.word	0xa0000140
 800154c:	20013858 	.word	0x20013858
 8001550:	40016800 	.word	0x40016800
 8001554:	20002670 	.word	0x20002670
 8001558:	20000014 	.word	0x20000014
 800155c:	20013938 	.word	0x20013938
 8001560:	4002b000 	.word	0x4002b000
 8001564:	20013978 	.word	0x20013978
 8001568:	40004400 	.word	0x40004400
 800156c:	20013900 	.word	0x20013900
 8001570:	0801d624 	.word	0x0801d624
 8001574:	200139f0 	.word	0x200139f0
 8001578:	0801d600 	.word	0x0801d600
 800157c:	080005ef 	.word	0x080005ef
 8001580:	20013934 	.word	0x20013934
 8001584:	0801d63c 	.word	0x0801d63c
 8001588:	08001951 	.word	0x08001951
 800158c:	4b02      	ldr	r3, [pc, #8]	; (8001598 <main+0x3a4>)
 800158e:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001590:	f005 fdf8 	bl	8007184 <osKernelStart>
  while (1)
 8001594:	e7fe      	b.n	8001594 <main+0x3a0>
 8001596:	bf00      	nop
 8001598:	200139b8 	.word	0x200139b8

0800159c <IOE_Init>:
 800159c:	4770      	bx	lr

0800159e <IOE_ITConfig>:
 800159e:	4770      	bx	lr

080015a0 <IOE_Write>:
{
 80015a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 80015a2:	4b09      	ldr	r3, [pc, #36]	; (80015c8 <IOE_Write+0x28>)
 80015a4:	f88d 2017 	strb.w	r2, [sp, #23]
 80015a8:	681b      	ldr	r3, [r3, #0]
 80015aa:	9302      	str	r3, [sp, #8]
 80015ac:	f10d 0217 	add.w	r2, sp, #23
 80015b0:	2301      	movs	r3, #1
 80015b2:	9200      	str	r2, [sp, #0]
 80015b4:	9301      	str	r3, [sp, #4]
 80015b6:	460a      	mov	r2, r1
 80015b8:	4601      	mov	r1, r0
 80015ba:	4804      	ldr	r0, [pc, #16]	; (80015cc <IOE_Write+0x2c>)
 80015bc:	f003 fee8 	bl	8005390 <HAL_I2C_Mem_Write>
}
 80015c0:	b007      	add	sp, #28
 80015c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80015c6:	bf00      	nop
 80015c8:	2000000c 	.word	0x2000000c
 80015cc:	200137a4 	.word	0x200137a4

080015d0 <IOE_Read>:
{
 80015d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80015d2:	2300      	movs	r3, #0
 80015d4:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80015d8:	4b08      	ldr	r3, [pc, #32]	; (80015fc <IOE_Read+0x2c>)
 80015da:	681b      	ldr	r3, [r3, #0]
 80015dc:	9302      	str	r3, [sp, #8]
{
 80015de:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80015e0:	2301      	movs	r3, #1
 80015e2:	f10d 0117 	add.w	r1, sp, #23
 80015e6:	9100      	str	r1, [sp, #0]
 80015e8:	9301      	str	r3, [sp, #4]
 80015ea:	4601      	mov	r1, r0
 80015ec:	4804      	ldr	r0, [pc, #16]	; (8001600 <IOE_Read+0x30>)
 80015ee:	f003 ff5f 	bl	80054b0 <HAL_I2C_Mem_Read>
}
 80015f2:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80015f6:	b007      	add	sp, #28
 80015f8:	f85d fb04 	ldr.w	pc, [sp], #4
 80015fc:	2000000c 	.word	0x2000000c
 8001600:	200137a4 	.word	0x200137a4

08001604 <IOE_ReadMultiple>:
{
 8001604:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001606:	4c08      	ldr	r4, [pc, #32]	; (8001628 <IOE_ReadMultiple+0x24>)
 8001608:	6824      	ldr	r4, [r4, #0]
 800160a:	9200      	str	r2, [sp, #0]
 800160c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001610:	460a      	mov	r2, r1
 8001612:	2301      	movs	r3, #1
 8001614:	4601      	mov	r1, r0
 8001616:	4805      	ldr	r0, [pc, #20]	; (800162c <IOE_ReadMultiple+0x28>)
 8001618:	f003 ff4a 	bl	80054b0 <HAL_I2C_Mem_Read>
}
 800161c:	3800      	subs	r0, #0
 800161e:	bf18      	it	ne
 8001620:	2001      	movne	r0, #1
 8001622:	b004      	add	sp, #16
 8001624:	bd10      	pop	{r4, pc}
 8001626:	bf00      	nop
 8001628:	2000000c 	.word	0x2000000c
 800162c:	200137a4 	.word	0x200137a4

08001630 <IOE_Delay>:
 8001630:	f003 b9b6 	b.w	80049a0 <HAL_Delay>

08001634 <LCD_IO_Init>:
  /* Re- Initialize the SPI communication BUS */
  //SPIx_Init();
}

void LCD_IO_Init(void)
{
 8001634:	b508      	push	{r3, lr}
  /* Set or Reset the control line */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001636:	4806      	ldr	r0, [pc, #24]	; (8001650 <LCD_IO_Init+0x1c>)
 8001638:	2200      	movs	r2, #0
 800163a:	2104      	movs	r1, #4
 800163c:	f003 fc1e 	bl	8004e7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
}
 8001640:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001644:	4802      	ldr	r0, [pc, #8]	; (8001650 <LCD_IO_Init+0x1c>)
 8001646:	2201      	movs	r2, #1
 8001648:	2104      	movs	r1, #4
 800164a:	f003 bc17 	b.w	8004e7c <HAL_GPIO_WritePin>
 800164e:	bf00      	nop
 8001650:	40020800 	.word	0x40020800

08001654 <LCD_IO_WriteData>:

/**
  * @brief  Writes register value.
  */
void LCD_IO_WriteData(uint16_t RegValue) 
{
 8001654:	b538      	push	{r3, r4, r5, lr}
  /* Set WRX to send data */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
  
  /* Reset LCD control line(/CS) and Send data */  
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001656:	4d0b      	ldr	r5, [pc, #44]	; (8001684 <LCD_IO_WriteData+0x30>)
{
 8001658:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800165a:	2201      	movs	r2, #1
 800165c:	480a      	ldr	r0, [pc, #40]	; (8001688 <LCD_IO_WriteData+0x34>)
 800165e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001662:	f003 fc0b 	bl	8004e7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001666:	2200      	movs	r2, #0
 8001668:	2104      	movs	r1, #4
 800166a:	4628      	mov	r0, r5
 800166c:	f003 fc06 	bl	8004e7c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001670:	4620      	mov	r0, r4
 8001672:	f7ff fd47 	bl	8001104 <SPI5_Write>
  
  /* Deselect: Chip Select high */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001676:	4628      	mov	r0, r5
 8001678:	2201      	movs	r2, #1
}
 800167a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800167e:	2104      	movs	r1, #4
 8001680:	f003 bbfc 	b.w	8004e7c <HAL_GPIO_WritePin>
 8001684:	40020800 	.word	0x40020800
 8001688:	40020c00 	.word	0x40020c00

0800168c <LCD_IO_WriteReg>:

/**
  * @brief  Writes register address.
  */
void LCD_IO_WriteReg(uint8_t Reg) 
{
 800168c:	b538      	push	{r3, r4, r5, lr}
  /* Reset WRX to send command */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
  
  /* Reset LCD control line(/CS) and Send command */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800168e:	4d0b      	ldr	r5, [pc, #44]	; (80016bc <LCD_IO_WriteReg+0x30>)
{
 8001690:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001692:	2200      	movs	r2, #0
 8001694:	480a      	ldr	r0, [pc, #40]	; (80016c0 <LCD_IO_WriteReg+0x34>)
 8001696:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800169a:	f003 fbef 	bl	8004e7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800169e:	2200      	movs	r2, #0
 80016a0:	2104      	movs	r1, #4
 80016a2:	4628      	mov	r0, r5
 80016a4:	f003 fbea 	bl	8004e7c <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80016a8:	4620      	mov	r0, r4
 80016aa:	f7ff fd2b 	bl	8001104 <SPI5_Write>
  
  /* Deselect: Chip Select high */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80016ae:	4628      	mov	r0, r5
 80016b0:	2201      	movs	r2, #1
}
 80016b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80016b6:	2104      	movs	r1, #4
 80016b8:	f003 bbe0 	b.w	8004e7c <HAL_GPIO_WritePin>
 80016bc:	40020800 	.word	0x40020800
 80016c0:	40020c00 	.word	0x40020c00

080016c4 <LCD_IO_ReadData>:
  * @param  RegValue Address of the register to read
  * @param  ReadSize Number of bytes to read
  * @retval Content of the register value
  */
uint32_t LCD_IO_ReadData(uint16_t RegValue, uint8_t ReadSize) 
{
 80016c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  uint32_t readvalue = 0;

  /* Select: Chip Select low */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016c6:	4e14      	ldr	r6, [pc, #80]	; (8001718 <LCD_IO_ReadData+0x54>)

  /* Reset WRX to send command */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80016c8:	4f14      	ldr	r7, [pc, #80]	; (800171c <LCD_IO_ReadData+0x58>)
{
 80016ca:	4605      	mov	r5, r0
 80016cc:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016ce:	4630      	mov	r0, r6
 80016d0:	2200      	movs	r2, #0
 80016d2:	2104      	movs	r1, #4
 80016d4:	f003 fbd2 	bl	8004e7c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80016d8:	2200      	movs	r2, #0
 80016da:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80016de:	4638      	mov	r0, r7
 80016e0:	f003 fbcc 	bl	8004e7c <HAL_GPIO_WritePin>
  
  SPI5_Write(RegValue);
 80016e4:	4628      	mov	r0, r5
 80016e6:	f7ff fd0d 	bl	8001104 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80016ea:	4b0d      	ldr	r3, [pc, #52]	; (8001720 <LCD_IO_ReadData+0x5c>)
 80016ec:	480d      	ldr	r0, [pc, #52]	; (8001724 <LCD_IO_ReadData+0x60>)
 80016ee:	681b      	ldr	r3, [r3, #0]
 80016f0:	4622      	mov	r2, r4
 80016f2:	a901      	add	r1, sp, #4
 80016f4:	f005 f87e 	bl	80067f4 <HAL_SPI_Receive>
  
  readvalue = SPI5_Read(ReadSize);

  /* Set WRX to send data */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80016f8:	4638      	mov	r0, r7
 80016fa:	2201      	movs	r2, #1
 80016fc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001700:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001702:	f003 fbbb 	bl	8004e7c <HAL_GPIO_WritePin>

  /* Deselect: Chip Select high */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001706:	4630      	mov	r0, r6
 8001708:	2201      	movs	r2, #1
 800170a:	2104      	movs	r1, #4
 800170c:	f003 fbb6 	bl	8004e7c <HAL_GPIO_WritePin>
  
  return readvalue;
}
 8001710:	4620      	mov	r0, r4
 8001712:	b003      	add	sp, #12
 8001714:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001716:	bf00      	nop
 8001718:	40020800 	.word	0x40020800
 800171c:	40020c00 	.word	0x40020c00
 8001720:	20000010 	.word	0x20000010
 8001724:	200137f8 	.word	0x200137f8

08001728 <LCD_Delay>:
  * @brief  Wait for loop in ms.
  * @param  Delay in ms.
  */
void LCD_Delay(uint32_t Delay)
{
  HAL_Delay(Delay);
 8001728:	f003 b93a 	b.w	80049a0 <HAL_Delay>

0800172c <checkSum>:
#include <string.h>
#include <stdio.h>
#include <stdlib.h>

char *checkSum(char *str)
{
 800172c:	b570      	push	{r4, r5, r6, lr}
 800172e:	4604      	mov	r4, r0
    int l = strlen(str);
 8001730:	f7fe fd5e 	bl	80001f0 <strlen>
    unsigned char b = 0, j, k;
    char ch;

    for (int i = 0; i < l; i++)
 8001734:	2200      	movs	r2, #0
    unsigned char b = 0, j, k;
 8001736:	4613      	mov	r3, r2
    for (int i = 0; i < l; i++)
 8001738:	4282      	cmp	r2, r0
 800173a:	db18      	blt.n	800176e <checkSum+0x42>
        ch = str[i];
        j = ch;
        b = b - j;
    }

    j = b / 16;
 800173c:	091d      	lsrs	r5, r3, #4
    if (j < 10) j += 48;
 800173e:	2b9f      	cmp	r3, #159	; 0x9f
    else j += 55;

    k = b % 16;
 8001740:	f003 030f 	and.w	r3, r3, #15
    if (j < 10) j += 48;
 8001744:	bf94      	ite	ls
 8001746:	3530      	addls	r5, #48	; 0x30
    else j += 55;
 8001748:	3537      	addhi	r5, #55	; 0x37
    if (k < 10) k += 48;
    else k+= 55;
    char *string = malloc(3);
 800174a:	2003      	movs	r0, #3
    if (k < 10) k += 48;
 800174c:	2b09      	cmp	r3, #9
 800174e:	bf94      	ite	ls
 8001750:	f103 0430 	addls.w	r4, r3, #48	; 0x30
    else k+= 55;
 8001754:	f103 0437 	addhi.w	r4, r3, #55	; 0x37
    char *string = malloc(3);
 8001758:	f01a fa4e 	bl	801bbf8 <malloc>
    else j += 55;
 800175c:	b2ed      	uxtb	r5, r5
    char *string = malloc(3);
 800175e:	4606      	mov	r6, r0
    sprintf(string, "%c%c", (char) j, (char) k);
 8001760:	4905      	ldr	r1, [pc, #20]	; (8001778 <checkSum+0x4c>)
 8001762:	4623      	mov	r3, r4
 8001764:	462a      	mov	r2, r5
 8001766:	f01a fe59 	bl	801c41c <siprintf>
    return string;
}
 800176a:	4630      	mov	r0, r6
 800176c:	bd70      	pop	{r4, r5, r6, pc}
        b = b - j;
 800176e:	5ca1      	ldrb	r1, [r4, r2]
 8001770:	1a5b      	subs	r3, r3, r1
 8001772:	b2db      	uxtb	r3, r3
    for (int i = 0; i < l; i++)
 8001774:	3201      	adds	r2, #1
 8001776:	e7df      	b.n	8001738 <checkSum+0xc>
 8001778:	0801d5d0 	.word	0x0801d5d0

0800177c <tempToChar>:
const unsigned char CHAR_TO_NUMBER = 48;
const unsigned char STX = 2;
const unsigned char ETX = 3;

char *tempToChar(float val)
{
 800177c:	b500      	push	{lr}
 800177e:	ed2d 8b02 	vpush	{d8}
	char *temp = malloc(4);
 8001782:	2004      	movs	r0, #4
{
 8001784:	b083      	sub	sp, #12
 8001786:	eeb0 8a40 	vmov.f32	s16, s0
	char *temp = malloc(4);
 800178a:	f01a fa35 	bl	801bbf8 <malloc>
	temp[0] = (char) val / 100;
 800178e:	eefc 7ac8 	vcvt.u32.f32	s15, s16
 8001792:	2164      	movs	r1, #100	; 0x64
 8001794:	edcd 7a01 	vstr	s15, [sp, #4]
 8001798:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800179c:	fbb3 f3f1 	udiv	r3, r3, r1
 80017a0:	7003      	strb	r3, [r0, #0]
	temp[1] = (char) (val - temp[0] * 100) / 10;
 80017a2:	fb13 f301 	smulbb	r3, r3, r1
 80017a6:	ee00 3a10 	vmov	s0, r3
 80017aa:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 80017ae:	210a      	movs	r1, #10
 80017b0:	ee38 0a40 	vsub.f32	s0, s16, s0
 80017b4:	eefc 7ac0 	vcvt.u32.f32	s15, s0
 80017b8:	edcd 7a01 	vstr	s15, [sp, #4]
 80017bc:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80017c0:	fbb3 f3f1 	udiv	r3, r3, r1
 80017c4:	7043      	strb	r3, [r0, #1]
	temp[2] = (char) (val - temp[0] * 100 - temp[1] * 10);
 80017c6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80017ca:	005b      	lsls	r3, r3, #1
 80017cc:	ee07 3a90 	vmov	s15, r3
 80017d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80017d4:	ee30 0a67 	vsub.f32	s0, s0, s15
 80017d8:	eefc 7ac0 	vcvt.u32.f32	s15, s0
 80017dc:	edcd 7a01 	vstr	s15, [sp, #4]
 80017e0:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80017e4:	7083      	strb	r3, [r0, #2]
	temp[3] = (char) (val - temp[0] * 100 - temp[1] * 10 - temp[2]) * 10;
 80017e6:	ee07 3a90 	vmov	s15, r3
 80017ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80017ee:	ee30 0a67 	vsub.f32	s0, s0, s15
 80017f2:	eefc 7ac0 	vcvt.u32.f32	s15, s0
 80017f6:	ee17 3a90 	vmov	r3, s15
 80017fa:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80017fe:	005b      	lsls	r3, r3, #1
 8001800:	70c3      	strb	r3, [r0, #3]
	return temp;
}
 8001802:	b003      	add	sp, #12
 8001804:	ecbd 8b02 	vpop	{d8}
 8001808:	f85d fb04 	ldr.w	pc, [sp], #4

0800180c <humToChar>:

char *humToChar(float val)
{
 800180c:	b500      	push	{lr}
 800180e:	ed2d 8b02 	vpush	{d8}
	char *hum = malloc(2);
 8001812:	2002      	movs	r0, #2
{
 8001814:	b083      	sub	sp, #12
 8001816:	eeb0 8a40 	vmov.f32	s16, s0
	char *hum = malloc(2);
 800181a:	f01a f9ed 	bl	801bbf8 <malloc>
	if (val == -1) return "--";
 800181e:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8001822:	eeb4 8a67 	vcmp.f32	s16, s15
 8001826:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800182a:	d020      	beq.n	800186e <humToChar+0x62>
	hum[0] = (char) val / 100;
 800182c:	eefc 7ac8 	vcvt.u32.f32	s15, s16
 8001830:	2264      	movs	r2, #100	; 0x64
 8001832:	edcd 7a01 	vstr	s15, [sp, #4]
 8001836:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800183a:	fbb3 f3f2 	udiv	r3, r3, r2
 800183e:	7003      	strb	r3, [r0, #0]
	hum[1] = (char) (val - hum[0] * 100) / 10;
 8001840:	fb13 f302 	smulbb	r3, r3, r2
 8001844:	ee07 3a90 	vmov	s15, r3
 8001848:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800184c:	220a      	movs	r2, #10
 800184e:	ee78 7a67 	vsub.f32	s15, s16, s15
 8001852:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001856:	edcd 7a01 	vstr	s15, [sp, #4]
 800185a:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800185e:	fbb3 f3f2 	udiv	r3, r3, r2
 8001862:	7043      	strb	r3, [r0, #1]
	return hum;
}
 8001864:	b003      	add	sp, #12
 8001866:	ecbd 8b02 	vpop	{d8}
 800186a:	f85d fb04 	ldr.w	pc, [sp], #4
	if (val == -1) return "--";
 800186e:	4801      	ldr	r0, [pc, #4]	; (8001874 <humToChar+0x68>)
 8001870:	e7f8      	b.n	8001864 <humToChar+0x58>
 8001872:	bf00      	nop
 8001874:	0801d5d5 	.word	0x0801d5d5

08001878 <prepareRequestString>:

char *prepareRequestString(int isRequestForData, float *data)
{
 8001878:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800187a:	460c      	mov	r4, r1
	char *rs = NULL;
	if (isRequestForData == 0)
 800187c:	4605      	mov	r5, r0
 800187e:	b9d8      	cbnz	r0, 80018b8 <prepareRequestString+0x40>
	{
		rs = malloc(6);
 8001880:	2006      	movs	r0, #6
 8001882:	f01a f9b9 	bl	801bbf8 <malloc>
		rs[0] = STX;
		rs[1] = 0; // co to jest
		rs[2] = 63;
 8001886:	273f      	movs	r7, #63	; 0x3f
		rs[0] = STX;
 8001888:	2302      	movs	r3, #2
		rs = malloc(6);
 800188a:	4604      	mov	r4, r0
		rs[0] = STX;
 800188c:	8003      	strh	r3, [r0, #0]
		rs[2] = 63;
 800188e:	7087      	strb	r7, [r0, #2]

		char *str = malloc(3);
 8001890:	2003      	movs	r0, #3
 8001892:	f01a f9b1 	bl	801bbf8 <malloc>
		sprintf(str, "%c%c", rs[1], rs[2]);
 8001896:	463b      	mov	r3, r7
 8001898:	492c      	ldr	r1, [pc, #176]	; (800194c <prepareRequestString+0xd4>)
		char *str = malloc(3);
 800189a:	4606      	mov	r6, r0
		sprintf(str, "%c%c", rs[1], rs[2]);
 800189c:	462a      	mov	r2, r5
 800189e:	f01a fdbd 	bl	801c41c <siprintf>
		char *cs = checkSum(str);
 80018a2:	4630      	mov	r0, r6
 80018a4:	f7ff ff42 	bl	800172c <checkSum>

		rs[3] = cs[0];
 80018a8:	7803      	ldrb	r3, [r0, #0]
 80018aa:	70e3      	strb	r3, [r4, #3]
		rs[4] = cs[1];
 80018ac:	7843      	ldrb	r3, [r0, #1]
 80018ae:	7123      	strb	r3, [r4, #4]
		rs[5] = ETX;
 80018b0:	2303      	movs	r3, #3
 80018b2:	7163      	strb	r3, [r4, #5]
		free(temp);
		free(hum);
	}

	return rs;
}
 80018b4:	4620      	mov	r0, r4
 80018b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if (isRequestForData == 1)
 80018b8:	2801      	cmp	r0, #1
 80018ba:	d144      	bne.n	8001946 <prepareRequestString+0xce>
		char *temp = tempToChar(data[0]);
 80018bc:	ed91 0a00 	vldr	s0, [r1]
 80018c0:	f7ff ff5c 	bl	800177c <tempToChar>
		char *hum = humToChar(data[1]);
 80018c4:	ed94 0a01 	vldr	s0, [r4, #4]
		char *temp = tempToChar(data[0]);
 80018c8:	4605      	mov	r5, r0
		char *hum = humToChar(data[1]);
 80018ca:	f7ff ff9f 	bl	800180c <humToChar>
 80018ce:	4606      	mov	r6, r0
		rs = malloc(6);
 80018d0:	2006      	movs	r0, #6
 80018d2:	f01a f991 	bl	801bbf8 <malloc>
		rs[0] = STX;
 80018d6:	2302      	movs	r3, #2
 80018d8:	8003      	strh	r3, [r0, #0]
		rs[2] = 'T';
 80018da:	2354      	movs	r3, #84	; 0x54
 80018dc:	7083      	strb	r3, [r0, #2]
		rs[3] = temp[0];
 80018de:	782b      	ldrb	r3, [r5, #0]
 80018e0:	70c3      	strb	r3, [r0, #3]
		rs[4] = temp[1];
 80018e2:	786b      	ldrb	r3, [r5, #1]
 80018e4:	7103      	strb	r3, [r0, #4]
		rs[5] = temp[2];
 80018e6:	78ab      	ldrb	r3, [r5, #2]
 80018e8:	7143      	strb	r3, [r0, #5]
		rs[6] = '.';
 80018ea:	232e      	movs	r3, #46	; 0x2e
 80018ec:	7183      	strb	r3, [r0, #6]
		rs[7] = temp[3];
 80018ee:	78eb      	ldrb	r3, [r5, #3]
 80018f0:	71c3      	strb	r3, [r0, #7]
		rs[8] = 'F';
 80018f2:	2346      	movs	r3, #70	; 0x46
 80018f4:	7203      	strb	r3, [r0, #8]
		rs[9] = hum[0];
 80018f6:	7833      	ldrb	r3, [r6, #0]
 80018f8:	7243      	strb	r3, [r0, #9]
		rs[10] = hum[1];
 80018fa:	7873      	ldrb	r3, [r6, #1]
 80018fc:	7283      	strb	r3, [r0, #10]
		rs[11] = 'R';
 80018fe:	4603      	mov	r3, r0
 8001900:	2252      	movs	r2, #82	; 0x52
 8001902:	f803 2f0b 	strb.w	r2, [r3, #11]!
		rs = malloc(6);
 8001906:	4604      	mov	r4, r0
		for (int i = 12; i < 28; i++)
 8001908:	f100 021b 	add.w	r2, r0, #27
			rs[i] = '0';
 800190c:	2130      	movs	r1, #48	; 0x30
 800190e:	f803 1f01 	strb.w	r1, [r3, #1]!
		for (int i = 12; i < 28; i++)
 8001912:	429a      	cmp	r2, r3
 8001914:	d1fb      	bne.n	800190e <prepareRequestString+0x96>
		char *str = malloc(27);
 8001916:	201b      	movs	r0, #27
 8001918:	f01a f96e 	bl	801bbf8 <malloc>
		strncpy(str, rs+1, 27);
 800191c:	221b      	movs	r2, #27
 800191e:	1c61      	adds	r1, r4, #1
		char *str = malloc(27);
 8001920:	4607      	mov	r7, r0
		strncpy(str, rs+1, 27);
 8001922:	f01a fd9b 	bl	801c45c <strncpy>
		char *cs = checkSum(str);
 8001926:	4638      	mov	r0, r7
 8001928:	f7ff ff00 	bl	800172c <checkSum>
		rs[28] = cs[0];
 800192c:	7803      	ldrb	r3, [r0, #0]
 800192e:	7723      	strb	r3, [r4, #28]
		rs[29] = cs[1];
 8001930:	7843      	ldrb	r3, [r0, #1]
 8001932:	7763      	strb	r3, [r4, #29]
		rs[30] = ETX;
 8001934:	2303      	movs	r3, #3
		free(temp);
 8001936:	4628      	mov	r0, r5
		rs[30] = ETX;
 8001938:	77a3      	strb	r3, [r4, #30]
		free(temp);
 800193a:	f01a f965 	bl	801bc08 <free>
		free(hum);
 800193e:	4630      	mov	r0, r6
 8001940:	f01a f962 	bl	801bc08 <free>
	return rs;
 8001944:	e7b6      	b.n	80018b4 <prepareRequestString+0x3c>
	char *rs = NULL;
 8001946:	2400      	movs	r4, #0
	return rs;
 8001948:	e7b4      	b.n	80018b4 <prepareRequestString+0x3c>
 800194a:	bf00      	nop
 800194c:	0801d5d0 	.word	0x0801d5d0

08001950 <dataRequestTask>:
extern xQueueHandle messageQ;
extern xQueueHandle messageQ2;

/* USER CODE END Header_dataRequestTask */
void dataRequestTask(void *argument)
{
 8001950:	b530      	push	{r4, r5, lr}
 8001952:	b085      	sub	sp, #20
  /* USER CODE BEGIN dataRequestTask */
	float r[2];
	int isChangeRequest = 0;
	uint8_t dupa[4];
	dupa[0] = 'd';
 8001954:	4b0c      	ldr	r3, [pc, #48]	; (8001988 <dataRequestTask+0x38>)
	dupa[3] = 'a';
	char *Tx;
  /* Infinite loop */
	for(;;)
	{
		isChangeRequest = (int) xQueueReceive(messageQ2, &r, 0);
 8001956:	4d0d      	ldr	r5, [pc, #52]	; (800198c <dataRequestTask+0x3c>)
		Tx = prepareRequestString(isChangeRequest, r);
		HAL_UART_Transmit(&huart2, (uint8_t *) dupa, 4, 1000);
 8001958:	4c0d      	ldr	r4, [pc, #52]	; (8001990 <dataRequestTask+0x40>)
	dupa[0] = 'd';
 800195a:	9301      	str	r3, [sp, #4]
		isChangeRequest = (int) xQueueReceive(messageQ2, &r, 0);
 800195c:	2200      	movs	r2, #0
 800195e:	a902      	add	r1, sp, #8
 8001960:	6828      	ldr	r0, [r5, #0]
 8001962:	f006 fc0d 	bl	8008180 <xQueueReceive>
		Tx = prepareRequestString(isChangeRequest, r);
 8001966:	a902      	add	r1, sp, #8
 8001968:	f7ff ff86 	bl	8001878 <prepareRequestString>
		HAL_UART_Transmit(&huart2, (uint8_t *) dupa, 4, 1000);
 800196c:	2204      	movs	r2, #4
 800196e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001972:	eb0d 0102 	add.w	r1, sp, r2
 8001976:	4620      	mov	r0, r4
 8001978:	f005 f9de 	bl	8006d38 <HAL_UART_Transmit>
		osDelay(1000);
 800197c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001980:	f005 fc76 	bl	8007270 <osDelay>
	for(;;)
 8001984:	e7ea      	b.n	800195c <dataRequestTask+0xc>
 8001986:	bf00      	nop
 8001988:	61707564 	.word	0x61707564
 800198c:	200027e0 	.word	0x200027e0
 8001990:	20013978 	.word	0x20013978

08001994 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001994:	6802      	ldr	r2, [r0, #0]
 8001996:	4b03      	ldr	r3, [pc, #12]	; (80019a4 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001998:	429a      	cmp	r2, r3
 800199a:	d101      	bne.n	80019a0 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 800199c:	f002 bfee 	b.w	800497c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80019a0:	4770      	bx	lr
 80019a2:	bf00      	nop
 80019a4:	40001000 	.word	0x40001000

080019a8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019a8:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019aa:	4b0e      	ldr	r3, [pc, #56]	; (80019e4 <HAL_MspInit+0x3c>)
 80019ac:	2200      	movs	r2, #0
 80019ae:	9200      	str	r2, [sp, #0]
 80019b0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019b2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019b6:	6459      	str	r1, [r3, #68]	; 0x44
 80019b8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019ba:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019be:	9100      	str	r1, [sp, #0]
 80019c0:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019c2:	9201      	str	r2, [sp, #4]
 80019c4:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019c6:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019ca:	6419      	str	r1, [r3, #64]	; 0x40
 80019cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019ce:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019d2:	9301      	str	r3, [sp, #4]
 80019d4:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019d6:	210f      	movs	r1, #15
 80019d8:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019dc:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019de:	f003 b805 	b.w	80049ec <HAL_NVIC_SetPriority>
 80019e2:	bf00      	nop
 80019e4:	40023800 	.word	0x40023800

080019e8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80019e8:	6802      	ldr	r2, [r0, #0]
 80019ea:	4b09      	ldr	r3, [pc, #36]	; (8001a10 <HAL_CRC_MspInit+0x28>)
 80019ec:	429a      	cmp	r2, r3
{
 80019ee:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80019f0:	d10b      	bne.n	8001a0a <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019f2:	2300      	movs	r3, #0
 80019f4:	9301      	str	r3, [sp, #4]
 80019f6:	4b07      	ldr	r3, [pc, #28]	; (8001a14 <HAL_CRC_MspInit+0x2c>)
 80019f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019fa:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80019fe:	631a      	str	r2, [r3, #48]	; 0x30
 8001a00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a02:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a06:	9301      	str	r3, [sp, #4]
 8001a08:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a0a:	b002      	add	sp, #8
 8001a0c:	4770      	bx	lr
 8001a0e:	bf00      	nop
 8001a10:	40023000 	.word	0x40023000
 8001a14:	40023800 	.word	0x40023800

08001a18 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a18:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a1a:	4b0f      	ldr	r3, [pc, #60]	; (8001a58 <HAL_DMA2D_MspInit+0x40>)
 8001a1c:	6802      	ldr	r2, [r0, #0]
 8001a1e:	429a      	cmp	r2, r3
 8001a20:	d116      	bne.n	8001a50 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a22:	2200      	movs	r2, #0
 8001a24:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a28:	9201      	str	r2, [sp, #4]
 8001a2a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a2c:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a30:	6319      	str	r1, [r3, #48]	; 0x30
 8001a32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a34:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a38:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a3a:	2105      	movs	r1, #5
 8001a3c:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a3e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a40:	f002 ffd4 	bl	80049ec <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a44:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a46:	b003      	add	sp, #12
 8001a48:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a4c:	f003 b800 	b.w	8004a50 <HAL_NVIC_EnableIRQ>
}
 8001a50:	b003      	add	sp, #12
 8001a52:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a56:	bf00      	nop
 8001a58:	4002b000 	.word	0x4002b000

08001a5c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001a5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001a60:	4604      	mov	r4, r0
 8001a62:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a64:	2214      	movs	r2, #20
 8001a66:	2100      	movs	r1, #0
 8001a68:	a803      	add	r0, sp, #12
 8001a6a:	f01a f8e3 	bl	801bc34 <memset>
  if(hi2c->Instance==I2C3)
 8001a6e:	6822      	ldr	r2, [r4, #0]
 8001a70:	4b24      	ldr	r3, [pc, #144]	; (8001b04 <HAL_I2C_MspInit+0xa8>)
 8001a72:	429a      	cmp	r2, r3
 8001a74:	d143      	bne.n	8001afe <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a76:	4c24      	ldr	r4, [pc, #144]	; (8001b08 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a78:	4824      	ldr	r0, [pc, #144]	; (8001b0c <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a7a:	2500      	movs	r5, #0
 8001a7c:	9500      	str	r5, [sp, #0]
 8001a7e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001a80:	f043 0304 	orr.w	r3, r3, #4
 8001a84:	6323      	str	r3, [r4, #48]	; 0x30
 8001a86:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001a88:	f003 0304 	and.w	r3, r3, #4
 8001a8c:	9300      	str	r3, [sp, #0]
 8001a8e:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a90:	9501      	str	r5, [sp, #4]
 8001a92:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001a94:	f043 0301 	orr.w	r3, r3, #1
 8001a98:	6323      	str	r3, [r4, #48]	; 0x30
 8001a9a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001a9c:	f003 0301 	and.w	r3, r3, #1
 8001aa0:	9301      	str	r3, [sp, #4]
 8001aa2:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001aa4:	f04f 0912 	mov.w	r9, #18
 8001aa8:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001aac:	f04f 0801 	mov.w	r8, #1
 8001ab0:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ab2:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ab4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ab6:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001aba:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001abe:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ac0:	f003 f8f2 	bl	8004ca8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ac4:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ac8:	4811      	ldr	r0, [pc, #68]	; (8001b10 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001aca:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001acc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ace:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ad2:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ad6:	f003 f8e7 	bl	8004ca8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ada:	9502      	str	r5, [sp, #8]
 8001adc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001ade:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001ae2:	6423      	str	r3, [r4, #64]	; 0x40
 8001ae4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001ae6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001aea:	9302      	str	r3, [sp, #8]
 8001aec:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001aee:	6a23      	ldr	r3, [r4, #32]
 8001af0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001af4:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001af6:	6a23      	ldr	r3, [r4, #32]
 8001af8:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001afc:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001afe:	b009      	add	sp, #36	; 0x24
 8001b00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b04:	40005c00 	.word	0x40005c00
 8001b08:	40023800 	.word	0x40023800
 8001b0c:	40020800 	.word	0x40020800
 8001b10:	40020000 	.word	0x40020000

08001b14 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001b14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b16:	4604      	mov	r4, r0
 8001b18:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b1a:	2214      	movs	r2, #20
 8001b1c:	2100      	movs	r1, #0
 8001b1e:	a807      	add	r0, sp, #28
 8001b20:	f01a f888 	bl	801bc34 <memset>
  if(hltdc->Instance==LTDC)
 8001b24:	6822      	ldr	r2, [r4, #0]
 8001b26:	4b57      	ldr	r3, [pc, #348]	; (8001c84 <HAL_LTDC_MspInit+0x170>)
 8001b28:	429a      	cmp	r2, r3
 8001b2a:	f040 80a9 	bne.w	8001c80 <HAL_LTDC_MspInit+0x16c>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001b2e:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001b32:	2400      	movs	r4, #0
 8001b34:	9400      	str	r4, [sp, #0]
 8001b36:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b38:	4853      	ldr	r0, [pc, #332]	; (8001c88 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001b3a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001b3e:	645a      	str	r2, [r3, #68]	; 0x44
 8001b40:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b42:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001b46:	9200      	str	r2, [sp, #0]
 8001b48:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b4a:	9401      	str	r4, [sp, #4]
 8001b4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b4e:	f042 0220 	orr.w	r2, r2, #32
 8001b52:	631a      	str	r2, [r3, #48]	; 0x30
 8001b54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b56:	f002 0220 	and.w	r2, r2, #32
 8001b5a:	9201      	str	r2, [sp, #4]
 8001b5c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b5e:	9402      	str	r4, [sp, #8]
 8001b60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b62:	f042 0201 	orr.w	r2, r2, #1
 8001b66:	631a      	str	r2, [r3, #48]	; 0x30
 8001b68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b6a:	f002 0201 	and.w	r2, r2, #1
 8001b6e:	9202      	str	r2, [sp, #8]
 8001b70:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b72:	9403      	str	r4, [sp, #12]
 8001b74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b76:	f042 0202 	orr.w	r2, r2, #2
 8001b7a:	631a      	str	r2, [r3, #48]	; 0x30
 8001b7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b7e:	f002 0202 	and.w	r2, r2, #2
 8001b82:	9203      	str	r2, [sp, #12]
 8001b84:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001b86:	9404      	str	r4, [sp, #16]
 8001b88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b8a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001b8e:	631a      	str	r2, [r3, #48]	; 0x30
 8001b90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b92:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001b96:	9204      	str	r2, [sp, #16]
 8001b98:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b9a:	9405      	str	r4, [sp, #20]
 8001b9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b9e:	f042 0204 	orr.w	r2, r2, #4
 8001ba2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ba4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ba6:	f002 0204 	and.w	r2, r2, #4
 8001baa:	9205      	str	r2, [sp, #20]
 8001bac:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bae:	9406      	str	r4, [sp, #24]
 8001bb0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bb2:	f042 0208 	orr.w	r2, r2, #8
 8001bb6:	631a      	str	r2, [r3, #48]	; 0x30
 8001bb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bba:	f003 0308 	and.w	r3, r3, #8
 8001bbe:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bc0:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bc2:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bc4:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bc6:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bc8:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001bcc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bce:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bd2:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001bd6:	f003 f867 	bl	8004ca8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001bda:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bde:	482b      	ldr	r0, [pc, #172]	; (8001c8c <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001be0:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001be2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001be4:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001be8:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bea:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bee:	f003 f85b 	bl	8004ca8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001bf2:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bf4:	4826      	ldr	r0, [pc, #152]	; (8001c90 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001bf6:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bf8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bfa:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bfe:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c02:	f003 f851 	bl	8004ca8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001c06:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c0a:	4821      	ldr	r0, [pc, #132]	; (8001c90 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c0c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c0e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c10:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c14:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c18:	f003 f846 	bl	8004ca8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001c1c:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c20:	481c      	ldr	r0, [pc, #112]	; (8001c94 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c22:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c24:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c26:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c2a:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c2e:	f003 f83b 	bl	8004ca8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001c32:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c34:	4818      	ldr	r0, [pc, #96]	; (8001c98 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c36:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c38:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c3a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c3e:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c42:	f003 f831 	bl	8004ca8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001c46:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c48:	4814      	ldr	r0, [pc, #80]	; (8001c9c <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c4a:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c4c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c4e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c52:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c56:	f003 f827 	bl	8004ca8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001c5a:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c5e:	480d      	ldr	r0, [pc, #52]	; (8001c94 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c60:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c62:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c64:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c68:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c6c:	f003 f81c 	bl	8004ca8 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c70:	2058      	movs	r0, #88	; 0x58
 8001c72:	4622      	mov	r2, r4
 8001c74:	2105      	movs	r1, #5
 8001c76:	f002 feb9 	bl	80049ec <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c7a:	2058      	movs	r0, #88	; 0x58
 8001c7c:	f002 fee8 	bl	8004a50 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c80:	b00d      	add	sp, #52	; 0x34
 8001c82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c84:	40016800 	.word	0x40016800
 8001c88:	40021400 	.word	0x40021400
 8001c8c:	40020000 	.word	0x40020000
 8001c90:	40020400 	.word	0x40020400
 8001c94:	40021800 	.word	0x40021800
 8001c98:	40020800 	.word	0x40020800
 8001c9c:	40020c00 	.word	0x40020c00

08001ca0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ca0:	b510      	push	{r4, lr}
 8001ca2:	4604      	mov	r4, r0
 8001ca4:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ca6:	2214      	movs	r2, #20
 8001ca8:	2100      	movs	r1, #0
 8001caa:	a803      	add	r0, sp, #12
 8001cac:	f019 ffc2 	bl	801bc34 <memset>
  if(hspi->Instance==SPI5)
 8001cb0:	6822      	ldr	r2, [r4, #0]
 8001cb2:	4b15      	ldr	r3, [pc, #84]	; (8001d08 <HAL_SPI_MspInit+0x68>)
 8001cb4:	429a      	cmp	r2, r3
 8001cb6:	d124      	bne.n	8001d02 <HAL_SPI_MspInit+0x62>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001cb8:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001cbc:	2200      	movs	r2, #0
 8001cbe:	9201      	str	r2, [sp, #4]
 8001cc0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001cc2:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8001cc6:	6459      	str	r1, [r3, #68]	; 0x44
 8001cc8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001cca:	f401 1180 	and.w	r1, r1, #1048576	; 0x100000
 8001cce:	9101      	str	r1, [sp, #4]
 8001cd0:	9901      	ldr	r1, [sp, #4]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cd2:	9202      	str	r2, [sp, #8]
 8001cd4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001cd6:	f041 0120 	orr.w	r1, r1, #32
 8001cda:	6319      	str	r1, [r3, #48]	; 0x30
 8001cdc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    PF8     ------> SPI5_MISO
    PF9     ------> SPI5_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cde:	9205      	str	r2, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001ce0:	f003 0320 	and.w	r3, r3, #32
 8001ce4:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ce6:	f44f 7160 	mov.w	r1, #896	; 0x380
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cea:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cec:	2302      	movs	r3, #2
 8001cee:	e9cd 1303 	strd	r1, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001cf2:	2003      	movs	r0, #3
 8001cf4:	2305      	movs	r3, #5
 8001cf6:	e9cd 0306 	strd	r0, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cfa:	a903      	add	r1, sp, #12
 8001cfc:	4803      	ldr	r0, [pc, #12]	; (8001d0c <HAL_SPI_MspInit+0x6c>)
 8001cfe:	f002 ffd3 	bl	8004ca8 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001d02:	b008      	add	sp, #32
 8001d04:	bd10      	pop	{r4, pc}
 8001d06:	bf00      	nop
 8001d08:	40015000 	.word	0x40015000
 8001d0c:	40021400 	.word	0x40021400

08001d10 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001d10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d12:	4604      	mov	r4, r0
 8001d14:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d16:	2214      	movs	r2, #20
 8001d18:	2100      	movs	r1, #0
 8001d1a:	a803      	add	r0, sp, #12
 8001d1c:	f019 ff8a 	bl	801bc34 <memset>
  if(huart->Instance==USART2)
 8001d20:	6822      	ldr	r2, [r4, #0]
 8001d22:	4b22      	ldr	r3, [pc, #136]	; (8001dac <HAL_UART_MspInit+0x9c>)
 8001d24:	429a      	cmp	r2, r3
 8001d26:	d13f      	bne.n	8001da8 <HAL_UART_MspInit+0x98>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8001d28:	f503 33fa 	add.w	r3, r3, #128000	; 0x1f400
 8001d2c:	2400      	movs	r4, #0
 8001d2e:	9400      	str	r4, [sp, #0]
 8001d30:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d32:	481f      	ldr	r0, [pc, #124]	; (8001db0 <HAL_UART_MspInit+0xa0>)
    __HAL_RCC_USART2_CLK_ENABLE();
 8001d34:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001d38:	641a      	str	r2, [r3, #64]	; 0x40
 8001d3a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001d3c:	f402 3200 	and.w	r2, r2, #131072	; 0x20000
 8001d40:	9200      	str	r2, [sp, #0]
 8001d42:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d44:	9401      	str	r4, [sp, #4]
 8001d46:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d48:	f042 0201 	orr.w	r2, r2, #1
 8001d4c:	631a      	str	r2, [r3, #48]	; 0x30
 8001d4e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d50:	f002 0201 	and.w	r2, r2, #1
 8001d54:	9201      	str	r2, [sp, #4]
 8001d56:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001d58:	9402      	str	r4, [sp, #8]
 8001d5a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d5c:	f042 0208 	orr.w	r2, r2, #8
 8001d60:	631a      	str	r2, [r3, #48]	; 0x30
 8001d62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d64:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001d66:	f003 0308 	and.w	r3, r3, #8
 8001d6a:	9302      	str	r3, [sp, #8]
 8001d6c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d6e:	2702      	movs	r7, #2
 8001d70:	2304      	movs	r3, #4
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001d72:	2603      	movs	r6, #3
 8001d74:	2507      	movs	r5, #7
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d76:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d78:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001d7c:	e9cd 6506 	strd	r6, r5, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d80:	f002 ff92 	bl	8004ca8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001d84:	2340      	movs	r3, #64	; 0x40
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d86:	480b      	ldr	r0, [pc, #44]	; (8001db4 <HAL_UART_MspInit+0xa4>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001d88:	9507      	str	r5, [sp, #28]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d8a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d8c:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d90:	e9cd 4605 	strd	r4, r6, [sp, #20]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d94:	f002 ff88 	bl	8004ca8 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 5, 0);
 8001d98:	2026      	movs	r0, #38	; 0x26
 8001d9a:	4622      	mov	r2, r4
 8001d9c:	2105      	movs	r1, #5
 8001d9e:	f002 fe25 	bl	80049ec <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8001da2:	2026      	movs	r0, #38	; 0x26
 8001da4:	f002 fe54 	bl	8004a50 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8001da8:	b009      	add	sp, #36	; 0x24
 8001daa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001dac:	40004400 	.word	0x40004400
 8001db0:	40020000 	.word	0x40020000
 8001db4:	40020c00 	.word	0x40020c00

08001db8 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001db8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (FMC_Initialized) {
 8001dbc:	4b2c      	ldr	r3, [pc, #176]	; (8001e70 <HAL_SDRAM_MspInit+0xb8>)
 8001dbe:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001dc0:	b086      	sub	sp, #24
  if (FMC_Initialized) {
 8001dc2:	2c00      	cmp	r4, #0
 8001dc4:	d150      	bne.n	8001e68 <HAL_SDRAM_MspInit+0xb0>
  FMC_Initialized = 1;
 8001dc6:	f04f 0801 	mov.w	r8, #1
 8001dca:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dce:	4b29      	ldr	r3, [pc, #164]	; (8001e74 <HAL_SDRAM_MspInit+0xbc>)
 8001dd0:	9400      	str	r4, [sp, #0]
 8001dd2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dd4:	4828      	ldr	r0, [pc, #160]	; (8001e78 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dd6:	ea42 0208 	orr.w	r2, r2, r8
 8001dda:	639a      	str	r2, [r3, #56]	; 0x38
 8001ddc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001dde:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001de0:	ea03 0308 	and.w	r3, r3, r8
 8001de4:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001de6:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001de8:	2603      	movs	r6, #3
 8001dea:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dec:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dee:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001df0:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001df4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001df8:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dfc:	f002 ff54 	bl	8004ca8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e00:	481e      	ldr	r0, [pc, #120]	; (8001e7c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e02:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e04:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e06:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e0a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e0e:	f002 ff4b 	bl	8004ca8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001e12:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e16:	481a      	ldr	r0, [pc, #104]	; (8001e80 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e18:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e1a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e1c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e20:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e24:	f002 ff40 	bl	8004ca8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001e28:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e2c:	4815      	ldr	r0, [pc, #84]	; (8001e84 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e2e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e30:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e32:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e36:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e3a:	f002 ff35 	bl	8004ca8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001e3e:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e42:	4811      	ldr	r0, [pc, #68]	; (8001e88 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e44:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e46:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e48:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e4c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e50:	f002 ff2a 	bl	8004ca8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001e54:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e56:	480d      	ldr	r0, [pc, #52]	; (8001e8c <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e58:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e5a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e5c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e60:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e64:	f002 ff20 	bl	8004ca8 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001e68:	b006      	add	sp, #24
 8001e6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e6e:	bf00      	nop
 8001e70:	20002674 	.word	0x20002674
 8001e74:	40023800 	.word	0x40023800
 8001e78:	40021400 	.word	0x40021400
 8001e7c:	40020800 	.word	0x40020800
 8001e80:	40021800 	.word	0x40021800
 8001e84:	40021000 	.word	0x40021000
 8001e88:	40020c00 	.word	0x40020c00
 8001e8c:	40020400 	.word	0x40020400

08001e90 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e90:	b530      	push	{r4, r5, lr}
 8001e92:	4601      	mov	r1, r0
 8001e94:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e96:	2200      	movs	r2, #0
 8001e98:	2036      	movs	r0, #54	; 0x36
 8001e9a:	f002 fda7 	bl	80049ec <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001e9e:	2036      	movs	r0, #54	; 0x36
 8001ea0:	f002 fdd6 	bl	8004a50 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ea4:	2500      	movs	r5, #0
 8001ea6:	4b15      	ldr	r3, [pc, #84]	; (8001efc <HAL_InitTick+0x6c>)
 8001ea8:	9502      	str	r5, [sp, #8]
 8001eaa:	6c1a      	ldr	r2, [r3, #64]	; 0x40

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001eac:	4c14      	ldr	r4, [pc, #80]	; (8001f00 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001eae:	f042 0210 	orr.w	r2, r2, #16
 8001eb2:	641a      	str	r2, [r3, #64]	; 0x40
 8001eb4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001eb6:	f003 0310 	and.w	r3, r3, #16
 8001eba:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ebc:	a901      	add	r1, sp, #4
 8001ebe:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ec0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ec2:	f004 f8a5 	bl	8006010 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001ec6:	f004 f883 	bl	8005fd0 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001eca:	4b0e      	ldr	r3, [pc, #56]	; (8001f04 <HAL_InitTick+0x74>)
 8001ecc:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 8001ece:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001ed2:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001ed4:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001ed6:	4b0c      	ldr	r3, [pc, #48]	; (8001f08 <HAL_InitTick+0x78>)
 8001ed8:	fbb0 f0f3 	udiv	r0, r0, r3
 8001edc:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001ede:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ee0:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001ee2:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ee4:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ee6:	f004 fe39 	bl	8006b5c <HAL_TIM_Base_Init>
 8001eea:	b920      	cbnz	r0, 8001ef6 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001eec:	4620      	mov	r0, r4
 8001eee:	f004 fd19 	bl	8006924 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001ef2:	b009      	add	sp, #36	; 0x24
 8001ef4:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001ef6:	2001      	movs	r0, #1
 8001ef8:	e7fb      	b.n	8001ef2 <HAL_InitTick+0x62>
 8001efa:	bf00      	nop
 8001efc:	40023800 	.word	0x40023800
 8001f00:	200139f4 	.word	0x200139f4
 8001f04:	40001000 	.word	0x40001000
 8001f08:	000f4240 	.word	0x000f4240

08001f0c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f0c:	4770      	bx	lr

08001f0e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f0e:	e7fe      	b.n	8001f0e <HardFault_Handler>

08001f10 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f10:	e7fe      	b.n	8001f10 <MemManage_Handler>

08001f12 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f12:	e7fe      	b.n	8001f12 <BusFault_Handler>

08001f14 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f14:	e7fe      	b.n	8001f14 <UsageFault_Handler>

08001f16 <DebugMon_Handler>:
 8001f16:	4770      	bx	lr

08001f18 <USART2_IRQHandler>:
void USART2_IRQHandler(void)
{
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8001f18:	4801      	ldr	r0, [pc, #4]	; (8001f20 <USART2_IRQHandler+0x8>)
 8001f1a:	f004 bfcd 	b.w	8006eb8 <HAL_UART_IRQHandler>
 8001f1e:	bf00      	nop
 8001f20:	20013978 	.word	0x20013978

08001f24 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f24:	4801      	ldr	r0, [pc, #4]	; (8001f2c <TIM6_DAC_IRQHandler+0x8>)
 8001f26:	f004 bd11 	b.w	800694c <HAL_TIM_IRQHandler>
 8001f2a:	bf00      	nop
 8001f2c:	200139f4 	.word	0x200139f4

08001f30 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f30:	4801      	ldr	r0, [pc, #4]	; (8001f38 <LTDC_IRQHandler+0x8>)
 8001f32:	f003 bcf7 	b.w	8005924 <HAL_LTDC_IRQHandler>
 8001f36:	bf00      	nop
 8001f38:	20013858 	.word	0x20013858

08001f3c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f3c:	4801      	ldr	r0, [pc, #4]	; (8001f44 <DMA2D_IRQHandler+0x8>)
 8001f3e:	f002 bde5 	b.w	8004b0c <HAL_DMA2D_IRQHandler>
 8001f42:	bf00      	nop
 8001f44:	20013938 	.word	0x20013938

08001f48 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f48:	2001      	movs	r0, #1
 8001f4a:	4770      	bx	lr

08001f4c <_kill>:

int _kill(int pid, int sig)
{
 8001f4c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f4e:	f019 fe17 	bl	801bb80 <__errno>
 8001f52:	2316      	movs	r3, #22
 8001f54:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f56:	f04f 30ff 	mov.w	r0, #4294967295
 8001f5a:	bd08      	pop	{r3, pc}

08001f5c <_exit>:

void _exit (int status)
{
 8001f5c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f5e:	f019 fe0f 	bl	801bb80 <__errno>
 8001f62:	2316      	movs	r3, #22
 8001f64:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f66:	e7fe      	b.n	8001f66 <_exit+0xa>

08001f68 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f68:	b570      	push	{r4, r5, r6, lr}
 8001f6a:	460e      	mov	r6, r1
 8001f6c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f6e:	2500      	movs	r5, #0
 8001f70:	42a5      	cmp	r5, r4
 8001f72:	db01      	blt.n	8001f78 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f74:	4620      	mov	r0, r4
 8001f76:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f78:	f3af 8000 	nop.w
 8001f7c:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f7e:	3501      	adds	r5, #1
 8001f80:	e7f6      	b.n	8001f70 <_read+0x8>

08001f82 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f82:	b570      	push	{r4, r5, r6, lr}
 8001f84:	460e      	mov	r6, r1
 8001f86:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f88:	2500      	movs	r5, #0
 8001f8a:	42a5      	cmp	r5, r4
 8001f8c:	db01      	blt.n	8001f92 <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f8e:	4620      	mov	r0, r4
 8001f90:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f92:	5d70      	ldrb	r0, [r6, r5]
 8001f94:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f98:	3501      	adds	r5, #1
 8001f9a:	e7f6      	b.n	8001f8a <_write+0x8>

08001f9c <_close>:

int _close(int file)
{
	return -1;
}
 8001f9c:	f04f 30ff 	mov.w	r0, #4294967295
 8001fa0:	4770      	bx	lr

08001fa2 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001fa2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001fa6:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001fa8:	2000      	movs	r0, #0
 8001faa:	4770      	bx	lr

08001fac <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001fac:	2001      	movs	r0, #1
 8001fae:	4770      	bx	lr

08001fb0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001fb0:	2000      	movs	r0, #0
 8001fb2:	4770      	bx	lr

08001fb4 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001fb4:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001fb6:	4b0a      	ldr	r3, [pc, #40]	; (8001fe0 <_sbrk+0x2c>)
 8001fb8:	6819      	ldr	r1, [r3, #0]
{
 8001fba:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001fbc:	b909      	cbnz	r1, 8001fc2 <_sbrk+0xe>
		heap_end = &end;
 8001fbe:	4909      	ldr	r1, [pc, #36]	; (8001fe4 <_sbrk+0x30>)
 8001fc0:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001fc2:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001fc4:	4669      	mov	r1, sp
 8001fc6:	4402      	add	r2, r0
 8001fc8:	428a      	cmp	r2, r1
 8001fca:	d906      	bls.n	8001fda <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001fcc:	f019 fdd8 	bl	801bb80 <__errno>
 8001fd0:	230c      	movs	r3, #12
 8001fd2:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001fd4:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001fd8:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001fda:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8001fdc:	e7fc      	b.n	8001fd8 <_sbrk+0x24>
 8001fde:	bf00      	nop
 8001fe0:	20002678 	.word	0x20002678
 8001fe4:	20013a88 	.word	0x20013a88

08001fe8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId ANNOTATIONS = 5; // consola_14_4bpp
    static const touchgfx::FontId FLOAT = 6;       // consola_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 7;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001fe8:	4770      	bx	lr

08001fea <_ZN23ApplicationFontProviderD0Ev>:
 8001fea:	b510      	push	{r4, lr}
 8001fec:	2104      	movs	r1, #4
 8001fee:	4604      	mov	r4, r0
 8001ff0:	f019 fd65 	bl	801babe <_ZdlPvj>
 8001ff4:	4620      	mov	r0, r4
 8001ff6:	bd10      	pop	{r4, pc}

08001ff8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8001ff8:	b508      	push	{r3, lr}
 8001ffa:	2906      	cmp	r1, #6
 8001ffc:	d821      	bhi.n	8002042 <_ZN23ApplicationFontProvider7getFontEt+0x4a>
 8001ffe:	e8df f001 	tbb	[pc, r1]
 8002002:	0804      	.short	0x0804
 8002004:	1814100c 	.word	0x1814100c
 8002008:	1c          	.byte	0x1c
 8002009:	00          	.byte	0x00
    switch (typography)
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800200a:	f000 fc55 	bl	80028b8 <_ZN17TypedTextDatabase8getFontsEv>
 800200e:	6800      	ldr	r0, [r0, #0]
        // consola_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
    default:
        return 0;
    }
}
 8002010:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002012:	f000 fc51 	bl	80028b8 <_ZN17TypedTextDatabase8getFontsEv>
 8002016:	6840      	ldr	r0, [r0, #4]
 8002018:	e7fa      	b.n	8002010 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800201a:	f000 fc4d 	bl	80028b8 <_ZN17TypedTextDatabase8getFontsEv>
 800201e:	6880      	ldr	r0, [r0, #8]
 8002020:	e7f6      	b.n	8002010 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002022:	f000 fc49 	bl	80028b8 <_ZN17TypedTextDatabase8getFontsEv>
 8002026:	68c0      	ldr	r0, [r0, #12]
 8002028:	e7f2      	b.n	8002010 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 800202a:	f000 fc45 	bl	80028b8 <_ZN17TypedTextDatabase8getFontsEv>
 800202e:	6900      	ldr	r0, [r0, #16]
 8002030:	e7ee      	b.n	8002010 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
 8002032:	f000 fc41 	bl	80028b8 <_ZN17TypedTextDatabase8getFontsEv>
 8002036:	6940      	ldr	r0, [r0, #20]
 8002038:	e7ea      	b.n	8002010 <_ZN23ApplicationFontProvider7getFontEt+0x18>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
 800203a:	f000 fc3d 	bl	80028b8 <_ZN17TypedTextDatabase8getFontsEv>
 800203e:	6980      	ldr	r0, [r0, #24]
 8002040:	e7e6      	b.n	8002010 <_ZN23ApplicationFontProvider7getFontEt+0x18>
{
 8002042:	2000      	movs	r0, #0
 8002044:	e7e4      	b.n	8002010 <_ZN23ApplicationFontProvider7getFontEt+0x18>
	...

08002048 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002048:	4800      	ldr	r0, [pc, #0]	; (800204c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800204a:	4770      	bx	lr
 800204c:	0801d674 	.word	0x0801d674

08002050 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002050:	2011      	movs	r0, #17
 8002052:	4770      	bx	lr

08002054 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002054:	b513      	push	{r0, r1, r4, lr}
 8002056:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002058:	b151      	cbz	r1, 8002070 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800205a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800205c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800205e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002062:	aa01      	add	r2, sp, #4
 8002064:	689c      	ldr	r4, [r3, #8]
 8002066:	f10d 0303 	add.w	r3, sp, #3
 800206a:	47a0      	blx	r4
        return glyph;
    }
 800206c:	b002      	add	sp, #8
 800206e:	bd10      	pop	{r4, pc}
            return 0;
 8002070:	4608      	mov	r0, r1
 8002072:	e7fb      	b.n	800206c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002074 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002074:	8940      	ldrh	r0, [r0, #10]
 8002076:	4770      	bx	lr

08002078 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002078:	8980      	ldrh	r0, [r0, #12]
 800207a:	4770      	bx	lr

0800207c <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 800207c:	8880      	ldrh	r0, [r0, #4]
 800207e:	4770      	bx	lr

08002080 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002080:	7983      	ldrb	r3, [r0, #6]
 8002082:	8880      	ldrh	r0, [r0, #4]
 8002084:	4418      	add	r0, r3
    }
 8002086:	b280      	uxth	r0, r0
 8002088:	4770      	bx	lr

0800208a <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800208a:	79c0      	ldrb	r0, [r0, #7]
    }
 800208c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002090:	4770      	bx	lr

08002092 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002092:	79c0      	ldrb	r0, [r0, #7]
    }
 8002094:	09c0      	lsrs	r0, r0, #7
 8002096:	4770      	bx	lr

08002098 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002098:	4770      	bx	lr

0800209a <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800209a:	b510      	push	{r4, lr}
    }
 800209c:	2108      	movs	r1, #8
    virtual ~TypedText()
 800209e:	4604      	mov	r4, r0
    }
 80020a0:	f019 fd0d 	bl	801babe <_ZdlPvj>
 80020a4:	4620      	mov	r0, r4
 80020a6:	bd10      	pop	{r4, pc}

080020a8 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 80020a8:	4770      	bx	lr

080020aa <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80020aa:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 80020ae:	6808      	ldr	r0, [r1, #0]
 80020b0:	6849      	ldr	r1, [r1, #4]
 80020b2:	c303      	stmia	r3!, {r0, r1}
    }
 80020b4:	4770      	bx	lr

080020b6 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80020b6:	4770      	bx	lr

080020b8 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80020b8:	4770      	bx	lr

080020ba <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80020ba:	6041      	str	r1, [r0, #4]
    }
 80020bc:	4770      	bx	lr

080020be <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80020be:	4770      	bx	lr

080020c0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80020c0:	2301      	movs	r3, #1
 80020c2:	7203      	strb	r3, [r0, #8]
    }
 80020c4:	4770      	bx	lr

080020c6 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80020c6:	4770      	bx	lr

080020c8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80020c8:	4770      	bx	lr

080020ca <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80020ca:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 80020cc:	68c2      	ldr	r2, [r0, #12]
 80020ce:	6841      	ldr	r1, [r0, #4]
 80020d0:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80020d2:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 80020d4:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80020d8:	07d2      	lsls	r2, r2, #31
 80020da:	bf48      	it	mi
 80020dc:	590a      	ldrmi	r2, [r1, r4]
 80020de:	689b      	ldr	r3, [r3, #8]
    }
 80020e0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 80020e4:	bf48      	it	mi
 80020e6:	58d3      	ldrmi	r3, [r2, r3]
 80020e8:	4718      	bx	r3

080020ea <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80020ea:	6843      	ldr	r3, [r0, #4]
 80020ec:	b12b      	cbz	r3, 80020fa <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80020ee:	6883      	ldr	r3, [r0, #8]
 80020f0:	b92b      	cbnz	r3, 80020fe <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80020f2:	68c0      	ldr	r0, [r0, #12]
 80020f4:	f000 0001 	and.w	r0, r0, #1
 80020f8:	4770      	bx	lr
 80020fa:	4618      	mov	r0, r3
 80020fc:	4770      	bx	lr
 80020fe:	2001      	movs	r0, #1
    }
 8002100:	4770      	bx	lr

08002102 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002102:	b510      	push	{r4, lr}
 8002104:	210c      	movs	r1, #12
 8002106:	4604      	mov	r4, r0
 8002108:	f019 fcd9 	bl	801babe <_ZdlPvj>
 800210c:	4620      	mov	r0, r4
 800210e:	bd10      	pop	{r4, pc}

08002110 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002110:	b510      	push	{r4, lr}
 8002112:	2110      	movs	r1, #16
 8002114:	4604      	mov	r4, r0
 8002116:	f019 fcd2 	bl	801babe <_ZdlPvj>
 800211a:	4620      	mov	r0, r4
 800211c:	bd10      	pop	{r4, pc}

0800211e <_ZN23FrontendApplicationBaseD0Ev>:
 800211e:	b510      	push	{r4, lr}
 8002120:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002124:	4604      	mov	r4, r0
 8002126:	f019 fcca 	bl	801babe <_ZdlPvj>
 800212a:	4620      	mov	r0, r4
 800212c:	bd10      	pop	{r4, pc}

0800212e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800212e:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 8002130:	f00a fcb4 	bl	800ca9c <_ZN8touchgfx11Application11getInstanceEv>
 8002134:	6803      	ldr	r3, [r0, #0]
    }
 8002136:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 800213a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800213c:	4718      	bx	r3

0800213e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800213e:	b510      	push	{r4, lr}
 8002140:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002142:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002146:	b158      	cbz	r0, 8002160 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002148:	6803      	ldr	r3, [r0, #0]
 800214a:	68db      	ldr	r3, [r3, #12]
 800214c:	4798      	blx	r3
 800214e:	b138      	cbz	r0, 8002160 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002150:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002154:	6803      	ldr	r3, [r0, #0]
 8002156:	689b      	ldr	r3, [r3, #8]
 8002158:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800215a:	2300      	movs	r3, #0
 800215c:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002160:	bd10      	pop	{r4, pc}
	...

08002164 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/mainscreen_screen/mainScreenView.hpp>
#include <gui/mainscreen_screen/mainScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002164:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002166:	4604      	mov	r4, r0
 8002168:	4617      	mov	r7, r2
 800216a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800216c:	f00a fcb6 	bl	800cadc <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002170:	4b10      	ldr	r3, [pc, #64]	; (80021b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8002172:	2500      	movs	r5, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8002174:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 8002178:	4e0f      	ldr	r6, [pc, #60]	; (80021b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 800217a:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 800217c:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002180:	4b0e      	ldr	r3, [pc, #56]	; (80021bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002182:	6830      	ldr	r0, [r6, #0]
 8002184:	6023      	str	r3, [r4, #0]
 8002186:	4b0e      	ldr	r3, [pc, #56]	; (80021c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002188:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800218c:	6803      	ldr	r3, [r0, #0]
 800218e:	2101      	movs	r1, #1
 8002190:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002192:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8002196:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002198:	4628      	mov	r0, r5
 800219a:	f000 fb41 	bl	8002820 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800219e:	6833      	ldr	r3, [r6, #0]
 80021a0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80021a4:	b10a      	cbz	r2, 80021aa <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 80021a6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80021a8:	b900      	cbnz	r0, 80021ac <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 80021aa:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80021ac:	f012 fb51 	bl	8014852 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 80021b0:	4620      	mov	r0, r4
 80021b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80021b4:	20013554 	.word	0x20013554
 80021b8:	20013508 	.word	0x20013508
 80021bc:	0801db20 	.word	0x0801db20
 80021c0:	0801db08 	.word	0x0801db08

080021c4 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80021c4:	4b06      	ldr	r3, [pc, #24]	; (80021e0 <_ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv+0x1c>)
 80021c6:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80021ca:	2300      	movs	r3, #0
 80021cc:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// mainScreen

void FrontendApplicationBase::gotomainScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotomainScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80021d0:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80021d4:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80021d8:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80021dc:	4770      	bx	lr
 80021de:	bf00      	nop
 80021e0:	08002325 	.word	0x08002325

080021e4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80021e4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80021e8:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80021ea:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80021ec:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80021f0:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80021f2:	6803      	ldr	r3, [r0, #0]
 80021f4:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80021f6:	4688      	mov	r8, r1
 80021f8:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80021fa:	4798      	blx	r3
 80021fc:	f241 630b 	movw	r3, #5643	; 0x160b
 8002200:	4298      	cmp	r0, r3
 8002202:	d805      	bhi.n	8002210 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2c>
 8002204:	4b41      	ldr	r3, [pc, #260]	; (800230c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002206:	4a42      	ldr	r2, [pc, #264]	; (8002310 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002208:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800220a:	4842      	ldr	r0, [pc, #264]	; (8002314 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 800220c:	f019 fc86 	bl	801bb1c <__assert_func>
 8002210:	6860      	ldr	r0, [r4, #4]
 8002212:	6803      	ldr	r3, [r0, #0]
 8002214:	6a1b      	ldr	r3, [r3, #32]
 8002216:	4798      	blx	r3
 8002218:	280f      	cmp	r0, #15
 800221a:	d803      	bhi.n	8002224 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x40>
 800221c:	4b3e      	ldr	r3, [pc, #248]	; (8002318 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 800221e:	4a3c      	ldr	r2, [pc, #240]	; (8002310 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002220:	21a4      	movs	r1, #164	; 0xa4
 8002222:	e7f2      	b.n	800220a <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002224:	68e0      	ldr	r0, [r4, #12]
 8002226:	6803      	ldr	r3, [r0, #0]
 8002228:	6a1b      	ldr	r3, [r3, #32]
 800222a:	4798      	blx	r3
 800222c:	280b      	cmp	r0, #11
 800222e:	d803      	bhi.n	8002238 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
 8002230:	4b3a      	ldr	r3, [pc, #232]	; (800231c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8002232:	4a37      	ldr	r2, [pc, #220]	; (8002310 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002234:	21a5      	movs	r1, #165	; 0xa5
 8002236:	e7e8      	b.n	800220a <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    Application::getInstance()->clearAllTimerWidgets();
 8002238:	f00a fc30 	bl	800ca9c <_ZN8touchgfx11Application11getInstanceEv>
 800223c:	f00a fc34 	bl	800caa8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002240:	f8d9 0000 	ldr.w	r0, [r9]
 8002244:	b110      	cbz	r0, 800224c <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x68>
        (*currentTrans)->tearDown();
 8002246:	6803      	ldr	r3, [r0, #0]
 8002248:	68db      	ldr	r3, [r3, #12]
 800224a:	4798      	blx	r3
    if (*currentTrans)
 800224c:	f8d9 0000 	ldr.w	r0, [r9]
 8002250:	b110      	cbz	r0, 8002258 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x74>
        (*currentTrans)->~Transition();
 8002252:	6803      	ldr	r3, [r0, #0]
 8002254:	681b      	ldr	r3, [r3, #0]
 8002256:	4798      	blx	r3
    if (*currentScreen)
 8002258:	6838      	ldr	r0, [r7, #0]
 800225a:	b110      	cbz	r0, 8002262 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
        (*currentScreen)->tearDownScreen();
 800225c:	6803      	ldr	r3, [r0, #0]
 800225e:	695b      	ldr	r3, [r3, #20]
 8002260:	4798      	blx	r3
    if (*currentPresenter)
 8002262:	f8d8 0000 	ldr.w	r0, [r8]
 8002266:	b110      	cbz	r0, 800226e <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8a>
        (*currentPresenter)->deactivate();
 8002268:	6803      	ldr	r3, [r0, #0]
 800226a:	685b      	ldr	r3, [r3, #4]
 800226c:	4798      	blx	r3
    if (*currentScreen)
 800226e:	6838      	ldr	r0, [r7, #0]
 8002270:	b110      	cbz	r0, 8002278 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x94>
        (*currentScreen)->~Screen();
 8002272:	6803      	ldr	r3, [r0, #0]
 8002274:	681b      	ldr	r3, [r3, #0]
 8002276:	4798      	blx	r3
    if (*currentPresenter)
 8002278:	f8d8 0000 	ldr.w	r0, [r8]
 800227c:	b110      	cbz	r0, 8002284 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xa0>
        (*currentPresenter)->~Presenter();
 800227e:	6803      	ldr	r3, [r0, #0]
 8002280:	689b      	ldr	r3, [r3, #8]
 8002282:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002284:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002286:	6803      	ldr	r3, [r0, #0]
 8002288:	2100      	movs	r1, #0
 800228a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800228c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800228e:	f04f 0b00 	mov.w	fp, #0
 8002292:	4b23      	ldr	r3, [pc, #140]	; (8002320 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8002294:	6003      	str	r3, [r0, #0]
 8002296:	4605      	mov	r5, r0
 8002298:	f8c0 b004 	str.w	fp, [r0, #4]
 800229c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80022a0:	68a0      	ldr	r0, [r4, #8]
 80022a2:	6803      	ldr	r3, [r0, #0]
 80022a4:	4659      	mov	r1, fp
 80022a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022a8:	4798      	blx	r3
 80022aa:	4606      	mov	r6, r0
 80022ac:	f002 f80c 	bl	80042c8 <_ZN14mainScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80022b0:	6860      	ldr	r0, [r4, #4]
 80022b2:	6803      	ldr	r3, [r0, #0]
 80022b4:	4659      	mov	r1, fp
 80022b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022b8:	4798      	blx	r3
 80022ba:	4631      	mov	r1, r6
 80022bc:	4604      	mov	r4, r0
 80022be:	f001 ff7b 	bl	80041b8 <_ZN19mainScreenPresenterC1ER14mainScreenView>
    *currentTrans = newTransition;
 80022c2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80022c6:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 80022ca:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 80022cc:	b1e4      	cbz	r4, 8002308 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
 80022ce:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80022d0:	f8ca 3004 	str.w	r3, [sl, #4]
    newScreen->setupScreen();
 80022d4:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80022d6:	f8c4 a008 	str.w	sl, [r4, #8]
 80022da:	4630      	mov	r0, r6
 80022dc:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 80022de:	63f4      	str	r4, [r6, #60]	; 0x3c
 80022e0:	4798      	blx	r3
    newPresenter->activate();
 80022e2:	6823      	ldr	r3, [r4, #0]
 80022e4:	4620      	mov	r0, r4
 80022e6:	681b      	ldr	r3, [r3, #0]
 80022e8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80022ea:	4629      	mov	r1, r5
 80022ec:	4630      	mov	r0, r6
 80022ee:	f00b ffa1 	bl	800e234 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80022f2:	682b      	ldr	r3, [r5, #0]
 80022f4:	4628      	mov	r0, r5
 80022f6:	691b      	ldr	r3, [r3, #16]
 80022f8:	4798      	blx	r3
    newTransition->invalidate();
 80022fa:	682b      	ldr	r3, [r5, #0]
 80022fc:	4628      	mov	r0, r5
 80022fe:	695b      	ldr	r3, [r3, #20]
 8002300:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8002302:	4620      	mov	r0, r4
 8002304:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8002308:	4623      	mov	r3, r4
 800230a:	e7e1      	b.n	80022d0 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xec>
 800230c:	0801d7d8 	.word	0x0801d7d8
 8002310:	0801d866 	.word	0x0801d866
 8002314:	0801d970 	.word	0x0801d970
 8002318:	0801d9b7 	.word	0x0801d9b7
 800231c:	0801da5a 	.word	0x0801da5a
 8002320:	0801db64 	.word	0x0801db64

08002324 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotomainScreenScreenNoTransitionImpl()
{
 8002324:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002326:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 800232a:	9300      	str	r3, [sp, #0]
 800232c:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8002330:	4b04      	ldr	r3, [pc, #16]	; (8002344 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x20>)
 8002332:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8002336:	4804      	ldr	r0, [pc, #16]	; (8002348 <_ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv+0x24>)
 8002338:	f7ff ff54 	bl	80021e4 <_ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800233c:	b003      	add	sp, #12
 800233e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002342:	bf00      	nop
 8002344:	20013548 	.word	0x20013548
 8002348:	20013544 	.word	0x20013544

0800234c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800234c:	6a00      	ldr	r0, [r0, #32]
 800234e:	4770      	bx	lr

08002350 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002350:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002352:	4770      	bx	lr

08002354 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002354:	4770      	bx	lr

08002356 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002356:	888b      	ldrh	r3, [r1, #4]
 8002358:	6980      	ldr	r0, [r0, #24]
 800235a:	680a      	ldr	r2, [r1, #0]
 800235c:	0adb      	lsrs	r3, r3, #11
 800235e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002362:	4410      	add	r0, r2
 8002364:	4770      	bx	lr

08002366 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002366:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002368:	b1c2      	cbz	r2, 800239c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800236a:	7b13      	ldrb	r3, [r2, #12]
 800236c:	b1b3      	cbz	r3, 800239c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800236e:	7b54      	ldrb	r4, [r2, #13]
 8002370:	7ad2      	ldrb	r2, [r2, #11]
 8002372:	0224      	lsls	r4, r4, #8
 8002374:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002378:	4314      	orrs	r4, r2
 800237a:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800237c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800237e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002382:	8813      	ldrh	r3, [r2, #0]
 8002384:	428b      	cmp	r3, r1
 8002386:	d102      	bne.n	800238e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002388:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 800238c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800238e:	d805      	bhi.n	800239c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002390:	3801      	subs	r0, #1
 8002392:	b280      	uxth	r0, r0
 8002394:	3204      	adds	r2, #4
 8002396:	2800      	cmp	r0, #0
 8002398:	d1f3      	bne.n	8002382 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800239a:	e7f7      	b.n	800238c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800239c:	2000      	movs	r0, #0
 800239e:	e7f5      	b.n	800238c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080023a0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80023a0:	b510      	push	{r4, lr}
 80023a2:	2128      	movs	r1, #40	; 0x28
 80023a4:	4604      	mov	r4, r0
 80023a6:	f019 fb8a 	bl	801babe <_ZdlPvj>
 80023aa:	4620      	mov	r0, r4
 80023ac:	bd10      	pop	{r4, pc}
	...

080023b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80023b0:	b530      	push	{r4, r5, lr}
 80023b2:	b089      	sub	sp, #36	; 0x24
 80023b4:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80023b6:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80023ba:	9506      	str	r5, [sp, #24]
 80023bc:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80023c0:	9505      	str	r5, [sp, #20]
 80023c2:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80023c6:	9504      	str	r5, [sp, #16]
 80023c8:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80023cc:	9503      	str	r5, [sp, #12]
 80023ce:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80023d2:	9502      	str	r5, [sp, #8]
 80023d4:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80023d8:	9501      	str	r5, [sp, #4]
 80023da:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80023de:	9500      	str	r5, [sp, #0]
 80023e0:	f00b fb88 	bl	800daf4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80023e4:	4b06      	ldr	r3, [pc, #24]	; (8002400 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 80023e6:	6023      	str	r3, [r4, #0]
 80023e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80023ea:	61a3      	str	r3, [r4, #24]
 80023ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80023ee:	61e3      	str	r3, [r4, #28]
 80023f0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80023f2:	6223      	str	r3, [r4, #32]
 80023f4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80023f6:	6263      	str	r3, [r4, #36]	; 0x24
}
 80023f8:	4620      	mov	r0, r4
 80023fa:	b009      	add	sp, #36	; 0x24
 80023fc:	bd30      	pop	{r4, r5, pc}
 80023fe:	bf00      	nop
 8002400:	0801db88 	.word	0x0801db88

08002404 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_consola_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_consola_12_4bpp();

touchgfx::GeneratedFont& getFont_consola_12_4bpp()
{
    static touchgfx::GeneratedFont consola_12_4bpp(glyphs_consola_12_4bpp, 12, 12, 0, 4, 1, 0, 0, unicodes_consola_12_4bpp, kerning_consola_12_4bpp, 63, 0, 0, 0);
 8002404:	4770      	bx	lr
	...

08002408 <_Z23getFont_consola_12_4bppv>:
{
 8002408:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont consola_12_4bpp(glyphs_consola_12_4bpp, 12, 12, 0, 4, 1, 0, 0, unicodes_consola_12_4bpp, kerning_consola_12_4bpp, 63, 0, 0, 0);
 800240a:	4d15      	ldr	r5, [pc, #84]	; (8002460 <_Z23getFont_consola_12_4bppv+0x58>)
 800240c:	782c      	ldrb	r4, [r5, #0]
 800240e:	f3bf 8f5b 	dmb	ish
 8002412:	f014 0401 	ands.w	r4, r4, #1
{
 8002416:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont consola_12_4bpp(glyphs_consola_12_4bpp, 12, 12, 0, 4, 1, 0, 0, unicodes_consola_12_4bpp, kerning_consola_12_4bpp, 63, 0, 0, 0);
 8002418:	d11f      	bne.n	800245a <_Z23getFont_consola_12_4bppv+0x52>
 800241a:	4628      	mov	r0, r5
 800241c:	f019 fb51 	bl	801bac2 <__cxa_guard_acquire>
 8002420:	b1d8      	cbz	r0, 800245a <_Z23getFont_consola_12_4bppv+0x52>
 8002422:	233f      	movs	r3, #63	; 0x3f
 8002424:	9307      	str	r3, [sp, #28]
 8002426:	4b0f      	ldr	r3, [pc, #60]	; (8002464 <_Z23getFont_consola_12_4bppv+0x5c>)
 8002428:	9306      	str	r3, [sp, #24]
 800242a:	4b0f      	ldr	r3, [pc, #60]	; (8002468 <_Z23getFont_consola_12_4bppv+0x60>)
 800242c:	490f      	ldr	r1, [pc, #60]	; (800246c <_Z23getFont_consola_12_4bppv+0x64>)
 800242e:	4810      	ldr	r0, [pc, #64]	; (8002470 <_Z23getFont_consola_12_4bppv+0x68>)
 8002430:	9408      	str	r4, [sp, #32]
 8002432:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002436:	2201      	movs	r2, #1
 8002438:	2304      	movs	r3, #4
 800243a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800243e:	230c      	movs	r3, #12
 8002440:	461a      	mov	r2, r3
 8002442:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002446:	9403      	str	r4, [sp, #12]
 8002448:	9400      	str	r4, [sp, #0]
 800244a:	f7ff ffb1 	bl	80023b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800244e:	4628      	mov	r0, r5
 8002450:	f019 fb43 	bl	801bada <__cxa_guard_release>
 8002454:	4807      	ldr	r0, [pc, #28]	; (8002474 <_Z23getFont_consola_12_4bppv+0x6c>)
 8002456:	f019 fb7f 	bl	801bb58 <atexit>
    return consola_12_4bpp;
}
 800245a:	4805      	ldr	r0, [pc, #20]	; (8002470 <_Z23getFont_consola_12_4bppv+0x68>)
 800245c:	b00d      	add	sp, #52	; 0x34
 800245e:	bd30      	pop	{r4, r5, pc}
 8002460:	2000267c 	.word	0x2000267c
 8002464:	08022878 	.word	0x08022878
 8002468:	08022894 	.word	0x08022894
 800246c:	080225b4 	.word	0x080225b4
 8002470:	20002680 	.word	0x20002680
 8002474:	08002405 	.word	0x08002405

08002478 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_consola_14_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_consola_14_4bpp();

touchgfx::GeneratedFont& getFont_consola_14_4bpp()
{
    static touchgfx::GeneratedFont consola_14_4bpp(glyphs_consola_14_4bpp, 4, 14, 0, 4, 1, 0, 0, unicodes_consola_14_4bpp, kerning_consola_14_4bpp, 63, 0, 0, 0);
 8002478:	4770      	bx	lr
	...

0800247c <_Z23getFont_consola_14_4bppv>:
{
 800247c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont consola_14_4bpp(glyphs_consola_14_4bpp, 4, 14, 0, 4, 1, 0, 0, unicodes_consola_14_4bpp, kerning_consola_14_4bpp, 63, 0, 0, 0);
 800247e:	4d15      	ldr	r5, [pc, #84]	; (80024d4 <_Z23getFont_consola_14_4bppv+0x58>)
 8002480:	782c      	ldrb	r4, [r5, #0]
 8002482:	f3bf 8f5b 	dmb	ish
 8002486:	f014 0401 	ands.w	r4, r4, #1
{
 800248a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont consola_14_4bpp(glyphs_consola_14_4bpp, 4, 14, 0, 4, 1, 0, 0, unicodes_consola_14_4bpp, kerning_consola_14_4bpp, 63, 0, 0, 0);
 800248c:	d11e      	bne.n	80024cc <_Z23getFont_consola_14_4bppv+0x50>
 800248e:	4628      	mov	r0, r5
 8002490:	f019 fb17 	bl	801bac2 <__cxa_guard_acquire>
 8002494:	b1d0      	cbz	r0, 80024cc <_Z23getFont_consola_14_4bppv+0x50>
 8002496:	233f      	movs	r3, #63	; 0x3f
 8002498:	9307      	str	r3, [sp, #28]
 800249a:	4b0f      	ldr	r3, [pc, #60]	; (80024d8 <_Z23getFont_consola_14_4bppv+0x5c>)
 800249c:	9306      	str	r3, [sp, #24]
 800249e:	4b0f      	ldr	r3, [pc, #60]	; (80024dc <_Z23getFont_consola_14_4bppv+0x60>)
 80024a0:	490f      	ldr	r1, [pc, #60]	; (80024e0 <_Z23getFont_consola_14_4bppv+0x64>)
 80024a2:	4810      	ldr	r0, [pc, #64]	; (80024e4 <_Z23getFont_consola_14_4bppv+0x68>)
 80024a4:	9408      	str	r4, [sp, #32]
 80024a6:	2204      	movs	r2, #4
 80024a8:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80024ac:	2301      	movs	r3, #1
 80024ae:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80024b2:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80024b6:	230e      	movs	r3, #14
 80024b8:	9403      	str	r4, [sp, #12]
 80024ba:	9400      	str	r4, [sp, #0]
 80024bc:	f7ff ff78 	bl	80023b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80024c0:	4628      	mov	r0, r5
 80024c2:	f019 fb0a 	bl	801bada <__cxa_guard_release>
 80024c6:	4808      	ldr	r0, [pc, #32]	; (80024e8 <_Z23getFont_consola_14_4bppv+0x6c>)
 80024c8:	f019 fb46 	bl	801bb58 <atexit>
    return consola_14_4bpp;
}
 80024cc:	4805      	ldr	r0, [pc, #20]	; (80024e4 <_Z23getFont_consola_14_4bppv+0x68>)
 80024ce:	b00d      	add	sp, #52	; 0x34
 80024d0:	bd30      	pop	{r4, r5, pc}
 80024d2:	bf00      	nop
 80024d4:	200026a8 	.word	0x200026a8
 80024d8:	0802287c 	.word	0x0802287c
 80024dc:	08022898 	.word	0x08022898
 80024e0:	0802265c 	.word	0x0802265c
 80024e4:	200026ac 	.word	0x200026ac
 80024e8:	08002479 	.word	0x08002479

080024ec <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_consola_28_8bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_consola_28_8bpp();

touchgfx::GeneratedFont& getFont_consola_28_8bpp()
{
    static touchgfx::GeneratedFont consola_28_8bpp(glyphs_consola_28_8bpp, 18, 28, 0, 8, 0, 0, 0, unicodes_consola_28_8bpp, kerning_consola_28_8bpp, 63, 0, 0, 0);
 80024ec:	4770      	bx	lr
	...

080024f0 <_Z23getFont_consola_28_8bppv>:
{
 80024f0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont consola_28_8bpp(glyphs_consola_28_8bpp, 18, 28, 0, 8, 0, 0, 0, unicodes_consola_28_8bpp, kerning_consola_28_8bpp, 63, 0, 0, 0);
 80024f2:	4d15      	ldr	r5, [pc, #84]	; (8002548 <_Z23getFont_consola_28_8bppv+0x58>)
 80024f4:	782c      	ldrb	r4, [r5, #0]
 80024f6:	f3bf 8f5b 	dmb	ish
 80024fa:	f014 0401 	ands.w	r4, r4, #1
{
 80024fe:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont consola_28_8bpp(glyphs_consola_28_8bpp, 18, 28, 0, 8, 0, 0, 0, unicodes_consola_28_8bpp, kerning_consola_28_8bpp, 63, 0, 0, 0);
 8002500:	d11e      	bne.n	8002540 <_Z23getFont_consola_28_8bppv+0x50>
 8002502:	4628      	mov	r0, r5
 8002504:	f019 fadd 	bl	801bac2 <__cxa_guard_acquire>
 8002508:	b1d0      	cbz	r0, 8002540 <_Z23getFont_consola_28_8bppv+0x50>
 800250a:	233f      	movs	r3, #63	; 0x3f
 800250c:	9307      	str	r3, [sp, #28]
 800250e:	4b0f      	ldr	r3, [pc, #60]	; (800254c <_Z23getFont_consola_28_8bppv+0x5c>)
 8002510:	9306      	str	r3, [sp, #24]
 8002512:	4b0f      	ldr	r3, [pc, #60]	; (8002550 <_Z23getFont_consola_28_8bppv+0x60>)
 8002514:	490f      	ldr	r1, [pc, #60]	; (8002554 <_Z23getFont_consola_28_8bppv+0x64>)
 8002516:	4810      	ldr	r0, [pc, #64]	; (8002558 <_Z23getFont_consola_28_8bppv+0x68>)
 8002518:	9408      	str	r4, [sp, #32]
 800251a:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800251e:	2308      	movs	r3, #8
 8002520:	e9cd 4300 	strd	r4, r3, [sp]
 8002524:	2212      	movs	r2, #18
 8002526:	231c      	movs	r3, #28
 8002528:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800252c:	e9cd 4402 	strd	r4, r4, [sp, #8]
 8002530:	f7ff ff3e 	bl	80023b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002534:	4628      	mov	r0, r5
 8002536:	f019 fad0 	bl	801bada <__cxa_guard_release>
 800253a:	4808      	ldr	r0, [pc, #32]	; (800255c <_Z23getFont_consola_28_8bppv+0x6c>)
 800253c:	f019 fb0c 	bl	801bb58 <atexit>
    return consola_28_8bpp;
}
 8002540:	4805      	ldr	r0, [pc, #20]	; (8002558 <_Z23getFont_consola_28_8bppv+0x68>)
 8002542:	b00d      	add	sp, #52	; 0x34
 8002544:	bd30      	pop	{r4, r5, pc}
 8002546:	bf00      	nop
 8002548:	200026d4 	.word	0x200026d4
 800254c:	08022880 	.word	0x08022880
 8002550:	0802289c 	.word	0x0802289c
 8002554:	08022694 	.word	0x08022694
 8002558:	200026d8 	.word	0x200026d8
 800255c:	080024ed 	.word	0x080024ed

08002560 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_consolab_24_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_consolab_24_4bpp();

touchgfx::GeneratedFont& getFont_consolab_24_4bpp()
{
    static touchgfx::GeneratedFont consolab_24_4bpp(glyphs_consolab_24_4bpp, 13, 24, 5, 4, 1, 0, 0, unicodes_consolab_24_4bpp, kerning_consolab_24_4bpp, 63, 0, 0, 0);
 8002560:	4770      	bx	lr
	...

08002564 <_Z24getFont_consolab_24_4bppv>:
{
 8002564:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont consolab_24_4bpp(glyphs_consolab_24_4bpp, 13, 24, 5, 4, 1, 0, 0, unicodes_consolab_24_4bpp, kerning_consolab_24_4bpp, 63, 0, 0, 0);
 8002566:	4d16      	ldr	r5, [pc, #88]	; (80025c0 <_Z24getFont_consolab_24_4bppv+0x5c>)
 8002568:	782c      	ldrb	r4, [r5, #0]
 800256a:	f3bf 8f5b 	dmb	ish
 800256e:	f014 0401 	ands.w	r4, r4, #1
{
 8002572:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont consolab_24_4bpp(glyphs_consolab_24_4bpp, 13, 24, 5, 4, 1, 0, 0, unicodes_consolab_24_4bpp, kerning_consolab_24_4bpp, 63, 0, 0, 0);
 8002574:	d120      	bne.n	80025b8 <_Z24getFont_consolab_24_4bppv+0x54>
 8002576:	4628      	mov	r0, r5
 8002578:	f019 faa3 	bl	801bac2 <__cxa_guard_acquire>
 800257c:	b1e0      	cbz	r0, 80025b8 <_Z24getFont_consolab_24_4bppv+0x54>
 800257e:	233f      	movs	r3, #63	; 0x3f
 8002580:	9307      	str	r3, [sp, #28]
 8002582:	4b10      	ldr	r3, [pc, #64]	; (80025c4 <_Z24getFont_consolab_24_4bppv+0x60>)
 8002584:	9306      	str	r3, [sp, #24]
 8002586:	4b10      	ldr	r3, [pc, #64]	; (80025c8 <_Z24getFont_consolab_24_4bppv+0x64>)
 8002588:	4910      	ldr	r1, [pc, #64]	; (80025cc <_Z24getFont_consolab_24_4bppv+0x68>)
 800258a:	4811      	ldr	r0, [pc, #68]	; (80025d0 <_Z24getFont_consolab_24_4bppv+0x6c>)
 800258c:	9408      	str	r4, [sp, #32]
 800258e:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002592:	2201      	movs	r2, #1
 8002594:	2304      	movs	r3, #4
 8002596:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800259a:	2305      	movs	r3, #5
 800259c:	9300      	str	r3, [sp, #0]
 800259e:	220d      	movs	r2, #13
 80025a0:	2318      	movs	r3, #24
 80025a2:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80025a6:	9403      	str	r4, [sp, #12]
 80025a8:	f7ff ff02 	bl	80023b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80025ac:	4628      	mov	r0, r5
 80025ae:	f019 fa94 	bl	801bada <__cxa_guard_release>
 80025b2:	4808      	ldr	r0, [pc, #32]	; (80025d4 <_Z24getFont_consolab_24_4bppv+0x70>)
 80025b4:	f019 fad0 	bl	801bb58 <atexit>
    return consolab_24_4bpp;
}
 80025b8:	4805      	ldr	r0, [pc, #20]	; (80025d0 <_Z24getFont_consolab_24_4bppv+0x6c>)
 80025ba:	b00d      	add	sp, #52	; 0x34
 80025bc:	bd30      	pop	{r4, r5, pc}
 80025be:	bf00      	nop
 80025c0:	20002700 	.word	0x20002700
 80025c4:	08022884 	.word	0x08022884
 80025c8:	080228a0 	.word	0x080228a0
 80025cc:	08022790 	.word	0x08022790
 80025d0:	20002704 	.word	0x20002704
 80025d4:	08002561 	.word	0x08002561

080025d8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80025d8:	4770      	bx	lr
	...

080025dc <_Z23getFont_verdana_10_4bppv>:
{
 80025dc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80025de:	4d15      	ldr	r5, [pc, #84]	; (8002634 <_Z23getFont_verdana_10_4bppv+0x58>)
 80025e0:	782c      	ldrb	r4, [r5, #0]
 80025e2:	f3bf 8f5b 	dmb	ish
 80025e6:	f014 0401 	ands.w	r4, r4, #1
{
 80025ea:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80025ec:	d11e      	bne.n	800262c <_Z23getFont_verdana_10_4bppv+0x50>
 80025ee:	4628      	mov	r0, r5
 80025f0:	f019 fa67 	bl	801bac2 <__cxa_guard_acquire>
 80025f4:	b1d0      	cbz	r0, 800262c <_Z23getFont_verdana_10_4bppv+0x50>
 80025f6:	233f      	movs	r3, #63	; 0x3f
 80025f8:	9307      	str	r3, [sp, #28]
 80025fa:	4b0f      	ldr	r3, [pc, #60]	; (8002638 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80025fc:	9306      	str	r3, [sp, #24]
 80025fe:	4b0f      	ldr	r3, [pc, #60]	; (800263c <_Z23getFont_verdana_10_4bppv+0x60>)
 8002600:	490f      	ldr	r1, [pc, #60]	; (8002640 <_Z23getFont_verdana_10_4bppv+0x64>)
 8002602:	4810      	ldr	r0, [pc, #64]	; (8002644 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002604:	9408      	str	r4, [sp, #32]
 8002606:	2201      	movs	r2, #1
 8002608:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800260c:	2304      	movs	r3, #4
 800260e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002612:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002616:	230a      	movs	r3, #10
 8002618:	9403      	str	r4, [sp, #12]
 800261a:	9400      	str	r4, [sp, #0]
 800261c:	f7ff fec8 	bl	80023b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002620:	4628      	mov	r0, r5
 8002622:	f019 fa5a 	bl	801bada <__cxa_guard_release>
 8002626:	4808      	ldr	r0, [pc, #32]	; (8002648 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002628:	f019 fa96 	bl	801bb58 <atexit>
    return verdana_10_4bpp;
}
 800262c:	4805      	ldr	r0, [pc, #20]	; (8002644 <_Z23getFont_verdana_10_4bppv+0x68>)
 800262e:	b00d      	add	sp, #52	; 0x34
 8002630:	bd30      	pop	{r4, r5, pc}
 8002632:	bf00      	nop
 8002634:	2000272c 	.word	0x2000272c
 8002638:	08022888 	.word	0x08022888
 800263c:	080228a4 	.word	0x080228a4
 8002640:	08022848 	.word	0x08022848
 8002644:	20002730 	.word	0x20002730
 8002648:	080025d9 	.word	0x080025d9

0800264c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800264c:	4770      	bx	lr
	...

08002650 <_Z23getFont_verdana_20_4bppv>:
{
 8002650:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002652:	4d15      	ldr	r5, [pc, #84]	; (80026a8 <_Z23getFont_verdana_20_4bppv+0x58>)
 8002654:	782c      	ldrb	r4, [r5, #0]
 8002656:	f3bf 8f5b 	dmb	ish
 800265a:	f014 0401 	ands.w	r4, r4, #1
{
 800265e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002660:	d11e      	bne.n	80026a0 <_Z23getFont_verdana_20_4bppv+0x50>
 8002662:	4628      	mov	r0, r5
 8002664:	f019 fa2d 	bl	801bac2 <__cxa_guard_acquire>
 8002668:	b1d0      	cbz	r0, 80026a0 <_Z23getFont_verdana_20_4bppv+0x50>
 800266a:	233f      	movs	r3, #63	; 0x3f
 800266c:	9307      	str	r3, [sp, #28]
 800266e:	4b0f      	ldr	r3, [pc, #60]	; (80026ac <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002670:	9306      	str	r3, [sp, #24]
 8002672:	4b0f      	ldr	r3, [pc, #60]	; (80026b0 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002674:	490f      	ldr	r1, [pc, #60]	; (80026b4 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002676:	4810      	ldr	r0, [pc, #64]	; (80026b8 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002678:	9408      	str	r4, [sp, #32]
 800267a:	2201      	movs	r2, #1
 800267c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002680:	2304      	movs	r3, #4
 8002682:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002686:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800268a:	2314      	movs	r3, #20
 800268c:	9403      	str	r4, [sp, #12]
 800268e:	9400      	str	r4, [sp, #0]
 8002690:	f7ff fe8e 	bl	80023b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002694:	4628      	mov	r0, r5
 8002696:	f019 fa20 	bl	801bada <__cxa_guard_release>
 800269a:	4808      	ldr	r0, [pc, #32]	; (80026bc <_Z23getFont_verdana_20_4bppv+0x6c>)
 800269c:	f019 fa5c 	bl	801bb58 <atexit>
    return verdana_20_4bpp;
}
 80026a0:	4805      	ldr	r0, [pc, #20]	; (80026b8 <_Z23getFont_verdana_20_4bppv+0x68>)
 80026a2:	b00d      	add	sp, #52	; 0x34
 80026a4:	bd30      	pop	{r4, r5, pc}
 80026a6:	bf00      	nop
 80026a8:	20002758 	.word	0x20002758
 80026ac:	0802288c 	.word	0x0802288c
 80026b0:	080228a8 	.word	0x080228a8
 80026b4:	08022858 	.word	0x08022858
 80026b8:	2000275c 	.word	0x2000275c
 80026bc:	0800264d 	.word	0x0800264d

080026c0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80026c0:	4770      	bx	lr
	...

080026c4 <_Z23getFont_verdana_40_4bppv>:
{
 80026c4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80026c6:	4d15      	ldr	r5, [pc, #84]	; (800271c <_Z23getFont_verdana_40_4bppv+0x58>)
 80026c8:	782c      	ldrb	r4, [r5, #0]
 80026ca:	f3bf 8f5b 	dmb	ish
 80026ce:	f014 0401 	ands.w	r4, r4, #1
{
 80026d2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80026d4:	d11e      	bne.n	8002714 <_Z23getFont_verdana_40_4bppv+0x50>
 80026d6:	4628      	mov	r0, r5
 80026d8:	f019 f9f3 	bl	801bac2 <__cxa_guard_acquire>
 80026dc:	b1d0      	cbz	r0, 8002714 <_Z23getFont_verdana_40_4bppv+0x50>
 80026de:	233f      	movs	r3, #63	; 0x3f
 80026e0:	9307      	str	r3, [sp, #28]
 80026e2:	4b0f      	ldr	r3, [pc, #60]	; (8002720 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80026e4:	9306      	str	r3, [sp, #24]
 80026e6:	4b0f      	ldr	r3, [pc, #60]	; (8002724 <_Z23getFont_verdana_40_4bppv+0x60>)
 80026e8:	490f      	ldr	r1, [pc, #60]	; (8002728 <_Z23getFont_verdana_40_4bppv+0x64>)
 80026ea:	4810      	ldr	r0, [pc, #64]	; (800272c <_Z23getFont_verdana_40_4bppv+0x68>)
 80026ec:	9408      	str	r4, [sp, #32]
 80026ee:	2201      	movs	r2, #1
 80026f0:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80026f4:	2304      	movs	r3, #4
 80026f6:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80026fa:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80026fe:	2328      	movs	r3, #40	; 0x28
 8002700:	9403      	str	r4, [sp, #12]
 8002702:	9400      	str	r4, [sp, #0]
 8002704:	f7ff fe54 	bl	80023b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002708:	4628      	mov	r0, r5
 800270a:	f019 f9e6 	bl	801bada <__cxa_guard_release>
 800270e:	4808      	ldr	r0, [pc, #32]	; (8002730 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002710:	f019 fa22 	bl	801bb58 <atexit>
    return verdana_40_4bpp;
}
 8002714:	4805      	ldr	r0, [pc, #20]	; (800272c <_Z23getFont_verdana_40_4bppv+0x68>)
 8002716:	b00d      	add	sp, #52	; 0x34
 8002718:	bd30      	pop	{r4, r5, pc}
 800271a:	bf00      	nop
 800271c:	20002784 	.word	0x20002784
 8002720:	08022890 	.word	0x08022890
 8002724:	080228ac 	.word	0x080228ac
 8002728:	08022868 	.word	0x08022868
 800272c:	20002788 	.word	0x20002788
 8002730:	080026c1 	.word	0x080026c1

08002734 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002734:	2000      	movs	r0, #0
 8002736:	4770      	bx	lr

08002738 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8002738:	2000      	movs	r0, #0
 800273a:	4770      	bx	lr

0800273c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800273c:	b40e      	push	{r1, r2, r3}
 800273e:	b503      	push	{r0, r1, lr}
 8002740:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002742:	2100      	movs	r1, #0
{
 8002744:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002748:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800274a:	f00b f809 	bl	800d760 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800274e:	b002      	add	sp, #8
 8002750:	f85d eb04 	ldr.w	lr, [sp], #4
 8002754:	b003      	add	sp, #12
 8002756:	4770      	bx	lr

08002758 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002758:	b40c      	push	{r2, r3}
 800275a:	b507      	push	{r0, r1, r2, lr}
 800275c:	ab04      	add	r3, sp, #16
 800275e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002762:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002764:	f00a fffc 	bl	800d760 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002768:	b003      	add	sp, #12
 800276a:	f85d eb04 	ldr.w	lr, [sp], #4
 800276e:	b002      	add	sp, #8
 8002770:	4770      	bx	lr
	...

08002774 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002774:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8002776:	b510      	push	{r4, lr}
 8002778:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800277a:	b373      	cbz	r3, 80027da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800277c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800277e:	b92b      	cbnz	r3, 800278c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002780:	4b18      	ldr	r3, [pc, #96]	; (80027e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002782:	4a19      	ldr	r2, [pc, #100]	; (80027e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002784:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002786:	4819      	ldr	r0, [pc, #100]	; (80027ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002788:	f019 f9c8 	bl	801bb1c <__assert_func>
            return buffer[pos];
 800278c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800278e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002792:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8002794:	b30b      	cbz	r3, 80027da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002796:	f00c fabb 	bl	800ed10 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800279a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800279c:	2b01      	cmp	r3, #1
 800279e:	d803      	bhi.n	80027a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80027a0:	4b13      	ldr	r3, [pc, #76]	; (80027f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80027a2:	4a14      	ldr	r2, [pc, #80]	; (80027f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80027a4:	21c5      	movs	r1, #197	; 0xc5
 80027a6:	e7ee      	b.n	8002786 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80027a8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80027aa:	1c53      	adds	r3, r2, #1
 80027ac:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80027ae:	2b09      	cmp	r3, #9
 80027b0:	4619      	mov	r1, r3
 80027b2:	bf88      	it	hi
 80027b4:	f1a3 010a 	subhi.w	r1, r3, #10
 80027b8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80027bc:	f640 103f 	movw	r0, #2367	; 0x93f
 80027c0:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80027c2:	4281      	cmp	r1, r0
 80027c4:	d109      	bne.n	80027da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80027c6:	2b0a      	cmp	r3, #10
 80027c8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80027cc:	bf28      	it	cs
 80027ce:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80027d0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80027d4:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 80027d6:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80027d8:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80027da:	4620      	mov	r0, r4
}
 80027dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80027e0:	f00c b97a 	b.w	800ead8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80027e4:	0801dbd8 	.word	0x0801dbd8
 80027e8:	0801dbe1 	.word	0x0801dbe1
 80027ec:	0801dc8c 	.word	0x0801dc8c
 80027f0:	0801dcd6 	.word	0x0801dcd6
 80027f4:	0801dce4 	.word	0x0801dce4

080027f8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80027f8:	f00c b926 	b.w	800ea48 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080027fc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80027fc:	b510      	push	{r4, lr}
 80027fe:	b086      	sub	sp, #24
 8002800:	ac02      	add	r4, sp, #8
 8002802:	e884 0006 	stmia.w	r4, {r1, r2}
 8002806:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8002808:	ab0a      	add	r3, sp, #40	; 0x28
 800280a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800280c:	9301      	str	r3, [sp, #4]
 800280e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002810:	9300      	str	r3, [sp, #0]
 8002812:	4621      	mov	r1, r4
 8002814:	9b08      	ldr	r3, [sp, #32]
 8002816:	f009 fcb8 	bl	800c18a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800281a:	b006      	add	sp, #24
 800281c:	bd10      	pop	{r4, pc}
	...

08002820 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002820:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002822:	bb18      	cbnz	r0, 800286c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002824:	4b12      	ldr	r3, [pc, #72]	; (8002870 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002826:	4813      	ldr	r0, [pc, #76]	; (8002874 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002828:	681b      	ldr	r3, [r3, #0]
 800282a:	4913      	ldr	r1, [pc, #76]	; (8002878 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800282c:	b1b3      	cbz	r3, 800285c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800282e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002830:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002832:	441a      	add	r2, r3
 8002834:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002836:	685a      	ldr	r2, [r3, #4]
 8002838:	441a      	add	r2, r3
 800283a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800283c:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800283e:	4b0f      	ldr	r3, [pc, #60]	; (800287c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002840:	2200      	movs	r2, #0
 8002842:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002844:	f000 f838 	bl	80028b8 <_ZN17TypedTextDatabase8getFontsEv>
 8002848:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800284a:	f000 f833 	bl	80028b4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800284e:	4b0c      	ldr	r3, [pc, #48]	; (8002880 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002850:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002852:	4b0c      	ldr	r3, [pc, #48]	; (8002884 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002854:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002856:	4b0c      	ldr	r3, [pc, #48]	; (8002888 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002858:	8018      	strh	r0, [r3, #0]
    }
}
 800285a:	e007      	b.n	800286c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800285c:	4b0b      	ldr	r3, [pc, #44]	; (800288c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800285e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002860:	4b0b      	ldr	r3, [pc, #44]	; (8002890 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002862:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002864:	4b0b      	ldr	r3, [pc, #44]	; (8002894 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002866:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002868:	2c00      	cmp	r4, #0
 800286a:	d1e8      	bne.n	800283e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800286c:	bd38      	pop	{r3, r4, r5, pc}
 800286e:	bf00      	nop
 8002870:	200027b0 	.word	0x200027b0
 8002874:	200027b4 	.word	0x200027b4
 8002878:	200027b8 	.word	0x200027b8
 800287c:	200027bc 	.word	0x200027bc
 8002880:	20013558 	.word	0x20013558
 8002884:	20013560 	.word	0x20013560
 8002888:	2001355c 	.word	0x2001355c
 800288c:	08022944 	.word	0x08022944
 8002890:	080228b0 	.word	0x080228b0
 8002894:	080229e8 	.word	0x080229e8

08002898 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002898:	4b04      	ldr	r3, [pc, #16]	; (80028ac <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800289a:	681b      	ldr	r3, [r3, #0]
 800289c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80028a0:	4b03      	ldr	r3, [pc, #12]	; (80028b0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80028a2:	681b      	ldr	r3, [r3, #0]
}
 80028a4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80028a8:	4770      	bx	lr
 80028aa:	bf00      	nop
 80028ac:	200027b8 	.word	0x200027b8
 80028b0:	200027b4 	.word	0x200027b4

080028b4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80028b4:	2025      	movs	r0, #37	; 0x25
 80028b6:	4770      	bx	lr

080028b8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80028b8:	4800      	ldr	r0, [pc, #0]	; (80028bc <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80028ba:	4770      	bx	lr
 80028bc:	200027c0 	.word	0x200027c0

080028c0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 6:
        touchgfx_fonts[6] = &(getFont_consola_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80028c0:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80028c2:	f7ff fec5 	bl	8002650 <_Z23getFont_verdana_20_4bppv>
};
 80028c6:	4c0a      	ldr	r4, [pc, #40]	; (80028f0 <_GLOBAL__sub_I_touchgfx_fonts+0x30>)
 80028c8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80028ca:	f7ff fefb 	bl	80026c4 <_Z23getFont_verdana_40_4bppv>
};
 80028ce:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 80028d0:	f7ff fe84 	bl	80025dc <_Z23getFont_verdana_10_4bppv>
};
 80028d4:	60a0      	str	r0, [r4, #8]
    &(getFont_consola_28_8bpp()),
 80028d6:	f7ff fe0b 	bl	80024f0 <_Z23getFont_consola_28_8bppv>
};
 80028da:	60e0      	str	r0, [r4, #12]
    &(getFont_consolab_24_4bpp()),
 80028dc:	f7ff fe42 	bl	8002564 <_Z24getFont_consolab_24_4bppv>
};
 80028e0:	6120      	str	r0, [r4, #16]
    &(getFont_consola_14_4bpp()),
 80028e2:	f7ff fdcb 	bl	800247c <_Z23getFont_consola_14_4bppv>
};
 80028e6:	6160      	str	r0, [r4, #20]
    &(getFont_consola_12_4bpp())
 80028e8:	f7ff fd8e 	bl	8002408 <_Z23getFont_consola_12_4bppv>
};
 80028ec:	61a0      	str	r0, [r4, #24]
} // namespace TypedTextDatabase
 80028ee:	bd10      	pop	{r4, pc}
 80028f0:	200027c0 	.word	0x200027c0

080028f4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80028f4:	2000      	movs	r0, #0
 80028f6:	4770      	bx	lr

080028f8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80028f8:	8081      	strh	r1, [r0, #4]
    }
 80028fa:	4770      	bx	lr

080028fc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80028fc:	80c1      	strh	r1, [r0, #6]
    }
 80028fe:	4770      	bx	lr

08002900 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002900:	8101      	strh	r1, [r0, #8]
    }
 8002902:	4770      	bx	lr

08002904 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002904:	8141      	strh	r1, [r0, #10]
    }
 8002906:	4770      	bx	lr

08002908 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002908:	4770      	bx	lr

0800290a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 800290a:	4770      	bx	lr

0800290c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 800290c:	4770      	bx	lr

0800290e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 800290e:	4770      	bx	lr

08002910 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002910:	4770      	bx	lr

08002912 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002912:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002914:	88c4      	ldrh	r4, [r0, #6]
 8002916:	6803      	ldr	r3, [r0, #0]
 8002918:	1b12      	subs	r2, r2, r4
 800291a:	8884      	ldrh	r4, [r0, #4]
 800291c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800291e:	1b09      	subs	r1, r1, r4
 8002920:	b212      	sxth	r2, r2
    }
 8002922:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002926:	b209      	sxth	r1, r1
 8002928:	4718      	bx	r3

0800292a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800292a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800292e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002930:	f04f 33ff 	mov.w	r3, #4294967295
 8002934:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002936:	6813      	ldr	r3, [r2, #0]
 8002938:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800293a:	6010      	str	r0, [r2, #0]
    }
 800293c:	4770      	bx	lr

0800293e <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800293e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002940:	4770      	bx	lr

08002942 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 8002942:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002946:	b11a      	cbz	r2, 8002950 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002948:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 800294c:	b102      	cbz	r2, 8002950 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800294e:	6018      	str	r0, [r3, #0]
        }
    }
 8002950:	4770      	bx	lr

08002952 <_ZN10digitsBaseD1Ev>:

class digitsBase : public touchgfx::Container
{
public:
    digitsBase();
    virtual ~digitsBase() {}
 8002952:	4770      	bx	lr

08002954 <_ZN10digitsBase10initializeEv>:
}

void digitsBase::initialize()
{

}
 8002954:	4770      	bx	lr

08002956 <_ZN10digitsBaseD0Ev>:
 8002956:	b510      	push	{r4, lr}
 8002958:	f44f 711a 	mov.w	r1, #616	; 0x268
 800295c:	4604      	mov	r4, r0
 800295e:	f019 f8ae 	bl	801babe <_ZdlPvj>
 8002962:	4620      	mov	r0, r4
 8002964:	bd10      	pop	{r4, pc}
	...

08002968 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8002968:	4a07      	ldr	r2, [pc, #28]	; (8002988 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 800296a:	6002      	str	r2, [r0, #0]
 800296c:	2200      	movs	r2, #0
 800296e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002972:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8002976:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800297a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800297e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002982:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 8002984:	4770      	bx	lr
 8002986:	bf00      	nop
 8002988:	0801f9f4 	.word	0x0801f9f4

0800298c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800298c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800298e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002990:	4604      	mov	r4, r0
        setX(x);
 8002992:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 8002994:	4615      	mov	r5, r2
        setX(x);
 8002996:	4798      	blx	r3
        setY(y);
 8002998:	6823      	ldr	r3, [r4, #0]
 800299a:	4629      	mov	r1, r5
 800299c:	4620      	mov	r0, r4
 800299e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 80029a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80029a4:	4718      	bx	r3
	...

080029a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param  bitmap (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bitmap = Bitmap())
 80029a8:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bitmap), alpha(255)
 80029aa:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bitmap = Bitmap())
 80029ac:	4604      	mov	r4, r0
 80029ae:	460d      	mov	r5, r1
        : Widget(), bitmap(bitmap), alpha(255)
 80029b0:	2100      	movs	r1, #0
 80029b2:	f019 f93f 	bl	801bc34 <memset>
class Widget : public Drawable
 80029b6:	4620      	mov	r0, r4
 80029b8:	f7ff ffd6 	bl	8002968 <_ZN8touchgfx8DrawableC1Ev>
 80029bc:	4b06      	ldr	r3, [pc, #24]	; (80029d8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 80029be:	6023      	str	r3, [r4, #0]
 80029c0:	882b      	ldrh	r3, [r5, #0]
 80029c2:	84e3      	strh	r3, [r4, #38]	; 0x26
 80029c4:	23ff      	movs	r3, #255	; 0xff
    {
        Image::setBitmap(bitmap);
 80029c6:	4620      	mov	r0, r4
        : Widget(), bitmap(bitmap), alpha(255)
 80029c8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bitmap);
 80029cc:	4629      	mov	r1, r5
 80029ce:	f008 fb48 	bl	800b062 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 80029d2:	4620      	mov	r0, r4
 80029d4:	bd38      	pop	{r3, r4, r5, pc}
 80029d6:	bf00      	nop
 80029d8:	0801f730 	.word	0x0801f730

080029dc <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 80029dc:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80029de:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80029e0:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80029e2:	2100      	movs	r1, #0
 80029e4:	f019 f926 	bl	801bc34 <memset>
 80029e8:	4620      	mov	r0, r4
 80029ea:	f7ff ffbd 	bl	8002968 <_ZN8touchgfx8DrawableC1Ev>
 80029ee:	4b07      	ldr	r3, [pc, #28]	; (8002a0c <_ZN8touchgfx8TextAreaC1Ev+0x30>)
 80029f0:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80029f2:	4b07      	ldr	r3, [pc, #28]	; (8002a10 <_ZN8touchgfx8TextAreaC1Ev+0x34>)
 80029f4:	62a3      	str	r3, [r4, #40]	; 0x28
 80029f6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80029fa:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80029fc:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002a00:	2300      	movs	r3, #0
 8002a02:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8002a06:	8723      	strh	r3, [r4, #56]	; 0x38
    {
    }
 8002a08:	4620      	mov	r0, r4
 8002a0a:	bd10      	pop	{r4, pc}
 8002a0c:	0801f57c 	.word	0x0801f57c
 8002a10:	0801d7d0 	.word	0x0801d7d0

08002a14 <_ZN10digitsBaseC1Ev>:
digitsBase::digitsBase()
 8002a14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a18:	ed2d 8b04 	vpush	{d8-d9}
 8002a1c:	4604      	mov	r4, r0
 8002a1e:	b083      	sub	sp, #12
 8002a20:	4626      	mov	r6, r4
          firstChild(0)
 8002a22:	2500      	movs	r5, #0
 8002a24:	f7ff ffa0 	bl	8002968 <_ZN8touchgfx8DrawableC1Ev>
 8002a28:	4bce      	ldr	r3, [pc, #824]	; (8002d64 <_ZN10digitsBaseC1Ev+0x350>)
 8002a2a:	62a5      	str	r5, [r4, #40]	; 0x28
 8002a2c:	f846 3b2c 	str.w	r3, [r6], #44
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002a30:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8002a34:	4669      	mov	r1, sp
 8002a36:	4630      	mov	r0, r6
 8002a38:	f8ad 7000 	strh.w	r7, [sp]
 8002a3c:	f7ff ffb4 	bl	80029a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a40:	f104 0358 	add.w	r3, r4, #88	; 0x58
 8002a44:	4669      	mov	r1, sp
 8002a46:	4618      	mov	r0, r3
 8002a48:	ee08 3a10 	vmov	s16, r3
 8002a4c:	f8ad 7000 	strh.w	r7, [sp]
 8002a50:	f7ff ffaa 	bl	80029a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a54:	f104 0384 	add.w	r3, r4, #132	; 0x84
 8002a58:	4669      	mov	r1, sp
 8002a5a:	4618      	mov	r0, r3
 8002a5c:	ee08 3a90 	vmov	s17, r3
 8002a60:	f8ad 7000 	strh.w	r7, [sp]
 8002a64:	f7ff ffa0 	bl	80029a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002a68:	f104 03b0 	add.w	r3, r4, #176	; 0xb0
 8002a6c:	4669      	mov	r1, sp
 8002a6e:	4618      	mov	r0, r3
 8002a70:	f104 0adc 	add.w	sl, r4, #220	; 0xdc
 8002a74:	ee09 3a10 	vmov	s18, r3
 8002a78:	f8ad 7000 	strh.w	r7, [sp]
 8002a7c:	f7ff ff94 	bl	80029a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
        : TextArea(), wildcard(0)
 8002a80:	4650      	mov	r0, sl
 8002a82:	f7ff ffab 	bl	80029dc <_ZN8touchgfx8TextAreaC1Ev>
 8002a86:	f8df b308 	ldr.w	fp, [pc, #776]	; 8002d90 <_ZN10digitsBaseC1Ev+0x37c>
 8002a8a:	f8c4 b0dc 	str.w	fp, [r4, #220]	; 0xdc
 8002a8e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002a92:	4618      	mov	r0, r3
 8002a94:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 8002a98:	f504 79ac 	add.w	r9, r4, #344	; 0x158
 8002a9c:	ee09 3a90 	vmov	s19, r3
 8002aa0:	f504 78cc 	add.w	r8, r4, #408	; 0x198
 8002aa4:	f7ff ff9a 	bl	80029dc <_ZN8touchgfx8TextAreaC1Ev>
 8002aa8:	4648      	mov	r0, r9
 8002aaa:	f7ff ff97 	bl	80029dc <_ZN8touchgfx8TextAreaC1Ev>
 8002aae:	f504 77ec 	add.w	r7, r4, #472	; 0x1d8
 8002ab2:	f8c4 b158 	str.w	fp, [r4, #344]	; 0x158
 8002ab6:	f8c4 5194 	str.w	r5, [r4, #404]	; 0x194
 8002aba:	4640      	mov	r0, r8
 8002abc:	f7ff ff8e 	bl	80029dc <_ZN8touchgfx8TextAreaC1Ev>
 8002ac0:	f8c4 b198 	str.w	fp, [r4, #408]	; 0x198
 8002ac4:	f8c4 51d4 	str.w	r5, [r4, #468]	; 0x1d4
 8002ac8:	4638      	mov	r0, r7
 8002aca:	f7ff ff87 	bl	80029dc <_ZN8touchgfx8TextAreaC1Ev>
        rect.width = width;
 8002ace:	4ba6      	ldr	r3, [pc, #664]	; (8002d68 <_ZN10digitsBaseC1Ev+0x354>)
 8002ad0:	f8c4 b1d8 	str.w	fp, [r4, #472]	; 0x1d8
    decimalsBox.setXY(49, 16);
 8002ad4:	2210      	movs	r2, #16
 8002ad6:	60a3      	str	r3, [r4, #8]
 8002ad8:	2131      	movs	r1, #49	; 0x31
 8002ada:	4630      	mov	r0, r6
 8002adc:	f8c4 5214 	str.w	r5, [r4, #532]	; 0x214
 8002ae0:	f7ff ff54 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 8002ae4:	2307      	movs	r3, #7
    decimalsBox.setBitmap(touchgfx::Bitmap(BITMAP_CURSOR_DECIMALS_ID));
 8002ae6:	4669      	mov	r1, sp
 8002ae8:	4630      	mov	r0, r6
        visible = vis;
 8002aea:	f884 5051 	strb.w	r5, [r4, #81]	; 0x51
 8002aee:	f8ad 3000 	strh.w	r3, [sp]
 8002af2:	f008 fab6 	bl	800b062 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    onesBox.setXY(30, 5);
 8002af6:	2205      	movs	r2, #5
 8002af8:	ee18 0a10 	vmov	r0, s16
 8002afc:	211e      	movs	r1, #30
 8002afe:	f7ff ff45 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 8002b02:	f04f 0b06 	mov.w	fp, #6
    onesBox.setBitmap(touchgfx::Bitmap(BITMAP_CURSOR_ID));
 8002b06:	ee18 0a10 	vmov	r0, s16
 8002b0a:	4669      	mov	r1, sp
 8002b0c:	f884 507d 	strb.w	r5, [r4, #125]	; 0x7d
 8002b10:	f8ad b000 	strh.w	fp, [sp]
 8002b14:	f008 faa5 	bl	800b062 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    tensBox.setXY(15, 5);
 8002b18:	2205      	movs	r2, #5
 8002b1a:	ee18 0a90 	vmov	r0, s17
 8002b1e:	210f      	movs	r1, #15
 8002b20:	f7ff ff34 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
    tensBox.setBitmap(touchgfx::Bitmap(BITMAP_CURSOR_ID));
 8002b24:	ee18 0a90 	vmov	r0, s17
 8002b28:	4669      	mov	r1, sp
 8002b2a:	f884 50a9 	strb.w	r5, [r4, #169]	; 0xa9
 8002b2e:	f8ad b000 	strh.w	fp, [sp]
 8002b32:	f008 fa96 	bl	800b062 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    hundredsBox.setXY(0, 5);
 8002b36:	2205      	movs	r2, #5
 8002b38:	ee19 0a10 	vmov	r0, s18
 8002b3c:	4629      	mov	r1, r5
 8002b3e:	f7ff ff25 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
    hundredsBox.setBitmap(touchgfx::Bitmap(BITMAP_CURSOR_ID));
 8002b42:	ee19 0a10 	vmov	r0, s18
 8002b46:	4669      	mov	r1, sp
 8002b48:	f884 50d5 	strb.w	r5, [r4, #213]	; 0xd5
 8002b4c:	f8ad b000 	strh.w	fp, [sp]
 8002b50:	f008 fa87 	bl	800b062 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    decimals.setXY(49, 15);
 8002b54:	220f      	movs	r2, #15
 8002b56:	2131      	movs	r1, #49	; 0x31
 8002b58:	4650      	mov	r0, sl
 8002b5a:	f7ff ff17 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 8002b5e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002b62:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002b66:	4b81      	ldr	r3, [pc, #516]	; (8002d6c <_ZN10digitsBaseC1Ev+0x358>)
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8002b68:	f8a4 5110 	strh.w	r5, [r4, #272]	; 0x110
 8002b6c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(decimalsBuffer, DECIMALS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ATWK).getText());
 8002b6e:	f504 7b06 	add.w	fp, r4, #536	; 0x218
 8002b72:	b92b      	cbnz	r3, 8002b80 <_ZN10digitsBaseC1Ev+0x16c>
 8002b74:	4b7e      	ldr	r3, [pc, #504]	; (8002d70 <_ZN10digitsBaseC1Ev+0x35c>)
 8002b76:	4a7f      	ldr	r2, [pc, #508]	; (8002d74 <_ZN10digitsBaseC1Ev+0x360>)
 8002b78:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002b7a:	487f      	ldr	r0, [pc, #508]	; (8002d78 <_ZN10digitsBaseC1Ev+0x364>)
 8002b7c:	f018 ffce 	bl	801bb1c <__assert_func>
 8002b80:	4b7e      	ldr	r3, [pc, #504]	; (8002d7c <_ZN10digitsBaseC1Ev+0x368>)
 8002b82:	881b      	ldrh	r3, [r3, #0]
 8002b84:	2b22      	cmp	r3, #34	; 0x22
 8002b86:	d803      	bhi.n	8002b90 <_ZN10digitsBaseC1Ev+0x17c>
 8002b88:	4b7d      	ldr	r3, [pc, #500]	; (8002d80 <_ZN10digitsBaseC1Ev+0x36c>)
 8002b8a:	4a7a      	ldr	r2, [pc, #488]	; (8002d74 <_ZN10digitsBaseC1Ev+0x360>)
 8002b8c:	21af      	movs	r1, #175	; 0xaf
 8002b8e:	e7f4      	b.n	8002b7a <_ZN10digitsBaseC1Ev+0x166>
        return texts->getText(typedTextId);
 8002b90:	4b7c      	ldr	r3, [pc, #496]	; (8002d84 <_ZN10digitsBaseC1Ev+0x370>)
 8002b92:	2122      	movs	r1, #34	; 0x22
 8002b94:	6818      	ldr	r0, [r3, #0]
 8002b96:	f7ff fe7f 	bl	8002898 <_ZNK8touchgfx5Texts7getTextEt>
 8002b9a:	4a7b      	ldr	r2, [pc, #492]	; (8002d88 <_ZN10digitsBaseC1Ev+0x374>)
 8002b9c:	4603      	mov	r3, r0
 8002b9e:	210a      	movs	r1, #10
 8002ba0:	4658      	mov	r0, fp
 8002ba2:	f00c fe6f 	bl	800f884 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
    {
        wildcard = value;
 8002ba6:	f8c4 b118 	str.w	fp, [r4, #280]	; 0x118
    decimals.resizeToCurrentText();
 8002baa:	4650      	mov	r0, sl
 8002bac:	f008 f8fc 	bl	800ada8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002bb0:	4b76      	ldr	r3, [pc, #472]	; (8002d8c <_ZN10digitsBaseC1Ev+0x378>)
 8002bb2:	9300      	str	r3, [sp, #0]
    decimals.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YVJJ));
 8002bb4:	4669      	mov	r1, sp
 8002bb6:	2321      	movs	r3, #33	; 0x21
 8002bb8:	4650      	mov	r0, sl
 8002bba:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002bbe:	f008 f910 	bl	800ade2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    dot.setXY(44, 15);
 8002bc2:	220f      	movs	r2, #15
 8002bc4:	ee19 0a90 	vmov	r0, s19
 8002bc8:	212c      	movs	r1, #44	; 0x2c
 8002bca:	f7ff fedf 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 8002bce:	4b6f      	ldr	r3, [pc, #444]	; (8002d8c <_ZN10digitsBaseC1Ev+0x378>)
 8002bd0:	9300      	str	r3, [sp, #0]
        this->color = color;
 8002bd2:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8002bd6:	2320      	movs	r3, #32
    dot.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4DSA));
 8002bd8:	ee19 0a90 	vmov	r0, s19
 8002bdc:	f8c4 114c 	str.w	r1, [r4, #332]	; 0x14c
        linespace = space;
 8002be0:	f8a4 5150 	strh.w	r5, [r4, #336]	; 0x150
 8002be4:	4669      	mov	r1, sp
 8002be6:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002bea:	f008 f8fa 	bl	800ade2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    ones.setXY(30, 0);
 8002bee:	211e      	movs	r1, #30
 8002bf0:	462a      	mov	r2, r5
 8002bf2:	4648      	mov	r0, r9
 8002bf4:	f7ff feca 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8002bf8:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8002bfc:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002c00:	495a      	ldr	r1, [pc, #360]	; (8002d6c <_ZN10digitsBaseC1Ev+0x358>)
        linespace = space;
 8002c02:	f8a4 518c 	strh.w	r5, [r4, #396]	; 0x18c
 8002c06:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(onesBuffer, ONES_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UIUJ).getText());
 8002c08:	f504 7b0b 	add.w	fp, r4, #556	; 0x22c
 8002c0c:	2b00      	cmp	r3, #0
 8002c0e:	d0b1      	beq.n	8002b74 <_ZN10digitsBaseC1Ev+0x160>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002c10:	485a      	ldr	r0, [pc, #360]	; (8002d7c <_ZN10digitsBaseC1Ev+0x368>)
 8002c12:	8803      	ldrh	r3, [r0, #0]
 8002c14:	2b1f      	cmp	r3, #31
 8002c16:	d9b7      	bls.n	8002b88 <_ZN10digitsBaseC1Ev+0x174>
        return texts->getText(typedTextId);
 8002c18:	4a5a      	ldr	r2, [pc, #360]	; (8002d84 <_ZN10digitsBaseC1Ev+0x370>)
 8002c1a:	211f      	movs	r1, #31
 8002c1c:	6810      	ldr	r0, [r2, #0]
 8002c1e:	f7ff fe3b 	bl	8002898 <_ZNK8touchgfx5Texts7getTextEt>
 8002c22:	4a59      	ldr	r2, [pc, #356]	; (8002d88 <_ZN10digitsBaseC1Ev+0x374>)
 8002c24:	4603      	mov	r3, r0
 8002c26:	210a      	movs	r1, #10
 8002c28:	4658      	mov	r0, fp
 8002c2a:	f00c fe2b 	bl	800f884 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8002c2e:	f8c4 b194 	str.w	fp, [r4, #404]	; 0x194
    ones.resizeToCurrentText();
 8002c32:	4648      	mov	r0, r9
 8002c34:	f008 f8b8 	bl	800ada8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002c38:	4b54      	ldr	r3, [pc, #336]	; (8002d8c <_ZN10digitsBaseC1Ev+0x378>)
 8002c3a:	9300      	str	r3, [sp, #0]
    ones.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R12E));
 8002c3c:	4669      	mov	r1, sp
 8002c3e:	231e      	movs	r3, #30
 8002c40:	4648      	mov	r0, r9
 8002c42:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002c46:	f008 f8cc 	bl	800ade2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    tens.setXY(15, 0);
 8002c4a:	210f      	movs	r1, #15
 8002c4c:	462a      	mov	r2, r5
 8002c4e:	4640      	mov	r0, r8
 8002c50:	f7ff fe9c 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002c54:	4945      	ldr	r1, [pc, #276]	; (8002d6c <_ZN10digitsBaseC1Ev+0x358>)
 8002c56:	f8a4 51cc 	strh.w	r5, [r4, #460]	; 0x1cc
 8002c5a:	680b      	ldr	r3, [r1, #0]
        this->color = color;
 8002c5c:	f04f 4c7f 	mov.w	ip, #4278190080	; 0xff000000
 8002c60:	f8c4 c1c8 	str.w	ip, [r4, #456]	; 0x1c8
    Unicode::snprintf(tensBuffer, TENS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6T83).getText());
 8002c64:	f504 7b10 	add.w	fp, r4, #576	; 0x240
 8002c68:	2b00      	cmp	r3, #0
 8002c6a:	d083      	beq.n	8002b74 <_ZN10digitsBaseC1Ev+0x160>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002c6c:	4843      	ldr	r0, [pc, #268]	; (8002d7c <_ZN10digitsBaseC1Ev+0x368>)
 8002c6e:	8803      	ldrh	r3, [r0, #0]
 8002c70:	2b24      	cmp	r3, #36	; 0x24
 8002c72:	d989      	bls.n	8002b88 <_ZN10digitsBaseC1Ev+0x174>
        return texts->getText(typedTextId);
 8002c74:	4a43      	ldr	r2, [pc, #268]	; (8002d84 <_ZN10digitsBaseC1Ev+0x370>)
 8002c76:	2124      	movs	r1, #36	; 0x24
 8002c78:	6810      	ldr	r0, [r2, #0]
 8002c7a:	f7ff fe0d 	bl	8002898 <_ZNK8touchgfx5Texts7getTextEt>
 8002c7e:	4a42      	ldr	r2, [pc, #264]	; (8002d88 <_ZN10digitsBaseC1Ev+0x374>)
 8002c80:	4603      	mov	r3, r0
 8002c82:	210a      	movs	r1, #10
 8002c84:	4658      	mov	r0, fp
 8002c86:	f00c fdfd 	bl	800f884 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    tens.resizeToCurrentText();
 8002c8a:	4640      	mov	r0, r8
 8002c8c:	f8c4 b1d4 	str.w	fp, [r4, #468]	; 0x1d4
 8002c90:	f008 f88a 	bl	800ada8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002c94:	4b3d      	ldr	r3, [pc, #244]	; (8002d8c <_ZN10digitsBaseC1Ev+0x378>)
 8002c96:	9300      	str	r3, [sp, #0]
    tens.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KLYP));
 8002c98:	4669      	mov	r1, sp
 8002c9a:	231d      	movs	r3, #29
 8002c9c:	4640      	mov	r0, r8
 8002c9e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002ca2:	f008 f89e 	bl	800ade2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    hundreds.setXY(0, 0);
 8002ca6:	4629      	mov	r1, r5
 8002ca8:	462a      	mov	r2, r5
 8002caa:	4638      	mov	r0, r7
 8002cac:	f7ff fe6e 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002cb0:	492e      	ldr	r1, [pc, #184]	; (8002d6c <_ZN10digitsBaseC1Ev+0x358>)
        linespace = space;
 8002cb2:	f8a4 520c 	strh.w	r5, [r4, #524]	; 0x20c
 8002cb6:	680b      	ldr	r3, [r1, #0]
        this->color = color;
 8002cb8:	f04f 4c7f 	mov.w	ip, #4278190080	; 0xff000000
 8002cbc:	f8c4 c208 	str.w	ip, [r4, #520]	; 0x208
    Unicode::snprintf(hundredsBuffer, HUNDREDS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KFJL).getText());
 8002cc0:	f504 7515 	add.w	r5, r4, #596	; 0x254
 8002cc4:	2b00      	cmp	r3, #0
 8002cc6:	f43f af55 	beq.w	8002b74 <_ZN10digitsBaseC1Ev+0x160>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002cca:	482c      	ldr	r0, [pc, #176]	; (8002d7c <_ZN10digitsBaseC1Ev+0x368>)
 8002ccc:	8803      	ldrh	r3, [r0, #0]
 8002cce:	2b23      	cmp	r3, #35	; 0x23
 8002cd0:	f67f af5a 	bls.w	8002b88 <_ZN10digitsBaseC1Ev+0x174>
        return texts->getText(typedTextId);
 8002cd4:	4a2b      	ldr	r2, [pc, #172]	; (8002d84 <_ZN10digitsBaseC1Ev+0x370>)
 8002cd6:	2123      	movs	r1, #35	; 0x23
 8002cd8:	6810      	ldr	r0, [r2, #0]
 8002cda:	f7ff fddd 	bl	8002898 <_ZNK8touchgfx5Texts7getTextEt>
 8002cde:	4a2a      	ldr	r2, [pc, #168]	; (8002d88 <_ZN10digitsBaseC1Ev+0x374>)
 8002ce0:	4603      	mov	r3, r0
 8002ce2:	210a      	movs	r1, #10
 8002ce4:	4628      	mov	r0, r5
 8002ce6:	f00c fdcd 	bl	800f884 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    hundreds.resizeToCurrentText();
 8002cea:	4638      	mov	r0, r7
 8002cec:	f8c4 5214 	str.w	r5, [r4, #532]	; 0x214
 8002cf0:	f008 f85a 	bl	800ada8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002cf4:	4b25      	ldr	r3, [pc, #148]	; (8002d8c <_ZN10digitsBaseC1Ev+0x378>)
 8002cf6:	9300      	str	r3, [sp, #0]
    hundreds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VEFE));
 8002cf8:	4669      	mov	r1, sp
 8002cfa:	231c      	movs	r3, #28
 8002cfc:	4638      	mov	r0, r7
 8002cfe:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002d02:	f008 f86e 	bl	800ade2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(decimalsBox);
 8002d06:	4631      	mov	r1, r6
 8002d08:	4620      	mov	r0, r4
 8002d0a:	f006 fc81 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(onesBox);
 8002d0e:	ee18 1a10 	vmov	r1, s16
 8002d12:	4620      	mov	r0, r4
 8002d14:	f006 fc7c 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(tensBox);
 8002d18:	ee18 1a90 	vmov	r1, s17
 8002d1c:	4620      	mov	r0, r4
 8002d1e:	f006 fc77 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(hundredsBox);
 8002d22:	ee19 1a10 	vmov	r1, s18
 8002d26:	4620      	mov	r0, r4
 8002d28:	f006 fc72 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(decimals);
 8002d2c:	4651      	mov	r1, sl
 8002d2e:	4620      	mov	r0, r4
 8002d30:	f006 fc6e 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(dot);
 8002d34:	ee19 1a90 	vmov	r1, s19
 8002d38:	4620      	mov	r0, r4
 8002d3a:	f006 fc69 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(ones);
 8002d3e:	4649      	mov	r1, r9
 8002d40:	4620      	mov	r0, r4
 8002d42:	f006 fc65 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(tens);
 8002d46:	4641      	mov	r1, r8
 8002d48:	4620      	mov	r0, r4
 8002d4a:	f006 fc61 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(hundreds);
 8002d4e:	4620      	mov	r0, r4
 8002d50:	4639      	mov	r1, r7
 8002d52:	f006 fc5d 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002d56:	4620      	mov	r0, r4
 8002d58:	b003      	add	sp, #12
 8002d5a:	ecbd 8b04 	vpop	{d8-d9}
 8002d5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002d62:	bf00      	nop
 8002d64:	0801decc 	.word	0x0801decc
 8002d68:	00210045 	.word	0x00210045
 8002d6c:	20013558 	.word	0x20013558
 8002d70:	0801ddb6 	.word	0x0801ddb6
 8002d74:	0801ddf8 	.word	0x0801ddf8
 8002d78:	0801de26 	.word	0x0801de26
 8002d7c:	2001355c 	.word	0x2001355c
 8002d80:	0801de6d 	.word	0x0801de6d
 8002d84:	20013564 	.word	0x20013564
 8002d88:	0801debf 	.word	0x0801debf
 8002d8c:	0801d7d0 	.word	0x0801d7d0
 8002d90:	0801f688 	.word	0x0801f688

08002d94 <_ZN11humDispBase10initializeEv>:
    add(digits1);
}

void humDispBase::initialize()
{
    digits1.initialize();
 8002d94:	3068      	adds	r0, #104	; 0x68
 8002d96:	f001 b8f7 	b.w	8003f88 <_ZN6digits10initializeEv>
	...

08002d9c <_ZN11humDispBaseD1Ev>:

class humDispBase : public touchgfx::Container
{
public:
    humDispBase();
    virtual ~humDispBase() {}
 8002d9c:	b538      	push	{r3, r4, r5, lr}
 8002d9e:	4b08      	ldr	r3, [pc, #32]	; (8002dc0 <_ZN11humDispBaseD1Ev+0x24>)
 8002da0:	6003      	str	r3, [r0, #0]

class digits : public digitsBase
{
public:
    digits();
    virtual ~digits() {}
 8002da2:	4b08      	ldr	r3, [pc, #32]	; (8002dc4 <_ZN11humDispBaseD1Ev+0x28>)
 8002da4:	6683      	str	r3, [r0, #104]	; 0x68
 8002da6:	4604      	mov	r4, r0
 8002da8:	f44f 7569 	mov.w	r5, #932	; 0x3a4
 *
 * @tparam T        The type of objects this container works on.
 * @tparam capacity The maximum number of objects this container can store.
 */
template <class T, uint16_t capacity>
class Vector
 8002dac:	5963      	ldr	r3, [r4, r5]
 8002dae:	1960      	adds	r0, r4, r5
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	3d40      	subs	r5, #64	; 0x40
 8002db4:	4798      	blx	r3
 8002db6:	f5b5 7f29 	cmp.w	r5, #676	; 0x2a4
 8002dba:	d1f7      	bne.n	8002dac <_ZN11humDispBaseD1Ev+0x10>
 8002dbc:	4620      	mov	r0, r4
 8002dbe:	bd38      	pop	{r3, r4, r5, pc}
 8002dc0:	0801df5c 	.word	0x0801df5c
 8002dc4:	0801e674 	.word	0x0801e674

08002dc8 <_ZN11humDispBaseD0Ev>:
 8002dc8:	b510      	push	{r4, lr}
 8002dca:	4604      	mov	r4, r0
 8002dcc:	f7ff ffe6 	bl	8002d9c <_ZN11humDispBaseD1Ev>
 8002dd0:	4620      	mov	r0, r4
 8002dd2:	f240 410c 	movw	r1, #1036	; 0x40c
 8002dd6:	f018 fe72 	bl	801babe <_ZdlPvj>
 8002dda:	4620      	mov	r0, r4
 8002ddc:	bd10      	pop	{r4, pc}
	...

08002de0 <_ZN11humDispBaseC1Ev>:
humDispBase::humDispBase()
 8002de0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8002de4:	4606      	mov	r6, r0
        : x(0), y(0), width(0), height(0)
 8002de6:	2500      	movs	r5, #0
 8002de8:	4a2a      	ldr	r2, [pc, #168]	; (8002e94 <_ZN11humDispBaseC1Ev+0xb4>)
 8002dea:	6285      	str	r5, [r0, #40]	; 0x28
          visible(true)
 8002dec:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002df0:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002df4:	e9c0 5503 	strd	r5, r5, [r0, #12]
 8002df8:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002dfc:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002e00:	8483      	strh	r3, [r0, #36]	; 0x24
 8002e02:	f846 2b2c 	str.w	r2, [r6], #44
 8002e06:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002e0a:	4b23      	ldr	r3, [pc, #140]	; (8002e98 <_ZN11humDispBaseC1Ev+0xb8>)
 8002e0c:	62c3      	str	r3, [r0, #44]	; 0x2c
 8002e0e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e12:	f8df 8090 	ldr.w	r8, [pc, #144]	; 8002ea4 <_ZN11humDispBaseC1Ev+0xc4>
 8002e16:	f8a0 3058 	strh.w	r3, [r0, #88]	; 0x58
 8002e1a:	f100 0768 	add.w	r7, r0, #104	; 0x68
 8002e1e:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8002e22:	4604      	mov	r4, r0
 8002e24:	e9c0 550c 	strd	r5, r5, [r0, #48]	; 0x30
 8002e28:	e9c0 550e 	strd	r5, r5, [r0, #56]	; 0x38
 8002e2c:	e9c0 5510 	strd	r5, r5, [r0, #64]	; 0x40
 8002e30:	e9c0 5512 	strd	r5, r5, [r0, #72]	; 0x48
 8002e34:	f8c0 8054 	str.w	r8, [r0, #84]	; 0x54
        : color(col)
 8002e38:	65c5      	str	r5, [r0, #92]	; 0x5c
 8002e3a:	6603      	str	r3, [r0, #96]	; 0x60
 8002e3c:	f8a0 5064 	strh.w	r5, [r0, #100]	; 0x64
 8002e40:	4638      	mov	r0, r7
 8002e42:	f000 ffc5 	bl	8003dd0 <_ZN6digitsC1Ev>
        rect.width = width;
 8002e46:	4b15      	ldr	r3, [pc, #84]	; (8002e9c <_ZN11humDispBaseC1Ev+0xbc>)
 8002e48:	60a3      	str	r3, [r4, #8]
        setX(x);
 8002e4a:	4630      	mov	r0, r6
 8002e4c:	2144      	movs	r1, #68	; 0x44
 8002e4e:	f7ff fd53 	bl	80028f8 <_ZN8touchgfx8Drawable4setXEs>
        setY(y);
 8002e52:	4630      	mov	r0, r6
 8002e54:	2103      	movs	r1, #3
 8002e56:	f7ff fd51 	bl	80028fc <_ZN8touchgfx8Drawable4setYEs>
        this->color = color;
 8002e5a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002e5e:	65e3      	str	r3, [r4, #92]	; 0x5c
    unit.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A5L9));
 8002e60:	4669      	mov	r1, sp
 8002e62:	2301      	movs	r3, #1
 8002e64:	4630      	mov	r0, r6
        linespace = space;
 8002e66:	f8a4 5060 	strh.w	r5, [r4, #96]	; 0x60
 8002e6a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002e6e:	f8cd 8000 	str.w	r8, [sp]
 8002e72:	f007 ffb6 	bl	800ade2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        rect.x = x;
 8002e76:	4b0a      	ldr	r3, [pc, #40]	; (8002ea0 <_ZN11humDispBaseC1Ev+0xc0>)
 8002e78:	66e3      	str	r3, [r4, #108]	; 0x6c
    add(unit);
 8002e7a:	4631      	mov	r1, r6
 8002e7c:	4620      	mov	r0, r4
 8002e7e:	f006 fbc7 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(digits1);
 8002e82:	4620      	mov	r0, r4
 8002e84:	4639      	mov	r1, r7
 8002e86:	f006 fbc3 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002e8a:	4620      	mov	r0, r4
 8002e8c:	b002      	add	sp, #8
 8002e8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002e92:	bf00      	nop
 8002e94:	0801df5c 	.word	0x0801df5c
 8002e98:	0801f57c 	.word	0x0801f57c
 8002e9c:	00240056 	.word	0x00240056
 8002ea0:	0002000f 	.word	0x0002000f
 8002ea4:	0801d7d0 	.word	0x0801d7d0

08002ea8 <_ZN13humWindowBase12toggleHumBtnEv>:
     * Virtual Action Handlers
     */
    virtual void toggleHumBtn()
    {
        // Override and implement this function in humWindow
    }
 8002ea8:	4770      	bx	lr

08002eaa <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class ImageButtonStyle : public T
 8002eaa:	4770      	bx	lr

08002eac <_ZN8touchgfx8CallbackI13humWindowBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002eac:	4770      	bx	lr

08002eae <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the text can be adjusted with setTextXY (default is centered).
 *
 * @see AbstractButtonContainer
 */
template <class T>
class TextButtonStyle : public T
 8002eae:	4770      	bx	lr

08002eb0 <_ZN8touchgfx8CallbackI13humWindowBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002eb0:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002eb2:	68c2      	ldr	r2, [r0, #12]
 8002eb4:	6844      	ldr	r4, [r0, #4]
 8002eb6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002eb8:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002eba:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002ebe:	07d2      	lsls	r2, r2, #31
 8002ec0:	bf48      	it	mi
 8002ec2:	5962      	ldrmi	r2, [r4, r5]
 8002ec4:	689b      	ldr	r3, [r3, #8]
    }
 8002ec6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002ec8:	bf48      	it	mi
 8002eca:	58d3      	ldrmi	r3, [r2, r3]
 8002ecc:	4718      	bx	r3

08002ece <_ZNK8touchgfx8CallbackI13humWindowBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002ece:	6843      	ldr	r3, [r0, #4]
 8002ed0:	b12b      	cbz	r3, 8002ede <_ZNK8touchgfx8CallbackI13humWindowBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002ed2:	6883      	ldr	r3, [r0, #8]
 8002ed4:	b92b      	cbnz	r3, 8002ee2 <_ZNK8touchgfx8CallbackI13humWindowBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002ed6:	68c0      	ldr	r0, [r0, #12]
 8002ed8:	f000 0001 	and.w	r0, r0, #1
 8002edc:	4770      	bx	lr
 8002ede:	4618      	mov	r0, r3
 8002ee0:	4770      	bx	lr
 8002ee2:	2001      	movs	r0, #1
    }
 8002ee4:	4770      	bx	lr

08002ee6 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        text.setAlpha(T::getAlpha());
 8002ee6:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 8002eea:	f880 309a 	strb.w	r3, [r0, #154]	; 0x9a
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002eee:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
        T::handleAlphaUpdated();
    }
 8002ef2:	4770      	bx	lr

08002ef4 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002ef4:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002ef8:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        buttonImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002efc:	4770      	bx	lr

08002efe <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002efe:	4601      	mov	r1, r0
        buttonImage.setBitmap(T::getPressed() ? down : up);
 8002f00:	3034      	adds	r0, #52	; 0x34
 8002f02:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8002f06:	b113      	cbz	r3, 8002f0e <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x10>
 8002f08:	3162      	adds	r1, #98	; 0x62
 8002f0a:	f008 b8aa 	b.w	800b062 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f0e:	3160      	adds	r1, #96	; 0x60
 8002f10:	e7fb      	b.n	8002f0a <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xc>

08002f12 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002f12:	b508      	push	{r3, lr}
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 8002f14:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8002f18:	b133      	cbz	r3, 8002f28 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x16>
 8002f1a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
        this->color = color;
 8002f1e:	f8c0 3094 	str.w	r3, [r0, #148]	; 0x94
        T::handlePressedUpdated();
 8002f22:	f7ff ffec 	bl	8002efe <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002f26:	bd08      	pop	{r3, pc}
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 8002f28:	f8d0 30a0 	ldr.w	r3, [r0, #160]	; 0xa0
 8002f2c:	e7f7      	b.n	8002f1e <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

08002f2e <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class ImageButtonStyle : public T
 8002f2e:	b510      	push	{r4, lr}
 8002f30:	2164      	movs	r1, #100	; 0x64
 8002f32:	4604      	mov	r4, r0
 8002f34:	f018 fdc3 	bl	801babe <_ZdlPvj>
 8002f38:	4620      	mov	r0, r4
 8002f3a:	bd10      	pop	{r4, pc}

08002f3c <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TextButtonStyle : public T
 8002f3c:	b510      	push	{r4, lr}
 8002f3e:	21a8      	movs	r1, #168	; 0xa8
 8002f40:	4604      	mov	r4, r0
 8002f42:	f018 fdbc 	bl	801babe <_ZdlPvj>
 8002f46:	4620      	mov	r0, r4
 8002f48:	bd10      	pop	{r4, pc}

08002f4a <_ZN8touchgfx8CallbackI13humWindowBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f4a:	b510      	push	{r4, lr}
 8002f4c:	2110      	movs	r1, #16
 8002f4e:	4604      	mov	r4, r0
 8002f50:	f018 fdb5 	bl	801babe <_ZdlPvj>
 8002f54:	4620      	mov	r0, r4
 8002f56:	bd10      	pop	{r4, pc}

08002f58 <_ZN13humWindowBase10initializeEv>:
    add(humDisp2);
    add(humDisp1);
}

void humWindowBase::initialize()
{
 8002f58:	b510      	push	{r4, lr}
 8002f5a:	4604      	mov	r4, r0
    humDisp2.initialize();
 8002f5c:	f500 70ac 	add.w	r0, r0, #344	; 0x158
 8002f60:	f001 f889 	bl	8004076 <_ZN7humDisp10initializeEv>
    humDisp1.initialize();
 8002f64:	f204 5064 	addw	r0, r4, #1380	; 0x564
}
 8002f68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    humDisp1.initialize();
 8002f6c:	f001 b883 	b.w	8004076 <_ZN7humDisp10initializeEv>

08002f70 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002f70:	b510      	push	{r4, lr}
 8002f72:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002f74:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002f76:	b150      	cbz	r0, 8002f8e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002f78:	6803      	ldr	r3, [r0, #0]
 8002f7a:	68db      	ldr	r3, [r3, #12]
 8002f7c:	4798      	blx	r3
 8002f7e:	b130      	cbz	r0, 8002f8e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002f80:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002f82:	6803      	ldr	r3, [r0, #0]
 8002f84:	4621      	mov	r1, r4
 8002f86:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002f88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002f8c:	4718      	bx	r3
    }
 8002f8e:	bd10      	pop	{r4, pc}

08002f90 <_ZN13humWindowBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void humWindowBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
 8002f90:	f100 02b0 	add.w	r2, r0, #176	; 0xb0
 8002f94:	428a      	cmp	r2, r1
 8002f96:	d103      	bne.n	8002fa0 <_ZN13humWindowBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    {
        //Interaction1
        //When flexButton1 clicked call virtual function
        //Call toggleHumBtn
        toggleHumBtn();
 8002f98:	6803      	ldr	r3, [r0, #0]
 8002f9a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002f9e:	4718      	bx	r3
    }
}
 8002fa0:	4770      	bx	lr

08002fa2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002fa2:	790b      	ldrb	r3, [r1, #4]
    virtual void handleClickEvent(const ClickEvent& event)
 8002fa4:	b570      	push	{r4, r5, r6, lr}
        bool wasPressed = getPressed();
 8002fa6:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
 8002faa:	4604      	mov	r4, r0
 8002fac:	460d      	mov	r5, r1
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002fae:	b99b      	cbnz	r3, 8002fd8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002fb0:	b98e      	cbnz	r6, 8002fd6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002fb2:	fab3 f383 	clz	r3, r3
 8002fb6:	095b      	lsrs	r3, r3, #5
 8002fb8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002fbc:	6823      	ldr	r3, [r4, #0]
 8002fbe:	4620      	mov	r0, r4
 8002fc0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002fc4:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002fc6:	6823      	ldr	r3, [r4, #0]
 8002fc8:	4620      	mov	r0, r4
 8002fca:	695b      	ldr	r3, [r3, #20]
 8002fcc:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002fce:	b116      	cbz	r6, 8002fd6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002fd0:	792b      	ldrb	r3, [r5, #4]
 8002fd2:	2b01      	cmp	r3, #1
 8002fd4:	d003      	beq.n	8002fde <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002fd6:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002fd8:	2e00      	cmp	r6, #0
 8002fda:	d0fc      	beq.n	8002fd6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002fdc:	e7e9      	b.n	8002fb2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002fde:	6823      	ldr	r3, [r4, #0]
 8002fe0:	4620      	mov	r0, r4
 8002fe2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    }
 8002fe6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002fea:	4718      	bx	r3

08002fec <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 8002fec:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 8002fee:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 8002ff0:	4604      	mov	r4, r0
        setWidth(width);
 8002ff2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    void setWidthHeight(int16_t width, int16_t height)
 8002ff4:	4615      	mov	r5, r2
        setWidth(width);
 8002ff6:	4798      	blx	r3
        setHeight(height);
 8002ff8:	6823      	ldr	r3, [r4, #0]
 8002ffa:	4629      	mov	r1, r5
 8002ffc:	4620      	mov	r0, r4
 8002ffe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 8003000:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8003004:	4718      	bx	r3

08003006 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>:
        up = bmpReleased;
 8003006:	880b      	ldrh	r3, [r1, #0]
    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
 8003008:	b570      	push	{r4, r5, r6, lr}
        up = bmpReleased;
 800300a:	f8a0 3060 	strh.w	r3, [r0, #96]	; 0x60
        down = bmpPressed;
 800300e:	4605      	mov	r5, r0
 8003010:	8813      	ldrh	r3, [r2, #0]
 8003012:	f825 3f62 	strh.w	r3, [r5, #98]!
    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
 8003016:	4604      	mov	r4, r0
        setWidthHeight(bitmap.getWidth(), bitmap.getHeight());
 8003018:	4628      	mov	r0, r5
 800301a:	f00c fd13 	bl	800fa44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800301e:	4606      	mov	r6, r0
 8003020:	4628      	mov	r0, r5
 8003022:	f00c fd49 	bl	800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8003026:	b231      	sxth	r1, r6
 8003028:	b202      	sxth	r2, r0
 800302a:	4620      	mov	r0, r4
 800302c:	f7ff ffde 	bl	8002fec <_ZN8touchgfx8Drawable14setWidthHeightEss>
        handlePressedUpdated();
 8003030:	6823      	ldr	r3, [r4, #0]
 8003032:	4620      	mov	r0, r4
 8003034:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8003038:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        handlePressedUpdated();
 800303c:	4718      	bx	r3

0800303e <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EED1Ev>:
class Vector
 800303e:	b538      	push	{r3, r4, r5, lr}
 8003040:	4604      	mov	r4, r0
 8003042:	25c0      	movs	r5, #192	; 0xc0
 8003044:	5963      	ldr	r3, [r4, r5]
 8003046:	1960      	adds	r0, r4, r5
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	3d40      	subs	r5, #64	; 0x40
 800304c:	4798      	blx	r3
 800304e:	f115 0f40 	cmn.w	r5, #64	; 0x40
 8003052:	d1f7      	bne.n	8003044 <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EED1Ev+0x6>
 8003054:	4620      	mov	r0, r4
 8003056:	bd38      	pop	{r3, r4, r5, pc}

08003058 <_ZN13humWindowBaseD1Ev>:
    virtual ~humWindowBase() {}
 8003058:	b570      	push	{r4, r5, r6, lr}
 800305a:	4b0b      	ldr	r3, [pc, #44]	; (8003088 <_ZN13humWindowBaseD1Ev+0x30>)
 800305c:	4e0b      	ldr	r6, [pc, #44]	; (800308c <_ZN13humWindowBaseD1Ev+0x34>)
 800305e:	4d0c      	ldr	r5, [pc, #48]	; (8003090 <_ZN13humWindowBaseD1Ev+0x38>)
 8003060:	6003      	str	r3, [r0, #0]
 8003062:	4604      	mov	r4, r0
 8003064:	f8c0 6564 	str.w	r6, [r0, #1380]	; 0x564
 8003068:	f8c0 55cc 	str.w	r5, [r0, #1484]	; 0x5cc
 800306c:	f600 0048 	addw	r0, r0, #2120	; 0x848
 8003070:	f7ff ffe5 	bl	800303e <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EED1Ev>
 8003074:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
 8003078:	f8c4 51c0 	str.w	r5, [r4, #448]	; 0x1c0
 800307c:	f204 403c 	addw	r0, r4, #1084	; 0x43c
 8003080:	f7ff ffdd 	bl	800303e <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EED1Ev>
 8003084:	4620      	mov	r0, r4
 8003086:	bd70      	pop	{r4, r5, r6, pc}
 8003088:	0801e13c 	.word	0x0801e13c
 800308c:	0801df5c 	.word	0x0801df5c
 8003090:	0801e674 	.word	0x0801e674

08003094 <_ZN13humWindowBaseD0Ev>:
 8003094:	b510      	push	{r4, lr}
 8003096:	4604      	mov	r4, r0
 8003098:	f7ff ffde 	bl	8003058 <_ZN13humWindowBaseD1Ev>
 800309c:	4620      	mov	r0, r4
 800309e:	f44f 6118 	mov.w	r1, #2432	; 0x980
 80030a2:	f018 fd0c 	bl	801babe <_ZdlPvj>
 80030a6:	4620      	mov	r0, r4
 80030a8:	bd10      	pop	{r4, pc}
	...

080030ac <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    TextButtonStyle()
 80030ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80030ae:	4604      	mov	r4, r0
 80030b0:	f7ff fc5a 	bl	8002968 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 80030b4:	f44f 437f 	mov.w	r3, #65280	; 0xff00
        : T(), up(), down()
 80030b8:	4626      	mov	r6, r4
 80030ba:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 80030bc:	2301      	movs	r3, #1
 80030be:	2500      	movs	r5, #0
 80030c0:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 80030c4:	4b1e      	ldr	r3, [pc, #120]	; (8003140 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x94>)
 80030c6:	62a5      	str	r5, [r4, #40]	; 0x28
 80030c8:	6325      	str	r5, [r4, #48]	; 0x30
 80030ca:	f846 3b34 	str.w	r3, [r6], #52
 80030ce:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80030d2:	a901      	add	r1, sp, #4
 80030d4:	4630      	mov	r0, r6
 80030d6:	f8ad 7004 	strh.w	r7, [sp, #4]
 80030da:	f7ff fc65 	bl	80029a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        buttonImage.setXY(0, 0);
 80030de:	462a      	mov	r2, r5
 80030e0:	4629      	mov	r1, r5
 80030e2:	4630      	mov	r0, r6
 80030e4:	f8a4 7060 	strh.w	r7, [r4, #96]	; 0x60
 80030e8:	f8a4 7062 	strh.w	r7, [r4, #98]	; 0x62
 80030ec:	f7ff fc4e 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
        T::add(buttonImage);
 80030f0:	4631      	mov	r1, r6
 80030f2:	4620      	mov	r0, r4
        : T()
 80030f4:	4626      	mov	r6, r4
 80030f6:	f006 fa8b 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80030fa:	4b12      	ldr	r3, [pc, #72]	; (8003144 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x98>)
 80030fc:	f846 3b64 	str.w	r3, [r6], #100
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8003100:	2226      	movs	r2, #38	; 0x26
 8003102:	4629      	mov	r1, r5
 8003104:	4630      	mov	r0, r6
 8003106:	f018 fd95 	bl	801bc34 <memset>
 800310a:	4630      	mov	r0, r6
 800310c:	f7ff fc2c 	bl	8002968 <_ZN8touchgfx8DrawableC1Ev>
 8003110:	4b0d      	ldr	r3, [pc, #52]	; (8003148 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x9c>)
 8003112:	6663      	str	r3, [r4, #100]	; 0x64
 8003114:	4b0d      	ldr	r3, [pc, #52]	; (800314c <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xa0>)
 8003116:	f8c4 308c 	str.w	r3, [r4, #140]	; 0x8c
 800311a:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
        T::add(text);
 800311e:	4620      	mov	r0, r4
        : color(0)
 8003120:	e9c4 5528 	strd	r5, r5, [r4, #160]	; 0xa0
 8003124:	f8a4 7090 	strh.w	r7, [r4, #144]	; 0x90
        : color(col)
 8003128:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 800312c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8003130:	f8a4 509c 	strh.w	r5, [r4, #156]	; 0x9c
 8003134:	4631      	mov	r1, r6
 8003136:	f006 fa6b 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800313a:	4620      	mov	r0, r4
 800313c:	b003      	add	sp, #12
 800313e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003140:	0801dfec 	.word	0x0801dfec
 8003144:	0801e088 	.word	0x0801e088
 8003148:	0801f57c 	.word	0x0801f57c
 800314c:	0801d7d0 	.word	0x0801d7d0

08003150 <_ZN13humWindowBaseC1Ev>:
humWindowBase::humWindowBase() :
 8003150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003154:	4604      	mov	r4, r0
 8003156:	b087      	sub	sp, #28
    flexButtonCallback(this, &humWindowBase::flexButtonCallbackHandler)
 8003158:	4627      	mov	r7, r4
 800315a:	2500      	movs	r5, #0
 800315c:	f7ff fc04 	bl	8002968 <_ZN8touchgfx8DrawableC1Ev>
 8003160:	4b61      	ldr	r3, [pc, #388]	; (80032e8 <_ZN13humWindowBaseC1Ev+0x198>)
 8003162:	62a5      	str	r5, [r4, #40]	; 0x28
 8003164:	f847 3b2c 	str.w	r3, [r7], #44
 8003168:	f104 0958 	add.w	r9, r4, #88	; 0x58
 800316c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8003170:	a904      	add	r1, sp, #16
 8003172:	4638      	mov	r0, r7
 8003174:	f104 0884 	add.w	r8, r4, #132	; 0x84
 8003178:	f8ad 6010 	strh.w	r6, [sp, #16]
 800317c:	f7ff fc14 	bl	80029a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003180:	a904      	add	r1, sp, #16
 8003182:	4648      	mov	r0, r9
 8003184:	f8ad 6010 	strh.w	r6, [sp, #16]
 8003188:	f7ff fc0e 	bl	80029a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800318c:	a904      	add	r1, sp, #16
 800318e:	f8ad 6010 	strh.w	r6, [sp, #16]
 8003192:	4640      	mov	r0, r8
 8003194:	f104 06b0 	add.w	r6, r4, #176	; 0xb0
 8003198:	f7ff fc06 	bl	80029a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800319c:	f504 7bac 	add.w	fp, r4, #344	; 0x158
 80031a0:	4630      	mov	r0, r6
 80031a2:	f7ff ff83 	bl	80030ac <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80031a6:	f204 5a64 	addw	sl, r4, #1380	; 0x564
 80031aa:	4658      	mov	r0, fp
 80031ac:	f000 ff94 	bl	80040d8 <_ZN7humDispC1Ev>
 80031b0:	4650      	mov	r0, sl
 80031b2:	f000 ff91 	bl	80040d8 <_ZN7humDispC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80031b6:	4b4d      	ldr	r3, [pc, #308]	; (80032ec <_ZN13humWindowBaseC1Ev+0x19c>)
 80031b8:	f8c4 3970 	str.w	r3, [r4, #2416]	; 0x970
 80031bc:	4b4c      	ldr	r3, [pc, #304]	; (80032f0 <_ZN13humWindowBaseC1Ev+0x1a0>)
 80031be:	f8c4 3978 	str.w	r3, [r4, #2424]	; 0x978
        rect.width = width;
 80031c2:	4b4c      	ldr	r3, [pc, #304]	; (80032f4 <_ZN13humWindowBaseC1Ev+0x1a4>)
 80031c4:	60a3      	str	r3, [r4, #8]
    image1.setXY(0, 30);
 80031c6:	221e      	movs	r2, #30
 80031c8:	4629      	mov	r1, r5
 80031ca:	4638      	mov	r0, r7
 80031cc:	f8c4 4974 	str.w	r4, [r4, #2420]	; 0x974
 80031d0:	f8c4 597c 	str.w	r5, [r4, #2428]	; 0x97c
 80031d4:	f7ff fbda 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 80031d8:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DISP_BACK_ID));
 80031da:	a904      	add	r1, sp, #16
 80031dc:	4638      	mov	r0, r7
 80031de:	f8ad 3010 	strh.w	r3, [sp, #16]
 80031e2:	f007 ff3e 	bl	800b062 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(107, 37);
 80031e6:	2225      	movs	r2, #37	; 0x25
 80031e8:	4648      	mov	r0, r9
 80031ea:	216b      	movs	r1, #107	; 0x6b
 80031ec:	f7ff fbce 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 80031f0:	230a      	movs	r3, #10
    image3.setBitmap(touchgfx::Bitmap(BITMAP_DISP_RIGHT_ID));
 80031f2:	a904      	add	r1, sp, #16
 80031f4:	4648      	mov	r0, r9
 80031f6:	f8ad 3010 	strh.w	r3, [sp, #16]
 80031fa:	f007 ff32 	bl	800b062 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image2.setXY(7, 37);
 80031fe:	2225      	movs	r2, #37	; 0x25
 8003200:	4640      	mov	r0, r8
 8003202:	2107      	movs	r1, #7
 8003204:	f7ff fbc2 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 8003208:	2309      	movs	r3, #9
    image2.setBitmap(touchgfx::Bitmap(BITMAP_DISP_LEFT_ID));
 800320a:	a904      	add	r1, sp, #16
 800320c:	4640      	mov	r0, r8
 800320e:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003212:	f007 ff26 	bl	800b062 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003216:	230b      	movs	r3, #11
 8003218:	f8ad 300c 	strh.w	r3, [sp, #12]
 800321c:	230c      	movs	r3, #12
    flexButton1.setBitmaps(Bitmap(BITMAP_LABEL_BACGROUND_ID), Bitmap(BITMAP_LABEL_BACGROUND_CLICKED_ID));
 800321e:	eb0d 0103 	add.w	r1, sp, r3
 8003222:	aa04      	add	r2, sp, #16
 8003224:	4630      	mov	r0, r6
 8003226:	f8ad 3010 	strh.w	r3, [sp, #16]
 800322a:	f7ff feec 	bl	8003006 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>
        buttonImage.setXY(x, y);
 800322e:	462a      	mov	r2, r5
 8003230:	4629      	mov	r1, r5
 8003232:	f104 00e4 	add.w	r0, r4, #228	; 0xe4
 8003236:	f7ff fba9 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 800323a:	4b2f      	ldr	r3, [pc, #188]	; (80032f8 <_ZN13humWindowBaseC1Ev+0x1a8>)
 800323c:	9304      	str	r3, [sp, #16]
        text.setTypedText(t);
 800323e:	f504 708a 	add.w	r0, r4, #276	; 0x114
 8003242:	2306      	movs	r3, #6
 8003244:	a904      	add	r1, sp, #16
 8003246:	f8ad 3014 	strh.w	r3, [sp, #20]
 800324a:	9001      	str	r0, [sp, #4]
 800324c:	f007 fdc9 	bl	800ade2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        setWidthHeight(drawable.getWidth(), drawable.getHeight());
 8003250:	f9b4 20ba 	ldrsh.w	r2, [r4, #186]	; 0xba
 8003254:	f9b4 10b8 	ldrsh.w	r1, [r4, #184]	; 0xb8
 8003258:	9801      	ldr	r0, [sp, #4]
 800325a:	f7ff fec7 	bl	8002fec <_ZN8touchgfx8Drawable14setWidthHeightEss>
        setXY(x, y);
 800325e:	9801      	ldr	r0, [sp, #4]
 8003260:	462a      	mov	r2, r5
 8003262:	4629      	mov	r1, r5
 8003264:	f7ff fb92 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8003268:	9801      	ldr	r0, [sp, #4]
 800326a:	221e      	movs	r2, #30
 800326c:	21c8      	movs	r1, #200	; 0xc8
 800326e:	f7ff febd 	bl	8002fec <_ZN8touchgfx8Drawable14setWidthHeightEss>
        colorReleased = newColorReleased;
 8003272:	4b22      	ldr	r3, [pc, #136]	; (80032fc <_ZN13humWindowBaseC1Ev+0x1ac>)
        handlePressedUpdated();
 8003274:	4630      	mov	r0, r6
        colorPressed = newColorPressed;
 8003276:	e9c4 3354 	strd	r3, r3, [r4, #336]	; 0x150
        handlePressedUpdated();
 800327a:	f7ff fe4a 	bl	8002f12 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
        setXY(x, y);
 800327e:	462a      	mov	r2, r5
 8003280:	4629      	mov	r1, r5
 8003282:	4630      	mov	r0, r6
 8003284:	f7ff fb82 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8003288:	4630      	mov	r0, r6
 800328a:	221e      	movs	r2, #30
 800328c:	21c8      	movs	r1, #200	; 0xc8
 800328e:	f7ff fead 	bl	8002fec <_ZN8touchgfx8Drawable14setWidthHeightEss>
    flexButton1.setAction(flexButtonCallback);
 8003292:	f504 6317 	add.w	r3, r4, #2416	; 0x970
        action = &callback;
 8003296:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
    humDisp2.setXY(107, 37);
 800329a:	4658      	mov	r0, fp
 800329c:	2225      	movs	r2, #37	; 0x25
 800329e:	216b      	movs	r1, #107	; 0x6b
 80032a0:	f7ff fb74 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
    humDisp1.setXY(7, 37);
 80032a4:	2225      	movs	r2, #37	; 0x25
 80032a6:	4650      	mov	r0, sl
 80032a8:	2107      	movs	r1, #7
 80032aa:	f7ff fb6f 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
    add(image1);
 80032ae:	4639      	mov	r1, r7
 80032b0:	4620      	mov	r0, r4
 80032b2:	f006 f9ad 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(image3);
 80032b6:	4649      	mov	r1, r9
 80032b8:	4620      	mov	r0, r4
 80032ba:	f006 f9a9 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(image2);
 80032be:	4641      	mov	r1, r8
 80032c0:	4620      	mov	r0, r4
 80032c2:	f006 f9a5 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton1);
 80032c6:	4631      	mov	r1, r6
 80032c8:	4620      	mov	r0, r4
 80032ca:	f006 f9a1 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(humDisp2);
 80032ce:	4659      	mov	r1, fp
 80032d0:	4620      	mov	r0, r4
 80032d2:	f006 f99d 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(humDisp1);
 80032d6:	4620      	mov	r0, r4
 80032d8:	4651      	mov	r1, sl
 80032da:	f006 f999 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80032de:	4620      	mov	r0, r4
 80032e0:	b007      	add	sp, #28
 80032e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032e6:	bf00      	nop
 80032e8:	0801e13c 	.word	0x0801e13c
 80032ec:	0801e124 	.word	0x0801e124
 80032f0:	08002f91 	.word	0x08002f91
 80032f4:	005000c8 	.word	0x005000c8
 80032f8:	0801d7d0 	.word	0x0801d7d0
 80032fc:	ff0a0a0a 	.word	0xff0a0a0a

08003300 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003300:	4770      	bx	lr

08003302 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003302:	4770      	bx	lr

08003304 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003304:	4770      	bx	lr

08003306 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003306:	4770      	bx	lr

08003308 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8003308:	4770      	bx	lr

0800330a <_ZN18mainScreenViewBase12upBtnClickedEv>:
     * Virtual Action Handlers
     */
    virtual void upBtnClicked()
    {
        // Override and implement this function in mainScreen
    }
 800330a:	4770      	bx	lr

0800330c <_ZN18mainScreenViewBase14downBtnClickedEv>:

    virtual void downBtnClicked()
    {
        // Override and implement this function in mainScreen
    }
 800330c:	4770      	bx	lr

0800330e <_ZN18mainScreenViewBase15rightBtnClickedEv>:

    virtual void rightBtnClicked()
    {
        // Override and implement this function in mainScreen
    }
 800330e:	4770      	bx	lr

08003310 <_ZN18mainScreenViewBase14leftBtnClickedEv>:

    virtual void leftBtnClicked()
    {
        // Override and implement this function in mainScreen
    }
 8003310:	4770      	bx	lr

08003312 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003312:	4770      	bx	lr

08003314 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8003314:	4770      	bx	lr

08003316 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003316:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003318:	68c2      	ldr	r2, [r0, #12]
 800331a:	6844      	ldr	r4, [r0, #4]
 800331c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800331e:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003320:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003324:	07d2      	lsls	r2, r2, #31
 8003326:	bf48      	it	mi
 8003328:	5962      	ldrmi	r2, [r4, r5]
 800332a:	689b      	ldr	r3, [r3, #8]
    }
 800332c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800332e:	bf48      	it	mi
 8003330:	58d3      	ldrmi	r3, [r2, r3]
 8003332:	4718      	bx	r3

08003334 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8003334:	6843      	ldr	r3, [r0, #4]
 8003336:	b12b      	cbz	r3, 8003344 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8003338:	6883      	ldr	r3, [r0, #8]
 800333a:	b92b      	cbnz	r3, 8003348 <_ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 800333c:	68c0      	ldr	r0, [r0, #12]
 800333e:	f000 0001 	and.w	r0, r0, #1
 8003342:	4770      	bx	lr
 8003344:	4618      	mov	r0, r3
 8003346:	4770      	bx	lr
 8003348:	2001      	movs	r0, #1
    }
 800334a:	4770      	bx	lr

0800334c <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
 800334c:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8003350:	f880 3090 	strb.w	r3, [r0, #144]	; 0x90
 8003354:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
        T::handleAlphaUpdated();
    }
 8003358:	4770      	bx	lr

0800335a <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 800335a:	b510      	push	{r4, lr}
 800335c:	2194      	movs	r1, #148	; 0x94
 800335e:	4604      	mov	r4, r0
 8003360:	f018 fbad 	bl	801babe <_ZdlPvj>
 8003364:	4620      	mov	r0, r4
 8003366:	bd10      	pop	{r4, pc}

08003368 <_ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003368:	b510      	push	{r4, lr}
 800336a:	2110      	movs	r1, #16
 800336c:	4604      	mov	r4, r0
 800336e:	f018 fba6 	bl	801babe <_ZdlPvj>
 8003372:	4620      	mov	r0, r4
 8003374:	bd10      	pop	{r4, pc}

08003376 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8003376:	b510      	push	{r4, lr}
 8003378:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 800337a:	3068      	adds	r0, #104	; 0x68
 800337c:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8003380:	b13b      	cbz	r3, 8003392 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8003382:	f104 0166 	add.w	r1, r4, #102	; 0x66
 8003386:	f007 fe6c 	bl	800b062 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 800338a:	4620      	mov	r0, r4
 800338c:	f7ff fdb7 	bl	8002efe <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8003390:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8003392:	f104 0164 	add.w	r1, r4, #100	; 0x64
 8003396:	e7f6      	b.n	8003386 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08003398 <_ZN18mainScreenViewBase11setupScreenEv>:
    add(humWindow1);
    add(tempWindow1);
}

void mainScreenViewBase::setupScreen()
{
 8003398:	b510      	push	{r4, lr}
 800339a:	4604      	mov	r4, r0
    humWindow1.initialize();
 800339c:	f500 703a 	add.w	r0, r0, #744	; 0x2e8
 80033a0:	f000 fea7 	bl	80040f2 <_ZN9humWindow10initializeEv>
    tempWindow1.initialize();
 80033a4:	f504 6047 	add.w	r0, r4, #3184	; 0xc70
}
 80033a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    tempWindow1.initialize();
 80033ac:	f000 bfd3 	b.w	8004356 <_ZN10tempWindow10initializeEv>

080033b0 <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void mainScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &left)
 80033b0:	f100 0298 	add.w	r2, r0, #152	; 0x98
 80033b4:	4291      	cmp	r1, r2
 80033b6:	d102      	bne.n	80033be <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //Interaction4
        //When left clicked call virtual function
        //Call leftBtnClicked
        leftBtnClicked();
 80033b8:	6803      	ldr	r3, [r0, #0]
 80033ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    else if (&src == &down)
    {
        //Interaction2
        //When down clicked call virtual function
        //Call downBtnClicked
        downBtnClicked();
 80033bc:	4718      	bx	r3
    else if (&src == &right)
 80033be:	f500 7296 	add.w	r2, r0, #300	; 0x12c
 80033c2:	4291      	cmp	r1, r2
 80033c4:	d102      	bne.n	80033cc <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        rightBtnClicked();
 80033c6:	6803      	ldr	r3, [r0, #0]
 80033c8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80033ca:	e7f7      	b.n	80033bc <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &up)
 80033cc:	f500 72e0 	add.w	r2, r0, #448	; 0x1c0
 80033d0:	4291      	cmp	r1, r2
 80033d2:	d102      	bne.n	80033da <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
        upBtnClicked();
 80033d4:	6803      	ldr	r3, [r0, #0]
 80033d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80033d8:	e7f0      	b.n	80033bc <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &down)
 80033da:	f500 7215 	add.w	r2, r0, #596	; 0x254
 80033de:	4291      	cmp	r1, r2
 80033e0:	d102      	bne.n	80033e8 <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
        downBtnClicked();
 80033e2:	6803      	ldr	r3, [r0, #0]
 80033e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033e6:	e7e9      	b.n	80033bc <_ZN18mainScreenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 80033e8:	4770      	bx	lr

080033ea <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 80033ea:	880b      	ldrh	r3, [r1, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 80033ec:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 80033f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 80033f4:	f8a0 3064 	strh.w	r3, [r0, #100]	; 0x64
        iconPressed = newIconPressed;
 80033f8:	8813      	ldrh	r3, [r2, #0]
 80033fa:	f8a0 3066 	strh.w	r3, [r0, #102]	; 0x66
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 80033fe:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8003400:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003404:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8003406:	4617      	mov	r7, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8003408:	f3c1 054f 	ubfx	r5, r1, #1, #16
 800340c:	f00c fb1a 	bl	800fa44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8003410:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8003414:	4680      	mov	r8, r0
 8003416:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 800341a:	4638      	mov	r0, r7
 800341c:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8003420:	f00c fb4a 	bl	800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8003424:	eba5 0158 	sub.w	r1, r5, r8, lsr #1
 8003428:	eba6 0250 	sub.w	r2, r6, r0, lsr #1
 800342c:	b212      	sxth	r2, r2
 800342e:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8003432:	b209      	sxth	r1, r1
 8003434:	f7ff faaa 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8003438:	6823      	ldr	r3, [r4, #0]
 800343a:	4620      	mov	r0, r4
 800343c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8003440:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8003444:	4718      	bx	r3

08003446 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003446:	b538      	push	{r3, r4, r5, lr}
 8003448:	4604      	mov	r4, r0
 800344a:	461d      	mov	r5, r3
        setXY(x, y);
 800344c:	f7ff fa9e 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8003450:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8003454:	4629      	mov	r1, r5
 8003456:	4620      	mov	r0, r4
 8003458:	f7ff fdc8 	bl	8002fec <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800345c:	bd38      	pop	{r3, r4, r5, pc}
	...

08003460 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8003460:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8003462:	2226      	movs	r2, #38	; 0x26
    Box()
 8003464:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8003466:	2100      	movs	r1, #0
 8003468:	f018 fbe4 	bl	801bc34 <memset>
 800346c:	4620      	mov	r0, r4
 800346e:	f7ff fa7b 	bl	8002968 <_ZN8touchgfx8DrawableC1Ev>
 8003472:	4b04      	ldr	r3, [pc, #16]	; (8003484 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8003474:	6023      	str	r3, [r4, #0]
 8003476:	23ff      	movs	r3, #255	; 0xff
 8003478:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
 800347c:	2300      	movs	r3, #0
 800347e:	62a3      	str	r3, [r4, #40]	; 0x28
    {
    }
 8003480:	4620      	mov	r0, r4
 8003482:	bd10      	pop	{r4, pc}
 8003484:	0801f624 	.word	0x0801f624

08003488 <_ZN14tempWindowBaseD1Ev>:

class tempWindowBase : public touchgfx::Container
{
public:
    tempWindowBase();
    virtual ~tempWindowBase() {}
 8003488:	b570      	push	{r4, r5, r6, lr}
 800348a:	4b0b      	ldr	r3, [pc, #44]	; (80034b8 <_ZN14tempWindowBaseD1Ev+0x30>)

class tempDispBase : public touchgfx::Container
{
public:
    tempDispBase();
    virtual ~tempDispBase() {}
 800348c:	4e0b      	ldr	r6, [pc, #44]	; (80034bc <_ZN14tempWindowBaseD1Ev+0x34>)
 800348e:	4d0c      	ldr	r5, [pc, #48]	; (80034c0 <_ZN14tempWindowBaseD1Ev+0x38>)
 8003490:	6003      	str	r3, [r0, #0]
 8003492:	4604      	mov	r4, r0
 8003494:	f8c0 64bc 	str.w	r6, [r0, #1212]	; 0x4bc
 8003498:	f8c0 5524 	str.w	r5, [r0, #1316]	; 0x524
 800349c:	f500 60f4 	add.w	r0, r0, #1952	; 0x7a0
 80034a0:	f7ff fdcd 	bl	800303e <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EED1Ev>
 80034a4:	f8c4 60b0 	str.w	r6, [r4, #176]	; 0xb0
 80034a8:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 80034ac:	f504 7065 	add.w	r0, r4, #916	; 0x394
 80034b0:	f7ff fdc5 	bl	800303e <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EED1Ev>
 80034b4:	4620      	mov	r0, r4
 80034b6:	bd70      	pop	{r4, r5, r6, pc}
 80034b8:	0801e374 	.word	0x0801e374
 80034bc:	0801e2cc 	.word	0x0801e2cc
 80034c0:	0801e674 	.word	0x0801e674

080034c4 <_ZN18mainScreenViewBaseD1Ev>:
    virtual ~mainScreenViewBase() {}
 80034c4:	b510      	push	{r4, lr}
 80034c6:	4b09      	ldr	r3, [pc, #36]	; (80034ec <_ZN18mainScreenViewBaseD1Ev+0x28>)
 80034c8:	6003      	str	r3, [r0, #0]

class tempWindow : public tempWindowBase
{
public:
    tempWindow();
    virtual ~tempWindow() {}
 80034ca:	4b09      	ldr	r3, [pc, #36]	; (80034f0 <_ZN18mainScreenViewBaseD1Ev+0x2c>)
 80034cc:	f8c0 3c70 	str.w	r3, [r0, #3184]	; 0xc70
 80034d0:	4604      	mov	r4, r0
 80034d2:	f500 6047 	add.w	r0, r0, #3184	; 0xc70
 80034d6:	f7ff ffd7 	bl	8003488 <_ZN14tempWindowBaseD1Ev>

class humWindow : public humWindowBase
{
public:
    humWindow();
    virtual ~humWindow() {}
 80034da:	4b06      	ldr	r3, [pc, #24]	; (80034f4 <_ZN18mainScreenViewBaseD1Ev+0x30>)
 80034dc:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
 80034e0:	f504 703a 	add.w	r0, r4, #744	; 0x2e8
 80034e4:	f7ff fdb8 	bl	8003058 <_ZN13humWindowBaseD1Ev>
 80034e8:	4620      	mov	r0, r4
 80034ea:	bd10      	pop	{r4, pc}
 80034ec:	0801e288 	.word	0x0801e288
 80034f0:	0801e97c 	.word	0x0801e97c
 80034f4:	0801e7c0 	.word	0x0801e7c0

080034f8 <_ZN18mainScreenViewBaseD0Ev>:
 80034f8:	b510      	push	{r4, lr}
 80034fa:	4604      	mov	r4, r0
 80034fc:	f7ff ffe2 	bl	80034c4 <_ZN18mainScreenViewBaseD1Ev>
 8003500:	4620      	mov	r0, r4
 8003502:	f241 6108 	movw	r1, #5640	; 0x1608
 8003506:	f018 fada 	bl	801babe <_ZdlPvj>
 800350a:	4620      	mov	r0, r4
 800350c:	bd10      	pop	{r4, pc}

0800350e <_ZN14tempWindowBaseD0Ev>:
 800350e:	b510      	push	{r4, lr}
 8003510:	4604      	mov	r4, r0
 8003512:	f7ff ffb9 	bl	8003488 <_ZN14tempWindowBaseD1Ev>
 8003516:	4620      	mov	r0, r4
 8003518:	f44f 6118 	mov.w	r1, #2432	; 0x980
 800351c:	f018 facf 	bl	801babe <_ZdlPvj>
 8003520:	4620      	mov	r0, r4
 8003522:	bd10      	pop	{r4, pc}

08003524 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    IconButtonStyle()
 8003524:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003526:	4604      	mov	r4, r0
 8003528:	f7ff fa1e 	bl	8002968 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 800352c:	f44f 437f 	mov.w	r3, #65280	; 0xff00
        : T(), up(), down()
 8003530:	4626      	mov	r6, r4
 8003532:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8003534:	2301      	movs	r3, #1
 8003536:	2700      	movs	r7, #0
 8003538:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 800353c:	4b17      	ldr	r3, [pc, #92]	; (800359c <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x78>)
 800353e:	62a7      	str	r7, [r4, #40]	; 0x28
 8003540:	6327      	str	r7, [r4, #48]	; 0x30
 8003542:	f846 3b34 	str.w	r3, [r6], #52
 8003546:	f64f 75ff 	movw	r5, #65535	; 0xffff
 800354a:	a901      	add	r1, sp, #4
 800354c:	4630      	mov	r0, r6
 800354e:	f8ad 5004 	strh.w	r5, [sp, #4]
 8003552:	f7ff fa29 	bl	80029a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        buttonImage.setXY(0, 0);
 8003556:	463a      	mov	r2, r7
 8003558:	4639      	mov	r1, r7
 800355a:	4630      	mov	r0, r6
 800355c:	f8a4 5060 	strh.w	r5, [r4, #96]	; 0x60
 8003560:	f8a4 5062 	strh.w	r5, [r4, #98]	; 0x62
 8003564:	f7ff fa12 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
        T::add(buttonImage);
 8003568:	4631      	mov	r1, r6
 800356a:	4620      	mov	r0, r4
 800356c:	f006 f850 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8003570:	f104 0668 	add.w	r6, r4, #104	; 0x68
 8003574:	4b0a      	ldr	r3, [pc, #40]	; (80035a0 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x7c>)
 8003576:	6023      	str	r3, [r4, #0]
 8003578:	a901      	add	r1, sp, #4
 800357a:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 800357e:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8003582:	4630      	mov	r0, r6
 8003584:	f8ad 5004 	strh.w	r5, [sp, #4]
 8003588:	f7ff fa0e 	bl	80029a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 800358c:	4620      	mov	r0, r4
 800358e:	4631      	mov	r1, r6
 8003590:	f006 f83e 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8003594:	4620      	mov	r0, r4
 8003596:	b003      	add	sp, #12
 8003598:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800359a:	bf00      	nop
 800359c:	0801dfec 	.word	0x0801dfec
 80035a0:	0801e1d0 	.word	0x0801e1d0

080035a4 <_ZN18mainScreenViewBaseC1Ev>:
mainScreenViewBase::mainScreenViewBase() :
 80035a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035a8:	ed2d 8b04 	vpush	{d8-d9}
 80035ac:	4604      	mov	r4, r0
 80035ae:	b087      	sub	sp, #28
    flexButtonCallback(this, &mainScreenViewBase::flexButtonCallbackHandler)
 80035b0:	46a2      	mov	sl, r4
        : presenter(0)
 80035b2:	2500      	movs	r5, #0
 80035b4:	f00a fc92 	bl	800dedc <_ZN8touchgfx6ScreenC1Ev>
 80035b8:	4b9b      	ldr	r3, [pc, #620]	; (8003828 <_ZN18mainScreenViewBaseC1Ev+0x284>)
 80035ba:	63e5      	str	r5, [r4, #60]	; 0x3c
 80035bc:	f84a 3b40 	str.w	r3, [sl], #64
 80035c0:	4650      	mov	r0, sl
 80035c2:	f7ff ff4d 	bl	8003460 <_ZN8touchgfx3BoxC1Ev>
 80035c6:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 80035ca:	4618      	mov	r0, r3
 80035cc:	f104 0998 	add.w	r9, r4, #152	; 0x98
 80035d0:	ee08 3a10 	vmov	s16, r3
 80035d4:	f504 7896 	add.w	r8, r4, #300	; 0x12c
 80035d8:	f7ff ff42 	bl	8003460 <_ZN8touchgfx3BoxC1Ev>
 80035dc:	4648      	mov	r0, r9
 80035de:	f7ff ffa1 	bl	8003524 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80035e2:	f504 77e0 	add.w	r7, r4, #448	; 0x1c0
 80035e6:	4640      	mov	r0, r8
 80035e8:	f7ff ff9c 	bl	8003524 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80035ec:	f504 7615 	add.w	r6, r4, #596	; 0x254
 80035f0:	4638      	mov	r0, r7
 80035f2:	f7ff ff97 	bl	8003524 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80035f6:	4630      	mov	r0, r6
 80035f8:	f7ff ff94 	bl	8003524 <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80035fc:	f504 733a 	add.w	r3, r4, #744	; 0x2e8
 8003600:	4618      	mov	r0, r3
 8003602:	ee08 3a90 	vmov	s17, r3
 8003606:	f000 fdb7 	bl	8004178 <_ZN9humWindowC1Ev>
 800360a:	f504 6347 	add.w	r3, r4, #3184	; 0xc70
 800360e:	4618      	mov	r0, r3
 8003610:	ee09 3a10 	vmov	s18, r3
 8003614:	f000 fee0 	bl	80043d8 <_ZN10tempWindowC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003618:	f241 53f8 	movw	r3, #5624	; 0x15f8
 800361c:	18e2      	adds	r2, r4, r3
 800361e:	9203      	str	r2, [sp, #12]
 8003620:	4a82      	ldr	r2, [pc, #520]	; (800382c <_ZN18mainScreenViewBaseC1Ev+0x288>)
 8003622:	50e2      	str	r2, [r4, r3]
 8003624:	9b03      	ldr	r3, [sp, #12]
 8003626:	4a82      	ldr	r2, [pc, #520]	; (8003830 <_ZN18mainScreenViewBaseC1Ev+0x28c>)
 8003628:	605c      	str	r4, [r3, #4]
 800362a:	f504 53b0 	add.w	r3, r4, #5632	; 0x1600
    __background.setPosition(0, 0, 240, 320);
 800362e:	f44f 7ba0 	mov.w	fp, #320	; 0x140
 8003632:	601a      	str	r2, [r3, #0]
 8003634:	f241 6304 	movw	r3, #5636	; 0x1604
 8003638:	f8cd b000 	str.w	fp, [sp]
 800363c:	50e5      	str	r5, [r4, r3]
 800363e:	462a      	mov	r2, r5
 8003640:	4629      	mov	r1, r5
 8003642:	4650      	mov	r0, sl
 8003644:	23f0      	movs	r3, #240	; 0xf0
 8003646:	f7ff fefe 	bl	8003446 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 800364a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    background.setPosition(0, 0, 240, 320);
 800364e:	ee18 0a10 	vmov	r0, s16
 8003652:	66a3      	str	r3, [r4, #104]	; 0x68
 8003654:	f8cd b000 	str.w	fp, [sp]
 8003658:	462a      	mov	r2, r5
 800365a:	4629      	mov	r1, r5
 800365c:	23f0      	movs	r3, #240	; 0xf0
 800365e:	f7ff fef2 	bl	8003446 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003662:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003666:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    left.setBitmaps(Bitmap(BITMAP_BTN_LEFT_ID), Bitmap(BITMAP_BTN_LEFT_CLICKED_ID));
 800366a:	aa05      	add	r2, sp, #20
 800366c:	2301      	movs	r3, #1
 800366e:	a904      	add	r1, sp, #16
 8003670:	4648      	mov	r0, r9
 8003672:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003676:	f8ad 5010 	strh.w	r5, [sp, #16]
 800367a:	f7ff fcc4 	bl	8003006 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>
        buttonImage.setXY(x, y);
 800367e:	462a      	mov	r2, r5
 8003680:	4629      	mov	r1, r5
 8003682:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8003686:	f7ff f981 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 800368a:	230d      	movs	r3, #13
    left.setIconBitmaps(Bitmap(BITMAP_LEFT_ID), Bitmap(BITMAP_LEFT_ID));
 800368c:	aa05      	add	r2, sp, #20
 800368e:	a904      	add	r1, sp, #16
 8003690:	4648      	mov	r0, r9
 8003692:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003696:	f8ad 3014 	strh.w	r3, [sp, #20]
    left.setPosition(20, 220, 60, 80);
 800369a:	f04f 0b50 	mov.w	fp, #80	; 0x50
    left.setIconBitmaps(Bitmap(BITMAP_LEFT_ID), Bitmap(BITMAP_LEFT_ID));
 800369e:	f7ff fea4 	bl	80033ea <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
        rect.x = x;
 80036a2:	4b64      	ldr	r3, [pc, #400]	; (8003834 <_ZN18mainScreenViewBaseC1Ev+0x290>)
 80036a4:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
    left.setPosition(20, 220, 60, 80);
 80036a8:	f8cd b000 	str.w	fp, [sp]
 80036ac:	4648      	mov	r0, r9
 80036ae:	233c      	movs	r3, #60	; 0x3c
 80036b0:	22dc      	movs	r2, #220	; 0xdc
 80036b2:	2114      	movs	r1, #20
 80036b4:	f7ff fec7 	bl	8003446 <_ZN8touchgfx8Drawable11setPositionEssss>
        action = &callback;
 80036b8:	9a03      	ldr	r2, [sp, #12]
 80036ba:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
 80036be:	2302      	movs	r3, #2
 80036c0:	f8ad 3010 	strh.w	r3, [sp, #16]
    right.setBitmaps(Bitmap(BITMAP_BTN_RIGHT_ID), Bitmap(BITMAP_BTN_RIGHT_CLICKED_ID));
 80036c4:	aa05      	add	r2, sp, #20
 80036c6:	2303      	movs	r3, #3
 80036c8:	a904      	add	r1, sp, #16
 80036ca:	4640      	mov	r0, r8
 80036cc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80036d0:	f7ff fc99 	bl	8003006 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>
 80036d4:	462a      	mov	r2, r5
 80036d6:	4629      	mov	r1, r5
 80036d8:	f504 70b0 	add.w	r0, r4, #352	; 0x160
 80036dc:	f7ff f956 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 80036e0:	2310      	movs	r3, #16
    right.setIconBitmaps(Bitmap(BITMAP_RIGHT_ID), Bitmap(BITMAP_RIGHT_ID));
 80036e2:	eb0d 0103 	add.w	r1, sp, r3
 80036e6:	aa05      	add	r2, sp, #20
 80036e8:	4640      	mov	r0, r8
 80036ea:	f8ad 3010 	strh.w	r3, [sp, #16]
 80036ee:	f8ad 3014 	strh.w	r3, [sp, #20]
 80036f2:	f7ff fe7a 	bl	80033ea <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 80036f6:	4b4f      	ldr	r3, [pc, #316]	; (8003834 <_ZN18mainScreenViewBaseC1Ev+0x290>)
 80036f8:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
    right.setPosition(160, 220, 60, 80);
 80036fc:	f8cd b000 	str.w	fp, [sp]
 8003700:	4640      	mov	r0, r8
 8003702:	233c      	movs	r3, #60	; 0x3c
 8003704:	22dc      	movs	r2, #220	; 0xdc
 8003706:	21a0      	movs	r1, #160	; 0xa0
 8003708:	f7ff fe9d 	bl	8003446 <_ZN8touchgfx8Drawable11setPositionEssss>
 800370c:	9b03      	ldr	r3, [sp, #12]
 800370e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8003712:	f04f 0b05 	mov.w	fp, #5
 8003716:	f04f 0304 	mov.w	r3, #4
    up.setBitmaps(Bitmap(BITMAP_BTN_UP_DOWN_ID), Bitmap(BITMAP_BTN_UP_DOWN_CLICKED_ID));
 800371a:	aa05      	add	r2, sp, #20
 800371c:	a904      	add	r1, sp, #16
 800371e:	4638      	mov	r0, r7
 8003720:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003724:	f8ad b014 	strh.w	fp, [sp, #20]
 8003728:	f7ff fc6d 	bl	8003006 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>
 800372c:	462a      	mov	r2, r5
 800372e:	4629      	mov	r1, r5
 8003730:	f504 70fa 	add.w	r0, r4, #500	; 0x1f4
 8003734:	f7ff f92a 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 8003738:	230f      	movs	r3, #15
    up.setIconBitmaps(Bitmap(BITMAP_PLUS_ID), Bitmap(BITMAP_PLUS_ID));
 800373a:	aa05      	add	r2, sp, #20
 800373c:	a904      	add	r1, sp, #16
 800373e:	4638      	mov	r0, r7
 8003740:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003744:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003748:	f7ff fe4f 	bl	80033ea <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 800374c:	2212      	movs	r2, #18
 800374e:	f8c4 222c 	str.w	r2, [r4, #556]	; 0x22c
    up.setPosition(82, 220, 76, 39);
 8003752:	2227      	movs	r2, #39	; 0x27
 8003754:	9200      	str	r2, [sp, #0]
 8003756:	4638      	mov	r0, r7
 8003758:	234c      	movs	r3, #76	; 0x4c
 800375a:	22dc      	movs	r2, #220	; 0xdc
 800375c:	2152      	movs	r1, #82	; 0x52
 800375e:	f7ff fe72 	bl	8003446 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003762:	9b03      	ldr	r3, [sp, #12]
 8003764:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
    down.setBitmaps(Bitmap(BITMAP_BTN_UP_DOWN_ID), Bitmap(BITMAP_BTN_UP_DOWN_CLICKED_ID));
 8003768:	aa05      	add	r2, sp, #20
 800376a:	f04f 0304 	mov.w	r3, #4
 800376e:	a904      	add	r1, sp, #16
 8003770:	4630      	mov	r0, r6
 8003772:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003776:	f8ad b014 	strh.w	fp, [sp, #20]
 800377a:	f7ff fc44 	bl	8003006 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>
 800377e:	462a      	mov	r2, r5
 8003780:	4629      	mov	r1, r5
 8003782:	f504 7022 	add.w	r0, r4, #648	; 0x288
 8003786:	f7ff f901 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 800378a:	230e      	movs	r3, #14
    down.setIconBitmaps(Bitmap(BITMAP_MINUS_ID), Bitmap(BITMAP_MINUS_ID));
 800378c:	aa05      	add	r2, sp, #20
 800378e:	a904      	add	r1, sp, #16
 8003790:	4630      	mov	r0, r6
 8003792:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003796:	f8ad 3014 	strh.w	r3, [sp, #20]
 800379a:	f7ff fe26 	bl	80033ea <_ZN8touchgfx15IconButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 800379e:	2312      	movs	r3, #18
 80037a0:	f8c4 32c0 	str.w	r3, [r4, #704]	; 0x2c0
    down.setPosition(82, 261, 76, 39);
 80037a4:	2327      	movs	r3, #39	; 0x27
 80037a6:	9300      	str	r3, [sp, #0]
 80037a8:	4630      	mov	r0, r6
 80037aa:	234c      	movs	r3, #76	; 0x4c
 80037ac:	f240 1205 	movw	r2, #261	; 0x105
 80037b0:	2152      	movs	r1, #82	; 0x52
 80037b2:	f7ff fe48 	bl	8003446 <_ZN8touchgfx8Drawable11setPositionEssss>
 80037b6:	9b03      	ldr	r3, [sp, #12]
 80037b8:	f8c4 3284 	str.w	r3, [r4, #644]	; 0x284
    humWindow1.setXY(20, 120);
 80037bc:	ee18 0a90 	vmov	r0, s17
 80037c0:	2278      	movs	r2, #120	; 0x78
 80037c2:	2114      	movs	r1, #20
 80037c4:	f7ff f8e2 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
    tempWindow1.setXY(20, 20);
 80037c8:	2214      	movs	r2, #20
 80037ca:	4611      	mov	r1, r2
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80037cc:	1d25      	adds	r5, r4, #4
 80037ce:	ee19 0a10 	vmov	r0, s18
 80037d2:	f7ff f8db 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 80037d6:	4651      	mov	r1, sl
 80037d8:	4628      	mov	r0, r5
 80037da:	f005 ff19 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037de:	ee18 1a10 	vmov	r1, s16
 80037e2:	4628      	mov	r0, r5
 80037e4:	f005 ff14 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037e8:	4649      	mov	r1, r9
 80037ea:	4628      	mov	r0, r5
 80037ec:	f005 ff10 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037f0:	4641      	mov	r1, r8
 80037f2:	4628      	mov	r0, r5
 80037f4:	f005 ff0c 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037f8:	4639      	mov	r1, r7
 80037fa:	4628      	mov	r0, r5
 80037fc:	f005 ff08 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003800:	4631      	mov	r1, r6
 8003802:	4628      	mov	r0, r5
 8003804:	f005 ff04 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003808:	ee18 1a90 	vmov	r1, s17
 800380c:	4628      	mov	r0, r5
 800380e:	f005 feff 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003812:	4628      	mov	r0, r5
 8003814:	ee19 1a10 	vmov	r1, s18
 8003818:	f005 fefa 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800381c:	4620      	mov	r0, r4
 800381e:	b007      	add	sp, #28
 8003820:	ecbd 8b04 	vpop	{d8-d9}
 8003824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003828:	0801e288 	.word	0x0801e288
 800382c:	0801e270 	.word	0x0801e270
 8003830:	080033b1 	.word	0x080033b1
 8003834:	0014000a 	.word	0x0014000a

08003838 <_ZN12tempDispBase10initializeEv>:
    add(digits1);
}

void tempDispBase::initialize()
{
    digits1.initialize();
 8003838:	3068      	adds	r0, #104	; 0x68
 800383a:	f000 bba5 	b.w	8003f88 <_ZN6digits10initializeEv>
	...

08003840 <_ZN12tempDispBaseD1Ev>:
 8003840:	b538      	push	{r3, r4, r5, lr}
 8003842:	4b08      	ldr	r3, [pc, #32]	; (8003864 <_ZN12tempDispBaseD1Ev+0x24>)
 8003844:	6003      	str	r3, [r0, #0]
 8003846:	4b08      	ldr	r3, [pc, #32]	; (8003868 <_ZN12tempDispBaseD1Ev+0x28>)
 8003848:	6683      	str	r3, [r0, #104]	; 0x68
 800384a:	4604      	mov	r4, r0
 800384c:	f44f 7569 	mov.w	r5, #932	; 0x3a4
class Vector
 8003850:	5963      	ldr	r3, [r4, r5]
 8003852:	1960      	adds	r0, r4, r5
 8003854:	681b      	ldr	r3, [r3, #0]
 8003856:	3d40      	subs	r5, #64	; 0x40
 8003858:	4798      	blx	r3
 800385a:	f5b5 7f29 	cmp.w	r5, #676	; 0x2a4
 800385e:	d1f7      	bne.n	8003850 <_ZN12tempDispBaseD1Ev+0x10>
 8003860:	4620      	mov	r0, r4
 8003862:	bd38      	pop	{r3, r4, r5, pc}
 8003864:	0801e2cc 	.word	0x0801e2cc
 8003868:	0801e674 	.word	0x0801e674

0800386c <_ZN12tempDispBaseD0Ev>:
 800386c:	b510      	push	{r4, lr}
 800386e:	4604      	mov	r4, r0
 8003870:	f7ff ffe6 	bl	8003840 <_ZN12tempDispBaseD1Ev>
 8003874:	4620      	mov	r0, r4
 8003876:	f240 410c 	movw	r1, #1036	; 0x40c
 800387a:	f018 f920 	bl	801babe <_ZdlPvj>
 800387e:	4620      	mov	r0, r4
 8003880:	bd10      	pop	{r4, pc}
	...

08003884 <_ZN12tempDispBaseC1Ev>:
tempDispBase::tempDispBase()
 8003884:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8003888:	4606      	mov	r6, r0
        : x(0), y(0), width(0), height(0)
 800388a:	2500      	movs	r5, #0
 800388c:	4a29      	ldr	r2, [pc, #164]	; (8003934 <_ZN12tempDispBaseC1Ev+0xb0>)
 800388e:	6285      	str	r5, [r0, #40]	; 0x28
          visible(true)
 8003890:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003894:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8003898:	e9c0 5503 	strd	r5, r5, [r0, #12]
 800389c:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80038a0:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80038a4:	8483      	strh	r3, [r0, #36]	; 0x24
 80038a6:	f846 2b2c 	str.w	r2, [r6], #44
 80038aa:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 80038ae:	4b22      	ldr	r3, [pc, #136]	; (8003938 <_ZN12tempDispBaseC1Ev+0xb4>)
 80038b0:	62c3      	str	r3, [r0, #44]	; 0x2c
 80038b2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80038b6:	f8df 808c 	ldr.w	r8, [pc, #140]	; 8003944 <_ZN12tempDispBaseC1Ev+0xc0>
 80038ba:	f8a0 3058 	strh.w	r3, [r0, #88]	; 0x58
 80038be:	f100 0768 	add.w	r7, r0, #104	; 0x68
 80038c2:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80038c6:	4604      	mov	r4, r0
 80038c8:	e9c0 550c 	strd	r5, r5, [r0, #48]	; 0x30
 80038cc:	e9c0 550e 	strd	r5, r5, [r0, #56]	; 0x38
 80038d0:	e9c0 5510 	strd	r5, r5, [r0, #64]	; 0x40
 80038d4:	e9c0 5512 	strd	r5, r5, [r0, #72]	; 0x48
 80038d8:	f8c0 8054 	str.w	r8, [r0, #84]	; 0x54
        : color(col)
 80038dc:	65c5      	str	r5, [r0, #92]	; 0x5c
 80038de:	6603      	str	r3, [r0, #96]	; 0x60
 80038e0:	f8a0 5064 	strh.w	r5, [r0, #100]	; 0x64
 80038e4:	4638      	mov	r0, r7
 80038e6:	f000 fa73 	bl	8003dd0 <_ZN6digitsC1Ev>
        rect.width = width;
 80038ea:	4b14      	ldr	r3, [pc, #80]	; (800393c <_ZN12tempDispBaseC1Ev+0xb8>)
 80038ec:	60a3      	str	r3, [r4, #8]
        setX(x);
 80038ee:	4630      	mov	r0, r6
 80038f0:	2144      	movs	r1, #68	; 0x44
 80038f2:	f7ff f801 	bl	80028f8 <_ZN8touchgfx8Drawable4setXEs>
        setY(y);
 80038f6:	4630      	mov	r0, r6
 80038f8:	2103      	movs	r1, #3
 80038fa:	f7fe ffff 	bl	80028fc <_ZN8touchgfx8Drawable4setYEs>
        this->color = color;
 80038fe:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003902:	65e3      	str	r3, [r4, #92]	; 0x5c
    unit.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4FSJ));
 8003904:	4669      	mov	r1, sp
 8003906:	4630      	mov	r0, r6
        linespace = space;
 8003908:	f8a4 5060 	strh.w	r5, [r4, #96]	; 0x60
 800390c:	f8cd 8000 	str.w	r8, [sp]
 8003910:	f8ad 5004 	strh.w	r5, [sp, #4]
 8003914:	f007 fa65 	bl	800ade2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        rect.x = x;
 8003918:	4b09      	ldr	r3, [pc, #36]	; (8003940 <_ZN12tempDispBaseC1Ev+0xbc>)
 800391a:	66e3      	str	r3, [r4, #108]	; 0x6c
    add(unit);
 800391c:	4631      	mov	r1, r6
 800391e:	4620      	mov	r0, r4
 8003920:	f005 fe76 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(digits1);
 8003924:	4620      	mov	r0, r4
 8003926:	4639      	mov	r1, r7
 8003928:	f005 fe72 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800392c:	4620      	mov	r0, r4
 800392e:	b002      	add	sp, #8
 8003930:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003934:	0801e2cc 	.word	0x0801e2cc
 8003938:	0801f57c 	.word	0x0801f57c
 800393c:	00240056 	.word	0x00240056
 8003940:	0002000f 	.word	0x0002000f
 8003944:	0801d7d0 	.word	0x0801d7d0

08003948 <_ZN14tempWindowBase13toggleTempBtnEv>:
     * Virtual Action Handlers
     */
    virtual void toggleTempBtn()
    {
        // Override and implement this function in tempWindow
    }
 8003948:	4770      	bx	lr

0800394a <_ZN8touchgfx8CallbackI14tempWindowBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800394a:	4770      	bx	lr

0800394c <_ZN8touchgfx8CallbackI14tempWindowBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800394c:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800394e:	68c2      	ldr	r2, [r0, #12]
 8003950:	6844      	ldr	r4, [r0, #4]
 8003952:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003954:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003956:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800395a:	07d2      	lsls	r2, r2, #31
 800395c:	bf48      	it	mi
 800395e:	5962      	ldrmi	r2, [r4, r5]
 8003960:	689b      	ldr	r3, [r3, #8]
    }
 8003962:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003964:	bf48      	it	mi
 8003966:	58d3      	ldrmi	r3, [r2, r3]
 8003968:	4718      	bx	r3

0800396a <_ZNK8touchgfx8CallbackI14tempWindowBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800396a:	6843      	ldr	r3, [r0, #4]
 800396c:	b12b      	cbz	r3, 800397a <_ZNK8touchgfx8CallbackI14tempWindowBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 800396e:	6883      	ldr	r3, [r0, #8]
 8003970:	b92b      	cbnz	r3, 800397e <_ZNK8touchgfx8CallbackI14tempWindowBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8003972:	68c0      	ldr	r0, [r0, #12]
 8003974:	f000 0001 	and.w	r0, r0, #1
 8003978:	4770      	bx	lr
 800397a:	4618      	mov	r0, r3
 800397c:	4770      	bx	lr
 800397e:	2001      	movs	r0, #1
    }
 8003980:	4770      	bx	lr

08003982 <_ZN8touchgfx8CallbackI14tempWindowBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003982:	b510      	push	{r4, lr}
 8003984:	2110      	movs	r1, #16
 8003986:	4604      	mov	r4, r0
 8003988:	f018 f899 	bl	801babe <_ZdlPvj>
 800398c:	4620      	mov	r0, r4
 800398e:	bd10      	pop	{r4, pc}

08003990 <_ZN14tempWindowBase10initializeEv>:
    add(tempDisp2);
    add(flexButton1);
}

void tempWindowBase::initialize()
{
 8003990:	b510      	push	{r4, lr}
 8003992:	4604      	mov	r4, r0
    tempDisp1.initialize();
 8003994:	30b0      	adds	r0, #176	; 0xb0
 8003996:	f000 fca1 	bl	80042dc <_ZN8tempDisp10initializeEv>
    tempDisp2.initialize();
 800399a:	f204 40bc 	addw	r0, r4, #1212	; 0x4bc
}
 800399e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    tempDisp2.initialize();
 80039a2:	f000 bc9b 	b.w	80042dc <_ZN8tempDisp10initializeEv>

080039a6 <_ZN14tempWindowBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void tempWindowBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
 80039a6:	f600 02c8 	addw	r2, r0, #2248	; 0x8c8
 80039aa:	428a      	cmp	r2, r1
 80039ac:	d103      	bne.n	80039b6 <_ZN14tempWindowBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    {
        //Interaction1
        //When flexButton1 clicked call virtual function
        //Call toggleTempBtn
        toggleTempBtn();
 80039ae:	6803      	ldr	r3, [r0, #0]
 80039b0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80039b4:	4718      	bx	r3
    }
}
 80039b6:	4770      	bx	lr

080039b8 <_ZN14tempWindowBaseC1Ev>:
tempWindowBase::tempWindowBase() :
 80039b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039bc:	4604      	mov	r4, r0
 80039be:	b087      	sub	sp, #28
    flexButtonCallback(this, &tempWindowBase::flexButtonCallbackHandler)
 80039c0:	4627      	mov	r7, r4
 80039c2:	2500      	movs	r5, #0
 80039c4:	f7fe ffd0 	bl	8002968 <_ZN8touchgfx8DrawableC1Ev>
 80039c8:	4b62      	ldr	r3, [pc, #392]	; (8003b54 <_ZN14tempWindowBaseC1Ev+0x19c>)
 80039ca:	62a5      	str	r5, [r4, #40]	; 0x28
 80039cc:	f847 3b2c 	str.w	r3, [r7], #44
 80039d0:	f104 0958 	add.w	r9, r4, #88	; 0x58
 80039d4:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80039d8:	a904      	add	r1, sp, #16
 80039da:	4638      	mov	r0, r7
 80039dc:	f104 0884 	add.w	r8, r4, #132	; 0x84
 80039e0:	f8ad 6010 	strh.w	r6, [sp, #16]
 80039e4:	f7fe ffe0 	bl	80029a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80039e8:	a904      	add	r1, sp, #16
 80039ea:	4648      	mov	r0, r9
 80039ec:	f104 0bb0 	add.w	fp, r4, #176	; 0xb0
 80039f0:	f8ad 6010 	strh.w	r6, [sp, #16]
 80039f4:	f7fe ffd8 	bl	80029a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80039f8:	a904      	add	r1, sp, #16
 80039fa:	4640      	mov	r0, r8
 80039fc:	f204 4abc 	addw	sl, r4, #1212	; 0x4bc
 8003a00:	f8ad 6010 	strh.w	r6, [sp, #16]
 8003a04:	f7fe ffd0 	bl	80029a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003a08:	4658      	mov	r0, fp
 8003a0a:	f604 06c8 	addw	r6, r4, #2248	; 0x8c8
 8003a0e:	f000 fc95 	bl	800433c <_ZN8tempDispC1Ev>
 8003a12:	4650      	mov	r0, sl
 8003a14:	f000 fc92 	bl	800433c <_ZN8tempDispC1Ev>
 8003a18:	4630      	mov	r0, r6
 8003a1a:	f7ff fb47 	bl	80030ac <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003a1e:	4b4e      	ldr	r3, [pc, #312]	; (8003b58 <_ZN14tempWindowBaseC1Ev+0x1a0>)
 8003a20:	f8c4 3970 	str.w	r3, [r4, #2416]	; 0x970
 8003a24:	4b4d      	ldr	r3, [pc, #308]	; (8003b5c <_ZN14tempWindowBaseC1Ev+0x1a4>)
 8003a26:	f8c4 3978 	str.w	r3, [r4, #2424]	; 0x978
        rect.width = width;
 8003a2a:	4b4d      	ldr	r3, [pc, #308]	; (8003b60 <_ZN14tempWindowBaseC1Ev+0x1a8>)
 8003a2c:	60a3      	str	r3, [r4, #8]
    image1.setXY(0, 30);
 8003a2e:	221e      	movs	r2, #30
 8003a30:	4629      	mov	r1, r5
 8003a32:	4638      	mov	r0, r7
 8003a34:	f8c4 4974 	str.w	r4, [r4, #2420]	; 0x974
 8003a38:	f8c4 597c 	str.w	r5, [r4, #2428]	; 0x97c
 8003a3c:	f7fe ffa6 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 8003a40:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DISP_BACK_ID));
 8003a42:	a904      	add	r1, sp, #16
 8003a44:	4638      	mov	r0, r7
 8003a46:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003a4a:	f007 fb0a 	bl	800b062 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(107, 37);
 8003a4e:	2225      	movs	r2, #37	; 0x25
 8003a50:	4648      	mov	r0, r9
 8003a52:	216b      	movs	r1, #107	; 0x6b
 8003a54:	f7fe ff9a 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 8003a58:	230a      	movs	r3, #10
    image3.setBitmap(touchgfx::Bitmap(BITMAP_DISP_RIGHT_ID));
 8003a5a:	a904      	add	r1, sp, #16
 8003a5c:	4648      	mov	r0, r9
 8003a5e:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003a62:	f007 fafe 	bl	800b062 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image2.setXY(7, 37);
 8003a66:	2225      	movs	r2, #37	; 0x25
 8003a68:	4640      	mov	r0, r8
 8003a6a:	2107      	movs	r1, #7
 8003a6c:	f7fe ff8e 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 8003a70:	2309      	movs	r3, #9
    image2.setBitmap(touchgfx::Bitmap(BITMAP_DISP_LEFT_ID));
 8003a72:	a904      	add	r1, sp, #16
 8003a74:	4640      	mov	r0, r8
 8003a76:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003a7a:	f007 faf2 	bl	800b062 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    tempDisp1.setXY(7, 37);
 8003a7e:	4658      	mov	r0, fp
 8003a80:	2225      	movs	r2, #37	; 0x25
 8003a82:	2107      	movs	r1, #7
 8003a84:	f7fe ff82 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
    tempDisp2.setXY(107, 37);
 8003a88:	4650      	mov	r0, sl
 8003a8a:	2225      	movs	r2, #37	; 0x25
 8003a8c:	216b      	movs	r1, #107	; 0x6b
 8003a8e:	f7fe ff7d 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 8003a92:	230b      	movs	r3, #11
 8003a94:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003a98:	230c      	movs	r3, #12
    flexButton1.setBitmaps(Bitmap(BITMAP_LABEL_BACGROUND_ID), Bitmap(BITMAP_LABEL_BACGROUND_CLICKED_ID));
 8003a9a:	eb0d 0103 	add.w	r1, sp, r3
 8003a9e:	aa04      	add	r2, sp, #16
 8003aa0:	4630      	mov	r0, r6
 8003aa2:	f8ad 3010 	strh.w	r3, [sp, #16]
 8003aa6:	f7ff faae 	bl	8003006 <_ZN8touchgfx16ImageButtonStyleINS_18ClickButtonTriggerEE10setBitmapsERKNS_6BitmapES5_>
 8003aaa:	462a      	mov	r2, r5
 8003aac:	4629      	mov	r1, r5
 8003aae:	f604 00fc 	addw	r0, r4, #2300	; 0x8fc
 8003ab2:	f7fe ff6b 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 8003ab6:	4b2b      	ldr	r3, [pc, #172]	; (8003b64 <_ZN14tempWindowBaseC1Ev+0x1ac>)
 8003ab8:	9304      	str	r3, [sp, #16]
        text.setTypedText(t);
 8003aba:	f604 102c 	addw	r0, r4, #2348	; 0x92c
 8003abe:	231b      	movs	r3, #27
 8003ac0:	a904      	add	r1, sp, #16
 8003ac2:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003ac6:	9001      	str	r0, [sp, #4]
 8003ac8:	f007 f98b 	bl	800ade2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        setWidthHeight(drawable.getWidth(), drawable.getHeight());
 8003acc:	f9b4 28d2 	ldrsh.w	r2, [r4, #2258]	; 0x8d2
 8003ad0:	f9b4 18d0 	ldrsh.w	r1, [r4, #2256]	; 0x8d0
 8003ad4:	9801      	ldr	r0, [sp, #4]
 8003ad6:	f7ff fa89 	bl	8002fec <_ZN8touchgfx8Drawable14setWidthHeightEss>
        setXY(x, y);
 8003ada:	9801      	ldr	r0, [sp, #4]
 8003adc:	462a      	mov	r2, r5
 8003ade:	4629      	mov	r1, r5
 8003ae0:	f7fe ff54 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8003ae4:	9801      	ldr	r0, [sp, #4]
 8003ae6:	221e      	movs	r2, #30
 8003ae8:	21c8      	movs	r1, #200	; 0xc8
 8003aea:	f7ff fa7f 	bl	8002fec <_ZN8touchgfx8Drawable14setWidthHeightEss>
        colorReleased = newColorReleased;
 8003aee:	4b1e      	ldr	r3, [pc, #120]	; (8003b68 <_ZN14tempWindowBaseC1Ev+0x1b0>)
 8003af0:	f8c4 3968 	str.w	r3, [r4, #2408]	; 0x968
        colorPressed = newColorPressed;
 8003af4:	f8c4 396c 	str.w	r3, [r4, #2412]	; 0x96c
        handlePressedUpdated();
 8003af8:	4630      	mov	r0, r6
 8003afa:	f7ff fa0a 	bl	8002f12 <_ZN8touchgfx15TextButtonStyleINS_16ImageButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
        setXY(x, y);
 8003afe:	462a      	mov	r2, r5
 8003b00:	4629      	mov	r1, r5
 8003b02:	4630      	mov	r0, r6
 8003b04:	f7fe ff42 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8003b08:	221e      	movs	r2, #30
 8003b0a:	4630      	mov	r0, r6
 8003b0c:	21c8      	movs	r1, #200	; 0xc8
 8003b0e:	f7ff fa6d 	bl	8002fec <_ZN8touchgfx8Drawable14setWidthHeightEss>
    flexButton1.setAction(flexButtonCallback);
 8003b12:	f504 6317 	add.w	r3, r4, #2416	; 0x970
 8003b16:	f8c4 38f8 	str.w	r3, [r4, #2296]	; 0x8f8
    add(image1);
 8003b1a:	4639      	mov	r1, r7
 8003b1c:	4620      	mov	r0, r4
 8003b1e:	f005 fd77 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(image3);
 8003b22:	4649      	mov	r1, r9
 8003b24:	4620      	mov	r0, r4
 8003b26:	f005 fd73 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(image2);
 8003b2a:	4641      	mov	r1, r8
 8003b2c:	4620      	mov	r0, r4
 8003b2e:	f005 fd6f 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(tempDisp1);
 8003b32:	4659      	mov	r1, fp
 8003b34:	4620      	mov	r0, r4
 8003b36:	f005 fd6b 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(tempDisp2);
 8003b3a:	4651      	mov	r1, sl
 8003b3c:	4620      	mov	r0, r4
 8003b3e:	f005 fd67 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton1);
 8003b42:	4620      	mov	r0, r4
 8003b44:	4631      	mov	r1, r6
 8003b46:	f005 fd63 	bl	8009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003b4a:	4620      	mov	r0, r4
 8003b4c:	b007      	add	sp, #28
 8003b4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b52:	bf00      	nop
 8003b54:	0801e374 	.word	0x0801e374
 8003b58:	0801e35c 	.word	0x0801e35c
 8003b5c:	080039a7 	.word	0x080039a7
 8003b60:	005000c8 	.word	0x005000c8
 8003b64:	0801d7d0 	.word	0x0801d7d0
 8003b68:	ff0a0a0a 	.word	0xff0a0a0a

08003b6c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003b6c:	4770      	bx	lr

08003b6e <_ZN19FrontendApplicationD0Ev>:
 8003b6e:	b510      	push	{r4, lr}
 8003b70:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8003b74:	4604      	mov	r4, r0
 8003b76:	f017 ffa2 	bl	801babe <_ZdlPvj>
 8003b7a:	4620      	mov	r0, r4
 8003b7c:	bd10      	pop	{r4, pc}

08003b7e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003b7e:	b510      	push	{r4, lr}
 8003b80:	4604      	mov	r4, r0
    {
        model.tick();
 8003b82:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8003b86:	f000 f833 	bl	8003bf0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8003b8a:	4620      	mov	r0, r4
    }
 8003b8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8003b90:	f008 be58 	b.w	800c844 <_ZN8touchgfx11Application15handleTickEventEv>

08003b94 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8003b94:	b510      	push	{r4, lr}
 8003b96:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8003b98:	f7fe fae4 	bl	8002164 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8003b9c:	4b01      	ldr	r3, [pc, #4]	; (8003ba4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8003b9e:	6023      	str	r3, [r4, #0]
{

}
 8003ba0:	4620      	mov	r0, r4
 8003ba2:	bd10      	pop	{r4, pc}
 8003ba4:	0801e408 	.word	0x0801e408

08003ba8 <_ZN5Model11sendRequestEPf>:
	}
}

void Model::sendRequest(float *data)
{
	xQueueSend(messageQ2, data, 0);
 8003ba8:	4802      	ldr	r0, [pc, #8]	; (8003bb4 <_ZN5Model11sendRequestEPf+0xc>)
 8003baa:	2300      	movs	r3, #0
 8003bac:	6800      	ldr	r0, [r0, #0]
 8003bae:	461a      	mov	r2, r3
 8003bb0:	f004 b97e 	b.w	8007eb0 <xQueueGenericSend>
 8003bb4:	200027e0 	.word	0x200027e0

08003bb8 <_ZN5ModelC1Ev>:
Model::Model() : modelListener(0)
 8003bb8:	4b0a      	ldr	r3, [pc, #40]	; (8003be4 <_ZN5ModelC1Ev+0x2c>)
 8003bba:	2200      	movs	r2, #0
 8003bbc:	b510      	push	{r4, lr}
	messageQ = xQueueGenericCreate(3, sizeof(float), 0);
 8003bbe:	2104      	movs	r1, #4
Model::Model() : modelListener(0)
 8003bc0:	4604      	mov	r4, r0
 8003bc2:	6003      	str	r3, [r0, #0]
 8003bc4:	6042      	str	r2, [r0, #4]
	messageQ = xQueueGenericCreate(3, sizeof(float), 0);
 8003bc6:	2003      	movs	r0, #3
 8003bc8:	f004 f90a 	bl	8007de0 <xQueueGenericCreate>
 8003bcc:	4b06      	ldr	r3, [pc, #24]	; (8003be8 <_ZN5ModelC1Ev+0x30>)
	messageQ2 = xQueueGenericCreate(3, sizeof(float), 0);
 8003bce:	2200      	movs	r2, #0
	messageQ = xQueueGenericCreate(3, sizeof(float), 0);
 8003bd0:	6018      	str	r0, [r3, #0]
	messageQ2 = xQueueGenericCreate(3, sizeof(float), 0);
 8003bd2:	2104      	movs	r1, #4
 8003bd4:	2003      	movs	r0, #3
 8003bd6:	f004 f903 	bl	8007de0 <xQueueGenericCreate>
 8003bda:	4b04      	ldr	r3, [pc, #16]	; (8003bec <_ZN5ModelC1Ev+0x34>)
 8003bdc:	6018      	str	r0, [r3, #0]
}
 8003bde:	4620      	mov	r0, r4
 8003be0:	bd10      	pop	{r4, pc}
 8003be2:	bf00      	nop
 8003be4:	0801e44c 	.word	0x0801e44c
 8003be8:	200027dc 	.word	0x200027dc
 8003bec:	200027e0 	.word	0x200027e0

08003bf0 <_ZN5Model4tickEv>:
	if (xQueueReceive(messageQ, &r, 0) == pdTRUE)
 8003bf0:	4b02      	ldr	r3, [pc, #8]	; (8003bfc <_ZN5Model4tickEv+0xc>)
 8003bf2:	4903      	ldr	r1, [pc, #12]	; (8003c00 <_ZN5Model4tickEv+0x10>)
 8003bf4:	6818      	ldr	r0, [r3, #0]
 8003bf6:	2200      	movs	r2, #0
 8003bf8:	f004 bac2 	b.w	8008180 <xQueueReceive>
 8003bfc:	200027dc 	.word	0x200027dc
 8003c00:	200027e4 	.word	0x200027e4

08003c04 <_ZN6digitsD1Ev>:
 8003c04:	b538      	push	{r3, r4, r5, lr}
 8003c06:	4b07      	ldr	r3, [pc, #28]	; (8003c24 <_ZN6digitsD1Ev+0x20>)
 8003c08:	6003      	str	r3, [r0, #0]
 8003c0a:	4604      	mov	r4, r0
 8003c0c:	f44f 754f 	mov.w	r5, #828	; 0x33c
class Vector
 8003c10:	5963      	ldr	r3, [r4, r5]
 8003c12:	1960      	adds	r0, r4, r5
 8003c14:	681b      	ldr	r3, [r3, #0]
 8003c16:	3d40      	subs	r5, #64	; 0x40
 8003c18:	4798      	blx	r3
 8003c1a:	f5b5 7f0f 	cmp.w	r5, #572	; 0x23c
 8003c1e:	d1f7      	bne.n	8003c10 <_ZN6digitsD1Ev+0xc>
 8003c20:	4620      	mov	r0, r4
 8003c22:	bd38      	pop	{r3, r4, r5, pc}
 8003c24:	0801e674 	.word	0x0801e674

08003c28 <_ZN6digits20changeCursorPositionEi>:
	this->decimalsBox.invalidate();
}

void digits::changeCursorPosition(int direction)
{
	this->resetCursor();
 8003c28:	6803      	ldr	r3, [r0, #0]
{
 8003c2a:	b570      	push	{r4, r5, r6, lr}
 8003c2c:	4604      	mov	r4, r0
	this->resetCursor();
 8003c2e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
{
 8003c32:	460d      	mov	r5, r1
	this->resetCursor();
 8003c34:	4798      	blx	r3

	this->newCursorPosition += direction;
 8003c36:	f8d4 1398 	ldr.w	r1, [r4, #920]	; 0x398
 8003c3a:	4429      	add	r1, r5

	if (this->newCursorPosition == -1) this->newCursorPosition = 0;
 8003c3c:	1c4b      	adds	r3, r1, #1
 8003c3e:	d103      	bne.n	8003c48 <_ZN6digits20changeCursorPositionEi+0x20>
 8003c40:	2300      	movs	r3, #0
	else if (this->newCursorPosition == 4) this->newCursorPosition = 3;
 8003c42:	f8c4 3398 	str.w	r3, [r4, #920]	; 0x398
 8003c46:	e003      	b.n	8003c50 <_ZN6digits20changeCursorPositionEi+0x28>
 8003c48:	2904      	cmp	r1, #4
 8003c4a:	d008      	beq.n	8003c5e <_ZN6digits20changeCursorPositionEi+0x36>
	this->newCursorPosition += direction;
 8003c4c:	f8c4 1398 	str.w	r1, [r4, #920]	; 0x398

	this->showCursor();
 8003c50:	6823      	ldr	r3, [r4, #0]
 8003c52:	4620      	mov	r0, r4
 8003c54:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
}
 8003c58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	this->showCursor();
 8003c5c:	4718      	bx	r3
	else if (this->newCursorPosition == 4) this->newCursorPosition = 3;
 8003c5e:	2303      	movs	r3, #3
 8003c60:	e7ef      	b.n	8003c42 <_ZN6digits20changeCursorPositionEi+0x1a>

08003c62 <_ZN6digits11changeValueEi>:

void digits::changeValue(int value)
{
	switch (value) {
 8003c62:	1c4b      	adds	r3, r1, #1
 8003c64:	d010      	beq.n	8003c88 <_ZN6digits11changeValueEi+0x26>
 8003c66:	2901      	cmp	r1, #1
 8003c68:	d10a      	bne.n	8003c80 <_ZN6digits11changeValueEi+0x1e>
	case 1:
		if (this->values[newCursorPosition] < 9) this->values[newCursorPosition]++;
 8003c6a:	f8b0 3398 	ldrh.w	r3, [r0, #920]	; 0x398
 8003c6e:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8003c72:	f8d3 2380 	ldr.w	r2, [r3, #896]	; 0x380
 8003c76:	2a08      	cmp	r2, #8
 8003c78:	dc02      	bgt.n	8003c80 <_ZN6digits11changeValueEi+0x1e>
 8003c7a:	3201      	adds	r2, #1
		break;
	case -1:
		if (this->values[newCursorPosition] > 0) this->values[newCursorPosition]--;
 8003c7c:	f8c3 2380 	str.w	r2, [r3, #896]	; 0x380
		break;
	}
	this->updateValue();
 8003c80:	6803      	ldr	r3, [r0, #0]
 8003c82:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8003c86:	4718      	bx	r3
		if (this->values[newCursorPosition] > 0) this->values[newCursorPosition]--;
 8003c88:	f8b0 3398 	ldrh.w	r3, [r0, #920]	; 0x398
 8003c8c:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8003c90:	f8d3 2380 	ldr.w	r2, [r3, #896]	; 0x380
 8003c94:	2a00      	cmp	r2, #0
 8003c96:	ddf3      	ble.n	8003c80 <_ZN6digits11changeValueEi+0x1e>
 8003c98:	3a01      	subs	r2, #1
 8003c9a:	e7ef      	b.n	8003c7c <_ZN6digits11changeValueEi+0x1a>

08003c9c <_ZN6digits15initializeValueEf>:
}

void digits::initializeValue(float value)
{
	int hundreds = (int) value / 100;
 8003c9c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
{
 8003ca0:	b537      	push	{r0, r1, r2, r4, r5, lr}
	int hundreds = (int) value / 100;
 8003ca2:	ee17 1a90 	vmov	r1, s15
 8003ca6:	2364      	movs	r3, #100	; 0x64
 8003ca8:	fb91 f1f3 	sdiv	r1, r1, r3
	int tens = (int) (value - hundreds * 100) / 10;
 8003cac:	434b      	muls	r3, r1
 8003cae:	ee07 3a90 	vmov	s15, r3
 8003cb2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003cb6:	230a      	movs	r3, #10
 8003cb8:	ee30 0a67 	vsub.f32	s0, s0, s15
 8003cbc:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003cc0:	ee17 2a90 	vmov	r2, s15
 8003cc4:	fb92 f2f3 	sdiv	r2, r2, r3
	int ones = (int) (value - hundreds * 100 - tens * 10);
 8003cc8:	fb03 f402 	mul.w	r4, r3, r2
 8003ccc:	ee07 4a90 	vmov	s15, r4
 8003cd0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	int decimals = (int) (value - hundreds * 100 - tens * 10 - ones) * 10;

	uploadValue(hundreds, tens, ones, decimals);
 8003cd4:	6804      	ldr	r4, [r0, #0]
	int ones = (int) (value - hundreds * 100 - tens * 10);
 8003cd6:	ee30 0a67 	vsub.f32	s0, s0, s15
 8003cda:	eefd 7ac0 	vcvt.s32.f32	s15, s0
	int decimals = (int) (value - hundreds * 100 - tens * 10 - ones) * 10;
 8003cde:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003ce2:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003ce6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003cea:	ee10 5a10 	vmov	r5, s0
 8003cee:	436b      	muls	r3, r5
	uploadValue(hundreds, tens, ones, decimals);
 8003cf0:	9300      	str	r3, [sp, #0]
 8003cf2:	f8d4 4088 	ldr.w	r4, [r4, #136]	; 0x88
 8003cf6:	ee17 3a90 	vmov	r3, s15
 8003cfa:	47a0      	blx	r4
}
 8003cfc:	b003      	add	sp, #12
 8003cfe:	bd30      	pop	{r4, r5, pc}

08003d00 <_ZN6digits11uploadValueEiiii>:

void digits::uploadValue(int hundreds, int tens, int ones, int decimals)
{
 8003d00:	b410      	push	{r4}
	this->values[3] = hundreds;
	this->values[2] = tens;
	this->values[1] = ones;
 8003d02:	f8c0 3384 	str.w	r3, [r0, #900]	; 0x384
	this->values[0] = decimals;
 8003d06:	9b01      	ldr	r3, [sp, #4]
 8003d08:	f8c0 3380 	str.w	r3, [r0, #896]	; 0x380

	this->updateValue();
 8003d0c:	6803      	ldr	r3, [r0, #0]
}
 8003d0e:	f85d 4b04 	ldr.w	r4, [sp], #4
	this->updateValue();
 8003d12:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
	this->values[2] = tens;
 8003d16:	e9c0 21e2 	strd	r2, r1, [r0, #904]	; 0x388
	this->updateValue();
 8003d1a:	4718      	bx	r3

08003d1c <_ZN6digits10showCursorEv>:
	this->decimals.invalidate();
}

void digits::showCursor()
{
	this->boxes[newCursorPosition]->setVisible(true);
 8003d1c:	f8b0 3398 	ldrh.w	r3, [r0, #920]	; 0x398
 8003d20:	eb00 0083 	add.w	r0, r0, r3, lsl #2
        visible = vis;
 8003d24:	2301      	movs	r3, #1
 8003d26:	f8d0 0268 	ldr.w	r0, [r0, #616]	; 0x268
 8003d2a:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
	this->boxes[newCursorPosition]->invalidate();
 8003d2e:	6803      	ldr	r3, [r0, #0]
 8003d30:	695b      	ldr	r3, [r3, #20]
 8003d32:	4718      	bx	r3

08003d34 <_ZN6digits11resetCursorEv>:
}

void digits::resetCursor()
{
	this->boxes[newCursorPosition]->setVisible(false);
 8003d34:	f8b0 3398 	ldrh.w	r3, [r0, #920]	; 0x398
 8003d38:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8003d3c:	2300      	movs	r3, #0
 8003d3e:	f8d0 0268 	ldr.w	r0, [r0, #616]	; 0x268
 8003d42:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
	this->boxes[newCursorPosition]->invalidate();
 8003d46:	6803      	ldr	r3, [r0, #0]
 8003d48:	695b      	ldr	r3, [r3, #20]
 8003d4a:	4718      	bx	r3

08003d4c <_ZN6digitsD0Ev>:
 8003d4c:	b510      	push	{r4, lr}
 8003d4e:	4604      	mov	r4, r0
 8003d50:	f7ff ff58 	bl	8003c04 <_ZN6digitsD1Ev>
 8003d54:	4620      	mov	r0, r4
 8003d56:	f44f 7169 	mov.w	r1, #932	; 0x3a4
 8003d5a:	f017 feb0 	bl	801babe <_ZdlPvj>
 8003d5e:	4620      	mov	r0, r4
 8003d60:	bd10      	pop	{r4, pc}
	...

08003d64 <_ZN6digits11updateValueEv>:
{
 8003d64:	b510      	push	{r4, lr}
 8003d66:	4604      	mov	r4, r0
	touchgfx::Unicode::snprintf(decimalsBuffer, DECIMALS_SIZE, "%d", this->values[0]);
 8003d68:	f8d0 3380 	ldr.w	r3, [r0, #896]	; 0x380
 8003d6c:	4a17      	ldr	r2, [pc, #92]	; (8003dcc <_ZN6digits11updateValueEv+0x68>)
 8003d6e:	210a      	movs	r1, #10
 8003d70:	f500 7006 	add.w	r0, r0, #536	; 0x218
 8003d74:	f00b fd86 	bl	800f884 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	touchgfx::Unicode::snprintf(onesBuffer, ONES_SIZE, "%d", this->values[1]);
 8003d78:	f8d4 3384 	ldr.w	r3, [r4, #900]	; 0x384
 8003d7c:	4a13      	ldr	r2, [pc, #76]	; (8003dcc <_ZN6digits11updateValueEv+0x68>)
 8003d7e:	210a      	movs	r1, #10
 8003d80:	f504 700b 	add.w	r0, r4, #556	; 0x22c
 8003d84:	f00b fd7e 	bl	800f884 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	touchgfx::Unicode::snprintf(tensBuffer, TENS_SIZE, "%d", this->values[2]);
 8003d88:	f8d4 3388 	ldr.w	r3, [r4, #904]	; 0x388
 8003d8c:	4a0f      	ldr	r2, [pc, #60]	; (8003dcc <_ZN6digits11updateValueEv+0x68>)
 8003d8e:	210a      	movs	r1, #10
 8003d90:	f504 7010 	add.w	r0, r4, #576	; 0x240
 8003d94:	f00b fd76 	bl	800f884 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	touchgfx::Unicode::snprintf(hundredsBuffer, HUNDREDS_SIZE, "%d", this->values[3]);
 8003d98:	f8d4 338c 	ldr.w	r3, [r4, #908]	; 0x38c
 8003d9c:	4a0b      	ldr	r2, [pc, #44]	; (8003dcc <_ZN6digits11updateValueEv+0x68>)
 8003d9e:	210a      	movs	r1, #10
 8003da0:	f504 7015 	add.w	r0, r4, #596	; 0x254
 8003da4:	f00b fd6e 	bl	800f884 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	this->hundreds.invalidate();
 8003da8:	f504 70ec 	add.w	r0, r4, #472	; 0x1d8
 8003dac:	f009 fdf9 	bl	800d9a2 <_ZNK8touchgfx8Drawable10invalidateEv>
	this->tens.invalidate();
 8003db0:	f504 70cc 	add.w	r0, r4, #408	; 0x198
 8003db4:	f009 fdf5 	bl	800d9a2 <_ZNK8touchgfx8Drawable10invalidateEv>
	this->ones.invalidate();
 8003db8:	f504 70ac 	add.w	r0, r4, #344	; 0x158
 8003dbc:	f009 fdf1 	bl	800d9a2 <_ZNK8touchgfx8Drawable10invalidateEv>
	this->decimals.invalidate();
 8003dc0:	f104 00dc 	add.w	r0, r4, #220	; 0xdc
}
 8003dc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	this->decimals.invalidate();
 8003dc8:	f009 bdeb 	b.w	800d9a2 <_ZNK8touchgfx8Drawable10invalidateEv>
 8003dcc:	0801e450 	.word	0x0801e450

08003dd0 <_ZN6digitsC1Ev>:
digits::digits()
 8003dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003dd2:	4604      	mov	r4, r0
 8003dd4:	4e1e      	ldr	r6, [pc, #120]	; (8003e50 <_ZN6digitsC1Ev+0x80>)
        : TextArea(), wildcard(0)
 8003dd6:	4d1f      	ldr	r5, [pc, #124]	; (8003e54 <_ZN6digitsC1Ev+0x84>)
 8003dd8:	f7fe fe1c 	bl	8002a14 <_ZN10digitsBaseC1Ev>
 8003ddc:	4b1e      	ldr	r3, [pc, #120]	; (8003e58 <_ZN6digitsC1Ev+0x88>)
 8003dde:	6023      	str	r3, [r4, #0]
{
public:
    /** Default constructor. Constructs an empty vector. */
    Vector()
        : _size(0)
 8003de0:	2200      	movs	r2, #0
 8003de2:	f8a4 2278 	strh.w	r2, [r4, #632]	; 0x278
 8003de6:	f504 731f 	add.w	r3, r4, #636	; 0x27c
 8003dea:	f504 705f 	add.w	r0, r4, #892	; 0x37c
          visible(true)
 8003dee:	2701      	movs	r7, #1
 8003df0:	f64f 71ff 	movw	r1, #65535	; 0xffff
        : x(0), y(0), width(0), height(0)
 8003df4:	809a      	strh	r2, [r3, #4]
 8003df6:	80da      	strh	r2, [r3, #6]
 8003df8:	811a      	strh	r2, [r3, #8]
 8003dfa:	815a      	strh	r2, [r3, #10]
 8003dfc:	819a      	strh	r2, [r3, #12]
 8003dfe:	81da      	strh	r2, [r3, #14]
 8003e00:	821a      	strh	r2, [r3, #16]
 8003e02:	825a      	strh	r2, [r3, #18]
 8003e04:	61da      	str	r2, [r3, #28]
 8003e06:	841a      	strh	r2, [r3, #32]
 8003e08:	845a      	strh	r2, [r3, #34]	; 0x22
 8003e0a:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8003e0e:	f883 7025 	strb.w	r7, [r3, #37]	; 0x25
 8003e12:	629e      	str	r6, [r3, #40]	; 0x28
 8003e14:	8599      	strh	r1, [r3, #44]	; 0x2c
        : color(col)
 8003e16:	631a      	str	r2, [r3, #48]	; 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8003e18:	869a      	strh	r2, [r3, #52]	; 0x34
 8003e1a:	f883 1036 	strb.w	r1, [r3, #54]	; 0x36
 8003e1e:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 8003e22:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8003e26:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8003e2a:	601d      	str	r5, [r3, #0]
 8003e2c:	63da      	str	r2, [r3, #60]	; 0x3c
 8003e2e:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8003e32:	3340      	adds	r3, #64	; 0x40
        : _size(0)
 8003e34:	4283      	cmp	r3, r0
 8003e36:	d1dd      	bne.n	8003df4 <_ZN6digitsC1Ev+0x24>
 8003e38:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
 8003e3c:	f8a4 237c 	strh.w	r2, [r4, #892]	; 0x37c
 8003e40:	f8a4 2390 	strh.w	r2, [r4, #912]	; 0x390
 8003e44:	f8c4 339c 	str.w	r3, [r4, #924]	; 0x39c
 8003e48:	f8a4 13a0 	strh.w	r1, [r4, #928]	; 0x3a0
}
 8003e4c:	4620      	mov	r0, r4
 8003e4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003e50:	0801d7d0 	.word	0x0801d7d0
 8003e54:	0801f688 	.word	0x0801f688
 8003e58:	0801e674 	.word	0x0801e674

08003e5c <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_>:
class TextAreaWithOneWildcard : public TextArea
 8003e5c:	4603      	mov	r3, r0
 8003e5e:	460a      	mov	r2, r1
 8003e60:	b510      	push	{r4, lr}
class Drawable
 8003e62:	1d04      	adds	r4, r0, #4
 8003e64:	e9d1 0101 	ldrd	r0, r1, [r1, #4]
 8003e68:	e884 0003 	stmia.w	r4, {r0, r1}
 8003e6c:	e9d2 0103 	ldrd	r0, r1, [r2, #12]
 8003e70:	f103 040c 	add.w	r4, r3, #12
 8003e74:	e884 0003 	stmia.w	r4, {r0, r1}
 8003e78:	e9d2 0106 	ldrd	r0, r1, [r2, #24]
 8003e7c:	61d9      	str	r1, [r3, #28]
 8003e7e:	6a11      	ldr	r1, [r2, #32]
 8003e80:	6219      	str	r1, [r3, #32]
 8003e82:	8c91      	ldrh	r1, [r2, #36]	; 0x24
 8003e84:	6954      	ldr	r4, [r2, #20]
 8003e86:	8499      	strh	r1, [r3, #36]	; 0x24
 8003e88:	490a      	ldr	r1, [pc, #40]	; (8003eb4 <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_+0x58>)
 8003e8a:	6019      	str	r1, [r3, #0]
class TypedText
 8003e8c:	490a      	ldr	r1, [pc, #40]	; (8003eb8 <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_+0x5c>)
 8003e8e:	6299      	str	r1, [r3, #40]	; 0x28
 8003e90:	e9c3 4005 	strd	r4, r0, [r3, #20]
 8003e94:	8d91      	ldrh	r1, [r2, #44]	; 0x2c
 8003e96:	8599      	strh	r1, [r3, #44]	; 0x2c
class TextArea : public Widget
 8003e98:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8003e9a:	6319      	str	r1, [r3, #48]	; 0x30
 8003e9c:	8e91      	ldrh	r1, [r2, #52]	; 0x34
 8003e9e:	8699      	strh	r1, [r3, #52]	; 0x34
 8003ea0:	8ed1      	ldrh	r1, [r2, #54]	; 0x36
 8003ea2:	86d9      	strh	r1, [r3, #54]	; 0x36
 8003ea4:	8f11      	ldrh	r1, [r2, #56]	; 0x38
 8003ea6:	8719      	strh	r1, [r3, #56]	; 0x38
 8003ea8:	4904      	ldr	r1, [pc, #16]	; (8003ebc <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_+0x60>)
 8003eaa:	6019      	str	r1, [r3, #0]
 8003eac:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8003eae:	63da      	str	r2, [r3, #60]	; 0x3c
 8003eb0:	4618      	mov	r0, r3
 8003eb2:	bd10      	pop	{r4, pc}
 8003eb4:	0801e610 	.word	0x0801e610
 8003eb8:	0801d7d0 	.word	0x0801d7d0
 8003ebc:	0801f688 	.word	0x0801f688

08003ec0 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_>:
     * Adds an element to the Vector if the Vector is not full. Does nothing if the Vector
     * is full.
     *
     * @param  e The element to add to the Vector.
     */
    void add(T e)
 8003ec0:	b508      	push	{r3, lr}
    {
        assert(_size < capacity && "Vector capacity exceeded");
 8003ec2:	8a03      	ldrh	r3, [r0, #16]
 8003ec4:	2b03      	cmp	r3, #3
 8003ec6:	d906      	bls.n	8003ed6 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_+0x16>
 8003ec8:	4b05      	ldr	r3, [pc, #20]	; (8003ee0 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_+0x20>)
 8003eca:	4a06      	ldr	r2, [pc, #24]	; (8003ee4 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_+0x24>)
 8003ecc:	4806      	ldr	r0, [pc, #24]	; (8003ee8 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_+0x28>)
 8003ece:	f44f 71c1 	mov.w	r1, #386	; 0x182
 8003ed2:	f017 fe23 	bl	801bb1c <__assert_func>
        if (_size < capacity)
        {
            _elem[_size++] = e;
 8003ed6:	1c5a      	adds	r2, r3, #1
 8003ed8:	8202      	strh	r2, [r0, #16]
 8003eda:	f840 1023 	str.w	r1, [r0, r3, lsl #2]
        }
    }
 8003ede:	bd08      	pop	{r3, pc}
 8003ee0:	0801e453 	.word	0x0801e453
 8003ee4:	0801e482 	.word	0x0801e482
 8003ee8:	0801e4ea 	.word	0x0801e4ea

08003eec <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_>:
        assert(_size < capacity && "Vector capacity exceeded");
 8003eec:	f8b0 3100 	ldrh.w	r3, [r0, #256]	; 0x100
 8003ef0:	2b03      	cmp	r3, #3
    void add(T e)
 8003ef2:	b510      	push	{r4, lr}
 8003ef4:	460a      	mov	r2, r1
        assert(_size < capacity && "Vector capacity exceeded");
 8003ef6:	d906      	bls.n	8003f06 <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_+0x1a>
 8003ef8:	4b15      	ldr	r3, [pc, #84]	; (8003f50 <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_+0x64>)
 8003efa:	4a16      	ldr	r2, [pc, #88]	; (8003f54 <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_+0x68>)
 8003efc:	4816      	ldr	r0, [pc, #88]	; (8003f58 <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_+0x6c>)
 8003efe:	f44f 71c1 	mov.w	r1, #386	; 0x182
 8003f02:	f017 fe0b 	bl	801bb1c <__assert_func>
            _elem[_size++] = e;
 8003f06:	1c59      	adds	r1, r3, #1
 8003f08:	f8a0 1100 	strh.w	r1, [r0, #256]	; 0x100
 8003f0c:	eb00 1383 	add.w	r3, r0, r3, lsl #6
 8003f10:	e9d2 0101 	ldrd	r0, r1, [r2, #4]
 8003f14:	1d1c      	adds	r4, r3, #4
 8003f16:	e884 0003 	stmia.w	r4, {r0, r1}
 8003f1a:	e9d2 0103 	ldrd	r0, r1, [r2, #12]
 8003f1e:	f103 040c 	add.w	r4, r3, #12
 8003f22:	e884 0003 	stmia.w	r4, {r0, r1}
 8003f26:	e9d2 0106 	ldrd	r0, r1, [r2, #24]
 8003f2a:	61d9      	str	r1, [r3, #28]
 8003f2c:	6a11      	ldr	r1, [r2, #32]
 8003f2e:	6219      	str	r1, [r3, #32]
 8003f30:	8c91      	ldrh	r1, [r2, #36]	; 0x24
 8003f32:	8499      	strh	r1, [r3, #36]	; 0x24
 8003f34:	8d91      	ldrh	r1, [r2, #44]	; 0x2c
 8003f36:	8599      	strh	r1, [r3, #44]	; 0x2c
 8003f38:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8003f3a:	6954      	ldr	r4, [r2, #20]
 8003f3c:	6319      	str	r1, [r3, #48]	; 0x30
 8003f3e:	6b51      	ldr	r1, [r2, #52]	; 0x34
 8003f40:	6359      	str	r1, [r3, #52]	; 0x34
 8003f42:	8f11      	ldrh	r1, [r2, #56]	; 0x38
 8003f44:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8003f46:	8719      	strh	r1, [r3, #56]	; 0x38
 8003f48:	e9c3 4005 	strd	r4, r0, [r3, #20]
 8003f4c:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8003f4e:	bd10      	pop	{r4, pc}
 8003f50:	0801e453 	.word	0x0801e453
 8003f54:	0801e531 	.word	0x0801e531
 8003f58:	0801e4ea 	.word	0x0801e4ea

08003f5c <_ZN8touchgfx6VectorIiLt4EE3addEi>:
    void add(T e)
 8003f5c:	b508      	push	{r3, lr}
        assert(_size < capacity && "Vector capacity exceeded");
 8003f5e:	8a03      	ldrh	r3, [r0, #16]
 8003f60:	2b03      	cmp	r3, #3
 8003f62:	d906      	bls.n	8003f72 <_ZN8touchgfx6VectorIiLt4EE3addEi+0x16>
 8003f64:	4b05      	ldr	r3, [pc, #20]	; (8003f7c <_ZN8touchgfx6VectorIiLt4EE3addEi+0x20>)
 8003f66:	4a06      	ldr	r2, [pc, #24]	; (8003f80 <_ZN8touchgfx6VectorIiLt4EE3addEi+0x24>)
 8003f68:	4806      	ldr	r0, [pc, #24]	; (8003f84 <_ZN8touchgfx6VectorIiLt4EE3addEi+0x28>)
 8003f6a:	f44f 71c1 	mov.w	r1, #386	; 0x182
 8003f6e:	f017 fdd5 	bl	801bb1c <__assert_func>
            _elem[_size++] = e;
 8003f72:	1c5a      	adds	r2, r3, #1
 8003f74:	8202      	strh	r2, [r0, #16]
 8003f76:	f840 1023 	str.w	r1, [r0, r3, lsl #2]
    }
 8003f7a:	bd08      	pop	{r3, pc}
 8003f7c:	0801e453 	.word	0x0801e453
 8003f80:	0801e5aa 	.word	0x0801e5aa
 8003f84:	0801e4ea 	.word	0x0801e4ea

08003f88 <_ZN6digits10initializeEv>:
{
 8003f88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f8c:	4604      	mov	r4, r0
 8003f8e:	b092      	sub	sp, #72	; 0x48
	this->oldCursorPosition = 0;
 8003f90:	2500      	movs	r5, #0
    this->boxes.add(&this->decimalsBox);
 8003f92:	f104 072c 	add.w	r7, r4, #44	; 0x2c
    digitsBase::initialize();
 8003f96:	f7fe fcdd 	bl	8002954 <_ZN10digitsBase10initializeEv>
    this->boxes.add(&this->onesBox);
 8003f9a:	f104 0a58 	add.w	sl, r4, #88	; 0x58
    this->boxes.add(&this->decimalsBox);
 8003f9e:	f504 701a 	add.w	r0, r4, #616	; 0x268
 8003fa2:	4639      	mov	r1, r7
	this->newCursorPosition = 0;
 8003fa4:	e9c4 55e5 	strd	r5, r5, [r4, #916]	; 0x394
    this->boxes.add(&this->decimalsBox);
 8003fa8:	9001      	str	r0, [sp, #4]
    this->boxes.add(&this->tensBox);
 8003faa:	f104 0984 	add.w	r9, r4, #132	; 0x84
    this->boxes.add(&this->decimalsBox);
 8003fae:	f7ff ff87 	bl	8003ec0 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_>
    this->boxes.add(&this->onesBox);
 8003fb2:	9801      	ldr	r0, [sp, #4]
 8003fb4:	4651      	mov	r1, sl
 8003fb6:	f7ff ff83 	bl	8003ec0 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_>
    this->boxes.add(&this->hundredsBox);
 8003fba:	f104 08b0 	add.w	r8, r4, #176	; 0xb0
    this->boxes.add(&this->tensBox);
 8003fbe:	9801      	ldr	r0, [sp, #4]
 8003fc0:	4649      	mov	r1, r9
 8003fc2:	f7ff ff7d 	bl	8003ec0 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_>
    this->boxes.add(&this->hundredsBox);
 8003fc6:	9801      	ldr	r0, [sp, #4]
 8003fc8:	4641      	mov	r1, r8
 8003fca:	f7ff ff79 	bl	8003ec0 <_ZN8touchgfx6VectorIPNS_5ImageELt4EE3addES2_>
    this->digitsTab.add(this->decimals);
 8003fce:	f504 761f 	add.w	r6, r4, #636	; 0x27c
 8003fd2:	f104 01dc 	add.w	r1, r4, #220	; 0xdc
 8003fd6:	a802      	add	r0, sp, #8
 8003fd8:	f7ff ff40 	bl	8003e5c <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_>
 8003fdc:	a902      	add	r1, sp, #8
 8003fde:	4630      	mov	r0, r6
 8003fe0:	f7ff ff84 	bl	8003eec <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_>
    this->digitsTab.add(this->ones);
 8003fe4:	f504 71ac 	add.w	r1, r4, #344	; 0x158
 8003fe8:	a802      	add	r0, sp, #8
 8003fea:	f7ff ff37 	bl	8003e5c <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_>
 8003fee:	a902      	add	r1, sp, #8
 8003ff0:	4630      	mov	r0, r6
 8003ff2:	f7ff ff7b 	bl	8003eec <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_>
    this->digitsTab.add(this->tens);
 8003ff6:	f504 71cc 	add.w	r1, r4, #408	; 0x198
 8003ffa:	a802      	add	r0, sp, #8
 8003ffc:	f7ff ff2e 	bl	8003e5c <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_>
 8004000:	a902      	add	r1, sp, #8
 8004002:	4630      	mov	r0, r6
 8004004:	f7ff ff72 	bl	8003eec <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_>
    this->digitsTab.add(this->hundreds);
 8004008:	f504 71ec 	add.w	r1, r4, #472	; 0x1d8
 800400c:	a802      	add	r0, sp, #8
 800400e:	f7ff ff25 	bl	8003e5c <_ZN8touchgfx23TextAreaWithOneWildcardC1ERKS0_>
 8004012:	a902      	add	r1, sp, #8
 8004014:	4630      	mov	r0, r6
 8004016:	f7ff ff69 	bl	8003eec <_ZN8touchgfx6VectorINS_23TextAreaWithOneWildcardELt4EE3addES1_>
    this->values.add(1);
 800401a:	f504 7060 	add.w	r0, r4, #896	; 0x380
 800401e:	2101      	movs	r1, #1
 8004020:	9001      	str	r0, [sp, #4]
 8004022:	f7ff ff9b 	bl	8003f5c <_ZN8touchgfx6VectorIiLt4EE3addEi>
    this->values.add(2);
 8004026:	9801      	ldr	r0, [sp, #4]
 8004028:	2102      	movs	r1, #2
 800402a:	f7ff ff97 	bl	8003f5c <_ZN8touchgfx6VectorIiLt4EE3addEi>
    this->values.add(3);
 800402e:	9801      	ldr	r0, [sp, #4]
 8004030:	2103      	movs	r1, #3
 8004032:	f7ff ff93 	bl	8003f5c <_ZN8touchgfx6VectorIiLt4EE3addEi>
    this->values.add(4);
 8004036:	2104      	movs	r1, #4
 8004038:	9801      	ldr	r0, [sp, #4]
 800403a:	f7ff ff8f 	bl	8003f5c <_ZN8touchgfx6VectorIiLt4EE3addEi>
    this->updateValue();
 800403e:	6823      	ldr	r3, [r4, #0]
 8004040:	4620      	mov	r0, r4
 8004042:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8004046:	4798      	blx	r3
	this->onesBox.invalidate();
 8004048:	4650      	mov	r0, sl
        visible = vis;
 800404a:	f884 507d 	strb.w	r5, [r4, #125]	; 0x7d
 800404e:	f884 50a9 	strb.w	r5, [r4, #169]	; 0xa9
 8004052:	f884 50d5 	strb.w	r5, [r4, #213]	; 0xd5
 8004056:	f884 5051 	strb.w	r5, [r4, #81]	; 0x51
 800405a:	f009 fca2 	bl	800d9a2 <_ZNK8touchgfx8Drawable10invalidateEv>
	this->tensBox.invalidate();
 800405e:	4648      	mov	r0, r9
 8004060:	f009 fc9f 	bl	800d9a2 <_ZNK8touchgfx8Drawable10invalidateEv>
	this->hundredsBox.invalidate();
 8004064:	4640      	mov	r0, r8
 8004066:	f009 fc9c 	bl	800d9a2 <_ZNK8touchgfx8Drawable10invalidateEv>
	this->decimalsBox.invalidate();
 800406a:	4638      	mov	r0, r7
 800406c:	f009 fc99 	bl	800d9a2 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8004070:	b012      	add	sp, #72	; 0x48
 8004072:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08004076 <_ZN7humDisp10initializeEv>:

}

void humDisp::initialize()
{
    humDispBase::initialize();
 8004076:	f7fe be8d 	b.w	8002d94 <_ZN11humDispBase10initializeEv>

0800407a <_ZN7humDisp11changeValueEi>:
}

void humDisp::changeValue(int value)
{
	this->digits1.changeValue(value);
 800407a:	3068      	adds	r0, #104	; 0x68
 800407c:	f7ff bdf1 	b.w	8003c62 <_ZN6digits11changeValueEi>

08004080 <_ZN7humDisp20changeCursorPositionEi>:
}

void humDisp::changeCursorPosition(int direction)
{
	this->digits1.changeCursorPosition(direction);
 8004080:	3068      	adds	r0, #104	; 0x68
 8004082:	f7ff bdd1 	b.w	8003c28 <_ZN6digits20changeCursorPositionEi>

08004086 <_ZN7humDisp10showCursorEv>:
}

void humDisp::showCursor()
{
	this->digits1.showCursor();
 8004086:	3068      	adds	r0, #104	; 0x68
 8004088:	f7ff be48 	b.w	8003d1c <_ZN6digits10showCursorEv>

0800408c <_ZN7humDisp11resetCursorEv>:
}

void humDisp::resetCursor()
{
	this->digits1.resetCursor();
 800408c:	3068      	adds	r0, #104	; 0x68
 800408e:	f7ff be51 	b.w	8003d34 <_ZN6digits11resetCursorEv>
	...

08004094 <_ZN7humDispD1Ev>:

class humDisp : public humDispBase
{
public:
    humDisp();
    virtual ~humDisp() {}
 8004094:	b538      	push	{r3, r4, r5, lr}
 8004096:	4b08      	ldr	r3, [pc, #32]	; (80040b8 <_ZN7humDispD1Ev+0x24>)
 8004098:	6003      	str	r3, [r0, #0]
 800409a:	4b08      	ldr	r3, [pc, #32]	; (80040bc <_ZN7humDispD1Ev+0x28>)
 800409c:	6683      	str	r3, [r0, #104]	; 0x68
 800409e:	4604      	mov	r4, r0
 80040a0:	f44f 7569 	mov.w	r5, #932	; 0x3a4
class Vector
 80040a4:	5963      	ldr	r3, [r4, r5]
 80040a6:	1960      	adds	r0, r4, r5
 80040a8:	681b      	ldr	r3, [r3, #0]
 80040aa:	3d40      	subs	r5, #64	; 0x40
 80040ac:	4798      	blx	r3
 80040ae:	f5b5 7f29 	cmp.w	r5, #676	; 0x2a4
 80040b2:	d1f7      	bne.n	80040a4 <_ZN7humDispD1Ev+0x10>
 80040b4:	4620      	mov	r0, r4
 80040b6:	bd38      	pop	{r3, r4, r5, pc}
 80040b8:	0801df5c 	.word	0x0801df5c
 80040bc:	0801e674 	.word	0x0801e674

080040c0 <_ZN7humDispD0Ev>:
 80040c0:	b510      	push	{r4, lr}
 80040c2:	4604      	mov	r4, r0
 80040c4:	f7ff ffe6 	bl	8004094 <_ZN7humDispD1Ev>
 80040c8:	4620      	mov	r0, r4
 80040ca:	f240 410c 	movw	r1, #1036	; 0x40c
 80040ce:	f017 fcf6 	bl	801babe <_ZdlPvj>
 80040d2:	4620      	mov	r0, r4
 80040d4:	bd10      	pop	{r4, pc}
	...

080040d8 <_ZN7humDispC1Ev>:
humDisp::humDisp()
 80040d8:	b510      	push	{r4, lr}
 80040da:	4604      	mov	r4, r0
 80040dc:	f7fe fe80 	bl	8002de0 <_ZN11humDispBaseC1Ev>
 80040e0:	4b01      	ldr	r3, [pc, #4]	; (80040e8 <_ZN7humDispC1Ev+0x10>)
 80040e2:	6023      	str	r3, [r4, #0]
}
 80040e4:	4620      	mov	r0, r4
 80040e6:	bd10      	pop	{r4, pc}
 80040e8:	0801e720 	.word	0x0801e720

080040ec <_ZN9humWindow13setTempWindowEP10tempWindow>:
    this->checked = false;
}

void humWindow::setTempWindow(tempWindow *tW)
{
	this->tempWindow1 = tW;
 80040ec:	f8c0 1984 	str.w	r1, [r0, #2436]	; 0x984
}
 80040f0:	4770      	bx	lr

080040f2 <_ZN9humWindow10initializeEv>:
{
 80040f2:	b510      	push	{r4, lr}
 80040f4:	4604      	mov	r4, r0
	humWindowBase::initialize();
 80040f6:	f7fe ff2f 	bl	8002f58 <_ZN13humWindowBase10initializeEv>
    this->checked = false;
 80040fa:	2300      	movs	r3, #0
 80040fc:	f884 3980 	strb.w	r3, [r4, #2432]	; 0x980
}
 8004100:	bd10      	pop	{r4, pc}

08004102 <_ZN9humWindow11changeValueEi>:
	}
}

void humWindow::changeValue(int value)
{
	this->humDisp1.changeValue(value);
 8004102:	f200 5064 	addw	r0, r0, #1380	; 0x564
 8004106:	f7ff bfb8 	b.w	800407a <_ZN7humDisp11changeValueEi>

0800410a <_ZN9humWindow20changeCursorPositionEi>:
}

void humWindow::changeCursorPosition(int direction)
{
	this->humDisp1.changeCursorPosition(direction);
 800410a:	f200 5064 	addw	r0, r0, #1380	; 0x564
 800410e:	f7ff bfb7 	b.w	8004080 <_ZN7humDisp20changeCursorPositionEi>

08004112 <_ZN9humWindow12toggleHumBtnEv>:
	this->checked = !this->checked;
 8004112:	f890 3980 	ldrb.w	r3, [r0, #2432]	; 0x980
 8004116:	f083 0301 	eor.w	r3, r3, #1
{
 800411a:	b510      	push	{r4, lr}
	this->checked = !this->checked;
 800411c:	f880 3980 	strb.w	r3, [r0, #2432]	; 0x980
	if (this->checked)
 8004120:	f200 5464 	addw	r4, r0, #1380	; 0x564
 8004124:	b16b      	cbz	r3, 8004142 <_ZN9humWindow12toggleHumBtnEv+0x30>
		if (this->tempWindow1->isChecked())
 8004126:	f8d0 0984 	ldr.w	r0, [r0, #2436]	; 0x984
 800412a:	f890 3980 	ldrb.w	r3, [r0, #2432]	; 0x980
 800412e:	b11b      	cbz	r3, 8004138 <_ZN9humWindow12toggleHumBtnEv+0x26>
			this->tempWindow1->toggleTempBtn();
 8004130:	6803      	ldr	r3, [r0, #0]
 8004132:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004136:	4798      	blx	r3
		this->humDisp1.showCursor();
 8004138:	4620      	mov	r0, r4
}
 800413a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		this->humDisp1.showCursor();
 800413e:	f7ff bfa2 	b.w	8004086 <_ZN7humDisp10showCursorEv>
		this->humDisp1.resetCursor();
 8004142:	4620      	mov	r0, r4
}
 8004144:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		this->humDisp1.resetCursor();
 8004148:	f7ff bfa0 	b.w	800408c <_ZN7humDisp11resetCursorEv>

0800414c <_ZN9humWindowD1Ev>:
 800414c:	b510      	push	{r4, lr}
 800414e:	4b03      	ldr	r3, [pc, #12]	; (800415c <_ZN9humWindowD1Ev+0x10>)
 8004150:	6003      	str	r3, [r0, #0]
 8004152:	4604      	mov	r4, r0
 8004154:	f7fe ff80 	bl	8003058 <_ZN13humWindowBaseD1Ev>
 8004158:	4620      	mov	r0, r4
 800415a:	bd10      	pop	{r4, pc}
 800415c:	0801e7c0 	.word	0x0801e7c0

08004160 <_ZN9humWindowD0Ev>:
 8004160:	b510      	push	{r4, lr}
 8004162:	4604      	mov	r4, r0
 8004164:	f7ff fff2 	bl	800414c <_ZN9humWindowD1Ev>
 8004168:	4620      	mov	r0, r4
 800416a:	f640 1188 	movw	r1, #2440	; 0x988
 800416e:	f017 fca6 	bl	801babe <_ZdlPvj>
 8004172:	4620      	mov	r0, r4
 8004174:	bd10      	pop	{r4, pc}
	...

08004178 <_ZN9humWindowC1Ev>:
humWindow::humWindow()
 8004178:	b510      	push	{r4, lr}
 800417a:	4604      	mov	r4, r0
 800417c:	f7fe ffe8 	bl	8003150 <_ZN13humWindowBaseC1Ev>
 8004180:	4b01      	ldr	r3, [pc, #4]	; (8004188 <_ZN9humWindowC1Ev+0x10>)
 8004182:	6023      	str	r3, [r4, #0]
}
 8004184:	4620      	mov	r0, r4
 8004186:	bd10      	pop	{r4, pc}
 8004188:	0801e7c0 	.word	0x0801e7c0

0800418c <_ZN19mainScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~mainScreenPresenter() {};
 800418c:	4770      	bx	lr

0800418e <_ZThn4_N19mainScreenPresenterD1Ev>:
 800418e:	3804      	subs	r0, #4
 8004190:	4770      	bx	lr

08004192 <_ZN19mainScreenPresenter10deactivateEv>:
}

void mainScreenPresenter::activate()
{

}
 8004192:	4770      	bx	lr

08004194 <_ZN19mainScreenPresenter10updateDataEPf>:

}

void mainScreenPresenter::updateData(float *data)
{
	this->view.updateData(data);
 8004194:	68c0      	ldr	r0, [r0, #12]
 8004196:	6803      	ldr	r3, [r0, #0]
 8004198:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800419a:	4718      	bx	r3

0800419c <_ZN19mainScreenPresenter11sendRequestEPf>:
}

void mainScreenPresenter::sendRequest(float *data)
{
	this->model->sendRequest(data);
 800419c:	6880      	ldr	r0, [r0, #8]
 800419e:	6803      	ldr	r3, [r0, #0]
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	4718      	bx	r3

080041a4 <_ZN19mainScreenPresenterD0Ev>:
 80041a4:	b510      	push	{r4, lr}
 80041a6:	2110      	movs	r1, #16
 80041a8:	4604      	mov	r4, r0
 80041aa:	f017 fc88 	bl	801babe <_ZdlPvj>
 80041ae:	4620      	mov	r0, r4
 80041b0:	bd10      	pop	{r4, pc}

080041b2 <_ZThn4_N19mainScreenPresenterD0Ev>:
 80041b2:	f1a0 0004 	sub.w	r0, r0, #4
 80041b6:	e7f5      	b.n	80041a4 <_ZN19mainScreenPresenterD0Ev>

080041b8 <_ZN19mainScreenPresenterC1ER14mainScreenView>:
mainScreenPresenter::mainScreenPresenter(mainScreenView& v)
 80041b8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80041ba:	2200      	movs	r2, #0
 80041bc:	6082      	str	r2, [r0, #8]
    : view(v)
 80041be:	4a04      	ldr	r2, [pc, #16]	; (80041d0 <_ZN19mainScreenPresenterC1ER14mainScreenView+0x18>)
 80041c0:	60c1      	str	r1, [r0, #12]
 80041c2:	f102 0408 	add.w	r4, r2, #8
 80041c6:	3228      	adds	r2, #40	; 0x28
 80041c8:	6004      	str	r4, [r0, #0]
 80041ca:	6042      	str	r2, [r0, #4]
}
 80041cc:	bd10      	pop	{r4, pc}
 80041ce:	bf00      	nop
 80041d0:	0801e858 	.word	0x0801e858

080041d4 <_ZN14mainScreenView14tearDownScreenEv>:
}

void mainScreenView::tearDownScreen()
{
    mainScreenViewBase::tearDownScreen();
}
 80041d4:	4770      	bx	lr

080041d6 <_ZN14mainScreenView10updateDataEPf>:
}

void mainScreenView::updateData(float *data)
{

}
 80041d6:	4770      	bx	lr

080041d8 <_ZN14mainScreenView11sendRequestEPf>:

void mainScreenView::sendRequest(float *data)
{
	this->presenter->sendRequest(data);
 80041d8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80041da:	6803      	ldr	r3, [r0, #0]
 80041dc:	695b      	ldr	r3, [r3, #20]
 80041de:	4718      	bx	r3

080041e0 <_ZN14mainScreenView11setupScreenEv>:
{
 80041e0:	b538      	push	{r3, r4, r5, lr}
 80041e2:	4604      	mov	r4, r0
    this->tempWindow1.setHumWindow(&(this->humWindow1));
 80041e4:	f504 6547 	add.w	r5, r4, #3184	; 0xc70
 80041e8:	f504 743a 	add.w	r4, r4, #744	; 0x2e8
    mainScreenViewBase::setupScreen();
 80041ec:	f7ff f8d4 	bl	8003398 <_ZN18mainScreenViewBase11setupScreenEv>
    this->tempWindow1.setHumWindow(&(this->humWindow1));
 80041f0:	4621      	mov	r1, r4
 80041f2:	4628      	mov	r0, r5
 80041f4:	f000 f8ac 	bl	8004350 <_ZN10tempWindow12setHumWindowEP9humWindow>
    this->humWindow1.setTempWindow(&(this->tempWindow1));
 80041f8:	4629      	mov	r1, r5
 80041fa:	4620      	mov	r0, r4
}
 80041fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    this->humWindow1.setTempWindow(&(this->tempWindow1));
 8004200:	f7ff bf74 	b.w	80040ec <_ZN9humWindow13setTempWindowEP10tempWindow>

08004204 <_ZN14mainScreenView12upBtnClickedEv>:
	if (this->tempWindow1.isChecked())
 8004204:	f241 53f0 	movw	r3, #5616	; 0x15f0
 8004208:	5cc3      	ldrb	r3, [r0, r3]
 800420a:	b123      	cbz	r3, 8004216 <_ZN14mainScreenView12upBtnClickedEv+0x12>
		this->tempWindow1.changeValue(1);
 800420c:	2101      	movs	r1, #1
 800420e:	f500 6047 	add.w	r0, r0, #3184	; 0xc70
 8004212:	f000 b8a8 	b.w	8004366 <_ZN10tempWindow11changeValueEi>
	else if (this->humWindow1.isChecked())
 8004216:	f890 3c68 	ldrb.w	r3, [r0, #3176]	; 0xc68
 800421a:	b123      	cbz	r3, 8004226 <_ZN14mainScreenView12upBtnClickedEv+0x22>
		this->humWindow1.changeValue(1);
 800421c:	2101      	movs	r1, #1
 800421e:	f500 703a 	add.w	r0, r0, #744	; 0x2e8
 8004222:	f7ff bf6e 	b.w	8004102 <_ZN9humWindow11changeValueEi>
}
 8004226:	4770      	bx	lr

08004228 <_ZN14mainScreenView14downBtnClickedEv>:
	if (this->tempWindow1.isChecked())
 8004228:	f241 53f0 	movw	r3, #5616	; 0x15f0
 800422c:	5cc3      	ldrb	r3, [r0, r3]
 800422e:	b12b      	cbz	r3, 800423c <_ZN14mainScreenView14downBtnClickedEv+0x14>
		this->tempWindow1.changeValue(-1);
 8004230:	f04f 31ff 	mov.w	r1, #4294967295
 8004234:	f500 6047 	add.w	r0, r0, #3184	; 0xc70
 8004238:	f000 b895 	b.w	8004366 <_ZN10tempWindow11changeValueEi>
	else if (this->humWindow1.isChecked())
 800423c:	f890 3c68 	ldrb.w	r3, [r0, #3176]	; 0xc68
 8004240:	b12b      	cbz	r3, 800424e <_ZN14mainScreenView14downBtnClickedEv+0x26>
		this->humWindow1.changeValue(-1);
 8004242:	f04f 31ff 	mov.w	r1, #4294967295
 8004246:	f500 703a 	add.w	r0, r0, #744	; 0x2e8
 800424a:	f7ff bf5a 	b.w	8004102 <_ZN9humWindow11changeValueEi>
}
 800424e:	4770      	bx	lr

08004250 <_ZN14mainScreenView15rightBtnClickedEv>:
	if (this->tempWindow1.isChecked())
 8004250:	f241 53f0 	movw	r3, #5616	; 0x15f0
 8004254:	5cc3      	ldrb	r3, [r0, r3]
 8004256:	b12b      	cbz	r3, 8004264 <_ZN14mainScreenView15rightBtnClickedEv+0x14>
		this->tempWindow1.changeCursorPosition(-1);
 8004258:	f04f 31ff 	mov.w	r1, #4294967295
 800425c:	f500 6047 	add.w	r0, r0, #3184	; 0xc70
 8004260:	f000 b884 	b.w	800436c <_ZN10tempWindow20changeCursorPositionEi>
	else if (this->humWindow1.isChecked())
 8004264:	f890 3c68 	ldrb.w	r3, [r0, #3176]	; 0xc68
 8004268:	b12b      	cbz	r3, 8004276 <_ZN14mainScreenView15rightBtnClickedEv+0x26>
		this->humWindow1.changeCursorPosition(-1);
 800426a:	f04f 31ff 	mov.w	r1, #4294967295
 800426e:	f500 703a 	add.w	r0, r0, #744	; 0x2e8
 8004272:	f7ff bf4a 	b.w	800410a <_ZN9humWindow20changeCursorPositionEi>
}
 8004276:	4770      	bx	lr

08004278 <_ZN14mainScreenView14leftBtnClickedEv>:
	if (this->tempWindow1.isChecked())
 8004278:	f241 53f0 	movw	r3, #5616	; 0x15f0
 800427c:	5cc3      	ldrb	r3, [r0, r3]
 800427e:	b123      	cbz	r3, 800428a <_ZN14mainScreenView14leftBtnClickedEv+0x12>
		this->tempWindow1.changeCursorPosition(1);
 8004280:	2101      	movs	r1, #1
 8004282:	f500 6047 	add.w	r0, r0, #3184	; 0xc70
 8004286:	f000 b871 	b.w	800436c <_ZN10tempWindow20changeCursorPositionEi>
	else if (this->humWindow1.isChecked())
 800428a:	f890 3c68 	ldrb.w	r3, [r0, #3176]	; 0xc68
 800428e:	b123      	cbz	r3, 800429a <_ZN14mainScreenView14leftBtnClickedEv+0x22>
		this->humWindow1.changeCursorPosition(1);
 8004290:	2101      	movs	r1, #1
 8004292:	f500 703a 	add.w	r0, r0, #744	; 0x2e8
 8004296:	f7ff bf38 	b.w	800410a <_ZN9humWindow20changeCursorPositionEi>
}
 800429a:	4770      	bx	lr

0800429c <_ZN14mainScreenViewD1Ev>:

class mainScreenView : public mainScreenViewBase
{
public:
    mainScreenView();
    virtual ~mainScreenView() {}
 800429c:	b510      	push	{r4, lr}
 800429e:	4b03      	ldr	r3, [pc, #12]	; (80042ac <_ZN14mainScreenViewD1Ev+0x10>)
 80042a0:	6003      	str	r3, [r0, #0]
 80042a2:	4604      	mov	r4, r0
 80042a4:	f7ff f90e 	bl	80034c4 <_ZN18mainScreenViewBaseD1Ev>
 80042a8:	4620      	mov	r0, r4
 80042aa:	bd10      	pop	{r4, pc}
 80042ac:	0801e890 	.word	0x0801e890

080042b0 <_ZN14mainScreenViewD0Ev>:
 80042b0:	b510      	push	{r4, lr}
 80042b2:	4604      	mov	r4, r0
 80042b4:	f7ff fff2 	bl	800429c <_ZN14mainScreenViewD1Ev>
 80042b8:	4620      	mov	r0, r4
 80042ba:	f241 610c 	movw	r1, #5644	; 0x160c
 80042be:	f017 fbfe 	bl	801babe <_ZdlPvj>
 80042c2:	4620      	mov	r0, r4
 80042c4:	bd10      	pop	{r4, pc}
	...

080042c8 <_ZN14mainScreenViewC1Ev>:
mainScreenView::mainScreenView()
 80042c8:	b510      	push	{r4, lr}
 80042ca:	4604      	mov	r4, r0
 80042cc:	f7ff f96a 	bl	80035a4 <_ZN18mainScreenViewBaseC1Ev>
 80042d0:	4b01      	ldr	r3, [pc, #4]	; (80042d8 <_ZN14mainScreenViewC1Ev+0x10>)
 80042d2:	6023      	str	r3, [r4, #0]
}
 80042d4:	4620      	mov	r0, r4
 80042d6:	bd10      	pop	{r4, pc}
 80042d8:	0801e890 	.word	0x0801e890

080042dc <_ZN8tempDisp10initializeEv>:

}

void tempDisp::initialize()
{
    tempDispBase::initialize();
 80042dc:	f7ff baac 	b.w	8003838 <_ZN12tempDispBase10initializeEv>

080042e0 <_ZN8tempDisp11changeValueEi>:
}

void tempDisp::changeValue(int value)
{
	this->digits1.changeValue(value);
 80042e0:	3068      	adds	r0, #104	; 0x68
 80042e2:	f7ff bcbe 	b.w	8003c62 <_ZN6digits11changeValueEi>

080042e6 <_ZN8tempDisp20changeCursorPositionEi>:
}

void tempDisp::changeCursorPosition(int direction)
{
	this->digits1.changeCursorPosition(direction);
 80042e6:	3068      	adds	r0, #104	; 0x68
 80042e8:	f7ff bc9e 	b.w	8003c28 <_ZN6digits20changeCursorPositionEi>

080042ec <_ZN8tempDisp10showCursorEv>:
}

void tempDisp::showCursor()
{
	this->digits1.showCursor();
 80042ec:	3068      	adds	r0, #104	; 0x68
 80042ee:	f7ff bd15 	b.w	8003d1c <_ZN6digits10showCursorEv>

080042f2 <_ZN8tempDisp11resetCursorEv>:
}

void tempDisp::resetCursor()
{
	this->digits1.resetCursor();
 80042f2:	3068      	adds	r0, #104	; 0x68
 80042f4:	f7ff bd1e 	b.w	8003d34 <_ZN6digits11resetCursorEv>

080042f8 <_ZN8tempDispD1Ev>:

class tempDisp : public tempDispBase
{
public:
    tempDisp();
    virtual ~tempDisp() {}
 80042f8:	b538      	push	{r3, r4, r5, lr}
 80042fa:	4b08      	ldr	r3, [pc, #32]	; (800431c <_ZN8tempDispD1Ev+0x24>)
 80042fc:	6003      	str	r3, [r0, #0]
 80042fe:	4b08      	ldr	r3, [pc, #32]	; (8004320 <_ZN8tempDispD1Ev+0x28>)
 8004300:	6683      	str	r3, [r0, #104]	; 0x68
 8004302:	4604      	mov	r4, r0
 8004304:	f44f 7569 	mov.w	r5, #932	; 0x3a4
 8004308:	5963      	ldr	r3, [r4, r5]
 800430a:	1960      	adds	r0, r4, r5
 800430c:	681b      	ldr	r3, [r3, #0]
 800430e:	3d40      	subs	r5, #64	; 0x40
 8004310:	4798      	blx	r3
 8004312:	f5b5 7f29 	cmp.w	r5, #676	; 0x2a4
 8004316:	d1f7      	bne.n	8004308 <_ZN8tempDispD1Ev+0x10>
 8004318:	4620      	mov	r0, r4
 800431a:	bd38      	pop	{r3, r4, r5, pc}
 800431c:	0801e2cc 	.word	0x0801e2cc
 8004320:	0801e674 	.word	0x0801e674

08004324 <_ZN8tempDispD0Ev>:
 8004324:	b510      	push	{r4, lr}
 8004326:	4604      	mov	r4, r0
 8004328:	f7ff ffe6 	bl	80042f8 <_ZN8tempDispD1Ev>
 800432c:	4620      	mov	r0, r4
 800432e:	f240 410c 	movw	r1, #1036	; 0x40c
 8004332:	f017 fbc4 	bl	801babe <_ZdlPvj>
 8004336:	4620      	mov	r0, r4
 8004338:	bd10      	pop	{r4, pc}
	...

0800433c <_ZN8tempDispC1Ev>:
tempDisp::tempDisp()
 800433c:	b510      	push	{r4, lr}
 800433e:	4604      	mov	r4, r0
 8004340:	f7ff faa0 	bl	8003884 <_ZN12tempDispBaseC1Ev>
 8004344:	4b01      	ldr	r3, [pc, #4]	; (800434c <_ZN8tempDispC1Ev+0x10>)
 8004346:	6023      	str	r3, [r4, #0]
}
 8004348:	4620      	mov	r0, r4
 800434a:	bd10      	pop	{r4, pc}
 800434c:	0801e8dc 	.word	0x0801e8dc

08004350 <_ZN10tempWindow12setHumWindowEP9humWindow>:
    this->checked = false;
}

void tempWindow::setHumWindow(humWindow *hW)
{
	this->humWindow1 = hW;
 8004350:	f8c0 1984 	str.w	r1, [r0, #2436]	; 0x984
}
 8004354:	4770      	bx	lr

08004356 <_ZN10tempWindow10initializeEv>:
{
 8004356:	b510      	push	{r4, lr}
 8004358:	4604      	mov	r4, r0
    tempWindowBase::initialize();
 800435a:	f7ff fb19 	bl	8003990 <_ZN14tempWindowBase10initializeEv>
    this->checked = false;
 800435e:	2300      	movs	r3, #0
 8004360:	f884 3980 	strb.w	r3, [r4, #2432]	; 0x980
}
 8004364:	bd10      	pop	{r4, pc}

08004366 <_ZN10tempWindow11changeValueEi>:
	}
}

void tempWindow::changeValue(int value)
{
	this->tempDisp1.changeValue(value);
 8004366:	30b0      	adds	r0, #176	; 0xb0
 8004368:	f7ff bfba 	b.w	80042e0 <_ZN8tempDisp11changeValueEi>

0800436c <_ZN10tempWindow20changeCursorPositionEi>:
}

void tempWindow::changeCursorPosition(int direction)
{
	this->tempDisp1.changeCursorPosition(direction);
 800436c:	30b0      	adds	r0, #176	; 0xb0
 800436e:	f7ff bfba 	b.w	80042e6 <_ZN8tempDisp20changeCursorPositionEi>

08004372 <_ZN10tempWindow13toggleTempBtnEv>:
	this->checked = !this->checked;
 8004372:	f890 3980 	ldrb.w	r3, [r0, #2432]	; 0x980
 8004376:	f083 0301 	eor.w	r3, r3, #1
{
 800437a:	b510      	push	{r4, lr}
	this->checked = !this->checked;
 800437c:	f880 3980 	strb.w	r3, [r0, #2432]	; 0x980
	if (this->checked)
 8004380:	f100 04b0 	add.w	r4, r0, #176	; 0xb0
 8004384:	b16b      	cbz	r3, 80043a2 <_ZN10tempWindow13toggleTempBtnEv+0x30>
		if (this->humWindow1->isChecked())
 8004386:	f8d0 0984 	ldr.w	r0, [r0, #2436]	; 0x984
 800438a:	f890 3980 	ldrb.w	r3, [r0, #2432]	; 0x980
 800438e:	b11b      	cbz	r3, 8004398 <_ZN10tempWindow13toggleTempBtnEv+0x26>
			this->humWindow1->toggleHumBtn();
 8004390:	6803      	ldr	r3, [r0, #0]
 8004392:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004396:	4798      	blx	r3
		this->tempDisp1.showCursor();
 8004398:	4620      	mov	r0, r4
}
 800439a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		this->tempDisp1.showCursor();
 800439e:	f7ff bfa5 	b.w	80042ec <_ZN8tempDisp10showCursorEv>
		this->tempDisp1.resetCursor();
 80043a2:	4620      	mov	r0, r4
}
 80043a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		this->tempDisp1.resetCursor();
 80043a8:	f7ff bfa3 	b.w	80042f2 <_ZN8tempDisp11resetCursorEv>

080043ac <_ZN10tempWindowD1Ev>:
 80043ac:	b510      	push	{r4, lr}
 80043ae:	4b03      	ldr	r3, [pc, #12]	; (80043bc <_ZN10tempWindowD1Ev+0x10>)
 80043b0:	6003      	str	r3, [r0, #0]
 80043b2:	4604      	mov	r4, r0
 80043b4:	f7ff f868 	bl	8003488 <_ZN14tempWindowBaseD1Ev>
 80043b8:	4620      	mov	r0, r4
 80043ba:	bd10      	pop	{r4, pc}
 80043bc:	0801e97c 	.word	0x0801e97c

080043c0 <_ZN10tempWindowD0Ev>:
 80043c0:	b510      	push	{r4, lr}
 80043c2:	4604      	mov	r4, r0
 80043c4:	f7ff fff2 	bl	80043ac <_ZN10tempWindowD1Ev>
 80043c8:	4620      	mov	r0, r4
 80043ca:	f640 1188 	movw	r1, #2440	; 0x988
 80043ce:	f017 fb76 	bl	801babe <_ZdlPvj>
 80043d2:	4620      	mov	r0, r4
 80043d4:	bd10      	pop	{r4, pc}
	...

080043d8 <_ZN10tempWindowC1Ev>:
tempWindow::tempWindow()
 80043d8:	b510      	push	{r4, lr}
 80043da:	4604      	mov	r4, r0
 80043dc:	f7ff faec 	bl	80039b8 <_ZN14tempWindowBaseC1Ev>
 80043e0:	4b01      	ldr	r3, [pc, #4]	; (80043e8 <_ZN10tempWindowC1Ev+0x10>)
 80043e2:	6023      	str	r3, [r4, #0]
}
 80043e4:	4620      	mov	r0, r4
 80043e6:	bd10      	pop	{r4, pc}
 80043e8:	0801e97c 	.word	0x0801e97c

080043ec <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80043ec:	20f0      	movs	r0, #240	; 0xf0
 80043ee:	4770      	bx	lr

080043f0 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80043f0:	f44f 70a0 	mov.w	r0, #320	; 0x140
 80043f4:	4770      	bx	lr

080043f6 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80043f6:	2029      	movs	r0, #41	; 0x29
 80043f8:	f7fd b948 	b.w	800168c <LCD_IO_WriteReg>

080043fc <ili9341_DisplayOff>:
 80043fc:	2028      	movs	r0, #40	; 0x28
 80043fe:	f7fd b945 	b.w	800168c <LCD_IO_WriteReg>

08004402 <ili9341_Init>:
{
 8004402:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004404:	f7fd f916 	bl	8001634 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8004408:	20ca      	movs	r0, #202	; 0xca
 800440a:	f7fd f93f 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800440e:	20c3      	movs	r0, #195	; 0xc3
 8004410:	f7fd f920 	bl	8001654 <LCD_IO_WriteData>
 8004414:	2008      	movs	r0, #8
 8004416:	f7fd f91d 	bl	8001654 <LCD_IO_WriteData>
 800441a:	2050      	movs	r0, #80	; 0x50
 800441c:	f7fd f91a 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004420:	20cf      	movs	r0, #207	; 0xcf
 8004422:	f7fd f933 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004426:	2000      	movs	r0, #0
 8004428:	f7fd f914 	bl	8001654 <LCD_IO_WriteData>
 800442c:	20c1      	movs	r0, #193	; 0xc1
 800442e:	f7fd f911 	bl	8001654 <LCD_IO_WriteData>
 8004432:	2030      	movs	r0, #48	; 0x30
 8004434:	f7fd f90e 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004438:	20ed      	movs	r0, #237	; 0xed
 800443a:	f7fd f927 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800443e:	2064      	movs	r0, #100	; 0x64
 8004440:	f7fd f908 	bl	8001654 <LCD_IO_WriteData>
 8004444:	2003      	movs	r0, #3
 8004446:	f7fd f905 	bl	8001654 <LCD_IO_WriteData>
 800444a:	2012      	movs	r0, #18
 800444c:	f7fd f902 	bl	8001654 <LCD_IO_WriteData>
 8004450:	2081      	movs	r0, #129	; 0x81
 8004452:	f7fd f8ff 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004456:	20e8      	movs	r0, #232	; 0xe8
 8004458:	f7fd f918 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800445c:	2085      	movs	r0, #133	; 0x85
 800445e:	f7fd f8f9 	bl	8001654 <LCD_IO_WriteData>
 8004462:	2000      	movs	r0, #0
 8004464:	f7fd f8f6 	bl	8001654 <LCD_IO_WriteData>
 8004468:	2078      	movs	r0, #120	; 0x78
 800446a:	f7fd f8f3 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800446e:	20cb      	movs	r0, #203	; 0xcb
 8004470:	f7fd f90c 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004474:	2039      	movs	r0, #57	; 0x39
 8004476:	f7fd f8ed 	bl	8001654 <LCD_IO_WriteData>
 800447a:	202c      	movs	r0, #44	; 0x2c
 800447c:	f7fd f8ea 	bl	8001654 <LCD_IO_WriteData>
 8004480:	2000      	movs	r0, #0
 8004482:	f7fd f8e7 	bl	8001654 <LCD_IO_WriteData>
 8004486:	2034      	movs	r0, #52	; 0x34
 8004488:	f7fd f8e4 	bl	8001654 <LCD_IO_WriteData>
 800448c:	2002      	movs	r0, #2
 800448e:	f7fd f8e1 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004492:	20f7      	movs	r0, #247	; 0xf7
 8004494:	f7fd f8fa 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004498:	2020      	movs	r0, #32
 800449a:	f7fd f8db 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800449e:	20ea      	movs	r0, #234	; 0xea
 80044a0:	f7fd f8f4 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044a4:	2000      	movs	r0, #0
 80044a6:	f7fd f8d5 	bl	8001654 <LCD_IO_WriteData>
 80044aa:	2000      	movs	r0, #0
 80044ac:	f7fd f8d2 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044b0:	20b1      	movs	r0, #177	; 0xb1
 80044b2:	f7fd f8eb 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044b6:	2000      	movs	r0, #0
 80044b8:	f7fd f8cc 	bl	8001654 <LCD_IO_WriteData>
 80044bc:	201b      	movs	r0, #27
 80044be:	f7fd f8c9 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044c2:	20b6      	movs	r0, #182	; 0xb6
 80044c4:	f7fd f8e2 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044c8:	200a      	movs	r0, #10
 80044ca:	f7fd f8c3 	bl	8001654 <LCD_IO_WriteData>
 80044ce:	20a2      	movs	r0, #162	; 0xa2
 80044d0:	f7fd f8c0 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044d4:	20c0      	movs	r0, #192	; 0xc0
 80044d6:	f7fd f8d9 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044da:	2010      	movs	r0, #16
 80044dc:	f7fd f8ba 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044e0:	20c1      	movs	r0, #193	; 0xc1
 80044e2:	f7fd f8d3 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044e6:	2010      	movs	r0, #16
 80044e8:	f7fd f8b4 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044ec:	20c5      	movs	r0, #197	; 0xc5
 80044ee:	f7fd f8cd 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80044f2:	2045      	movs	r0, #69	; 0x45
 80044f4:	f7fd f8ae 	bl	8001654 <LCD_IO_WriteData>
 80044f8:	2015      	movs	r0, #21
 80044fa:	f7fd f8ab 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80044fe:	20c7      	movs	r0, #199	; 0xc7
 8004500:	f7fd f8c4 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004504:	2090      	movs	r0, #144	; 0x90
 8004506:	f7fd f8a5 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800450a:	2036      	movs	r0, #54	; 0x36
 800450c:	f7fd f8be 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004510:	20c8      	movs	r0, #200	; 0xc8
 8004512:	f7fd f89f 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004516:	20f2      	movs	r0, #242	; 0xf2
 8004518:	f7fd f8b8 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800451c:	2000      	movs	r0, #0
 800451e:	f7fd f899 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004522:	20b0      	movs	r0, #176	; 0xb0
 8004524:	f7fd f8b2 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004528:	20c2      	movs	r0, #194	; 0xc2
 800452a:	f7fd f893 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800452e:	20b6      	movs	r0, #182	; 0xb6
 8004530:	f7fd f8ac 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004534:	200a      	movs	r0, #10
 8004536:	f7fd f88d 	bl	8001654 <LCD_IO_WriteData>
 800453a:	20a7      	movs	r0, #167	; 0xa7
 800453c:	f7fd f88a 	bl	8001654 <LCD_IO_WriteData>
 8004540:	2027      	movs	r0, #39	; 0x27
 8004542:	f7fd f887 	bl	8001654 <LCD_IO_WriteData>
 8004546:	2004      	movs	r0, #4
 8004548:	f7fd f884 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800454c:	202a      	movs	r0, #42	; 0x2a
 800454e:	f7fd f89d 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004552:	2000      	movs	r0, #0
 8004554:	f7fd f87e 	bl	8001654 <LCD_IO_WriteData>
 8004558:	2000      	movs	r0, #0
 800455a:	f7fd f87b 	bl	8001654 <LCD_IO_WriteData>
 800455e:	2000      	movs	r0, #0
 8004560:	f7fd f878 	bl	8001654 <LCD_IO_WriteData>
 8004564:	20ef      	movs	r0, #239	; 0xef
 8004566:	f7fd f875 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800456a:	202b      	movs	r0, #43	; 0x2b
 800456c:	f7fd f88e 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004570:	2000      	movs	r0, #0
 8004572:	f7fd f86f 	bl	8001654 <LCD_IO_WriteData>
 8004576:	2000      	movs	r0, #0
 8004578:	f7fd f86c 	bl	8001654 <LCD_IO_WriteData>
 800457c:	2001      	movs	r0, #1
 800457e:	f7fd f869 	bl	8001654 <LCD_IO_WriteData>
 8004582:	203f      	movs	r0, #63	; 0x3f
 8004584:	f7fd f866 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004588:	20f6      	movs	r0, #246	; 0xf6
 800458a:	f7fd f87f 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800458e:	2001      	movs	r0, #1
 8004590:	f7fd f860 	bl	8001654 <LCD_IO_WriteData>
 8004594:	2000      	movs	r0, #0
 8004596:	f7fd f85d 	bl	8001654 <LCD_IO_WriteData>
 800459a:	2006      	movs	r0, #6
 800459c:	f7fd f85a 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80045a0:	202c      	movs	r0, #44	; 0x2c
 80045a2:	f7fd f873 	bl	800168c <LCD_IO_WriteReg>
  LCD_Delay(200);
 80045a6:	20c8      	movs	r0, #200	; 0xc8
 80045a8:	f7fd f8be 	bl	8001728 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80045ac:	2026      	movs	r0, #38	; 0x26
 80045ae:	f7fd f86d 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80045b2:	2001      	movs	r0, #1
 80045b4:	f7fd f84e 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80045b8:	20e0      	movs	r0, #224	; 0xe0
 80045ba:	f7fd f867 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80045be:	200f      	movs	r0, #15
 80045c0:	f7fd f848 	bl	8001654 <LCD_IO_WriteData>
 80045c4:	2029      	movs	r0, #41	; 0x29
 80045c6:	f7fd f845 	bl	8001654 <LCD_IO_WriteData>
 80045ca:	2024      	movs	r0, #36	; 0x24
 80045cc:	f7fd f842 	bl	8001654 <LCD_IO_WriteData>
 80045d0:	200c      	movs	r0, #12
 80045d2:	f7fd f83f 	bl	8001654 <LCD_IO_WriteData>
 80045d6:	200e      	movs	r0, #14
 80045d8:	f7fd f83c 	bl	8001654 <LCD_IO_WriteData>
 80045dc:	2009      	movs	r0, #9
 80045de:	f7fd f839 	bl	8001654 <LCD_IO_WriteData>
 80045e2:	204e      	movs	r0, #78	; 0x4e
 80045e4:	f7fd f836 	bl	8001654 <LCD_IO_WriteData>
 80045e8:	2078      	movs	r0, #120	; 0x78
 80045ea:	f7fd f833 	bl	8001654 <LCD_IO_WriteData>
 80045ee:	203c      	movs	r0, #60	; 0x3c
 80045f0:	f7fd f830 	bl	8001654 <LCD_IO_WriteData>
 80045f4:	2009      	movs	r0, #9
 80045f6:	f7fd f82d 	bl	8001654 <LCD_IO_WriteData>
 80045fa:	2013      	movs	r0, #19
 80045fc:	f7fd f82a 	bl	8001654 <LCD_IO_WriteData>
 8004600:	2005      	movs	r0, #5
 8004602:	f7fd f827 	bl	8001654 <LCD_IO_WriteData>
 8004606:	2017      	movs	r0, #23
 8004608:	f7fd f824 	bl	8001654 <LCD_IO_WriteData>
 800460c:	2011      	movs	r0, #17
 800460e:	f7fd f821 	bl	8001654 <LCD_IO_WriteData>
 8004612:	2000      	movs	r0, #0
 8004614:	f7fd f81e 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004618:	20e1      	movs	r0, #225	; 0xe1
 800461a:	f7fd f837 	bl	800168c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800461e:	2000      	movs	r0, #0
 8004620:	f7fd f818 	bl	8001654 <LCD_IO_WriteData>
 8004624:	2016      	movs	r0, #22
 8004626:	f7fd f815 	bl	8001654 <LCD_IO_WriteData>
 800462a:	201b      	movs	r0, #27
 800462c:	f7fd f812 	bl	8001654 <LCD_IO_WriteData>
 8004630:	2004      	movs	r0, #4
 8004632:	f7fd f80f 	bl	8001654 <LCD_IO_WriteData>
 8004636:	2011      	movs	r0, #17
 8004638:	f7fd f80c 	bl	8001654 <LCD_IO_WriteData>
 800463c:	2007      	movs	r0, #7
 800463e:	f7fd f809 	bl	8001654 <LCD_IO_WriteData>
 8004642:	2031      	movs	r0, #49	; 0x31
 8004644:	f7fd f806 	bl	8001654 <LCD_IO_WriteData>
 8004648:	2033      	movs	r0, #51	; 0x33
 800464a:	f7fd f803 	bl	8001654 <LCD_IO_WriteData>
 800464e:	2042      	movs	r0, #66	; 0x42
 8004650:	f7fd f800 	bl	8001654 <LCD_IO_WriteData>
 8004654:	2005      	movs	r0, #5
 8004656:	f7fc fffd 	bl	8001654 <LCD_IO_WriteData>
 800465a:	200c      	movs	r0, #12
 800465c:	f7fc fffa 	bl	8001654 <LCD_IO_WriteData>
 8004660:	200a      	movs	r0, #10
 8004662:	f7fc fff7 	bl	8001654 <LCD_IO_WriteData>
 8004666:	2028      	movs	r0, #40	; 0x28
 8004668:	f7fc fff4 	bl	8001654 <LCD_IO_WriteData>
 800466c:	202f      	movs	r0, #47	; 0x2f
 800466e:	f7fc fff1 	bl	8001654 <LCD_IO_WriteData>
 8004672:	200f      	movs	r0, #15
 8004674:	f7fc ffee 	bl	8001654 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004678:	2011      	movs	r0, #17
 800467a:	f7fd f807 	bl	800168c <LCD_IO_WriteReg>
  LCD_Delay(200);
 800467e:	20c8      	movs	r0, #200	; 0xc8
 8004680:	f7fd f852 	bl	8001728 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8004684:	2029      	movs	r0, #41	; 0x29
 8004686:	f7fd f801 	bl	800168c <LCD_IO_WriteReg>
}
 800468a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800468e:	202c      	movs	r0, #44	; 0x2c
 8004690:	f7fc bffc 	b.w	800168c <LCD_IO_WriteReg>

08004694 <ili9341_ReadID>:
{
 8004694:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004696:	f7fc ffcd 	bl	8001634 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800469a:	2103      	movs	r1, #3
 800469c:	20d3      	movs	r0, #211	; 0xd3
 800469e:	f7fd f811 	bl	80016c4 <LCD_IO_ReadData>
}
 80046a2:	b280      	uxth	r0, r0
 80046a4:	bd08      	pop	{r3, pc}

080046a6 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 80046a6:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80046a8:	b2c4      	uxtb	r4, r0
 80046aa:	2202      	movs	r2, #2
 80046ac:	2103      	movs	r1, #3
 80046ae:	4620      	mov	r0, r4
 80046b0:	f7fc ff76 	bl	80015a0 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 80046b4:	200a      	movs	r0, #10
 80046b6:	f7fc ffbb 	bl	8001630 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80046ba:	4620      	mov	r0, r4
 80046bc:	2200      	movs	r2, #0
 80046be:	2103      	movs	r1, #3
 80046c0:	f7fc ff6e 	bl	80015a0 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 80046c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80046c8:	2002      	movs	r0, #2
 80046ca:	f7fc bfb1 	b.w	8001630 <IOE_Delay>

080046ce <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80046ce:	b538      	push	{r3, r4, r5, lr}
 80046d0:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80046d2:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80046d4:	f7fc ff62 	bl	800159c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80046d8:	2100      	movs	r1, #0
 80046da:	4620      	mov	r0, r4
 80046dc:	f7fc ff78 	bl	80015d0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80046e0:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80046e2:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80046e4:	4620      	mov	r0, r4
 80046e6:	f7fc ff73 	bl	80015d0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80046ea:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80046ee:	b280      	uxth	r0, r0
 80046f0:	bd38      	pop	{r3, r4, r5, pc}

080046f2 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80046f2:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80046f4:	b2c4      	uxtb	r4, r0
 80046f6:	2140      	movs	r1, #64	; 0x40
 80046f8:	4620      	mov	r0, r4
 80046fa:	f7fc ff69 	bl	80015d0 <IOE_Read>
  
  if(state > 0)
 80046fe:	0603      	lsls	r3, r0, #24
 8004700:	d507      	bpl.n	8004712 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8004702:	214c      	movs	r1, #76	; 0x4c
 8004704:	4620      	mov	r0, r4
 8004706:	f7fc ff63 	bl	80015d0 <IOE_Read>
    {
      ret = 1;
 800470a:	3800      	subs	r0, #0
 800470c:	bf18      	it	ne
 800470e:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8004710:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004712:	2201      	movs	r2, #1
 8004714:	214b      	movs	r1, #75	; 0x4b
 8004716:	4620      	mov	r0, r4
 8004718:	f7fc ff42 	bl	80015a0 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800471c:	4620      	mov	r0, r4
 800471e:	2200      	movs	r2, #0
 8004720:	214b      	movs	r1, #75	; 0x4b
 8004722:	f7fc ff3d 	bl	80015a0 <IOE_Write>
  uint8_t ret = 0;
 8004726:	2000      	movs	r0, #0
 8004728:	e7f2      	b.n	8004710 <stmpe811_TS_DetectTouch+0x1e>

0800472a <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800472a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800472c:	2304      	movs	r3, #4
 800472e:	b2c4      	uxtb	r4, r0
{
 8004730:	460e      	mov	r6, r1
 8004732:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004734:	21d7      	movs	r1, #215	; 0xd7
 8004736:	eb0d 0203 	add.w	r2, sp, r3
 800473a:	4620      	mov	r0, r4
 800473c:	f7fc ff62 	bl	8001604 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8004740:	9b01      	ldr	r3, [sp, #4]
 8004742:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004744:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004746:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800474a:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800474c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800474e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004750:	2201      	movs	r2, #1
 8004752:	214b      	movs	r1, #75	; 0x4b
 8004754:	f7fc ff24 	bl	80015a0 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004758:	2200      	movs	r2, #0
 800475a:	214b      	movs	r1, #75	; 0x4b
 800475c:	4620      	mov	r0, r4
 800475e:	f7fc ff1f 	bl	80015a0 <IOE_Write>
}
 8004762:	b002      	add	sp, #8
 8004764:	bd70      	pop	{r4, r5, r6, pc}
	...

08004768 <stmpe811_Init>:
{
 8004768:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800476a:	4b0a      	ldr	r3, [pc, #40]	; (8004794 <stmpe811_Init+0x2c>)
 800476c:	781a      	ldrb	r2, [r3, #0]
 800476e:	4290      	cmp	r0, r2
{
 8004770:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8004772:	d00d      	beq.n	8004790 <stmpe811_Init+0x28>
 8004774:	7859      	ldrb	r1, [r3, #1]
 8004776:	4288      	cmp	r0, r1
 8004778:	d00a      	beq.n	8004790 <stmpe811_Init+0x28>
 800477a:	b10a      	cbz	r2, 8004780 <stmpe811_Init+0x18>
 800477c:	b941      	cbnz	r1, 8004790 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800477e:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8004780:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8004782:	f7fc ff0b 	bl	800159c <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8004786:	4620      	mov	r0, r4
}
 8004788:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 800478c:	f7ff bf8b 	b.w	80046a6 <stmpe811_Reset>
}
 8004790:	bd10      	pop	{r4, pc}
 8004792:	bf00      	nop
 8004794:	200027ec 	.word	0x200027ec

08004798 <stmpe811_EnableGlobalIT>:
{
 8004798:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800479a:	b2c4      	uxtb	r4, r0
 800479c:	2109      	movs	r1, #9
 800479e:	4620      	mov	r0, r4
 80047a0:	f7fc ff16 	bl	80015d0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80047a4:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80047a8:	b2c2      	uxtb	r2, r0
 80047aa:	2109      	movs	r1, #9
 80047ac:	4620      	mov	r0, r4
}
 80047ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80047b2:	f7fc bef5 	b.w	80015a0 <IOE_Write>

080047b6 <stmpe811_DisableGlobalIT>:
{
 80047b6:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80047b8:	b2c4      	uxtb	r4, r0
 80047ba:	2109      	movs	r1, #9
 80047bc:	4620      	mov	r0, r4
 80047be:	f7fc ff07 	bl	80015d0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80047c2:	2109      	movs	r1, #9
 80047c4:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 80047c8:	4620      	mov	r0, r4
}
 80047ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80047ce:	f7fc bee7 	b.w	80015a0 <IOE_Write>

080047d2 <stmpe811_EnableITSource>:
{
 80047d2:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80047d4:	b2c4      	uxtb	r4, r0
{
 80047d6:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80047d8:	4620      	mov	r0, r4
 80047da:	210a      	movs	r1, #10
 80047dc:	f7fc fef8 	bl	80015d0 <IOE_Read>
  tmp |= Source; 
 80047e0:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80047e4:	b2d2      	uxtb	r2, r2
 80047e6:	4620      	mov	r0, r4
 80047e8:	210a      	movs	r1, #10
}
 80047ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80047ee:	f7fc bed7 	b.w	80015a0 <IOE_Write>

080047f2 <stmpe811_TS_EnableIT>:
{
 80047f2:	b507      	push	{r0, r1, r2, lr}
 80047f4:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 80047f6:	f7fc fed2 	bl	800159e <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 80047fa:	9801      	ldr	r0, [sp, #4]
 80047fc:	211f      	movs	r1, #31
 80047fe:	f7ff ffe8 	bl	80047d2 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8004802:	9801      	ldr	r0, [sp, #4]
}
 8004804:	b003      	add	sp, #12
 8004806:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 800480a:	f7ff bfc5 	b.w	8004798 <stmpe811_EnableGlobalIT>

0800480e <stmpe811_DisableITSource>:
{
 800480e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004810:	b2c4      	uxtb	r4, r0
{
 8004812:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004814:	4620      	mov	r0, r4
 8004816:	210a      	movs	r1, #10
 8004818:	f7fc feda 	bl	80015d0 <IOE_Read>
  tmp &= ~Source; 
 800481c:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004820:	b2d2      	uxtb	r2, r2
 8004822:	4620      	mov	r0, r4
 8004824:	210a      	movs	r1, #10
}
 8004826:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800482a:	f7fc beb9 	b.w	80015a0 <IOE_Write>

0800482e <stmpe811_TS_DisableIT>:
{
 800482e:	b510      	push	{r4, lr}
 8004830:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8004832:	f7ff ffc0 	bl	80047b6 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004836:	4620      	mov	r0, r4
 8004838:	211f      	movs	r1, #31
}
 800483a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800483e:	f7ff bfe6 	b.w	800480e <stmpe811_DisableITSource>

08004842 <stmpe811_ReadGITStatus>:
{
 8004842:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004844:	b2c0      	uxtb	r0, r0
{
 8004846:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004848:	210b      	movs	r1, #11
 800484a:	f7fc fec1 	bl	80015d0 <IOE_Read>
}
 800484e:	4020      	ands	r0, r4
 8004850:	bd10      	pop	{r4, pc}

08004852 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8004852:	211f      	movs	r1, #31
 8004854:	f7ff bff5 	b.w	8004842 <stmpe811_ReadGITStatus>

08004858 <stmpe811_ClearGlobalIT>:
{
 8004858:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800485a:	b2c0      	uxtb	r0, r0
 800485c:	210b      	movs	r1, #11
 800485e:	f7fc be9f 	b.w	80015a0 <IOE_Write>

08004862 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8004862:	211f      	movs	r1, #31
 8004864:	f7ff bff8 	b.w	8004858 <stmpe811_ClearGlobalIT>

08004868 <stmpe811_IO_EnableAF>:
{
 8004868:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800486a:	b2c4      	uxtb	r4, r0
{
 800486c:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800486e:	4620      	mov	r0, r4
 8004870:	2117      	movs	r1, #23
 8004872:	f7fc fead 	bl	80015d0 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8004876:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800487a:	b2d2      	uxtb	r2, r2
 800487c:	4620      	mov	r0, r4
 800487e:	2117      	movs	r1, #23
}
 8004880:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8004884:	f7fc be8c 	b.w	80015a0 <IOE_Write>

08004888 <stmpe811_TS_Start>:
{
 8004888:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800488a:	b2c4      	uxtb	r4, r0
{
 800488c:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800488e:	2104      	movs	r1, #4
 8004890:	4620      	mov	r0, r4
 8004892:	f7fc fe9d 	bl	80015d0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004896:	2104      	movs	r1, #4
 8004898:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800489c:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800489e:	4620      	mov	r0, r4
 80048a0:	f7fc fe7e 	bl	80015a0 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 80048a4:	4630      	mov	r0, r6
 80048a6:	21f0      	movs	r1, #240	; 0xf0
 80048a8:	f7ff ffde 	bl	8004868 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80048ac:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 80048b0:	4620      	mov	r0, r4
 80048b2:	2104      	movs	r1, #4
 80048b4:	f7fc fe74 	bl	80015a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80048b8:	2249      	movs	r2, #73	; 0x49
 80048ba:	2120      	movs	r1, #32
 80048bc:	4620      	mov	r0, r4
 80048be:	f7fc fe6f 	bl	80015a0 <IOE_Write>
  IOE_Delay(2); 
 80048c2:	2002      	movs	r0, #2
 80048c4:	f7fc feb4 	bl	8001630 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80048c8:	4620      	mov	r0, r4
 80048ca:	2201      	movs	r2, #1
 80048cc:	2121      	movs	r1, #33	; 0x21
 80048ce:	f7fc fe67 	bl	80015a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80048d2:	4620      	mov	r0, r4
 80048d4:	229a      	movs	r2, #154	; 0x9a
 80048d6:	2141      	movs	r1, #65	; 0x41
 80048d8:	f7fc fe62 	bl	80015a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80048dc:	4620      	mov	r0, r4
 80048de:	2201      	movs	r2, #1
 80048e0:	214a      	movs	r1, #74	; 0x4a
 80048e2:	f7fc fe5d 	bl	80015a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80048e6:	4620      	mov	r0, r4
 80048e8:	2201      	movs	r2, #1
 80048ea:	214b      	movs	r1, #75	; 0x4b
 80048ec:	f7fc fe58 	bl	80015a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80048f0:	4620      	mov	r0, r4
 80048f2:	2200      	movs	r2, #0
 80048f4:	214b      	movs	r1, #75	; 0x4b
 80048f6:	f7fc fe53 	bl	80015a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80048fa:	4620      	mov	r0, r4
 80048fc:	2201      	movs	r2, #1
 80048fe:	2156      	movs	r1, #86	; 0x56
 8004900:	f7fc fe4e 	bl	80015a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8004904:	4620      	mov	r0, r4
 8004906:	2201      	movs	r2, #1
 8004908:	2158      	movs	r1, #88	; 0x58
 800490a:	f7fc fe49 	bl	80015a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800490e:	4620      	mov	r0, r4
 8004910:	2201      	movs	r2, #1
 8004912:	2140      	movs	r1, #64	; 0x40
 8004914:	f7fc fe44 	bl	80015a0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8004918:	4620      	mov	r0, r4
 800491a:	22ff      	movs	r2, #255	; 0xff
 800491c:	210b      	movs	r1, #11
 800491e:	f7fc fe3f 	bl	80015a0 <IOE_Write>
}
 8004922:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8004926:	2002      	movs	r0, #2
 8004928:	f7fc be82 	b.w	8001630 <IOE_Delay>

0800492c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800492c:	4b05      	ldr	r3, [pc, #20]	; (8004944 <SystemInit+0x18>)
 800492e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8004932:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8004936:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800493a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800493e:	609a      	str	r2, [r3, #8]
#endif
}
 8004940:	4770      	bx	lr
 8004942:	bf00      	nop
 8004944:	e000ed00 	.word	0xe000ed00

08004948 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004948:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800494a:	4b0b      	ldr	r3, [pc, #44]	; (8004978 <HAL_Init+0x30>)
 800494c:	681a      	ldr	r2, [r3, #0]
 800494e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004952:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004954:	681a      	ldr	r2, [r3, #0]
 8004956:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800495a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800495c:	681a      	ldr	r2, [r3, #0]
 800495e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004962:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004964:	2003      	movs	r0, #3
 8004966:	f000 f82f 	bl	80049c8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800496a:	2000      	movs	r0, #0
 800496c:	f7fd fa90 	bl	8001e90 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004970:	f7fd f81a 	bl	80019a8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004974:	2000      	movs	r0, #0
 8004976:	bd08      	pop	{r3, pc}
 8004978:	40023c00 	.word	0x40023c00

0800497c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800497c:	4a03      	ldr	r2, [pc, #12]	; (800498c <HAL_IncTick+0x10>)
 800497e:	4b04      	ldr	r3, [pc, #16]	; (8004990 <HAL_IncTick+0x14>)
 8004980:	6811      	ldr	r1, [r2, #0]
 8004982:	781b      	ldrb	r3, [r3, #0]
 8004984:	440b      	add	r3, r1
 8004986:	6013      	str	r3, [r2, #0]
}
 8004988:	4770      	bx	lr
 800498a:	bf00      	nop
 800498c:	20013a34 	.word	0x20013a34
 8004990:	20000078 	.word	0x20000078

08004994 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004994:	4b01      	ldr	r3, [pc, #4]	; (800499c <HAL_GetTick+0x8>)
 8004996:	6818      	ldr	r0, [r3, #0]
}
 8004998:	4770      	bx	lr
 800499a:	bf00      	nop
 800499c:	20013a34 	.word	0x20013a34

080049a0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80049a0:	b538      	push	{r3, r4, r5, lr}
 80049a2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80049a4:	f7ff fff6 	bl	8004994 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80049a8:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80049aa:	bf1c      	itt	ne
 80049ac:	4b05      	ldrne	r3, [pc, #20]	; (80049c4 <HAL_Delay+0x24>)
 80049ae:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80049b0:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80049b2:	bf18      	it	ne
 80049b4:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80049b6:	f7ff ffed 	bl	8004994 <HAL_GetTick>
 80049ba:	1b43      	subs	r3, r0, r5
 80049bc:	42a3      	cmp	r3, r4
 80049be:	d3fa      	bcc.n	80049b6 <HAL_Delay+0x16>
  {
  }
}
 80049c0:	bd38      	pop	{r3, r4, r5, pc}
 80049c2:	bf00      	nop
 80049c4:	20000078 	.word	0x20000078

080049c8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80049c8:	4907      	ldr	r1, [pc, #28]	; (80049e8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80049ca:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80049cc:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80049d0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80049d2:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80049d4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80049d8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80049da:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80049dc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80049e0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80049e4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80049e6:	4770      	bx	lr
 80049e8:	e000ed00 	.word	0xe000ed00

080049ec <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80049ec:	4b16      	ldr	r3, [pc, #88]	; (8004a48 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80049ee:	b530      	push	{r4, r5, lr}
 80049f0:	68dc      	ldr	r4, [r3, #12]
 80049f2:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80049f6:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80049fa:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80049fc:	2d04      	cmp	r5, #4
 80049fe:	bf28      	it	cs
 8004a00:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004a02:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004a04:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004a08:	bf8c      	ite	hi
 8004a0a:	3c03      	subhi	r4, #3
 8004a0c:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004a0e:	fa03 f505 	lsl.w	r5, r3, r5
 8004a12:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004a16:	40a3      	lsls	r3, r4
 8004a18:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004a1c:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8004a1e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004a20:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004a24:	bfac      	ite	ge
 8004a26:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004a2a:	4a08      	ldrlt	r2, [pc, #32]	; (8004a4c <HAL_NVIC_SetPriority+0x60>)
 8004a2c:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8004a30:	bfb8      	it	lt
 8004a32:	f000 000f 	andlt.w	r0, r0, #15
 8004a36:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004a38:	bfaa      	itet	ge
 8004a3a:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004a3e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004a40:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004a44:	bd30      	pop	{r4, r5, pc}
 8004a46:	bf00      	nop
 8004a48:	e000ed00 	.word	0xe000ed00
 8004a4c:	e000ed14 	.word	0xe000ed14

08004a50 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004a50:	2800      	cmp	r0, #0
 8004a52:	db08      	blt.n	8004a66 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004a54:	0942      	lsrs	r2, r0, #5
 8004a56:	2301      	movs	r3, #1
 8004a58:	f000 001f 	and.w	r0, r0, #31
 8004a5c:	fa03 f000 	lsl.w	r0, r3, r0
 8004a60:	4b01      	ldr	r3, [pc, #4]	; (8004a68 <HAL_NVIC_EnableIRQ+0x18>)
 8004a62:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004a66:	4770      	bx	lr
 8004a68:	e000e100 	.word	0xe000e100

08004a6c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004a6c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004a6e:	4604      	mov	r4, r0
 8004a70:	b150      	cbz	r0, 8004a88 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004a72:	7943      	ldrb	r3, [r0, #5]
 8004a74:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004a78:	b913      	cbnz	r3, 8004a80 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8004a7a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004a7c:	f7fc ffb4 	bl	80019e8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004a80:	2301      	movs	r3, #1
 8004a82:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004a84:	2000      	movs	r0, #0
}
 8004a86:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004a88:	2001      	movs	r0, #1
 8004a8a:	e7fc      	b.n	8004a86 <HAL_CRC_Init+0x1a>

08004a8c <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004a8c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8004a90:	2b02      	cmp	r3, #2
 8004a92:	d003      	beq.n	8004a9c <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004a94:	2380      	movs	r3, #128	; 0x80
 8004a96:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8004a98:	2001      	movs	r0, #1
 8004a9a:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8004a9c:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8004a9e:	2305      	movs	r3, #5
 8004aa0:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8004aa4:	6813      	ldr	r3, [r2, #0]
 8004aa6:	f023 0301 	bic.w	r3, r3, #1
 8004aaa:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 8004aac:	2000      	movs	r0, #0
}
 8004aae:	4770      	bx	lr

08004ab0 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004ab0:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8004ab2:	4604      	mov	r4, r0
 8004ab4:	b330      	cbz	r0, 8004b04 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004ab6:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004aba:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004abe:	b91b      	cbnz	r3, 8004ac8 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004ac0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004ac4:	f7fc ffa8 	bl	8001a18 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004ac8:	6822      	ldr	r2, [r4, #0]
 8004aca:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004acc:	2302      	movs	r3, #2
 8004ace:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004ad2:	6813      	ldr	r3, [r2, #0]
 8004ad4:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8004ad8:	430b      	orrs	r3, r1
 8004ada:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004adc:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004ade:	68a1      	ldr	r1, [r4, #8]
 8004ae0:	f023 0307 	bic.w	r3, r3, #7
 8004ae4:	430b      	orrs	r3, r1
 8004ae6:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004ae8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8004aea:	68e1      	ldr	r1, [r4, #12]
 8004aec:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8004af0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004af4:	430b      	orrs	r3, r1
 8004af6:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004af8:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004afa:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004afc:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004afe:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8004b02:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8004b04:	2001      	movs	r0, #1
 8004b06:	e7fc      	b.n	8004b02 <HAL_DMA2D_Init+0x52>

08004b08 <HAL_DMA2D_LineEventCallback>:
 8004b08:	4770      	bx	lr

08004b0a <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8004b0a:	4770      	bx	lr

08004b0c <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004b0c:	6803      	ldr	r3, [r0, #0]
{
 8004b0e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004b10:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004b12:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004b14:	07f2      	lsls	r2, r6, #31
{
 8004b16:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004b18:	d514      	bpl.n	8004b44 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004b1a:	05e9      	lsls	r1, r5, #23
 8004b1c:	d512      	bpl.n	8004b44 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004b1e:	681a      	ldr	r2, [r3, #0]
 8004b20:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004b24:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004b26:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8004b28:	f042 0201 	orr.w	r2, r2, #1
 8004b2c:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004b2e:	2201      	movs	r2, #1
 8004b30:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004b32:	2304      	movs	r3, #4
 8004b34:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004b38:	2300      	movs	r3, #0
 8004b3a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8004b3e:	6943      	ldr	r3, [r0, #20]
 8004b40:	b103      	cbz	r3, 8004b44 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004b42:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004b44:	06b2      	lsls	r2, r6, #26
 8004b46:	d516      	bpl.n	8004b76 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004b48:	04ab      	lsls	r3, r5, #18
 8004b4a:	d514      	bpl.n	8004b76 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004b4c:	6823      	ldr	r3, [r4, #0]
 8004b4e:	681a      	ldr	r2, [r3, #0]
 8004b50:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004b54:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004b56:	2220      	movs	r2, #32
 8004b58:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004b5a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004b5c:	f043 0302 	orr.w	r3, r3, #2
 8004b60:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004b62:	2304      	movs	r3, #4
 8004b64:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004b68:	2300      	movs	r3, #0
 8004b6a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8004b6e:	6963      	ldr	r3, [r4, #20]
 8004b70:	b10b      	cbz	r3, 8004b76 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004b72:	4620      	mov	r0, r4
 8004b74:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004b76:	0730      	lsls	r0, r6, #28
 8004b78:	d516      	bpl.n	8004ba8 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004b7a:	0529      	lsls	r1, r5, #20
 8004b7c:	d514      	bpl.n	8004ba8 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004b7e:	6823      	ldr	r3, [r4, #0]
 8004b80:	681a      	ldr	r2, [r3, #0]
 8004b82:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004b86:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004b88:	2208      	movs	r2, #8
 8004b8a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004b8c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004b8e:	f043 0304 	orr.w	r3, r3, #4
 8004b92:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004b94:	2304      	movs	r3, #4
 8004b96:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004b9a:	2300      	movs	r3, #0
 8004b9c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8004ba0:	6963      	ldr	r3, [r4, #20]
 8004ba2:	b10b      	cbz	r3, 8004ba8 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004ba4:	4620      	mov	r0, r4
 8004ba6:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004ba8:	0772      	lsls	r2, r6, #29
 8004baa:	d50b      	bpl.n	8004bc4 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004bac:	056b      	lsls	r3, r5, #21
 8004bae:	d509      	bpl.n	8004bc4 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004bb0:	6823      	ldr	r3, [r4, #0]
 8004bb2:	681a      	ldr	r2, [r3, #0]
 8004bb4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004bb8:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004bba:	2204      	movs	r2, #4
 8004bbc:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004bbe:	4620      	mov	r0, r4
 8004bc0:	f7ff ffa2 	bl	8004b08 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004bc4:	07b0      	lsls	r0, r6, #30
 8004bc6:	d514      	bpl.n	8004bf2 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004bc8:	05a9      	lsls	r1, r5, #22
 8004bca:	d512      	bpl.n	8004bf2 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004bcc:	6823      	ldr	r3, [r4, #0]
 8004bce:	681a      	ldr	r2, [r3, #0]
 8004bd0:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004bd4:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004bd6:	2202      	movs	r2, #2
 8004bd8:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004bda:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004bdc:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004bde:	2301      	movs	r3, #1
 8004be0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004be4:	2300      	movs	r3, #0
 8004be6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8004bea:	6923      	ldr	r3, [r4, #16]
 8004bec:	b10b      	cbz	r3, 8004bf2 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8004bee:	4620      	mov	r0, r4
 8004bf0:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004bf2:	06f2      	lsls	r2, r6, #27
 8004bf4:	d513      	bpl.n	8004c1e <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004bf6:	04eb      	lsls	r3, r5, #19
 8004bf8:	d511      	bpl.n	8004c1e <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004bfa:	6823      	ldr	r3, [r4, #0]
 8004bfc:	681a      	ldr	r2, [r3, #0]
 8004bfe:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004c02:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004c04:	2210      	movs	r2, #16
 8004c06:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004c08:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004c0a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004c0c:	2301      	movs	r3, #1
 8004c0e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004c12:	2300      	movs	r3, #0
 8004c14:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004c18:	4620      	mov	r0, r4
 8004c1a:	f7ff ff76 	bl	8004b0a <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8004c1e:	bd70      	pop	{r4, r5, r6, pc}

08004c20 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004c20:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8004c22:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8004c26:	2b01      	cmp	r3, #1
 8004c28:	f04f 0302 	mov.w	r3, #2
 8004c2c:	d02b      	beq.n	8004c86 <HAL_DMA2D_ConfigLayer+0x66>
 8004c2e:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004c30:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8004c34:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004c38:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8004c3c:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8004c40:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8004c42:	4f18      	ldr	r7, [pc, #96]	; (8004ca4 <HAL_DMA2D_ConfigLayer+0x84>)
 8004c44:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004c48:	3c09      	subs	r4, #9
 8004c4a:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004c4c:	bf9c      	itt	ls
 8004c4e:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8004c52:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004c54:	ea4f 1601 	mov.w	r6, r1, lsl #4
 8004c58:	6803      	ldr	r3, [r0, #0]
  }
  else
  {
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004c5a:	bf88      	it	hi
 8004c5c:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004c60:	b999      	cbnz	r1, 8004c8a <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004c62:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004c64:	4039      	ands	r1, r7
 8004c66:	430a      	orrs	r2, r1
 8004c68:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004c6a:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004c6c:	6982      	ldr	r2, [r0, #24]
 8004c6e:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004c70:	d803      	bhi.n	8004c7a <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8004c72:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8004c74:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8004c78:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004c7a:	2301      	movs	r3, #1
 8004c7c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004c80:	2300      	movs	r3, #0
 8004c82:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8004c86:	4618      	mov	r0, r3

  return HAL_OK;
}
 8004c88:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004c8a:	69d9      	ldr	r1, [r3, #28]
 8004c8c:	4039      	ands	r1, r7
 8004c8e:	430a      	orrs	r2, r1
 8004c90:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004c92:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004c94:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004c96:	6992      	ldr	r2, [r2, #24]
 8004c98:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8004c9a:	bf9c      	itt	ls
 8004c9c:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8004ca0:	621d      	strls	r5, [r3, #32]
 8004ca2:	e7ea      	b.n	8004c7a <HAL_DMA2D_ConfigLayer+0x5a>
 8004ca4:	00fcfff0 	.word	0x00fcfff0

08004ca8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004ca8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004cac:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8004e74 <HAL_GPIO_Init+0x1cc>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004cb0:	4a6e      	ldr	r2, [pc, #440]	; (8004e6c <HAL_GPIO_Init+0x1c4>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004cb2:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 8004e78 <HAL_GPIO_Init+0x1d0>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004cb6:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004cb8:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8004cba:	2401      	movs	r4, #1
 8004cbc:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004cbe:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8004cc2:	43ac      	bics	r4, r5
 8004cc4:	f040 80b8 	bne.w	8004e38 <HAL_GPIO_Init+0x190>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8004cc8:	684c      	ldr	r4, [r1, #4]
 8004cca:	f024 0c10 	bic.w	ip, r4, #16
 8004cce:	ea4f 0e43 	mov.w	lr, r3, lsl #1
 8004cd2:	2503      	movs	r5, #3
 8004cd4:	f10c 37ff 	add.w	r7, ip, #4294967295
 8004cd8:	fa05 f50e 	lsl.w	r5, r5, lr
 8004cdc:	2f01      	cmp	r7, #1
 8004cde:	ea6f 0505 	mvn.w	r5, r5
 8004ce2:	d811      	bhi.n	8004d08 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8004ce4:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004ce6:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004cea:	68cf      	ldr	r7, [r1, #12]
 8004cec:	fa07 f70e 	lsl.w	r7, r7, lr
 8004cf0:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8004cf4:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004cf6:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004cf8:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8004cfc:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8004d00:	409f      	lsls	r7, r3
 8004d02:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8004d06:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8004d08:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004d0a:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004d0e:	688f      	ldr	r7, [r1, #8]
 8004d10:	fa07 f70e 	lsl.w	r7, r7, lr
 8004d14:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004d18:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 8004d1c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004d1e:	d116      	bne.n	8004d4e <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 8004d20:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8004d24:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004d28:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8004d2c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004d30:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8004d34:	f04f 0c0f 	mov.w	ip, #15
 8004d38:	fa0c fc0b 	lsl.w	ip, ip, fp
 8004d3c:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004d40:	690f      	ldr	r7, [r1, #16]
 8004d42:	fa07 f70b 	lsl.w	r7, r7, fp
 8004d46:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 8004d4a:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 8004d4e:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004d50:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004d52:	f004 0703 	and.w	r7, r4, #3
 8004d56:	fa07 fe0e 	lsl.w	lr, r7, lr
 8004d5a:	ea4e 0505 	orr.w	r5, lr, r5
      GPIOx->MODER = temp;
 8004d5e:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8004d60:	00e5      	lsls	r5, r4, #3
 8004d62:	d569      	bpl.n	8004e38 <HAL_GPIO_Init+0x190>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004d64:	f04f 0b00 	mov.w	fp, #0
 8004d68:	f8cd b004 	str.w	fp, [sp, #4]
 8004d6c:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004d70:	4d3f      	ldr	r5, [pc, #252]	; (8004e70 <HAL_GPIO_Init+0x1c8>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004d72:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8004d76:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8004d7a:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8004d7e:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8004d82:	9701      	str	r7, [sp, #4]
 8004d84:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8004d86:	f023 0703 	bic.w	r7, r3, #3
 8004d8a:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8004d8e:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004d92:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8004d96:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004d9a:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8004d9e:	f04f 0c0f 	mov.w	ip, #15
 8004da2:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004da6:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004da8:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004dac:	d04b      	beq.n	8004e46 <HAL_GPIO_Init+0x19e>
 8004dae:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004db2:	42a8      	cmp	r0, r5
 8004db4:	d049      	beq.n	8004e4a <HAL_GPIO_Init+0x1a2>
 8004db6:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004dba:	42a8      	cmp	r0, r5
 8004dbc:	d047      	beq.n	8004e4e <HAL_GPIO_Init+0x1a6>
 8004dbe:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004dc2:	42a8      	cmp	r0, r5
 8004dc4:	d045      	beq.n	8004e52 <HAL_GPIO_Init+0x1aa>
 8004dc6:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004dca:	42a8      	cmp	r0, r5
 8004dcc:	d043      	beq.n	8004e56 <HAL_GPIO_Init+0x1ae>
 8004dce:	4548      	cmp	r0, r9
 8004dd0:	d043      	beq.n	8004e5a <HAL_GPIO_Init+0x1b2>
 8004dd2:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8004dd6:	42a8      	cmp	r0, r5
 8004dd8:	d041      	beq.n	8004e5e <HAL_GPIO_Init+0x1b6>
 8004dda:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004dde:	42a8      	cmp	r0, r5
 8004de0:	d03f      	beq.n	8004e62 <HAL_GPIO_Init+0x1ba>
 8004de2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004de6:	42a8      	cmp	r0, r5
 8004de8:	d03d      	beq.n	8004e66 <HAL_GPIO_Init+0x1be>
 8004dea:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004dee:	42a8      	cmp	r0, r5
 8004df0:	bf0c      	ite	eq
 8004df2:	2509      	moveq	r5, #9
 8004df4:	250a      	movne	r5, #10
 8004df6:	fa05 f50e 	lsl.w	r5, r5, lr
 8004dfa:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004dfe:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 8004e00:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8004e02:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8004e04:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8004e08:	bf0c      	ite	eq
 8004e0a:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8004e0c:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8004e0e:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 8004e10:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8004e12:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8004e16:	bf0c      	ite	eq
 8004e18:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8004e1a:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 8004e1c:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004e1e:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8004e20:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8004e24:	bf0c      	ite	eq
 8004e26:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8004e28:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 8004e2a:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 8004e2c:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8004e2e:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 8004e30:	bf54      	ite	pl
 8004e32:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 8004e34:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 8004e36:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004e38:	3301      	adds	r3, #1
 8004e3a:	2b10      	cmp	r3, #16
 8004e3c:	f47f af3c 	bne.w	8004cb8 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 8004e40:	b003      	add	sp, #12
 8004e42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004e46:	465d      	mov	r5, fp
 8004e48:	e7d5      	b.n	8004df6 <HAL_GPIO_Init+0x14e>
 8004e4a:	2501      	movs	r5, #1
 8004e4c:	e7d3      	b.n	8004df6 <HAL_GPIO_Init+0x14e>
 8004e4e:	2502      	movs	r5, #2
 8004e50:	e7d1      	b.n	8004df6 <HAL_GPIO_Init+0x14e>
 8004e52:	2503      	movs	r5, #3
 8004e54:	e7cf      	b.n	8004df6 <HAL_GPIO_Init+0x14e>
 8004e56:	2504      	movs	r5, #4
 8004e58:	e7cd      	b.n	8004df6 <HAL_GPIO_Init+0x14e>
 8004e5a:	2505      	movs	r5, #5
 8004e5c:	e7cb      	b.n	8004df6 <HAL_GPIO_Init+0x14e>
 8004e5e:	2506      	movs	r5, #6
 8004e60:	e7c9      	b.n	8004df6 <HAL_GPIO_Init+0x14e>
 8004e62:	2507      	movs	r5, #7
 8004e64:	e7c7      	b.n	8004df6 <HAL_GPIO_Init+0x14e>
 8004e66:	2508      	movs	r5, #8
 8004e68:	e7c5      	b.n	8004df6 <HAL_GPIO_Init+0x14e>
 8004e6a:	bf00      	nop
 8004e6c:	40013c00 	.word	0x40013c00
 8004e70:	40020000 	.word	0x40020000
 8004e74:	40023800 	.word	0x40023800
 8004e78:	40021400 	.word	0x40021400

08004e7c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004e7c:	b10a      	cbz	r2, 8004e82 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004e7e:	6181      	str	r1, [r0, #24]
  }
}
 8004e80:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004e82:	0409      	lsls	r1, r1, #16
 8004e84:	e7fb      	b.n	8004e7e <HAL_GPIO_WritePin+0x2>

08004e86 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004e86:	6801      	ldr	r1, [r0, #0]
 8004e88:	694b      	ldr	r3, [r1, #20]
 8004e8a:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8004e8e:	f04f 0200 	mov.w	r2, #0
 8004e92:	d010      	beq.n	8004eb6 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004e94:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004e98:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8004e9a:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8004e9c:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8004e9e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004ea2:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004ea6:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004ea8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004eac:	f043 0304 	orr.w	r3, r3, #4
 8004eb0:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8004eb2:	2001      	movs	r0, #1
 8004eb4:	4770      	bx	lr
  }
  return HAL_OK;
 8004eb6:	4618      	mov	r0, r3
}
 8004eb8:	4770      	bx	lr

08004eba <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8004eba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004ebe:	4604      	mov	r4, r0
 8004ec0:	460f      	mov	r7, r1
 8004ec2:	4616      	mov	r6, r2
 8004ec4:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004ec6:	6825      	ldr	r5, [r4, #0]
 8004ec8:	6968      	ldr	r0, [r5, #20]
 8004eca:	ea27 0000 	bic.w	r0, r7, r0
 8004ece:	b280      	uxth	r0, r0
 8004ed0:	b1b8      	cbz	r0, 8004f02 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004ed2:	696b      	ldr	r3, [r5, #20]
 8004ed4:	055a      	lsls	r2, r3, #21
 8004ed6:	d516      	bpl.n	8004f06 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004ed8:	682b      	ldr	r3, [r5, #0]
 8004eda:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004ede:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004ee0:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004ee4:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004ee6:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004ee8:	2300      	movs	r3, #0
 8004eea:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004eec:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004ef0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004ef4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004ef6:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004efa:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004efc:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8004f00:	2001      	movs	r0, #1
}
 8004f02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004f06:	1c73      	adds	r3, r6, #1
 8004f08:	d0de      	beq.n	8004ec8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f0a:	f7ff fd43 	bl	8004994 <HAL_GetTick>
 8004f0e:	eba0 0008 	sub.w	r0, r0, r8
 8004f12:	42b0      	cmp	r0, r6
 8004f14:	d801      	bhi.n	8004f1a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8004f16:	2e00      	cmp	r6, #0
 8004f18:	d1d5      	bne.n	8004ec6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004f1a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004f1c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004f1e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004f20:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004f24:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004f28:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004f2a:	f042 0220 	orr.w	r2, r2, #32
 8004f2e:	e7e4      	b.n	8004efa <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08004f30 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8004f30:	b570      	push	{r4, r5, r6, lr}
 8004f32:	4604      	mov	r4, r0
 8004f34:	460d      	mov	r5, r1
 8004f36:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004f38:	6823      	ldr	r3, [r4, #0]
 8004f3a:	695b      	ldr	r3, [r3, #20]
 8004f3c:	075b      	lsls	r3, r3, #29
 8004f3e:	d501      	bpl.n	8004f44 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8004f40:	2000      	movs	r0, #0
}
 8004f42:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004f44:	4620      	mov	r0, r4
 8004f46:	f7ff ff9e 	bl	8004e86 <I2C_IsAcknowledgeFailed>
 8004f4a:	b9a8      	cbnz	r0, 8004f78 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004f4c:	1c6a      	adds	r2, r5, #1
 8004f4e:	d0f3      	beq.n	8004f38 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f50:	f7ff fd20 	bl	8004994 <HAL_GetTick>
 8004f54:	1b80      	subs	r0, r0, r6
 8004f56:	42a8      	cmp	r0, r5
 8004f58:	d801      	bhi.n	8004f5e <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004f5a:	2d00      	cmp	r5, #0
 8004f5c:	d1ec      	bne.n	8004f38 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004f5e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004f60:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004f62:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004f64:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004f68:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004f6c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004f6e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004f72:	f042 0220 	orr.w	r2, r2, #32
 8004f76:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004f78:	2001      	movs	r0, #1
 8004f7a:	e7e2      	b.n	8004f42 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08004f7c <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8004f7c:	b570      	push	{r4, r5, r6, lr}
 8004f7e:	4604      	mov	r4, r0
 8004f80:	460d      	mov	r5, r1
 8004f82:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004f84:	6821      	ldr	r1, [r4, #0]
 8004f86:	694b      	ldr	r3, [r1, #20]
 8004f88:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8004f8c:	d001      	beq.n	8004f92 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8004f8e:	2000      	movs	r0, #0
 8004f90:	e010      	b.n	8004fb4 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004f92:	694a      	ldr	r2, [r1, #20]
 8004f94:	06d2      	lsls	r2, r2, #27
 8004f96:	d50e      	bpl.n	8004fb6 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004f98:	f06f 0210 	mvn.w	r2, #16
 8004f9c:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004f9e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004fa0:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004fa2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004fa6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004faa:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004fac:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004fae:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8004fb2:	2001      	movs	r0, #1
}
 8004fb4:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004fb6:	f7ff fced 	bl	8004994 <HAL_GetTick>
 8004fba:	1b80      	subs	r0, r0, r6
 8004fbc:	42a8      	cmp	r0, r5
 8004fbe:	d801      	bhi.n	8004fc4 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8004fc0:	2d00      	cmp	r5, #0
 8004fc2:	d1df      	bne.n	8004f84 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004fc4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004fc6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004fc8:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004fca:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004fce:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004fd2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004fd4:	f042 0220 	orr.w	r2, r2, #32
 8004fd8:	e7e8      	b.n	8004fac <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08004fda <I2C_WaitOnFlagUntilTimeout>:
{
 8004fda:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8004fde:	4606      	mov	r6, r0
 8004fe0:	460f      	mov	r7, r1
 8004fe2:	4691      	mov	r9, r2
 8004fe4:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004fe6:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8004fea:	6833      	ldr	r3, [r6, #0]
 8004fec:	f1ba 0f01 	cmp.w	sl, #1
 8004ff0:	bf0c      	ite	eq
 8004ff2:	695c      	ldreq	r4, [r3, #20]
 8004ff4:	699c      	ldrne	r4, [r3, #24]
 8004ff6:	ea27 0404 	bic.w	r4, r7, r4
 8004ffa:	b2a4      	uxth	r4, r4
 8004ffc:	fab4 f484 	clz	r4, r4
 8005000:	0964      	lsrs	r4, r4, #5
 8005002:	45a1      	cmp	r9, r4
 8005004:	d001      	beq.n	800500a <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8005006:	2000      	movs	r0, #0
 8005008:	e017      	b.n	800503a <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800500a:	1c6a      	adds	r2, r5, #1
 800500c:	d0ee      	beq.n	8004fec <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800500e:	f7ff fcc1 	bl	8004994 <HAL_GetTick>
 8005012:	9b08      	ldr	r3, [sp, #32]
 8005014:	1ac0      	subs	r0, r0, r3
 8005016:	42a8      	cmp	r0, r5
 8005018:	d801      	bhi.n	800501e <I2C_WaitOnFlagUntilTimeout+0x44>
 800501a:	2d00      	cmp	r5, #0
 800501c:	d1e5      	bne.n	8004fea <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800501e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8005020:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005022:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005024:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005028:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800502c:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800502e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005032:	f042 0220 	orr.w	r2, r2, #32
 8005036:	6432      	str	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005038:	2001      	movs	r0, #1
}
 800503a:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800503e <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800503e:	b570      	push	{r4, r5, r6, lr}
 8005040:	4604      	mov	r4, r0
 8005042:	460d      	mov	r5, r1
 8005044:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005046:	6823      	ldr	r3, [r4, #0]
 8005048:	695b      	ldr	r3, [r3, #20]
 800504a:	061b      	lsls	r3, r3, #24
 800504c:	d501      	bpl.n	8005052 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800504e:	2000      	movs	r0, #0
}
 8005050:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005052:	4620      	mov	r0, r4
 8005054:	f7ff ff17 	bl	8004e86 <I2C_IsAcknowledgeFailed>
 8005058:	b9a8      	cbnz	r0, 8005086 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800505a:	1c6a      	adds	r2, r5, #1
 800505c:	d0f3      	beq.n	8005046 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800505e:	f7ff fc99 	bl	8004994 <HAL_GetTick>
 8005062:	1b80      	subs	r0, r0, r6
 8005064:	42a8      	cmp	r0, r5
 8005066:	d801      	bhi.n	800506c <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8005068:	2d00      	cmp	r5, #0
 800506a:	d1ec      	bne.n	8005046 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800506c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800506e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005070:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005072:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005076:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800507a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800507c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005080:	f042 0220 	orr.w	r2, r2, #32
 8005084:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005086:	2001      	movs	r0, #1
 8005088:	e7e2      	b.n	8005050 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

0800508c <I2C_RequestMemoryWrite>:
{
 800508c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005090:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005092:	6802      	ldr	r2, [r0, #0]
{
 8005094:	b085      	sub	sp, #20
 8005096:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800509a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800509c:	6813      	ldr	r3, [r2, #0]
 800509e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80050a2:	6013      	str	r3, [r2, #0]
{
 80050a4:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80050a6:	463b      	mov	r3, r7
 80050a8:	f8cd 8000 	str.w	r8, [sp]
 80050ac:	2200      	movs	r2, #0
 80050ae:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80050b2:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80050b4:	f7ff ff91 	bl	8004fda <I2C_WaitOnFlagUntilTimeout>
 80050b8:	6823      	ldr	r3, [r4, #0]
 80050ba:	b138      	cbz	r0, 80050cc <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80050bc:	681b      	ldr	r3, [r3, #0]
 80050be:	05db      	lsls	r3, r3, #23
 80050c0:	d502      	bpl.n	80050c8 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80050c2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80050c6:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80050c8:	2003      	movs	r0, #3
 80050ca:	e00a      	b.n	80050e2 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80050cc:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80050d0:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80050d2:	4919      	ldr	r1, [pc, #100]	; (8005138 <I2C_RequestMemoryWrite+0xac>)
 80050d4:	4643      	mov	r3, r8
 80050d6:	463a      	mov	r2, r7
 80050d8:	4620      	mov	r0, r4
 80050da:	f7ff feee 	bl	8004eba <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80050de:	b118      	cbz	r0, 80050e8 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 80050e0:	2001      	movs	r0, #1
}
 80050e2:	b005      	add	sp, #20
 80050e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80050e8:	6823      	ldr	r3, [r4, #0]
 80050ea:	9003      	str	r0, [sp, #12]
 80050ec:	695a      	ldr	r2, [r3, #20]
 80050ee:	9203      	str	r2, [sp, #12]
 80050f0:	699b      	ldr	r3, [r3, #24]
 80050f2:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80050f4:	4642      	mov	r2, r8
 80050f6:	4639      	mov	r1, r7
 80050f8:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80050fa:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80050fc:	f7ff ff9f 	bl	800503e <I2C_WaitOnTXEFlagUntilTimeout>
 8005100:	b140      	cbz	r0, 8005114 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005102:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005104:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005106:	bf01      	itttt	eq
 8005108:	6822      	ldreq	r2, [r4, #0]
 800510a:	6813      	ldreq	r3, [r2, #0]
 800510c:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005110:	6013      	streq	r3, [r2, #0]
 8005112:	e7e5      	b.n	80050e0 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005114:	f1b9 0f01 	cmp.w	r9, #1
 8005118:	6823      	ldr	r3, [r4, #0]
 800511a:	d102      	bne.n	8005122 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800511c:	b2ed      	uxtb	r5, r5
 800511e:	611d      	str	r5, [r3, #16]
 8005120:	e7df      	b.n	80050e2 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005122:	0a2a      	lsrs	r2, r5, #8
 8005124:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005126:	4639      	mov	r1, r7
 8005128:	4642      	mov	r2, r8
 800512a:	4620      	mov	r0, r4
 800512c:	f7ff ff87 	bl	800503e <I2C_WaitOnTXEFlagUntilTimeout>
 8005130:	2800      	cmp	r0, #0
 8005132:	d1e6      	bne.n	8005102 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005134:	6823      	ldr	r3, [r4, #0]
 8005136:	e7f1      	b.n	800511c <I2C_RequestMemoryWrite+0x90>
 8005138:	00010002 	.word	0x00010002

0800513c <I2C_RequestMemoryRead>:
{
 800513c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005140:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005142:	6803      	ldr	r3, [r0, #0]
{
 8005144:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005146:	681a      	ldr	r2, [r3, #0]
 8005148:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800514c:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800514e:	681a      	ldr	r2, [r3, #0]
{
 8005150:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005154:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005158:	601a      	str	r2, [r3, #0]
{
 800515a:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800515c:	463b      	mov	r3, r7
 800515e:	f8cd 8000 	str.w	r8, [sp]
 8005162:	2200      	movs	r2, #0
 8005164:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005168:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800516a:	f7ff ff36 	bl	8004fda <I2C_WaitOnFlagUntilTimeout>
 800516e:	6823      	ldr	r3, [r4, #0]
 8005170:	b148      	cbz	r0, 8005186 <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005172:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005174:	05db      	lsls	r3, r3, #23
 8005176:	d502      	bpl.n	800517e <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005178:	f44f 7300 	mov.w	r3, #512	; 0x200
 800517c:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800517e:	2003      	movs	r0, #3
}
 8005180:	b004      	add	sp, #16
 8005182:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005186:	fa5f f986 	uxtb.w	r9, r6
 800518a:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800518e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005190:	492a      	ldr	r1, [pc, #168]	; (800523c <I2C_RequestMemoryRead+0x100>)
 8005192:	4643      	mov	r3, r8
 8005194:	463a      	mov	r2, r7
 8005196:	4620      	mov	r0, r4
 8005198:	f7ff fe8f 	bl	8004eba <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800519c:	b108      	cbz	r0, 80051a2 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800519e:	2001      	movs	r0, #1
 80051a0:	e7ee      	b.n	8005180 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80051a2:	6823      	ldr	r3, [r4, #0]
 80051a4:	9003      	str	r0, [sp, #12]
 80051a6:	695a      	ldr	r2, [r3, #20]
 80051a8:	9203      	str	r2, [sp, #12]
 80051aa:	699b      	ldr	r3, [r3, #24]
 80051ac:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80051ae:	4642      	mov	r2, r8
 80051b0:	4639      	mov	r1, r7
 80051b2:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80051b4:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80051b6:	f7ff ff42 	bl	800503e <I2C_WaitOnTXEFlagUntilTimeout>
 80051ba:	b140      	cbz	r0, 80051ce <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80051bc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80051be:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80051c0:	bf01      	itttt	eq
 80051c2:	6822      	ldreq	r2, [r4, #0]
 80051c4:	6813      	ldreq	r3, [r2, #0]
 80051c6:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80051ca:	6013      	streq	r3, [r2, #0]
 80051cc:	e7e7      	b.n	800519e <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80051ce:	f1ba 0f01 	cmp.w	sl, #1
 80051d2:	6823      	ldr	r3, [r4, #0]
 80051d4:	d11a      	bne.n	800520c <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80051d6:	b2ed      	uxtb	r5, r5
 80051d8:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80051da:	4642      	mov	r2, r8
 80051dc:	4639      	mov	r1, r7
 80051de:	4620      	mov	r0, r4
 80051e0:	f7ff ff2d 	bl	800503e <I2C_WaitOnTXEFlagUntilTimeout>
 80051e4:	2800      	cmp	r0, #0
 80051e6:	d1e9      	bne.n	80051bc <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80051e8:	6822      	ldr	r2, [r4, #0]
 80051ea:	6813      	ldr	r3, [r2, #0]
 80051ec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80051f0:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80051f2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80051f6:	4602      	mov	r2, r0
 80051f8:	f8cd 8000 	str.w	r8, [sp]
 80051fc:	463b      	mov	r3, r7
 80051fe:	4620      	mov	r0, r4
 8005200:	f7ff feeb 	bl	8004fda <I2C_WaitOnFlagUntilTimeout>
 8005204:	6822      	ldr	r2, [r4, #0]
 8005206:	b160      	cbz	r0, 8005222 <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005208:	6813      	ldr	r3, [r2, #0]
 800520a:	e7b3      	b.n	8005174 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800520c:	0a2a      	lsrs	r2, r5, #8
 800520e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005210:	4639      	mov	r1, r7
 8005212:	4642      	mov	r2, r8
 8005214:	4620      	mov	r0, r4
 8005216:	f7ff ff12 	bl	800503e <I2C_WaitOnTXEFlagUntilTimeout>
 800521a:	2800      	cmp	r0, #0
 800521c:	d1ce      	bne.n	80051bc <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800521e:	6823      	ldr	r3, [r4, #0]
 8005220:	e7d9      	b.n	80051d6 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8005222:	f049 0301 	orr.w	r3, r9, #1
 8005226:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005228:	4904      	ldr	r1, [pc, #16]	; (800523c <I2C_RequestMemoryRead+0x100>)
 800522a:	4643      	mov	r3, r8
 800522c:	463a      	mov	r2, r7
 800522e:	4620      	mov	r0, r4
 8005230:	f7ff fe43 	bl	8004eba <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8005234:	3800      	subs	r0, #0
 8005236:	bf18      	it	ne
 8005238:	2001      	movne	r0, #1
 800523a:	e7a1      	b.n	8005180 <I2C_RequestMemoryRead+0x44>
 800523c:	00010002 	.word	0x00010002

08005240 <HAL_I2C_Init>:
{
 8005240:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8005242:	4604      	mov	r4, r0
 8005244:	b908      	cbnz	r0, 800524a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8005246:	2001      	movs	r0, #1
}
 8005248:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800524a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800524e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005252:	b91b      	cbnz	r3, 800525c <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8005254:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8005258:	f7fc fc00 	bl	8001a5c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800525c:	2324      	movs	r3, #36	; 0x24
 800525e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005262:	6823      	ldr	r3, [r4, #0]
 8005264:	681a      	ldr	r2, [r3, #0]
 8005266:	f022 0201 	bic.w	r2, r2, #1
 800526a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800526c:	681a      	ldr	r2, [r3, #0]
 800526e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005272:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005274:	681a      	ldr	r2, [r3, #0]
 8005276:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800527a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800527c:	f000 fea8 	bl	8005fd0 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005280:	4a3f      	ldr	r2, [pc, #252]	; (8005380 <HAL_I2C_Init+0x140>)
 8005282:	6863      	ldr	r3, [r4, #4]
 8005284:	4293      	cmp	r3, r2
 8005286:	bf94      	ite	ls
 8005288:	4a3e      	ldrls	r2, [pc, #248]	; (8005384 <HAL_I2C_Init+0x144>)
 800528a:	4a3f      	ldrhi	r2, [pc, #252]	; (8005388 <HAL_I2C_Init+0x148>)
 800528c:	4290      	cmp	r0, r2
 800528e:	bf8c      	ite	hi
 8005290:	2200      	movhi	r2, #0
 8005292:	2201      	movls	r2, #1
 8005294:	2a00      	cmp	r2, #0
 8005296:	d1d6      	bne.n	8005246 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005298:	6821      	ldr	r1, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800529a:	4e3c      	ldr	r6, [pc, #240]	; (800538c <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800529c:	684a      	ldr	r2, [r1, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800529e:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80052a2:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 80052a6:	4332      	orrs	r2, r6
 80052a8:	604a      	str	r2, [r1, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80052aa:	4a35      	ldr	r2, [pc, #212]	; (8005380 <HAL_I2C_Init+0x140>)
 80052ac:	6a0d      	ldr	r5, [r1, #32]
 80052ae:	4293      	cmp	r3, r2
 80052b0:	bf84      	itt	hi
 80052b2:	f44f 7296 	movhi.w	r2, #300	; 0x12c
 80052b6:	4372      	mulhi	r2, r6
 80052b8:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 80052bc:	bf91      	iteee	ls
 80052be:	1c72      	addls	r2, r6, #1
 80052c0:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 80052c4:	fbb2 f2f6 	udivhi	r2, r2, r6
 80052c8:	3201      	addhi	r2, #1
 80052ca:	432a      	orrs	r2, r5
 80052cc:	620a      	str	r2, [r1, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80052ce:	69cd      	ldr	r5, [r1, #28]
 80052d0:	1e42      	subs	r2, r0, #1
 80052d2:	482b      	ldr	r0, [pc, #172]	; (8005380 <HAL_I2C_Init+0x140>)
 80052d4:	f425 454f 	bic.w	r5, r5, #52992	; 0xcf00
 80052d8:	4283      	cmp	r3, r0
 80052da:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 80052de:	d832      	bhi.n	8005346 <HAL_I2C_Init+0x106>
 80052e0:	005b      	lsls	r3, r3, #1
 80052e2:	fbb2 f3f3 	udiv	r3, r2, r3
 80052e6:	f640 72fc 	movw	r2, #4092	; 0xffc
 80052ea:	3301      	adds	r3, #1
 80052ec:	4213      	tst	r3, r2
 80052ee:	d042      	beq.n	8005376 <HAL_I2C_Init+0x136>
 80052f0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80052f4:	432b      	orrs	r3, r5
 80052f6:	61cb      	str	r3, [r1, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80052f8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80052fc:	680a      	ldr	r2, [r1, #0]
 80052fe:	4303      	orrs	r3, r0
 8005300:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 8005304:	4313      	orrs	r3, r2
 8005306:	600b      	str	r3, [r1, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8005308:	688a      	ldr	r2, [r1, #8]
 800530a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800530e:	f422 4203 	bic.w	r2, r2, #33536	; 0x8300
 8005312:	4303      	orrs	r3, r0
 8005314:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8005318:	4313      	orrs	r3, r2
 800531a:	608b      	str	r3, [r1, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800531c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8005320:	68ca      	ldr	r2, [r1, #12]
 8005322:	4303      	orrs	r3, r0
 8005324:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8005328:	4313      	orrs	r3, r2
 800532a:	60cb      	str	r3, [r1, #12]
  __HAL_I2C_ENABLE(hi2c);
 800532c:	680b      	ldr	r3, [r1, #0]
 800532e:	f043 0301 	orr.w	r3, r3, #1
 8005332:	600b      	str	r3, [r1, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005334:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8005336:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005338:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800533a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800533e:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005340:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8005344:	e780      	b.n	8005248 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005346:	68a0      	ldr	r0, [r4, #8]
 8005348:	b950      	cbnz	r0, 8005360 <HAL_I2C_Init+0x120>
 800534a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800534e:	fbb2 f3f3 	udiv	r3, r2, r3
 8005352:	3301      	adds	r3, #1
 8005354:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005358:	b17b      	cbz	r3, 800537a <HAL_I2C_Init+0x13a>
 800535a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800535e:	e7c9      	b.n	80052f4 <HAL_I2C_Init+0xb4>
 8005360:	2019      	movs	r0, #25
 8005362:	4343      	muls	r3, r0
 8005364:	fbb2 f3f3 	udiv	r3, r2, r3
 8005368:	3301      	adds	r3, #1
 800536a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800536e:	b123      	cbz	r3, 800537a <HAL_I2C_Init+0x13a>
 8005370:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005374:	e7be      	b.n	80052f4 <HAL_I2C_Init+0xb4>
 8005376:	2304      	movs	r3, #4
 8005378:	e7bc      	b.n	80052f4 <HAL_I2C_Init+0xb4>
 800537a:	2301      	movs	r3, #1
 800537c:	e7ba      	b.n	80052f4 <HAL_I2C_Init+0xb4>
 800537e:	bf00      	nop
 8005380:	000186a0 	.word	0x000186a0
 8005384:	001e847f 	.word	0x001e847f
 8005388:	003d08ff 	.word	0x003d08ff
 800538c:	000f4240 	.word	0x000f4240

08005390 <HAL_I2C_Mem_Write>:
{
 8005390:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005394:	4604      	mov	r4, r0
 8005396:	4699      	mov	r9, r3
 8005398:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800539a:	460f      	mov	r7, r1
 800539c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800539e:	f7ff faf9 	bl	8004994 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80053a2:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80053a6:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80053a8:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80053aa:	d003      	beq.n	80053b4 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 80053ac:	2002      	movs	r0, #2
}
 80053ae:	b003      	add	sp, #12
 80053b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80053b4:	9000      	str	r0, [sp, #0]
 80053b6:	493c      	ldr	r1, [pc, #240]	; (80054a8 <HAL_I2C_Mem_Write+0x118>)
 80053b8:	2319      	movs	r3, #25
 80053ba:	2201      	movs	r2, #1
 80053bc:	4620      	mov	r0, r4
 80053be:	f7ff fe0c 	bl	8004fda <I2C_WaitOnFlagUntilTimeout>
 80053c2:	2800      	cmp	r0, #0
 80053c4:	d1f2      	bne.n	80053ac <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80053c6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80053ca:	2b01      	cmp	r3, #1
 80053cc:	d0ee      	beq.n	80053ac <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80053ce:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80053d0:	2301      	movs	r3, #1
 80053d2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80053d6:	6803      	ldr	r3, [r0, #0]
 80053d8:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80053da:	bf5e      	ittt	pl
 80053dc:	6803      	ldrpl	r3, [r0, #0]
 80053de:	f043 0301 	orrpl.w	r3, r3, #1
 80053e2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80053e4:	6803      	ldr	r3, [r0, #0]
 80053e6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80053ea:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80053ec:	2321      	movs	r3, #33	; 0x21
 80053ee:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80053f2:	2340      	movs	r3, #64	; 0x40
 80053f4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80053f8:	2300      	movs	r3, #0
 80053fa:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80053fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80053fe:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005400:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8005404:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005406:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005408:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800540a:	4b28      	ldr	r3, [pc, #160]	; (80054ac <HAL_I2C_Mem_Write+0x11c>)
 800540c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800540e:	e9cd 6500 	strd	r6, r5, [sp]
 8005412:	464b      	mov	r3, r9
 8005414:	4642      	mov	r2, r8
 8005416:	4639      	mov	r1, r7
 8005418:	4620      	mov	r0, r4
 800541a:	f7ff fe37 	bl	800508c <I2C_RequestMemoryWrite>
 800541e:	2800      	cmp	r0, #0
 8005420:	d02a      	beq.n	8005478 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8005422:	2001      	movs	r0, #1
 8005424:	e7c3      	b.n	80053ae <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005426:	f7ff fe0a 	bl	800503e <I2C_WaitOnTXEFlagUntilTimeout>
 800542a:	b140      	cbz	r0, 800543e <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800542c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800542e:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005430:	bf01      	itttt	eq
 8005432:	6822      	ldreq	r2, [r4, #0]
 8005434:	6813      	ldreq	r3, [r2, #0]
 8005436:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800543a:	6013      	streq	r3, [r2, #0]
 800543c:	e7f1      	b.n	8005422 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800543e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005440:	6827      	ldr	r7, [r4, #0]
 8005442:	461a      	mov	r2, r3
 8005444:	f812 1b01 	ldrb.w	r1, [r2], #1
 8005448:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800544a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800544c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800544e:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005450:	3a01      	subs	r2, #1
 8005452:	b292      	uxth	r2, r2
 8005454:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005456:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8005458:	1e48      	subs	r0, r1, #1
 800545a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800545c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800545e:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005460:	d50a      	bpl.n	8005478 <HAL_I2C_Mem_Write+0xe8>
 8005462:	b148      	cbz	r0, 8005478 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005464:	785a      	ldrb	r2, [r3, #1]
 8005466:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005468:	3302      	adds	r3, #2
 800546a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800546c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800546e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005470:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8005472:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005474:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005476:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005478:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800547a:	462a      	mov	r2, r5
 800547c:	4631      	mov	r1, r6
 800547e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005480:	2b00      	cmp	r3, #0
 8005482:	d1d0      	bne.n	8005426 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005484:	f7ff fd54 	bl	8004f30 <I2C_WaitOnBTFFlagUntilTimeout>
 8005488:	2800      	cmp	r0, #0
 800548a:	d1cf      	bne.n	800542c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800548c:	6822      	ldr	r2, [r4, #0]
 800548e:	6813      	ldr	r3, [r2, #0]
 8005490:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005494:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005496:	2320      	movs	r3, #32
 8005498:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800549c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80054a0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 80054a4:	e783      	b.n	80053ae <HAL_I2C_Mem_Write+0x1e>
 80054a6:	bf00      	nop
 80054a8:	00100002 	.word	0x00100002
 80054ac:	ffff0000 	.word	0xffff0000

080054b0 <HAL_I2C_Mem_Read>:
{
 80054b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80054b4:	4604      	mov	r4, r0
 80054b6:	b087      	sub	sp, #28
 80054b8:	4699      	mov	r9, r3
 80054ba:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80054bc:	460d      	mov	r5, r1
 80054be:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80054c0:	f7ff fa68 	bl	8004994 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80054c4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80054c8:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80054ca:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80054cc:	d004      	beq.n	80054d8 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 80054ce:	2502      	movs	r5, #2
}
 80054d0:	4628      	mov	r0, r5
 80054d2:	b007      	add	sp, #28
 80054d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80054d8:	9000      	str	r0, [sp, #0]
 80054da:	4976      	ldr	r1, [pc, #472]	; (80056b4 <HAL_I2C_Mem_Read+0x204>)
 80054dc:	2319      	movs	r3, #25
 80054de:	2201      	movs	r2, #1
 80054e0:	4620      	mov	r0, r4
 80054e2:	f7ff fd7a 	bl	8004fda <I2C_WaitOnFlagUntilTimeout>
 80054e6:	2800      	cmp	r0, #0
 80054e8:	d1f1      	bne.n	80054ce <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80054ea:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80054ee:	2b01      	cmp	r3, #1
 80054f0:	d0ed      	beq.n	80054ce <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80054f2:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80054f4:	2301      	movs	r3, #1
 80054f6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80054fa:	6803      	ldr	r3, [r0, #0]
 80054fc:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80054fe:	bf5e      	ittt	pl
 8005500:	6803      	ldrpl	r3, [r0, #0]
 8005502:	f043 0301 	orrpl.w	r3, r3, #1
 8005506:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005508:	6803      	ldr	r3, [r0, #0]
 800550a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800550e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005510:	2322      	movs	r3, #34	; 0x22
 8005512:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005516:	2340      	movs	r3, #64	; 0x40
 8005518:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800551c:	2300      	movs	r3, #0
 800551e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005520:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005522:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005524:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8005528:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800552a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800552c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800552e:	4b62      	ldr	r3, [pc, #392]	; (80056b8 <HAL_I2C_Mem_Read+0x208>)
 8005530:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005532:	4629      	mov	r1, r5
 8005534:	e9cd 7600 	strd	r7, r6, [sp]
 8005538:	464b      	mov	r3, r9
 800553a:	4642      	mov	r2, r8
 800553c:	4620      	mov	r0, r4
 800553e:	f7ff fdfd 	bl	800513c <I2C_RequestMemoryRead>
 8005542:	4605      	mov	r5, r0
 8005544:	b108      	cbz	r0, 800554a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8005546:	2501      	movs	r5, #1
 8005548:	e7c2      	b.n	80054d0 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800554a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800554c:	6823      	ldr	r3, [r4, #0]
 800554e:	b9b2      	cbnz	r2, 800557e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005550:	9002      	str	r0, [sp, #8]
 8005552:	695a      	ldr	r2, [r3, #20]
 8005554:	9202      	str	r2, [sp, #8]
 8005556:	699a      	ldr	r2, [r3, #24]
 8005558:	9202      	str	r2, [sp, #8]
 800555a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800555c:	681a      	ldr	r2, [r3, #0]
 800555e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005562:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005564:	f8df 8154 	ldr.w	r8, [pc, #340]	; 80056bc <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8005568:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800556a:	2b00      	cmp	r3, #0
 800556c:	d12c      	bne.n	80055c8 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800556e:	2220      	movs	r2, #32
 8005570:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005574:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005578:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800557c:	e7a8      	b.n	80054d0 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800557e:	2a01      	cmp	r2, #1
 8005580:	d10a      	bne.n	8005598 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005582:	681a      	ldr	r2, [r3, #0]
 8005584:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005588:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800558a:	9003      	str	r0, [sp, #12]
 800558c:	695a      	ldr	r2, [r3, #20]
 800558e:	9203      	str	r2, [sp, #12]
 8005590:	699a      	ldr	r2, [r3, #24]
 8005592:	9203      	str	r2, [sp, #12]
 8005594:	9a03      	ldr	r2, [sp, #12]
 8005596:	e7e1      	b.n	800555c <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005598:	2a02      	cmp	r2, #2
 800559a:	d10e      	bne.n	80055ba <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800559c:	681a      	ldr	r2, [r3, #0]
 800559e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80055a2:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80055a4:	681a      	ldr	r2, [r3, #0]
 80055a6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80055aa:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80055ac:	9004      	str	r0, [sp, #16]
 80055ae:	695a      	ldr	r2, [r3, #20]
 80055b0:	9204      	str	r2, [sp, #16]
 80055b2:	699b      	ldr	r3, [r3, #24]
 80055b4:	9304      	str	r3, [sp, #16]
 80055b6:	9b04      	ldr	r3, [sp, #16]
 80055b8:	e7d4      	b.n	8005564 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80055ba:	9005      	str	r0, [sp, #20]
 80055bc:	695a      	ldr	r2, [r3, #20]
 80055be:	9205      	str	r2, [sp, #20]
 80055c0:	699b      	ldr	r3, [r3, #24]
 80055c2:	9305      	str	r3, [sp, #20]
 80055c4:	9b05      	ldr	r3, [sp, #20]
 80055c6:	e7cd      	b.n	8005564 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80055c8:	2b03      	cmp	r3, #3
 80055ca:	d856      	bhi.n	800567a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 80055cc:	2b01      	cmp	r3, #1
 80055ce:	d115      	bne.n	80055fc <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80055d0:	4632      	mov	r2, r6
 80055d2:	4639      	mov	r1, r7
 80055d4:	4620      	mov	r0, r4
 80055d6:	f7ff fcd1 	bl	8004f7c <I2C_WaitOnRXNEFlagUntilTimeout>
 80055da:	2800      	cmp	r0, #0
 80055dc:	d1b3      	bne.n	8005546 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055de:	6823      	ldr	r3, [r4, #0]
 80055e0:	691a      	ldr	r2, [r3, #16]
 80055e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80055e4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80055e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80055e8:	3301      	adds	r3, #1
 80055ea:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80055ec:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80055ee:	3b01      	subs	r3, #1
 80055f0:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80055f2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80055f4:	3b01      	subs	r3, #1
 80055f6:	b29b      	uxth	r3, r3
 80055f8:	8563      	strh	r3, [r4, #42]	; 0x2a
 80055fa:	e7b5      	b.n	8005568 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80055fc:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80055fe:	9600      	str	r6, [sp, #0]
 8005600:	463b      	mov	r3, r7
 8005602:	f04f 0200 	mov.w	r2, #0
 8005606:	4641      	mov	r1, r8
 8005608:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800560a:	d119      	bne.n	8005640 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800560c:	f7ff fce5 	bl	8004fda <I2C_WaitOnFlagUntilTimeout>
 8005610:	2800      	cmp	r0, #0
 8005612:	d198      	bne.n	8005546 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005614:	6823      	ldr	r3, [r4, #0]
 8005616:	681a      	ldr	r2, [r3, #0]
 8005618:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800561c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800561e:	691a      	ldr	r2, [r3, #16]
 8005620:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005622:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005624:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005626:	1c53      	adds	r3, r2, #1
 8005628:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800562a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800562c:	3b01      	subs	r3, #1
 800562e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005630:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005632:	3b01      	subs	r3, #1
 8005634:	b29b      	uxth	r3, r3
 8005636:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005638:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800563a:	691b      	ldr	r3, [r3, #16]
 800563c:	7053      	strb	r3, [r2, #1]
 800563e:	e7d2      	b.n	80055e6 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005640:	f7ff fccb 	bl	8004fda <I2C_WaitOnFlagUntilTimeout>
 8005644:	2800      	cmp	r0, #0
 8005646:	f47f af7e 	bne.w	8005546 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800564a:	6823      	ldr	r3, [r4, #0]
 800564c:	681a      	ldr	r2, [r3, #0]
 800564e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005652:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005654:	691a      	ldr	r2, [r3, #16]
 8005656:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005658:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800565a:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800565c:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800565e:	3301      	adds	r3, #1
 8005660:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005662:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005664:	3b01      	subs	r3, #1
 8005666:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005668:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800566a:	3b01      	subs	r3, #1
 800566c:	b29b      	uxth	r3, r3
 800566e:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005670:	4602      	mov	r2, r0
 8005672:	463b      	mov	r3, r7
 8005674:	4641      	mov	r1, r8
 8005676:	4620      	mov	r0, r4
 8005678:	e7c8      	b.n	800560c <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800567a:	4632      	mov	r2, r6
 800567c:	4639      	mov	r1, r7
 800567e:	4620      	mov	r0, r4
 8005680:	f7ff fc7c 	bl	8004f7c <I2C_WaitOnRXNEFlagUntilTimeout>
 8005684:	2800      	cmp	r0, #0
 8005686:	f47f af5e 	bne.w	8005546 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800568a:	6823      	ldr	r3, [r4, #0]
 800568c:	691a      	ldr	r2, [r3, #16]
 800568e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005690:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8005692:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005694:	1c53      	adds	r3, r2, #1
 8005696:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8005698:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800569a:	3b01      	subs	r3, #1
 800569c:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800569e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80056a0:	3b01      	subs	r3, #1
 80056a2:	b29b      	uxth	r3, r3
 80056a4:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80056a6:	6823      	ldr	r3, [r4, #0]
 80056a8:	6959      	ldr	r1, [r3, #20]
 80056aa:	0749      	lsls	r1, r1, #29
 80056ac:	f57f af5c 	bpl.w	8005568 <HAL_I2C_Mem_Read+0xb8>
 80056b0:	e7c3      	b.n	800563a <HAL_I2C_Mem_Read+0x18a>
 80056b2:	bf00      	nop
 80056b4:	00100002 	.word	0x00100002
 80056b8:	ffff0000 	.word	0xffff0000
 80056bc:	00010004 	.word	0x00010004

080056c0 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80056c0:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80056c2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80056c6:	2b20      	cmp	r3, #32
 80056c8:	b2dc      	uxtb	r4, r3
 80056ca:	d116      	bne.n	80056fa <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80056cc:	2324      	movs	r3, #36	; 0x24
 80056ce:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80056d2:	6803      	ldr	r3, [r0, #0]
 80056d4:	681a      	ldr	r2, [r3, #0]
 80056d6:	f022 0201 	bic.w	r2, r2, #1
 80056da:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 80056dc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80056de:	f022 0210 	bic.w	r2, r2, #16
 80056e2:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80056e4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80056e6:	4311      	orrs	r1, r2
 80056e8:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80056ea:	681a      	ldr	r2, [r3, #0]
 80056ec:	f042 0201 	orr.w	r2, r2, #1
 80056f0:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80056f2:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80056f6:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80056f8:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80056fa:	2002      	movs	r0, #2
 80056fc:	e7fc      	b.n	80056f8 <HAL_I2CEx_ConfigAnalogFilter+0x38>

080056fe <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80056fe:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005700:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005704:	2b20      	cmp	r3, #32
 8005706:	b2dc      	uxtb	r4, r3
 8005708:	d116      	bne.n	8005738 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800570a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800570c:	2324      	movs	r3, #36	; 0x24
 800570e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8005712:	6813      	ldr	r3, [r2, #0]
 8005714:	f023 0301 	bic.w	r3, r3, #1
 8005718:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 800571a:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 800571c:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8005720:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8005722:	4319      	orrs	r1, r3

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8005724:	b289      	uxth	r1, r1
 8005726:	6251      	str	r1, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005728:	6813      	ldr	r3, [r2, #0]
 800572a:	f043 0301 	orr.w	r3, r3, #1
 800572e:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005730:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8005734:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005736:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8005738:	2002      	movs	r0, #2
 800573a:	e7fc      	b.n	8005736 <HAL_I2CEx_ConfigDigitalFilter+0x38>

0800573c <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 800573c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005740:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005742:	6804      	ldr	r4, [r0, #0]
 8005744:	684f      	ldr	r7, [r1, #4]
 8005746:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005748:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800574c:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005750:	3284      	adds	r2, #132	; 0x84
 8005752:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005754:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005758:	6858      	ldr	r0, [r3, #4]
 800575a:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800575e:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005760:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005762:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005766:	f3c0 400b 	ubfx	r0, r0, #16, #12
 800576a:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800576c:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800576e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005772:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005774:	68e0      	ldr	r0, [r4, #12]
 8005776:	68cd      	ldr	r5, [r1, #12]
 8005778:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800577c:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800577e:	6898      	ldr	r0, [r3, #8]
 8005780:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8005784:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005786:	68e6      	ldr	r6, [r4, #12]
 8005788:	6888      	ldr	r0, [r1, #8]
 800578a:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800578e:	3001      	adds	r0, #1
 8005790:	4430      	add	r0, r6
 8005792:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005796:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005798:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800579a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800579c:	f020 0007 	bic.w	r0, r0, #7
 80057a0:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80057a2:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80057a6:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80057a8:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80057aa:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80057ae:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80057b2:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80057b6:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80057ba:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80057be:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80057c2:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80057c6:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80057c8:	6958      	ldr	r0, [r3, #20]
 80057ca:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 80057ce:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80057d0:	6948      	ldr	r0, [r1, #20]
 80057d2:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80057d4:	69d8      	ldr	r0, [r3, #28]
 80057d6:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 80057da:	f020 0007 	bic.w	r0, r0, #7
 80057de:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80057e0:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 80057e4:	4305      	orrs	r5, r0
 80057e6:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80057e8:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80057ea:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80057ec:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80057f0:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80057f2:	b31e      	cbz	r6, 800583c <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80057f4:	2e01      	cmp	r6, #1
 80057f6:	d023      	beq.n	8005840 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80057f8:	1eb0      	subs	r0, r6, #2
 80057fa:	2802      	cmp	r0, #2
 80057fc:	d922      	bls.n	8005844 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80057fe:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8005800:	bf0c      	ite	eq
 8005802:	2002      	moveq	r0, #2
 8005804:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005806:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8005808:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 800580c:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800580e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005810:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005812:	eba7 070c 	sub.w	r7, r7, ip
 8005816:	4345      	muls	r5, r0
 8005818:	4378      	muls	r0, r7
 800581a:	3003      	adds	r0, #3
 800581c:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005820:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005822:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8005824:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 8005828:	f020 0007 	bic.w	r0, r0, #7
 800582c:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800582e:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005830:	58a3      	ldr	r3, [r4, r2]
 8005832:	f043 0301 	orr.w	r3, r3, #1
 8005836:	50a3      	str	r3, [r4, r2]
}
 8005838:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800583c:	2004      	movs	r0, #4
 800583e:	e7e2      	b.n	8005806 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005840:	2003      	movs	r0, #3
 8005842:	e7e0      	b.n	8005806 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005844:	2002      	movs	r0, #2
 8005846:	e7de      	b.n	8005806 <LTDC_SetConfig+0xca>

08005848 <HAL_LTDC_Init>:
{
 8005848:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800584a:	4604      	mov	r4, r0
 800584c:	2800      	cmp	r0, #0
 800584e:	d063      	beq.n	8005918 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005850:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005854:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005858:	b91b      	cbnz	r3, 8005862 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800585a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800585e:	f7fc f959 	bl	8001b14 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005862:	2302      	movs	r3, #2
 8005864:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005868:	6823      	ldr	r3, [r4, #0]
 800586a:	699a      	ldr	r2, [r3, #24]
 800586c:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005870:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005872:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005876:	4302      	orrs	r2, r0
 8005878:	68e0      	ldr	r0, [r4, #12]
 800587a:	6999      	ldr	r1, [r3, #24]
 800587c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800587e:	6920      	ldr	r0, [r4, #16]
 8005880:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005882:	430a      	orrs	r2, r1
 8005884:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005886:	689a      	ldr	r2, [r3, #8]
 8005888:	4924      	ldr	r1, [pc, #144]	; (800591c <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800588a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800588c:	400a      	ands	r2, r1
 800588e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005890:	689a      	ldr	r2, [r3, #8]
 8005892:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005896:	69a0      	ldr	r0, [r4, #24]
 8005898:	4302      	orrs	r2, r0
 800589a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800589c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800589e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80058a0:	400a      	ands	r2, r1
 80058a2:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80058a4:	68da      	ldr	r2, [r3, #12]
 80058a6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80058aa:	6a20      	ldr	r0, [r4, #32]
 80058ac:	4302      	orrs	r2, r0
 80058ae:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80058b0:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80058b2:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80058b4:	400a      	ands	r2, r1
 80058b6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80058b8:	691a      	ldr	r2, [r3, #16]
 80058ba:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80058be:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80058c0:	4302      	orrs	r2, r0
 80058c2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80058c4:	695a      	ldr	r2, [r3, #20]
 80058c6:	4011      	ands	r1, r2
 80058c8:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80058ca:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80058cc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80058ce:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80058d2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80058d4:	430a      	orrs	r2, r1
 80058d6:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80058d8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80058da:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80058de:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80058e2:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 80058e6:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80058e8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80058ea:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80058ee:	430a      	orrs	r2, r1
 80058f0:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80058f4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80058f8:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80058fa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80058fc:	f042 0206 	orr.w	r2, r2, #6
 8005900:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005902:	699a      	ldr	r2, [r3, #24]
 8005904:	f042 0201 	orr.w	r2, r2, #1
 8005908:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800590a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800590c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800590e:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005912:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8005916:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005918:	2001      	movs	r0, #1
 800591a:	e7fc      	b.n	8005916 <HAL_LTDC_Init+0xce>
 800591c:	f000f800 	.word	0xf000f800

08005920 <HAL_LTDC_ErrorCallback>:
 8005920:	4770      	bx	lr

08005922 <HAL_LTDC_ReloadEventCallback>:
 8005922:	4770      	bx	lr

08005924 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005924:	6803      	ldr	r3, [r0, #0]
{
 8005926:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005928:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800592a:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800592c:	0772      	lsls	r2, r6, #29
{
 800592e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005930:	d514      	bpl.n	800595c <HAL_LTDC_IRQHandler+0x38>
 8005932:	0769      	lsls	r1, r5, #29
 8005934:	d512      	bpl.n	800595c <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005936:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005938:	f022 0204 	bic.w	r2, r2, #4
 800593c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800593e:	2204      	movs	r2, #4
 8005940:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005942:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005946:	f043 0301 	orr.w	r3, r3, #1
 800594a:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800594e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005950:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005954:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005958:	f7ff ffe2 	bl	8005920 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800595c:	07b2      	lsls	r2, r6, #30
 800595e:	d516      	bpl.n	800598e <HAL_LTDC_IRQHandler+0x6a>
 8005960:	07ab      	lsls	r3, r5, #30
 8005962:	d514      	bpl.n	800598e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005964:	6823      	ldr	r3, [r4, #0]
 8005966:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005968:	f022 0202 	bic.w	r2, r2, #2
 800596c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800596e:	2202      	movs	r2, #2
 8005970:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005972:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8005976:	4313      	orrs	r3, r2
 8005978:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800597c:	2304      	movs	r3, #4
 800597e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005982:	2300      	movs	r3, #0
 8005984:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005988:	4620      	mov	r0, r4
 800598a:	f7ff ffc9 	bl	8005920 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800598e:	07f0      	lsls	r0, r6, #31
 8005990:	d510      	bpl.n	80059b4 <HAL_LTDC_IRQHandler+0x90>
 8005992:	07e9      	lsls	r1, r5, #31
 8005994:	d50e      	bpl.n	80059b4 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005996:	6823      	ldr	r3, [r4, #0]
 8005998:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800599a:	f022 0201 	bic.w	r2, r2, #1
 800599e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80059a0:	2201      	movs	r2, #1
 80059a2:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80059a4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80059a6:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80059aa:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80059ae:	4620      	mov	r0, r4
 80059b0:	f7fb fb78 	bl	80010a4 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80059b4:	0732      	lsls	r2, r6, #28
 80059b6:	d511      	bpl.n	80059dc <HAL_LTDC_IRQHandler+0xb8>
 80059b8:	072b      	lsls	r3, r5, #28
 80059ba:	d50f      	bpl.n	80059dc <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80059bc:	6823      	ldr	r3, [r4, #0]
 80059be:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80059c0:	f022 0208 	bic.w	r2, r2, #8
 80059c4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80059c6:	2208      	movs	r2, #8
 80059c8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80059ca:	2301      	movs	r3, #1
 80059cc:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80059d0:	2300      	movs	r3, #0
 80059d2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80059d6:	4620      	mov	r0, r4
 80059d8:	f7ff ffa3 	bl	8005922 <HAL_LTDC_ReloadEventCallback>
}
 80059dc:	bd70      	pop	{r4, r5, r6, pc}

080059de <HAL_LTDC_ConfigLayer>:
{
 80059de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80059e2:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80059e6:	2b01      	cmp	r3, #1
{
 80059e8:	4606      	mov	r6, r0
 80059ea:	460f      	mov	r7, r1
 80059ec:	4694      	mov	ip, r2
 80059ee:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80059f2:	d01f      	beq.n	8005a34 <HAL_LTDC_ConfigLayer+0x56>
 80059f4:	f04f 0801 	mov.w	r8, #1
 80059f8:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80059fc:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005a00:	2434      	movs	r4, #52	; 0x34
 8005a02:	460d      	mov	r5, r1
 8005a04:	fb04 6402 	mla	r4, r4, r2, r6
 8005a08:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005a0a:	3438      	adds	r4, #56	; 0x38
 8005a0c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005a0e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005a10:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005a12:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005a14:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005a16:	682b      	ldr	r3, [r5, #0]
 8005a18:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005a1a:	4630      	mov	r0, r6
 8005a1c:	4662      	mov	r2, ip
 8005a1e:	4639      	mov	r1, r7
 8005a20:	f7ff fe8c 	bl	800573c <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005a24:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005a26:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005a28:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005a2c:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005a30:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8005a34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005a38 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005a38:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005a3c:	2b01      	cmp	r3, #1
 8005a3e:	f04f 0302 	mov.w	r3, #2
 8005a42:	d012      	beq.n	8005a6a <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005a44:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005a48:	6803      	ldr	r3, [r0, #0]
 8005a4a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005a4c:	f022 0201 	bic.w	r2, r2, #1
 8005a50:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005a52:	4a07      	ldr	r2, [pc, #28]	; (8005a70 <HAL_LTDC_ProgramLineEvent+0x38>)
 8005a54:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005a56:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005a58:	f042 0201 	orr.w	r2, r2, #1
 8005a5c:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8005a5e:	2301      	movs	r3, #1
 8005a60:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005a64:	2300      	movs	r3, #0
 8005a66:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8005a6a:	4618      	mov	r0, r3
}
 8005a6c:	4770      	bx	lr
 8005a6e:	bf00      	nop
 8005a70:	40016800 	.word	0x40016800

08005a74 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8005a74:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 8005a76:	2300      	movs	r3, #0
 8005a78:	9301      	str	r3, [sp, #4]
 8005a7a:	4b18      	ldr	r3, [pc, #96]	; (8005adc <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005a7c:	4d18      	ldr	r5, [pc, #96]	; (8005ae0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8005a7e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005a80:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005a84:	641a      	str	r2, [r3, #64]	; 0x40
 8005a86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a88:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005a8c:	9301      	str	r3, [sp, #4]
 8005a8e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005a90:	4b14      	ldr	r3, [pc, #80]	; (8005ae4 <HAL_PWREx_EnableOverDrive+0x70>)
 8005a92:	2201      	movs	r2, #1
 8005a94:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 8005a96:	f7fe ff7d 	bl	8004994 <HAL_GetTick>
 8005a9a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005a9c:	686b      	ldr	r3, [r5, #4]
 8005a9e:	03da      	lsls	r2, r3, #15
 8005aa0:	d50b      	bpl.n	8005aba <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005aa2:	4b11      	ldr	r3, [pc, #68]	; (8005ae8 <HAL_PWREx_EnableOverDrive+0x74>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005aa4:	4d0e      	ldr	r5, [pc, #56]	; (8005ae0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005aa6:	2201      	movs	r2, #1
 8005aa8:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 8005aaa:	f7fe ff73 	bl	8004994 <HAL_GetTick>
 8005aae:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005ab0:	686b      	ldr	r3, [r5, #4]
 8005ab2:	039b      	lsls	r3, r3, #14
 8005ab4:	d50a      	bpl.n	8005acc <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8005ab6:	2000      	movs	r0, #0
 8005ab8:	e006      	b.n	8005ac8 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005aba:	f7fe ff6b 	bl	8004994 <HAL_GetTick>
 8005abe:	1b00      	subs	r0, r0, r4
 8005ac0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005ac4:	d9ea      	bls.n	8005a9c <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8005ac6:	2003      	movs	r0, #3
}
 8005ac8:	b003      	add	sp, #12
 8005aca:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005acc:	f7fe ff62 	bl	8004994 <HAL_GetTick>
 8005ad0:	1b00      	subs	r0, r0, r4
 8005ad2:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005ad6:	d9eb      	bls.n	8005ab0 <HAL_PWREx_EnableOverDrive+0x3c>
 8005ad8:	e7f5      	b.n	8005ac6 <HAL_PWREx_EnableOverDrive+0x52>
 8005ada:	bf00      	nop
 8005adc:	40023800 	.word	0x40023800
 8005ae0:	40007000 	.word	0x40007000
 8005ae4:	420e0040 	.word	0x420e0040
 8005ae8:	420e0044 	.word	0x420e0044

08005aec <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005aec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8005af0:	4604      	mov	r4, r0
 8005af2:	b340      	cbz	r0, 8005b46 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005af4:	6803      	ldr	r3, [r0, #0]
 8005af6:	07dd      	lsls	r5, r3, #31
 8005af8:	d410      	bmi.n	8005b1c <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005afa:	6823      	ldr	r3, [r4, #0]
 8005afc:	0798      	lsls	r0, r3, #30
 8005afe:	d45e      	bmi.n	8005bbe <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005b00:	6823      	ldr	r3, [r4, #0]
 8005b02:	071a      	lsls	r2, r3, #28
 8005b04:	f100 80a0 	bmi.w	8005c48 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005b08:	6823      	ldr	r3, [r4, #0]
 8005b0a:	075b      	lsls	r3, r3, #29
 8005b0c:	f100 80be 	bmi.w	8005c8c <HAL_RCC_OscConfig+0x1a0>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005b10:	69a0      	ldr	r0, [r4, #24]
 8005b12:	2800      	cmp	r0, #0
 8005b14:	f040 811f 	bne.w	8005d56 <HAL_RCC_OscConfig+0x26a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8005b18:	2000      	movs	r0, #0
 8005b1a:	e02b      	b.n	8005b74 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005b1c:	4ba6      	ldr	r3, [pc, #664]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
 8005b1e:	689a      	ldr	r2, [r3, #8]
 8005b20:	f002 020c 	and.w	r2, r2, #12
 8005b24:	2a04      	cmp	r2, #4
 8005b26:	d007      	beq.n	8005b38 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005b28:	689a      	ldr	r2, [r3, #8]
 8005b2a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005b2e:	2a08      	cmp	r2, #8
 8005b30:	d10b      	bne.n	8005b4a <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005b32:	685a      	ldr	r2, [r3, #4]
 8005b34:	0251      	lsls	r1, r2, #9
 8005b36:	d508      	bpl.n	8005b4a <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005b38:	4b9f      	ldr	r3, [pc, #636]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
 8005b3a:	681b      	ldr	r3, [r3, #0]
 8005b3c:	039a      	lsls	r2, r3, #14
 8005b3e:	d5dc      	bpl.n	8005afa <HAL_RCC_OscConfig+0xe>
 8005b40:	6863      	ldr	r3, [r4, #4]
 8005b42:	2b00      	cmp	r3, #0
 8005b44:	d1d9      	bne.n	8005afa <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8005b46:	2001      	movs	r0, #1
 8005b48:	e014      	b.n	8005b74 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005b4a:	6862      	ldr	r2, [r4, #4]
 8005b4c:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8005b50:	d113      	bne.n	8005b7a <HAL_RCC_OscConfig+0x8e>
 8005b52:	681a      	ldr	r2, [r3, #0]
 8005b54:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8005b58:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005b5a:	f7fe ff1b 	bl	8004994 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005b5e:	4e96      	ldr	r6, [pc, #600]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
        tickstart = HAL_GetTick();
 8005b60:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005b62:	6833      	ldr	r3, [r6, #0]
 8005b64:	039b      	lsls	r3, r3, #14
 8005b66:	d4c8      	bmi.n	8005afa <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005b68:	f7fe ff14 	bl	8004994 <HAL_GetTick>
 8005b6c:	1b40      	subs	r0, r0, r5
 8005b6e:	2864      	cmp	r0, #100	; 0x64
 8005b70:	d9f7      	bls.n	8005b62 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8005b72:	2003      	movs	r0, #3
}
 8005b74:	b002      	add	sp, #8
 8005b76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005b7a:	4d8f      	ldr	r5, [pc, #572]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
 8005b7c:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8005b80:	682b      	ldr	r3, [r5, #0]
 8005b82:	d107      	bne.n	8005b94 <HAL_RCC_OscConfig+0xa8>
 8005b84:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005b88:	602b      	str	r3, [r5, #0]
 8005b8a:	682b      	ldr	r3, [r5, #0]
 8005b8c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005b90:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005b92:	e7e2      	b.n	8005b5a <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005b94:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005b98:	602b      	str	r3, [r5, #0]
 8005b9a:	682b      	ldr	r3, [r5, #0]
 8005b9c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005ba0:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005ba2:	2a00      	cmp	r2, #0
 8005ba4:	d1d9      	bne.n	8005b5a <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8005ba6:	f7fe fef5 	bl	8004994 <HAL_GetTick>
 8005baa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005bac:	682b      	ldr	r3, [r5, #0]
 8005bae:	039f      	lsls	r7, r3, #14
 8005bb0:	d5a3      	bpl.n	8005afa <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005bb2:	f7fe feef 	bl	8004994 <HAL_GetTick>
 8005bb6:	1b80      	subs	r0, r0, r6
 8005bb8:	2864      	cmp	r0, #100	; 0x64
 8005bba:	d9f7      	bls.n	8005bac <HAL_RCC_OscConfig+0xc0>
 8005bbc:	e7d9      	b.n	8005b72 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005bbe:	4b7e      	ldr	r3, [pc, #504]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
 8005bc0:	689a      	ldr	r2, [r3, #8]
 8005bc2:	f012 0f0c 	tst.w	r2, #12
 8005bc6:	d007      	beq.n	8005bd8 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005bc8:	689a      	ldr	r2, [r3, #8]
 8005bca:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8005bce:	2a08      	cmp	r2, #8
 8005bd0:	d111      	bne.n	8005bf6 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005bd2:	685b      	ldr	r3, [r3, #4]
 8005bd4:	025e      	lsls	r6, r3, #9
 8005bd6:	d40e      	bmi.n	8005bf6 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005bd8:	4b77      	ldr	r3, [pc, #476]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
 8005bda:	681a      	ldr	r2, [r3, #0]
 8005bdc:	0795      	lsls	r5, r2, #30
 8005bde:	d502      	bpl.n	8005be6 <HAL_RCC_OscConfig+0xfa>
 8005be0:	68e2      	ldr	r2, [r4, #12]
 8005be2:	2a01      	cmp	r2, #1
 8005be4:	d1af      	bne.n	8005b46 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005be6:	681a      	ldr	r2, [r3, #0]
 8005be8:	6921      	ldr	r1, [r4, #16]
 8005bea:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8005bee:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 8005bf2:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005bf4:	e784      	b.n	8005b00 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8005bf6:	68e2      	ldr	r2, [r4, #12]
 8005bf8:	4b70      	ldr	r3, [pc, #448]	; (8005dbc <HAL_RCC_OscConfig+0x2d0>)
 8005bfa:	b1b2      	cbz	r2, 8005c2a <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8005bfc:	2201      	movs	r2, #1
 8005bfe:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005c00:	f7fe fec8 	bl	8004994 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005c04:	4d6c      	ldr	r5, [pc, #432]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
        tickstart = HAL_GetTick();
 8005c06:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005c08:	682b      	ldr	r3, [r5, #0]
 8005c0a:	0798      	lsls	r0, r3, #30
 8005c0c:	d507      	bpl.n	8005c1e <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005c0e:	682b      	ldr	r3, [r5, #0]
 8005c10:	6922      	ldr	r2, [r4, #16]
 8005c12:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8005c16:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8005c1a:	602b      	str	r3, [r5, #0]
 8005c1c:	e770      	b.n	8005b00 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005c1e:	f7fe feb9 	bl	8004994 <HAL_GetTick>
 8005c22:	1b80      	subs	r0, r0, r6
 8005c24:	2802      	cmp	r0, #2
 8005c26:	d9ef      	bls.n	8005c08 <HAL_RCC_OscConfig+0x11c>
 8005c28:	e7a3      	b.n	8005b72 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8005c2a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005c2c:	f7fe feb2 	bl	8004994 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005c30:	4e61      	ldr	r6, [pc, #388]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
        tickstart = HAL_GetTick();
 8005c32:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005c34:	6833      	ldr	r3, [r6, #0]
 8005c36:	0799      	lsls	r1, r3, #30
 8005c38:	f57f af62 	bpl.w	8005b00 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005c3c:	f7fe feaa 	bl	8004994 <HAL_GetTick>
 8005c40:	1b40      	subs	r0, r0, r5
 8005c42:	2802      	cmp	r0, #2
 8005c44:	d9f6      	bls.n	8005c34 <HAL_RCC_OscConfig+0x148>
 8005c46:	e794      	b.n	8005b72 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8005c48:	6962      	ldr	r2, [r4, #20]
 8005c4a:	4b5d      	ldr	r3, [pc, #372]	; (8005dc0 <HAL_RCC_OscConfig+0x2d4>)
 8005c4c:	b17a      	cbz	r2, 8005c6e <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 8005c4e:	2201      	movs	r2, #1
 8005c50:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8005c52:	f7fe fe9f 	bl	8004994 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005c56:	4e58      	ldr	r6, [pc, #352]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
      tickstart = HAL_GetTick();
 8005c58:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005c5a:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8005c5c:	079f      	lsls	r7, r3, #30
 8005c5e:	f53f af53 	bmi.w	8005b08 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005c62:	f7fe fe97 	bl	8004994 <HAL_GetTick>
 8005c66:	1b40      	subs	r0, r0, r5
 8005c68:	2802      	cmp	r0, #2
 8005c6a:	d9f6      	bls.n	8005c5a <HAL_RCC_OscConfig+0x16e>
 8005c6c:	e781      	b.n	8005b72 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8005c6e:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8005c70:	f7fe fe90 	bl	8004994 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005c74:	4e50      	ldr	r6, [pc, #320]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
      tickstart = HAL_GetTick();
 8005c76:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005c78:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8005c7a:	0798      	lsls	r0, r3, #30
 8005c7c:	f57f af44 	bpl.w	8005b08 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005c80:	f7fe fe88 	bl	8004994 <HAL_GetTick>
 8005c84:	1b40      	subs	r0, r0, r5
 8005c86:	2802      	cmp	r0, #2
 8005c88:	d9f6      	bls.n	8005c78 <HAL_RCC_OscConfig+0x18c>
 8005c8a:	e772      	b.n	8005b72 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005c8c:	4b4a      	ldr	r3, [pc, #296]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
 8005c8e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005c90:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8005c94:	d128      	bne.n	8005ce8 <HAL_RCC_OscConfig+0x1fc>
      __HAL_RCC_PWR_CLK_ENABLE();
 8005c96:	9201      	str	r2, [sp, #4]
 8005c98:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005c9a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005c9e:	641a      	str	r2, [r3, #64]	; 0x40
 8005ca0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005ca2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005ca6:	9301      	str	r3, [sp, #4]
 8005ca8:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8005caa:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005cac:	4d45      	ldr	r5, [pc, #276]	; (8005dc4 <HAL_RCC_OscConfig+0x2d8>)
 8005cae:	682b      	ldr	r3, [r5, #0]
 8005cb0:	05d9      	lsls	r1, r3, #23
 8005cb2:	d51b      	bpl.n	8005cec <HAL_RCC_OscConfig+0x200>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005cb4:	68a3      	ldr	r3, [r4, #8]
 8005cb6:	4d40      	ldr	r5, [pc, #256]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
 8005cb8:	2b01      	cmp	r3, #1
 8005cba:	d127      	bne.n	8005d0c <HAL_RCC_OscConfig+0x220>
 8005cbc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005cbe:	f043 0301 	orr.w	r3, r3, #1
 8005cc2:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8005cc4:	f7fe fe66 	bl	8004994 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005cc8:	4e3b      	ldr	r6, [pc, #236]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
      tickstart = HAL_GetTick();
 8005cca:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005ccc:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005cd0:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8005cd2:	079b      	lsls	r3, r3, #30
 8005cd4:	d539      	bpl.n	8005d4a <HAL_RCC_OscConfig+0x25e>
    if(pwrclkchanged == SET)
 8005cd6:	2f00      	cmp	r7, #0
 8005cd8:	f43f af1a 	beq.w	8005b10 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8005cdc:	4a36      	ldr	r2, [pc, #216]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
 8005cde:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8005ce0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005ce4:	6413      	str	r3, [r2, #64]	; 0x40
 8005ce6:	e713      	b.n	8005b10 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8005ce8:	2700      	movs	r7, #0
 8005cea:	e7df      	b.n	8005cac <HAL_RCC_OscConfig+0x1c0>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005cec:	682b      	ldr	r3, [r5, #0]
 8005cee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005cf2:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8005cf4:	f7fe fe4e 	bl	8004994 <HAL_GetTick>
 8005cf8:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005cfa:	682b      	ldr	r3, [r5, #0]
 8005cfc:	05da      	lsls	r2, r3, #23
 8005cfe:	d4d9      	bmi.n	8005cb4 <HAL_RCC_OscConfig+0x1c8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005d00:	f7fe fe48 	bl	8004994 <HAL_GetTick>
 8005d04:	1b80      	subs	r0, r0, r6
 8005d06:	2802      	cmp	r0, #2
 8005d08:	d9f7      	bls.n	8005cfa <HAL_RCC_OscConfig+0x20e>
 8005d0a:	e732      	b.n	8005b72 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005d0c:	2b05      	cmp	r3, #5
 8005d0e:	d104      	bne.n	8005d1a <HAL_RCC_OscConfig+0x22e>
 8005d10:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005d12:	f043 0304 	orr.w	r3, r3, #4
 8005d16:	672b      	str	r3, [r5, #112]	; 0x70
 8005d18:	e7d0      	b.n	8005cbc <HAL_RCC_OscConfig+0x1d0>
 8005d1a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8005d1c:	f022 0201 	bic.w	r2, r2, #1
 8005d20:	672a      	str	r2, [r5, #112]	; 0x70
 8005d22:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8005d24:	f022 0204 	bic.w	r2, r2, #4
 8005d28:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005d2a:	2b00      	cmp	r3, #0
 8005d2c:	d1ca      	bne.n	8005cc4 <HAL_RCC_OscConfig+0x1d8>
      tickstart = HAL_GetTick();
 8005d2e:	f7fe fe31 	bl	8004994 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005d32:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8005d36:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005d38:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005d3a:	0798      	lsls	r0, r3, #30
 8005d3c:	d5cb      	bpl.n	8005cd6 <HAL_RCC_OscConfig+0x1ea>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005d3e:	f7fe fe29 	bl	8004994 <HAL_GetTick>
 8005d42:	1b80      	subs	r0, r0, r6
 8005d44:	4540      	cmp	r0, r8
 8005d46:	d9f7      	bls.n	8005d38 <HAL_RCC_OscConfig+0x24c>
 8005d48:	e713      	b.n	8005b72 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005d4a:	f7fe fe23 	bl	8004994 <HAL_GetTick>
 8005d4e:	1b40      	subs	r0, r0, r5
 8005d50:	4540      	cmp	r0, r8
 8005d52:	d9bd      	bls.n	8005cd0 <HAL_RCC_OscConfig+0x1e4>
 8005d54:	e70d      	b.n	8005b72 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005d56:	4d18      	ldr	r5, [pc, #96]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
 8005d58:	68ab      	ldr	r3, [r5, #8]
 8005d5a:	f003 030c 	and.w	r3, r3, #12
 8005d5e:	2b08      	cmp	r3, #8
 8005d60:	d047      	beq.n	8005df2 <HAL_RCC_OscConfig+0x306>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005d62:	4e19      	ldr	r6, [pc, #100]	; (8005dc8 <HAL_RCC_OscConfig+0x2dc>)
 8005d64:	2300      	movs	r3, #0
 8005d66:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8005d68:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005d6a:	d135      	bne.n	8005dd8 <HAL_RCC_OscConfig+0x2ec>
        tickstart = HAL_GetTick();
 8005d6c:	f7fe fe12 	bl	8004994 <HAL_GetTick>
 8005d70:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005d72:	682b      	ldr	r3, [r5, #0]
 8005d74:	0199      	lsls	r1, r3, #6
 8005d76:	d429      	bmi.n	8005dcc <HAL_RCC_OscConfig+0x2e0>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005d78:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8005d7c:	4313      	orrs	r3, r2
 8005d7e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005d80:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005d84:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005d86:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8005d8a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005d8c:	0852      	lsrs	r2, r2, #1
 8005d8e:	3a01      	subs	r2, #1
 8005d90:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005d94:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8005d96:	2301      	movs	r3, #1
 8005d98:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8005d9a:	f7fe fdfb 	bl	8004994 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005d9e:	4d06      	ldr	r5, [pc, #24]	; (8005db8 <HAL_RCC_OscConfig+0x2cc>)
        tickstart = HAL_GetTick();
 8005da0:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005da2:	682b      	ldr	r3, [r5, #0]
 8005da4:	019a      	lsls	r2, r3, #6
 8005da6:	f53f aeb7 	bmi.w	8005b18 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005daa:	f7fe fdf3 	bl	8004994 <HAL_GetTick>
 8005dae:	1b00      	subs	r0, r0, r4
 8005db0:	2802      	cmp	r0, #2
 8005db2:	d9f6      	bls.n	8005da2 <HAL_RCC_OscConfig+0x2b6>
 8005db4:	e6dd      	b.n	8005b72 <HAL_RCC_OscConfig+0x86>
 8005db6:	bf00      	nop
 8005db8:	40023800 	.word	0x40023800
 8005dbc:	42470000 	.word	0x42470000
 8005dc0:	42470e80 	.word	0x42470e80
 8005dc4:	40007000 	.word	0x40007000
 8005dc8:	42470060 	.word	0x42470060
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005dcc:	f7fe fde2 	bl	8004994 <HAL_GetTick>
 8005dd0:	1bc0      	subs	r0, r0, r7
 8005dd2:	2802      	cmp	r0, #2
 8005dd4:	d9cd      	bls.n	8005d72 <HAL_RCC_OscConfig+0x286>
 8005dd6:	e6cc      	b.n	8005b72 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8005dd8:	f7fe fddc 	bl	8004994 <HAL_GetTick>
 8005ddc:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005dde:	682b      	ldr	r3, [r5, #0]
 8005de0:	019b      	lsls	r3, r3, #6
 8005de2:	f57f ae99 	bpl.w	8005b18 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005de6:	f7fe fdd5 	bl	8004994 <HAL_GetTick>
 8005dea:	1b00      	subs	r0, r0, r4
 8005dec:	2802      	cmp	r0, #2
 8005dee:	d9f6      	bls.n	8005dde <HAL_RCC_OscConfig+0x2f2>
 8005df0:	e6bf      	b.n	8005b72 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005df2:	2801      	cmp	r0, #1
 8005df4:	f43f aebe 	beq.w	8005b74 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8005df8:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005dfa:	69e2      	ldr	r2, [r4, #28]
 8005dfc:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 8005e00:	4291      	cmp	r1, r2
 8005e02:	f47f aea0 	bne.w	8005b46 <HAL_RCC_OscConfig+0x5a>
 8005e06:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005e08:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005e0c:	428a      	cmp	r2, r1
 8005e0e:	f47f ae9a 	bne.w	8005b46 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005e12:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8005e14:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8005e18:	401a      	ands	r2, r3
 8005e1a:	428a      	cmp	r2, r1
 8005e1c:	f47f ae93 	bne.w	8005b46 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8005e20:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8005e22:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8005e26:	428a      	cmp	r2, r1
 8005e28:	f47f ae8d 	bne.w	8005b46 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8005e2c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8005e2e:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8005e32:	4293      	cmp	r3, r2
 8005e34:	f43f ae70 	beq.w	8005b18 <HAL_RCC_OscConfig+0x2c>
 8005e38:	e685      	b.n	8005b46 <HAL_RCC_OscConfig+0x5a>
 8005e3a:	bf00      	nop

08005e3c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005e3c:	4913      	ldr	r1, [pc, #76]	; (8005e8c <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005e3e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005e40:	688b      	ldr	r3, [r1, #8]
 8005e42:	f003 030c 	and.w	r3, r3, #12
 8005e46:	2b04      	cmp	r3, #4
 8005e48:	d01c      	beq.n	8005e84 <HAL_RCC_GetSysClockFreq+0x48>
 8005e4a:	2b08      	cmp	r3, #8
 8005e4c:	d11c      	bne.n	8005e88 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005e4e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005e50:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005e52:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005e54:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005e58:	bf14      	ite	ne
 8005e5a:	480d      	ldrne	r0, [pc, #52]	; (8005e90 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005e5c:	480d      	ldreq	r0, [pc, #52]	; (8005e94 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005e5e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005e62:	bf18      	it	ne
 8005e64:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005e66:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005e6a:	fba1 0100 	umull	r0, r1, r1, r0
 8005e6e:	f7fa fa17 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8005e72:	4b06      	ldr	r3, [pc, #24]	; (8005e8c <HAL_RCC_GetSysClockFreq+0x50>)
 8005e74:	685b      	ldr	r3, [r3, #4]
 8005e76:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8005e7a:	3301      	adds	r3, #1
 8005e7c:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8005e7e:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005e82:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005e84:	4802      	ldr	r0, [pc, #8]	; (8005e90 <HAL_RCC_GetSysClockFreq+0x54>)
 8005e86:	e7fc      	b.n	8005e82 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8005e88:	4802      	ldr	r0, [pc, #8]	; (8005e94 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8005e8a:	e7fa      	b.n	8005e82 <HAL_RCC_GetSysClockFreq+0x46>
 8005e8c:	40023800 	.word	0x40023800
 8005e90:	007a1200 	.word	0x007a1200
 8005e94:	00f42400 	.word	0x00f42400

08005e98 <HAL_RCC_ClockConfig>:
{
 8005e98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005e9c:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8005e9e:	4604      	mov	r4, r0
 8005ea0:	b910      	cbnz	r0, 8005ea8 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005ea2:	2001      	movs	r0, #1
}
 8005ea4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8005ea8:	4b44      	ldr	r3, [pc, #272]	; (8005fbc <HAL_RCC_ClockConfig+0x124>)
 8005eaa:	681a      	ldr	r2, [r3, #0]
 8005eac:	f002 020f 	and.w	r2, r2, #15
 8005eb0:	428a      	cmp	r2, r1
 8005eb2:	d328      	bcc.n	8005f06 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005eb4:	6822      	ldr	r2, [r4, #0]
 8005eb6:	0797      	lsls	r7, r2, #30
 8005eb8:	d42d      	bmi.n	8005f16 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005eba:	07d0      	lsls	r0, r2, #31
 8005ebc:	d441      	bmi.n	8005f42 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8005ebe:	4b3f      	ldr	r3, [pc, #252]	; (8005fbc <HAL_RCC_ClockConfig+0x124>)
 8005ec0:	681a      	ldr	r2, [r3, #0]
 8005ec2:	f002 020f 	and.w	r2, r2, #15
 8005ec6:	42aa      	cmp	r2, r5
 8005ec8:	d866      	bhi.n	8005f98 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005eca:	6822      	ldr	r2, [r4, #0]
 8005ecc:	0751      	lsls	r1, r2, #29
 8005ece:	d46c      	bmi.n	8005faa <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005ed0:	0713      	lsls	r3, r2, #28
 8005ed2:	d507      	bpl.n	8005ee4 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005ed4:	4a3a      	ldr	r2, [pc, #232]	; (8005fc0 <HAL_RCC_ClockConfig+0x128>)
 8005ed6:	6921      	ldr	r1, [r4, #16]
 8005ed8:	6893      	ldr	r3, [r2, #8]
 8005eda:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8005ede:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005ee2:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005ee4:	f7ff ffaa 	bl	8005e3c <HAL_RCC_GetSysClockFreq>
 8005ee8:	4b35      	ldr	r3, [pc, #212]	; (8005fc0 <HAL_RCC_ClockConfig+0x128>)
 8005eea:	4a36      	ldr	r2, [pc, #216]	; (8005fc4 <HAL_RCC_ClockConfig+0x12c>)
 8005eec:	689b      	ldr	r3, [r3, #8]
 8005eee:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005ef2:	5cd3      	ldrb	r3, [r2, r3]
 8005ef4:	40d8      	lsrs	r0, r3
 8005ef6:	4b34      	ldr	r3, [pc, #208]	; (8005fc8 <HAL_RCC_ClockConfig+0x130>)
 8005ef8:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8005efa:	4b34      	ldr	r3, [pc, #208]	; (8005fcc <HAL_RCC_ClockConfig+0x134>)
 8005efc:	6818      	ldr	r0, [r3, #0]
 8005efe:	f7fb ffc7 	bl	8001e90 <HAL_InitTick>
  return HAL_OK;
 8005f02:	2000      	movs	r0, #0
 8005f04:	e7ce      	b.n	8005ea4 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005f06:	b2ca      	uxtb	r2, r1
 8005f08:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005f0a:	681b      	ldr	r3, [r3, #0]
 8005f0c:	f003 030f 	and.w	r3, r3, #15
 8005f10:	428b      	cmp	r3, r1
 8005f12:	d1c6      	bne.n	8005ea2 <HAL_RCC_ClockConfig+0xa>
 8005f14:	e7ce      	b.n	8005eb4 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005f16:	4b2a      	ldr	r3, [pc, #168]	; (8005fc0 <HAL_RCC_ClockConfig+0x128>)
 8005f18:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005f1c:	bf1e      	ittt	ne
 8005f1e:	6899      	ldrne	r1, [r3, #8]
 8005f20:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8005f24:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005f26:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005f28:	bf42      	ittt	mi
 8005f2a:	6899      	ldrmi	r1, [r3, #8]
 8005f2c:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8005f30:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005f32:	4923      	ldr	r1, [pc, #140]	; (8005fc0 <HAL_RCC_ClockConfig+0x128>)
 8005f34:	68a0      	ldr	r0, [r4, #8]
 8005f36:	688b      	ldr	r3, [r1, #8]
 8005f38:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005f3c:	4303      	orrs	r3, r0
 8005f3e:	608b      	str	r3, [r1, #8]
 8005f40:	e7bb      	b.n	8005eba <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005f42:	6862      	ldr	r2, [r4, #4]
 8005f44:	4b1e      	ldr	r3, [pc, #120]	; (8005fc0 <HAL_RCC_ClockConfig+0x128>)
 8005f46:	2a01      	cmp	r2, #1
 8005f48:	d11c      	bne.n	8005f84 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005f4a:	681b      	ldr	r3, [r3, #0]
 8005f4c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005f50:	d0a7      	beq.n	8005ea2 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005f52:	4e1b      	ldr	r6, [pc, #108]	; (8005fc0 <HAL_RCC_ClockConfig+0x128>)
 8005f54:	68b3      	ldr	r3, [r6, #8]
 8005f56:	f023 0303 	bic.w	r3, r3, #3
 8005f5a:	4313      	orrs	r3, r2
 8005f5c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8005f5e:	f7fe fd19 	bl	8004994 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005f62:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8005f66:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005f68:	68b3      	ldr	r3, [r6, #8]
 8005f6a:	6862      	ldr	r2, [r4, #4]
 8005f6c:	f003 030c 	and.w	r3, r3, #12
 8005f70:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005f74:	d0a3      	beq.n	8005ebe <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005f76:	f7fe fd0d 	bl	8004994 <HAL_GetTick>
 8005f7a:	1bc0      	subs	r0, r0, r7
 8005f7c:	4540      	cmp	r0, r8
 8005f7e:	d9f3      	bls.n	8005f68 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8005f80:	2003      	movs	r0, #3
 8005f82:	e78f      	b.n	8005ea4 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005f84:	1e91      	subs	r1, r2, #2
 8005f86:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005f88:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005f8a:	d802      	bhi.n	8005f92 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005f8c:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8005f90:	e7de      	b.n	8005f50 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005f92:	f013 0f02 	tst.w	r3, #2
 8005f96:	e7db      	b.n	8005f50 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005f98:	b2ea      	uxtb	r2, r5
 8005f9a:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005f9c:	681b      	ldr	r3, [r3, #0]
 8005f9e:	f003 030f 	and.w	r3, r3, #15
 8005fa2:	42ab      	cmp	r3, r5
 8005fa4:	f47f af7d 	bne.w	8005ea2 <HAL_RCC_ClockConfig+0xa>
 8005fa8:	e78f      	b.n	8005eca <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005faa:	4905      	ldr	r1, [pc, #20]	; (8005fc0 <HAL_RCC_ClockConfig+0x128>)
 8005fac:	68e0      	ldr	r0, [r4, #12]
 8005fae:	688b      	ldr	r3, [r1, #8]
 8005fb0:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8005fb4:	4303      	orrs	r3, r0
 8005fb6:	608b      	str	r3, [r1, #8]
 8005fb8:	e78a      	b.n	8005ed0 <HAL_RCC_ClockConfig+0x38>
 8005fba:	bf00      	nop
 8005fbc:	40023c00 	.word	0x40023c00
 8005fc0:	40023800 	.word	0x40023800
 8005fc4:	0801ea14 	.word	0x0801ea14
 8005fc8:	20000074 	.word	0x20000074
 8005fcc:	2000007c 	.word	0x2000007c

08005fd0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8005fd0:	4b04      	ldr	r3, [pc, #16]	; (8005fe4 <HAL_RCC_GetPCLK1Freq+0x14>)
 8005fd2:	4a05      	ldr	r2, [pc, #20]	; (8005fe8 <HAL_RCC_GetPCLK1Freq+0x18>)
 8005fd4:	689b      	ldr	r3, [r3, #8]
 8005fd6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005fda:	5cd3      	ldrb	r3, [r2, r3]
 8005fdc:	4a03      	ldr	r2, [pc, #12]	; (8005fec <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005fde:	6810      	ldr	r0, [r2, #0]
}
 8005fe0:	40d8      	lsrs	r0, r3
 8005fe2:	4770      	bx	lr
 8005fe4:	40023800 	.word	0x40023800
 8005fe8:	0801ea24 	.word	0x0801ea24
 8005fec:	20000074 	.word	0x20000074

08005ff0 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8005ff0:	4b04      	ldr	r3, [pc, #16]	; (8006004 <HAL_RCC_GetPCLK2Freq+0x14>)
 8005ff2:	4a05      	ldr	r2, [pc, #20]	; (8006008 <HAL_RCC_GetPCLK2Freq+0x18>)
 8005ff4:	689b      	ldr	r3, [r3, #8]
 8005ff6:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8005ffa:	5cd3      	ldrb	r3, [r2, r3]
 8005ffc:	4a03      	ldr	r2, [pc, #12]	; (800600c <HAL_RCC_GetPCLK2Freq+0x1c>)
 8005ffe:	6810      	ldr	r0, [r2, #0]
}
 8006000:	40d8      	lsrs	r0, r3
 8006002:	4770      	bx	lr
 8006004:	40023800 	.word	0x40023800
 8006008:	0801ea24 	.word	0x0801ea24
 800600c:	20000074 	.word	0x20000074

08006010 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006010:	230f      	movs	r3, #15
 8006012:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006014:	4b0b      	ldr	r3, [pc, #44]	; (8006044 <HAL_RCC_GetClockConfig+0x34>)
 8006016:	689a      	ldr	r2, [r3, #8]
 8006018:	f002 0203 	and.w	r2, r2, #3
 800601c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800601e:	689a      	ldr	r2, [r3, #8]
 8006020:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8006024:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8006026:	689a      	ldr	r2, [r3, #8]
 8006028:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800602c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800602e:	689b      	ldr	r3, [r3, #8]
 8006030:	08db      	lsrs	r3, r3, #3
 8006032:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8006036:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006038:	4b03      	ldr	r3, [pc, #12]	; (8006048 <HAL_RCC_GetClockConfig+0x38>)
 800603a:	681b      	ldr	r3, [r3, #0]
 800603c:	f003 030f 	and.w	r3, r3, #15
 8006040:	600b      	str	r3, [r1, #0]
}
 8006042:	4770      	bx	lr
 8006044:	40023800 	.word	0x40023800
 8006048:	40023c00 	.word	0x40023c00

0800604c <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800604c:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800604e:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8006052:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006054:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006056:	f040 808a 	bne.w	800616e <HAL_RCCEx_PeriphCLKConfig+0x122>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800605a:	6823      	ldr	r3, [r4, #0]
 800605c:	f013 0f0c 	tst.w	r3, #12
 8006060:	d044      	beq.n	80060ec <HAL_RCCEx_PeriphCLKConfig+0xa0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006062:	4d89      	ldr	r5, [pc, #548]	; (8006288 <HAL_RCCEx_PeriphCLKConfig+0x23c>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006064:	4e89      	ldr	r6, [pc, #548]	; (800628c <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLSAI_DISABLE();
 8006066:	2300      	movs	r3, #0
 8006068:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800606a:	f7fe fc93 	bl	8004994 <HAL_GetTick>
 800606e:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006070:	6833      	ldr	r3, [r6, #0]
 8006072:	009b      	lsls	r3, r3, #2
 8006074:	f100 80cc 	bmi.w	8006210 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006078:	6821      	ldr	r1, [r4, #0]
 800607a:	074f      	lsls	r7, r1, #29
 800607c:	d515      	bpl.n	80060aa <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800607e:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006082:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006086:	061b      	lsls	r3, r3, #24
 8006088:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800608c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006090:	4313      	orrs	r3, r2
 8006092:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006096:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800609a:	6a22      	ldr	r2, [r4, #32]
 800609c:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80060a0:	3a01      	subs	r2, #1
 80060a2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80060a6:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80060aa:	070e      	lsls	r6, r1, #28
 80060ac:	d514      	bpl.n	80060d8 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80060ae:	4a77      	ldr	r2, [pc, #476]	; (800628c <HAL_RCCEx_PeriphCLKConfig+0x240>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80060b0:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80060b2:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80060b6:	6920      	ldr	r0, [r4, #16]
 80060b8:	071b      	lsls	r3, r3, #28
 80060ba:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80060be:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80060c2:	430b      	orrs	r3, r1
 80060c4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80060c8:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80060cc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80060ce:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80060d2:	430b      	orrs	r3, r1
 80060d4:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80060d8:	2301      	movs	r3, #1
 80060da:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80060dc:	f7fe fc5a 	bl	8004994 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80060e0:	4e6a      	ldr	r6, [pc, #424]	; (800628c <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 80060e2:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80060e4:	6833      	ldr	r3, [r6, #0]
 80060e6:	0098      	lsls	r0, r3, #2
 80060e8:	f140 8099 	bpl.w	800621e <HAL_RCCEx_PeriphCLKConfig+0x1d2>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80060ec:	6823      	ldr	r3, [r4, #0]
 80060ee:	069a      	lsls	r2, r3, #26
 80060f0:	d533      	bpl.n	800615a <HAL_RCCEx_PeriphCLKConfig+0x10e>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80060f2:	2300      	movs	r3, #0
 80060f4:	9301      	str	r3, [sp, #4]
 80060f6:	4b65      	ldr	r3, [pc, #404]	; (800628c <HAL_RCCEx_PeriphCLKConfig+0x240>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80060f8:	4d65      	ldr	r5, [pc, #404]	; (8006290 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80060fa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80060fc:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006100:	641a      	str	r2, [r3, #64]	; 0x40
 8006102:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006104:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006108:	9301      	str	r3, [sp, #4]
 800610a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800610c:	682b      	ldr	r3, [r5, #0]
 800610e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006112:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8006114:	f7fe fc3e 	bl	8004994 <HAL_GetTick>
 8006118:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 800611a:	682b      	ldr	r3, [r5, #0]
 800611c:	05d9      	lsls	r1, r3, #23
 800611e:	f140 8085 	bpl.w	800622c <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006122:	4d5a      	ldr	r5, [pc, #360]	; (800628c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8006124:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006126:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800612a:	f040 8086 	bne.w	800623a <HAL_RCCEx_PeriphCLKConfig+0x1ee>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800612e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8006130:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8006134:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8006138:	4a54      	ldr	r2, [pc, #336]	; (800628c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800613a:	f040 80a0 	bne.w	800627e <HAL_RCCEx_PeriphCLKConfig+0x232>
 800613e:	6891      	ldr	r1, [r2, #8]
 8006140:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8006144:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006148:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800614c:	4301      	orrs	r1, r0
 800614e:	6091      	str	r1, [r2, #8]
 8006150:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8006152:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006156:	430b      	orrs	r3, r1
 8006158:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800615a:	6820      	ldr	r0, [r4, #0]
 800615c:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006160:	bf1f      	itttt	ne
 8006162:	4b4c      	ldrne	r3, [pc, #304]	; (8006294 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8006164:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8006168:	601a      	strne	r2, [r3, #0]
  }
  return HAL_OK;
 800616a:	2000      	movne	r0, #0
 800616c:	e04e      	b.n	800620c <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    __HAL_RCC_PLLI2S_DISABLE();
 800616e:	4d4a      	ldr	r5, [pc, #296]	; (8006298 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006170:	4f46      	ldr	r7, [pc, #280]	; (800628c <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLI2S_DISABLE();
 8006172:	2300      	movs	r3, #0
 8006174:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006176:	f7fe fc0d 	bl	8004994 <HAL_GetTick>
 800617a:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800617c:	683b      	ldr	r3, [r7, #0]
 800617e:	011a      	lsls	r2, r3, #4
 8006180:	d43e      	bmi.n	8006200 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006182:	6821      	ldr	r1, [r4, #0]
 8006184:	07cb      	lsls	r3, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8006186:	bf41      	itttt	mi
 8006188:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800618c:	071b      	lslmi	r3, r3, #28
 800618e:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8006192:	f8c7 3084 	strmi.w	r3, [r7, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006196:	078e      	lsls	r6, r1, #30
 8006198:	d515      	bpl.n	80061c6 <HAL_RCCEx_PeriphCLKConfig+0x17a>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800619a:	4a3c      	ldr	r2, [pc, #240]	; (800628c <HAL_RCCEx_PeriphCLKConfig+0x240>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800619c:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800619e:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80061a2:	6866      	ldr	r6, [r4, #4]
 80061a4:	061b      	lsls	r3, r3, #24
 80061a6:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80061aa:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 80061ae:	4303      	orrs	r3, r0
 80061b0:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80061b4:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80061b8:	69e3      	ldr	r3, [r4, #28]
 80061ba:	f020 001f 	bic.w	r0, r0, #31
 80061be:	3b01      	subs	r3, #1
 80061c0:	4303      	orrs	r3, r0
 80061c2:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80061c6:	0648      	lsls	r0, r1, #25
 80061c8:	d50a      	bpl.n	80061e0 <HAL_RCCEx_PeriphCLKConfig+0x194>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80061ca:	68e3      	ldr	r3, [r4, #12]
 80061cc:	6862      	ldr	r2, [r4, #4]
 80061ce:	061b      	lsls	r3, r3, #24
 80061d0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80061d4:	68a2      	ldr	r2, [r4, #8]
 80061d6:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80061da:	4a2c      	ldr	r2, [pc, #176]	; (800628c <HAL_RCCEx_PeriphCLKConfig+0x240>)
 80061dc:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80061e0:	2301      	movs	r3, #1
 80061e2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80061e4:	f7fe fbd6 	bl	8004994 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80061e8:	4e28      	ldr	r6, [pc, #160]	; (800628c <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 80061ea:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80061ec:	6833      	ldr	r3, [r6, #0]
 80061ee:	0119      	lsls	r1, r3, #4
 80061f0:	f53f af33 	bmi.w	800605a <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80061f4:	f7fe fbce 	bl	8004994 <HAL_GetTick>
 80061f8:	1b40      	subs	r0, r0, r5
 80061fa:	2802      	cmp	r0, #2
 80061fc:	d9f6      	bls.n	80061ec <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 80061fe:	e004      	b.n	800620a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006200:	f7fe fbc8 	bl	8004994 <HAL_GetTick>
 8006204:	1b80      	subs	r0, r0, r6
 8006206:	2802      	cmp	r0, #2
 8006208:	d9b8      	bls.n	800617c <HAL_RCCEx_PeriphCLKConfig+0x130>
        return HAL_TIMEOUT;
 800620a:	2003      	movs	r0, #3
}
 800620c:	b003      	add	sp, #12
 800620e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006210:	f7fe fbc0 	bl	8004994 <HAL_GetTick>
 8006214:	1bc0      	subs	r0, r0, r7
 8006216:	2802      	cmp	r0, #2
 8006218:	f67f af2a 	bls.w	8006070 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800621c:	e7f5      	b.n	800620a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800621e:	f7fe fbb9 	bl	8004994 <HAL_GetTick>
 8006222:	1b40      	subs	r0, r0, r5
 8006224:	2802      	cmp	r0, #2
 8006226:	f67f af5d 	bls.w	80060e4 <HAL_RCCEx_PeriphCLKConfig+0x98>
 800622a:	e7ee      	b.n	800620a <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800622c:	f7fe fbb2 	bl	8004994 <HAL_GetTick>
 8006230:	1b80      	subs	r0, r0, r6
 8006232:	2802      	cmp	r0, #2
 8006234:	f67f af71 	bls.w	800611a <HAL_RCCEx_PeriphCLKConfig+0xce>
 8006238:	e7e7      	b.n	800620a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800623a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800623c:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8006240:	4293      	cmp	r3, r2
 8006242:	f43f af74 	beq.w	800612e <HAL_RCCEx_PeriphCLKConfig+0xe2>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006246:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006248:	4a14      	ldr	r2, [pc, #80]	; (800629c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800624a:	2101      	movs	r1, #1
 800624c:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800624e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006252:	2100      	movs	r1, #0
 8006254:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 8006256:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006258:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800625a:	07da      	lsls	r2, r3, #31
 800625c:	f57f af67 	bpl.w	800612e <HAL_RCCEx_PeriphCLKConfig+0xe2>
        tickstart = HAL_GetTick();
 8006260:	f7fe fb98 	bl	8004994 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006264:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8006268:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800626a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800626c:	079b      	lsls	r3, r3, #30
 800626e:	f53f af5e 	bmi.w	800612e <HAL_RCCEx_PeriphCLKConfig+0xe2>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006272:	f7fe fb8f 	bl	8004994 <HAL_GetTick>
 8006276:	1b80      	subs	r0, r0, r6
 8006278:	42b8      	cmp	r0, r7
 800627a:	d9f6      	bls.n	800626a <HAL_RCCEx_PeriphCLKConfig+0x21e>
 800627c:	e7c5      	b.n	800620a <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800627e:	6891      	ldr	r1, [r2, #8]
 8006280:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006284:	e763      	b.n	800614e <HAL_RCCEx_PeriphCLKConfig+0x102>
 8006286:	bf00      	nop
 8006288:	42470070 	.word	0x42470070
 800628c:	40023800 	.word	0x40023800
 8006290:	40007000 	.word	0x40007000
 8006294:	424711e0 	.word	0x424711e0
 8006298:	42470068 	.word	0x42470068
 800629c:	42470e40 	.word	0x42470e40

080062a0 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 80062a0:	b538      	push	{r3, r4, r5, lr}
 80062a2:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 80062a4:	4604      	mov	r4, r0
 80062a6:	b1c8      	cbz	r0, 80062dc <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 80062a8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80062ac:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80062b0:	b91b      	cbnz	r3, 80062ba <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80062b2:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80062b6:	f7fb fd7f 	bl	8001db8 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80062ba:	2302      	movs	r3, #2
 80062bc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80062c0:	1d21      	adds	r1, r4, #4
 80062c2:	6820      	ldr	r0, [r4, #0]
 80062c4:	f000 fea4 	bl	8007010 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80062c8:	6862      	ldr	r2, [r4, #4]
 80062ca:	6820      	ldr	r0, [r4, #0]
 80062cc:	4629      	mov	r1, r5
 80062ce:	f000 fed5 	bl	800707c <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80062d2:	2301      	movs	r3, #1
 80062d4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 80062d8:	2000      	movs	r0, #0
}
 80062da:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80062dc:	2001      	movs	r0, #1
 80062de:	e7fc      	b.n	80062da <HAL_SDRAM_Init+0x3a>

080062e0 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80062e0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80062e2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80062e6:	2b02      	cmp	r3, #2
{
 80062e8:	4604      	mov	r4, r0
 80062ea:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80062ec:	b2d8      	uxtb	r0, r3
 80062ee:	d00d      	beq.n	800630c <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80062f0:	2302      	movs	r3, #2
 80062f2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80062f6:	6820      	ldr	r0, [r4, #0]
 80062f8:	f000 fefc 	bl	80070f4 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80062fc:	682b      	ldr	r3, [r5, #0]
 80062fe:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006300:	bf0c      	ite	eq
 8006302:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006304:	2301      	movne	r3, #1
 8006306:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 800630a:	2000      	movs	r0, #0
}
 800630c:	bd38      	pop	{r3, r4, r5, pc}

0800630e <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800630e:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006310:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006314:	2b02      	cmp	r3, #2
{
 8006316:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006318:	b2d8      	uxtb	r0, r3
 800631a:	d009      	beq.n	8006330 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800631c:	2302      	movs	r3, #2
 800631e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8006322:	6820      	ldr	r0, [r4, #0]
 8006324:	f000 ff0d 	bl	8007142 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006328:	2301      	movs	r3, #1
 800632a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 800632e:	2000      	movs	r0, #0
}
 8006330:	bd10      	pop	{r4, pc}

08006332 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8006332:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006334:	4604      	mov	r4, r0
 8006336:	460e      	mov	r6, r1
 8006338:	4615      	mov	r5, r2
 800633a:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800633c:	6822      	ldr	r2, [r4, #0]
 800633e:	6893      	ldr	r3, [r2, #8]
 8006340:	ea36 0303 	bics.w	r3, r6, r3
 8006344:	d001      	beq.n	800634a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8006346:	2000      	movs	r0, #0
 8006348:	e02d      	b.n	80063a6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 800634a:	1c6b      	adds	r3, r5, #1
 800634c:	d0f7      	beq.n	800633e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 800634e:	f7fe fb21 	bl	8004994 <HAL_GetTick>
 8006352:	1bc0      	subs	r0, r0, r7
 8006354:	4285      	cmp	r5, r0
 8006356:	d8f1      	bhi.n	800633c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006358:	6823      	ldr	r3, [r4, #0]
 800635a:	685a      	ldr	r2, [r3, #4]
 800635c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006360:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006362:	6862      	ldr	r2, [r4, #4]
 8006364:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8006368:	d10a      	bne.n	8006380 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 800636a:	68a2      	ldr	r2, [r4, #8]
 800636c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8006370:	d002      	beq.n	8006378 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006372:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8006376:	d103      	bne.n	8006380 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8006378:	681a      	ldr	r2, [r3, #0]
 800637a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800637e:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006380:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006382:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8006386:	d107      	bne.n	8006398 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8006388:	681a      	ldr	r2, [r3, #0]
 800638a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800638e:	601a      	str	r2, [r3, #0]
 8006390:	681a      	ldr	r2, [r3, #0]
 8006392:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006396:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8006398:	2301      	movs	r3, #1
 800639a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800639e:	2300      	movs	r3, #0
 80063a0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 80063a4:	2003      	movs	r0, #3
}
 80063a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080063a8 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 80063a8:	b538      	push	{r3, r4, r5, lr}
 80063aa:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80063ac:	6842      	ldr	r2, [r0, #4]
 80063ae:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 80063b2:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80063b4:	d11f      	bne.n	80063f6 <SPI_EndRxTransaction+0x4e>
 80063b6:	6882      	ldr	r2, [r0, #8]
 80063b8:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80063bc:	d002      	beq.n	80063c4 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80063be:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80063c2:	d107      	bne.n	80063d4 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 80063c4:	6825      	ldr	r5, [r4, #0]
 80063c6:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80063c8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 80063cc:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 80063d0:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80063d2:	d007      	beq.n	80063e4 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80063d4:	460a      	mov	r2, r1
 80063d6:	2180      	movs	r1, #128	; 0x80
 80063d8:	4620      	mov	r0, r4
 80063da:	f7ff ffaa 	bl	8006332 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80063de:	b920      	cbnz	r0, 80063ea <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 80063e0:	2000      	movs	r0, #0
}
 80063e2:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80063e4:	460a      	mov	r2, r1
 80063e6:	2101      	movs	r1, #1
 80063e8:	e7f6      	b.n	80063d8 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80063ea:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80063ec:	f043 0320 	orr.w	r3, r3, #32
 80063f0:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 80063f2:	2003      	movs	r0, #3
 80063f4:	e7f5      	b.n	80063e2 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80063f6:	460a      	mov	r2, r1
 80063f8:	2101      	movs	r1, #1
 80063fa:	e7ee      	b.n	80063da <SPI_EndRxTransaction+0x32>

080063fc <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80063fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80063fe:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006400:	4a12      	ldr	r2, [pc, #72]	; (800644c <SPI_EndRxTxTransaction+0x50>)
 8006402:	4d13      	ldr	r5, [pc, #76]	; (8006450 <SPI_EndRxTxTransaction+0x54>)
 8006404:	6812      	ldr	r2, [r2, #0]
 8006406:	fbb2 f5f5 	udiv	r5, r2, r5
 800640a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800640e:	436a      	muls	r2, r5
 8006410:	9201      	str	r2, [sp, #4]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006412:	6842      	ldr	r2, [r0, #4]
 8006414:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8006418:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800641a:	d10b      	bne.n	8006434 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800641c:	460a      	mov	r2, r1
 800641e:	2180      	movs	r1, #128	; 0x80
 8006420:	f7ff ff87 	bl	8006332 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8006424:	b178      	cbz	r0, 8006446 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006426:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006428:	f043 0320 	orr.w	r3, r3, #32
 800642c:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800642e:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8006430:	b003      	add	sp, #12
 8006432:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8006434:	9b01      	ldr	r3, [sp, #4]
 8006436:	b133      	cbz	r3, 8006446 <SPI_EndRxTxTransaction+0x4a>
      count--;
 8006438:	9b01      	ldr	r3, [sp, #4]
 800643a:	3b01      	subs	r3, #1
 800643c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800643e:	6823      	ldr	r3, [r4, #0]
 8006440:	689b      	ldr	r3, [r3, #8]
 8006442:	061b      	lsls	r3, r3, #24
 8006444:	d4f6      	bmi.n	8006434 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8006446:	2000      	movs	r0, #0
 8006448:	e7f2      	b.n	8006430 <SPI_EndRxTxTransaction+0x34>
 800644a:	bf00      	nop
 800644c:	20000074 	.word	0x20000074
 8006450:	016e3600 	.word	0x016e3600

08006454 <HAL_SPI_Init>:
{
 8006454:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8006456:	4604      	mov	r4, r0
 8006458:	2800      	cmp	r0, #0
 800645a:	d036      	beq.n	80064ca <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800645c:	2300      	movs	r3, #0
 800645e:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8006460:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8006464:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006468:	b91b      	cbnz	r3, 8006472 <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 800646a:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800646e:	f7fb fc17 	bl	8001ca0 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8006472:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8006474:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8006476:	2302      	movs	r3, #2
 8006478:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800647c:	680b      	ldr	r3, [r1, #0]
 800647e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006482:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8006484:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8006488:	4303      	orrs	r3, r0
 800648a:	68e0      	ldr	r0, [r4, #12]
 800648c:	4303      	orrs	r3, r0
 800648e:	6920      	ldr	r0, [r4, #16]
 8006490:	4303      	orrs	r3, r0
 8006492:	6960      	ldr	r0, [r4, #20]
 8006494:	4303      	orrs	r3, r0
 8006496:	69e0      	ldr	r0, [r4, #28]
 8006498:	4303      	orrs	r3, r0
 800649a:	6a20      	ldr	r0, [r4, #32]
 800649c:	4303      	orrs	r3, r0
 800649e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80064a0:	4303      	orrs	r3, r0
 80064a2:	f402 7000 	and.w	r0, r2, #512	; 0x200
 80064a6:	4303      	orrs	r3, r0
 80064a8:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 80064aa:	0c12      	lsrs	r2, r2, #16
 80064ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80064ae:	f002 0204 	and.w	r2, r2, #4
 80064b2:	431a      	orrs	r2, r3
 80064b4:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80064b6:	69cb      	ldr	r3, [r1, #28]
 80064b8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80064bc:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80064be:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 80064c0:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80064c2:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80064c4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 80064c8:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80064ca:	2001      	movs	r0, #1
 80064cc:	e7fc      	b.n	80064c8 <HAL_SPI_Init+0x74>

080064ce <HAL_SPI_Transmit>:
{
 80064ce:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80064d2:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 80064d4:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 80064d8:	2b01      	cmp	r3, #1
{
 80064da:	4604      	mov	r4, r0
 80064dc:	460d      	mov	r5, r1
 80064de:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 80064e0:	f000 8097 	beq.w	8006612 <HAL_SPI_Transmit+0x144>
 80064e4:	2301      	movs	r3, #1
 80064e6:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 80064ea:	f7fe fa53 	bl	8004994 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 80064ee:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 80064f2:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80064f4:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80064f6:	b2d8      	uxtb	r0, r3
 80064f8:	f040 8089 	bne.w	800660e <HAL_SPI_Transmit+0x140>
  if ((pData == NULL) || (Size == 0U))
 80064fc:	2d00      	cmp	r5, #0
 80064fe:	d05a      	beq.n	80065b6 <HAL_SPI_Transmit+0xe8>
 8006500:	2f00      	cmp	r7, #0
 8006502:	d058      	beq.n	80065b6 <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006504:	2303      	movs	r3, #3
 8006506:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800650a:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800650c:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800650e:	2300      	movs	r3, #0
 8006510:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8006512:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8006516:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006518:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 800651a:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 800651c:	87a3      	strh	r3, [r4, #60]	; 0x3c
 800651e:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8006520:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006522:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8006526:	bf08      	it	eq
 8006528:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800652a:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 800652c:	bf04      	itt	eq
 800652e:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8006532:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006534:	681a      	ldr	r2, [r3, #0]
 8006536:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8006538:	bf5e      	ittt	pl
 800653a:	681a      	ldrpl	r2, [r3, #0]
 800653c:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8006540:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006542:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8006546:	6862      	ldr	r2, [r4, #4]
 8006548:	d13e      	bne.n	80065c8 <HAL_SPI_Transmit+0xfa>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800654a:	b10a      	cbz	r2, 8006550 <HAL_SPI_Transmit+0x82>
 800654c:	2f01      	cmp	r7, #1
 800654e:	d107      	bne.n	8006560 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006550:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006554:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006556:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006558:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800655a:	3b01      	subs	r3, #1
 800655c:	b29b      	uxth	r3, r3
 800655e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8006560:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006562:	b29b      	uxth	r3, r3
 8006564:	b9a3      	cbnz	r3, 8006590 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006566:	4642      	mov	r2, r8
 8006568:	4631      	mov	r1, r6
 800656a:	4620      	mov	r0, r4
 800656c:	f7ff ff46 	bl	80063fc <SPI_EndRxTxTransaction>
 8006570:	2800      	cmp	r0, #0
 8006572:	d149      	bne.n	8006608 <HAL_SPI_Transmit+0x13a>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006574:	68a3      	ldr	r3, [r4, #8]
 8006576:	b933      	cbnz	r3, 8006586 <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006578:	9301      	str	r3, [sp, #4]
 800657a:	6823      	ldr	r3, [r4, #0]
 800657c:	68da      	ldr	r2, [r3, #12]
 800657e:	9201      	str	r2, [sp, #4]
 8006580:	689b      	ldr	r3, [r3, #8]
 8006582:	9301      	str	r3, [sp, #4]
 8006584:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006586:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8006588:	3800      	subs	r0, #0
 800658a:	bf18      	it	ne
 800658c:	2001      	movne	r0, #1
error:
 800658e:	e012      	b.n	80065b6 <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006590:	6822      	ldr	r2, [r4, #0]
 8006592:	6893      	ldr	r3, [r2, #8]
 8006594:	0798      	lsls	r0, r3, #30
 8006596:	d505      	bpl.n	80065a4 <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006598:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800659a:	f833 1b02 	ldrh.w	r1, [r3], #2
 800659e:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80065a0:	6323      	str	r3, [r4, #48]	; 0x30
 80065a2:	e7d9      	b.n	8006558 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80065a4:	f7fe f9f6 	bl	8004994 <HAL_GetTick>
 80065a8:	eba0 0008 	sub.w	r0, r0, r8
 80065ac:	42b0      	cmp	r0, r6
 80065ae:	d3d7      	bcc.n	8006560 <HAL_SPI_Transmit+0x92>
 80065b0:	1c71      	adds	r1, r6, #1
 80065b2:	d0d5      	beq.n	8006560 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 80065b4:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80065b6:	2301      	movs	r3, #1
 80065b8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80065bc:	2300      	movs	r3, #0
 80065be:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 80065c2:	b002      	add	sp, #8
 80065c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80065c8:	b10a      	cbz	r2, 80065ce <HAL_SPI_Transmit+0x100>
 80065ca:	2f01      	cmp	r7, #1
 80065cc:	d108      	bne.n	80065e0 <HAL_SPI_Transmit+0x112>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80065ce:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80065d0:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80065d2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80065d4:	3301      	adds	r3, #1
 80065d6:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80065d8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80065da:	3b01      	subs	r3, #1
 80065dc:	b29b      	uxth	r3, r3
 80065de:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 80065e0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80065e2:	b29b      	uxth	r3, r3
 80065e4:	2b00      	cmp	r3, #0
 80065e6:	d0be      	beq.n	8006566 <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80065e8:	6823      	ldr	r3, [r4, #0]
 80065ea:	689a      	ldr	r2, [r3, #8]
 80065ec:	0792      	lsls	r2, r2, #30
 80065ee:	d502      	bpl.n	80065f6 <HAL_SPI_Transmit+0x128>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80065f0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80065f2:	7812      	ldrb	r2, [r2, #0]
 80065f4:	e7ec      	b.n	80065d0 <HAL_SPI_Transmit+0x102>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80065f6:	f7fe f9cd 	bl	8004994 <HAL_GetTick>
 80065fa:	eba0 0008 	sub.w	r0, r0, r8
 80065fe:	42b0      	cmp	r0, r6
 8006600:	d3ee      	bcc.n	80065e0 <HAL_SPI_Transmit+0x112>
 8006602:	1c73      	adds	r3, r6, #1
 8006604:	d0ec      	beq.n	80065e0 <HAL_SPI_Transmit+0x112>
 8006606:	e7d5      	b.n	80065b4 <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006608:	2320      	movs	r3, #32
 800660a:	6563      	str	r3, [r4, #84]	; 0x54
 800660c:	e7b2      	b.n	8006574 <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 800660e:	2002      	movs	r0, #2
 8006610:	e7d1      	b.n	80065b6 <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 8006612:	2002      	movs	r0, #2
 8006614:	e7d5      	b.n	80065c2 <HAL_SPI_Transmit+0xf4>

08006616 <HAL_SPI_TransmitReceive>:
{
 8006616:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800661a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 800661c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8006620:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8006624:	2b01      	cmp	r3, #1
{
 8006626:	4604      	mov	r4, r0
 8006628:	460d      	mov	r5, r1
 800662a:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 800662c:	f000 80e0 	beq.w	80067f0 <HAL_SPI_TransmitReceive+0x1da>
 8006630:	2301      	movs	r3, #1
 8006632:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006636:	f7fe f9ad 	bl	8004994 <HAL_GetTick>
  tmp_state           = hspi->State;
 800663a:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800663e:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006640:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006642:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 8006644:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006646:	d00a      	beq.n	800665e <HAL_SPI_TransmitReceive+0x48>
 8006648:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800664c:	f040 80ce 	bne.w	80067ec <HAL_SPI_TransmitReceive+0x1d6>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8006650:	68a3      	ldr	r3, [r4, #8]
 8006652:	2b00      	cmp	r3, #0
 8006654:	f040 80ca 	bne.w	80067ec <HAL_SPI_TransmitReceive+0x1d6>
 8006658:	2904      	cmp	r1, #4
 800665a:	f040 80c7 	bne.w	80067ec <HAL_SPI_TransmitReceive+0x1d6>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800665e:	2d00      	cmp	r5, #0
 8006660:	d03f      	beq.n	80066e2 <HAL_SPI_TransmitReceive+0xcc>
 8006662:	f1b9 0f00 	cmp.w	r9, #0
 8006666:	d03c      	beq.n	80066e2 <HAL_SPI_TransmitReceive+0xcc>
 8006668:	2e00      	cmp	r6, #0
 800666a:	d03a      	beq.n	80066e2 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800666c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006670:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006674:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006676:	bf1c      	itt	ne
 8006678:	2305      	movne	r3, #5
 800667a:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800667e:	2300      	movs	r3, #0
 8006680:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8006682:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006686:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006688:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800668a:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800668c:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 800668e:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006690:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8006692:	bf58      	it	pl
 8006694:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8006696:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8006698:	bf58      	it	pl
 800669a:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 800669e:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 80066a0:	bf58      	it	pl
 80066a2:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80066a4:	68e1      	ldr	r1, [r4, #12]
 80066a6:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 80066aa:	d151      	bne.n	8006750 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80066ac:	b10a      	cbz	r2, 80066b2 <HAL_SPI_TransmitReceive+0x9c>
 80066ae:	2e01      	cmp	r6, #1
 80066b0:	d107      	bne.n	80066c2 <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80066b2:	f835 2b02 	ldrh.w	r2, [r5], #2
 80066b6:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 80066b8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80066ba:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 80066bc:	3b01      	subs	r3, #1
 80066be:	b29b      	uxth	r3, r3
 80066c0:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 80066c2:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80066c4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80066c6:	b29b      	uxth	r3, r3
 80066c8:	b96b      	cbnz	r3, 80066e6 <HAL_SPI_TransmitReceive+0xd0>
 80066ca:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80066cc:	b29b      	uxth	r3, r3
 80066ce:	b953      	cbnz	r3, 80066e6 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80066d0:	463a      	mov	r2, r7
 80066d2:	4641      	mov	r1, r8
 80066d4:	4620      	mov	r0, r4
 80066d6:	f7ff fe91 	bl	80063fc <SPI_EndRxTxTransaction>
 80066da:	2800      	cmp	r0, #0
 80066dc:	d07b      	beq.n	80067d6 <HAL_SPI_TransmitReceive+0x1c0>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80066de:	2320      	movs	r3, #32
 80066e0:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 80066e2:	2001      	movs	r0, #1
 80066e4:	e02b      	b.n	800673e <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80066e6:	6821      	ldr	r1, [r4, #0]
 80066e8:	688b      	ldr	r3, [r1, #8]
 80066ea:	079a      	lsls	r2, r3, #30
 80066ec:	d50d      	bpl.n	800670a <HAL_SPI_TransmitReceive+0xf4>
 80066ee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80066f0:	b29b      	uxth	r3, r3
 80066f2:	b153      	cbz	r3, 800670a <HAL_SPI_TransmitReceive+0xf4>
 80066f4:	b14d      	cbz	r5, 800670a <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80066f6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80066f8:	f833 2b02 	ldrh.w	r2, [r3], #2
 80066fc:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80066fe:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006700:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006702:	3b01      	subs	r3, #1
 8006704:	b29b      	uxth	r3, r3
 8006706:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8006708:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800670a:	688a      	ldr	r2, [r1, #8]
 800670c:	f012 0201 	ands.w	r2, r2, #1
 8006710:	d00c      	beq.n	800672c <HAL_SPI_TransmitReceive+0x116>
 8006712:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006714:	b29b      	uxth	r3, r3
 8006716:	b14b      	cbz	r3, 800672c <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006718:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800671a:	68c9      	ldr	r1, [r1, #12]
 800671c:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006720:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006722:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006724:	3b01      	subs	r3, #1
 8006726:	b29b      	uxth	r3, r3
 8006728:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800672a:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800672c:	f7fe f932 	bl	8004994 <HAL_GetTick>
 8006730:	1bc0      	subs	r0, r0, r7
 8006732:	4540      	cmp	r0, r8
 8006734:	d3c6      	bcc.n	80066c4 <HAL_SPI_TransmitReceive+0xae>
 8006736:	f1b8 3fff 	cmp.w	r8, #4294967295
 800673a:	d0c3      	beq.n	80066c4 <HAL_SPI_TransmitReceive+0xae>
        errorcode = HAL_TIMEOUT;
 800673c:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800673e:	2301      	movs	r3, #1
 8006740:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006744:	2300      	movs	r3, #0
 8006746:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800674a:	b003      	add	sp, #12
 800674c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006750:	b10a      	cbz	r2, 8006756 <HAL_SPI_TransmitReceive+0x140>
 8006752:	2e01      	cmp	r6, #1
 8006754:	d108      	bne.n	8006768 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006756:	782a      	ldrb	r2, [r5, #0]
 8006758:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800675a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800675c:	3301      	adds	r3, #1
 800675e:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8006760:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006762:	3b01      	subs	r3, #1
 8006764:	b29b      	uxth	r3, r3
 8006766:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8006768:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800676a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800676c:	b29b      	uxth	r3, r3
 800676e:	b91b      	cbnz	r3, 8006778 <HAL_SPI_TransmitReceive+0x162>
 8006770:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006772:	b29b      	uxth	r3, r3
 8006774:	2b00      	cmp	r3, #0
 8006776:	d0ab      	beq.n	80066d0 <HAL_SPI_TransmitReceive+0xba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006778:	6822      	ldr	r2, [r4, #0]
 800677a:	6893      	ldr	r3, [r2, #8]
 800677c:	079b      	lsls	r3, r3, #30
 800677e:	d50e      	bpl.n	800679e <HAL_SPI_TransmitReceive+0x188>
 8006780:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006782:	b29b      	uxth	r3, r3
 8006784:	b15b      	cbz	r3, 800679e <HAL_SPI_TransmitReceive+0x188>
 8006786:	b155      	cbz	r5, 800679e <HAL_SPI_TransmitReceive+0x188>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8006788:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800678a:	781b      	ldrb	r3, [r3, #0]
 800678c:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 800678e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006790:	3301      	adds	r3, #1
 8006792:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006794:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006796:	3b01      	subs	r3, #1
 8006798:	b29b      	uxth	r3, r3
 800679a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800679c:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800679e:	6822      	ldr	r2, [r4, #0]
 80067a0:	6891      	ldr	r1, [r2, #8]
 80067a2:	f011 0101 	ands.w	r1, r1, #1
 80067a6:	d00d      	beq.n	80067c4 <HAL_SPI_TransmitReceive+0x1ae>
 80067a8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80067aa:	b29b      	uxth	r3, r3
 80067ac:	b153      	cbz	r3, 80067c4 <HAL_SPI_TransmitReceive+0x1ae>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80067ae:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80067b0:	68d2      	ldr	r2, [r2, #12]
 80067b2:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80067b4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80067b6:	3301      	adds	r3, #1
 80067b8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80067ba:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80067bc:	3b01      	subs	r3, #1
 80067be:	b29b      	uxth	r3, r3
 80067c0:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 80067c2:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80067c4:	f7fe f8e6 	bl	8004994 <HAL_GetTick>
 80067c8:	1bc0      	subs	r0, r0, r7
 80067ca:	4540      	cmp	r0, r8
 80067cc:	d3cd      	bcc.n	800676a <HAL_SPI_TransmitReceive+0x154>
 80067ce:	f1b8 3fff 	cmp.w	r8, #4294967295
 80067d2:	d0ca      	beq.n	800676a <HAL_SPI_TransmitReceive+0x154>
 80067d4:	e7b2      	b.n	800673c <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80067d6:	68a3      	ldr	r3, [r4, #8]
 80067d8:	2b00      	cmp	r3, #0
 80067da:	d1b0      	bne.n	800673e <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80067dc:	6823      	ldr	r3, [r4, #0]
 80067de:	9001      	str	r0, [sp, #4]
 80067e0:	68da      	ldr	r2, [r3, #12]
 80067e2:	9201      	str	r2, [sp, #4]
 80067e4:	689b      	ldr	r3, [r3, #8]
 80067e6:	9301      	str	r3, [sp, #4]
 80067e8:	9b01      	ldr	r3, [sp, #4]
 80067ea:	e7a8      	b.n	800673e <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 80067ec:	2002      	movs	r0, #2
 80067ee:	e7a6      	b.n	800673e <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 80067f0:	2002      	movs	r0, #2
 80067f2:	e7aa      	b.n	800674a <HAL_SPI_TransmitReceive+0x134>

080067f4 <HAL_SPI_Receive>:
{
 80067f4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80067f8:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80067fa:	6843      	ldr	r3, [r0, #4]
 80067fc:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8006800:	4604      	mov	r4, r0
 8006802:	4688      	mov	r8, r1
 8006804:	4616      	mov	r6, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006806:	d10c      	bne.n	8006822 <HAL_SPI_Receive+0x2e>
 8006808:	6883      	ldr	r3, [r0, #8]
 800680a:	b953      	cbnz	r3, 8006822 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800680c:	2304      	movs	r3, #4
 800680e:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006812:	4613      	mov	r3, r2
 8006814:	9500      	str	r5, [sp, #0]
 8006816:	460a      	mov	r2, r1
 8006818:	f7ff fefd 	bl	8006616 <HAL_SPI_TransmitReceive>
}
 800681c:	b002      	add	sp, #8
 800681e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_LOCK(hspi);
 8006822:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8006826:	2b01      	cmp	r3, #1
 8006828:	d079      	beq.n	800691e <HAL_SPI_Receive+0x12a>
 800682a:	2301      	movs	r3, #1
 800682c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006830:	f7fe f8b0 	bl	8004994 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8006834:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8006838:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800683a:	4607      	mov	r7, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800683c:	b2d8      	uxtb	r0, r3
 800683e:	d16c      	bne.n	800691a <HAL_SPI_Receive+0x126>
  if ((pData == NULL) || (Size == 0U))
 8006840:	f1b8 0f00 	cmp.w	r8, #0
 8006844:	d057      	beq.n	80068f6 <HAL_SPI_Receive+0x102>
 8006846:	2e00      	cmp	r6, #0
 8006848:	d055      	beq.n	80068f6 <HAL_SPI_Receive+0x102>
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800684a:	2304      	movs	r3, #4
 800684c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006850:	68a2      	ldr	r2, [r4, #8]
  hspi->RxXferSize  = Size;
 8006852:	87a6      	strh	r6, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006854:	2300      	movs	r3, #0
 8006856:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8006858:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->RxXferCount = Size;
 800685c:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800685e:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferCount = 0U;
 8006860:	86e3      	strh	r3, [r4, #54]	; 0x36
  hspi->TxXferSize  = 0U;
 8006862:	86a3      	strh	r3, [r4, #52]	; 0x34
 8006864:	6823      	ldr	r3, [r4, #0]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8006866:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800686a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_RX(hspi);
 800686e:	bf02      	ittt	eq
 8006870:	681a      	ldreq	r2, [r3, #0]
 8006872:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
 8006876:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006878:	681a      	ldr	r2, [r3, #0]
 800687a:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 800687c:	bf5e      	ittt	pl
 800687e:	681a      	ldrpl	r2, [r3, #0]
 8006880:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8006884:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006886:	68e3      	ldr	r3, [r4, #12]
 8006888:	b1f3      	cbz	r3, 80068c8 <HAL_SPI_Receive+0xd4>
    while (hspi->RxXferCount > 0U)
 800688a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800688c:	b29b      	uxth	r3, r3
 800688e:	b1fb      	cbz	r3, 80068d0 <HAL_SPI_Receive+0xdc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006890:	6823      	ldr	r3, [r4, #0]
 8006892:	689a      	ldr	r2, [r3, #8]
 8006894:	07d2      	lsls	r2, r2, #31
 8006896:	d535      	bpl.n	8006904 <HAL_SPI_Receive+0x110>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006898:	68da      	ldr	r2, [r3, #12]
 800689a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800689c:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80068a0:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80068a2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80068a4:	3b01      	subs	r3, #1
 80068a6:	b29b      	uxth	r3, r3
 80068a8:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80068aa:	e7ee      	b.n	800688a <HAL_SPI_Receive+0x96>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80068ac:	6823      	ldr	r3, [r4, #0]
 80068ae:	689a      	ldr	r2, [r3, #8]
 80068b0:	07d0      	lsls	r0, r2, #31
 80068b2:	d518      	bpl.n	80068e6 <HAL_SPI_Receive+0xf2>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80068b4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80068b6:	7b1b      	ldrb	r3, [r3, #12]
 80068b8:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80068ba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80068bc:	3301      	adds	r3, #1
 80068be:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80068c0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80068c2:	3b01      	subs	r3, #1
 80068c4:	b29b      	uxth	r3, r3
 80068c6:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 80068c8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80068ca:	b29b      	uxth	r3, r3
 80068cc:	2b00      	cmp	r3, #0
 80068ce:	d1ed      	bne.n	80068ac <HAL_SPI_Receive+0xb8>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80068d0:	463a      	mov	r2, r7
 80068d2:	4629      	mov	r1, r5
 80068d4:	4620      	mov	r0, r4
 80068d6:	f7ff fd67 	bl	80063a8 <SPI_EndRxTransaction>
 80068da:	b9d8      	cbnz	r0, 8006914 <HAL_SPI_Receive+0x120>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80068dc:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 80068de:	3800      	subs	r0, #0
 80068e0:	bf18      	it	ne
 80068e2:	2001      	movne	r0, #1
error :
 80068e4:	e007      	b.n	80068f6 <HAL_SPI_Receive+0x102>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80068e6:	f7fe f855 	bl	8004994 <HAL_GetTick>
 80068ea:	1bc0      	subs	r0, r0, r7
 80068ec:	42a8      	cmp	r0, r5
 80068ee:	d3eb      	bcc.n	80068c8 <HAL_SPI_Receive+0xd4>
 80068f0:	1c69      	adds	r1, r5, #1
 80068f2:	d0e9      	beq.n	80068c8 <HAL_SPI_Receive+0xd4>
          errorcode = HAL_TIMEOUT;
 80068f4:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80068f6:	2301      	movs	r3, #1
 80068f8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80068fc:	2300      	movs	r3, #0
 80068fe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8006902:	e78b      	b.n	800681c <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006904:	f7fe f846 	bl	8004994 <HAL_GetTick>
 8006908:	1bc0      	subs	r0, r0, r7
 800690a:	42a8      	cmp	r0, r5
 800690c:	d3bd      	bcc.n	800688a <HAL_SPI_Receive+0x96>
 800690e:	1c6b      	adds	r3, r5, #1
 8006910:	d0bb      	beq.n	800688a <HAL_SPI_Receive+0x96>
 8006912:	e7ef      	b.n	80068f4 <HAL_SPI_Receive+0x100>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006914:	2320      	movs	r3, #32
 8006916:	6563      	str	r3, [r4, #84]	; 0x54
 8006918:	e7e0      	b.n	80068dc <HAL_SPI_Receive+0xe8>
    errorcode = HAL_BUSY;
 800691a:	2002      	movs	r0, #2
 800691c:	e7eb      	b.n	80068f6 <HAL_SPI_Receive+0x102>
  __HAL_LOCK(hspi);
 800691e:	2002      	movs	r0, #2
 8006920:	e77c      	b.n	800681c <HAL_SPI_Receive+0x28>

08006922 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006922:	4770      	bx	lr

08006924 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006924:	6803      	ldr	r3, [r0, #0]
 8006926:	68da      	ldr	r2, [r3, #12]
 8006928:	f042 0201 	orr.w	r2, r2, #1
 800692c:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800692e:	689a      	ldr	r2, [r3, #8]
 8006930:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006934:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 8006936:	bf1e      	ittt	ne
 8006938:	681a      	ldrne	r2, [r3, #0]
 800693a:	f042 0201 	orrne.w	r2, r2, #1
 800693e:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8006940:	2000      	movs	r0, #0
 8006942:	4770      	bx	lr

08006944 <HAL_TIM_OC_DelayElapsedCallback>:
 8006944:	4770      	bx	lr

08006946 <HAL_TIM_IC_CaptureCallback>:
 8006946:	4770      	bx	lr

08006948 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006948:	4770      	bx	lr

0800694a <HAL_TIM_TriggerCallback>:
 800694a:	4770      	bx	lr

0800694c <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800694c:	6803      	ldr	r3, [r0, #0]
 800694e:	691a      	ldr	r2, [r3, #16]
 8006950:	0791      	lsls	r1, r2, #30
{
 8006952:	b510      	push	{r4, lr}
 8006954:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006956:	d50e      	bpl.n	8006976 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006958:	68da      	ldr	r2, [r3, #12]
 800695a:	0792      	lsls	r2, r2, #30
 800695c:	d50b      	bpl.n	8006976 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800695e:	f06f 0202 	mvn.w	r2, #2
 8006962:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006964:	2201      	movs	r2, #1
 8006966:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006968:	699b      	ldr	r3, [r3, #24]
 800696a:	079b      	lsls	r3, r3, #30
 800696c:	d077      	beq.n	8006a5e <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800696e:	f7ff ffea 	bl	8006946 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006972:	2300      	movs	r3, #0
 8006974:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006976:	6823      	ldr	r3, [r4, #0]
 8006978:	691a      	ldr	r2, [r3, #16]
 800697a:	0750      	lsls	r0, r2, #29
 800697c:	d510      	bpl.n	80069a0 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800697e:	68da      	ldr	r2, [r3, #12]
 8006980:	0751      	lsls	r1, r2, #29
 8006982:	d50d      	bpl.n	80069a0 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006984:	f06f 0204 	mvn.w	r2, #4
 8006988:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800698a:	2202      	movs	r2, #2
 800698c:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800698e:	699b      	ldr	r3, [r3, #24]
 8006990:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006994:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006996:	d068      	beq.n	8006a6a <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8006998:	f7ff ffd5 	bl	8006946 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800699c:	2300      	movs	r3, #0
 800699e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80069a0:	6823      	ldr	r3, [r4, #0]
 80069a2:	691a      	ldr	r2, [r3, #16]
 80069a4:	0712      	lsls	r2, r2, #28
 80069a6:	d50f      	bpl.n	80069c8 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80069a8:	68da      	ldr	r2, [r3, #12]
 80069aa:	0710      	lsls	r0, r2, #28
 80069ac:	d50c      	bpl.n	80069c8 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80069ae:	f06f 0208 	mvn.w	r2, #8
 80069b2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80069b4:	2204      	movs	r2, #4
 80069b6:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80069b8:	69db      	ldr	r3, [r3, #28]
 80069ba:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80069bc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80069be:	d05a      	beq.n	8006a76 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80069c0:	f7ff ffc1 	bl	8006946 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80069c4:	2300      	movs	r3, #0
 80069c6:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80069c8:	6823      	ldr	r3, [r4, #0]
 80069ca:	691a      	ldr	r2, [r3, #16]
 80069cc:	06d2      	lsls	r2, r2, #27
 80069ce:	d510      	bpl.n	80069f2 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80069d0:	68da      	ldr	r2, [r3, #12]
 80069d2:	06d0      	lsls	r0, r2, #27
 80069d4:	d50d      	bpl.n	80069f2 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80069d6:	f06f 0210 	mvn.w	r2, #16
 80069da:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80069dc:	2208      	movs	r2, #8
 80069de:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80069e0:	69db      	ldr	r3, [r3, #28]
 80069e2:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80069e6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80069e8:	d04b      	beq.n	8006a82 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 80069ea:	f7ff ffac 	bl	8006946 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80069ee:	2300      	movs	r3, #0
 80069f0:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80069f2:	6823      	ldr	r3, [r4, #0]
 80069f4:	691a      	ldr	r2, [r3, #16]
 80069f6:	07d1      	lsls	r1, r2, #31
 80069f8:	d508      	bpl.n	8006a0c <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80069fa:	68da      	ldr	r2, [r3, #12]
 80069fc:	07d2      	lsls	r2, r2, #31
 80069fe:	d505      	bpl.n	8006a0c <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006a00:	f06f 0201 	mvn.w	r2, #1
 8006a04:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8006a06:	4620      	mov	r0, r4
 8006a08:	f7fa ffc4 	bl	8001994 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006a0c:	6823      	ldr	r3, [r4, #0]
 8006a0e:	691a      	ldr	r2, [r3, #16]
 8006a10:	0610      	lsls	r0, r2, #24
 8006a12:	d508      	bpl.n	8006a26 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006a14:	68da      	ldr	r2, [r3, #12]
 8006a16:	0611      	lsls	r1, r2, #24
 8006a18:	d505      	bpl.n	8006a26 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006a1a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006a1e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8006a20:	4620      	mov	r0, r4
 8006a22:	f000 f8b6 	bl	8006b92 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006a26:	6823      	ldr	r3, [r4, #0]
 8006a28:	691a      	ldr	r2, [r3, #16]
 8006a2a:	0652      	lsls	r2, r2, #25
 8006a2c:	d508      	bpl.n	8006a40 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006a2e:	68da      	ldr	r2, [r3, #12]
 8006a30:	0650      	lsls	r0, r2, #25
 8006a32:	d505      	bpl.n	8006a40 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006a34:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006a38:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006a3a:	4620      	mov	r0, r4
 8006a3c:	f7ff ff85 	bl	800694a <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006a40:	6823      	ldr	r3, [r4, #0]
 8006a42:	691a      	ldr	r2, [r3, #16]
 8006a44:	0691      	lsls	r1, r2, #26
 8006a46:	d522      	bpl.n	8006a8e <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006a48:	68da      	ldr	r2, [r3, #12]
 8006a4a:	0692      	lsls	r2, r2, #26
 8006a4c:	d51f      	bpl.n	8006a8e <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006a4e:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006a52:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006a54:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8006a56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006a5a:	f000 b899 	b.w	8006b90 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006a5e:	f7ff ff71 	bl	8006944 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006a62:	4620      	mov	r0, r4
 8006a64:	f7ff ff70 	bl	8006948 <HAL_TIM_PWM_PulseFinishedCallback>
 8006a68:	e783      	b.n	8006972 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006a6a:	f7ff ff6b 	bl	8006944 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006a6e:	4620      	mov	r0, r4
 8006a70:	f7ff ff6a 	bl	8006948 <HAL_TIM_PWM_PulseFinishedCallback>
 8006a74:	e792      	b.n	800699c <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006a76:	f7ff ff65 	bl	8006944 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006a7a:	4620      	mov	r0, r4
 8006a7c:	f7ff ff64 	bl	8006948 <HAL_TIM_PWM_PulseFinishedCallback>
 8006a80:	e7a0      	b.n	80069c4 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006a82:	f7ff ff5f 	bl	8006944 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006a86:	4620      	mov	r0, r4
 8006a88:	f7ff ff5e 	bl	8006948 <HAL_TIM_PWM_PulseFinishedCallback>
 8006a8c:	e7af      	b.n	80069ee <HAL_TIM_IRQHandler+0xa2>
}
 8006a8e:	bd10      	pop	{r4, pc}

08006a90 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006a90:	4a30      	ldr	r2, [pc, #192]	; (8006b54 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8006a92:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006a94:	4290      	cmp	r0, r2
 8006a96:	d012      	beq.n	8006abe <TIM_Base_SetConfig+0x2e>
 8006a98:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006a9c:	d00f      	beq.n	8006abe <TIM_Base_SetConfig+0x2e>
 8006a9e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006aa2:	4290      	cmp	r0, r2
 8006aa4:	d00b      	beq.n	8006abe <TIM_Base_SetConfig+0x2e>
 8006aa6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006aaa:	4290      	cmp	r0, r2
 8006aac:	d007      	beq.n	8006abe <TIM_Base_SetConfig+0x2e>
 8006aae:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006ab2:	4290      	cmp	r0, r2
 8006ab4:	d003      	beq.n	8006abe <TIM_Base_SetConfig+0x2e>
 8006ab6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006aba:	4290      	cmp	r0, r2
 8006abc:	d119      	bne.n	8006af2 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006abe:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006ac0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8006ac4:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006ac6:	4a23      	ldr	r2, [pc, #140]	; (8006b54 <TIM_Base_SetConfig+0xc4>)
 8006ac8:	4290      	cmp	r0, r2
 8006aca:	d029      	beq.n	8006b20 <TIM_Base_SetConfig+0x90>
 8006acc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006ad0:	d026      	beq.n	8006b20 <TIM_Base_SetConfig+0x90>
 8006ad2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006ad6:	4290      	cmp	r0, r2
 8006ad8:	d022      	beq.n	8006b20 <TIM_Base_SetConfig+0x90>
 8006ada:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006ade:	4290      	cmp	r0, r2
 8006ae0:	d01e      	beq.n	8006b20 <TIM_Base_SetConfig+0x90>
 8006ae2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006ae6:	4290      	cmp	r0, r2
 8006ae8:	d01a      	beq.n	8006b20 <TIM_Base_SetConfig+0x90>
 8006aea:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006aee:	4290      	cmp	r0, r2
 8006af0:	d016      	beq.n	8006b20 <TIM_Base_SetConfig+0x90>
 8006af2:	4a19      	ldr	r2, [pc, #100]	; (8006b58 <TIM_Base_SetConfig+0xc8>)
 8006af4:	4290      	cmp	r0, r2
 8006af6:	d013      	beq.n	8006b20 <TIM_Base_SetConfig+0x90>
 8006af8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006afc:	4290      	cmp	r0, r2
 8006afe:	d00f      	beq.n	8006b20 <TIM_Base_SetConfig+0x90>
 8006b00:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006b04:	4290      	cmp	r0, r2
 8006b06:	d00b      	beq.n	8006b20 <TIM_Base_SetConfig+0x90>
 8006b08:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8006b0c:	4290      	cmp	r0, r2
 8006b0e:	d007      	beq.n	8006b20 <TIM_Base_SetConfig+0x90>
 8006b10:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006b14:	4290      	cmp	r0, r2
 8006b16:	d003      	beq.n	8006b20 <TIM_Base_SetConfig+0x90>
 8006b18:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006b1c:	4290      	cmp	r0, r2
 8006b1e:	d103      	bne.n	8006b28 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006b20:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006b22:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006b26:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006b28:	694a      	ldr	r2, [r1, #20]
 8006b2a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006b2e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006b30:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006b32:	688b      	ldr	r3, [r1, #8]
 8006b34:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006b36:	680b      	ldr	r3, [r1, #0]
 8006b38:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006b3a:	4b06      	ldr	r3, [pc, #24]	; (8006b54 <TIM_Base_SetConfig+0xc4>)
 8006b3c:	4298      	cmp	r0, r3
 8006b3e:	d003      	beq.n	8006b48 <TIM_Base_SetConfig+0xb8>
 8006b40:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006b44:	4298      	cmp	r0, r3
 8006b46:	d101      	bne.n	8006b4c <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006b48:	690b      	ldr	r3, [r1, #16]
 8006b4a:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006b4c:	2301      	movs	r3, #1
 8006b4e:	6143      	str	r3, [r0, #20]
}
 8006b50:	4770      	bx	lr
 8006b52:	bf00      	nop
 8006b54:	40010000 	.word	0x40010000
 8006b58:	40014000 	.word	0x40014000

08006b5c <HAL_TIM_Base_Init>:
{
 8006b5c:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006b5e:	4604      	mov	r4, r0
 8006b60:	b1a0      	cbz	r0, 8006b8c <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006b62:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006b66:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006b6a:	b91b      	cbnz	r3, 8006b74 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006b6c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006b70:	f7ff fed7 	bl	8006922 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006b74:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006b76:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006b78:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006b7c:	1d21      	adds	r1, r4, #4
 8006b7e:	f7ff ff87 	bl	8006a90 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8006b82:	2301      	movs	r3, #1
 8006b84:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8006b88:	2000      	movs	r0, #0
}
 8006b8a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006b8c:	2001      	movs	r0, #1
 8006b8e:	e7fc      	b.n	8006b8a <HAL_TIM_Base_Init+0x2e>

08006b90 <HAL_TIMEx_CommutCallback>:
 8006b90:	4770      	bx	lr

08006b92 <HAL_TIMEx_BreakCallback>:
 8006b92:	4770      	bx	lr

08006b94 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8006b94:	6803      	ldr	r3, [r0, #0]
 8006b96:	68da      	ldr	r2, [r3, #12]
 8006b98:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8006b9c:	60da      	str	r2, [r3, #12]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006b9e:	695a      	ldr	r2, [r3, #20]
 8006ba0:	f022 0201 	bic.w	r2, r2, #1
 8006ba4:	615a      	str	r2, [r3, #20]

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8006ba6:	2320      	movs	r3, #32
 8006ba8:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
}
 8006bac:	4770      	bx	lr
	...

08006bb0 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8006bb0:	b538      	push	{r3, r4, r5, lr}
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006bb2:	6803      	ldr	r3, [r0, #0]
 8006bb4:	68c1      	ldr	r1, [r0, #12]
 8006bb6:	691a      	ldr	r2, [r3, #16]
{
 8006bb8:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006bba:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8006bbe:	430a      	orrs	r2, r1
 8006bc0:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006bc2:	6925      	ldr	r5, [r4, #16]
 8006bc4:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1,
 8006bc6:	68d9      	ldr	r1, [r3, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006bc8:	69c0      	ldr	r0, [r0, #28]
 8006bca:	432a      	orrs	r2, r5
 8006bcc:	6965      	ldr	r5, [r4, #20]
  MODIFY_REG(huart->Instance->CR1,
 8006bce:	f421 4116 	bic.w	r1, r1, #38400	; 0x9600
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006bd2:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1,
 8006bd4:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006bd8:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1,
 8006bda:	430a      	orrs	r2, r1
 8006bdc:	60da      	str	r2, [r3, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8006bde:	695a      	ldr	r2, [r3, #20]
 8006be0:	69a1      	ldr	r1, [r4, #24]
 8006be2:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8006be6:	430a      	orrs	r2, r1

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006be8:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8006bec:	615a      	str	r2, [r3, #20]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006bee:	4a25      	ldr	r2, [pc, #148]	; (8006c84 <UART_SetConfig+0xd4>)
 8006bf0:	d128      	bne.n	8006c44 <UART_SetConfig+0x94>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8006bf2:	4293      	cmp	r3, r2
 8006bf4:	d003      	beq.n	8006bfe <UART_SetConfig+0x4e>
 8006bf6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006bfa:	4293      	cmp	r3, r2
 8006bfc:	d11f      	bne.n	8006c3e <UART_SetConfig+0x8e>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8006bfe:	f7ff f9f7 	bl	8005ff0 <HAL_RCC_GetPCLK2Freq>
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006c02:	6862      	ldr	r2, [r4, #4]
 8006c04:	2300      	movs	r3, #0
 8006c06:	1892      	adds	r2, r2, r2
 8006c08:	f04f 0119 	mov.w	r1, #25
 8006c0c:	415b      	adcs	r3, r3
 8006c0e:	fba0 0101 	umull	r0, r1, r0, r1
 8006c12:	f7f9 fb45 	bl	80002a0 <__aeabi_uldivmod>
 8006c16:	2164      	movs	r1, #100	; 0x64
 8006c18:	fbb0 f5f1 	udiv	r5, r0, r1
 8006c1c:	fb01 0315 	mls	r3, r1, r5, r0
 8006c20:	00db      	lsls	r3, r3, #3
 8006c22:	3332      	adds	r3, #50	; 0x32
 8006c24:	fbb3 f3f1 	udiv	r3, r3, r1
 8006c28:	f003 0207 	and.w	r2, r3, #7
 8006c2c:	005b      	lsls	r3, r3, #1
 8006c2e:	6821      	ldr	r1, [r4, #0]
 8006c30:	eb02 1205 	add.w	r2, r2, r5, lsl #4
 8006c34:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8006c38:	4413      	add	r3, r2
 8006c3a:	608b      	str	r3, [r1, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
 8006c3c:	bd38      	pop	{r3, r4, r5, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 8006c3e:	f7ff f9c7 	bl	8005fd0 <HAL_RCC_GetPCLK1Freq>
 8006c42:	e7de      	b.n	8006c02 <UART_SetConfig+0x52>
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8006c44:	4293      	cmp	r3, r2
 8006c46:	d002      	beq.n	8006c4e <UART_SetConfig+0x9e>
 8006c48:	4a0f      	ldr	r2, [pc, #60]	; (8006c88 <UART_SetConfig+0xd8>)
 8006c4a:	4293      	cmp	r3, r2
 8006c4c:	d117      	bne.n	8006c7e <UART_SetConfig+0xce>
      pclk = HAL_RCC_GetPCLK2Freq();
 8006c4e:	f7ff f9cf 	bl	8005ff0 <HAL_RCC_GetPCLK2Freq>
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8006c52:	6863      	ldr	r3, [r4, #4]
 8006c54:	2119      	movs	r1, #25
 8006c56:	009a      	lsls	r2, r3, #2
 8006c58:	fba0 0101 	umull	r0, r1, r0, r1
 8006c5c:	0f9b      	lsrs	r3, r3, #30
 8006c5e:	f7f9 fb1f 	bl	80002a0 <__aeabi_uldivmod>
 8006c62:	2264      	movs	r2, #100	; 0x64
 8006c64:	fbb0 f1f2 	udiv	r1, r0, r2
 8006c68:	fb02 0311 	mls	r3, r2, r1, r0
 8006c6c:	6824      	ldr	r4, [r4, #0]
 8006c6e:	011b      	lsls	r3, r3, #4
 8006c70:	3332      	adds	r3, #50	; 0x32
 8006c72:	fbb3 f3f2 	udiv	r3, r3, r2
 8006c76:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8006c7a:	60a3      	str	r3, [r4, #8]
}
 8006c7c:	e7de      	b.n	8006c3c <UART_SetConfig+0x8c>
      pclk = HAL_RCC_GetPCLK1Freq();
 8006c7e:	f7ff f9a7 	bl	8005fd0 <HAL_RCC_GetPCLK1Freq>
 8006c82:	e7e6      	b.n	8006c52 <UART_SetConfig+0xa2>
 8006c84:	40011000 	.word	0x40011000
 8006c88:	40011400 	.word	0x40011400

08006c8c <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
 8006c8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c8e:	4604      	mov	r4, r0
 8006c90:	460e      	mov	r6, r1
 8006c92:	4617      	mov	r7, r2
 8006c94:	461d      	mov	r5, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8006c96:	6822      	ldr	r2, [r4, #0]
 8006c98:	6813      	ldr	r3, [r2, #0]
 8006c9a:	ea36 0303 	bics.w	r3, r6, r3
 8006c9e:	d101      	bne.n	8006ca4 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 8006ca0:	2000      	movs	r0, #0
 8006ca2:	e014      	b.n	8006cce <UART_WaitOnFlagUntilTimeout.constprop.0+0x42>
    if (Timeout != HAL_MAX_DELAY)
 8006ca4:	1c6b      	adds	r3, r5, #1
 8006ca6:	d0f7      	beq.n	8006c98 <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 8006ca8:	b995      	cbnz	r5, 8006cd0 <UART_WaitOnFlagUntilTimeout.constprop.0+0x44>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8006caa:	6823      	ldr	r3, [r4, #0]
 8006cac:	68da      	ldr	r2, [r3, #12]
 8006cae:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8006cb2:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006cb4:	695a      	ldr	r2, [r3, #20]
 8006cb6:	f022 0201 	bic.w	r2, r2, #1
 8006cba:	615a      	str	r2, [r3, #20]
        huart->gState  = HAL_UART_STATE_READY;
 8006cbc:	2320      	movs	r3, #32
 8006cbe:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
        huart->RxState = HAL_UART_STATE_READY;
 8006cc2:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
        __HAL_UNLOCK(huart);
 8006cc6:	2300      	movs	r3, #0
 8006cc8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8006ccc:	2003      	movs	r0, #3
}
 8006cce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 8006cd0:	f7fd fe60 	bl	8004994 <HAL_GetTick>
 8006cd4:	1bc0      	subs	r0, r0, r7
 8006cd6:	4285      	cmp	r5, r0
 8006cd8:	d2dd      	bcs.n	8006c96 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
 8006cda:	e7e6      	b.n	8006caa <UART_WaitOnFlagUntilTimeout.constprop.0+0x1e>

08006cdc <HAL_UART_Init>:
{
 8006cdc:	b510      	push	{r4, lr}
  if (huart == NULL)
 8006cde:	4604      	mov	r4, r0
 8006ce0:	b340      	cbz	r0, 8006d34 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8006ce2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006ce6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006cea:	b91b      	cbnz	r3, 8006cf4 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8006cec:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_UART_MspInit(huart);
 8006cf0:	f7fb f80e 	bl	8001d10 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8006cf4:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8006cf6:	2324      	movs	r3, #36	; 0x24
 8006cf8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UART_DISABLE(huart);
 8006cfc:	68d3      	ldr	r3, [r2, #12]
 8006cfe:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006d02:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8006d04:	4620      	mov	r0, r4
 8006d06:	f7ff ff53 	bl	8006bb0 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8006d0a:	6823      	ldr	r3, [r4, #0]
 8006d0c:	691a      	ldr	r2, [r3, #16]
 8006d0e:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8006d12:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8006d14:	695a      	ldr	r2, [r3, #20]
 8006d16:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8006d1a:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8006d1c:	68da      	ldr	r2, [r3, #12]
 8006d1e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006d22:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006d24:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8006d26:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006d28:	63e0      	str	r0, [r4, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 8006d2a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 8006d2e:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
}
 8006d32:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006d34:	2001      	movs	r0, #1
 8006d36:	e7fc      	b.n	8006d32 <HAL_UART_Init+0x56>

08006d38 <HAL_UART_Transmit>:
{
 8006d38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006d3a:	4616      	mov	r6, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8006d3c:	f890 2039 	ldrb.w	r2, [r0, #57]	; 0x39
{
 8006d40:	9300      	str	r3, [sp, #0]
  if (huart->gState == HAL_UART_STATE_READY)
 8006d42:	2a20      	cmp	r2, #32
{
 8006d44:	4604      	mov	r4, r0
 8006d46:	460d      	mov	r5, r1
  if (huart->gState == HAL_UART_STATE_READY)
 8006d48:	d150      	bne.n	8006dec <HAL_UART_Transmit+0xb4>
    if ((pData == NULL) || (Size == 0U))
 8006d4a:	2900      	cmp	r1, #0
 8006d4c:	d04c      	beq.n	8006de8 <HAL_UART_Transmit+0xb0>
 8006d4e:	2e00      	cmp	r6, #0
 8006d50:	d04a      	beq.n	8006de8 <HAL_UART_Transmit+0xb0>
    __HAL_LOCK(huart);
 8006d52:	f890 2038 	ldrb.w	r2, [r0, #56]	; 0x38
 8006d56:	2a01      	cmp	r2, #1
 8006d58:	d048      	beq.n	8006dec <HAL_UART_Transmit+0xb4>
 8006d5a:	2201      	movs	r2, #1
 8006d5c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006d60:	2700      	movs	r7, #0
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006d62:	2221      	movs	r2, #33	; 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006d64:	63c7      	str	r7, [r0, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006d66:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
    tickstart = HAL_GetTick();
 8006d6a:	f7fd fe13 	bl	8004994 <HAL_GetTick>
    while (huart->TxXferCount > 0U)
 8006d6e:	9b00      	ldr	r3, [sp, #0]
    huart->TxXferSize = Size;
 8006d70:	84a6      	strh	r6, [r4, #36]	; 0x24
    tickstart = HAL_GetTick();
 8006d72:	4602      	mov	r2, r0
    huart->TxXferCount = Size;
 8006d74:	84e6      	strh	r6, [r4, #38]	; 0x26
    __HAL_UNLOCK(huart);
 8006d76:	f884 7038 	strb.w	r7, [r4, #56]	; 0x38
    while (huart->TxXferCount > 0U)
 8006d7a:	8ce1      	ldrh	r1, [r4, #38]	; 0x26
 8006d7c:	b289      	uxth	r1, r1
 8006d7e:	b941      	cbnz	r1, 8006d92 <HAL_UART_Transmit+0x5a>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8006d80:	2140      	movs	r1, #64	; 0x40
 8006d82:	4620      	mov	r0, r4
 8006d84:	f7ff ff82 	bl	8006c8c <UART_WaitOnFlagUntilTimeout.constprop.0>
 8006d88:	b9a8      	cbnz	r0, 8006db6 <HAL_UART_Transmit+0x7e>
    huart->gState = HAL_UART_STATE_READY;
 8006d8a:	2320      	movs	r3, #32
 8006d8c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    return HAL_OK;
 8006d90:	e012      	b.n	8006db8 <HAL_UART_Transmit+0x80>
      huart->TxXferCount--;
 8006d92:	8ce1      	ldrh	r1, [r4, #38]	; 0x26
 8006d94:	3901      	subs	r1, #1
 8006d96:	b289      	uxth	r1, r1
 8006d98:	84e1      	strh	r1, [r4, #38]	; 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8006d9a:	68a1      	ldr	r1, [r4, #8]
 8006d9c:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8006da0:	e9cd 2300 	strd	r2, r3, [sp]
 8006da4:	f04f 0180 	mov.w	r1, #128	; 0x80
 8006da8:	4620      	mov	r0, r4
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8006daa:	d112      	bne.n	8006dd2 <HAL_UART_Transmit+0x9a>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8006dac:	f7ff ff6e 	bl	8006c8c <UART_WaitOnFlagUntilTimeout.constprop.0>
 8006db0:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006db4:	b110      	cbz	r0, 8006dbc <HAL_UART_Transmit+0x84>
          return HAL_TIMEOUT;
 8006db6:	2003      	movs	r0, #3
}
 8006db8:	b003      	add	sp, #12
 8006dba:	bdf0      	pop	{r4, r5, r6, r7, pc}
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 8006dbc:	8829      	ldrh	r1, [r5, #0]
 8006dbe:	6820      	ldr	r0, [r4, #0]
 8006dc0:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8006dc4:	6041      	str	r1, [r0, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 8006dc6:	6921      	ldr	r1, [r4, #16]
 8006dc8:	b909      	cbnz	r1, 8006dce <HAL_UART_Transmit+0x96>
          pData += 2U;
 8006dca:	3502      	adds	r5, #2
 8006dcc:	e7d5      	b.n	8006d7a <HAL_UART_Transmit+0x42>
          pData += 1U;
 8006dce:	3501      	adds	r5, #1
 8006dd0:	e7d3      	b.n	8006d7a <HAL_UART_Transmit+0x42>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8006dd2:	f7ff ff5b 	bl	8006c8c <UART_WaitOnFlagUntilTimeout.constprop.0>
 8006dd6:	2800      	cmp	r0, #0
 8006dd8:	d1ed      	bne.n	8006db6 <HAL_UART_Transmit+0x7e>
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 8006dda:	6821      	ldr	r1, [r4, #0]
 8006ddc:	f815 0b01 	ldrb.w	r0, [r5], #1
 8006de0:	6048      	str	r0, [r1, #4]
 8006de2:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006de6:	e7c8      	b.n	8006d7a <HAL_UART_Transmit+0x42>
      return  HAL_ERROR;
 8006de8:	2001      	movs	r0, #1
 8006dea:	e7e5      	b.n	8006db8 <HAL_UART_Transmit+0x80>
    return HAL_BUSY;
 8006dec:	2002      	movs	r0, #2
 8006dee:	e7e3      	b.n	8006db8 <HAL_UART_Transmit+0x80>

08006df0 <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
 8006df0:	f890 303a 	ldrb.w	r3, [r0, #58]	; 0x3a
 8006df4:	2b20      	cmp	r3, #32
 8006df6:	d120      	bne.n	8006e3a <HAL_UART_Receive_IT+0x4a>
    if ((pData == NULL) || (Size == 0U))
 8006df8:	b1e9      	cbz	r1, 8006e36 <HAL_UART_Receive_IT+0x46>
 8006dfa:	b1e2      	cbz	r2, 8006e36 <HAL_UART_Receive_IT+0x46>
    __HAL_LOCK(huart);
 8006dfc:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8006e00:	2b01      	cmp	r3, #1
 8006e02:	d01a      	beq.n	8006e3a <HAL_UART_Receive_IT+0x4a>
    huart->RxXferCount = Size;
 8006e04:	85c2      	strh	r2, [r0, #46]	; 0x2e
    huart->RxXferSize = Size;
 8006e06:	8582      	strh	r2, [r0, #44]	; 0x2c
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006e08:	2300      	movs	r3, #0
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8006e0a:	2222      	movs	r2, #34	; 0x22
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006e0c:	63c3      	str	r3, [r0, #60]	; 0x3c
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8006e0e:	f880 203a 	strb.w	r2, [r0, #58]	; 0x3a
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 8006e12:	6802      	ldr	r2, [r0, #0]
    __HAL_UNLOCK(huart);
 8006e14:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
    huart->pRxBuffPtr = pData;
 8006e18:	6281      	str	r1, [r0, #40]	; 0x28
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 8006e1a:	68d1      	ldr	r1, [r2, #12]
 8006e1c:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8006e20:	60d1      	str	r1, [r2, #12]
    __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 8006e22:	6951      	ldr	r1, [r2, #20]
 8006e24:	f041 0101 	orr.w	r1, r1, #1
 8006e28:	6151      	str	r1, [r2, #20]
    __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 8006e2a:	68d1      	ldr	r1, [r2, #12]
 8006e2c:	f041 0120 	orr.w	r1, r1, #32
 8006e30:	60d1      	str	r1, [r2, #12]
    return HAL_OK;
 8006e32:	4618      	mov	r0, r3
 8006e34:	4770      	bx	lr
      return HAL_ERROR;
 8006e36:	2001      	movs	r0, #1
 8006e38:	4770      	bx	lr
    return HAL_BUSY;
 8006e3a:	2002      	movs	r0, #2
}
 8006e3c:	4770      	bx	lr

08006e3e <HAL_UART_TxCpltCallback>:
 8006e3e:	4770      	bx	lr

08006e40 <UART_Receive_IT>:
{
 8006e40:	b510      	push	{r4, lr}
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8006e42:	f890 303a 	ldrb.w	r3, [r0, #58]	; 0x3a
 8006e46:	2b22      	cmp	r3, #34	; 0x22
 8006e48:	d133      	bne.n	8006eb2 <UART_Receive_IT+0x72>
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8006e4a:	6881      	ldr	r1, [r0, #8]
 8006e4c:	6904      	ldr	r4, [r0, #16]
 8006e4e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8006e50:	6802      	ldr	r2, [r0, #0]
 8006e52:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 8006e56:	d123      	bne.n	8006ea0 <UART_Receive_IT+0x60>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8006e58:	6852      	ldr	r2, [r2, #4]
      if (huart->Init.Parity == UART_PARITY_NONE)
 8006e5a:	b9ec      	cbnz	r4, 8006e98 <UART_Receive_IT+0x58>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8006e5c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006e60:	f823 2b02 	strh.w	r2, [r3], #2
        huart->pRxBuffPtr += 1U;
 8006e64:	6283      	str	r3, [r0, #40]	; 0x28
    if (--huart->RxXferCount == 0U)
 8006e66:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 8006e68:	3c01      	subs	r4, #1
 8006e6a:	b2a4      	uxth	r4, r4
 8006e6c:	85c4      	strh	r4, [r0, #46]	; 0x2e
 8006e6e:	b98c      	cbnz	r4, 8006e94 <UART_Receive_IT+0x54>
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 8006e70:	6803      	ldr	r3, [r0, #0]
 8006e72:	68da      	ldr	r2, [r3, #12]
 8006e74:	f022 0220 	bic.w	r2, r2, #32
 8006e78:	60da      	str	r2, [r3, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8006e7a:	68da      	ldr	r2, [r3, #12]
 8006e7c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006e80:	60da      	str	r2, [r3, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8006e82:	695a      	ldr	r2, [r3, #20]
 8006e84:	f022 0201 	bic.w	r2, r2, #1
 8006e88:	615a      	str	r2, [r3, #20]
      huart->RxState = HAL_UART_STATE_READY;
 8006e8a:	2320      	movs	r3, #32
 8006e8c:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
      HAL_UART_RxCpltCallback(huart);
 8006e90:	f7fa f94a 	bl	8001128 <HAL_UART_RxCpltCallback>
      return HAL_OK;
 8006e94:	2000      	movs	r0, #0
 8006e96:	e00d      	b.n	8006eb4 <UART_Receive_IT+0x74>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 8006e98:	b2d2      	uxtb	r2, r2
 8006e9a:	f823 2b01 	strh.w	r2, [r3], #1
 8006e9e:	e7e1      	b.n	8006e64 <UART_Receive_IT+0x24>
      if (huart->Init.Parity == UART_PARITY_NONE)
 8006ea0:	1c59      	adds	r1, r3, #1
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8006ea2:	6852      	ldr	r2, [r2, #4]
 8006ea4:	6281      	str	r1, [r0, #40]	; 0x28
      if (huart->Init.Parity == UART_PARITY_NONE)
 8006ea6:	b90c      	cbnz	r4, 8006eac <UART_Receive_IT+0x6c>
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8006ea8:	701a      	strb	r2, [r3, #0]
 8006eaa:	e7dc      	b.n	8006e66 <UART_Receive_IT+0x26>
 8006eac:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8006eb0:	e7fa      	b.n	8006ea8 <UART_Receive_IT+0x68>
    return HAL_BUSY;
 8006eb2:	2002      	movs	r0, #2
}
 8006eb4:	bd10      	pop	{r4, pc}

08006eb6 <HAL_UART_ErrorCallback>:
 8006eb6:	4770      	bx	lr

08006eb8 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8006eb8:	6803      	ldr	r3, [r0, #0]
 8006eba:	681a      	ldr	r2, [r3, #0]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8006ebc:	68d9      	ldr	r1, [r3, #12]
{
 8006ebe:	b570      	push	{r4, r5, r6, lr}
  if (errorflags == RESET)
 8006ec0:	0716      	lsls	r6, r2, #28
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8006ec2:	695d      	ldr	r5, [r3, #20]
{
 8006ec4:	4604      	mov	r4, r0
  if (errorflags == RESET)
 8006ec6:	d107      	bne.n	8006ed8 <HAL_UART_IRQHandler+0x20>
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8006ec8:	0696      	lsls	r6, r2, #26
 8006eca:	d55c      	bpl.n	8006f86 <HAL_UART_IRQHandler+0xce>
 8006ecc:	068d      	lsls	r5, r1, #26
 8006ece:	d55a      	bpl.n	8006f86 <HAL_UART_IRQHandler+0xce>
}
 8006ed0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      UART_Receive_IT(huart);
 8006ed4:	f7ff bfb4 	b.w	8006e40 <UART_Receive_IT>
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8006ed8:	f005 0001 	and.w	r0, r5, #1
 8006edc:	f401 7590 	and.w	r5, r1, #288	; 0x120
 8006ee0:	4305      	orrs	r5, r0
 8006ee2:	d050      	beq.n	8006f86 <HAL_UART_IRQHandler+0xce>
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8006ee4:	07d6      	lsls	r6, r2, #31
 8006ee6:	d505      	bpl.n	8006ef4 <HAL_UART_IRQHandler+0x3c>
 8006ee8:	05cd      	lsls	r5, r1, #23
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8006eea:	bf42      	ittt	mi
 8006eec:	6be3      	ldrmi	r3, [r4, #60]	; 0x3c
 8006eee:	f043 0301 	orrmi.w	r3, r3, #1
 8006ef2:	63e3      	strmi	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8006ef4:	0753      	lsls	r3, r2, #29
 8006ef6:	d504      	bpl.n	8006f02 <HAL_UART_IRQHandler+0x4a>
 8006ef8:	b118      	cbz	r0, 8006f02 <HAL_UART_IRQHandler+0x4a>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8006efa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006efc:	f043 0302 	orr.w	r3, r3, #2
 8006f00:	63e3      	str	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8006f02:	0796      	lsls	r6, r2, #30
 8006f04:	d504      	bpl.n	8006f10 <HAL_UART_IRQHandler+0x58>
 8006f06:	b118      	cbz	r0, 8006f10 <HAL_UART_IRQHandler+0x58>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8006f08:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006f0a:	f043 0304 	orr.w	r3, r3, #4
 8006f0e:	63e3      	str	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 8006f10:	0715      	lsls	r5, r2, #28
 8006f12:	d507      	bpl.n	8006f24 <HAL_UART_IRQHandler+0x6c>
 8006f14:	f001 0320 	and.w	r3, r1, #32
 8006f18:	4303      	orrs	r3, r0
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8006f1a:	bf1e      	ittt	ne
 8006f1c:	6be3      	ldrne	r3, [r4, #60]	; 0x3c
 8006f1e:	f043 0308 	orrne.w	r3, r3, #8
 8006f22:	63e3      	strne	r3, [r4, #60]	; 0x3c
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8006f24:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006f26:	b34b      	cbz	r3, 8006f7c <HAL_UART_IRQHandler+0xc4>
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8006f28:	0690      	lsls	r0, r2, #26
 8006f2a:	d504      	bpl.n	8006f36 <HAL_UART_IRQHandler+0x7e>
 8006f2c:	0689      	lsls	r1, r1, #26
 8006f2e:	d502      	bpl.n	8006f36 <HAL_UART_IRQHandler+0x7e>
        UART_Receive_IT(huart);
 8006f30:	4620      	mov	r0, r4
 8006f32:	f7ff ff85 	bl	8006e40 <UART_Receive_IT>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8006f36:	6823      	ldr	r3, [r4, #0]
 8006f38:	695b      	ldr	r3, [r3, #20]
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8006f3a:	6be5      	ldr	r5, [r4, #60]	; 0x3c
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8006f3c:	f003 0340 	and.w	r3, r3, #64	; 0x40
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8006f40:	f005 0508 	and.w	r5, r5, #8
 8006f44:	431d      	orrs	r5, r3
        UART_EndRxTransfer(huart);
 8006f46:	4620      	mov	r0, r4
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8006f48:	d019      	beq.n	8006f7e <HAL_UART_IRQHandler+0xc6>
        UART_EndRxTransfer(huart);
 8006f4a:	f7ff fe23 	bl	8006b94 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8006f4e:	6823      	ldr	r3, [r4, #0]
 8006f50:	695a      	ldr	r2, [r3, #20]
 8006f52:	0652      	lsls	r2, r2, #25
 8006f54:	d50f      	bpl.n	8006f76 <HAL_UART_IRQHandler+0xbe>
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8006f56:	695a      	ldr	r2, [r3, #20]
          if (huart->hdmarx != NULL)
 8006f58:	6b60      	ldr	r0, [r4, #52]	; 0x34
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8006f5a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006f5e:	615a      	str	r2, [r3, #20]
          if (huart->hdmarx != NULL)
 8006f60:	b148      	cbz	r0, 8006f76 <HAL_UART_IRQHandler+0xbe>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8006f62:	4b26      	ldr	r3, [pc, #152]	; (8006ffc <HAL_UART_IRQHandler+0x144>)
 8006f64:	6503      	str	r3, [r0, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8006f66:	f7fd fd91 	bl	8004a8c <HAL_DMA_Abort_IT>
 8006f6a:	b138      	cbz	r0, 8006f7c <HAL_UART_IRQHandler+0xc4>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8006f6c:	6b60      	ldr	r0, [r4, #52]	; 0x34
}
 8006f6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8006f72:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8006f74:	4718      	bx	r3
            HAL_UART_ErrorCallback(huart);
 8006f76:	4620      	mov	r0, r4
 8006f78:	f7ff ff9d 	bl	8006eb6 <HAL_UART_ErrorCallback>
}
 8006f7c:	bd70      	pop	{r4, r5, r6, pc}
        HAL_UART_ErrorCallback(huart);
 8006f7e:	f7ff ff9a 	bl	8006eb6 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006f82:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006f84:	e7fa      	b.n	8006f7c <HAL_UART_IRQHandler+0xc4>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 8006f86:	0616      	lsls	r6, r2, #24
 8006f88:	d528      	bpl.n	8006fdc <HAL_UART_IRQHandler+0x124>
 8006f8a:	060d      	lsls	r5, r1, #24
 8006f8c:	d526      	bpl.n	8006fdc <HAL_UART_IRQHandler+0x124>
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8006f8e:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8006f92:	2a21      	cmp	r2, #33	; 0x21
 8006f94:	d1f2      	bne.n	8006f7c <HAL_UART_IRQHandler+0xc4>
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8006f96:	68a1      	ldr	r1, [r4, #8]
 8006f98:	6a22      	ldr	r2, [r4, #32]
 8006f9a:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 8006f9e:	d118      	bne.n	8006fd2 <HAL_UART_IRQHandler+0x11a>
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8006fa0:	8811      	ldrh	r1, [r2, #0]
 8006fa2:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8006fa6:	6059      	str	r1, [r3, #4]
      if (huart->Init.Parity == UART_PARITY_NONE)
 8006fa8:	6921      	ldr	r1, [r4, #16]
 8006faa:	b981      	cbnz	r1, 8006fce <HAL_UART_IRQHandler+0x116>
        huart->pTxBuffPtr += 2U;
 8006fac:	3202      	adds	r2, #2
        huart->pTxBuffPtr += 1U;
 8006fae:	6222      	str	r2, [r4, #32]
    if (--huart->TxXferCount == 0U)
 8006fb0:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8006fb2:	3a01      	subs	r2, #1
 8006fb4:	b292      	uxth	r2, r2
 8006fb6:	84e2      	strh	r2, [r4, #38]	; 0x26
 8006fb8:	2a00      	cmp	r2, #0
 8006fba:	d1df      	bne.n	8006f7c <HAL_UART_IRQHandler+0xc4>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 8006fbc:	68da      	ldr	r2, [r3, #12]
 8006fbe:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006fc2:	60da      	str	r2, [r3, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 8006fc4:	68da      	ldr	r2, [r3, #12]
 8006fc6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006fca:	60da      	str	r2, [r3, #12]
 8006fcc:	e7d6      	b.n	8006f7c <HAL_UART_IRQHandler+0xc4>
        huart->pTxBuffPtr += 1U;
 8006fce:	3201      	adds	r2, #1
 8006fd0:	e7ed      	b.n	8006fae <HAL_UART_IRQHandler+0xf6>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 8006fd2:	1c51      	adds	r1, r2, #1
 8006fd4:	6221      	str	r1, [r4, #32]
 8006fd6:	7812      	ldrb	r2, [r2, #0]
 8006fd8:	605a      	str	r2, [r3, #4]
 8006fda:	e7e9      	b.n	8006fb0 <HAL_UART_IRQHandler+0xf8>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 8006fdc:	0650      	lsls	r0, r2, #25
 8006fde:	d5cd      	bpl.n	8006f7c <HAL_UART_IRQHandler+0xc4>
 8006fe0:	064a      	lsls	r2, r1, #25
 8006fe2:	d5cb      	bpl.n	8006f7c <HAL_UART_IRQHandler+0xc4>
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8006fe4:	68da      	ldr	r2, [r3, #12]
 8006fe6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006fea:	60da      	str	r2, [r3, #12]
  huart->gState = HAL_UART_STATE_READY;
 8006fec:	2320      	movs	r3, #32
 8006fee:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  HAL_UART_TxCpltCallback(huart);
 8006ff2:	4620      	mov	r0, r4
 8006ff4:	f7ff ff23 	bl	8006e3e <HAL_UART_TxCpltCallback>
  return HAL_OK;
 8006ff8:	e7c0      	b.n	8006f7c <HAL_UART_IRQHandler+0xc4>
 8006ffa:	bf00      	nop
 8006ffc:	08007001 	.word	0x08007001

08007000 <UART_DMAAbortOnError>:
{
 8007000:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8007002:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 8007004:	2300      	movs	r3, #0
 8007006:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 8007008:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 800700a:	f7ff ff54 	bl	8006eb6 <HAL_UART_ErrorCallback>
}
 800700e:	bd08      	pop	{r3, pc}

08007010 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007010:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007014:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8007016:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 800701a:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800701e:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8007022:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8007026:	6809      	ldr	r1, [r1, #0]
 8007028:	2901      	cmp	r1, #1
 800702a:	ea43 0304 	orr.w	r3, r3, r4
 800702e:	4912      	ldr	r1, [pc, #72]	; (8007078 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8007030:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8007032:	d00f      	beq.n	8007054 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007034:	431a      	orrs	r2, r3
 8007036:	432a      	orrs	r2, r5
 8007038:	ea42 0308 	orr.w	r3, r2, r8
 800703c:	ea43 030e 	orr.w	r3, r3, lr
 8007040:	ea43 030c 	orr.w	r3, r3, ip
 8007044:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007046:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007048:	4333      	orrs	r3, r6
 800704a:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800704c:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800704e:	2000      	movs	r0, #0
 8007050:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007054:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8007056:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007058:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800705a:	ea45 0208 	orr.w	r2, r5, r8
 800705e:	ea42 020e 	orr.w	r2, r2, lr
 8007062:	ea42 020c 	orr.w	r2, r2, ip
 8007066:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8007068:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800706c:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800706e:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007070:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007072:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8007074:	6042      	str	r2, [r0, #4]
 8007076:	e7ea      	b.n	800704e <FMC_SDRAM_Init+0x3e>
 8007078:	ffff8000 	.word	0xffff8000

0800707c <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 800707c:	68cb      	ldr	r3, [r1, #12]
{
 800707e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007080:	680c      	ldr	r4, [r1, #0]
 8007082:	688e      	ldr	r6, [r1, #8]
 8007084:	690d      	ldr	r5, [r1, #16]
 8007086:	1e5f      	subs	r7, r3, #1
 8007088:	694b      	ldr	r3, [r1, #20]
 800708a:	f104 3cff 	add.w	ip, r4, #4294967295
 800708e:	684c      	ldr	r4, [r1, #4]
 8007090:	6989      	ldr	r1, [r1, #24]
 8007092:	3b01      	subs	r3, #1
 8007094:	051b      	lsls	r3, r3, #20
 8007096:	3c01      	subs	r4, #1
 8007098:	3e01      	subs	r6, #1
 800709a:	3d01      	subs	r5, #1
 800709c:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 800709e:	2a01      	cmp	r2, #1
 80070a0:	ea4f 1404 	mov.w	r4, r4, lsl #4
 80070a4:	ea4f 2606 	mov.w	r6, r6, lsl #8
 80070a8:	ea4f 4505 	mov.w	r5, r5, lsl #16
 80070ac:	ea4f 6101 	mov.w	r1, r1, lsl #24
 80070b0:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 80070b4:	d00c      	beq.n	80070d0 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80070b6:	ea43 030c 	orr.w	r3, r3, ip
 80070ba:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80070bc:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80070be:	4333      	orrs	r3, r6
 80070c0:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80070c2:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80070c6:	430b      	orrs	r3, r1
 80070c8:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80070ca:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 80070cc:	2000      	movs	r0, #0
 80070ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80070d0:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 80070d2:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 80070d6:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80070da:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 80070dc:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80070de:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 80070e2:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80070e4:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80070e6:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80070e8:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80070ec:	430a      	orrs	r2, r1
 80070ee:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 80070f0:	60c2      	str	r2, [r0, #12]
 80070f2:	e7eb      	b.n	80070cc <FMC_SDRAM_Timing_Init+0x50>

080070f4 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80070f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 80070f6:	2300      	movs	r3, #0
 80070f8:	9301      	str	r3, [sp, #4]
{
 80070fa:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80070fc:	e9d1 3200 	ldrd	r3, r2, [r1]
 8007100:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8007102:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007104:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8007108:	688a      	ldr	r2, [r1, #8]
 800710a:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800710c:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007110:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8007112:	9b01      	ldr	r3, [sp, #4]
 8007114:	6103      	str	r3, [r0, #16]
{
 8007116:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8007118:	f7fd fc3c 	bl	8004994 <HAL_GetTick>
 800711c:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800711e:	69a3      	ldr	r3, [r4, #24]
 8007120:	f013 0320 	ands.w	r3, r3, #32
 8007124:	d101      	bne.n	800712a <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007126:	4618      	mov	r0, r3
 8007128:	e003      	b.n	8007132 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800712a:	1c6b      	adds	r3, r5, #1
 800712c:	d0f7      	beq.n	800711e <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800712e:	b915      	cbnz	r5, 8007136 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8007130:	2003      	movs	r0, #3
}
 8007132:	b002      	add	sp, #8
 8007134:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007136:	f7fd fc2d 	bl	8004994 <HAL_GetTick>
 800713a:	1b80      	subs	r0, r0, r6
 800713c:	42a8      	cmp	r0, r5
 800713e:	d9ee      	bls.n	800711e <FMC_SDRAM_SendCommand+0x2a>
 8007140:	e7f6      	b.n	8007130 <FMC_SDRAM_SendCommand+0x3c>

08007142 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8007142:	6943      	ldr	r3, [r0, #20]
 8007144:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8007148:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800714a:	2000      	movs	r0, #0
 800714c:	4770      	bx	lr
	...

08007150 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007150:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007154:	b113      	cbz	r3, 800715c <osKernelInitialize+0xc>
    stat = osErrorISR;
 8007156:	f06f 0005 	mvn.w	r0, #5
 800715a:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800715c:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007160:	4b07      	ldr	r3, [pc, #28]	; (8007180 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8007162:	b912      	cbnz	r2, 800716a <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007164:	f3ef 8211 	mrs	r2, BASEPRI
 8007168:	b112      	cbz	r2, 8007170 <osKernelInitialize+0x20>
 800716a:	681a      	ldr	r2, [r3, #0]
 800716c:	2a02      	cmp	r2, #2
 800716e:	d0f2      	beq.n	8007156 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8007170:	6818      	ldr	r0, [r3, #0]
 8007172:	b910      	cbnz	r0, 800717a <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007174:	2201      	movs	r2, #1
 8007176:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007178:	4770      	bx	lr
    } else {
      stat = osError;
 800717a:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800717e:	4770      	bx	lr
 8007180:	20002a50 	.word	0x20002a50

08007184 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007184:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007186:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800718a:	b113      	cbz	r3, 8007192 <osKernelStart+0xe>
    stat = osErrorISR;
 800718c:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8007190:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007192:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007196:	4b0a      	ldr	r3, [pc, #40]	; (80071c0 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8007198:	b912      	cbnz	r2, 80071a0 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800719a:	f3ef 8211 	mrs	r2, BASEPRI
 800719e:	b112      	cbz	r2, 80071a6 <osKernelStart+0x22>
 80071a0:	681a      	ldr	r2, [r3, #0]
 80071a2:	2a02      	cmp	r2, #2
 80071a4:	d0f2      	beq.n	800718c <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 80071a6:	681a      	ldr	r2, [r3, #0]
 80071a8:	2a01      	cmp	r2, #1
 80071aa:	d105      	bne.n	80071b8 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 80071ac:	2202      	movs	r2, #2
 80071ae:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 80071b0:	f001 fbcc 	bl	800894c <vTaskStartScheduler>
      stat = osOK;
 80071b4:	2000      	movs	r0, #0
 80071b6:	e7eb      	b.n	8007190 <osKernelStart+0xc>
      stat = osError;
 80071b8:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80071bc:	e7e8      	b.n	8007190 <osKernelStart+0xc>
 80071be:	bf00      	nop
 80071c0:	20002a50 	.word	0x20002a50

080071c4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80071c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80071c6:	b087      	sub	sp, #28
 80071c8:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80071ca:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80071cc:	460b      	mov	r3, r1
  hTask = NULL;
 80071ce:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80071d0:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80071d4:	bb22      	cbnz	r2, 8007220 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80071d6:	f3ef 8210 	mrs	r2, PRIMASK
 80071da:	b912      	cbnz	r2, 80071e2 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80071dc:	f3ef 8211 	mrs	r2, BASEPRI
 80071e0:	b11a      	cbz	r2, 80071ea <osThreadNew+0x26>
 80071e2:	4a22      	ldr	r2, [pc, #136]	; (800726c <osThreadNew+0xa8>)
 80071e4:	6812      	ldr	r2, [r2, #0]
 80071e6:	2a02      	cmp	r2, #2
 80071e8:	d01a      	beq.n	8007220 <osThreadNew+0x5c>
 80071ea:	b1c8      	cbz	r0, 8007220 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80071ec:	2c00      	cmp	r4, #0
 80071ee:	d02f      	beq.n	8007250 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80071f0:	69a5      	ldr	r5, [r4, #24]
 80071f2:	2d00      	cmp	r5, #0
 80071f4:	bf08      	it	eq
 80071f6:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80071f8:	1e6a      	subs	r2, r5, #1
 80071fa:	2a37      	cmp	r2, #55	; 0x37
 80071fc:	46ac      	mov	ip, r5
 80071fe:	d82b      	bhi.n	8007258 <osThreadNew+0x94>
 8007200:	6862      	ldr	r2, [r4, #4]
 8007202:	07d2      	lsls	r2, r2, #31
 8007204:	d428      	bmi.n	8007258 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8007206:	6966      	ldr	r6, [r4, #20]
 8007208:	b16e      	cbz	r6, 8007226 <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800720a:	08b2      	lsrs	r2, r6, #2
 800720c:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8007210:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007212:	b157      	cbz	r7, 800722a <osThreadNew+0x66>
 8007214:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8007218:	d902      	bls.n	8007220 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800721a:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800721c:	b104      	cbz	r4, 8007220 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800721e:	b9ee      	cbnz	r6, 800725c <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007220:	9805      	ldr	r0, [sp, #20]
}
 8007222:	b007      	add	sp, #28
 8007224:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007226:	2280      	movs	r2, #128	; 0x80
 8007228:	e7f0      	b.n	800720c <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800722a:	f1be 0f00 	cmp.w	lr, #0
 800722e:	d1f7      	bne.n	8007220 <osThreadNew+0x5c>
      if (mem == 0) {
 8007230:	6924      	ldr	r4, [r4, #16]
 8007232:	2c00      	cmp	r4, #0
 8007234:	d1f4      	bne.n	8007220 <osThreadNew+0x5c>
 8007236:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007238:	a905      	add	r1, sp, #20
 800723a:	e9cd c100 	strd	ip, r1, [sp]
 800723e:	b292      	uxth	r2, r2
 8007240:	4621      	mov	r1, r4
 8007242:	f001 fb55 	bl	80088f0 <xTaskCreate>
 8007246:	2801      	cmp	r0, #1
          hTask = NULL;
 8007248:	bf1c      	itt	ne
 800724a:	2300      	movne	r3, #0
 800724c:	9305      	strne	r3, [sp, #20]
 800724e:	e7e7      	b.n	8007220 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8007250:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8007254:	2280      	movs	r2, #128	; 0x80
 8007256:	e7ef      	b.n	8007238 <osThreadNew+0x74>
        return (NULL);
 8007258:	2000      	movs	r0, #0
 800725a:	e7e2      	b.n	8007222 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800725c:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8007260:	9500      	str	r5, [sp, #0]
 8007262:	f001 fb0d 	bl	8008880 <xTaskCreateStatic>
 8007266:	9005      	str	r0, [sp, #20]
 8007268:	e7da      	b.n	8007220 <osThreadNew+0x5c>
 800726a:	bf00      	nop
 800726c:	20002a50 	.word	0x20002a50

08007270 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8007270:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007272:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007276:	b113      	cbz	r3, 800727e <osDelay+0xe>
    stat = osErrorISR;
 8007278:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800727c:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800727e:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007282:	b913      	cbnz	r3, 800728a <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007284:	f3ef 8311 	mrs	r3, BASEPRI
 8007288:	b11b      	cbz	r3, 8007292 <osDelay+0x22>
 800728a:	4b05      	ldr	r3, [pc, #20]	; (80072a0 <osDelay+0x30>)
 800728c:	681b      	ldr	r3, [r3, #0]
 800728e:	2b02      	cmp	r3, #2
 8007290:	d0f2      	beq.n	8007278 <osDelay+0x8>
    if (ticks != 0U) {
 8007292:	2800      	cmp	r0, #0
 8007294:	d0f2      	beq.n	800727c <osDelay+0xc>
      vTaskDelay(ticks);
 8007296:	f001 fcb5 	bl	8008c04 <vTaskDelay>
    stat = osOK;
 800729a:	2000      	movs	r0, #0
 800729c:	e7ee      	b.n	800727c <osDelay+0xc>
 800729e:	bf00      	nop
 80072a0:	20002a50 	.word	0x20002a50

080072a4 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80072a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80072a6:	460e      	mov	r6, r1
 80072a8:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80072aa:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80072ae:	b11b      	cbz	r3, 80072b8 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80072b0:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80072b2:	4620      	mov	r0, r4
 80072b4:	b002      	add	sp, #8
 80072b6:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80072b8:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80072bc:	b913      	cbnz	r3, 80072c4 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80072be:	f3ef 8311 	mrs	r3, BASEPRI
 80072c2:	b11b      	cbz	r3, 80072cc <osSemaphoreNew+0x28>
 80072c4:	4b21      	ldr	r3, [pc, #132]	; (800734c <osSemaphoreNew+0xa8>)
 80072c6:	681b      	ldr	r3, [r3, #0]
 80072c8:	2b02      	cmp	r3, #2
 80072ca:	d0f1      	beq.n	80072b0 <osSemaphoreNew+0xc>
 80072cc:	2800      	cmp	r0, #0
 80072ce:	d0ef      	beq.n	80072b0 <osSemaphoreNew+0xc>
 80072d0:	42b0      	cmp	r0, r6
 80072d2:	d3ed      	bcc.n	80072b0 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 80072d4:	b1ed      	cbz	r5, 8007312 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80072d6:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 80072da:	b1c3      	cbz	r3, 800730e <osSemaphoreNew+0x6a>
 80072dc:	2a4f      	cmp	r2, #79	; 0x4f
 80072de:	d9e7      	bls.n	80072b0 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 80072e0:	2801      	cmp	r0, #1
 80072e2:	d129      	bne.n	8007338 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80072e4:	2203      	movs	r2, #3
 80072e6:	9200      	str	r2, [sp, #0]
 80072e8:	2200      	movs	r2, #0
 80072ea:	4611      	mov	r1, r2
 80072ec:	f000 fd2a 	bl	8007d44 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 80072f0:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80072f2:	2800      	cmp	r0, #0
 80072f4:	d0dc      	beq.n	80072b0 <osSemaphoreNew+0xc>
 80072f6:	b1ce      	cbz	r6, 800732c <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80072f8:	2300      	movs	r3, #0
 80072fa:	461a      	mov	r2, r3
 80072fc:	4619      	mov	r1, r3
 80072fe:	f000 fdd7 	bl	8007eb0 <xQueueGenericSend>
 8007302:	2801      	cmp	r0, #1
 8007304:	d012      	beq.n	800732c <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8007306:	4620      	mov	r0, r4
 8007308:	f001 f918 	bl	800853c <vQueueDelete>
 800730c:	e7d0      	b.n	80072b0 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800730e:	2a00      	cmp	r2, #0
 8007310:	d1ce      	bne.n	80072b0 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8007312:	2801      	cmp	r0, #1
 8007314:	d104      	bne.n	8007320 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8007316:	2203      	movs	r2, #3
 8007318:	2100      	movs	r1, #0
 800731a:	f000 fd61 	bl	8007de0 <xQueueGenericCreate>
 800731e:	e7e7      	b.n	80072f0 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007320:	4631      	mov	r1, r6
 8007322:	f000 fda6 	bl	8007e72 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8007326:	4604      	mov	r4, r0
 8007328:	2800      	cmp	r0, #0
 800732a:	d0c1      	beq.n	80072b0 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 800732c:	b95d      	cbnz	r5, 8007346 <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 800732e:	4629      	mov	r1, r5
 8007330:	4620      	mov	r0, r4
 8007332:	f001 f8d9 	bl	80084e8 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8007336:	e7bc      	b.n	80072b2 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8007338:	461a      	mov	r2, r3
 800733a:	4631      	mov	r1, r6
 800733c:	f000 fd77 	bl	8007e2e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8007340:	4604      	mov	r4, r0
 8007342:	2800      	cmp	r0, #0
 8007344:	d0b4      	beq.n	80072b0 <osSemaphoreNew+0xc>
          name = attr->name;
 8007346:	682d      	ldr	r5, [r5, #0]
 8007348:	e7f1      	b.n	800732e <osSemaphoreNew+0x8a>
 800734a:	bf00      	nop
 800734c:	20002a50 	.word	0x20002a50

08007350 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8007350:	b513      	push	{r0, r1, r4, lr}
 8007352:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007354:	b918      	cbnz	r0, 800735e <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8007356:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800735a:	b002      	add	sp, #8
 800735c:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800735e:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8007362:	b163      	cbz	r3, 800737e <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8007364:	2c00      	cmp	r4, #0
 8007366:	d1f6      	bne.n	8007356 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007368:	aa01      	add	r2, sp, #4
 800736a:	4621      	mov	r1, r4
      yield = pdFALSE;
 800736c:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800736e:	f001 f86b 	bl	8008448 <xQueueReceiveFromISR>
 8007372:	2801      	cmp	r0, #1
 8007374:	d113      	bne.n	800739e <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 8007376:	9b01      	ldr	r3, [sp, #4]
 8007378:	b9a3      	cbnz	r3, 80073a4 <osSemaphoreAcquire+0x54>
  stat = osOK;
 800737a:	2000      	movs	r0, #0
 800737c:	e7ed      	b.n	800735a <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800737e:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8007382:	b913      	cbnz	r3, 800738a <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007384:	f3ef 8311 	mrs	r3, BASEPRI
 8007388:	b11b      	cbz	r3, 8007392 <osSemaphoreAcquire+0x42>
 800738a:	4b0c      	ldr	r3, [pc, #48]	; (80073bc <osSemaphoreAcquire+0x6c>)
 800738c:	681b      	ldr	r3, [r3, #0]
 800738e:	2b02      	cmp	r3, #2
 8007390:	d0e8      	beq.n	8007364 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007392:	4621      	mov	r1, r4
 8007394:	f000 ff94 	bl	80082c0 <xQueueSemaphoreTake>
 8007398:	2801      	cmp	r0, #1
 800739a:	d0ee      	beq.n	800737a <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 800739c:	b95c      	cbnz	r4, 80073b6 <osSemaphoreAcquire+0x66>
        stat = osErrorResource;
 800739e:	f06f 0002 	mvn.w	r0, #2
 80073a2:	e7da      	b.n	800735a <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 80073a4:	4b06      	ldr	r3, [pc, #24]	; (80073c0 <osSemaphoreAcquire+0x70>)
 80073a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80073aa:	601a      	str	r2, [r3, #0]
 80073ac:	f3bf 8f4f 	dsb	sy
 80073b0:	f3bf 8f6f 	isb	sy
 80073b4:	e7e1      	b.n	800737a <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 80073b6:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80073ba:	e7ce      	b.n	800735a <osSemaphoreAcquire+0xa>
 80073bc:	20002a50 	.word	0x20002a50
 80073c0:	e000ed04 	.word	0xe000ed04

080073c4 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80073c4:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80073c6:	b360      	cbz	r0, 8007422 <osSemaphoreRelease+0x5e>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80073c8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80073cc:	b14b      	cbz	r3, 80073e2 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 80073ce:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80073d0:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80073d2:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80073d4:	f000 fe7f 	bl	80080d6 <xQueueGiveFromISR>
 80073d8:	2801      	cmp	r0, #1
 80073da:	d014      	beq.n	8007406 <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 80073dc:	f06f 0002 	mvn.w	r0, #2
 80073e0:	e014      	b.n	800740c <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80073e2:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80073e6:	b913      	cbnz	r3, 80073ee <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80073e8:	f3ef 8311 	mrs	r3, BASEPRI
 80073ec:	b11b      	cbz	r3, 80073f6 <osSemaphoreRelease+0x32>
 80073ee:	4b0e      	ldr	r3, [pc, #56]	; (8007428 <osSemaphoreRelease+0x64>)
 80073f0:	681b      	ldr	r3, [r3, #0]
 80073f2:	2b02      	cmp	r3, #2
 80073f4:	d0eb      	beq.n	80073ce <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80073f6:	2300      	movs	r3, #0
 80073f8:	461a      	mov	r2, r3
 80073fa:	4619      	mov	r1, r3
 80073fc:	f000 fd58 	bl	8007eb0 <xQueueGenericSend>
 8007400:	2801      	cmp	r0, #1
 8007402:	d002      	beq.n	800740a <osSemaphoreRelease+0x46>
 8007404:	e7ea      	b.n	80073dc <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8007406:	9b01      	ldr	r3, [sp, #4]
 8007408:	b913      	cbnz	r3, 8007410 <osSemaphoreRelease+0x4c>
  stat = osOK;
 800740a:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800740c:	b002      	add	sp, #8
 800740e:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8007410:	4b06      	ldr	r3, [pc, #24]	; (800742c <osSemaphoreRelease+0x68>)
 8007412:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007416:	601a      	str	r2, [r3, #0]
 8007418:	f3bf 8f4f 	dsb	sy
 800741c:	f3bf 8f6f 	isb	sy
 8007420:	e7f3      	b.n	800740a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 8007422:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007426:	e7f1      	b.n	800740c <osSemaphoreRelease+0x48>
 8007428:	20002a50 	.word	0x20002a50
 800742c:	e000ed04 	.word	0xe000ed04

08007430 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007430:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007432:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007434:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007438:	b11b      	cbz	r3, 8007442 <osMessageQueueNew+0x12>
  hQueue = NULL;
 800743a:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800743c:	4628      	mov	r0, r5
 800743e:	b002      	add	sp, #8
 8007440:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007442:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007446:	b913      	cbnz	r3, 800744e <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007448:	f3ef 8311 	mrs	r3, BASEPRI
 800744c:	b11b      	cbz	r3, 8007456 <osMessageQueueNew+0x26>
 800744e:	4b1a      	ldr	r3, [pc, #104]	; (80074b8 <osMessageQueueNew+0x88>)
 8007450:	681b      	ldr	r3, [r3, #0]
 8007452:	2b02      	cmp	r3, #2
 8007454:	d0f1      	beq.n	800743a <osMessageQueueNew+0xa>
 8007456:	2800      	cmp	r0, #0
 8007458:	d0ef      	beq.n	800743a <osMessageQueueNew+0xa>
 800745a:	2900      	cmp	r1, #0
 800745c:	d0ed      	beq.n	800743a <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800745e:	b1ec      	cbz	r4, 800749c <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007460:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8007464:	b193      	cbz	r3, 800748c <osMessageQueueNew+0x5c>
 8007466:	2a4f      	cmp	r2, #79	; 0x4f
 8007468:	d9e7      	bls.n	800743a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800746a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800746c:	2a00      	cmp	r2, #0
 800746e:	d0e4      	beq.n	800743a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007470:	6966      	ldr	r6, [r4, #20]
 8007472:	fb01 f500 	mul.w	r5, r1, r0
 8007476:	42ae      	cmp	r6, r5
 8007478:	d3df      	bcc.n	800743a <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800747a:	2500      	movs	r5, #0
 800747c:	9500      	str	r5, [sp, #0]
 800747e:	f000 fc61 	bl	8007d44 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007482:	4605      	mov	r5, r0
 8007484:	2800      	cmp	r0, #0
 8007486:	d0d8      	beq.n	800743a <osMessageQueueNew+0xa>
        name = attr->name;
 8007488:	6824      	ldr	r4, [r4, #0]
 800748a:	e00f      	b.n	80074ac <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800748c:	2a00      	cmp	r2, #0
 800748e:	d1d4      	bne.n	800743a <osMessageQueueNew+0xa>
 8007490:	6923      	ldr	r3, [r4, #16]
 8007492:	2b00      	cmp	r3, #0
 8007494:	d1d1      	bne.n	800743a <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007496:	6963      	ldr	r3, [r4, #20]
 8007498:	2b00      	cmp	r3, #0
 800749a:	d1ce      	bne.n	800743a <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 800749c:	2200      	movs	r2, #0
 800749e:	f000 fc9f 	bl	8007de0 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80074a2:	4605      	mov	r5, r0
 80074a4:	2800      	cmp	r0, #0
 80074a6:	d0c8      	beq.n	800743a <osMessageQueueNew+0xa>
      if (attr != NULL) {
 80074a8:	2c00      	cmp	r4, #0
 80074aa:	d1ed      	bne.n	8007488 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 80074ac:	4621      	mov	r1, r4
 80074ae:	4628      	mov	r0, r5
 80074b0:	f001 f81a 	bl	80084e8 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80074b4:	e7c2      	b.n	800743c <osMessageQueueNew+0xc>
 80074b6:	bf00      	nop
 80074b8:	20002a50 	.word	0x20002a50

080074bc <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80074bc:	b513      	push	{r0, r1, r4, lr}
 80074be:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80074c0:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80074c4:	b123      	cbz	r3, 80074d0 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80074c6:	b9d8      	cbnz	r0, 8007500 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 80074c8:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80074cc:	b002      	add	sp, #8
 80074ce:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80074d0:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80074d4:	b913      	cbnz	r3, 80074dc <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80074d6:	f3ef 8311 	mrs	r3, BASEPRI
 80074da:	b11b      	cbz	r3, 80074e4 <osMessageQueuePut+0x28>
 80074dc:	4b16      	ldr	r3, [pc, #88]	; (8007538 <osMessageQueuePut+0x7c>)
 80074de:	681b      	ldr	r3, [r3, #0]
 80074e0:	2b02      	cmp	r3, #2
 80074e2:	d0f0      	beq.n	80074c6 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80074e4:	2800      	cmp	r0, #0
 80074e6:	d0ef      	beq.n	80074c8 <osMessageQueuePut+0xc>
 80074e8:	2900      	cmp	r1, #0
 80074ea:	d0ed      	beq.n	80074c8 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80074ec:	2300      	movs	r3, #0
 80074ee:	4622      	mov	r2, r4
 80074f0:	f000 fcde 	bl	8007eb0 <xQueueGenericSend>
 80074f4:	2801      	cmp	r0, #1
 80074f6:	d010      	beq.n	800751a <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 80074f8:	b9d4      	cbnz	r4, 8007530 <osMessageQueuePut+0x74>
          stat = osErrorResource;
 80074fa:	f06f 0002 	mvn.w	r0, #2
 80074fe:	e7e5      	b.n	80074cc <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007500:	2900      	cmp	r1, #0
 8007502:	d0e1      	beq.n	80074c8 <osMessageQueuePut+0xc>
 8007504:	2c00      	cmp	r4, #0
 8007506:	d1df      	bne.n	80074c8 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007508:	4623      	mov	r3, r4
 800750a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800750c:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800750e:	f000 fd81 	bl	8008014 <xQueueGenericSendFromISR>
 8007512:	2801      	cmp	r0, #1
 8007514:	d1f1      	bne.n	80074fa <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8007516:	9b01      	ldr	r3, [sp, #4]
 8007518:	b90b      	cbnz	r3, 800751e <osMessageQueuePut+0x62>
  stat = osOK;
 800751a:	2000      	movs	r0, #0
 800751c:	e7d6      	b.n	80074cc <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 800751e:	4b07      	ldr	r3, [pc, #28]	; (800753c <osMessageQueuePut+0x80>)
 8007520:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007524:	601a      	str	r2, [r3, #0]
 8007526:	f3bf 8f4f 	dsb	sy
 800752a:	f3bf 8f6f 	isb	sy
 800752e:	e7f4      	b.n	800751a <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8007530:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007534:	e7ca      	b.n	80074cc <osMessageQueuePut+0x10>
 8007536:	bf00      	nop
 8007538:	20002a50 	.word	0x20002a50
 800753c:	e000ed04 	.word	0xe000ed04

08007540 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8007540:	b513      	push	{r0, r1, r4, lr}
 8007542:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007544:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007548:	b123      	cbz	r3, 8007554 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800754a:	b9d0      	cbnz	r0, 8007582 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 800754c:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007550:	b002      	add	sp, #8
 8007552:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007554:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007558:	b913      	cbnz	r3, 8007560 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800755a:	f3ef 8311 	mrs	r3, BASEPRI
 800755e:	b11b      	cbz	r3, 8007568 <osMessageQueueGet+0x28>
 8007560:	4b15      	ldr	r3, [pc, #84]	; (80075b8 <osMessageQueueGet+0x78>)
 8007562:	681b      	ldr	r3, [r3, #0]
 8007564:	2b02      	cmp	r3, #2
 8007566:	d0f0      	beq.n	800754a <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007568:	2800      	cmp	r0, #0
 800756a:	d0ef      	beq.n	800754c <osMessageQueueGet+0xc>
 800756c:	2900      	cmp	r1, #0
 800756e:	d0ed      	beq.n	800754c <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007570:	4622      	mov	r2, r4
 8007572:	f000 fe05 	bl	8008180 <xQueueReceive>
 8007576:	2801      	cmp	r0, #1
 8007578:	d00f      	beq.n	800759a <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 800757a:	b9cc      	cbnz	r4, 80075b0 <osMessageQueueGet+0x70>
          stat = osErrorResource;
 800757c:	f06f 0002 	mvn.w	r0, #2
 8007580:	e7e6      	b.n	8007550 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007582:	2900      	cmp	r1, #0
 8007584:	d0e2      	beq.n	800754c <osMessageQueueGet+0xc>
 8007586:	2c00      	cmp	r4, #0
 8007588:	d1e0      	bne.n	800754c <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800758a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800758c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800758e:	f000 ff5b 	bl	8008448 <xQueueReceiveFromISR>
 8007592:	2801      	cmp	r0, #1
 8007594:	d1f2      	bne.n	800757c <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8007596:	9b01      	ldr	r3, [sp, #4]
 8007598:	b90b      	cbnz	r3, 800759e <osMessageQueueGet+0x5e>
  stat = osOK;
 800759a:	2000      	movs	r0, #0
 800759c:	e7d8      	b.n	8007550 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 800759e:	4b07      	ldr	r3, [pc, #28]	; (80075bc <osMessageQueueGet+0x7c>)
 80075a0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80075a4:	601a      	str	r2, [r3, #0]
 80075a6:	f3bf 8f4f 	dsb	sy
 80075aa:	f3bf 8f6f 	isb	sy
 80075ae:	e7f4      	b.n	800759a <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 80075b0:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80075b4:	e7cc      	b.n	8007550 <osMessageQueueGet+0x10>
 80075b6:	bf00      	nop
 80075b8:	20002a50 	.word	0x20002a50
 80075bc:	e000ed04 	.word	0xe000ed04

080075c0 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80075c0:	4b03      	ldr	r3, [pc, #12]	; (80075d0 <vApplicationGetIdleTaskMemory+0x10>)
 80075c2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80075c4:	4b03      	ldr	r3, [pc, #12]	; (80075d4 <vApplicationGetIdleTaskMemory+0x14>)
 80075c6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80075c8:	2380      	movs	r3, #128	; 0x80
 80075ca:	6013      	str	r3, [r2, #0]
}
 80075cc:	4770      	bx	lr
 80075ce:	bf00      	nop
 80075d0:	200029f0 	.word	0x200029f0
 80075d4:	200027f0 	.word	0x200027f0

080075d8 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80075d8:	4b03      	ldr	r3, [pc, #12]	; (80075e8 <vApplicationGetTimerTaskMemory+0x10>)
 80075da:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80075dc:	4b03      	ldr	r3, [pc, #12]	; (80075ec <vApplicationGetTimerTaskMemory+0x14>)
 80075de:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80075e0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80075e4:	6013      	str	r3, [r2, #0]
}
 80075e6:	4770      	bx	lr
 80075e8:	20002e54 	.word	0x20002e54
 80075ec:	20002a54 	.word	0x20002a54

080075f0 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80075f0:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80075f2:	4b0f      	ldr	r3, [pc, #60]	; (8007630 <prvInsertBlockIntoFreeList+0x40>)
 80075f4:	461a      	mov	r2, r3
 80075f6:	681b      	ldr	r3, [r3, #0]
 80075f8:	4283      	cmp	r3, r0
 80075fa:	d3fb      	bcc.n	80075f4 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80075fc:	6854      	ldr	r4, [r2, #4]
 80075fe:	1911      	adds	r1, r2, r4
 8007600:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007602:	bf01      	itttt	eq
 8007604:	6841      	ldreq	r1, [r0, #4]
 8007606:	4610      	moveq	r0, r2
 8007608:	1909      	addeq	r1, r1, r4
 800760a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800760c:	6844      	ldr	r4, [r0, #4]
 800760e:	1901      	adds	r1, r0, r4
 8007610:	428b      	cmp	r3, r1
 8007612:	d107      	bne.n	8007624 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007614:	4907      	ldr	r1, [pc, #28]	; (8007634 <prvInsertBlockIntoFreeList+0x44>)
 8007616:	6809      	ldr	r1, [r1, #0]
 8007618:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800761a:	bf1f      	itttt	ne
 800761c:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800761e:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007620:	1909      	addne	r1, r1, r4
 8007622:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007624:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8007626:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007628:	bf18      	it	ne
 800762a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800762c:	bd10      	pop	{r4, pc}
 800762e:	bf00      	nop
 8007630:	20012ec4 	.word	0x20012ec4
 8007634:	20002eb4 	.word	0x20002eb4

08007638 <pvPortMalloc>:
{
 8007638:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800763c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800763e:	f001 f9c9 	bl	80089d4 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8007642:	4b3c      	ldr	r3, [pc, #240]	; (8007734 <pvPortMalloc+0xfc>)
 8007644:	483c      	ldr	r0, [pc, #240]	; (8007738 <pvPortMalloc+0x100>)
 8007646:	681a      	ldr	r2, [r3, #0]
 8007648:	469c      	mov	ip, r3
 800764a:	b9d2      	cbnz	r2, 8007682 <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
 800764c:	4a3b      	ldr	r2, [pc, #236]	; (800773c <pvPortMalloc+0x104>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800764e:	4b3c      	ldr	r3, [pc, #240]	; (8007740 <pvPortMalloc+0x108>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007650:	0755      	lsls	r5, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007652:	bf1c      	itt	ne
 8007654:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007656:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800765a:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800765c:	601a      	str	r2, [r3, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800765e:	6059      	str	r1, [r3, #4]
	uxAddress -= xHeapStructSize;
 8007660:	4b38      	ldr	r3, [pc, #224]	; (8007744 <pvPortMalloc+0x10c>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007662:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8007666:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800766a:	1a99      	subs	r1, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800766c:	e9c2 3100 	strd	r3, r1, [r2]
	pxEnd = ( void * ) uxAddress;
 8007670:	f8cc 3000 	str.w	r3, [ip]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007674:	4b34      	ldr	r3, [pc, #208]	; (8007748 <pvPortMalloc+0x110>)
 8007676:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007678:	4b34      	ldr	r3, [pc, #208]	; (800774c <pvPortMalloc+0x114>)
 800767a:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800767c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007680:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8007682:	6807      	ldr	r7, [r0, #0]
 8007684:	4227      	tst	r7, r4
 8007686:	d14f      	bne.n	8007728 <pvPortMalloc+0xf0>
			if( xWantedSize > 0 )
 8007688:	2c00      	cmp	r4, #0
 800768a:	d040      	beq.n	800770e <pvPortMalloc+0xd6>
				xWantedSize += xHeapStructSize;
 800768c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007690:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8007692:	bf1c      	itt	ne
 8007694:	f023 0307 	bicne.w	r3, r3, #7
 8007698:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800769a:	2b00      	cmp	r3, #0
 800769c:	d044      	beq.n	8007728 <pvPortMalloc+0xf0>
 800769e:	4a2b      	ldr	r2, [pc, #172]	; (800774c <pvPortMalloc+0x114>)
 80076a0:	6816      	ldr	r6, [r2, #0]
 80076a2:	429e      	cmp	r6, r3
 80076a4:	4690      	mov	r8, r2
 80076a6:	d33f      	bcc.n	8007728 <pvPortMalloc+0xf0>
				pxBlock = xStart.pxNextFreeBlock;
 80076a8:	4a25      	ldr	r2, [pc, #148]	; (8007740 <pvPortMalloc+0x108>)
 80076aa:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80076ac:	6869      	ldr	r1, [r5, #4]
 80076ae:	4299      	cmp	r1, r3
 80076b0:	d201      	bcs.n	80076b6 <pvPortMalloc+0x7e>
 80076b2:	6828      	ldr	r0, [r5, #0]
 80076b4:	b9a8      	cbnz	r0, 80076e2 <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
 80076b6:	f8dc 0000 	ldr.w	r0, [ip]
 80076ba:	42a8      	cmp	r0, r5
 80076bc:	d034      	beq.n	8007728 <pvPortMalloc+0xf0>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80076be:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80076c0:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80076c2:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80076c4:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80076c6:	2910      	cmp	r1, #16
 80076c8:	d912      	bls.n	80076f0 <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80076ca:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80076cc:	0742      	lsls	r2, r0, #29
 80076ce:	d00b      	beq.n	80076e8 <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80076d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076d4:	f383 8811 	msr	BASEPRI, r3
 80076d8:	f3bf 8f6f 	isb	sy
 80076dc:	f3bf 8f4f 	dsb	sy
 80076e0:	e7fe      	b.n	80076e0 <pvPortMalloc+0xa8>
 80076e2:	462a      	mov	r2, r5
 80076e4:	4605      	mov	r5, r0
 80076e6:	e7e1      	b.n	80076ac <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80076e8:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80076ea:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80076ec:	f7ff ff80 	bl	80075f0 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80076f0:	4915      	ldr	r1, [pc, #84]	; (8007748 <pvPortMalloc+0x110>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80076f2:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80076f4:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80076f6:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80076f8:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80076fa:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 80076fc:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007700:	f8c8 6000 	str.w	r6, [r8]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007704:	bf38      	it	cc
 8007706:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007708:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800770a:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 800770c:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 800770e:	f001 fa05 	bl	8008b1c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007712:	0763      	lsls	r3, r4, #29
 8007714:	d00a      	beq.n	800772c <pvPortMalloc+0xf4>
 8007716:	f04f 0350 	mov.w	r3, #80	; 0x50
 800771a:	f383 8811 	msr	BASEPRI, r3
 800771e:	f3bf 8f6f 	isb	sy
 8007722:	f3bf 8f4f 	dsb	sy
 8007726:	e7fe      	b.n	8007726 <pvPortMalloc+0xee>
void *pvReturn = NULL;
 8007728:	2400      	movs	r4, #0
 800772a:	e7f0      	b.n	800770e <pvPortMalloc+0xd6>
}
 800772c:	4620      	mov	r0, r4
 800772e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007732:	bf00      	nop
 8007734:	20002eb4 	.word	0x20002eb4
 8007738:	20012eb8 	.word	0x20012eb8
 800773c:	20002eb8 	.word	0x20002eb8
 8007740:	20012ec4 	.word	0x20012ec4
 8007744:	20012eb0 	.word	0x20012eb0
 8007748:	20012ec0 	.word	0x20012ec0
 800774c:	20012ebc 	.word	0x20012ebc

08007750 <vPortFree>:
{
 8007750:	b510      	push	{r4, lr}
	if( pv != NULL )
 8007752:	4604      	mov	r4, r0
 8007754:	b370      	cbz	r0, 80077b4 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007756:	4a18      	ldr	r2, [pc, #96]	; (80077b8 <vPortFree+0x68>)
 8007758:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800775c:	6812      	ldr	r2, [r2, #0]
 800775e:	4213      	tst	r3, r2
 8007760:	d108      	bne.n	8007774 <vPortFree+0x24>
 8007762:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007766:	f383 8811 	msr	BASEPRI, r3
 800776a:	f3bf 8f6f 	isb	sy
 800776e:	f3bf 8f4f 	dsb	sy
 8007772:	e7fe      	b.n	8007772 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007774:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007778:	b141      	cbz	r1, 800778c <vPortFree+0x3c>
 800777a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800777e:	f383 8811 	msr	BASEPRI, r3
 8007782:	f3bf 8f6f 	isb	sy
 8007786:	f3bf 8f4f 	dsb	sy
 800778a:	e7fe      	b.n	800778a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800778c:	ea23 0302 	bic.w	r3, r3, r2
 8007790:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8007794:	f001 f91e 	bl	80089d4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007798:	4a08      	ldr	r2, [pc, #32]	; (80077bc <vPortFree+0x6c>)
 800779a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800779e:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80077a0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80077a4:	440b      	add	r3, r1
 80077a6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80077a8:	f7ff ff22 	bl	80075f0 <prvInsertBlockIntoFreeList>
}
 80077ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 80077b0:	f001 b9b4 	b.w	8008b1c <xTaskResumeAll>
}
 80077b4:	bd10      	pop	{r4, pc}
 80077b6:	bf00      	nop
 80077b8:	20012eb8 	.word	0x20012eb8
 80077bc:	20012ebc 	.word	0x20012ebc

080077c0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80077c0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80077c4:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80077c8:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80077cc:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80077ce:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80077d0:	2300      	movs	r3, #0
 80077d2:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80077d4:	4770      	bx	lr

080077d6 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80077d6:	2300      	movs	r3, #0
 80077d8:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80077da:	4770      	bx	lr

080077dc <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80077dc:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80077de:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80077e0:	689a      	ldr	r2, [r3, #8]
 80077e2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80077e4:	689a      	ldr	r2, [r3, #8]
 80077e6:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80077e8:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80077ea:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80077ec:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80077ee:	3301      	adds	r3, #1
 80077f0:	6003      	str	r3, [r0, #0]
}
 80077f2:	4770      	bx	lr

080077f4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80077f4:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80077f6:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80077f8:	1c63      	adds	r3, r4, #1
 80077fa:	d10a      	bne.n	8007812 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80077fc:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80077fe:	685a      	ldr	r2, [r3, #4]
 8007800:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007802:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007804:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007806:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007808:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800780a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800780c:	3301      	adds	r3, #1
 800780e:	6003      	str	r3, [r0, #0]
}
 8007810:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007812:	f100 0208 	add.w	r2, r0, #8
 8007816:	4613      	mov	r3, r2
 8007818:	6852      	ldr	r2, [r2, #4]
 800781a:	6815      	ldr	r5, [r2, #0]
 800781c:	42a5      	cmp	r5, r4
 800781e:	d9fa      	bls.n	8007816 <vListInsert+0x22>
 8007820:	e7ed      	b.n	80077fe <vListInsert+0xa>

08007822 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007822:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007826:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007828:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800782a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800782c:	6859      	ldr	r1, [r3, #4]
 800782e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007830:	bf08      	it	eq
 8007832:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007834:	2200      	movs	r2, #0
 8007836:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007838:	681a      	ldr	r2, [r3, #0]
 800783a:	3a01      	subs	r2, #1
 800783c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800783e:	6818      	ldr	r0, [r3, #0]
}
 8007840:	4770      	bx	lr
	...

08007844 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007844:	4808      	ldr	r0, [pc, #32]	; (8007868 <prvPortStartFirstTask+0x24>)
 8007846:	6800      	ldr	r0, [r0, #0]
 8007848:	6800      	ldr	r0, [r0, #0]
 800784a:	f380 8808 	msr	MSP, r0
 800784e:	f04f 0000 	mov.w	r0, #0
 8007852:	f380 8814 	msr	CONTROL, r0
 8007856:	b662      	cpsie	i
 8007858:	b661      	cpsie	f
 800785a:	f3bf 8f4f 	dsb	sy
 800785e:	f3bf 8f6f 	isb	sy
 8007862:	df00      	svc	0
 8007864:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8007866:	0000      	.short	0x0000
 8007868:	e000ed08 	.word	0xe000ed08

0800786c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800786c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800787c <vPortEnableVFP+0x10>
 8007870:	6801      	ldr	r1, [r0, #0]
 8007872:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007876:	6001      	str	r1, [r0, #0]
 8007878:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800787a:	0000      	.short	0x0000
 800787c:	e000ed88 	.word	0xe000ed88

08007880 <prvTaskExitError>:
{
 8007880:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007882:	2300      	movs	r3, #0
 8007884:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8007886:	4b0d      	ldr	r3, [pc, #52]	; (80078bc <prvTaskExitError+0x3c>)
 8007888:	681b      	ldr	r3, [r3, #0]
 800788a:	3301      	adds	r3, #1
 800788c:	d008      	beq.n	80078a0 <prvTaskExitError+0x20>
 800788e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007892:	f383 8811 	msr	BASEPRI, r3
 8007896:	f3bf 8f6f 	isb	sy
 800789a:	f3bf 8f4f 	dsb	sy
 800789e:	e7fe      	b.n	800789e <prvTaskExitError+0x1e>
 80078a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078a4:	f383 8811 	msr	BASEPRI, r3
 80078a8:	f3bf 8f6f 	isb	sy
 80078ac:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80078b0:	9b01      	ldr	r3, [sp, #4]
 80078b2:	2b00      	cmp	r3, #0
 80078b4:	d0fc      	beq.n	80078b0 <prvTaskExitError+0x30>
}
 80078b6:	b002      	add	sp, #8
 80078b8:	4770      	bx	lr
 80078ba:	bf00      	nop
 80078bc:	20000080 	.word	0x20000080

080078c0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80078c0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80078c4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80078c8:	4b07      	ldr	r3, [pc, #28]	; (80078e8 <pxPortInitialiseStack+0x28>)
 80078ca:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80078ce:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80078d2:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80078d6:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80078da:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80078de:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80078e2:	3844      	subs	r0, #68	; 0x44
 80078e4:	4770      	bx	lr
 80078e6:	bf00      	nop
 80078e8:	08007881 	.word	0x08007881
 80078ec:	00000000 	.word	0x00000000

080078f0 <SVC_Handler>:
	__asm volatile (
 80078f0:	4b07      	ldr	r3, [pc, #28]	; (8007910 <pxCurrentTCBConst2>)
 80078f2:	6819      	ldr	r1, [r3, #0]
 80078f4:	6808      	ldr	r0, [r1, #0]
 80078f6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80078fa:	f380 8809 	msr	PSP, r0
 80078fe:	f3bf 8f6f 	isb	sy
 8007902:	f04f 0000 	mov.w	r0, #0
 8007906:	f380 8811 	msr	BASEPRI, r0
 800790a:	4770      	bx	lr
 800790c:	f3af 8000 	nop.w

08007910 <pxCurrentTCBConst2>:
 8007910:	20012ed4 	.word	0x20012ed4

08007914 <vPortEnterCritical>:
 8007914:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007918:	f383 8811 	msr	BASEPRI, r3
 800791c:	f3bf 8f6f 	isb	sy
 8007920:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007924:	4a0a      	ldr	r2, [pc, #40]	; (8007950 <vPortEnterCritical+0x3c>)
 8007926:	6813      	ldr	r3, [r2, #0]
 8007928:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800792a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800792c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800792e:	d10d      	bne.n	800794c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007930:	4b08      	ldr	r3, [pc, #32]	; (8007954 <vPortEnterCritical+0x40>)
 8007932:	681b      	ldr	r3, [r3, #0]
 8007934:	f013 0fff 	tst.w	r3, #255	; 0xff
 8007938:	d008      	beq.n	800794c <vPortEnterCritical+0x38>
 800793a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800793e:	f383 8811 	msr	BASEPRI, r3
 8007942:	f3bf 8f6f 	isb	sy
 8007946:	f3bf 8f4f 	dsb	sy
 800794a:	e7fe      	b.n	800794a <vPortEnterCritical+0x36>
}
 800794c:	4770      	bx	lr
 800794e:	bf00      	nop
 8007950:	20000080 	.word	0x20000080
 8007954:	e000ed04 	.word	0xe000ed04

08007958 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007958:	4a08      	ldr	r2, [pc, #32]	; (800797c <vPortExitCritical+0x24>)
 800795a:	6813      	ldr	r3, [r2, #0]
 800795c:	b943      	cbnz	r3, 8007970 <vPortExitCritical+0x18>
 800795e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007962:	f383 8811 	msr	BASEPRI, r3
 8007966:	f3bf 8f6f 	isb	sy
 800796a:	f3bf 8f4f 	dsb	sy
 800796e:	e7fe      	b.n	800796e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007970:	3b01      	subs	r3, #1
 8007972:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007974:	b90b      	cbnz	r3, 800797a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007976:	f383 8811 	msr	BASEPRI, r3
}
 800797a:	4770      	bx	lr
 800797c:	20000080 	.word	0x20000080

08007980 <PendSV_Handler>:
	__asm volatile
 8007980:	f3ef 8009 	mrs	r0, PSP
 8007984:	f3bf 8f6f 	isb	sy
 8007988:	4b15      	ldr	r3, [pc, #84]	; (80079e0 <pxCurrentTCBConst>)
 800798a:	681a      	ldr	r2, [r3, #0]
 800798c:	f01e 0f10 	tst.w	lr, #16
 8007990:	bf08      	it	eq
 8007992:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007996:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800799a:	6010      	str	r0, [r2, #0]
 800799c:	e92d 0009 	stmdb	sp!, {r0, r3}
 80079a0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80079a4:	f380 8811 	msr	BASEPRI, r0
 80079a8:	f3bf 8f4f 	dsb	sy
 80079ac:	f3bf 8f6f 	isb	sy
 80079b0:	f001 f94c 	bl	8008c4c <vTaskSwitchContext>
 80079b4:	f04f 0000 	mov.w	r0, #0
 80079b8:	f380 8811 	msr	BASEPRI, r0
 80079bc:	bc09      	pop	{r0, r3}
 80079be:	6819      	ldr	r1, [r3, #0]
 80079c0:	6808      	ldr	r0, [r1, #0]
 80079c2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80079c6:	f01e 0f10 	tst.w	lr, #16
 80079ca:	bf08      	it	eq
 80079cc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80079d0:	f380 8809 	msr	PSP, r0
 80079d4:	f3bf 8f6f 	isb	sy
 80079d8:	4770      	bx	lr
 80079da:	bf00      	nop
 80079dc:	f3af 8000 	nop.w

080079e0 <pxCurrentTCBConst>:
 80079e0:	20012ed4 	.word	0x20012ed4

080079e4 <SysTick_Handler>:
{
 80079e4:	b508      	push	{r3, lr}
	__asm volatile
 80079e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079ea:	f383 8811 	msr	BASEPRI, r3
 80079ee:	f3bf 8f6f 	isb	sy
 80079f2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80079f6:	f000 fffb 	bl	80089f0 <xTaskIncrementTick>
 80079fa:	b118      	cbz	r0, 8007a04 <SysTick_Handler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80079fc:	4b03      	ldr	r3, [pc, #12]	; (8007a0c <SysTick_Handler+0x28>)
 80079fe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007a02:	601a      	str	r2, [r3, #0]
	__asm volatile
 8007a04:	2300      	movs	r3, #0
 8007a06:	f383 8811 	msr	BASEPRI, r3
}
 8007a0a:	bd08      	pop	{r3, pc}
 8007a0c:	e000ed04 	.word	0xe000ed04

08007a10 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007a10:	4a08      	ldr	r2, [pc, #32]	; (8007a34 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007a12:	4909      	ldr	r1, [pc, #36]	; (8007a38 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007a14:	2300      	movs	r3, #0
 8007a16:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007a18:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8007a1a:	4b08      	ldr	r3, [pc, #32]	; (8007a3c <vPortSetupTimerInterrupt+0x2c>)
 8007a1c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007a20:	681b      	ldr	r3, [r3, #0]
 8007a22:	fbb3 f3f1 	udiv	r3, r3, r1
 8007a26:	4906      	ldr	r1, [pc, #24]	; (8007a40 <vPortSetupTimerInterrupt+0x30>)
 8007a28:	3b01      	subs	r3, #1
 8007a2a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8007a2c:	2307      	movs	r3, #7
 8007a2e:	6013      	str	r3, [r2, #0]
}
 8007a30:	4770      	bx	lr
 8007a32:	bf00      	nop
 8007a34:	e000e010 	.word	0xe000e010
 8007a38:	e000e018 	.word	0xe000e018
 8007a3c:	20000074 	.word	0x20000074
 8007a40:	e000e014 	.word	0xe000e014

08007a44 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007a44:	4b38      	ldr	r3, [pc, #224]	; (8007b28 <xPortStartScheduler+0xe4>)
 8007a46:	4a39      	ldr	r2, [pc, #228]	; (8007b2c <xPortStartScheduler+0xe8>)
{
 8007a48:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007a4a:	6819      	ldr	r1, [r3, #0]
 8007a4c:	4291      	cmp	r1, r2
 8007a4e:	d108      	bne.n	8007a62 <xPortStartScheduler+0x1e>
	__asm volatile
 8007a50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a54:	f383 8811 	msr	BASEPRI, r3
 8007a58:	f3bf 8f6f 	isb	sy
 8007a5c:	f3bf 8f4f 	dsb	sy
 8007a60:	e7fe      	b.n	8007a60 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007a62:	681a      	ldr	r2, [r3, #0]
 8007a64:	4b32      	ldr	r3, [pc, #200]	; (8007b30 <xPortStartScheduler+0xec>)
 8007a66:	429a      	cmp	r2, r3
 8007a68:	d108      	bne.n	8007a7c <xPortStartScheduler+0x38>
 8007a6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a6e:	f383 8811 	msr	BASEPRI, r3
 8007a72:	f3bf 8f6f 	isb	sy
 8007a76:	f3bf 8f4f 	dsb	sy
 8007a7a:	e7fe      	b.n	8007a7a <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007a7c:	4b2d      	ldr	r3, [pc, #180]	; (8007b34 <xPortStartScheduler+0xf0>)
 8007a7e:	781a      	ldrb	r2, [r3, #0]
 8007a80:	b2d2      	uxtb	r2, r2
 8007a82:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007a84:	22ff      	movs	r2, #255	; 0xff
 8007a86:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007a88:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007a8a:	4a2b      	ldr	r2, [pc, #172]	; (8007b38 <xPortStartScheduler+0xf4>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007a8c:	b2db      	uxtb	r3, r3
 8007a8e:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007a92:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007a96:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8007a9a:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007a9c:	4a27      	ldr	r2, [pc, #156]	; (8007b3c <xPortStartScheduler+0xf8>)
 8007a9e:	2307      	movs	r3, #7
 8007aa0:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007aa2:	2100      	movs	r1, #0
 8007aa4:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8007aa8:	0600      	lsls	r0, r0, #24
 8007aaa:	f103 34ff 	add.w	r4, r3, #4294967295
 8007aae:	d40c      	bmi.n	8007aca <xPortStartScheduler+0x86>
 8007ab0:	b111      	cbz	r1, 8007ab8 <xPortStartScheduler+0x74>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007ab2:	2b03      	cmp	r3, #3
 8007ab4:	6013      	str	r3, [r2, #0]
 8007ab6:	d011      	beq.n	8007adc <xPortStartScheduler+0x98>
 8007ab8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007abc:	f383 8811 	msr	BASEPRI, r3
 8007ac0:	f3bf 8f6f 	isb	sy
 8007ac4:	f3bf 8f4f 	dsb	sy
 8007ac8:	e7fe      	b.n	8007ac8 <xPortStartScheduler+0x84>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007aca:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007ace:	005b      	lsls	r3, r3, #1
 8007ad0:	b2db      	uxtb	r3, r3
 8007ad2:	f88d 3003 	strb.w	r3, [sp, #3]
 8007ad6:	2101      	movs	r1, #1
 8007ad8:	4623      	mov	r3, r4
 8007ada:	e7e3      	b.n	8007aa4 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007adc:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007ae0:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007ae2:	9b01      	ldr	r3, [sp, #4]
 8007ae4:	4a13      	ldr	r2, [pc, #76]	; (8007b34 <xPortStartScheduler+0xf0>)
 8007ae6:	b2db      	uxtb	r3, r3
 8007ae8:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007aea:	4b15      	ldr	r3, [pc, #84]	; (8007b40 <xPortStartScheduler+0xfc>)
 8007aec:	681a      	ldr	r2, [r3, #0]
 8007aee:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8007af2:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007af4:	681a      	ldr	r2, [r3, #0]
 8007af6:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 8007afa:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 8007afc:	f7ff ff88 	bl	8007a10 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007b00:	4b10      	ldr	r3, [pc, #64]	; (8007b44 <xPortStartScheduler+0x100>)
 8007b02:	2400      	movs	r4, #0
 8007b04:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 8007b06:	f7ff feb1 	bl	800786c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007b0a:	4a0f      	ldr	r2, [pc, #60]	; (8007b48 <xPortStartScheduler+0x104>)
 8007b0c:	6813      	ldr	r3, [r2, #0]
 8007b0e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007b12:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 8007b14:	f7ff fe96 	bl	8007844 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007b18:	f001 f898 	bl	8008c4c <vTaskSwitchContext>
	prvTaskExitError();
 8007b1c:	f7ff feb0 	bl	8007880 <prvTaskExitError>
}
 8007b20:	4620      	mov	r0, r4
 8007b22:	b002      	add	sp, #8
 8007b24:	bd10      	pop	{r4, pc}
 8007b26:	bf00      	nop
 8007b28:	e000ed00 	.word	0xe000ed00
 8007b2c:	410fc271 	.word	0x410fc271
 8007b30:	410fc270 	.word	0x410fc270
 8007b34:	e000e400 	.word	0xe000e400
 8007b38:	20012ecc 	.word	0x20012ecc
 8007b3c:	20012ed0 	.word	0x20012ed0
 8007b40:	e000ed20 	.word	0xe000ed20
 8007b44:	20000080 	.word	0x20000080
 8007b48:	e000ef34 	.word	0xe000ef34

08007b4c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007b4c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007b50:	2b0f      	cmp	r3, #15
 8007b52:	d90e      	bls.n	8007b72 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007b54:	4a10      	ldr	r2, [pc, #64]	; (8007b98 <vPortValidateInterruptPriority+0x4c>)
 8007b56:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007b58:	4a10      	ldr	r2, [pc, #64]	; (8007b9c <vPortValidateInterruptPriority+0x50>)
 8007b5a:	7812      	ldrb	r2, [r2, #0]
 8007b5c:	429a      	cmp	r2, r3
 8007b5e:	d908      	bls.n	8007b72 <vPortValidateInterruptPriority+0x26>
 8007b60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b64:	f383 8811 	msr	BASEPRI, r3
 8007b68:	f3bf 8f6f 	isb	sy
 8007b6c:	f3bf 8f4f 	dsb	sy
 8007b70:	e7fe      	b.n	8007b70 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007b72:	4b0b      	ldr	r3, [pc, #44]	; (8007ba0 <vPortValidateInterruptPriority+0x54>)
 8007b74:	4a0b      	ldr	r2, [pc, #44]	; (8007ba4 <vPortValidateInterruptPriority+0x58>)
 8007b76:	681b      	ldr	r3, [r3, #0]
 8007b78:	6812      	ldr	r2, [r2, #0]
 8007b7a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007b7e:	4293      	cmp	r3, r2
 8007b80:	d908      	bls.n	8007b94 <vPortValidateInterruptPriority+0x48>
 8007b82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b86:	f383 8811 	msr	BASEPRI, r3
 8007b8a:	f3bf 8f6f 	isb	sy
 8007b8e:	f3bf 8f4f 	dsb	sy
 8007b92:	e7fe      	b.n	8007b92 <vPortValidateInterruptPriority+0x46>
	}
 8007b94:	4770      	bx	lr
 8007b96:	bf00      	nop
 8007b98:	e000e3f0 	.word	0xe000e3f0
 8007b9c:	20012ecc 	.word	0x20012ecc
 8007ba0:	e000ed0c 	.word	0xe000ed0c
 8007ba4:	20012ed0 	.word	0x20012ed0

08007ba8 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007ba8:	b510      	push	{r4, lr}
 8007baa:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007bac:	f7ff feb2 	bl	8007914 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007bb0:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007bb2:	f7ff fed1 	bl	8007958 <vPortExitCritical>

	return xReturn;
}
 8007bb6:	fab4 f084 	clz	r0, r4
 8007bba:	0940      	lsrs	r0, r0, #5
 8007bbc:	bd10      	pop	{r4, pc}

08007bbe <prvCopyDataToQueue>:
{
 8007bbe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007bc0:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007bc2:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007bc4:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8007bc6:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007bc8:	b952      	cbnz	r2, 8007be0 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007bca:	6807      	ldr	r7, [r0, #0]
 8007bcc:	bb47      	cbnz	r7, 8007c20 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007bce:	6880      	ldr	r0, [r0, #8]
 8007bd0:	f001 f994 	bl	8008efc <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007bd4:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007bd6:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007bd8:	3601      	adds	r6, #1
 8007bda:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8007bdc:	4628      	mov	r0, r5
 8007bde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007be0:	b965      	cbnz	r5, 8007bfc <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007be2:	6840      	ldr	r0, [r0, #4]
 8007be4:	f014 f818 	bl	801bc18 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007be8:	6863      	ldr	r3, [r4, #4]
 8007bea:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007bec:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007bee:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007bf0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007bf2:	4293      	cmp	r3, r2
 8007bf4:	d3f0      	bcc.n	8007bd8 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007bf6:	6823      	ldr	r3, [r4, #0]
 8007bf8:	6063      	str	r3, [r4, #4]
 8007bfa:	e7ed      	b.n	8007bd8 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007bfc:	68c0      	ldr	r0, [r0, #12]
 8007bfe:	f014 f80b 	bl	801bc18 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007c02:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007c04:	68e3      	ldr	r3, [r4, #12]
 8007c06:	4251      	negs	r1, r2
 8007c08:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007c0a:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007c0c:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007c0e:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007c10:	bf3e      	ittt	cc
 8007c12:	68a3      	ldrcc	r3, [r4, #8]
 8007c14:	185b      	addcc	r3, r3, r1
 8007c16:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007c18:	2d02      	cmp	r5, #2
 8007c1a:	d101      	bne.n	8007c20 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007c1c:	b116      	cbz	r6, 8007c24 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8007c1e:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007c20:	2500      	movs	r5, #0
 8007c22:	e7d9      	b.n	8007bd8 <prvCopyDataToQueue+0x1a>
 8007c24:	4635      	mov	r5, r6
 8007c26:	e7d7      	b.n	8007bd8 <prvCopyDataToQueue+0x1a>

08007c28 <prvCopyDataFromQueue>:
{
 8007c28:	4603      	mov	r3, r0
 8007c2a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007c2c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8007c2e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007c30:	b16a      	cbz	r2, 8007c4e <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007c32:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007c34:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007c36:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007c38:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007c3a:	bf28      	it	cs
 8007c3c:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007c3e:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007c40:	bf28      	it	cs
 8007c42:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007c44:	68d9      	ldr	r1, [r3, #12]
}
 8007c46:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007c4a:	f013 bfe5 	b.w	801bc18 <memcpy>
}
 8007c4e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007c52:	4770      	bx	lr

08007c54 <prvUnlockQueue>:
{
 8007c54:	b570      	push	{r4, r5, r6, lr}
 8007c56:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007c58:	f7ff fe5c 	bl	8007914 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007c5c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007c60:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007c64:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007c66:	2d00      	cmp	r5, #0
 8007c68:	dc14      	bgt.n	8007c94 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8007c6a:	23ff      	movs	r3, #255	; 0xff
 8007c6c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8007c70:	f7ff fe72 	bl	8007958 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007c74:	f7ff fe4e 	bl	8007914 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007c78:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007c7c:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007c80:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007c82:	2d00      	cmp	r5, #0
 8007c84:	dc12      	bgt.n	8007cac <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8007c86:	23ff      	movs	r3, #255	; 0xff
 8007c88:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8007c8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007c90:	f7ff be62 	b.w	8007958 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007c94:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007c96:	2b00      	cmp	r3, #0
 8007c98:	d0e7      	beq.n	8007c6a <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007c9a:	4630      	mov	r0, r6
 8007c9c:	f001 f84a 	bl	8008d34 <xTaskRemoveFromEventList>
 8007ca0:	b108      	cbz	r0, 8007ca6 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8007ca2:	f001 f8d3 	bl	8008e4c <vTaskMissedYield>
			--cTxLock;
 8007ca6:	3d01      	subs	r5, #1
 8007ca8:	b26d      	sxtb	r5, r5
 8007caa:	e7dc      	b.n	8007c66 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007cac:	6923      	ldr	r3, [r4, #16]
 8007cae:	2b00      	cmp	r3, #0
 8007cb0:	d0e9      	beq.n	8007c86 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007cb2:	4630      	mov	r0, r6
 8007cb4:	f001 f83e 	bl	8008d34 <xTaskRemoveFromEventList>
 8007cb8:	b108      	cbz	r0, 8007cbe <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8007cba:	f001 f8c7 	bl	8008e4c <vTaskMissedYield>
				--cRxLock;
 8007cbe:	3d01      	subs	r5, #1
 8007cc0:	b26d      	sxtb	r5, r5
 8007cc2:	e7de      	b.n	8007c82 <prvUnlockQueue+0x2e>

08007cc4 <xQueueGenericReset>:
{
 8007cc4:	b538      	push	{r3, r4, r5, lr}
 8007cc6:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007cc8:	4604      	mov	r4, r0
 8007cca:	b940      	cbnz	r0, 8007cde <xQueueGenericReset+0x1a>
 8007ccc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cd0:	f383 8811 	msr	BASEPRI, r3
 8007cd4:	f3bf 8f6f 	isb	sy
 8007cd8:	f3bf 8f4f 	dsb	sy
 8007cdc:	e7fe      	b.n	8007cdc <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007cde:	f7ff fe19 	bl	8007914 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007ce2:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 8007ce6:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007ce8:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007cea:	434b      	muls	r3, r1
 8007cec:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007cee:	1a5b      	subs	r3, r3, r1
 8007cf0:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007cf2:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007cf4:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007cf6:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8007cf8:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007cfa:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8007cfc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007d00:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007d04:	b995      	cbnz	r5, 8007d2c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007d06:	6923      	ldr	r3, [r4, #16]
 8007d08:	b163      	cbz	r3, 8007d24 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007d0a:	f104 0010 	add.w	r0, r4, #16
 8007d0e:	f001 f811 	bl	8008d34 <xTaskRemoveFromEventList>
 8007d12:	b138      	cbz	r0, 8007d24 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8007d14:	4b0a      	ldr	r3, [pc, #40]	; (8007d40 <xQueueGenericReset+0x7c>)
 8007d16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007d1a:	601a      	str	r2, [r3, #0]
 8007d1c:	f3bf 8f4f 	dsb	sy
 8007d20:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007d24:	f7ff fe18 	bl	8007958 <vPortExitCritical>
}
 8007d28:	2001      	movs	r0, #1
 8007d2a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007d2c:	f104 0010 	add.w	r0, r4, #16
 8007d30:	f7ff fd46 	bl	80077c0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007d34:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007d38:	f7ff fd42 	bl	80077c0 <vListInitialise>
 8007d3c:	e7f2      	b.n	8007d24 <xQueueGenericReset+0x60>
 8007d3e:	bf00      	nop
 8007d40:	e000ed04 	.word	0xe000ed04

08007d44 <xQueueGenericCreateStatic>:
	{
 8007d44:	b513      	push	{r0, r1, r4, lr}
 8007d46:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007d48:	b940      	cbnz	r0, 8007d5c <xQueueGenericCreateStatic+0x18>
 8007d4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d4e:	f383 8811 	msr	BASEPRI, r3
 8007d52:	f3bf 8f6f 	isb	sy
 8007d56:	f3bf 8f4f 	dsb	sy
 8007d5a:	e7fe      	b.n	8007d5a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 8007d5c:	b943      	cbnz	r3, 8007d70 <xQueueGenericCreateStatic+0x2c>
 8007d5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d62:	f383 8811 	msr	BASEPRI, r3
 8007d66:	f3bf 8f6f 	isb	sy
 8007d6a:	f3bf 8f4f 	dsb	sy
 8007d6e:	e7fe      	b.n	8007d6e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007d70:	b14a      	cbz	r2, 8007d86 <xQueueGenericCreateStatic+0x42>
 8007d72:	b991      	cbnz	r1, 8007d9a <xQueueGenericCreateStatic+0x56>
 8007d74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d78:	f383 8811 	msr	BASEPRI, r3
 8007d7c:	f3bf 8f6f 	isb	sy
 8007d80:	f3bf 8f4f 	dsb	sy
 8007d84:	e7fe      	b.n	8007d84 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007d86:	b141      	cbz	r1, 8007d9a <xQueueGenericCreateStatic+0x56>
 8007d88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d8c:	f383 8811 	msr	BASEPRI, r3
 8007d90:	f3bf 8f6f 	isb	sy
 8007d94:	f3bf 8f4f 	dsb	sy
 8007d98:	e7fe      	b.n	8007d98 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8007d9a:	2350      	movs	r3, #80	; 0x50
 8007d9c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8007d9e:	9b01      	ldr	r3, [sp, #4]
 8007da0:	2b50      	cmp	r3, #80	; 0x50
 8007da2:	d008      	beq.n	8007db6 <xQueueGenericCreateStatic+0x72>
 8007da4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007da8:	f383 8811 	msr	BASEPRI, r3
 8007dac:	f3bf 8f6f 	isb	sy
 8007db0:	f3bf 8f4f 	dsb	sy
 8007db4:	e7fe      	b.n	8007db4 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007db6:	2900      	cmp	r1, #0
 8007db8:	bf08      	it	eq
 8007dba:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8007dbc:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007dbe:	6022      	str	r2, [r4, #0]
 8007dc0:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8007dc2:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007dc6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007dca:	4619      	mov	r1, r3
 8007dcc:	4620      	mov	r0, r4
 8007dce:	f7ff ff79 	bl	8007cc4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007dd2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8007dd6:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 8007dda:	4620      	mov	r0, r4
 8007ddc:	b002      	add	sp, #8
 8007dde:	bd10      	pop	{r4, pc}

08007de0 <xQueueGenericCreate>:
	{
 8007de0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007de2:	460d      	mov	r5, r1
 8007de4:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007de6:	4606      	mov	r6, r0
 8007de8:	b940      	cbnz	r0, 8007dfc <xQueueGenericCreate+0x1c>
 8007dea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007dee:	f383 8811 	msr	BASEPRI, r3
 8007df2:	f3bf 8f6f 	isb	sy
 8007df6:	f3bf 8f4f 	dsb	sy
 8007dfa:	e7fe      	b.n	8007dfa <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007dfc:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007dfe:	3050      	adds	r0, #80	; 0x50
 8007e00:	f7ff fc1a 	bl	8007638 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007e04:	4604      	mov	r4, r0
 8007e06:	b170      	cbz	r0, 8007e26 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007e08:	2300      	movs	r3, #0
 8007e0a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007e0e:	b165      	cbz	r5, 8007e2a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007e10:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007e14:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 8007e18:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007e1a:	2101      	movs	r1, #1
 8007e1c:	4620      	mov	r0, r4
 8007e1e:	f7ff ff51 	bl	8007cc4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007e22:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007e26:	4620      	mov	r0, r4
 8007e28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007e2a:	4603      	mov	r3, r0
 8007e2c:	e7f2      	b.n	8007e14 <xQueueGenericCreate+0x34>

08007e2e <xQueueCreateCountingSemaphoreStatic>:
	{
 8007e2e:	b513      	push	{r0, r1, r4, lr}
 8007e30:	4613      	mov	r3, r2
 8007e32:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007e34:	b940      	cbnz	r0, 8007e48 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007e36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e3a:	f383 8811 	msr	BASEPRI, r3
 8007e3e:	f3bf 8f6f 	isb	sy
 8007e42:	f3bf 8f4f 	dsb	sy
 8007e46:	e7fe      	b.n	8007e46 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007e48:	4288      	cmp	r0, r1
 8007e4a:	d208      	bcs.n	8007e5e <xQueueCreateCountingSemaphoreStatic+0x30>
 8007e4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e50:	f383 8811 	msr	BASEPRI, r3
 8007e54:	f3bf 8f6f 	isb	sy
 8007e58:	f3bf 8f4f 	dsb	sy
 8007e5c:	e7fe      	b.n	8007e5c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007e5e:	2202      	movs	r2, #2
 8007e60:	9200      	str	r2, [sp, #0]
 8007e62:	2200      	movs	r2, #0
 8007e64:	4611      	mov	r1, r2
 8007e66:	f7ff ff6d 	bl	8007d44 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8007e6a:	b100      	cbz	r0, 8007e6e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007e6c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007e6e:	b002      	add	sp, #8
 8007e70:	bd10      	pop	{r4, pc}

08007e72 <xQueueCreateCountingSemaphore>:
	{
 8007e72:	b510      	push	{r4, lr}
 8007e74:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007e76:	b940      	cbnz	r0, 8007e8a <xQueueCreateCountingSemaphore+0x18>
 8007e78:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e7c:	f383 8811 	msr	BASEPRI, r3
 8007e80:	f3bf 8f6f 	isb	sy
 8007e84:	f3bf 8f4f 	dsb	sy
 8007e88:	e7fe      	b.n	8007e88 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007e8a:	4288      	cmp	r0, r1
 8007e8c:	d208      	bcs.n	8007ea0 <xQueueCreateCountingSemaphore+0x2e>
 8007e8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e92:	f383 8811 	msr	BASEPRI, r3
 8007e96:	f3bf 8f6f 	isb	sy
 8007e9a:	f3bf 8f4f 	dsb	sy
 8007e9e:	e7fe      	b.n	8007e9e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007ea0:	2202      	movs	r2, #2
 8007ea2:	2100      	movs	r1, #0
 8007ea4:	f7ff ff9c 	bl	8007de0 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007ea8:	b100      	cbz	r0, 8007eac <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007eaa:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007eac:	bd10      	pop	{r4, pc}
	...

08007eb0 <xQueueGenericSend>:
{
 8007eb0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007eb4:	4688      	mov	r8, r1
 8007eb6:	9201      	str	r2, [sp, #4]
 8007eb8:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007eba:	4604      	mov	r4, r0
 8007ebc:	b940      	cbnz	r0, 8007ed0 <xQueueGenericSend+0x20>
 8007ebe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ec2:	f383 8811 	msr	BASEPRI, r3
 8007ec6:	f3bf 8f6f 	isb	sy
 8007eca:	f3bf 8f4f 	dsb	sy
 8007ece:	e7fe      	b.n	8007ece <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007ed0:	b951      	cbnz	r1, 8007ee8 <xQueueGenericSend+0x38>
 8007ed2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007ed4:	b143      	cbz	r3, 8007ee8 <xQueueGenericSend+0x38>
 8007ed6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007eda:	f383 8811 	msr	BASEPRI, r3
 8007ede:	f3bf 8f6f 	isb	sy
 8007ee2:	f3bf 8f4f 	dsb	sy
 8007ee6:	e7fe      	b.n	8007ee6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007ee8:	2f02      	cmp	r7, #2
 8007eea:	d10b      	bne.n	8007f04 <xQueueGenericSend+0x54>
 8007eec:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007eee:	2b01      	cmp	r3, #1
 8007ef0:	d008      	beq.n	8007f04 <xQueueGenericSend+0x54>
 8007ef2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ef6:	f383 8811 	msr	BASEPRI, r3
 8007efa:	f3bf 8f6f 	isb	sy
 8007efe:	f3bf 8f4f 	dsb	sy
 8007f02:	e7fe      	b.n	8007f02 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007f04:	f000 ffa8 	bl	8008e58 <xTaskGetSchedulerState>
 8007f08:	4606      	mov	r6, r0
 8007f0a:	b950      	cbnz	r0, 8007f22 <xQueueGenericSend+0x72>
 8007f0c:	9b01      	ldr	r3, [sp, #4]
 8007f0e:	b14b      	cbz	r3, 8007f24 <xQueueGenericSend+0x74>
 8007f10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f14:	f383 8811 	msr	BASEPRI, r3
 8007f18:	f3bf 8f6f 	isb	sy
 8007f1c:	f3bf 8f4f 	dsb	sy
 8007f20:	e7fe      	b.n	8007f20 <xQueueGenericSend+0x70>
 8007f22:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 8007f24:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8008010 <xQueueGenericSend+0x160>
		prvLockQueue( pxQueue );
 8007f28:	f04f 0900 	mov.w	r9, #0
 8007f2c:	e037      	b.n	8007f9e <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007f2e:	9d01      	ldr	r5, [sp, #4]
 8007f30:	b91d      	cbnz	r5, 8007f3a <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
 8007f32:	f7ff fd11 	bl	8007958 <vPortExitCritical>
			return errQUEUE_FULL;
 8007f36:	2000      	movs	r0, #0
 8007f38:	e050      	b.n	8007fdc <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
 8007f3a:	b916      	cbnz	r6, 8007f42 <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007f3c:	a802      	add	r0, sp, #8
 8007f3e:	f000 ff3d 	bl	8008dbc <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007f42:	f7ff fd09 	bl	8007958 <vPortExitCritical>
		vTaskSuspendAll();
 8007f46:	f000 fd45 	bl	80089d4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007f4a:	f7ff fce3 	bl	8007914 <vPortEnterCritical>
 8007f4e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007f52:	2bff      	cmp	r3, #255	; 0xff
 8007f54:	bf08      	it	eq
 8007f56:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8007f5a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007f5e:	2bff      	cmp	r3, #255	; 0xff
 8007f60:	bf08      	it	eq
 8007f62:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007f66:	f7ff fcf7 	bl	8007958 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007f6a:	a901      	add	r1, sp, #4
 8007f6c:	a802      	add	r0, sp, #8
 8007f6e:	f000 ff31 	bl	8008dd4 <xTaskCheckForTimeOut>
 8007f72:	2800      	cmp	r0, #0
 8007f74:	d146      	bne.n	8008004 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007f76:	f7ff fccd 	bl	8007914 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007f7a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007f7c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007f7e:	429a      	cmp	r2, r3
 8007f80:	d12f      	bne.n	8007fe2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007f82:	f7ff fce9 	bl	8007958 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007f86:	9901      	ldr	r1, [sp, #4]
 8007f88:	f104 0010 	add.w	r0, r4, #16
 8007f8c:	f000 fe9a 	bl	8008cc4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007f90:	4620      	mov	r0, r4
 8007f92:	f7ff fe5f 	bl	8007c54 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007f96:	f000 fdc1 	bl	8008b1c <xTaskResumeAll>
 8007f9a:	b350      	cbz	r0, 8007ff2 <xQueueGenericSend+0x142>
 8007f9c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007f9e:	f7ff fcb9 	bl	8007914 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007fa2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007fa4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007fa6:	429a      	cmp	r2, r3
 8007fa8:	d301      	bcc.n	8007fae <xQueueGenericSend+0xfe>
 8007faa:	2f02      	cmp	r7, #2
 8007fac:	d1bf      	bne.n	8007f2e <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007fae:	463a      	mov	r2, r7
 8007fb0:	4641      	mov	r1, r8
 8007fb2:	4620      	mov	r0, r4
 8007fb4:	f7ff fe03 	bl	8007bbe <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007fb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007fba:	b11b      	cbz	r3, 8007fc4 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007fbc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007fc0:	f000 feb8 	bl	8008d34 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007fc4:	b138      	cbz	r0, 8007fd6 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
 8007fc6:	4b12      	ldr	r3, [pc, #72]	; (8008010 <xQueueGenericSend+0x160>)
 8007fc8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007fcc:	601a      	str	r2, [r3, #0]
 8007fce:	f3bf 8f4f 	dsb	sy
 8007fd2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007fd6:	f7ff fcbf 	bl	8007958 <vPortExitCritical>
				return pdPASS;
 8007fda:	2001      	movs	r0, #1
}
 8007fdc:	b004      	add	sp, #16
 8007fde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8007fe2:	f7ff fcb9 	bl	8007958 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007fe6:	4620      	mov	r0, r4
 8007fe8:	f7ff fe34 	bl	8007c54 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007fec:	f000 fd96 	bl	8008b1c <xTaskResumeAll>
 8007ff0:	e7d4      	b.n	8007f9c <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
 8007ff2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007ff6:	f8ca 3000 	str.w	r3, [sl]
 8007ffa:	f3bf 8f4f 	dsb	sy
 8007ffe:	f3bf 8f6f 	isb	sy
 8008002:	e7cb      	b.n	8007f9c <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
 8008004:	4620      	mov	r0, r4
 8008006:	f7ff fe25 	bl	8007c54 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800800a:	f000 fd87 	bl	8008b1c <xTaskResumeAll>
 800800e:	e792      	b.n	8007f36 <xQueueGenericSend+0x86>
 8008010:	e000ed04 	.word	0xe000ed04

08008014 <xQueueGenericSendFromISR>:
{
 8008014:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008018:	4689      	mov	r9, r1
 800801a:	4690      	mov	r8, r2
 800801c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800801e:	4604      	mov	r4, r0
 8008020:	b940      	cbnz	r0, 8008034 <xQueueGenericSendFromISR+0x20>
 8008022:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008026:	f383 8811 	msr	BASEPRI, r3
 800802a:	f3bf 8f6f 	isb	sy
 800802e:	f3bf 8f4f 	dsb	sy
 8008032:	e7fe      	b.n	8008032 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008034:	b951      	cbnz	r1, 800804c <xQueueGenericSendFromISR+0x38>
 8008036:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008038:	b143      	cbz	r3, 800804c <xQueueGenericSendFromISR+0x38>
 800803a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800803e:	f383 8811 	msr	BASEPRI, r3
 8008042:	f3bf 8f6f 	isb	sy
 8008046:	f3bf 8f4f 	dsb	sy
 800804a:	e7fe      	b.n	800804a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800804c:	2f02      	cmp	r7, #2
 800804e:	d10b      	bne.n	8008068 <xQueueGenericSendFromISR+0x54>
 8008050:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008052:	2b01      	cmp	r3, #1
 8008054:	d008      	beq.n	8008068 <xQueueGenericSendFromISR+0x54>
 8008056:	f04f 0350 	mov.w	r3, #80	; 0x50
 800805a:	f383 8811 	msr	BASEPRI, r3
 800805e:	f3bf 8f6f 	isb	sy
 8008062:	f3bf 8f4f 	dsb	sy
 8008066:	e7fe      	b.n	8008066 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008068:	f7ff fd70 	bl	8007b4c <vPortValidateInterruptPriority>
	__asm volatile
 800806c:	f3ef 8611 	mrs	r6, BASEPRI
 8008070:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008074:	f383 8811 	msr	BASEPRI, r3
 8008078:	f3bf 8f6f 	isb	sy
 800807c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008080:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008082:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008084:	429a      	cmp	r2, r3
 8008086:	d301      	bcc.n	800808c <xQueueGenericSendFromISR+0x78>
 8008088:	2f02      	cmp	r7, #2
 800808a:	d122      	bne.n	80080d2 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 800808c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008090:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8008092:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008094:	4649      	mov	r1, r9
 8008096:	4620      	mov	r0, r4
 8008098:	f7ff fd91 	bl	8007bbe <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800809c:	1c6b      	adds	r3, r5, #1
 800809e:	d113      	bne.n	80080c8 <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80080a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80080a2:	b90b      	cbnz	r3, 80080a8 <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 80080a4:	2001      	movs	r0, #1
 80080a6:	e00b      	b.n	80080c0 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80080a8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80080ac:	f000 fe42 	bl	8008d34 <xTaskRemoveFromEventList>
 80080b0:	2800      	cmp	r0, #0
 80080b2:	d0f7      	beq.n	80080a4 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 80080b4:	f1b8 0f00 	cmp.w	r8, #0
 80080b8:	d0f4      	beq.n	80080a4 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80080ba:	2001      	movs	r0, #1
 80080bc:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80080c0:	f386 8811 	msr	BASEPRI, r6
}
 80080c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80080c8:	3501      	adds	r5, #1
 80080ca:	b26d      	sxtb	r5, r5
 80080cc:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 80080d0:	e7e8      	b.n	80080a4 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 80080d2:	2000      	movs	r0, #0
 80080d4:	e7f4      	b.n	80080c0 <xQueueGenericSendFromISR+0xac>

080080d6 <xQueueGiveFromISR>:
{
 80080d6:	b570      	push	{r4, r5, r6, lr}
 80080d8:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80080da:	4604      	mov	r4, r0
 80080dc:	b940      	cbnz	r0, 80080f0 <xQueueGiveFromISR+0x1a>
	__asm volatile
 80080de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080e2:	f383 8811 	msr	BASEPRI, r3
 80080e6:	f3bf 8f6f 	isb	sy
 80080ea:	f3bf 8f4f 	dsb	sy
 80080ee:	e7fe      	b.n	80080ee <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 80080f0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80080f2:	b143      	cbz	r3, 8008106 <xQueueGiveFromISR+0x30>
 80080f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080f8:	f383 8811 	msr	BASEPRI, r3
 80080fc:	f3bf 8f6f 	isb	sy
 8008100:	f3bf 8f4f 	dsb	sy
 8008104:	e7fe      	b.n	8008104 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008106:	6803      	ldr	r3, [r0, #0]
 8008108:	b953      	cbnz	r3, 8008120 <xQueueGiveFromISR+0x4a>
 800810a:	6883      	ldr	r3, [r0, #8]
 800810c:	b143      	cbz	r3, 8008120 <xQueueGiveFromISR+0x4a>
 800810e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008112:	f383 8811 	msr	BASEPRI, r3
 8008116:	f3bf 8f6f 	isb	sy
 800811a:	f3bf 8f4f 	dsb	sy
 800811e:	e7fe      	b.n	800811e <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008120:	f7ff fd14 	bl	8007b4c <vPortValidateInterruptPriority>
	__asm volatile
 8008124:	f3ef 8611 	mrs	r6, BASEPRI
 8008128:	f04f 0350 	mov.w	r3, #80	; 0x50
 800812c:	f383 8811 	msr	BASEPRI, r3
 8008130:	f3bf 8f6f 	isb	sy
 8008134:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008138:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800813a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800813c:	4293      	cmp	r3, r2
 800813e:	d91c      	bls.n	800817a <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008140:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008144:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008146:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008148:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800814a:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800814c:	d110      	bne.n	8008170 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800814e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008150:	b90b      	cbnz	r3, 8008156 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8008152:	2001      	movs	r0, #1
 8008154:	e009      	b.n	800816a <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008156:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800815a:	f000 fdeb 	bl	8008d34 <xTaskRemoveFromEventList>
 800815e:	2800      	cmp	r0, #0
 8008160:	d0f7      	beq.n	8008152 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008162:	2d00      	cmp	r5, #0
 8008164:	d0f5      	beq.n	8008152 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008166:	2001      	movs	r0, #1
 8008168:	6028      	str	r0, [r5, #0]
	__asm volatile
 800816a:	f386 8811 	msr	BASEPRI, r6
}
 800816e:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008170:	3301      	adds	r3, #1
 8008172:	b25b      	sxtb	r3, r3
 8008174:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8008178:	e7eb      	b.n	8008152 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800817a:	2000      	movs	r0, #0
 800817c:	e7f5      	b.n	800816a <xQueueGiveFromISR+0x94>
	...

08008180 <xQueueReceive>:
{
 8008180:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008184:	b085      	sub	sp, #20
 8008186:	460f      	mov	r7, r1
 8008188:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800818a:	4604      	mov	r4, r0
 800818c:	b940      	cbnz	r0, 80081a0 <xQueueReceive+0x20>
	__asm volatile
 800818e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008192:	f383 8811 	msr	BASEPRI, r3
 8008196:	f3bf 8f6f 	isb	sy
 800819a:	f3bf 8f4f 	dsb	sy
 800819e:	e7fe      	b.n	800819e <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80081a0:	b951      	cbnz	r1, 80081b8 <xQueueReceive+0x38>
 80081a2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80081a4:	b143      	cbz	r3, 80081b8 <xQueueReceive+0x38>
 80081a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081aa:	f383 8811 	msr	BASEPRI, r3
 80081ae:	f3bf 8f6f 	isb	sy
 80081b2:	f3bf 8f4f 	dsb	sy
 80081b6:	e7fe      	b.n	80081b6 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80081b8:	f000 fe4e 	bl	8008e58 <xTaskGetSchedulerState>
 80081bc:	4606      	mov	r6, r0
 80081be:	b950      	cbnz	r0, 80081d6 <xQueueReceive+0x56>
 80081c0:	9b01      	ldr	r3, [sp, #4]
 80081c2:	b14b      	cbz	r3, 80081d8 <xQueueReceive+0x58>
 80081c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081c8:	f383 8811 	msr	BASEPRI, r3
 80081cc:	f3bf 8f6f 	isb	sy
 80081d0:	f3bf 8f4f 	dsb	sy
 80081d4:	e7fe      	b.n	80081d4 <xQueueReceive+0x54>
 80081d6:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 80081d8:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 80082bc <xQueueReceive+0x13c>
		prvLockQueue( pxQueue );
 80081dc:	f04f 0800 	mov.w	r8, #0
 80081e0:	e03b      	b.n	800825a <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
 80081e2:	9d01      	ldr	r5, [sp, #4]
 80081e4:	b91d      	cbnz	r5, 80081ee <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
 80081e6:	f7ff fbb7 	bl	8007958 <vPortExitCritical>
				return errQUEUE_EMPTY;
 80081ea:	2000      	movs	r0, #0
 80081ec:	e052      	b.n	8008294 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
 80081ee:	b916      	cbnz	r6, 80081f6 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80081f0:	a802      	add	r0, sp, #8
 80081f2:	f000 fde3 	bl	8008dbc <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80081f6:	f7ff fbaf 	bl	8007958 <vPortExitCritical>
		vTaskSuspendAll();
 80081fa:	f000 fbeb 	bl	80089d4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80081fe:	f7ff fb89 	bl	8007914 <vPortEnterCritical>
 8008202:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008206:	2bff      	cmp	r3, #255	; 0xff
 8008208:	bf08      	it	eq
 800820a:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800820e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008212:	2bff      	cmp	r3, #255	; 0xff
 8008214:	bf08      	it	eq
 8008216:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800821a:	f7ff fb9d 	bl	8007958 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800821e:	a901      	add	r1, sp, #4
 8008220:	a802      	add	r0, sp, #8
 8008222:	f000 fdd7 	bl	8008dd4 <xTaskCheckForTimeOut>
 8008226:	2800      	cmp	r0, #0
 8008228:	d13d      	bne.n	80082a6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800822a:	4620      	mov	r0, r4
 800822c:	f7ff fcbc 	bl	8007ba8 <prvIsQueueEmpty>
 8008230:	b398      	cbz	r0, 800829a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008232:	9901      	ldr	r1, [sp, #4]
 8008234:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008238:	f000 fd44 	bl	8008cc4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800823c:	4620      	mov	r0, r4
 800823e:	f7ff fd09 	bl	8007c54 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008242:	f000 fc6b 	bl	8008b1c <xTaskResumeAll>
 8008246:	b938      	cbnz	r0, 8008258 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
 8008248:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800824c:	f8c9 3000 	str.w	r3, [r9]
 8008250:	f3bf 8f4f 	dsb	sy
 8008254:	f3bf 8f6f 	isb	sy
 8008258:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800825a:	f7ff fb5b 	bl	8007914 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800825e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008260:	2d00      	cmp	r5, #0
 8008262:	d0be      	beq.n	80081e2 <xQueueReceive+0x62>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008264:	4639      	mov	r1, r7
 8008266:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008268:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800826a:	f7ff fcdd 	bl	8007c28 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800826e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008270:	6923      	ldr	r3, [r4, #16]
 8008272:	b163      	cbz	r3, 800828e <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008274:	f104 0010 	add.w	r0, r4, #16
 8008278:	f000 fd5c 	bl	8008d34 <xTaskRemoveFromEventList>
 800827c:	b138      	cbz	r0, 800828e <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
 800827e:	4b0f      	ldr	r3, [pc, #60]	; (80082bc <xQueueReceive+0x13c>)
 8008280:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008284:	601a      	str	r2, [r3, #0]
 8008286:	f3bf 8f4f 	dsb	sy
 800828a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800828e:	f7ff fb63 	bl	8007958 <vPortExitCritical>
				return pdPASS;
 8008292:	2001      	movs	r0, #1
}
 8008294:	b005      	add	sp, #20
 8008296:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 800829a:	4620      	mov	r0, r4
 800829c:	f7ff fcda 	bl	8007c54 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80082a0:	f000 fc3c 	bl	8008b1c <xTaskResumeAll>
 80082a4:	e7d8      	b.n	8008258 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
 80082a6:	4620      	mov	r0, r4
 80082a8:	f7ff fcd4 	bl	8007c54 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80082ac:	f000 fc36 	bl	8008b1c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80082b0:	4620      	mov	r0, r4
 80082b2:	f7ff fc79 	bl	8007ba8 <prvIsQueueEmpty>
 80082b6:	2800      	cmp	r0, #0
 80082b8:	d0ce      	beq.n	8008258 <xQueueReceive+0xd8>
 80082ba:	e796      	b.n	80081ea <xQueueReceive+0x6a>
 80082bc:	e000ed04 	.word	0xe000ed04

080082c0 <xQueueSemaphoreTake>:
{
 80082c0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 80082c4:	4604      	mov	r4, r0
{
 80082c6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80082c8:	b940      	cbnz	r0, 80082dc <xQueueSemaphoreTake+0x1c>
 80082ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082ce:	f383 8811 	msr	BASEPRI, r3
 80082d2:	f3bf 8f6f 	isb	sy
 80082d6:	f3bf 8f4f 	dsb	sy
 80082da:	e7fe      	b.n	80082da <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80082dc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80082de:	b145      	cbz	r5, 80082f2 <xQueueSemaphoreTake+0x32>
 80082e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082e4:	f383 8811 	msr	BASEPRI, r3
 80082e8:	f3bf 8f6f 	isb	sy
 80082ec:	f3bf 8f4f 	dsb	sy
 80082f0:	e7fe      	b.n	80082f0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80082f2:	f000 fdb1 	bl	8008e58 <xTaskGetSchedulerState>
 80082f6:	4606      	mov	r6, r0
 80082f8:	b950      	cbnz	r0, 8008310 <xQueueSemaphoreTake+0x50>
 80082fa:	9b01      	ldr	r3, [sp, #4]
 80082fc:	b16b      	cbz	r3, 800831a <xQueueSemaphoreTake+0x5a>
 80082fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008302:	f383 8811 	msr	BASEPRI, r3
 8008306:	f3bf 8f6f 	isb	sy
 800830a:	f3bf 8f4f 	dsb	sy
 800830e:	e7fe      	b.n	800830e <xQueueSemaphoreTake+0x4e>
 8008310:	462e      	mov	r6, r5
					portYIELD_WITHIN_API();
 8008312:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8008444 <xQueueSemaphoreTake+0x184>
		prvLockQueue( pxQueue );
 8008316:	2700      	movs	r7, #0
 8008318:	e051      	b.n	80083be <xQueueSemaphoreTake+0xfe>
 800831a:	4605      	mov	r5, r0
 800831c:	e7f9      	b.n	8008312 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800831e:	9b01      	ldr	r3, [sp, #4]
 8008320:	b963      	cbnz	r3, 800833c <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8008322:	b145      	cbz	r5, 8008336 <xQueueSemaphoreTake+0x76>
 8008324:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008328:	f383 8811 	msr	BASEPRI, r3
 800832c:	f3bf 8f6f 	isb	sy
 8008330:	f3bf 8f4f 	dsb	sy
 8008334:	e7fe      	b.n	8008334 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
 8008336:	f7ff fb0f 	bl	8007958 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800833a:	e05e      	b.n	80083fa <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 800833c:	b916      	cbnz	r6, 8008344 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800833e:	a802      	add	r0, sp, #8
 8008340:	f000 fd3c 	bl	8008dbc <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008344:	f7ff fb08 	bl	8007958 <vPortExitCritical>
		vTaskSuspendAll();
 8008348:	f000 fb44 	bl	80089d4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800834c:	f7ff fae2 	bl	8007914 <vPortEnterCritical>
 8008350:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008354:	2bff      	cmp	r3, #255	; 0xff
 8008356:	bf08      	it	eq
 8008358:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800835c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008360:	2bff      	cmp	r3, #255	; 0xff
 8008362:	bf08      	it	eq
 8008364:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8008368:	f7ff faf6 	bl	8007958 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800836c:	a901      	add	r1, sp, #4
 800836e:	a802      	add	r0, sp, #8
 8008370:	f000 fd30 	bl	8008dd4 <xTaskCheckForTimeOut>
 8008374:	2800      	cmp	r0, #0
 8008376:	d14a      	bne.n	800840e <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008378:	4620      	mov	r0, r4
 800837a:	f7ff fc15 	bl	8007ba8 <prvIsQueueEmpty>
 800837e:	2800      	cmp	r0, #0
 8008380:	d03f      	beq.n	8008402 <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008382:	6823      	ldr	r3, [r4, #0]
 8008384:	b93b      	cbnz	r3, 8008396 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
 8008386:	f7ff fac5 	bl	8007914 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800838a:	68a0      	ldr	r0, [r4, #8]
 800838c:	f000 fd74 	bl	8008e78 <xTaskPriorityInherit>
 8008390:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8008392:	f7ff fae1 	bl	8007958 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008396:	9901      	ldr	r1, [sp, #4]
 8008398:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800839c:	f000 fc92 	bl	8008cc4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80083a0:	4620      	mov	r0, r4
 80083a2:	f7ff fc57 	bl	8007c54 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80083a6:	f000 fbb9 	bl	8008b1c <xTaskResumeAll>
 80083aa:	b938      	cbnz	r0, 80083bc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80083ac:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80083b0:	f8c8 3000 	str.w	r3, [r8]
 80083b4:	f3bf 8f4f 	dsb	sy
 80083b8:	f3bf 8f6f 	isb	sy
 80083bc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80083be:	f7ff faa9 	bl	8007914 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80083c2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80083c4:	2b00      	cmp	r3, #0
 80083c6:	d0aa      	beq.n	800831e <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80083c8:	3b01      	subs	r3, #1
 80083ca:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80083cc:	6823      	ldr	r3, [r4, #0]
 80083ce:	b913      	cbnz	r3, 80083d6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80083d0:	f000 fe2a 	bl	8009028 <pvTaskIncrementMutexHeldCount>
 80083d4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80083d6:	6923      	ldr	r3, [r4, #16]
 80083d8:	b163      	cbz	r3, 80083f4 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80083da:	f104 0010 	add.w	r0, r4, #16
 80083de:	f000 fca9 	bl	8008d34 <xTaskRemoveFromEventList>
 80083e2:	b138      	cbz	r0, 80083f4 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 80083e4:	4b17      	ldr	r3, [pc, #92]	; (8008444 <xQueueSemaphoreTake+0x184>)
 80083e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80083ea:	601a      	str	r2, [r3, #0]
 80083ec:	f3bf 8f4f 	dsb	sy
 80083f0:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80083f4:	f7ff fab0 	bl	8007958 <vPortExitCritical>
				return pdPASS;
 80083f8:	2501      	movs	r5, #1
}
 80083fa:	4628      	mov	r0, r5
 80083fc:	b004      	add	sp, #16
 80083fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8008402:	4620      	mov	r0, r4
 8008404:	f7ff fc26 	bl	8007c54 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008408:	f000 fb88 	bl	8008b1c <xTaskResumeAll>
 800840c:	e7d6      	b.n	80083bc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800840e:	4620      	mov	r0, r4
 8008410:	f7ff fc20 	bl	8007c54 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008414:	f000 fb82 	bl	8008b1c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008418:	4620      	mov	r0, r4
 800841a:	f7ff fbc5 	bl	8007ba8 <prvIsQueueEmpty>
 800841e:	2800      	cmp	r0, #0
 8008420:	d0cc      	beq.n	80083bc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8008422:	2d00      	cmp	r5, #0
 8008424:	d0e9      	beq.n	80083fa <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
 8008426:	f7ff fa75 	bl	8007914 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800842a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800842c:	b119      	cbz	r1, 8008436 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800842e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008430:	6819      	ldr	r1, [r3, #0]
 8008432:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008436:	68a0      	ldr	r0, [r4, #8]
 8008438:	f000 fda4 	bl	8008f84 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800843c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800843e:	f7ff fa8b 	bl	8007958 <vPortExitCritical>
 8008442:	e7da      	b.n	80083fa <xQueueSemaphoreTake+0x13a>
 8008444:	e000ed04 	.word	0xe000ed04

08008448 <xQueueReceiveFromISR>:
{
 8008448:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800844c:	4689      	mov	r9, r1
 800844e:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8008450:	4605      	mov	r5, r0
 8008452:	b940      	cbnz	r0, 8008466 <xQueueReceiveFromISR+0x1e>
 8008454:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008458:	f383 8811 	msr	BASEPRI, r3
 800845c:	f3bf 8f6f 	isb	sy
 8008460:	f3bf 8f4f 	dsb	sy
 8008464:	e7fe      	b.n	8008464 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008466:	b951      	cbnz	r1, 800847e <xQueueReceiveFromISR+0x36>
 8008468:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800846a:	b143      	cbz	r3, 800847e <xQueueReceiveFromISR+0x36>
 800846c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008470:	f383 8811 	msr	BASEPRI, r3
 8008474:	f3bf 8f6f 	isb	sy
 8008478:	f3bf 8f4f 	dsb	sy
 800847c:	e7fe      	b.n	800847c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800847e:	f7ff fb65 	bl	8007b4c <vPortValidateInterruptPriority>
	__asm volatile
 8008482:	f3ef 8711 	mrs	r7, BASEPRI
 8008486:	f04f 0350 	mov.w	r3, #80	; 0x50
 800848a:	f383 8811 	msr	BASEPRI, r3
 800848e:	f3bf 8f6f 	isb	sy
 8008492:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008496:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008498:	b31c      	cbz	r4, 80084e2 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800849a:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800849e:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80084a0:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80084a2:	4628      	mov	r0, r5
 80084a4:	f7ff fbc0 	bl	8007c28 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80084a8:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80084aa:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80084ac:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80084ae:	d113      	bne.n	80084d8 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80084b0:	692b      	ldr	r3, [r5, #16]
 80084b2:	b90b      	cbnz	r3, 80084b8 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80084b4:	2001      	movs	r0, #1
 80084b6:	e00b      	b.n	80084d0 <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80084b8:	f105 0010 	add.w	r0, r5, #16
 80084bc:	f000 fc3a 	bl	8008d34 <xTaskRemoveFromEventList>
 80084c0:	2800      	cmp	r0, #0
 80084c2:	d0f7      	beq.n	80084b4 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80084c4:	f1b8 0f00 	cmp.w	r8, #0
 80084c8:	d0f4      	beq.n	80084b4 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80084ca:	2001      	movs	r0, #1
 80084cc:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80084d0:	f387 8811 	msr	BASEPRI, r7
}
 80084d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80084d8:	3601      	adds	r6, #1
 80084da:	b276      	sxtb	r6, r6
 80084dc:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80084e0:	e7e8      	b.n	80084b4 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80084e2:	4620      	mov	r0, r4
 80084e4:	e7f4      	b.n	80084d0 <xQueueReceiveFromISR+0x88>
	...

080084e8 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80084e8:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80084ea:	4a07      	ldr	r2, [pc, #28]	; (8008508 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80084ec:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80084ee:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80084f2:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80084f6:	b91d      	cbnz	r5, 8008500 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80084f8:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80084fc:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80084fe:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008500:	3301      	adds	r3, #1
 8008502:	2b08      	cmp	r3, #8
 8008504:	d1f3      	bne.n	80084ee <vQueueAddToRegistry+0x6>
 8008506:	e7fa      	b.n	80084fe <vQueueAddToRegistry+0x16>
 8008508:	20013a38 	.word	0x20013a38

0800850c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800850c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800850e:	4909      	ldr	r1, [pc, #36]	; (8008534 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008510:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008512:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 8008516:	4282      	cmp	r2, r0
 8008518:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800851c:	d106      	bne.n	800852c <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800851e:	4a06      	ldr	r2, [pc, #24]	; (8008538 <vQueueUnregisterQueue+0x2c>)
 8008520:	2100      	movs	r1, #0
 8008522:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8008526:	4422      	add	r2, r4
 8008528:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800852a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800852c:	3301      	adds	r3, #1
 800852e:	2b08      	cmp	r3, #8
 8008530:	d1ef      	bne.n	8008512 <vQueueUnregisterQueue+0x6>
 8008532:	e7fa      	b.n	800852a <vQueueUnregisterQueue+0x1e>
 8008534:	20013a3c 	.word	0x20013a3c
 8008538:	20013a38 	.word	0x20013a38

0800853c <vQueueDelete>:
{
 800853c:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800853e:	b940      	cbnz	r0, 8008552 <vQueueDelete+0x16>
	__asm volatile
 8008540:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008544:	f383 8811 	msr	BASEPRI, r3
 8008548:	f3bf 8f6f 	isb	sy
 800854c:	f3bf 8f4f 	dsb	sy
 8008550:	e7fe      	b.n	8008550 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8008552:	f7ff ffdb 	bl	800850c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008556:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800855a:	b91b      	cbnz	r3, 8008564 <vQueueDelete+0x28>
}
 800855c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008560:	f7ff b8f6 	b.w	8007750 <vPortFree>
}
 8008564:	bd10      	pop	{r4, pc}

08008566 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008566:	b570      	push	{r4, r5, r6, lr}
 8008568:	4604      	mov	r4, r0
 800856a:	460d      	mov	r5, r1
 800856c:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800856e:	f7ff f9d1 	bl	8007914 <vPortEnterCritical>
 8008572:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008576:	2bff      	cmp	r3, #255	; 0xff
 8008578:	bf04      	itt	eq
 800857a:	2300      	moveq	r3, #0
 800857c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8008580:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008584:	2bff      	cmp	r3, #255	; 0xff
 8008586:	bf04      	itt	eq
 8008588:	2300      	moveq	r3, #0
 800858a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800858e:	f7ff f9e3 	bl	8007958 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8008592:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008594:	b92b      	cbnz	r3, 80085a2 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8008596:	4632      	mov	r2, r6
 8008598:	4629      	mov	r1, r5
 800859a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800859e:	f000 fbab 	bl	8008cf8 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80085a2:	4620      	mov	r0, r4
	}
 80085a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80085a8:	f7ff bb54 	b.w	8007c54 <prvUnlockQueue>

080085ac <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80085ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80085b0:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80085b2:	f7ff f9af 	bl	8007914 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80085b6:	4b2f      	ldr	r3, [pc, #188]	; (8008674 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 80085b8:	4d2f      	ldr	r5, [pc, #188]	; (8008678 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 80085ba:	681a      	ldr	r2, [r3, #0]
 80085bc:	4f2f      	ldr	r7, [pc, #188]	; (800867c <prvAddNewTaskToReadyList+0xd0>)
 80085be:	3201      	adds	r2, #1
 80085c0:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80085c2:	682e      	ldr	r6, [r5, #0]
 80085c4:	2e00      	cmp	r6, #0
 80085c6:	d149      	bne.n	800865c <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80085c8:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80085ca:	681b      	ldr	r3, [r3, #0]
 80085cc:	2b01      	cmp	r3, #1
 80085ce:	d11f      	bne.n	8008610 <prvAddNewTaskToReadyList+0x64>
 80085d0:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80085d2:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80085d4:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80085d6:	f7ff f8f3 	bl	80077c0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80085da:	2e38      	cmp	r6, #56	; 0x38
 80085dc:	f108 0814 	add.w	r8, r8, #20
 80085e0:	d1f7      	bne.n	80085d2 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80085e2:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80086a8 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80085e6:	4e26      	ldr	r6, [pc, #152]	; (8008680 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 80085e8:	4640      	mov	r0, r8
 80085ea:	f7ff f8e9 	bl	80077c0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80085ee:	4630      	mov	r0, r6
 80085f0:	f7ff f8e6 	bl	80077c0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80085f4:	4823      	ldr	r0, [pc, #140]	; (8008684 <prvAddNewTaskToReadyList+0xd8>)
 80085f6:	f7ff f8e3 	bl	80077c0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80085fa:	4823      	ldr	r0, [pc, #140]	; (8008688 <prvAddNewTaskToReadyList+0xdc>)
 80085fc:	f7ff f8e0 	bl	80077c0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008600:	4822      	ldr	r0, [pc, #136]	; (800868c <prvAddNewTaskToReadyList+0xe0>)
 8008602:	f7ff f8dd 	bl	80077c0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8008606:	4b22      	ldr	r3, [pc, #136]	; (8008690 <prvAddNewTaskToReadyList+0xe4>)
 8008608:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800860c:	4b21      	ldr	r3, [pc, #132]	; (8008694 <prvAddNewTaskToReadyList+0xe8>)
 800860e:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8008610:	4a21      	ldr	r2, [pc, #132]	; (8008698 <prvAddNewTaskToReadyList+0xec>)
 8008612:	6813      	ldr	r3, [r2, #0]
 8008614:	3301      	adds	r3, #1
 8008616:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008618:	4a20      	ldr	r2, [pc, #128]	; (800869c <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800861a:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800861c:	6811      	ldr	r1, [r2, #0]
 800861e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008620:	2014      	movs	r0, #20
 8008622:	428b      	cmp	r3, r1
 8008624:	fb00 7003 	mla	r0, r0, r3, r7
 8008628:	f104 0104 	add.w	r1, r4, #4
 800862c:	bf88      	it	hi
 800862e:	6013      	strhi	r3, [r2, #0]
 8008630:	f7ff f8d4 	bl	80077dc <vListInsertEnd>
	taskEXIT_CRITICAL();
 8008634:	f7ff f990 	bl	8007958 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008638:	4b19      	ldr	r3, [pc, #100]	; (80086a0 <prvAddNewTaskToReadyList+0xf4>)
 800863a:	681b      	ldr	r3, [r3, #0]
 800863c:	b163      	cbz	r3, 8008658 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800863e:	682b      	ldr	r3, [r5, #0]
 8008640:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008642:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008644:	429a      	cmp	r2, r3
 8008646:	d207      	bcs.n	8008658 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8008648:	4b16      	ldr	r3, [pc, #88]	; (80086a4 <prvAddNewTaskToReadyList+0xf8>)
 800864a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800864e:	601a      	str	r2, [r3, #0]
 8008650:	f3bf 8f4f 	dsb	sy
 8008654:	f3bf 8f6f 	isb	sy
}
 8008658:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800865c:	4b10      	ldr	r3, [pc, #64]	; (80086a0 <prvAddNewTaskToReadyList+0xf4>)
 800865e:	681b      	ldr	r3, [r3, #0]
 8008660:	2b00      	cmp	r3, #0
 8008662:	d1d5      	bne.n	8008610 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008664:	682b      	ldr	r3, [r5, #0]
 8008666:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008668:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800866a:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800866c:	bf98      	it	ls
 800866e:	602c      	strls	r4, [r5, #0]
 8008670:	e7ce      	b.n	8008610 <prvAddNewTaskToReadyList+0x64>
 8008672:	bf00      	nop
 8008674:	20013340 	.word	0x20013340
 8008678:	20012ed4 	.word	0x20012ed4
 800867c:	20012ee0 	.word	0x20012ee0
 8008680:	2001336c 	.word	0x2001336c
 8008684:	20013388 	.word	0x20013388
 8008688:	200133b4 	.word	0x200133b4
 800868c:	200133a0 	.word	0x200133a0
 8008690:	20012ed8 	.word	0x20012ed8
 8008694:	20012edc 	.word	0x20012edc
 8008698:	20013350 	.word	0x20013350
 800869c:	20013354 	.word	0x20013354
 80086a0:	2001339c 	.word	0x2001339c
 80086a4:	e000ed04 	.word	0xe000ed04
 80086a8:	20013358 	.word	0x20013358

080086ac <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80086ac:	4a06      	ldr	r2, [pc, #24]	; (80086c8 <prvResetNextTaskUnblockTime+0x1c>)
 80086ae:	6813      	ldr	r3, [r2, #0]
 80086b0:	6819      	ldr	r1, [r3, #0]
 80086b2:	4b06      	ldr	r3, [pc, #24]	; (80086cc <prvResetNextTaskUnblockTime+0x20>)
 80086b4:	b919      	cbnz	r1, 80086be <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 80086b6:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80086ba:	601a      	str	r2, [r3, #0]
	}
}
 80086bc:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80086be:	6812      	ldr	r2, [r2, #0]
 80086c0:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80086c2:	68d2      	ldr	r2, [r2, #12]
 80086c4:	6852      	ldr	r2, [r2, #4]
 80086c6:	e7f8      	b.n	80086ba <prvResetNextTaskUnblockTime+0xe>
 80086c8:	20012ed8 	.word	0x20012ed8
 80086cc:	20013380 	.word	0x20013380

080086d0 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80086d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80086d4:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80086d8:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80086dc:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80086de:	4606      	mov	r6, r0
 80086e0:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80086e2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80086e4:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80086e6:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80086e8:	f013 faa4 	bl	801bc34 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80086ec:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80086ee:	f1a9 0904 	sub.w	r9, r9, #4
 80086f2:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80086f4:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 80086f8:	2d00      	cmp	r5, #0
 80086fa:	d037      	beq.n	800876c <prvInitialiseNewTask.isra.0+0x9c>
 80086fc:	1e6b      	subs	r3, r5, #1
 80086fe:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8008702:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008704:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008708:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800870c:	7819      	ldrb	r1, [r3, #0]
 800870e:	b109      	cbz	r1, 8008714 <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008710:	42ab      	cmp	r3, r5
 8008712:	d1f7      	bne.n	8008704 <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008714:	2300      	movs	r3, #0
 8008716:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800871a:	9d08      	ldr	r5, [sp, #32]
 800871c:	2d37      	cmp	r5, #55	; 0x37
 800871e:	bf28      	it	cs
 8008720:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008722:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008726:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008728:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800872a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800872c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008730:	f7ff f851 	bl	80077d6 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008734:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008738:	f104 0018 	add.w	r0, r4, #24
 800873c:	f7ff f84b 	bl	80077d6 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008740:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008744:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008746:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008748:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800874a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800874e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008752:	463a      	mov	r2, r7
 8008754:	4631      	mov	r1, r6
 8008756:	4648      	mov	r0, r9
 8008758:	f7ff f8b2 	bl	80078c0 <pxPortInitialiseStack>
 800875c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800875e:	f1b8 0f00 	cmp.w	r8, #0
 8008762:	d001      	beq.n	8008768 <prvInitialiseNewTask.isra.0+0x98>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008764:	f8c8 4000 	str.w	r4, [r8]
}
 8008768:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800876c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8008770:	e7d3      	b.n	800871a <prvInitialiseNewTask.isra.0+0x4a>

08008772 <prvDeleteTCB>:
	{
 8008772:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008774:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8008778:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800877a:	b93b      	cbnz	r3, 800878c <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800877c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800877e:	f7fe ffe7 	bl	8007750 <vPortFree>
				vPortFree( pxTCB );
 8008782:	4620      	mov	r0, r4
	}
 8008784:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8008788:	f7fe bfe2 	b.w	8007750 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800878c:	2b01      	cmp	r3, #1
 800878e:	d0f9      	beq.n	8008784 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008790:	2b02      	cmp	r3, #2
 8008792:	d008      	beq.n	80087a6 <prvDeleteTCB+0x34>
 8008794:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008798:	f383 8811 	msr	BASEPRI, r3
 800879c:	f3bf 8f6f 	isb	sy
 80087a0:	f3bf 8f4f 	dsb	sy
 80087a4:	e7fe      	b.n	80087a4 <prvDeleteTCB+0x32>
	}
 80087a6:	bd10      	pop	{r4, pc}

080087a8 <prvIdleTask>:
{
 80087a8:	b580      	push	{r7, lr}
				taskYIELD();
 80087aa:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8008808 <prvIdleTask+0x60>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80087ae:	4f12      	ldr	r7, [pc, #72]	; (80087f8 <prvIdleTask+0x50>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80087b0:	4c12      	ldr	r4, [pc, #72]	; (80087fc <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 80087b2:	4d13      	ldr	r5, [pc, #76]	; (8008800 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80087b4:	6823      	ldr	r3, [r4, #0]
 80087b6:	b963      	cbnz	r3, 80087d2 <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80087b8:	4b12      	ldr	r3, [pc, #72]	; (8008804 <prvIdleTask+0x5c>)
 80087ba:	681b      	ldr	r3, [r3, #0]
 80087bc:	2b01      	cmp	r3, #1
 80087be:	d9f8      	bls.n	80087b2 <prvIdleTask+0xa>
				taskYIELD();
 80087c0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80087c4:	f8c8 3000 	str.w	r3, [r8]
 80087c8:	f3bf 8f4f 	dsb	sy
 80087cc:	f3bf 8f6f 	isb	sy
 80087d0:	e7ee      	b.n	80087b0 <prvIdleTask+0x8>
			taskENTER_CRITICAL();
 80087d2:	f7ff f89f 	bl	8007914 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80087d6:	68fb      	ldr	r3, [r7, #12]
 80087d8:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80087da:	1d30      	adds	r0, r6, #4
 80087dc:	f7ff f821 	bl	8007822 <uxListRemove>
				--uxCurrentNumberOfTasks;
 80087e0:	682b      	ldr	r3, [r5, #0]
 80087e2:	3b01      	subs	r3, #1
 80087e4:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80087e6:	6823      	ldr	r3, [r4, #0]
 80087e8:	3b01      	subs	r3, #1
 80087ea:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80087ec:	f7ff f8b4 	bl	8007958 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80087f0:	4630      	mov	r0, r6
 80087f2:	f7ff ffbe 	bl	8008772 <prvDeleteTCB>
 80087f6:	e7dd      	b.n	80087b4 <prvIdleTask+0xc>
 80087f8:	200133b4 	.word	0x200133b4
 80087fc:	20013344 	.word	0x20013344
 8008800:	20013340 	.word	0x20013340
 8008804:	20012ee0 	.word	0x20012ee0
 8008808:	e000ed04 	.word	0xe000ed04

0800880c <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800880c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800880e:	4b16      	ldr	r3, [pc, #88]	; (8008868 <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008810:	4e16      	ldr	r6, [pc, #88]	; (800886c <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 8008812:	681d      	ldr	r5, [r3, #0]
{
 8008814:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008816:	6830      	ldr	r0, [r6, #0]
 8008818:	3004      	adds	r0, #4
{
 800881a:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800881c:	f7ff f801 	bl	8007822 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008820:	1c63      	adds	r3, r4, #1
 8008822:	4633      	mov	r3, r6
 8008824:	d107      	bne.n	8008836 <prvAddCurrentTaskToDelayedList+0x2a>
 8008826:	b137      	cbz	r7, 8008836 <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008828:	6831      	ldr	r1, [r6, #0]
 800882a:	4811      	ldr	r0, [pc, #68]	; (8008870 <prvAddCurrentTaskToDelayedList+0x64>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800882c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008830:	3104      	adds	r1, #4
 8008832:	f7fe bfd3 	b.w	80077dc <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8008836:	681a      	ldr	r2, [r3, #0]
 8008838:	192c      	adds	r4, r5, r4
 800883a:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 800883c:	d307      	bcc.n	800884e <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800883e:	4a0d      	ldr	r2, [pc, #52]	; (8008874 <prvAddCurrentTaskToDelayedList+0x68>)
 8008840:	6810      	ldr	r0, [r2, #0]
 8008842:	6819      	ldr	r1, [r3, #0]
}
 8008844:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008848:	3104      	adds	r1, #4
 800884a:	f7fe bfd3 	b.w	80077f4 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800884e:	4a0a      	ldr	r2, [pc, #40]	; (8008878 <prvAddCurrentTaskToDelayedList+0x6c>)
 8008850:	6810      	ldr	r0, [r2, #0]
 8008852:	6819      	ldr	r1, [r3, #0]
 8008854:	3104      	adds	r1, #4
 8008856:	f7fe ffcd 	bl	80077f4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800885a:	4b08      	ldr	r3, [pc, #32]	; (800887c <prvAddCurrentTaskToDelayedList+0x70>)
 800885c:	681a      	ldr	r2, [r3, #0]
 800885e:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008860:	bf88      	it	hi
 8008862:	601c      	strhi	r4, [r3, #0]
}
 8008864:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008866:	bf00      	nop
 8008868:	200133c8 	.word	0x200133c8
 800886c:	20012ed4 	.word	0x20012ed4
 8008870:	200133a0 	.word	0x200133a0
 8008874:	20012edc 	.word	0x20012edc
 8008878:	20012ed8 	.word	0x20012ed8
 800887c:	20013380 	.word	0x20013380

08008880 <xTaskCreateStatic>:
	{
 8008880:	b570      	push	{r4, r5, r6, lr}
 8008882:	b086      	sub	sp, #24
 8008884:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008888:	b945      	cbnz	r5, 800889c <xTaskCreateStatic+0x1c>
 800888a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800888e:	f383 8811 	msr	BASEPRI, r3
 8008892:	f3bf 8f6f 	isb	sy
 8008896:	f3bf 8f4f 	dsb	sy
 800889a:	e7fe      	b.n	800889a <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800889c:	b944      	cbnz	r4, 80088b0 <xTaskCreateStatic+0x30>
 800889e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088a2:	f383 8811 	msr	BASEPRI, r3
 80088a6:	f3bf 8f6f 	isb	sy
 80088aa:	f3bf 8f4f 	dsb	sy
 80088ae:	e7fe      	b.n	80088ae <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80088b0:	2660      	movs	r6, #96	; 0x60
 80088b2:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80088b4:	9e05      	ldr	r6, [sp, #20]
 80088b6:	2e60      	cmp	r6, #96	; 0x60
 80088b8:	d008      	beq.n	80088cc <xTaskCreateStatic+0x4c>
 80088ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088be:	f383 8811 	msr	BASEPRI, r3
 80088c2:	f3bf 8f6f 	isb	sy
 80088c6:	f3bf 8f4f 	dsb	sy
 80088ca:	e7fe      	b.n	80088ca <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80088cc:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80088ce:	2502      	movs	r5, #2
 80088d0:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80088d4:	ad04      	add	r5, sp, #16
 80088d6:	9501      	str	r5, [sp, #4]
 80088d8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80088da:	9402      	str	r4, [sp, #8]
 80088dc:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80088de:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80088e0:	f7ff fef6 	bl	80086d0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80088e4:	4620      	mov	r0, r4
 80088e6:	f7ff fe61 	bl	80085ac <prvAddNewTaskToReadyList>
	}
 80088ea:	9804      	ldr	r0, [sp, #16]
 80088ec:	b006      	add	sp, #24
 80088ee:	bd70      	pop	{r4, r5, r6, pc}

080088f0 <xTaskCreate>:
	{
 80088f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80088f4:	4607      	mov	r7, r0
 80088f6:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80088f8:	0090      	lsls	r0, r2, #2
	{
 80088fa:	4688      	mov	r8, r1
 80088fc:	4616      	mov	r6, r2
 80088fe:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008900:	f7fe fe9a 	bl	8007638 <pvPortMalloc>
			if( pxStack != NULL )
 8008904:	4605      	mov	r5, r0
 8008906:	b1e8      	cbz	r0, 8008944 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008908:	2060      	movs	r0, #96	; 0x60
 800890a:	f7fe fe95 	bl	8007638 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800890e:	4604      	mov	r4, r0
 8008910:	b1a8      	cbz	r0, 800893e <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008912:	2300      	movs	r3, #0
 8008914:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008918:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800891a:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800891c:	9301      	str	r3, [sp, #4]
 800891e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008920:	9002      	str	r0, [sp, #8]
 8008922:	9300      	str	r3, [sp, #0]
 8008924:	4632      	mov	r2, r6
 8008926:	464b      	mov	r3, r9
 8008928:	4641      	mov	r1, r8
 800892a:	4638      	mov	r0, r7
 800892c:	f7ff fed0 	bl	80086d0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008930:	4620      	mov	r0, r4
 8008932:	f7ff fe3b 	bl	80085ac <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008936:	2001      	movs	r0, #1
	}
 8008938:	b005      	add	sp, #20
 800893a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800893e:	4628      	mov	r0, r5
 8008940:	f7fe ff06 	bl	8007750 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008944:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8008948:	e7f6      	b.n	8008938 <xTaskCreate+0x48>
	...

0800894c <vTaskStartScheduler>:
{
 800894c:	b510      	push	{r4, lr}
 800894e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008950:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008952:	aa07      	add	r2, sp, #28
 8008954:	a906      	add	r1, sp, #24
 8008956:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008958:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800895c:	f7fe fe30 	bl	80075c0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008960:	9b05      	ldr	r3, [sp, #20]
 8008962:	9302      	str	r3, [sp, #8]
 8008964:	9b06      	ldr	r3, [sp, #24]
 8008966:	9a07      	ldr	r2, [sp, #28]
 8008968:	4915      	ldr	r1, [pc, #84]	; (80089c0 <vTaskStartScheduler+0x74>)
 800896a:	4816      	ldr	r0, [pc, #88]	; (80089c4 <vTaskStartScheduler+0x78>)
 800896c:	e9cd 4300 	strd	r4, r3, [sp]
 8008970:	4623      	mov	r3, r4
 8008972:	f7ff ff85 	bl	8008880 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008976:	b1a8      	cbz	r0, 80089a4 <vTaskStartScheduler+0x58>
			xReturn = xTimerCreateTimerTask();
 8008978:	f000 fbb4 	bl	80090e4 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800897c:	2801      	cmp	r0, #1
 800897e:	d113      	bne.n	80089a8 <vTaskStartScheduler+0x5c>
 8008980:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008984:	f383 8811 	msr	BASEPRI, r3
 8008988:	f3bf 8f6f 	isb	sy
 800898c:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008990:	4b0d      	ldr	r3, [pc, #52]	; (80089c8 <vTaskStartScheduler+0x7c>)
 8008992:	f04f 32ff 	mov.w	r2, #4294967295
 8008996:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008998:	4b0c      	ldr	r3, [pc, #48]	; (80089cc <vTaskStartScheduler+0x80>)
 800899a:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800899c:	4b0c      	ldr	r3, [pc, #48]	; (80089d0 <vTaskStartScheduler+0x84>)
 800899e:	601c      	str	r4, [r3, #0]
		if( xPortStartScheduler() != pdFALSE )
 80089a0:	f7ff f850 	bl	8007a44 <xPortStartScheduler>
}
 80089a4:	b008      	add	sp, #32
 80089a6:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 80089a8:	3001      	adds	r0, #1
 80089aa:	d1fb      	bne.n	80089a4 <vTaskStartScheduler+0x58>
 80089ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089b0:	f383 8811 	msr	BASEPRI, r3
 80089b4:	f3bf 8f6f 	isb	sy
 80089b8:	f3bf 8f4f 	dsb	sy
 80089bc:	e7fe      	b.n	80089bc <vTaskStartScheduler+0x70>
 80089be:	bf00      	nop
 80089c0:	0801ea2c 	.word	0x0801ea2c
 80089c4:	080087a9 	.word	0x080087a9
 80089c8:	20013380 	.word	0x20013380
 80089cc:	2001339c 	.word	0x2001339c
 80089d0:	200133c8 	.word	0x200133c8

080089d4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80089d4:	4a02      	ldr	r2, [pc, #8]	; (80089e0 <vTaskSuspendAll+0xc>)
 80089d6:	6813      	ldr	r3, [r2, #0]
 80089d8:	3301      	adds	r3, #1
 80089da:	6013      	str	r3, [r2, #0]
}
 80089dc:	4770      	bx	lr
 80089de:	bf00      	nop
 80089e0:	2001334c 	.word	0x2001334c

080089e4 <xTaskGetTickCount>:
		xTicks = xTickCount;
 80089e4:	4b01      	ldr	r3, [pc, #4]	; (80089ec <xTaskGetTickCount+0x8>)
 80089e6:	6818      	ldr	r0, [r3, #0]
}
 80089e8:	4770      	bx	lr
 80089ea:	bf00      	nop
 80089ec:	200133c8 	.word	0x200133c8

080089f0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80089f0:	4b3f      	ldr	r3, [pc, #252]	; (8008af0 <xTaskIncrementTick+0x100>)
 80089f2:	681b      	ldr	r3, [r3, #0]
{
 80089f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80089f8:	2b00      	cmp	r3, #0
 80089fa:	d173      	bne.n	8008ae4 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80089fc:	4b3d      	ldr	r3, [pc, #244]	; (8008af4 <xTaskIncrementTick+0x104>)
 80089fe:	681d      	ldr	r5, [r3, #0]
 8008a00:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8008a02:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008a04:	b9bd      	cbnz	r5, 8008a36 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008a06:	4b3c      	ldr	r3, [pc, #240]	; (8008af8 <xTaskIncrementTick+0x108>)
 8008a08:	681a      	ldr	r2, [r3, #0]
 8008a0a:	6812      	ldr	r2, [r2, #0]
 8008a0c:	b142      	cbz	r2, 8008a20 <xTaskIncrementTick+0x30>
 8008a0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a12:	f383 8811 	msr	BASEPRI, r3
 8008a16:	f3bf 8f6f 	isb	sy
 8008a1a:	f3bf 8f4f 	dsb	sy
 8008a1e:	e7fe      	b.n	8008a1e <xTaskIncrementTick+0x2e>
 8008a20:	4a36      	ldr	r2, [pc, #216]	; (8008afc <xTaskIncrementTick+0x10c>)
 8008a22:	6819      	ldr	r1, [r3, #0]
 8008a24:	6810      	ldr	r0, [r2, #0]
 8008a26:	6018      	str	r0, [r3, #0]
 8008a28:	6011      	str	r1, [r2, #0]
 8008a2a:	4a35      	ldr	r2, [pc, #212]	; (8008b00 <xTaskIncrementTick+0x110>)
 8008a2c:	6813      	ldr	r3, [r2, #0]
 8008a2e:	3301      	adds	r3, #1
 8008a30:	6013      	str	r3, [r2, #0]
 8008a32:	f7ff fe3b 	bl	80086ac <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008a36:	4e33      	ldr	r6, [pc, #204]	; (8008b04 <xTaskIncrementTick+0x114>)
 8008a38:	4f33      	ldr	r7, [pc, #204]	; (8008b08 <xTaskIncrementTick+0x118>)
 8008a3a:	6833      	ldr	r3, [r6, #0]
 8008a3c:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8008b14 <xTaskIncrementTick+0x124>
 8008a40:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8008a42:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008a46:	d911      	bls.n	8008a6c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008a48:	f8d8 3000 	ldr.w	r3, [r8]
 8008a4c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008a4e:	2314      	movs	r3, #20
 8008a50:	4353      	muls	r3, r2
 8008a52:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8008a54:	2b02      	cmp	r3, #2
 8008a56:	bf28      	it	cs
 8008a58:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8008a5a:	4b2c      	ldr	r3, [pc, #176]	; (8008b0c <xTaskIncrementTick+0x11c>)
 8008a5c:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8008a5e:	2b00      	cmp	r3, #0
}
 8008a60:	bf0c      	ite	eq
 8008a62:	4620      	moveq	r0, r4
 8008a64:	2001      	movne	r0, #1
 8008a66:	b003      	add	sp, #12
 8008a68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008a6c:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8008af8 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008a70:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8008b18 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008a74:	f8d9 3000 	ldr.w	r3, [r9]
 8008a78:	681b      	ldr	r3, [r3, #0]
 8008a7a:	b91b      	cbnz	r3, 8008a84 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008a7c:	f04f 33ff 	mov.w	r3, #4294967295
 8008a80:	6033      	str	r3, [r6, #0]
					break;
 8008a82:	e7e1      	b.n	8008a48 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a84:	f8d9 3000 	ldr.w	r3, [r9]
 8008a88:	68db      	ldr	r3, [r3, #12]
 8008a8a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008a8e:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8008a92:	4295      	cmp	r5, r2
 8008a94:	d201      	bcs.n	8008a9a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008a96:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008a98:	e7d6      	b.n	8008a48 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008a9a:	f10b 0104 	add.w	r1, fp, #4
 8008a9e:	4608      	mov	r0, r1
 8008aa0:	9101      	str	r1, [sp, #4]
 8008aa2:	f7fe febe 	bl	8007822 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008aa6:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8008aaa:	9901      	ldr	r1, [sp, #4]
 8008aac:	b122      	cbz	r2, 8008ab8 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008aae:	f10b 0018 	add.w	r0, fp, #24
 8008ab2:	f7fe feb6 	bl	8007822 <uxListRemove>
 8008ab6:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8008ab8:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8008abc:	f8da 2000 	ldr.w	r2, [sl]
 8008ac0:	2314      	movs	r3, #20
 8008ac2:	4290      	cmp	r0, r2
 8008ac4:	bf88      	it	hi
 8008ac6:	f8ca 0000 	strhi.w	r0, [sl]
 8008aca:	fb03 7000 	mla	r0, r3, r0, r7
 8008ace:	f7fe fe85 	bl	80077dc <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008ad2:	f8d8 1000 	ldr.w	r1, [r8]
 8008ad6:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8008ada:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8008adc:	429a      	cmp	r2, r3
 8008ade:	bf28      	it	cs
 8008ae0:	2401      	movcs	r4, #1
 8008ae2:	e7c7      	b.n	8008a74 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8008ae4:	4a0a      	ldr	r2, [pc, #40]	; (8008b10 <xTaskIncrementTick+0x120>)
 8008ae6:	6813      	ldr	r3, [r2, #0]
 8008ae8:	3301      	adds	r3, #1
 8008aea:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008aec:	2400      	movs	r4, #0
 8008aee:	e7b4      	b.n	8008a5a <xTaskIncrementTick+0x6a>
 8008af0:	2001334c 	.word	0x2001334c
 8008af4:	200133c8 	.word	0x200133c8
 8008af8:	20012ed8 	.word	0x20012ed8
 8008afc:	20012edc 	.word	0x20012edc
 8008b00:	20013384 	.word	0x20013384
 8008b04:	20013380 	.word	0x20013380
 8008b08:	20012ee0 	.word	0x20012ee0
 8008b0c:	200133cc 	.word	0x200133cc
 8008b10:	20013348 	.word	0x20013348
 8008b14:	20012ed4 	.word	0x20012ed4
 8008b18:	20013354 	.word	0x20013354

08008b1c <xTaskResumeAll>:
{
 8008b1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8008b1e:	4c30      	ldr	r4, [pc, #192]	; (8008be0 <xTaskResumeAll+0xc4>)
 8008b20:	6823      	ldr	r3, [r4, #0]
 8008b22:	b943      	cbnz	r3, 8008b36 <xTaskResumeAll+0x1a>
 8008b24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b28:	f383 8811 	msr	BASEPRI, r3
 8008b2c:	f3bf 8f6f 	isb	sy
 8008b30:	f3bf 8f4f 	dsb	sy
 8008b34:	e7fe      	b.n	8008b34 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8008b36:	f7fe feed 	bl	8007914 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008b3a:	6823      	ldr	r3, [r4, #0]
 8008b3c:	3b01      	subs	r3, #1
 8008b3e:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008b40:	6824      	ldr	r4, [r4, #0]
 8008b42:	b12c      	cbz	r4, 8008b50 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8008b44:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008b46:	f7fe ff07 	bl	8007958 <vPortExitCritical>
}
 8008b4a:	4620      	mov	r0, r4
 8008b4c:	b003      	add	sp, #12
 8008b4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008b50:	4b24      	ldr	r3, [pc, #144]	; (8008be4 <xTaskResumeAll+0xc8>)
 8008b52:	681b      	ldr	r3, [r3, #0]
 8008b54:	2b00      	cmp	r3, #0
 8008b56:	d0f5      	beq.n	8008b44 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008b58:	4d23      	ldr	r5, [pc, #140]	; (8008be8 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 8008b5a:	4e24      	ldr	r6, [pc, #144]	; (8008bec <xTaskResumeAll+0xd0>)
 8008b5c:	4f24      	ldr	r7, [pc, #144]	; (8008bf0 <xTaskResumeAll+0xd4>)
 8008b5e:	e01e      	b.n	8008b9e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b60:	68eb      	ldr	r3, [r5, #12]
 8008b62:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008b64:	f104 0018 	add.w	r0, r4, #24
 8008b68:	f7fe fe5b 	bl	8007822 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008b6c:	1d21      	adds	r1, r4, #4
 8008b6e:	4608      	mov	r0, r1
 8008b70:	9101      	str	r1, [sp, #4]
 8008b72:	f7fe fe56 	bl	8007822 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008b76:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008b78:	6832      	ldr	r2, [r6, #0]
 8008b7a:	9901      	ldr	r1, [sp, #4]
 8008b7c:	2014      	movs	r0, #20
 8008b7e:	4293      	cmp	r3, r2
 8008b80:	fb00 7003 	mla	r0, r0, r3, r7
 8008b84:	bf88      	it	hi
 8008b86:	6033      	strhi	r3, [r6, #0]
 8008b88:	f7fe fe28 	bl	80077dc <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008b8c:	4b19      	ldr	r3, [pc, #100]	; (8008bf4 <xTaskResumeAll+0xd8>)
 8008b8e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008b90:	681b      	ldr	r3, [r3, #0]
 8008b92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008b94:	429a      	cmp	r2, r3
 8008b96:	d302      	bcc.n	8008b9e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8008b98:	4b17      	ldr	r3, [pc, #92]	; (8008bf8 <xTaskResumeAll+0xdc>)
 8008b9a:	2201      	movs	r2, #1
 8008b9c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008b9e:	682b      	ldr	r3, [r5, #0]
 8008ba0:	2b00      	cmp	r3, #0
 8008ba2:	d1dd      	bne.n	8008b60 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8008ba4:	b10c      	cbz	r4, 8008baa <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8008ba6:	f7ff fd81 	bl	80086ac <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8008baa:	4d14      	ldr	r5, [pc, #80]	; (8008bfc <xTaskResumeAll+0xe0>)
 8008bac:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8008bae:	b144      	cbz	r4, 8008bc2 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8008bb0:	4e11      	ldr	r6, [pc, #68]	; (8008bf8 <xTaskResumeAll+0xdc>)
 8008bb2:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008bb4:	f7ff ff1c 	bl	80089f0 <xTaskIncrementTick>
 8008bb8:	b100      	cbz	r0, 8008bbc <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8008bba:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8008bbc:	3c01      	subs	r4, #1
 8008bbe:	d1f9      	bne.n	8008bb4 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8008bc0:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008bc2:	4b0d      	ldr	r3, [pc, #52]	; (8008bf8 <xTaskResumeAll+0xdc>)
 8008bc4:	681b      	ldr	r3, [r3, #0]
 8008bc6:	2b00      	cmp	r3, #0
 8008bc8:	d0bc      	beq.n	8008b44 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8008bca:	4b0d      	ldr	r3, [pc, #52]	; (8008c00 <xTaskResumeAll+0xe4>)
 8008bcc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008bd0:	601a      	str	r2, [r3, #0]
 8008bd2:	f3bf 8f4f 	dsb	sy
 8008bd6:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008bda:	2401      	movs	r4, #1
 8008bdc:	e7b3      	b.n	8008b46 <xTaskResumeAll+0x2a>
 8008bde:	bf00      	nop
 8008be0:	2001334c 	.word	0x2001334c
 8008be4:	20013340 	.word	0x20013340
 8008be8:	20013388 	.word	0x20013388
 8008bec:	20013354 	.word	0x20013354
 8008bf0:	20012ee0 	.word	0x20012ee0
 8008bf4:	20012ed4 	.word	0x20012ed4
 8008bf8:	200133cc 	.word	0x200133cc
 8008bfc:	20013348 	.word	0x20013348
 8008c00:	e000ed04 	.word	0xe000ed04

08008c04 <vTaskDelay>:
	{
 8008c04:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008c06:	b940      	cbnz	r0, 8008c1a <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 8008c08:	4b0e      	ldr	r3, [pc, #56]	; (8008c44 <vTaskDelay+0x40>)
 8008c0a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008c0e:	601a      	str	r2, [r3, #0]
 8008c10:	f3bf 8f4f 	dsb	sy
 8008c14:	f3bf 8f6f 	isb	sy
	}
 8008c18:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008c1a:	4b0b      	ldr	r3, [pc, #44]	; (8008c48 <vTaskDelay+0x44>)
 8008c1c:	6819      	ldr	r1, [r3, #0]
 8008c1e:	b141      	cbz	r1, 8008c32 <vTaskDelay+0x2e>
 8008c20:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c24:	f383 8811 	msr	BASEPRI, r3
 8008c28:	f3bf 8f6f 	isb	sy
 8008c2c:	f3bf 8f4f 	dsb	sy
 8008c30:	e7fe      	b.n	8008c30 <vTaskDelay+0x2c>
			vTaskSuspendAll();
 8008c32:	f7ff fecf 	bl	80089d4 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008c36:	f7ff fde9 	bl	800880c <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008c3a:	f7ff ff6f 	bl	8008b1c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8008c3e:	2800      	cmp	r0, #0
 8008c40:	d0e2      	beq.n	8008c08 <vTaskDelay+0x4>
 8008c42:	e7e9      	b.n	8008c18 <vTaskDelay+0x14>
 8008c44:	e000ed04 	.word	0xe000ed04
 8008c48:	2001334c 	.word	0x2001334c

08008c4c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008c4c:	4b18      	ldr	r3, [pc, #96]	; (8008cb0 <vTaskSwitchContext+0x64>)
 8008c4e:	681a      	ldr	r2, [r3, #0]
 8008c50:	4b18      	ldr	r3, [pc, #96]	; (8008cb4 <vTaskSwitchContext+0x68>)
{
 8008c52:	b5f0      	push	{r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008c54:	b112      	cbz	r2, 8008c5c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008c56:	2201      	movs	r2, #1
 8008c58:	601a      	str	r2, [r3, #0]
}
 8008c5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c5c:	4d16      	ldr	r5, [pc, #88]	; (8008cb8 <vTaskSwitchContext+0x6c>)
		xYieldPending = pdFALSE;
 8008c5e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c60:	4a16      	ldr	r2, [pc, #88]	; (8008cbc <vTaskSwitchContext+0x70>)
 8008c62:	682b      	ldr	r3, [r5, #0]
 8008c64:	2714      	movs	r7, #20
 8008c66:	4616      	mov	r6, r2
 8008c68:	fb07 f103 	mul.w	r1, r7, r3
 8008c6c:	1850      	adds	r0, r2, r1
 8008c6e:	5854      	ldr	r4, [r2, r1]
 8008c70:	b18c      	cbz	r4, 8008c96 <vTaskSwitchContext+0x4a>
 8008c72:	6844      	ldr	r4, [r0, #4]
 8008c74:	3108      	adds	r1, #8
 8008c76:	6864      	ldr	r4, [r4, #4]
 8008c78:	6044      	str	r4, [r0, #4]
 8008c7a:	440a      	add	r2, r1
 8008c7c:	4294      	cmp	r4, r2
 8008c7e:	bf04      	itt	eq
 8008c80:	6862      	ldreq	r2, [r4, #4]
 8008c82:	6042      	streq	r2, [r0, #4]
 8008c84:	2214      	movs	r2, #20
 8008c86:	fb02 6203 	mla	r2, r2, r3, r6
 8008c8a:	6852      	ldr	r2, [r2, #4]
 8008c8c:	68d1      	ldr	r1, [r2, #12]
 8008c8e:	4a0c      	ldr	r2, [pc, #48]	; (8008cc0 <vTaskSwitchContext+0x74>)
 8008c90:	6011      	str	r1, [r2, #0]
 8008c92:	602b      	str	r3, [r5, #0]
}
 8008c94:	e7e1      	b.n	8008c5a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c96:	b943      	cbnz	r3, 8008caa <vTaskSwitchContext+0x5e>
 8008c98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c9c:	f383 8811 	msr	BASEPRI, r3
 8008ca0:	f3bf 8f6f 	isb	sy
 8008ca4:	f3bf 8f4f 	dsb	sy
 8008ca8:	e7fe      	b.n	8008ca8 <vTaskSwitchContext+0x5c>
 8008caa:	3b01      	subs	r3, #1
 8008cac:	e7dc      	b.n	8008c68 <vTaskSwitchContext+0x1c>
 8008cae:	bf00      	nop
 8008cb0:	2001334c 	.word	0x2001334c
 8008cb4:	200133cc 	.word	0x200133cc
 8008cb8:	20013354 	.word	0x20013354
 8008cbc:	20012ee0 	.word	0x20012ee0
 8008cc0:	20012ed4 	.word	0x20012ed4

08008cc4 <vTaskPlaceOnEventList>:
{
 8008cc4:	b510      	push	{r4, lr}
 8008cc6:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008cc8:	b940      	cbnz	r0, 8008cdc <vTaskPlaceOnEventList+0x18>
 8008cca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cce:	f383 8811 	msr	BASEPRI, r3
 8008cd2:	f3bf 8f6f 	isb	sy
 8008cd6:	f3bf 8f4f 	dsb	sy
 8008cda:	e7fe      	b.n	8008cda <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008cdc:	4b05      	ldr	r3, [pc, #20]	; (8008cf4 <vTaskPlaceOnEventList+0x30>)
 8008cde:	6819      	ldr	r1, [r3, #0]
 8008ce0:	3118      	adds	r1, #24
 8008ce2:	f7fe fd87 	bl	80077f4 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008ce6:	4620      	mov	r0, r4
 8008ce8:	2101      	movs	r1, #1
}
 8008cea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008cee:	f7ff bd8d 	b.w	800880c <prvAddCurrentTaskToDelayedList>
 8008cf2:	bf00      	nop
 8008cf4:	20012ed4 	.word	0x20012ed4

08008cf8 <vTaskPlaceOnEventListRestricted>:
	{
 8008cf8:	b538      	push	{r3, r4, r5, lr}
 8008cfa:	460d      	mov	r5, r1
 8008cfc:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008cfe:	b940      	cbnz	r0, 8008d12 <vTaskPlaceOnEventListRestricted+0x1a>
 8008d00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d04:	f383 8811 	msr	BASEPRI, r3
 8008d08:	f3bf 8f6f 	isb	sy
 8008d0c:	f3bf 8f4f 	dsb	sy
 8008d10:	e7fe      	b.n	8008d10 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008d12:	4b07      	ldr	r3, [pc, #28]	; (8008d30 <vTaskPlaceOnEventListRestricted+0x38>)
 8008d14:	6819      	ldr	r1, [r3, #0]
 8008d16:	3118      	adds	r1, #24
 8008d18:	f7fe fd60 	bl	80077dc <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008d1c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008d1e:	4621      	mov	r1, r4
 8008d20:	bf0c      	ite	eq
 8008d22:	4628      	moveq	r0, r5
 8008d24:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008d28:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008d2c:	f7ff bd6e 	b.w	800880c <prvAddCurrentTaskToDelayedList>
 8008d30:	20012ed4 	.word	0x20012ed4

08008d34 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d34:	68c3      	ldr	r3, [r0, #12]
{
 8008d36:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d38:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008d3a:	b944      	cbnz	r4, 8008d4e <xTaskRemoveFromEventList+0x1a>
 8008d3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d40:	f383 8811 	msr	BASEPRI, r3
 8008d44:	f3bf 8f6f 	isb	sy
 8008d48:	f3bf 8f4f 	dsb	sy
 8008d4c:	e7fe      	b.n	8008d4c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8008d4e:	f104 0118 	add.w	r1, r4, #24
 8008d52:	4608      	mov	r0, r1
 8008d54:	9101      	str	r1, [sp, #4]
 8008d56:	f7fe fd64 	bl	8007822 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008d5a:	4b12      	ldr	r3, [pc, #72]	; (8008da4 <xTaskRemoveFromEventList+0x70>)
 8008d5c:	9901      	ldr	r1, [sp, #4]
 8008d5e:	681b      	ldr	r3, [r3, #0]
 8008d60:	b9eb      	cbnz	r3, 8008d9e <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8008d62:	1d21      	adds	r1, r4, #4
 8008d64:	4608      	mov	r0, r1
 8008d66:	9101      	str	r1, [sp, #4]
 8008d68:	f7fe fd5b 	bl	8007822 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008d6c:	4a0e      	ldr	r2, [pc, #56]	; (8008da8 <xTaskRemoveFromEventList+0x74>)
 8008d6e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008d70:	6810      	ldr	r0, [r2, #0]
 8008d72:	9901      	ldr	r1, [sp, #4]
 8008d74:	4283      	cmp	r3, r0
 8008d76:	bf88      	it	hi
 8008d78:	6013      	strhi	r3, [r2, #0]
 8008d7a:	4a0c      	ldr	r2, [pc, #48]	; (8008dac <xTaskRemoveFromEventList+0x78>)
 8008d7c:	2014      	movs	r0, #20
 8008d7e:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008d82:	f7fe fd2b 	bl	80077dc <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008d86:	4b0a      	ldr	r3, [pc, #40]	; (8008db0 <xTaskRemoveFromEventList+0x7c>)
 8008d88:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008d8a:	681b      	ldr	r3, [r3, #0]
 8008d8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d8e:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8008d90:	bf85      	ittet	hi
 8008d92:	4b08      	ldrhi	r3, [pc, #32]	; (8008db4 <xTaskRemoveFromEventList+0x80>)
 8008d94:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8008d96:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8008d98:	6018      	strhi	r0, [r3, #0]
}
 8008d9a:	b002      	add	sp, #8
 8008d9c:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008d9e:	4806      	ldr	r0, [pc, #24]	; (8008db8 <xTaskRemoveFromEventList+0x84>)
 8008da0:	e7ef      	b.n	8008d82 <xTaskRemoveFromEventList+0x4e>
 8008da2:	bf00      	nop
 8008da4:	2001334c 	.word	0x2001334c
 8008da8:	20013354 	.word	0x20013354
 8008dac:	20012ee0 	.word	0x20012ee0
 8008db0:	20012ed4 	.word	0x20012ed4
 8008db4:	200133cc 	.word	0x200133cc
 8008db8:	20013388 	.word	0x20013388

08008dbc <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008dbc:	4b03      	ldr	r3, [pc, #12]	; (8008dcc <vTaskInternalSetTimeOutState+0x10>)
 8008dbe:	681b      	ldr	r3, [r3, #0]
 8008dc0:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8008dc2:	4b03      	ldr	r3, [pc, #12]	; (8008dd0 <vTaskInternalSetTimeOutState+0x14>)
 8008dc4:	681b      	ldr	r3, [r3, #0]
 8008dc6:	6043      	str	r3, [r0, #4]
}
 8008dc8:	4770      	bx	lr
 8008dca:	bf00      	nop
 8008dcc:	20013384 	.word	0x20013384
 8008dd0:	200133c8 	.word	0x200133c8

08008dd4 <xTaskCheckForTimeOut>:
{
 8008dd4:	b570      	push	{r4, r5, r6, lr}
 8008dd6:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008dd8:	4605      	mov	r5, r0
 8008dda:	b940      	cbnz	r0, 8008dee <xTaskCheckForTimeOut+0x1a>
 8008ddc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008de0:	f383 8811 	msr	BASEPRI, r3
 8008de4:	f3bf 8f6f 	isb	sy
 8008de8:	f3bf 8f4f 	dsb	sy
 8008dec:	e7fe      	b.n	8008dec <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8008dee:	b941      	cbnz	r1, 8008e02 <xTaskCheckForTimeOut+0x2e>
 8008df0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008df4:	f383 8811 	msr	BASEPRI, r3
 8008df8:	f3bf 8f6f 	isb	sy
 8008dfc:	f3bf 8f4f 	dsb	sy
 8008e00:	e7fe      	b.n	8008e00 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8008e02:	f7fe fd87 	bl	8007914 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008e06:	4b0f      	ldr	r3, [pc, #60]	; (8008e44 <xTaskCheckForTimeOut+0x70>)
 8008e08:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008e0a:	6823      	ldr	r3, [r4, #0]
 8008e0c:	1c5a      	adds	r2, r3, #1
 8008e0e:	d010      	beq.n	8008e32 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008e10:	480d      	ldr	r0, [pc, #52]	; (8008e48 <xTaskCheckForTimeOut+0x74>)
 8008e12:	682e      	ldr	r6, [r5, #0]
 8008e14:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008e16:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008e18:	4286      	cmp	r6, r0
 8008e1a:	d001      	beq.n	8008e20 <xTaskCheckForTimeOut+0x4c>
 8008e1c:	428a      	cmp	r2, r1
 8008e1e:	d90f      	bls.n	8008e40 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008e20:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008e22:	4283      	cmp	r3, r0
 8008e24:	d90a      	bls.n	8008e3c <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008e26:	1a5b      	subs	r3, r3, r1
 8008e28:	4413      	add	r3, r2
 8008e2a:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008e2c:	4628      	mov	r0, r5
 8008e2e:	f7ff ffc5 	bl	8008dbc <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008e32:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008e34:	f7fe fd90 	bl	8007958 <vPortExitCritical>
}
 8008e38:	4620      	mov	r0, r4
 8008e3a:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008e3c:	2300      	movs	r3, #0
 8008e3e:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008e40:	2401      	movs	r4, #1
 8008e42:	e7f7      	b.n	8008e34 <xTaskCheckForTimeOut+0x60>
 8008e44:	200133c8 	.word	0x200133c8
 8008e48:	20013384 	.word	0x20013384

08008e4c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008e4c:	4b01      	ldr	r3, [pc, #4]	; (8008e54 <vTaskMissedYield+0x8>)
 8008e4e:	2201      	movs	r2, #1
 8008e50:	601a      	str	r2, [r3, #0]
}
 8008e52:	4770      	bx	lr
 8008e54:	200133cc 	.word	0x200133cc

08008e58 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008e58:	4b05      	ldr	r3, [pc, #20]	; (8008e70 <xTaskGetSchedulerState+0x18>)
 8008e5a:	681b      	ldr	r3, [r3, #0]
 8008e5c:	b133      	cbz	r3, 8008e6c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008e5e:	4b05      	ldr	r3, [pc, #20]	; (8008e74 <xTaskGetSchedulerState+0x1c>)
 8008e60:	681b      	ldr	r3, [r3, #0]
 8008e62:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 8008e64:	bf0c      	ite	eq
 8008e66:	2002      	moveq	r0, #2
 8008e68:	2000      	movne	r0, #0
 8008e6a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008e6c:	2001      	movs	r0, #1
	}
 8008e6e:	4770      	bx	lr
 8008e70:	2001339c 	.word	0x2001339c
 8008e74:	2001334c 	.word	0x2001334c

08008e78 <xTaskPriorityInherit>:
	{
 8008e78:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008e7a:	4604      	mov	r4, r0
 8008e7c:	b350      	cbz	r0, 8008ed4 <xTaskPriorityInherit+0x5c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008e7e:	4a1c      	ldr	r2, [pc, #112]	; (8008ef0 <xTaskPriorityInherit+0x78>)
 8008e80:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008e82:	6811      	ldr	r1, [r2, #0]
 8008e84:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8008e86:	428b      	cmp	r3, r1
 8008e88:	4616      	mov	r6, r2
 8008e8a:	d229      	bcs.n	8008ee0 <xTaskPriorityInherit+0x68>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008e8c:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008e8e:	4d19      	ldr	r5, [pc, #100]	; (8008ef4 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008e90:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008e92:	bfa1      	itttt	ge
 8008e94:	6832      	ldrge	r2, [r6, #0]
 8008e96:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8008e98:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8008e9c:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008e9e:	2214      	movs	r2, #20
 8008ea0:	fb02 5303 	mla	r3, r2, r3, r5
 8008ea4:	6942      	ldr	r2, [r0, #20]
 8008ea6:	429a      	cmp	r2, r3
 8008ea8:	d116      	bne.n	8008ed8 <xTaskPriorityInherit+0x60>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008eaa:	1d01      	adds	r1, r0, #4
 8008eac:	4608      	mov	r0, r1
 8008eae:	9101      	str	r1, [sp, #4]
 8008eb0:	f7fe fcb7 	bl	8007822 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008eb4:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008eb6:	4a10      	ldr	r2, [pc, #64]	; (8008ef8 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008eb8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008eba:	6810      	ldr	r0, [r2, #0]
 8008ebc:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008ebe:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008ec0:	4283      	cmp	r3, r0
 8008ec2:	f04f 0014 	mov.w	r0, #20
 8008ec6:	fb00 5003 	mla	r0, r0, r3, r5
 8008eca:	bf88      	it	hi
 8008ecc:	6013      	strhi	r3, [r2, #0]
 8008ece:	f7fe fc85 	bl	80077dc <vListInsertEnd>
				xReturn = pdTRUE;
 8008ed2:	2001      	movs	r0, #1
	}
 8008ed4:	b002      	add	sp, #8
 8008ed6:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008ed8:	6833      	ldr	r3, [r6, #0]
 8008eda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008edc:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008ede:	e7f8      	b.n	8008ed2 <xTaskPriorityInherit+0x5a>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008ee0:	6813      	ldr	r3, [r2, #0]
 8008ee2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008ee4:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008ee6:	42a0      	cmp	r0, r4
 8008ee8:	bf2c      	ite	cs
 8008eea:	2000      	movcs	r0, #0
 8008eec:	2001      	movcc	r0, #1
 8008eee:	e7f1      	b.n	8008ed4 <xTaskPriorityInherit+0x5c>
 8008ef0:	20012ed4 	.word	0x20012ed4
 8008ef4:	20012ee0 	.word	0x20012ee0
 8008ef8:	20013354 	.word	0x20013354

08008efc <xTaskPriorityDisinherit>:
	{
 8008efc:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8008efe:	b910      	cbnz	r0, 8008f06 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8008f00:	2000      	movs	r0, #0
	}
 8008f02:	b002      	add	sp, #8
 8008f04:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008f06:	4b1c      	ldr	r3, [pc, #112]	; (8008f78 <xTaskPriorityDisinherit+0x7c>)
 8008f08:	681c      	ldr	r4, [r3, #0]
 8008f0a:	4284      	cmp	r4, r0
 8008f0c:	d008      	beq.n	8008f20 <xTaskPriorityDisinherit+0x24>
 8008f0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f12:	f383 8811 	msr	BASEPRI, r3
 8008f16:	f3bf 8f6f 	isb	sy
 8008f1a:	f3bf 8f4f 	dsb	sy
 8008f1e:	e7fe      	b.n	8008f1e <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8008f20:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8008f22:	b943      	cbnz	r3, 8008f36 <xTaskPriorityDisinherit+0x3a>
 8008f24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f28:	f383 8811 	msr	BASEPRI, r3
 8008f2c:	f3bf 8f6f 	isb	sy
 8008f30:	f3bf 8f4f 	dsb	sy
 8008f34:	e7fe      	b.n	8008f34 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008f36:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008f38:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008f3a:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008f3c:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8008f3e:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008f40:	d0de      	beq.n	8008f00 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8008f42:	2b00      	cmp	r3, #0
 8008f44:	d1dc      	bne.n	8008f00 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008f46:	1d21      	adds	r1, r4, #4
 8008f48:	4608      	mov	r0, r1
 8008f4a:	9101      	str	r1, [sp, #4]
 8008f4c:	f7fe fc69 	bl	8007822 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008f50:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8008f52:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008f54:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008f56:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008f5a:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008f5c:	4a07      	ldr	r2, [pc, #28]	; (8008f7c <xTaskPriorityDisinherit+0x80>)
 8008f5e:	6810      	ldr	r0, [r2, #0]
 8008f60:	4283      	cmp	r3, r0
 8008f62:	bf88      	it	hi
 8008f64:	6013      	strhi	r3, [r2, #0]
 8008f66:	4a06      	ldr	r2, [pc, #24]	; (8008f80 <xTaskPriorityDisinherit+0x84>)
 8008f68:	2014      	movs	r0, #20
 8008f6a:	fb00 2003 	mla	r0, r0, r3, r2
 8008f6e:	f7fe fc35 	bl	80077dc <vListInsertEnd>
					xReturn = pdTRUE;
 8008f72:	2001      	movs	r0, #1
		return xReturn;
 8008f74:	e7c5      	b.n	8008f02 <xTaskPriorityDisinherit+0x6>
 8008f76:	bf00      	nop
 8008f78:	20012ed4 	.word	0x20012ed4
 8008f7c:	20013354 	.word	0x20013354
 8008f80:	20012ee0 	.word	0x20012ee0

08008f84 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008f84:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008f86:	4604      	mov	r4, r0
 8008f88:	2800      	cmp	r0, #0
 8008f8a:	d044      	beq.n	8009016 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8008f8c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008f8e:	b942      	cbnz	r2, 8008fa2 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8008f90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f94:	f383 8811 	msr	BASEPRI, r3
 8008f98:	f3bf 8f6f 	isb	sy
 8008f9c:	f3bf 8f4f 	dsb	sy
 8008fa0:	e7fe      	b.n	8008fa0 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8008fa2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008fa4:	4299      	cmp	r1, r3
 8008fa6:	bf38      	it	cc
 8008fa8:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008faa:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008fac:	428b      	cmp	r3, r1
 8008fae:	d032      	beq.n	8009016 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008fb0:	2a01      	cmp	r2, #1
 8008fb2:	d130      	bne.n	8009016 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8008fb4:	4a19      	ldr	r2, [pc, #100]	; (800901c <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008fb6:	6812      	ldr	r2, [r2, #0]
 8008fb8:	4282      	cmp	r2, r0
 8008fba:	d108      	bne.n	8008fce <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8008fbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fc0:	f383 8811 	msr	BASEPRI, r3
 8008fc4:	f3bf 8f6f 	isb	sy
 8008fc8:	f3bf 8f4f 	dsb	sy
 8008fcc:	e7fe      	b.n	8008fcc <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008fce:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008fd0:	4d13      	ldr	r5, [pc, #76]	; (8009020 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8008fd2:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008fd4:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008fd6:	f04f 0214 	mov.w	r2, #20
 8008fda:	fb02 5303 	mla	r3, r2, r3, r5
 8008fde:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008fe0:	bfa4      	itt	ge
 8008fe2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8008fe6:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008fe8:	429a      	cmp	r2, r3
 8008fea:	d114      	bne.n	8009016 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008fec:	1d01      	adds	r1, r0, #4
 8008fee:	4608      	mov	r0, r1
 8008ff0:	9101      	str	r1, [sp, #4]
 8008ff2:	f7fe fc16 	bl	8007822 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008ff6:	4a0b      	ldr	r2, [pc, #44]	; (8009024 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8008ff8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008ffa:	6810      	ldr	r0, [r2, #0]
 8008ffc:	9901      	ldr	r1, [sp, #4]
 8008ffe:	4283      	cmp	r3, r0
 8009000:	f04f 0014 	mov.w	r0, #20
 8009004:	fb00 5003 	mla	r0, r0, r3, r5
 8009008:	bf88      	it	hi
 800900a:	6013      	strhi	r3, [r2, #0]
	}
 800900c:	b003      	add	sp, #12
 800900e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8009012:	f7fe bbe3 	b.w	80077dc <vListInsertEnd>
	}
 8009016:	b003      	add	sp, #12
 8009018:	bd30      	pop	{r4, r5, pc}
 800901a:	bf00      	nop
 800901c:	20012ed4 	.word	0x20012ed4
 8009020:	20012ee0 	.word	0x20012ee0
 8009024:	20013354 	.word	0x20013354

08009028 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009028:	4b04      	ldr	r3, [pc, #16]	; (800903c <pvTaskIncrementMutexHeldCount+0x14>)
 800902a:	681a      	ldr	r2, [r3, #0]
 800902c:	b11a      	cbz	r2, 8009036 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800902e:	6819      	ldr	r1, [r3, #0]
 8009030:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8009032:	3201      	adds	r2, #1
 8009034:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8009036:	6818      	ldr	r0, [r3, #0]
	}
 8009038:	4770      	bx	lr
 800903a:	bf00      	nop
 800903c:	20012ed4 	.word	0x20012ed4

08009040 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009040:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009042:	4c11      	ldr	r4, [pc, #68]	; (8009088 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009044:	f7fe fc66 	bl	8007914 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009048:	6825      	ldr	r5, [r4, #0]
 800904a:	b9bd      	cbnz	r5, 800907c <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800904c:	4f0f      	ldr	r7, [pc, #60]	; (800908c <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800904e:	4e10      	ldr	r6, [pc, #64]	; (8009090 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009050:	4638      	mov	r0, r7
 8009052:	f7fe fbb5 	bl	80077c0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009056:	4630      	mov	r0, r6
 8009058:	f7fe fbb2 	bl	80077c0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800905c:	4b0d      	ldr	r3, [pc, #52]	; (8009094 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800905e:	4a0e      	ldr	r2, [pc, #56]	; (8009098 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009060:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8009062:	4b0e      	ldr	r3, [pc, #56]	; (800909c <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009064:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8009066:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009068:	200a      	movs	r0, #10
 800906a:	4b0d      	ldr	r3, [pc, #52]	; (80090a0 <prvCheckForValidListAndQueue+0x60>)
 800906c:	9500      	str	r5, [sp, #0]
 800906e:	f7fe fe69 	bl	8007d44 <xQueueGenericCreateStatic>
 8009072:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009074:	b110      	cbz	r0, 800907c <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009076:	490b      	ldr	r1, [pc, #44]	; (80090a4 <prvCheckForValidListAndQueue+0x64>)
 8009078:	f7ff fa36 	bl	80084e8 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800907c:	b003      	add	sp, #12
 800907e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009082:	f7fe bc69 	b.w	8007958 <vPortExitCritical>
 8009086:	bf00      	nop
 8009088:	200134f4 	.word	0x200134f4
 800908c:	20013478 	.word	0x20013478
 8009090:	2001348c 	.word	0x2001348c
 8009094:	200133d0 	.word	0x200133d0
 8009098:	200133d8 	.word	0x200133d8
 800909c:	200133d4 	.word	0x200133d4
 80090a0:	200134a4 	.word	0x200134a4
 80090a4:	0801ea31 	.word	0x0801ea31

080090a8 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 80090a8:	4291      	cmp	r1, r2
{
 80090aa:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80090ac:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80090ae:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 80090b0:	d80a      	bhi.n	80090c8 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80090b2:	1ad2      	subs	r2, r2, r3
 80090b4:	6983      	ldr	r3, [r0, #24]
 80090b6:	429a      	cmp	r2, r3
 80090b8:	d20d      	bcs.n	80090d6 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80090ba:	4b08      	ldr	r3, [pc, #32]	; (80090dc <prvInsertTimerInActiveList+0x34>)
 80090bc:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80090be:	6818      	ldr	r0, [r3, #0]
 80090c0:	f7fe fb98 	bl	80077f4 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 80090c4:	2000      	movs	r0, #0
}
 80090c6:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80090c8:	429a      	cmp	r2, r3
 80090ca:	d201      	bcs.n	80090d0 <prvInsertTimerInActiveList+0x28>
 80090cc:	4299      	cmp	r1, r3
 80090ce:	d202      	bcs.n	80090d6 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80090d0:	4b03      	ldr	r3, [pc, #12]	; (80090e0 <prvInsertTimerInActiveList+0x38>)
 80090d2:	1d01      	adds	r1, r0, #4
 80090d4:	e7f3      	b.n	80090be <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 80090d6:	2001      	movs	r0, #1
	return xProcessTimerNow;
 80090d8:	e7f5      	b.n	80090c6 <prvInsertTimerInActiveList+0x1e>
 80090da:	bf00      	nop
 80090dc:	200133d4 	.word	0x200133d4
 80090e0:	200133d0 	.word	0x200133d0

080090e4 <xTimerCreateTimerTask>:
{
 80090e4:	b510      	push	{r4, lr}
 80090e6:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80090e8:	f7ff ffaa 	bl	8009040 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80090ec:	4b12      	ldr	r3, [pc, #72]	; (8009138 <xTimerCreateTimerTask+0x54>)
 80090ee:	681b      	ldr	r3, [r3, #0]
 80090f0:	b1b3      	cbz	r3, 8009120 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80090f2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80090f4:	aa07      	add	r2, sp, #28
 80090f6:	a906      	add	r1, sp, #24
 80090f8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80090fa:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80090fe:	f7fe fa6b 	bl	80075d8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009102:	9b05      	ldr	r3, [sp, #20]
 8009104:	9302      	str	r3, [sp, #8]
 8009106:	9b06      	ldr	r3, [sp, #24]
 8009108:	9301      	str	r3, [sp, #4]
 800910a:	2302      	movs	r3, #2
 800910c:	9300      	str	r3, [sp, #0]
 800910e:	9a07      	ldr	r2, [sp, #28]
 8009110:	490a      	ldr	r1, [pc, #40]	; (800913c <xTimerCreateTimerTask+0x58>)
 8009112:	480b      	ldr	r0, [pc, #44]	; (8009140 <xTimerCreateTimerTask+0x5c>)
 8009114:	4623      	mov	r3, r4
 8009116:	f7ff fbb3 	bl	8008880 <xTaskCreateStatic>
 800911a:	4b0a      	ldr	r3, [pc, #40]	; (8009144 <xTimerCreateTimerTask+0x60>)
 800911c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800911e:	b940      	cbnz	r0, 8009132 <xTimerCreateTimerTask+0x4e>
 8009120:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009124:	f383 8811 	msr	BASEPRI, r3
 8009128:	f3bf 8f6f 	isb	sy
 800912c:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009130:	e7fe      	b.n	8009130 <xTimerCreateTimerTask+0x4c>
}
 8009132:	2001      	movs	r0, #1
 8009134:	b008      	add	sp, #32
 8009136:	bd10      	pop	{r4, pc}
 8009138:	200134f4 	.word	0x200134f4
 800913c:	0801ea36 	.word	0x0801ea36
 8009140:	0800921d 	.word	0x0800921d
 8009144:	200134f8 	.word	0x200134f8

08009148 <xTimerGenericCommand>:
{
 8009148:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800914a:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800914c:	4604      	mov	r4, r0
{
 800914e:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009150:	b940      	cbnz	r0, 8009164 <xTimerGenericCommand+0x1c>
 8009152:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009156:	f383 8811 	msr	BASEPRI, r3
 800915a:	f3bf 8f6f 	isb	sy
 800915e:	f3bf 8f4f 	dsb	sy
 8009162:	e7fe      	b.n	8009162 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009164:	4d0d      	ldr	r5, [pc, #52]	; (800919c <xTimerGenericCommand+0x54>)
 8009166:	6828      	ldr	r0, [r5, #0]
 8009168:	b180      	cbz	r0, 800918c <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800916a:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800916c:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009170:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009172:	dc0d      	bgt.n	8009190 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009174:	f7ff fe70 	bl	8008e58 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009178:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800917a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800917c:	bf08      	it	eq
 800917e:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009180:	6828      	ldr	r0, [r5, #0]
 8009182:	bf18      	it	ne
 8009184:	461a      	movne	r2, r3
 8009186:	4669      	mov	r1, sp
 8009188:	f7fe fe92 	bl	8007eb0 <xQueueGenericSend>
}
 800918c:	b004      	add	sp, #16
 800918e:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009190:	2300      	movs	r3, #0
 8009192:	4669      	mov	r1, sp
 8009194:	f7fe ff3e 	bl	8008014 <xQueueGenericSendFromISR>
 8009198:	e7f8      	b.n	800918c <xTimerGenericCommand+0x44>
 800919a:	bf00      	nop
 800919c:	200134f4 	.word	0x200134f4

080091a0 <prvSwitchTimerLists>:
{
 80091a0:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80091a2:	4d1c      	ldr	r5, [pc, #112]	; (8009214 <prvSwitchTimerLists+0x74>)
{
 80091a4:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80091a6:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80091a8:	682b      	ldr	r3, [r5, #0]
 80091aa:	681a      	ldr	r2, [r3, #0]
 80091ac:	b92a      	cbnz	r2, 80091ba <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
 80091ae:	4a1a      	ldr	r2, [pc, #104]	; (8009218 <prvSwitchTimerLists+0x78>)
 80091b0:	6811      	ldr	r1, [r2, #0]
 80091b2:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 80091b4:	6013      	str	r3, [r2, #0]
}
 80091b6:	b005      	add	sp, #20
 80091b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80091ba:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80091bc:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80091be:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80091c0:	1d21      	adds	r1, r4, #4
 80091c2:	4608      	mov	r0, r1
 80091c4:	9103      	str	r1, [sp, #12]
 80091c6:	f7fe fb2c 	bl	8007822 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80091ca:	6a23      	ldr	r3, [r4, #32]
 80091cc:	4620      	mov	r0, r4
 80091ce:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80091d0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80091d4:	9903      	ldr	r1, [sp, #12]
 80091d6:	f013 0f04 	tst.w	r3, #4
 80091da:	d0e5      	beq.n	80091a8 <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80091dc:	69a3      	ldr	r3, [r4, #24]
 80091de:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 80091e0:	429e      	cmp	r6, r3
 80091e2:	d205      	bcs.n	80091f0 <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80091e4:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80091e6:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80091e8:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80091ea:	f7fe fb03 	bl	80077f4 <vListInsert>
 80091ee:	e7db      	b.n	80091a8 <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80091f0:	2300      	movs	r3, #0
 80091f2:	9700      	str	r7, [sp, #0]
 80091f4:	4632      	mov	r2, r6
 80091f6:	4619      	mov	r1, r3
 80091f8:	4620      	mov	r0, r4
 80091fa:	f7ff ffa5 	bl	8009148 <xTimerGenericCommand>
				configASSERT( xResult );
 80091fe:	2800      	cmp	r0, #0
 8009200:	d1d2      	bne.n	80091a8 <prvSwitchTimerLists+0x8>
 8009202:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009206:	f383 8811 	msr	BASEPRI, r3
 800920a:	f3bf 8f6f 	isb	sy
 800920e:	f3bf 8f4f 	dsb	sy
 8009212:	e7fe      	b.n	8009212 <prvSwitchTimerLists+0x72>
 8009214:	200133d0 	.word	0x200133d0
 8009218:	200133d4 	.word	0x200133d4

0800921c <prvTimerTask>:
{
 800921c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009220:	4f77      	ldr	r7, [pc, #476]	; (8009400 <prvTimerTask+0x1e4>)
					portYIELD_WITHIN_API();
 8009222:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 8009410 <prvTimerTask+0x1f4>
{
 8009226:	b087      	sub	sp, #28
 8009228:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800922a:	683b      	ldr	r3, [r7, #0]
 800922c:	f8d3 b000 	ldr.w	fp, [r3]
 8009230:	f1bb 0f00 	cmp.w	fp, #0
 8009234:	d028      	beq.n	8009288 <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009236:	68db      	ldr	r3, [r3, #12]
 8009238:	f8d3 b000 	ldr.w	fp, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800923c:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 800923e:	4e71      	ldr	r6, [pc, #452]	; (8009404 <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
 8009240:	f7ff fbc8 	bl	80089d4 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 8009244:	f7ff fbce 	bl	80089e4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009248:	6833      	ldr	r3, [r6, #0]
 800924a:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800924c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800924e:	46b0      	mov	r8, r6
 8009250:	d31c      	bcc.n	800928c <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 8009252:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009254:	b31c      	cbz	r4, 800929e <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009256:	4b6c      	ldr	r3, [pc, #432]	; (8009408 <prvTimerTask+0x1ec>)
 8009258:	681b      	ldr	r3, [r3, #0]
 800925a:	681c      	ldr	r4, [r3, #0]
 800925c:	fab4 f484 	clz	r4, r4
 8009260:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009262:	4b6a      	ldr	r3, [pc, #424]	; (800940c <prvTimerTask+0x1f0>)
 8009264:	4622      	mov	r2, r4
 8009266:	6818      	ldr	r0, [r3, #0]
 8009268:	ebab 0105 	sub.w	r1, fp, r5
 800926c:	f7ff f97b 	bl	8008566 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009270:	f7ff fc54 	bl	8008b1c <xTaskResumeAll>
 8009274:	b978      	cbnz	r0, 8009296 <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
 8009276:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800927a:	f8ca 3000 	str.w	r3, [sl]
 800927e:	f3bf 8f4f 	dsb	sy
 8009282:	f3bf 8f6f 	isb	sy
 8009286:	e006      	b.n	8009296 <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009288:	2401      	movs	r4, #1
 800928a:	e7d8      	b.n	800923e <prvTimerTask+0x22>
		prvSwitchTimerLists();
 800928c:	f7ff ff88 	bl	80091a0 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8009290:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
 8009292:	f7ff fc43 	bl	8008b1c <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009296:	4e5d      	ldr	r6, [pc, #372]	; (800940c <prvTimerTask+0x1f0>)
 8009298:	f04f 0b00 	mov.w	fp, #0
 800929c:	e035      	b.n	800930a <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800929e:	4583      	cmp	fp, r0
 80092a0:	d8df      	bhi.n	8009262 <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
 80092a2:	f7ff fc3b 	bl	8008b1c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80092a6:	f8d9 3000 	ldr.w	r3, [r9]
 80092aa:	68db      	ldr	r3, [r3, #12]
 80092ac:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80092ae:	1d30      	adds	r0, r6, #4
 80092b0:	f7fe fab7 	bl	8007822 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80092b4:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 80092b8:	0758      	lsls	r0, r3, #29
 80092ba:	d518      	bpl.n	80092ee <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80092bc:	69b1      	ldr	r1, [r6, #24]
 80092be:	465b      	mov	r3, fp
 80092c0:	462a      	mov	r2, r5
 80092c2:	4459      	add	r1, fp
 80092c4:	4630      	mov	r0, r6
 80092c6:	f7ff feef 	bl	80090a8 <prvInsertTimerInActiveList>
 80092ca:	b1a0      	cbz	r0, 80092f6 <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80092cc:	9400      	str	r4, [sp, #0]
 80092ce:	4623      	mov	r3, r4
 80092d0:	465a      	mov	r2, fp
 80092d2:	4621      	mov	r1, r4
 80092d4:	4630      	mov	r0, r6
 80092d6:	f7ff ff37 	bl	8009148 <xTimerGenericCommand>
			configASSERT( xResult );
 80092da:	b960      	cbnz	r0, 80092f6 <prvTimerTask+0xda>
 80092dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092e0:	f383 8811 	msr	BASEPRI, r3
 80092e4:	f3bf 8f6f 	isb	sy
 80092e8:	f3bf 8f4f 	dsb	sy
 80092ec:	e7fe      	b.n	80092ec <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80092ee:	f023 0301 	bic.w	r3, r3, #1
 80092f2:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80092f6:	6a33      	ldr	r3, [r6, #32]
 80092f8:	4630      	mov	r0, r6
 80092fa:	4798      	blx	r3
}
 80092fc:	e7cb      	b.n	8009296 <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80092fe:	9b03      	ldr	r3, [sp, #12]
 8009300:	9905      	ldr	r1, [sp, #20]
 8009302:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009304:	9b02      	ldr	r3, [sp, #8]
 8009306:	2b00      	cmp	r3, #0
 8009308:	da0a      	bge.n	8009320 <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800930a:	6830      	ldr	r0, [r6, #0]
 800930c:	2200      	movs	r2, #0
 800930e:	a902      	add	r1, sp, #8
 8009310:	f7fe ff36 	bl	8008180 <xQueueReceive>
 8009314:	2800      	cmp	r0, #0
 8009316:	d088      	beq.n	800922a <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8009318:	9b02      	ldr	r3, [sp, #8]
 800931a:	9804      	ldr	r0, [sp, #16]
 800931c:	2b00      	cmp	r3, #0
 800931e:	dbee      	blt.n	80092fe <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8009320:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8009322:	6963      	ldr	r3, [r4, #20]
 8009324:	b9a3      	cbnz	r3, 8009350 <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
 8009326:	f7ff fb5d 	bl	80089e4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800932a:	f8d8 3000 	ldr.w	r3, [r8]
 800932e:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8009330:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009332:	d201      	bcs.n	8009338 <prvTimerTask+0x11c>
		prvSwitchTimerLists();
 8009334:	f7ff ff34 	bl	80091a0 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8009338:	9b02      	ldr	r3, [sp, #8]
 800933a:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
 800933e:	2b09      	cmp	r3, #9
 8009340:	d8e3      	bhi.n	800930a <prvTimerTask+0xee>
 8009342:	e8df f003 	tbb	[pc, r3]
 8009346:	0909      	.short	0x0909
 8009348:	543b3409 	.word	0x543b3409
 800934c:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009350:	1d20      	adds	r0, r4, #4
 8009352:	f7fe fa66 	bl	8007822 <uxListRemove>
 8009356:	e7e6      	b.n	8009326 <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009358:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800935c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800935e:	f043 0301 	orr.w	r3, r3, #1
 8009362:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009366:	9b03      	ldr	r3, [sp, #12]
 8009368:	462a      	mov	r2, r5
 800936a:	4419      	add	r1, r3
 800936c:	4620      	mov	r0, r4
 800936e:	f7ff fe9b 	bl	80090a8 <prvInsertTimerInActiveList>
 8009372:	2800      	cmp	r0, #0
 8009374:	d0c9      	beq.n	800930a <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009376:	6a23      	ldr	r3, [r4, #32]
 8009378:	4620      	mov	r0, r4
 800937a:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800937c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009380:	0759      	lsls	r1, r3, #29
 8009382:	d5c2      	bpl.n	800930a <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8009384:	69a2      	ldr	r2, [r4, #24]
 8009386:	9903      	ldr	r1, [sp, #12]
 8009388:	f8cd b000 	str.w	fp, [sp]
 800938c:	2300      	movs	r3, #0
 800938e:	440a      	add	r2, r1
 8009390:	4620      	mov	r0, r4
 8009392:	4619      	mov	r1, r3
 8009394:	f7ff fed8 	bl	8009148 <xTimerGenericCommand>
							configASSERT( xResult );
 8009398:	2800      	cmp	r0, #0
 800939a:	d1b6      	bne.n	800930a <prvTimerTask+0xee>
 800939c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093a0:	f383 8811 	msr	BASEPRI, r3
 80093a4:	f3bf 8f6f 	isb	sy
 80093a8:	f3bf 8f4f 	dsb	sy
 80093ac:	e7fe      	b.n	80093ac <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80093ae:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80093b2:	f023 0301 	bic.w	r3, r3, #1
 80093b6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 80093ba:	e7a6      	b.n	800930a <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80093bc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80093c0:	9903      	ldr	r1, [sp, #12]
 80093c2:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80093c4:	f043 0301 	orr.w	r3, r3, #1
 80093c8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80093cc:	b941      	cbnz	r1, 80093e0 <prvTimerTask+0x1c4>
 80093ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093d2:	f383 8811 	msr	BASEPRI, r3
 80093d6:	f3bf 8f6f 	isb	sy
 80093da:	f3bf 8f4f 	dsb	sy
 80093de:	e7fe      	b.n	80093de <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80093e0:	462b      	mov	r3, r5
 80093e2:	462a      	mov	r2, r5
 80093e4:	4429      	add	r1, r5
 80093e6:	4620      	mov	r0, r4
 80093e8:	f7ff fe5e 	bl	80090a8 <prvInsertTimerInActiveList>
					break;
 80093ec:	e78d      	b.n	800930a <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80093ee:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80093f2:	079a      	lsls	r2, r3, #30
 80093f4:	d4dd      	bmi.n	80093b2 <prvTimerTask+0x196>
							vPortFree( pxTimer );
 80093f6:	4620      	mov	r0, r4
 80093f8:	f7fe f9aa 	bl	8007750 <vPortFree>
 80093fc:	e785      	b.n	800930a <prvTimerTask+0xee>
 80093fe:	bf00      	nop
 8009400:	200133d0 	.word	0x200133d0
 8009404:	200134a0 	.word	0x200134a0
 8009408:	200133d4 	.word	0x200133d4
 800940c:	200134f4 	.word	0x200134f4
 8009410:	e000ed04 	.word	0xe000ed04

08009414 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009414:	8880      	ldrh	r0, [r0, #4]
 8009416:	4770      	bx	lr

08009418 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009418:	2300      	movs	r3, #0
 800941a:	8083      	strh	r3, [r0, #4]
 800941c:	4770      	bx	lr
	...

08009420 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009422:	6803      	ldr	r3, [r0, #0]
 8009424:	4605      	mov	r5, r0
 8009426:	460e      	mov	r6, r1
 8009428:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800942a:	2100      	movs	r1, #0
 800942c:	4798      	blx	r3
 800942e:	682b      	ldr	r3, [r5, #0]
 8009430:	4604      	mov	r4, r0
 8009432:	6a1b      	ldr	r3, [r3, #32]
 8009434:	4628      	mov	r0, r5
 8009436:	4798      	blx	r3
 8009438:	88ab      	ldrh	r3, [r5, #4]
 800943a:	1b34      	subs	r4, r6, r4
 800943c:	b2a4      	uxth	r4, r4
 800943e:	fbb4 f4f0 	udiv	r4, r4, r0
 8009442:	42a3      	cmp	r3, r4
 8009444:	d805      	bhi.n	8009452 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8009446:	4b0e      	ldr	r3, [pc, #56]	; (8009480 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8009448:	4a0e      	ldr	r2, [pc, #56]	; (8009484 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800944a:	211e      	movs	r1, #30
 800944c:	480e      	ldr	r0, [pc, #56]	; (8009488 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800944e:	f012 fb65 	bl	801bb1c <__assert_func>
 8009452:	682b      	ldr	r3, [r5, #0]
 8009454:	2100      	movs	r1, #0
 8009456:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009458:	4628      	mov	r0, r5
 800945a:	4798      	blx	r3
 800945c:	682b      	ldr	r3, [r5, #0]
 800945e:	4607      	mov	r7, r0
 8009460:	6a1b      	ldr	r3, [r3, #32]
 8009462:	4628      	mov	r0, r5
 8009464:	4798      	blx	r3
 8009466:	1bf3      	subs	r3, r6, r7
 8009468:	b29b      	uxth	r3, r3
 800946a:	fbb3 f2f0 	udiv	r2, r3, r0
 800946e:	fb02 3010 	mls	r0, r2, r0, r3
 8009472:	b118      	cbz	r0, 800947c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8009474:	4b05      	ldr	r3, [pc, #20]	; (800948c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8009476:	4a03      	ldr	r2, [pc, #12]	; (8009484 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009478:	211f      	movs	r1, #31
 800947a:	e7e7      	b.n	800944c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800947c:	4620      	mov	r0, r4
 800947e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009480:	0801ea3e 	.word	0x0801ea3e
 8009484:	0801ebaa 	.word	0x0801ebaa
 8009488:	0801ea53 	.word	0x0801ea53
 800948c:	0801ea81 	.word	0x0801ea81

08009490 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009490:	b538      	push	{r3, r4, r5, lr}
 8009492:	6803      	ldr	r3, [r0, #0]
 8009494:	6a1b      	ldr	r3, [r3, #32]
 8009496:	460d      	mov	r5, r1
 8009498:	4604      	mov	r4, r0
 800949a:	4798      	blx	r3
 800949c:	4285      	cmp	r5, r0
 800949e:	d905      	bls.n	80094ac <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 80094a0:	4b0c      	ldr	r3, [pc, #48]	; (80094d4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 80094a2:	4a0d      	ldr	r2, [pc, #52]	; (80094d8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 80094a4:	2130      	movs	r1, #48	; 0x30
 80094a6:	480d      	ldr	r0, [pc, #52]	; (80094dc <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 80094a8:	f012 fb38 	bl	801bb1c <__assert_func>
 80094ac:	6823      	ldr	r3, [r4, #0]
 80094ae:	88a5      	ldrh	r5, [r4, #4]
 80094b0:	69db      	ldr	r3, [r3, #28]
 80094b2:	4620      	mov	r0, r4
 80094b4:	4798      	blx	r3
 80094b6:	4285      	cmp	r5, r0
 80094b8:	d303      	bcc.n	80094c2 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 80094ba:	4b09      	ldr	r3, [pc, #36]	; (80094e0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 80094bc:	4a06      	ldr	r2, [pc, #24]	; (80094d8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 80094be:	2131      	movs	r1, #49	; 0x31
 80094c0:	e7f1      	b.n	80094a6 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 80094c2:	6823      	ldr	r3, [r4, #0]
 80094c4:	88a1      	ldrh	r1, [r4, #4]
 80094c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80094c8:	4620      	mov	r0, r4
 80094ca:	4798      	blx	r3
 80094cc:	88a3      	ldrh	r3, [r4, #4]
 80094ce:	3301      	adds	r3, #1
 80094d0:	80a3      	strh	r3, [r4, #4]
 80094d2:	bd38      	pop	{r3, r4, r5, pc}
 80094d4:	0801eafb 	.word	0x0801eafb
 80094d8:	0801ebed 	.word	0x0801ebed
 80094dc:	0801ea53 	.word	0x0801ea53
 80094e0:	0801eb12 	.word	0x0801eb12

080094e4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80094e4:	b570      	push	{r4, r5, r6, lr}
 80094e6:	6803      	ldr	r3, [r0, #0]
 80094e8:	6a1b      	ldr	r3, [r3, #32]
 80094ea:	4616      	mov	r6, r2
 80094ec:	4604      	mov	r4, r0
 80094ee:	460d      	mov	r5, r1
 80094f0:	4798      	blx	r3
 80094f2:	4286      	cmp	r6, r0
 80094f4:	d905      	bls.n	8009502 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 80094f6:	4b06      	ldr	r3, [pc, #24]	; (8009510 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 80094f8:	4a06      	ldr	r2, [pc, #24]	; (8009514 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 80094fa:	4807      	ldr	r0, [pc, #28]	; (8009518 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 80094fc:	213a      	movs	r1, #58	; 0x3a
 80094fe:	f012 fb0d 	bl	801bb1c <__assert_func>
 8009502:	6823      	ldr	r3, [r4, #0]
 8009504:	4629      	mov	r1, r5
 8009506:	4620      	mov	r0, r4
 8009508:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800950a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800950e:	4718      	bx	r3
 8009510:	0801eafb 	.word	0x0801eafb
 8009514:	0801eb60 	.word	0x0801eb60
 8009518:	0801ea53 	.word	0x0801ea53

0800951c <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800951c:	4770      	bx	lr
	...

08009520 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009520:	4a02      	ldr	r2, [pc, #8]	; (800952c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009522:	6002      	str	r2, [r0, #0]
 8009524:	2200      	movs	r2, #0
 8009526:	8082      	strh	r2, [r0, #4]
 8009528:	4770      	bx	lr
 800952a:	bf00      	nop
 800952c:	0801eb34 	.word	0x0801eb34

08009530 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009530:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009532:	2000      	movs	r0, #0
 8009534:	b12b      	cbz	r3, 8009542 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009536:	b920      	cbnz	r0, 8009542 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009538:	1a5a      	subs	r2, r3, r1
 800953a:	4250      	negs	r0, r2
 800953c:	4150      	adcs	r0, r2
 800953e:	699b      	ldr	r3, [r3, #24]
 8009540:	e7f8      	b.n	8009534 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009542:	4770      	bx	lr

08009544 <_ZN8touchgfx9Container9removeAllEv>:
 8009544:	2200      	movs	r2, #0
 8009546:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009548:	b123      	cbz	r3, 8009554 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800954a:	6999      	ldr	r1, [r3, #24]
 800954c:	6281      	str	r1, [r0, #40]	; 0x28
 800954e:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009552:	e7f8      	b.n	8009546 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009554:	4770      	bx	lr

08009556 <_ZN8touchgfx9Container6unlinkEv>:
 8009556:	2300      	movs	r3, #0
 8009558:	6283      	str	r3, [r0, #40]	; 0x28
 800955a:	4770      	bx	lr

0800955c <_ZNK8touchgfx9Container12getSolidRectEv>:
 800955c:	2200      	movs	r2, #0
 800955e:	8002      	strh	r2, [r0, #0]
 8009560:	8042      	strh	r2, [r0, #2]
 8009562:	8082      	strh	r2, [r0, #4]
 8009564:	80c2      	strh	r2, [r0, #6]
 8009566:	4770      	bx	lr

08009568 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8009568:	b570      	push	{r4, r5, r6, lr}
 800956a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800956c:	460d      	mov	r5, r1
 800956e:	4616      	mov	r6, r2
 8009570:	b13c      	cbz	r4, 8009582 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8009572:	6823      	ldr	r3, [r4, #0]
 8009574:	4620      	mov	r0, r4
 8009576:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009578:	4632      	mov	r2, r6
 800957a:	4629      	mov	r1, r5
 800957c:	4798      	blx	r3
 800957e:	69a4      	ldr	r4, [r4, #24]
 8009580:	e7f6      	b.n	8009570 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8009582:	bd70      	pop	{r4, r5, r6, pc}

08009584 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8009584:	b538      	push	{r3, r4, r5, lr}
 8009586:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009588:	460d      	mov	r5, r1
 800958a:	b134      	cbz	r4, 800959a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800958c:	682b      	ldr	r3, [r5, #0]
 800958e:	4621      	mov	r1, r4
 8009590:	689b      	ldr	r3, [r3, #8]
 8009592:	4628      	mov	r0, r5
 8009594:	4798      	blx	r3
 8009596:	69a4      	ldr	r4, [r4, #24]
 8009598:	e7f7      	b.n	800958a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800959a:	bd38      	pop	{r3, r4, r5, pc}

0800959c <_ZN8touchgfx9ContainerD1Ev>:
 800959c:	4770      	bx	lr

0800959e <_ZN8touchgfx9ContainerD0Ev>:
 800959e:	b510      	push	{r4, lr}
 80095a0:	212c      	movs	r1, #44	; 0x2c
 80095a2:	4604      	mov	r4, r0
 80095a4:	f012 fa8b 	bl	801babe <_ZdlPvj>
 80095a8:	4620      	mov	r0, r4
 80095aa:	bd10      	pop	{r4, pc}

080095ac <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80095ac:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80095ae:	b19b      	cbz	r3, 80095d8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80095b0:	428b      	cmp	r3, r1
 80095b2:	d109      	bne.n	80095c8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80095b4:	699a      	ldr	r2, [r3, #24]
 80095b6:	2100      	movs	r1, #0
 80095b8:	6159      	str	r1, [r3, #20]
 80095ba:	6282      	str	r2, [r0, #40]	; 0x28
 80095bc:	b902      	cbnz	r2, 80095c0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80095be:	4770      	bx	lr
 80095c0:	6199      	str	r1, [r3, #24]
 80095c2:	4770      	bx	lr
 80095c4:	4613      	mov	r3, r2
 80095c6:	b13a      	cbz	r2, 80095d8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80095c8:	699a      	ldr	r2, [r3, #24]
 80095ca:	428a      	cmp	r2, r1
 80095cc:	d1fa      	bne.n	80095c4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80095ce:	698a      	ldr	r2, [r1, #24]
 80095d0:	619a      	str	r2, [r3, #24]
 80095d2:	2300      	movs	r3, #0
 80095d4:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80095d8:	4770      	bx	lr

080095da <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80095da:	b410      	push	{r4}
 80095dc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80095de:	4604      	mov	r4, r0
 80095e0:	b92b      	cbnz	r3, 80095ee <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80095e2:	6803      	ldr	r3, [r0, #0]
 80095e4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80095e8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80095ea:	4611      	mov	r1, r2
 80095ec:	4718      	bx	r3
 80095ee:	b941      	cbnz	r1, 8009602 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80095f0:	6193      	str	r3, [r2, #24]
 80095f2:	6282      	str	r2, [r0, #40]	; 0x28
 80095f4:	6154      	str	r4, [r2, #20]
 80095f6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80095fa:	4770      	bx	lr
 80095fc:	4603      	mov	r3, r0
 80095fe:	2800      	cmp	r0, #0
 8009600:	d0f9      	beq.n	80095f6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009602:	4299      	cmp	r1, r3
 8009604:	6998      	ldr	r0, [r3, #24]
 8009606:	d1f9      	bne.n	80095fc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009608:	6190      	str	r0, [r2, #24]
 800960a:	618a      	str	r2, [r1, #24]
 800960c:	e7f2      	b.n	80095f4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08009610 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009610:	4288      	cmp	r0, r1
 8009612:	b508      	push	{r3, lr}
 8009614:	d105      	bne.n	8009622 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8009616:	4b11      	ldr	r3, [pc, #68]	; (800965c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8009618:	4a11      	ldr	r2, [pc, #68]	; (8009660 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800961a:	2123      	movs	r1, #35	; 0x23
 800961c:	4811      	ldr	r0, [pc, #68]	; (8009664 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800961e:	f012 fa7d 	bl	801bb1c <__assert_func>
 8009622:	694b      	ldr	r3, [r1, #20]
 8009624:	b11b      	cbz	r3, 800962e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8009626:	4b10      	ldr	r3, [pc, #64]	; (8009668 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8009628:	4a0d      	ldr	r2, [pc, #52]	; (8009660 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800962a:	2124      	movs	r1, #36	; 0x24
 800962c:	e7f6      	b.n	800961c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800962e:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8009632:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009634:	b913      	cbnz	r3, 800963c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8009636:	6281      	str	r1, [r0, #40]	; 0x28
 8009638:	bd08      	pop	{r3, pc}
 800963a:	4613      	mov	r3, r2
 800963c:	699a      	ldr	r2, [r3, #24]
 800963e:	b12a      	cbz	r2, 800964c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8009640:	428b      	cmp	r3, r1
 8009642:	d1fa      	bne.n	800963a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8009644:	4b09      	ldr	r3, [pc, #36]	; (800966c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8009646:	4a06      	ldr	r2, [pc, #24]	; (8009660 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009648:	2135      	movs	r1, #53	; 0x35
 800964a:	e7e7      	b.n	800961c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800964c:	428b      	cmp	r3, r1
 800964e:	d103      	bne.n	8009658 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8009650:	4b06      	ldr	r3, [pc, #24]	; (800966c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8009652:	4a03      	ldr	r2, [pc, #12]	; (8009660 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009654:	2138      	movs	r1, #56	; 0x38
 8009656:	e7e1      	b.n	800961c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009658:	6199      	str	r1, [r3, #24]
 800965a:	e7ed      	b.n	8009638 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800965c:	0801ec2b 	.word	0x0801ec2b
 8009660:	0801ed80 	.word	0x0801ed80
 8009664:	0801ec57 	.word	0x0801ec57
 8009668:	0801ec8a 	.word	0x0801ec8a
 800966c:	0801ecc0 	.word	0x0801ecc0

08009670 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009670:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009674:	461f      	mov	r7, r3
 8009676:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800967a:	460d      	mov	r5, r1
 800967c:	4616      	mov	r6, r2
 800967e:	b103      	cbz	r3, 8009682 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009680:	6038      	str	r0, [r7, #0]
 8009682:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009684:	b314      	cbz	r4, 80096cc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8009686:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800968a:	b1eb      	cbz	r3, 80096c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800968c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009690:	428d      	cmp	r5, r1
 8009692:	db19      	blt.n	80096c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009694:	8923      	ldrh	r3, [r4, #8]
 8009696:	b289      	uxth	r1, r1
 8009698:	440b      	add	r3, r1
 800969a:	b21b      	sxth	r3, r3
 800969c:	429d      	cmp	r5, r3
 800969e:	da13      	bge.n	80096c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80096a0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80096a4:	4296      	cmp	r6, r2
 80096a6:	db0f      	blt.n	80096c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80096a8:	8963      	ldrh	r3, [r4, #10]
 80096aa:	b292      	uxth	r2, r2
 80096ac:	4413      	add	r3, r2
 80096ae:	b21b      	sxth	r3, r3
 80096b0:	429e      	cmp	r6, r3
 80096b2:	da09      	bge.n	80096c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80096b4:	6823      	ldr	r3, [r4, #0]
 80096b6:	1ab2      	subs	r2, r6, r2
 80096b8:	1a69      	subs	r1, r5, r1
 80096ba:	f8d3 8020 	ldr.w	r8, [r3, #32]
 80096be:	b212      	sxth	r2, r2
 80096c0:	463b      	mov	r3, r7
 80096c2:	b209      	sxth	r1, r1
 80096c4:	4620      	mov	r0, r4
 80096c6:	47c0      	blx	r8
 80096c8:	69a4      	ldr	r4, [r4, #24]
 80096ca:	e7db      	b.n	8009684 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80096cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080096d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80096d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80096d4:	4c6e      	ldr	r4, [pc, #440]	; (8009890 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80096d6:	b0a1      	sub	sp, #132	; 0x84
 80096d8:	6824      	ldr	r4, [r4, #0]
 80096da:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80096dc:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80096e0:	9303      	str	r3, [sp, #12]
 80096e2:	2400      	movs	r4, #0
 80096e4:	802c      	strh	r4, [r5, #0]
 80096e6:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80096e8:	802c      	strh	r4, [r5, #0]
 80096ea:	601c      	str	r4, [r3, #0]
 80096ec:	4606      	mov	r6, r0
 80096ee:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80096f2:	f7ff ffbd 	bl	8009670 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80096f6:	f1b9 0f03 	cmp.w	r9, #3
 80096fa:	f340 80c2 	ble.w	8009882 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 80096fe:	4631      	mov	r1, r6
 8009700:	a80c      	add	r0, sp, #48	; 0x30
 8009702:	f004 f9e5 	bl	800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009706:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800970a:	9306      	str	r3, [sp, #24]
 800970c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8009710:	9307      	str	r3, [sp, #28]
 8009712:	9b03      	ldr	r3, [sp, #12]
 8009714:	f8d3 a000 	ldr.w	sl, [r3]
 8009718:	f1ba 0f00 	cmp.w	sl, #0
 800971c:	f000 80b4 	beq.w	8009888 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8009720:	4651      	mov	r1, sl
 8009722:	a810      	add	r0, sp, #64	; 0x40
 8009724:	f004 f9d4 	bl	800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009728:	9b01      	ldr	r3, [sp, #4]
 800972a:	9a06      	ldr	r2, [sp, #24]
 800972c:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8009730:	189d      	adds	r5, r3, r2
 8009732:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8009736:	9a07      	ldr	r2, [sp, #28]
 8009738:	2002      	movs	r0, #2
 800973a:	fb91 f1f0 	sdiv	r1, r1, r0
 800973e:	4419      	add	r1, r3
 8009740:	1a6d      	subs	r5, r5, r1
 8009742:	9b02      	ldr	r3, [sp, #8]
 8009744:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8009748:	4413      	add	r3, r2
 800974a:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800974e:	fb92 f2f0 	sdiv	r2, r2, r0
 8009752:	440a      	add	r2, r1
 8009754:	1a9b      	subs	r3, r3, r2
 8009756:	435b      	muls	r3, r3
 8009758:	fb05 3505 	mla	r5, r5, r5, r3
 800975c:	4f4d      	ldr	r7, [pc, #308]	; (8009894 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800975e:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009760:	ac10      	add	r4, sp, #64	; 0x40
 8009762:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009764:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009766:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009768:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800976a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800976c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8009770:	f1b9 0f0c 	cmp.w	r9, #12
 8009774:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009778:	f04f 0303 	mov.w	r3, #3
 800977c:	bfc8      	it	gt
 800977e:	4698      	movgt	r8, r3
 8009780:	f8cd 9000 	str.w	r9, [sp]
 8009784:	f04f 0400 	mov.w	r4, #0
 8009788:	bfdc      	itt	le
 800978a:	f109 32ff 	addle.w	r2, r9, #4294967295
 800978e:	fb92 f8f3 	sdivle	r8, r2, r3
 8009792:	1c63      	adds	r3, r4, #1
 8009794:	aa10      	add	r2, sp, #64	; 0x40
 8009796:	f004 0401 	and.w	r4, r4, #1
 800979a:	9308      	str	r3, [sp, #32]
 800979c:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80097a0:	9b00      	ldr	r3, [sp, #0]
 80097a2:	fb93 f3f8 	sdiv	r3, r3, r8
 80097a6:	b29b      	uxth	r3, r3
 80097a8:	3404      	adds	r4, #4
 80097aa:	f04f 0b00 	mov.w	fp, #0
 80097ae:	9304      	str	r3, [sp, #16]
 80097b0:	9a04      	ldr	r2, [sp, #16]
 80097b2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80097b6:	fb13 f302 	smulbb	r3, r3, r2
 80097ba:	9a01      	ldr	r2, [sp, #4]
 80097bc:	b29b      	uxth	r3, r3
 80097be:	1899      	adds	r1, r3, r2
 80097c0:	9305      	str	r3, [sp, #20]
 80097c2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80097c6:	b209      	sxth	r1, r1
 80097c8:	4299      	cmp	r1, r3
 80097ca:	db4d      	blt.n	8009868 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80097cc:	8932      	ldrh	r2, [r6, #8]
 80097ce:	4413      	add	r3, r2
 80097d0:	b21b      	sxth	r3, r3
 80097d2:	4299      	cmp	r1, r3
 80097d4:	da48      	bge.n	8009868 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80097d6:	9b04      	ldr	r3, [sp, #16]
 80097d8:	6827      	ldr	r7, [r4, #0]
 80097da:	fb17 f703 	smulbb	r7, r7, r3
 80097de:	9b02      	ldr	r3, [sp, #8]
 80097e0:	b2bf      	uxth	r7, r7
 80097e2:	18fa      	adds	r2, r7, r3
 80097e4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80097e8:	b212      	sxth	r2, r2
 80097ea:	429a      	cmp	r2, r3
 80097ec:	db3c      	blt.n	8009868 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80097ee:	8970      	ldrh	r0, [r6, #10]
 80097f0:	4403      	add	r3, r0
 80097f2:	b21b      	sxth	r3, r3
 80097f4:	429a      	cmp	r2, r3
 80097f6:	da37      	bge.n	8009868 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80097f8:	2300      	movs	r3, #0
 80097fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80097fc:	4630      	mov	r0, r6
 80097fe:	ab0b      	add	r3, sp, #44	; 0x2c
 8009800:	f7ff ff36 	bl	8009670 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009804:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009806:	b37a      	cbz	r2, 8009868 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009808:	4552      	cmp	r2, sl
 800980a:	d02d      	beq.n	8009868 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800980c:	4611      	mov	r1, r2
 800980e:	a80e      	add	r0, sp, #56	; 0x38
 8009810:	9209      	str	r2, [sp, #36]	; 0x24
 8009812:	f004 f95d 	bl	800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009816:	9a06      	ldr	r2, [sp, #24]
 8009818:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800981c:	9b01      	ldr	r3, [sp, #4]
 800981e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8009822:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8009826:	4413      	add	r3, r2
 8009828:	f04f 0e02 	mov.w	lr, #2
 800982c:	fb91 f1fe 	sdiv	r1, r1, lr
 8009830:	4401      	add	r1, r0
 8009832:	1a58      	subs	r0, r3, r1
 8009834:	9a07      	ldr	r2, [sp, #28]
 8009836:	9b02      	ldr	r3, [sp, #8]
 8009838:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800983c:	fb9c fcfe 	sdiv	ip, ip, lr
 8009840:	4413      	add	r3, r2
 8009842:	448c      	add	ip, r1
 8009844:	eba3 030c 	sub.w	r3, r3, ip
 8009848:	435b      	muls	r3, r3
 800984a:	fb00 3300 	mla	r3, r0, r0, r3
 800984e:	42ab      	cmp	r3, r5
 8009850:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009852:	d208      	bcs.n	8009866 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8009854:	9803      	ldr	r0, [sp, #12]
 8009856:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8009858:	6001      	str	r1, [r0, #0]
 800985a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800985c:	9805      	ldr	r0, [sp, #20]
 800985e:	8008      	strh	r0, [r1, #0]
 8009860:	992b      	ldr	r1, [sp, #172]	; 0xac
 8009862:	461d      	mov	r5, r3
 8009864:	800f      	strh	r7, [r1, #0]
 8009866:	4692      	mov	sl, r2
 8009868:	f10b 0b01 	add.w	fp, fp, #1
 800986c:	f1bb 0f04 	cmp.w	fp, #4
 8009870:	f104 0408 	add.w	r4, r4, #8
 8009874:	d19c      	bne.n	80097b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8009876:	9b00      	ldr	r3, [sp, #0]
 8009878:	9c08      	ldr	r4, [sp, #32]
 800987a:	444b      	add	r3, r9
 800987c:	4544      	cmp	r4, r8
 800987e:	9300      	str	r3, [sp, #0]
 8009880:	d187      	bne.n	8009792 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8009882:	b021      	add	sp, #132	; 0x84
 8009884:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009888:	f04f 35ff 	mov.w	r5, #4294967295
 800988c:	e766      	b.n	800975c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800988e:	bf00      	nop
 8009890:	20013508 	.word	0x20013508
 8009894:	0801cfd8 	.word	0x0801cfd8

08009898 <_ZN8touchgfx4RectaNERKS0_>:
 8009898:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800989c:	f9b1 7000 	ldrsh.w	r7, [r1]
 80098a0:	888c      	ldrh	r4, [r1, #4]
 80098a2:	f9b0 9000 	ldrsh.w	r9, [r0]
 80098a6:	443c      	add	r4, r7
 80098a8:	b2a4      	uxth	r4, r4
 80098aa:	fa0f f884 	sxth.w	r8, r4
 80098ae:	45c1      	cmp	r9, r8
 80098b0:	da2f      	bge.n	8009912 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80098b2:	8882      	ldrh	r2, [r0, #4]
 80098b4:	444a      	add	r2, r9
 80098b6:	b292      	uxth	r2, r2
 80098b8:	fa0f fe82 	sxth.w	lr, r2
 80098bc:	4577      	cmp	r7, lr
 80098be:	da28      	bge.n	8009912 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80098c0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80098c4:	88cb      	ldrh	r3, [r1, #6]
 80098c6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80098ca:	442b      	add	r3, r5
 80098cc:	b21b      	sxth	r3, r3
 80098ce:	429e      	cmp	r6, r3
 80098d0:	da1f      	bge.n	8009912 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80098d2:	88c3      	ldrh	r3, [r0, #6]
 80098d4:	4433      	add	r3, r6
 80098d6:	b29b      	uxth	r3, r3
 80098d8:	fa0f fc83 	sxth.w	ip, r3
 80098dc:	4565      	cmp	r5, ip
 80098de:	da18      	bge.n	8009912 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80098e0:	454f      	cmp	r7, r9
 80098e2:	bfb8      	it	lt
 80098e4:	464f      	movlt	r7, r9
 80098e6:	42b5      	cmp	r5, r6
 80098e8:	bfb8      	it	lt
 80098ea:	4635      	movlt	r5, r6
 80098ec:	45f0      	cmp	r8, lr
 80098ee:	bfd8      	it	le
 80098f0:	4622      	movle	r2, r4
 80098f2:	1bd2      	subs	r2, r2, r7
 80098f4:	8082      	strh	r2, [r0, #4]
 80098f6:	884a      	ldrh	r2, [r1, #2]
 80098f8:	88c9      	ldrh	r1, [r1, #6]
 80098fa:	8007      	strh	r7, [r0, #0]
 80098fc:	440a      	add	r2, r1
 80098fe:	b292      	uxth	r2, r2
 8009900:	b211      	sxth	r1, r2
 8009902:	458c      	cmp	ip, r1
 8009904:	bfa8      	it	ge
 8009906:	4613      	movge	r3, r2
 8009908:	1b5b      	subs	r3, r3, r5
 800990a:	80c3      	strh	r3, [r0, #6]
 800990c:	8045      	strh	r5, [r0, #2]
 800990e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009912:	2300      	movs	r3, #0
 8009914:	8003      	strh	r3, [r0, #0]
 8009916:	8043      	strh	r3, [r0, #2]
 8009918:	8083      	strh	r3, [r0, #4]
 800991a:	80c3      	strh	r3, [r0, #6]
 800991c:	e7f7      	b.n	800990e <_ZN8touchgfx4RectaNERKS0_+0x76>

0800991e <_ZNK8touchgfx4Rect7isEmptyEv>:
 800991e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009922:	2b00      	cmp	r3, #0
 8009924:	dd06      	ble.n	8009934 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8009926:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800992a:	2800      	cmp	r0, #0
 800992c:	bfcc      	ite	gt
 800992e:	2000      	movgt	r0, #0
 8009930:	2001      	movle	r0, #1
 8009932:	4770      	bx	lr
 8009934:	2001      	movs	r0, #1
 8009936:	4770      	bx	lr

08009938 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009938:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800993c:	2300      	movs	r3, #0
 800993e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8009940:	8003      	strh	r3, [r0, #0]
 8009942:	4604      	mov	r4, r0
 8009944:	8043      	strh	r3, [r0, #2]
 8009946:	8083      	strh	r3, [r0, #4]
 8009948:	80c3      	strh	r3, [r0, #6]
 800994a:	2d00      	cmp	r5, #0
 800994c:	d040      	beq.n	80099d0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800994e:	1d28      	adds	r0, r5, #4
 8009950:	f7ff ffe5 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009954:	b988      	cbnz	r0, 800997a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009956:	4620      	mov	r0, r4
 8009958:	f7ff ffe1 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 800995c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009960:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009964:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009968:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800996c:	b138      	cbz	r0, 800997e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800996e:	8022      	strh	r2, [r4, #0]
 8009970:	8063      	strh	r3, [r4, #2]
 8009972:	f8a4 e004 	strh.w	lr, [r4, #4]
 8009976:	f8a4 c006 	strh.w	ip, [r4, #6]
 800997a:	69ad      	ldr	r5, [r5, #24]
 800997c:	e7e5      	b.n	800994a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800997e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8009982:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8009986:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800998a:	4290      	cmp	r0, r2
 800998c:	4607      	mov	r7, r0
 800998e:	bfa8      	it	ge
 8009990:	4617      	movge	r7, r2
 8009992:	4472      	add	r2, lr
 8009994:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8009998:	8027      	strh	r7, [r4, #0]
 800999a:	4299      	cmp	r1, r3
 800999c:	460e      	mov	r6, r1
 800999e:	4440      	add	r0, r8
 80099a0:	bfa8      	it	ge
 80099a2:	461e      	movge	r6, r3
 80099a4:	4471      	add	r1, lr
 80099a6:	4463      	add	r3, ip
 80099a8:	b200      	sxth	r0, r0
 80099aa:	b212      	sxth	r2, r2
 80099ac:	b209      	sxth	r1, r1
 80099ae:	b21b      	sxth	r3, r3
 80099b0:	4290      	cmp	r0, r2
 80099b2:	bfac      	ite	ge
 80099b4:	ebc7 0200 	rsbge	r2, r7, r0
 80099b8:	ebc7 0202 	rsblt	r2, r7, r2
 80099bc:	4299      	cmp	r1, r3
 80099be:	bfac      	ite	ge
 80099c0:	ebc6 0301 	rsbge	r3, r6, r1
 80099c4:	ebc6 0303 	rsblt	r3, r6, r3
 80099c8:	8066      	strh	r6, [r4, #2]
 80099ca:	80a2      	strh	r2, [r4, #4]
 80099cc:	80e3      	strh	r3, [r4, #6]
 80099ce:	e7d4      	b.n	800997a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80099d0:	4620      	mov	r0, r4
 80099d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080099d6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80099d6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80099da:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80099de:	b383      	cbz	r3, 8009a42 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80099e0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80099e2:	b374      	cbz	r4, 8009a42 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80099e4:	f9b1 5000 	ldrsh.w	r5, [r1]
 80099e8:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80099ec:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80099f0:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80099f4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80099f8:	b303      	cbz	r3, 8009a3c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80099fa:	4668      	mov	r0, sp
 80099fc:	1d21      	adds	r1, r4, #4
 80099fe:	f8ad 5000 	strh.w	r5, [sp]
 8009a02:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009a06:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009a0a:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009a0e:	f7ff ff43 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 8009a12:	4668      	mov	r0, sp
 8009a14:	f7ff ff83 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009a18:	b980      	cbnz	r0, 8009a3c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009a1a:	f8bd 3000 	ldrh.w	r3, [sp]
 8009a1e:	88a2      	ldrh	r2, [r4, #4]
 8009a20:	1a9b      	subs	r3, r3, r2
 8009a22:	f8ad 3000 	strh.w	r3, [sp]
 8009a26:	88e2      	ldrh	r2, [r4, #6]
 8009a28:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009a2c:	1a9b      	subs	r3, r3, r2
 8009a2e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009a32:	6823      	ldr	r3, [r4, #0]
 8009a34:	4669      	mov	r1, sp
 8009a36:	689b      	ldr	r3, [r3, #8]
 8009a38:	4620      	mov	r0, r4
 8009a3a:	4798      	blx	r3
 8009a3c:	69a4      	ldr	r4, [r4, #24]
 8009a3e:	2c00      	cmp	r4, #0
 8009a40:	d1d8      	bne.n	80099f4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8009a42:	b002      	add	sp, #8
 8009a44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009a48 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009a48:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009a4a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009a4e:	460d      	mov	r5, r1
 8009a50:	4616      	mov	r6, r2
 8009a52:	b323      	cbz	r3, 8009a9e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009a54:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009a56:	b314      	cbz	r4, 8009a9e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009a58:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009a5c:	b1eb      	cbz	r3, 8009a9a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009a5e:	6828      	ldr	r0, [r5, #0]
 8009a60:	6869      	ldr	r1, [r5, #4]
 8009a62:	466b      	mov	r3, sp
 8009a64:	c303      	stmia	r3!, {r0, r1}
 8009a66:	4668      	mov	r0, sp
 8009a68:	1d21      	adds	r1, r4, #4
 8009a6a:	f7ff ff15 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 8009a6e:	4668      	mov	r0, sp
 8009a70:	f7ff ff55 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009a74:	b988      	cbnz	r0, 8009a9a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009a76:	f8bd 3000 	ldrh.w	r3, [sp]
 8009a7a:	88a2      	ldrh	r2, [r4, #4]
 8009a7c:	1a9b      	subs	r3, r3, r2
 8009a7e:	f8ad 3000 	strh.w	r3, [sp]
 8009a82:	88e2      	ldrh	r2, [r4, #6]
 8009a84:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009a88:	1a9b      	subs	r3, r3, r2
 8009a8a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009a8e:	6823      	ldr	r3, [r4, #0]
 8009a90:	4632      	mov	r2, r6
 8009a92:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009a94:	4669      	mov	r1, sp
 8009a96:	4620      	mov	r0, r4
 8009a98:	4798      	blx	r3
 8009a9a:	69a4      	ldr	r4, [r4, #24]
 8009a9c:	e7db      	b.n	8009a56 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8009a9e:	b002      	add	sp, #8
 8009aa0:	bd70      	pop	{r4, r5, r6, pc}

08009aa2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8009aa2:	b513      	push	{r0, r1, r4, lr}
 8009aa4:	6803      	ldr	r3, [r0, #0]
 8009aa6:	f8d3 40a0 	ldr.w	r4, [r3, #160]	; 0xa0
 8009aaa:	2300      	movs	r3, #0
 8009aac:	e9cd 3300 	strd	r3, r3, [sp]
 8009ab0:	466b      	mov	r3, sp
 8009ab2:	47a0      	blx	r4
 8009ab4:	b002      	add	sp, #8
 8009ab6:	bd10      	pop	{r4, pc}

08009ab8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009ab8:	2301      	movs	r3, #1
 8009aba:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009abe:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009ac2:	4770      	bx	lr

08009ac4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8009ac4:	2301      	movs	r3, #1
 8009ac6:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009aca:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009ace:	4770      	bx	lr

08009ad0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009ad0:	6843      	ldr	r3, [r0, #4]
 8009ad2:	2201      	movs	r2, #1
 8009ad4:	725a      	strb	r2, [r3, #9]
 8009ad6:	6840      	ldr	r0, [r0, #4]
 8009ad8:	6803      	ldr	r3, [r0, #0]
 8009ada:	691b      	ldr	r3, [r3, #16]
 8009adc:	4718      	bx	r3

08009ade <_ZN8touchgfx3HAL8flushDMAEv>:
 8009ade:	6840      	ldr	r0, [r0, #4]
 8009ae0:	6803      	ldr	r3, [r0, #0]
 8009ae2:	689b      	ldr	r3, [r3, #8]
 8009ae4:	4718      	bx	r3

08009ae6 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8009ae6:	b530      	push	{r4, r5, lr}
 8009ae8:	b08b      	sub	sp, #44	; 0x2c
 8009aea:	6804      	ldr	r4, [r0, #0]
 8009aec:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8009af0:	9509      	str	r5, [sp, #36]	; 0x24
 8009af2:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8009af6:	9508      	str	r5, [sp, #32]
 8009af8:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8009afc:	9507      	str	r5, [sp, #28]
 8009afe:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8009b02:	9506      	str	r5, [sp, #24]
 8009b04:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8009b08:	9505      	str	r5, [sp, #20]
 8009b0a:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8009b0e:	9504      	str	r5, [sp, #16]
 8009b10:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8009b14:	9503      	str	r5, [sp, #12]
 8009b16:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8009b1a:	9502      	str	r5, [sp, #8]
 8009b1c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8009b20:	e9cd 3500 	strd	r3, r5, [sp]
 8009b24:	4613      	mov	r3, r2
 8009b26:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8009b28:	2200      	movs	r2, #0
 8009b2a:	47a0      	blx	r4
 8009b2c:	b00b      	add	sp, #44	; 0x2c
 8009b2e:	bd30      	pop	{r4, r5, pc}

08009b30 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009b30:	4b04      	ldr	r3, [pc, #16]	; (8009b44 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8009b32:	781b      	ldrb	r3, [r3, #0]
 8009b34:	b123      	cbz	r3, 8009b40 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8009b36:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8009b3a:	f080 0001 	eor.w	r0, r0, #1
 8009b3e:	4770      	bx	lr
 8009b40:	2001      	movs	r0, #1
 8009b42:	4770      	bx	lr
 8009b44:	20013506 	.word	0x20013506

08009b48 <_ZN8touchgfx3HAL8endFrameEv>:
 8009b48:	b510      	push	{r4, lr}
 8009b4a:	4604      	mov	r4, r0
 8009b4c:	6840      	ldr	r0, [r0, #4]
 8009b4e:	6803      	ldr	r3, [r0, #0]
 8009b50:	689b      	ldr	r3, [r3, #8]
 8009b52:	4798      	blx	r3
 8009b54:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8009b58:	b113      	cbz	r3, 8009b60 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009b5a:	2301      	movs	r3, #1
 8009b5c:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009b60:	bd10      	pop	{r4, pc}

08009b62 <_ZN8touchgfx3HAL10initializeEv>:
 8009b62:	b510      	push	{r4, lr}
 8009b64:	4604      	mov	r4, r0
 8009b66:	f7f6 feb7 	bl	80008d8 <_ZN8touchgfx10OSWrappers10initializeEv>
 8009b6a:	6860      	ldr	r0, [r4, #4]
 8009b6c:	6803      	ldr	r3, [r0, #0]
 8009b6e:	68db      	ldr	r3, [r3, #12]
 8009b70:	4798      	blx	r3
 8009b72:	68e0      	ldr	r0, [r4, #12]
 8009b74:	6803      	ldr	r3, [r0, #0]
 8009b76:	689b      	ldr	r3, [r3, #8]
 8009b78:	4798      	blx	r3
 8009b7a:	6823      	ldr	r3, [r4, #0]
 8009b7c:	4620      	mov	r0, r4
 8009b7e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009b80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009b84:	4718      	bx	r3
	...

08009b88 <_ZN8touchgfx3HAL4tickEv>:
 8009b88:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009b8a:	6803      	ldr	r3, [r0, #0]
 8009b8c:	4d5c      	ldr	r5, [pc, #368]	; (8009d00 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009b8e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8009b92:	4604      	mov	r4, r0
 8009b94:	4798      	blx	r3
 8009b96:	2800      	cmp	r0, #0
 8009b98:	f000 8097 	beq.w	8009cca <_ZN8touchgfx3HAL4tickEv+0x142>
 8009b9c:	2001      	movs	r0, #1
 8009b9e:	f7f6 fdd1 	bl	8000744 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009ba2:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8009ba6:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009baa:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8009bae:	2600      	movs	r6, #0
 8009bb0:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009bb4:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8009bb8:	b133      	cbz	r3, 8009bc8 <_ZN8touchgfx3HAL4tickEv+0x40>
 8009bba:	6823      	ldr	r3, [r4, #0]
 8009bbc:	4620      	mov	r0, r4
 8009bbe:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8009bc2:	4798      	blx	r3
 8009bc4:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8009bc8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8009bcc:	6862      	ldr	r2, [r4, #4]
 8009bce:	f083 0301 	eor.w	r3, r3, #1
 8009bd2:	7253      	strb	r3, [r2, #9]
 8009bd4:	2601      	movs	r6, #1
 8009bd6:	702e      	strb	r6, [r5, #0]
 8009bd8:	f002 ff60 	bl	800ca9c <_ZN8touchgfx11Application11getInstanceEv>
 8009bdc:	6803      	ldr	r3, [r0, #0]
 8009bde:	4631      	mov	r1, r6
 8009be0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009be2:	4798      	blx	r3
 8009be4:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009be8:	b90b      	cbnz	r3, 8009bee <_ZN8touchgfx3HAL4tickEv+0x66>
 8009bea:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8009bee:	f002 ff55 	bl	800ca9c <_ZN8touchgfx11Application11getInstanceEv>
 8009bf2:	6803      	ldr	r3, [r0, #0]
 8009bf4:	695b      	ldr	r3, [r3, #20]
 8009bf6:	4798      	blx	r3
 8009bf8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009bfa:	6803      	ldr	r3, [r0, #0]
 8009bfc:	691b      	ldr	r3, [r3, #16]
 8009bfe:	4798      	blx	r3
 8009c00:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009c04:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8009c08:	3b01      	subs	r3, #1
 8009c0a:	b2db      	uxtb	r3, r3
 8009c0c:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009c10:	b10a      	cbz	r2, 8009c16 <_ZN8touchgfx3HAL4tickEv+0x8e>
 8009c12:	2b00      	cmp	r3, #0
 8009c14:	d1eb      	bne.n	8009bee <_ZN8touchgfx3HAL4tickEv+0x66>
 8009c16:	4a3b      	ldr	r2, [pc, #236]	; (8009d04 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009c18:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009c1c:	7813      	ldrb	r3, [r2, #0]
 8009c1e:	3301      	adds	r3, #1
 8009c20:	b25b      	sxtb	r3, r3
 8009c22:	4299      	cmp	r1, r3
 8009c24:	7013      	strb	r3, [r2, #0]
 8009c26:	dc10      	bgt.n	8009c4a <_ZN8touchgfx3HAL4tickEv+0xc2>
 8009c28:	68e0      	ldr	r0, [r4, #12]
 8009c2a:	2300      	movs	r3, #0
 8009c2c:	7013      	strb	r3, [r2, #0]
 8009c2e:	6803      	ldr	r3, [r0, #0]
 8009c30:	aa03      	add	r2, sp, #12
 8009c32:	68db      	ldr	r3, [r3, #12]
 8009c34:	a902      	add	r1, sp, #8
 8009c36:	4798      	blx	r3
 8009c38:	6823      	ldr	r3, [r4, #0]
 8009c3a:	2800      	cmp	r0, #0
 8009c3c:	d051      	beq.n	8009ce2 <_ZN8touchgfx3HAL4tickEv+0x15a>
 8009c3e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8009c42:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009c46:	4620      	mov	r0, r4
 8009c48:	4798      	blx	r3
 8009c4a:	6960      	ldr	r0, [r4, #20]
 8009c4c:	2300      	movs	r3, #0
 8009c4e:	f88d 3007 	strb.w	r3, [sp, #7]
 8009c52:	b158      	cbz	r0, 8009c6c <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009c54:	6803      	ldr	r3, [r0, #0]
 8009c56:	f10d 0107 	add.w	r1, sp, #7
 8009c5a:	68db      	ldr	r3, [r3, #12]
 8009c5c:	4798      	blx	r3
 8009c5e:	b128      	cbz	r0, 8009c6c <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009c60:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009c62:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009c66:	6803      	ldr	r3, [r0, #0]
 8009c68:	68db      	ldr	r3, [r3, #12]
 8009c6a:	4798      	blx	r3
 8009c6c:	f104 001c 	add.w	r0, r4, #28
 8009c70:	f011 fe6c 	bl	801b94c <_ZN8touchgfx8Gestures4tickEv>
 8009c74:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8009c78:	b30b      	cbz	r3, 8009cbe <_ZN8touchgfx3HAL4tickEv+0x136>
 8009c7a:	6920      	ldr	r0, [r4, #16]
 8009c7c:	6803      	ldr	r3, [r0, #0]
 8009c7e:	691b      	ldr	r3, [r3, #16]
 8009c80:	4798      	blx	r3
 8009c82:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009c84:	4606      	mov	r6, r0
 8009c86:	b903      	cbnz	r3, 8009c8a <_ZN8touchgfx3HAL4tickEv+0x102>
 8009c88:	6720      	str	r0, [r4, #112]	; 0x70
 8009c8a:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009c8c:	4a1e      	ldr	r2, [pc, #120]	; (8009d08 <_ZN8touchgfx3HAL4tickEv+0x180>)
 8009c8e:	1af3      	subs	r3, r6, r3
 8009c90:	4293      	cmp	r3, r2
 8009c92:	d914      	bls.n	8009cbe <_ZN8touchgfx3HAL4tickEv+0x136>
 8009c94:	6920      	ldr	r0, [r4, #16]
 8009c96:	6803      	ldr	r3, [r0, #0]
 8009c98:	699b      	ldr	r3, [r3, #24]
 8009c9a:	4798      	blx	r3
 8009c9c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009c9e:	2264      	movs	r2, #100	; 0x64
 8009ca0:	1af3      	subs	r3, r6, r3
 8009ca2:	fbb3 f3f2 	udiv	r3, r3, r2
 8009ca6:	fbb0 f0f3 	udiv	r0, r0, r3
 8009caa:	2800      	cmp	r0, #0
 8009cac:	dc1e      	bgt.n	8009cec <_ZN8touchgfx3HAL4tickEv+0x164>
 8009cae:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8009cb2:	6920      	ldr	r0, [r4, #16]
 8009cb4:	6803      	ldr	r3, [r0, #0]
 8009cb6:	2100      	movs	r1, #0
 8009cb8:	69db      	ldr	r3, [r3, #28]
 8009cba:	4798      	blx	r3
 8009cbc:	6726      	str	r6, [r4, #112]	; 0x70
 8009cbe:	f002 feed 	bl	800ca9c <_ZN8touchgfx11Application11getInstanceEv>
 8009cc2:	6803      	ldr	r3, [r0, #0]
 8009cc4:	2100      	movs	r1, #0
 8009cc6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009cc8:	4798      	blx	r3
 8009cca:	6823      	ldr	r3, [r4, #0]
 8009ccc:	4620      	mov	r0, r4
 8009cce:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8009cd2:	4798      	blx	r3
 8009cd4:	2001      	movs	r0, #1
 8009cd6:	f7f6 fd36 	bl	8000746 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009cda:	2300      	movs	r3, #0
 8009cdc:	702b      	strb	r3, [r5, #0]
 8009cde:	b004      	add	sp, #16
 8009ce0:	bd70      	pop	{r4, r5, r6, pc}
 8009ce2:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8009ce6:	4620      	mov	r0, r4
 8009ce8:	4798      	blx	r3
 8009cea:	e7ae      	b.n	8009c4a <_ZN8touchgfx3HAL4tickEv+0xc2>
 8009cec:	2863      	cmp	r0, #99	; 0x63
 8009cee:	bfcb      	itete	gt
 8009cf0:	2300      	movgt	r3, #0
 8009cf2:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8009cf6:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8009cfa:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8009cfe:	e7d8      	b.n	8009cb2 <_ZN8touchgfx3HAL4tickEv+0x12a>
 8009d00:	2001350c 	.word	0x2001350c
 8009d04:	2001350d 	.word	0x2001350d
 8009d08:	05f5e100 	.word	0x05f5e100

08009d0c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009d0c:	f7f6 be14 	b.w	8000938 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009d10 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009d10:	6581      	str	r1, [r0, #88]	; 0x58
 8009d12:	301c      	adds	r0, #28
 8009d14:	f011 be18 	b.w	801b948 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009d18 <_ZN8touchgfx3HAL5touchEll>:
 8009d18:	b530      	push	{r4, r5, lr}
 8009d1a:	b087      	sub	sp, #28
 8009d1c:	4604      	mov	r4, r0
 8009d1e:	a804      	add	r0, sp, #16
 8009d20:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009d24:	f002 fc70 	bl	800c608 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009d28:	9b04      	ldr	r3, [sp, #16]
 8009d2a:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009d2e:	a906      	add	r1, sp, #24
 8009d30:	9b05      	ldr	r3, [sp, #20]
 8009d32:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8009d36:	a803      	add	r0, sp, #12
 8009d38:	f002 fcb8 	bl	800c6ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009d3c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8009d40:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009d44:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009d48:	f104 001c 	add.w	r0, r4, #28
 8009d4c:	b189      	cbz	r1, 8009d72 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009d4e:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8009d52:	9300      	str	r3, [sp, #0]
 8009d54:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8009d58:	4613      	mov	r3, r2
 8009d5a:	462a      	mov	r2, r5
 8009d5c:	f011 fe04 	bl	801b968 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009d60:	b128      	cbz	r0, 8009d6e <_ZN8touchgfx3HAL5touchEll+0x56>
 8009d62:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8009d66:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009d68:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009d6c:	6623      	str	r3, [r4, #96]	; 0x60
 8009d6e:	b007      	add	sp, #28
 8009d70:	bd30      	pop	{r4, r5, pc}
 8009d72:	f011 fe3d 	bl	801b9f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009d76:	2301      	movs	r3, #1
 8009d78:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009d7c:	e7f1      	b.n	8009d62 <_ZN8touchgfx3HAL5touchEll+0x4a>

08009d7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009d7e:	b510      	push	{r4, lr}
 8009d80:	2b00      	cmp	r3, #0
 8009d82:	d046      	beq.n	8009e12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009d84:	ea81 0002 	eor.w	r0, r1, r2
 8009d88:	07c4      	lsls	r4, r0, #31
 8009d8a:	d508      	bpl.n	8009d9e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009d8c:	440b      	add	r3, r1
 8009d8e:	3a01      	subs	r2, #1
 8009d90:	428b      	cmp	r3, r1
 8009d92:	d93e      	bls.n	8009e12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009d94:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009d98:	f801 0b01 	strb.w	r0, [r1], #1
 8009d9c:	e7f8      	b.n	8009d90 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009d9e:	07d0      	lsls	r0, r2, #31
 8009da0:	bf42      	ittt	mi
 8009da2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009da6:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009daa:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009dae:	2b01      	cmp	r3, #1
 8009db0:	d911      	bls.n	8009dd6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009db2:	ea81 0402 	eor.w	r4, r1, r2
 8009db6:	07a4      	lsls	r4, r4, #30
 8009db8:	4610      	mov	r0, r2
 8009dba:	d022      	beq.n	8009e02 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8009dbc:	f023 0401 	bic.w	r4, r3, #1
 8009dc0:	440c      	add	r4, r1
 8009dc2:	428c      	cmp	r4, r1
 8009dc4:	4602      	mov	r2, r0
 8009dc6:	d904      	bls.n	8009dd2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8009dc8:	8812      	ldrh	r2, [r2, #0]
 8009dca:	f821 2b02 	strh.w	r2, [r1], #2
 8009dce:	3002      	adds	r0, #2
 8009dd0:	e7f7      	b.n	8009dc2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8009dd2:	f003 0301 	and.w	r3, r3, #1
 8009dd6:	f023 0003 	bic.w	r0, r3, #3
 8009dda:	4408      	add	r0, r1
 8009ddc:	4288      	cmp	r0, r1
 8009dde:	4614      	mov	r4, r2
 8009de0:	d904      	bls.n	8009dec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8009de2:	6824      	ldr	r4, [r4, #0]
 8009de4:	f841 4b04 	str.w	r4, [r1], #4
 8009de8:	3204      	adds	r2, #4
 8009dea:	e7f7      	b.n	8009ddc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8009dec:	f003 0303 	and.w	r3, r3, #3
 8009df0:	440b      	add	r3, r1
 8009df2:	3a01      	subs	r2, #1
 8009df4:	428b      	cmp	r3, r1
 8009df6:	d90c      	bls.n	8009e12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009df8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009dfc:	f801 0b01 	strb.w	r0, [r1], #1
 8009e00:	e7f8      	b.n	8009df4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8009e02:	0790      	lsls	r0, r2, #30
 8009e04:	d0e7      	beq.n	8009dd6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009e06:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009e0a:	f821 0b02 	strh.w	r0, [r1], #2
 8009e0e:	3b02      	subs	r3, #2
 8009e10:	e7e1      	b.n	8009dd6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009e12:	2001      	movs	r0, #1
 8009e14:	bd10      	pop	{r4, pc}

08009e16 <_ZN8touchgfx3HAL7noTouchEv>:
 8009e16:	b510      	push	{r4, lr}
 8009e18:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8009e1c:	4604      	mov	r4, r0
 8009e1e:	b153      	cbz	r3, 8009e36 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009e20:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8009e24:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8009e28:	2101      	movs	r1, #1
 8009e2a:	301c      	adds	r0, #28
 8009e2c:	f011 fde0 	bl	801b9f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009e30:	2300      	movs	r3, #0
 8009e32:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009e36:	bd10      	pop	{r4, pc}

08009e38 <_ZN8touchgfx3HAL3lcdEv>:
 8009e38:	4b04      	ldr	r3, [pc, #16]	; (8009e4c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8009e3a:	681b      	ldr	r3, [r3, #0]
 8009e3c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009e40:	b10a      	cbz	r2, 8009e46 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8009e42:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8009e44:	b900      	cbnz	r0, 8009e48 <_ZN8touchgfx3HAL3lcdEv+0x10>
 8009e46:	6898      	ldr	r0, [r3, #8]
 8009e48:	4770      	bx	lr
 8009e4a:	bf00      	nop
 8009e4c:	20013508 	.word	0x20013508

08009e50 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009e50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009e54:	4604      	mov	r4, r0
 8009e56:	6980      	ldr	r0, [r0, #24]
 8009e58:	b085      	sub	sp, #20
 8009e5a:	460f      	mov	r7, r1
 8009e5c:	4690      	mov	r8, r2
 8009e5e:	4699      	mov	r9, r3
 8009e60:	b930      	cbnz	r0, 8009e70 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 8009e62:	4b1c      	ldr	r3, [pc, #112]	; (8009ed4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 8009e64:	4a1c      	ldr	r2, [pc, #112]	; (8009ed8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009e66:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 8009e6a:	481c      	ldr	r0, [pc, #112]	; (8009edc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 8009e6c:	f011 fe56 	bl	801bb1c <__assert_func>
 8009e70:	ad04      	add	r5, sp, #16
 8009e72:	2600      	movs	r6, #0
 8009e74:	f845 6d04 	str.w	r6, [r5, #-4]!
 8009e78:	6806      	ldr	r6, [r0, #0]
 8009e7a:	9501      	str	r5, [sp, #4]
 8009e7c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8009e80:	9500      	str	r5, [sp, #0]
 8009e82:	6835      	ldr	r5, [r6, #0]
 8009e84:	47a8      	blx	r5
 8009e86:	4d16      	ldr	r5, [pc, #88]	; (8009ee0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 8009e88:	4606      	mov	r6, r0
 8009e8a:	f8a5 9000 	strh.w	r9, [r5]
 8009e8e:	f7ff ffd3 	bl	8009e38 <_ZN8touchgfx3HAL3lcdEv>
 8009e92:	6803      	ldr	r3, [r0, #0]
 8009e94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e96:	4798      	blx	r3
 8009e98:	2801      	cmp	r0, #1
 8009e9a:	d012      	beq.n	8009ec2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 8009e9c:	d306      	bcc.n	8009eac <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 8009e9e:	280d      	cmp	r0, #13
 8009ea0:	d80b      	bhi.n	8009eba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009ea2:	4b10      	ldr	r3, [pc, #64]	; (8009ee4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8009ea4:	4a0c      	ldr	r2, [pc, #48]	; (8009ed8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009ea6:	f240 1167 	movw	r1, #359	; 0x167
 8009eaa:	e7de      	b.n	8009e6a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8009eac:	882b      	ldrh	r3, [r5, #0]
 8009eae:	fb08 7203 	mla	r2, r8, r3, r7
 8009eb2:	9b03      	ldr	r3, [sp, #12]
 8009eb4:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009eb8:	63e3      	str	r3, [r4, #60]	; 0x3c
 8009eba:	4630      	mov	r0, r6
 8009ebc:	b005      	add	sp, #20
 8009ebe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009ec2:	882a      	ldrh	r2, [r5, #0]
 8009ec4:	9b03      	ldr	r3, [sp, #12]
 8009ec6:	fb08 7202 	mla	r2, r8, r2, r7
 8009eca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009ece:	1a9a      	subs	r2, r3, r2
 8009ed0:	63e2      	str	r2, [r4, #60]	; 0x3c
 8009ed2:	e7f2      	b.n	8009eba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009ed4:	0801ef28 	.word	0x0801ef28
 8009ed8:	0801f1e6 	.word	0x0801f1e6
 8009edc:	0801ef6d 	.word	0x0801ef6d
 8009ee0:	20013502 	.word	0x20013502
 8009ee4:	0801ef93 	.word	0x0801ef93

08009ee8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8009ee8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009eea:	b08b      	sub	sp, #44	; 0x2c
 8009eec:	4617      	mov	r7, r2
 8009eee:	4604      	mov	r4, r0
 8009ef0:	460e      	mov	r6, r1
 8009ef2:	461d      	mov	r5, r3
 8009ef4:	f7ff ffa0 	bl	8009e38 <_ZN8touchgfx3HAL3lcdEv>
 8009ef8:	6803      	ldr	r3, [r0, #0]
 8009efa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009efc:	4798      	blx	r3
 8009efe:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009f02:	9007      	str	r0, [sp, #28]
 8009f04:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009f08:	4b0d      	ldr	r3, [pc, #52]	; (8009f40 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8009f0a:	6822      	ldr	r2, [r4, #0]
 8009f0c:	881b      	ldrh	r3, [r3, #0]
 8009f0e:	9306      	str	r3, [sp, #24]
 8009f10:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009f14:	9305      	str	r3, [sp, #20]
 8009f16:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009f1a:	9304      	str	r3, [sp, #16]
 8009f1c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009f20:	9303      	str	r3, [sp, #12]
 8009f22:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009f26:	9302      	str	r3, [sp, #8]
 8009f28:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009f2c:	e9cd 5300 	strd	r5, r3, [sp]
 8009f30:	4631      	mov	r1, r6
 8009f32:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8009f34:	463b      	mov	r3, r7
 8009f36:	2200      	movs	r2, #0
 8009f38:	4620      	mov	r0, r4
 8009f3a:	47a8      	blx	r5
 8009f3c:	b00b      	add	sp, #44	; 0x2c
 8009f3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f40:	20013502 	.word	0x20013502

08009f44 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8009f44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009f48:	4698      	mov	r8, r3
 8009f4a:	6803      	ldr	r3, [r0, #0]
 8009f4c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8009f4e:	4b15      	ldr	r3, [pc, #84]	; (8009fa4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8009f50:	b08b      	sub	sp, #44	; 0x2c
 8009f52:	4617      	mov	r7, r2
 8009f54:	f8b3 9000 	ldrh.w	r9, [r3]
 8009f58:	460e      	mov	r6, r1
 8009f5a:	4604      	mov	r4, r0
 8009f5c:	f7ff ff6c 	bl	8009e38 <_ZN8touchgfx3HAL3lcdEv>
 8009f60:	6803      	ldr	r3, [r0, #0]
 8009f62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009f64:	4798      	blx	r3
 8009f66:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009f6a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009f6e:	2302      	movs	r3, #2
 8009f70:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8009f74:	2301      	movs	r3, #1
 8009f76:	9305      	str	r3, [sp, #20]
 8009f78:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009f7c:	9304      	str	r3, [sp, #16]
 8009f7e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009f82:	9303      	str	r3, [sp, #12]
 8009f84:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009f88:	9302      	str	r3, [sp, #8]
 8009f8a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009f8e:	2200      	movs	r2, #0
 8009f90:	e9cd 8300 	strd	r8, r3, [sp]
 8009f94:	4631      	mov	r1, r6
 8009f96:	463b      	mov	r3, r7
 8009f98:	4620      	mov	r0, r4
 8009f9a:	47a8      	blx	r5
 8009f9c:	b00b      	add	sp, #44	; 0x2c
 8009f9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009fa2:	bf00      	nop
 8009fa4:	20013502 	.word	0x20013502

08009fa8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8009fa8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009fac:	4698      	mov	r8, r3
 8009fae:	6803      	ldr	r3, [r0, #0]
 8009fb0:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8009fb2:	4b11      	ldr	r3, [pc, #68]	; (8009ff8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8009fb4:	b087      	sub	sp, #28
 8009fb6:	f8b3 9000 	ldrh.w	r9, [r3]
 8009fba:	460e      	mov	r6, r1
 8009fbc:	4617      	mov	r7, r2
 8009fbe:	4604      	mov	r4, r0
 8009fc0:	f7ff ff3a 	bl	8009e38 <_ZN8touchgfx3HAL3lcdEv>
 8009fc4:	6803      	ldr	r3, [r0, #0]
 8009fc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009fc8:	4798      	blx	r3
 8009fca:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8009fce:	f8cd 900c 	str.w	r9, [sp, #12]
 8009fd2:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8009fd6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8009fda:	9302      	str	r3, [sp, #8]
 8009fdc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009fe0:	9301      	str	r3, [sp, #4]
 8009fe2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8009fe6:	9300      	str	r3, [sp, #0]
 8009fe8:	463a      	mov	r2, r7
 8009fea:	4643      	mov	r3, r8
 8009fec:	4631      	mov	r1, r6
 8009fee:	4620      	mov	r0, r4
 8009ff0:	47a8      	blx	r5
 8009ff2:	b007      	add	sp, #28
 8009ff4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009ff8:	20013502 	.word	0x20013502

08009ffc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a000:	4604      	mov	r4, r0
 800a002:	b08f      	sub	sp, #60	; 0x3c
 800a004:	4610      	mov	r0, r2
 800a006:	460d      	mov	r5, r1
 800a008:	4691      	mov	r9, r2
 800a00a:	461e      	mov	r6, r3
 800a00c:	f005 fc60 	bl	800f8d0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a010:	2800      	cmp	r0, #0
 800a012:	f000 809c 	beq.w	800a14e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 800a016:	6823      	ldr	r3, [r4, #0]
 800a018:	f8df b194 	ldr.w	fp, [pc, #404]	; 800a1b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 800a01c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a01e:	f8df a194 	ldr.w	sl, [pc, #404]	; 800a1b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800a022:	4f60      	ldr	r7, [pc, #384]	; (800a1a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800a024:	4620      	mov	r0, r4
 800a026:	4798      	blx	r3
 800a028:	6823      	ldr	r3, [r4, #0]
 800a02a:	4620      	mov	r0, r4
 800a02c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a02e:	4798      	blx	r3
 800a030:	f8bb 3000 	ldrh.w	r3, [fp]
 800a034:	9301      	str	r3, [sp, #4]
 800a036:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800a03a:	f8ba 3000 	ldrh.w	r3, [sl]
 800a03e:	9302      	str	r3, [sp, #8]
 800a040:	883b      	ldrh	r3, [r7, #0]
 800a042:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800a046:	9303      	str	r3, [sp, #12]
 800a048:	4b57      	ldr	r3, [pc, #348]	; (800a1a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a04a:	9305      	str	r3, [sp, #20]
 800a04c:	881a      	ldrh	r2, [r3, #0]
 800a04e:	9204      	str	r2, [sp, #16]
 800a050:	4640      	mov	r0, r8
 800a052:	f005 fcf7 	bl	800fa44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a056:	8038      	strh	r0, [r7, #0]
 800a058:	4640      	mov	r0, r8
 800a05a:	f005 fd2d 	bl	800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a05e:	9b05      	ldr	r3, [sp, #20]
 800a060:	8018      	strh	r0, [r3, #0]
 800a062:	4b52      	ldr	r3, [pc, #328]	; (800a1ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a064:	781b      	ldrb	r3, [r3, #0]
 800a066:	2b00      	cmp	r3, #0
 800a068:	d174      	bne.n	800a154 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800a06a:	883b      	ldrh	r3, [r7, #0]
 800a06c:	f8ab 3000 	strh.w	r3, [fp]
 800a070:	f8aa 0000 	strh.w	r0, [sl]
 800a074:	4648      	mov	r0, r9
 800a076:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800a07a:	f005 fc29 	bl	800f8d0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a07e:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800a082:	2200      	movs	r2, #0
 800a084:	4611      	mov	r1, r2
 800a086:	4628      	mov	r0, r5
 800a088:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800a08c:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800a090:	f7f8 fc7c 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 800a094:	2301      	movs	r3, #1
 800a096:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800a09a:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800a09e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a0a2:	2b00      	cmp	r3, #0
 800a0a4:	dd5c      	ble.n	800a160 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 800a0a6:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a0aa:	2b00      	cmp	r3, #0
 800a0ac:	dd58      	ble.n	800a160 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 800a0ae:	462a      	mov	r2, r5
 800a0b0:	ab0a      	add	r3, sp, #40	; 0x28
 800a0b2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a0b6:	6851      	ldr	r1, [r2, #4]
 800a0b8:	c303      	stmia	r3!, {r0, r1}
 800a0ba:	4631      	mov	r1, r6
 800a0bc:	a80a      	add	r0, sp, #40	; 0x28
 800a0be:	f7ff fbeb 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 800a0c2:	4b38      	ldr	r3, [pc, #224]	; (800a1a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800a0c4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a0c8:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800a0cc:	2100      	movs	r1, #0
 800a0ce:	aa0a      	add	r2, sp, #40	; 0x28
 800a0d0:	4b35      	ldr	r3, [pc, #212]	; (800a1a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a0d2:	910c      	str	r1, [sp, #48]	; 0x30
 800a0d4:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a0d8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800a0dc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800a0e0:	ab08      	add	r3, sp, #32
 800a0e2:	e883 0003 	stmia.w	r3, {r0, r1}
 800a0e6:	4618      	mov	r0, r3
 800a0e8:	a90c      	add	r1, sp, #48	; 0x30
 800a0ea:	f7ff fbd5 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 800a0ee:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800a0f0:	2b00      	cmp	r3, #0
 800a0f2:	d13c      	bne.n	800a16e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 800a0f4:	2000      	movs	r0, #0
 800a0f6:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800a0fa:	2600      	movs	r6, #0
 800a0fc:	682a      	ldr	r2, [r5, #0]
 800a0fe:	696b      	ldr	r3, [r5, #20]
 800a100:	616e      	str	r6, [r5, #20]
 800a102:	9305      	str	r3, [sp, #20]
 800a104:	6892      	ldr	r2, [r2, #8]
 800a106:	a908      	add	r1, sp, #32
 800a108:	4628      	mov	r0, r5
 800a10a:	4790      	blx	r2
 800a10c:	9b05      	ldr	r3, [sp, #20]
 800a10e:	616b      	str	r3, [r5, #20]
 800a110:	4652      	mov	r2, sl
 800a112:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800a116:	4649      	mov	r1, r9
 800a118:	4628      	mov	r0, r5
 800a11a:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800a11e:	f7f8 fc35 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 800a122:	4b23      	ldr	r3, [pc, #140]	; (800a1b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800a124:	9a01      	ldr	r2, [sp, #4]
 800a126:	801a      	strh	r2, [r3, #0]
 800a128:	4b22      	ldr	r3, [pc, #136]	; (800a1b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800a12a:	9a02      	ldr	r2, [sp, #8]
 800a12c:	801a      	strh	r2, [r3, #0]
 800a12e:	4b1d      	ldr	r3, [pc, #116]	; (800a1a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800a130:	9a03      	ldr	r2, [sp, #12]
 800a132:	801a      	strh	r2, [r3, #0]
 800a134:	4b1c      	ldr	r3, [pc, #112]	; (800a1a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a136:	9a04      	ldr	r2, [sp, #16]
 800a138:	801a      	strh	r2, [r3, #0]
 800a13a:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800a13e:	6823      	ldr	r3, [r4, #0]
 800a140:	4620      	mov	r0, r4
 800a142:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a144:	4798      	blx	r3
 800a146:	6823      	ldr	r3, [r4, #0]
 800a148:	4620      	mov	r0, r4
 800a14a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a14c:	4798      	blx	r3
 800a14e:	b00f      	add	sp, #60	; 0x3c
 800a150:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a154:	883b      	ldrh	r3, [r7, #0]
 800a156:	f8ab 0000 	strh.w	r0, [fp]
 800a15a:	f8aa 3000 	strh.w	r3, [sl]
 800a15e:	e789      	b.n	800a074 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 800a160:	462a      	mov	r2, r5
 800a162:	ab0a      	add	r3, sp, #40	; 0x28
 800a164:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a168:	6851      	ldr	r1, [r2, #4]
 800a16a:	c303      	stmia	r3!, {r0, r1}
 800a16c:	e7a9      	b.n	800a0c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 800a16e:	a807      	add	r0, sp, #28
 800a170:	f005 fdfa 	bl	800fd68 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a174:	4606      	mov	r6, r0
 800a176:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800a178:	6803      	ldr	r3, [r0, #0]
 800a17a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a17c:	4798      	blx	r3
 800a17e:	4286      	cmp	r6, r0
 800a180:	d1b8      	bne.n	800a0f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 800a182:	f7ff fe59 	bl	8009e38 <_ZN8touchgfx3HAL3lcdEv>
 800a186:	6803      	ldr	r3, [r0, #0]
 800a188:	4606      	mov	r6, r0
 800a18a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a18c:	9305      	str	r3, [sp, #20]
 800a18e:	a807      	add	r0, sp, #28
 800a190:	f005 fdea 	bl	800fd68 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a194:	9b05      	ldr	r3, [sp, #20]
 800a196:	4601      	mov	r1, r0
 800a198:	4630      	mov	r0, r6
 800a19a:	4798      	blx	r3
 800a19c:	f080 0001 	eor.w	r0, r0, #1
 800a1a0:	b2c0      	uxtb	r0, r0
 800a1a2:	e7a8      	b.n	800a0f6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800a1a4:	200134fc 	.word	0x200134fc
 800a1a8:	200134fe 	.word	0x200134fe
 800a1ac:	20013500 	.word	0x20013500
 800a1b0:	20013502 	.word	0x20013502
 800a1b4:	20013504 	.word	0x20013504

0800a1b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800a1b8:	b510      	push	{r4, lr}
 800a1ba:	4b07      	ldr	r3, [pc, #28]	; (800a1d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800a1bc:	781b      	ldrb	r3, [r3, #0]
 800a1be:	4604      	mov	r4, r0
 800a1c0:	b13b      	cbz	r3, 800a1d2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a1c2:	6803      	ldr	r3, [r0, #0]
 800a1c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a1c6:	4798      	blx	r3
 800a1c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a1ca:	4283      	cmp	r3, r0
 800a1cc:	d101      	bne.n	800a1d2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a1ce:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800a1d0:	bd10      	pop	{r4, pc}
 800a1d2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800a1d4:	e7fc      	b.n	800a1d0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800a1d6:	bf00      	nop
 800a1d8:	20013506 	.word	0x20013506

0800a1dc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800a1dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a1e0:	b088      	sub	sp, #32
 800a1e2:	461d      	mov	r5, r3
 800a1e4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800a1e8:	2400      	movs	r4, #0
 800a1ea:	f8bd 8040 	ldrh.w	r8, [sp, #64]	; 0x40
 800a1ee:	f8bd 7044 	ldrh.w	r7, [sp, #68]	; 0x44
 800a1f2:	f8bd 904c 	ldrh.w	r9, [sp, #76]	; 0x4c
 800a1f6:	9403      	str	r4, [sp, #12]
 800a1f8:	e9cd 3100 	strd	r3, r1, [sp]
 800a1fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a200:	f8ad 8014 	strh.w	r8, [sp, #20]
 800a204:	4692      	mov	sl, r2
 800a206:	4606      	mov	r6, r0
 800a208:	f8ad 7016 	strh.w	r7, [sp, #22]
 800a20c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a210:	f88d 401c 	strb.w	r4, [sp, #28]
 800a214:	f7ff ffd0 	bl	800a1b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a218:	fb09 a505 	mla	r5, r9, r5, sl
 800a21c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a220:	9504      	str	r5, [sp, #16]
 800a222:	f8ad 901a 	strh.w	r9, [sp, #26]
 800a226:	f88d 401e 	strb.w	r4, [sp, #30]
 800a22a:	f88d 401d 	strb.w	r4, [sp, #29]
 800a22e:	f88d 401f 	strb.w	r4, [sp, #31]
 800a232:	f1b8 0f00 	cmp.w	r8, #0
 800a236:	d000      	beq.n	800a23a <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x5e>
 800a238:	b937      	cbnz	r7, 800a248 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6c>
 800a23a:	4b0d      	ldr	r3, [pc, #52]	; (800a270 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 800a23c:	4a0d      	ldr	r2, [pc, #52]	; (800a274 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 800a23e:	f240 210b 	movw	r1, #523	; 0x20b
 800a242:	480d      	ldr	r0, [pc, #52]	; (800a278 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800a244:	f011 fc6a 	bl	801bb1c <__assert_func>
 800a248:	6833      	ldr	r3, [r6, #0]
 800a24a:	9c00      	ldr	r4, [sp, #0]
 800a24c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a24e:	4630      	mov	r0, r6
 800a250:	4798      	blx	r3
 800a252:	4220      	tst	r0, r4
 800a254:	d104      	bne.n	800a260 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x84>
 800a256:	4b09      	ldr	r3, [pc, #36]	; (800a27c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 800a258:	4a06      	ldr	r2, [pc, #24]	; (800a274 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 800a25a:	f44f 7103 	mov.w	r1, #524	; 0x20c
 800a25e:	e7f0      	b.n	800a242 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x66>
 800a260:	6870      	ldr	r0, [r6, #4]
 800a262:	6803      	ldr	r3, [r0, #0]
 800a264:	4669      	mov	r1, sp
 800a266:	685b      	ldr	r3, [r3, #4]
 800a268:	4798      	blx	r3
 800a26a:	b008      	add	sp, #32
 800a26c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a270:	0801edbb 	.word	0x0801edbb
 800a274:	0801f01b 	.word	0x0801f01b
 800a278:	0801ef6d 	.word	0x0801ef6d
 800a27c:	0801edf3 	.word	0x0801edf3

0800a280 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800a280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a284:	b089      	sub	sp, #36	; 0x24
 800a286:	2400      	movs	r4, #0
 800a288:	461d      	mov	r5, r3
 800a28a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800a28e:	f8bd 9050 	ldrh.w	r9, [sp, #80]	; 0x50
 800a292:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 800a296:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800a29a:	9403      	str	r4, [sp, #12]
 800a29c:	468a      	mov	sl, r1
 800a29e:	4693      	mov	fp, r2
 800a2a0:	4606      	mov	r6, r0
 800a2a2:	e9cd 3400 	strd	r3, r4, [sp]
 800a2a6:	f7ff ff87 	bl	800a1b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a2aa:	fb09 b505 	mla	r5, r9, r5, fp
 800a2ae:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a2b2:	9504      	str	r5, [sp, #16]
 800a2b4:	f8ad 8014 	strh.w	r8, [sp, #20]
 800a2b8:	f8ad 7016 	strh.w	r7, [sp, #22]
 800a2bc:	f8ad 4018 	strh.w	r4, [sp, #24]
 800a2c0:	f8ad 901a 	strh.w	r9, [sp, #26]
 800a2c4:	f8cd a00c 	str.w	sl, [sp, #12]
 800a2c8:	f8ad 401c 	strh.w	r4, [sp, #28]
 800a2cc:	f88d 401e 	strb.w	r4, [sp, #30]
 800a2d0:	f88d 401f 	strb.w	r4, [sp, #31]
 800a2d4:	f1b8 0f00 	cmp.w	r8, #0
 800a2d8:	d000      	beq.n	800a2dc <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x5c>
 800a2da:	b937      	cbnz	r7, 800a2ea <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6a>
 800a2dc:	4b0d      	ldr	r3, [pc, #52]	; (800a314 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 800a2de:	4a0e      	ldr	r2, [pc, #56]	; (800a318 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 800a2e0:	f240 2121 	movw	r1, #545	; 0x221
 800a2e4:	480d      	ldr	r0, [pc, #52]	; (800a31c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 800a2e6:	f011 fc19 	bl	801bb1c <__assert_func>
 800a2ea:	6833      	ldr	r3, [r6, #0]
 800a2ec:	9c00      	ldr	r4, [sp, #0]
 800a2ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a2f0:	4630      	mov	r0, r6
 800a2f2:	4798      	blx	r3
 800a2f4:	4220      	tst	r0, r4
 800a2f6:	d104      	bne.n	800a302 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x82>
 800a2f8:	4b09      	ldr	r3, [pc, #36]	; (800a320 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 800a2fa:	4a07      	ldr	r2, [pc, #28]	; (800a318 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 800a2fc:	f240 2122 	movw	r1, #546	; 0x222
 800a300:	e7f0      	b.n	800a2e4 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x64>
 800a302:	6870      	ldr	r0, [r6, #4]
 800a304:	6803      	ldr	r3, [r0, #0]
 800a306:	4669      	mov	r1, sp
 800a308:	685b      	ldr	r3, [r3, #4]
 800a30a:	4798      	blx	r3
 800a30c:	b009      	add	sp, #36	; 0x24
 800a30e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a312:	bf00      	nop
 800a314:	0801ee38 	.word	0x0801ee38
 800a318:	0801f091 	.word	0x0801f091
 800a31c:	0801ef6d 	.word	0x0801ef6d
 800a320:	0801ee70 	.word	0x0801ee70

0800a324 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a324:	b510      	push	{r4, lr}
 800a326:	4b0b      	ldr	r3, [pc, #44]	; (800a354 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800a328:	781b      	ldrb	r3, [r3, #0]
 800a32a:	4604      	mov	r4, r0
 800a32c:	b95b      	cbnz	r3, 800a346 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a32e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800a332:	2b02      	cmp	r3, #2
 800a334:	d007      	beq.n	800a346 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a336:	6840      	ldr	r0, [r0, #4]
 800a338:	f000 fb62 	bl	800aa00 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a33c:	b118      	cbz	r0, 800a346 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a33e:	6862      	ldr	r2, [r4, #4]
 800a340:	7a53      	ldrb	r3, [r2, #9]
 800a342:	2b00      	cmp	r3, #0
 800a344:	d0fc      	beq.n	800a340 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a346:	f7f6 faef 	bl	8000928 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a34a:	4620      	mov	r0, r4
 800a34c:	f7ff ff34 	bl	800a1b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a350:	bd10      	pop	{r4, pc}
 800a352:	bf00      	nop
 800a354:	20013506 	.word	0x20013506

0800a358 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800a358:	b508      	push	{r3, lr}
 800a35a:	290d      	cmp	r1, #13
 800a35c:	d817      	bhi.n	800a38e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800a35e:	e8df f001 	tbb	[pc, r1]
 800a362:	090b      	.short	0x090b
 800a364:	0d0d0d07 	.word	0x0d0d0d07
 800a368:	1414140d 	.word	0x1414140d
 800a36c:	0d0d1414 	.word	0x0d0d1414
 800a370:	2020      	movs	r0, #32
 800a372:	bd08      	pop	{r3, pc}
 800a374:	2018      	movs	r0, #24
 800a376:	e7fc      	b.n	800a372 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a378:	2010      	movs	r0, #16
 800a37a:	e7fa      	b.n	800a372 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a37c:	4b05      	ldr	r3, [pc, #20]	; (800a394 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800a37e:	4a06      	ldr	r2, [pc, #24]	; (800a398 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800a380:	4806      	ldr	r0, [pc, #24]	; (800a39c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800a382:	f240 2182 	movw	r1, #642	; 0x282
 800a386:	f011 fbc9 	bl	801bb1c <__assert_func>
 800a38a:	2008      	movs	r0, #8
 800a38c:	e7f1      	b.n	800a372 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a38e:	2000      	movs	r0, #0
 800a390:	e7ef      	b.n	800a372 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a392:	bf00      	nop
 800a394:	0801efe9 	.word	0x0801efe9
 800a398:	0801f3bc 	.word	0x0801f3bc
 800a39c:	0801ef6d 	.word	0x0801ef6d

0800a3a0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800a3a0:	b570      	push	{r4, r5, r6, lr}
 800a3a2:	460d      	mov	r5, r1
 800a3a4:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800a3a8:	4616      	mov	r6, r2
 800a3aa:	461c      	mov	r4, r3
 800a3ac:	f7ff ffd4 	bl	800a358 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800a3b0:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800a3b4:	10c0      	asrs	r0, r0, #3
 800a3b6:	fb06 5101 	mla	r1, r6, r1, r5
 800a3ba:	fb00 4001 	mla	r0, r0, r1, r4
 800a3be:	bd70      	pop	{r4, r5, r6, pc}

0800a3c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800a3c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a3c4:	b08a      	sub	sp, #40	; 0x28
 800a3c6:	f04f 0c00 	mov.w	ip, #0
 800a3ca:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 800a3ce:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800a3d2:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800a3d6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800a3da:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
 800a3de:	f8cd c014 	str.w	ip, [sp, #20]
 800a3e2:	2d0b      	cmp	r5, #11
 800a3e4:	4604      	mov	r4, r0
 800a3e6:	469a      	mov	sl, r3
 800a3e8:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800a3ec:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a3f0:	d12d      	bne.n	800a44e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 800a3f2:	2080      	movs	r0, #128	; 0x80
 800a3f4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a3f8:	9204      	str	r2, [sp, #16]
 800a3fa:	4620      	mov	r0, r4
 800a3fc:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800a400:	f8ad 2020 	strh.w	r2, [sp, #32]
 800a404:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a408:	f8ad 701c 	strh.w	r7, [sp, #28]
 800a40c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a410:	f7ff fed2 	bl	800a1b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a414:	e9cd 9800 	strd	r9, r8, [sp]
 800a418:	4603      	mov	r3, r0
 800a41a:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800a41e:	4651      	mov	r1, sl
 800a420:	4620      	mov	r0, r4
 800a422:	f7ff ffbd 	bl	800a3a0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a426:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 800a42a:	9006      	str	r0, [sp, #24]
 800a42c:	f8ad 9022 	strh.w	r9, [sp, #34]	; 0x22
 800a430:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800a434:	f88d 8026 	strb.w	r8, [sp, #38]	; 0x26
 800a438:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
 800a43c:	b107      	cbz	r7, 800a440 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x80>
 800a43e:	b9d6      	cbnz	r6, 800a476 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb6>
 800a440:	4b17      	ldr	r3, [pc, #92]	; (800a4a0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe0>)
 800a442:	4a18      	ldr	r2, [pc, #96]	; (800a4a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 800a444:	f44f 71ea 	mov.w	r1, #468	; 0x1d4
 800a448:	4817      	ldr	r0, [pc, #92]	; (800a4a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800a44a:	f011 fb67 	bl	801bb1c <__assert_func>
 800a44e:	2d02      	cmp	r5, #2
 800a450:	d108      	bne.n	800a464 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa4>
 800a452:	2bff      	cmp	r3, #255	; 0xff
 800a454:	d104      	bne.n	800a460 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa0>
 800a456:	2800      	cmp	r0, #0
 800a458:	bf14      	ite	ne
 800a45a:	2040      	movne	r0, #64	; 0x40
 800a45c:	2020      	moveq	r0, #32
 800a45e:	e7c9      	b.n	800a3f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a460:	2040      	movs	r0, #64	; 0x40
 800a462:	e7c7      	b.n	800a3f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a464:	2bff      	cmp	r3, #255	; 0xff
 800a466:	d104      	bne.n	800a472 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb2>
 800a468:	2800      	cmp	r0, #0
 800a46a:	bf14      	ite	ne
 800a46c:	2004      	movne	r0, #4
 800a46e:	2001      	moveq	r0, #1
 800a470:	e7c0      	b.n	800a3f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a472:	2004      	movs	r0, #4
 800a474:	e7be      	b.n	800a3f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a476:	6823      	ldr	r3, [r4, #0]
 800a478:	9d02      	ldr	r5, [sp, #8]
 800a47a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a47c:	4620      	mov	r0, r4
 800a47e:	4798      	blx	r3
 800a480:	4228      	tst	r0, r5
 800a482:	d104      	bne.n	800a48e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xce>
 800a484:	4b09      	ldr	r3, [pc, #36]	; (800a4ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 800a486:	4a07      	ldr	r2, [pc, #28]	; (800a4a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 800a488:	f240 11d5 	movw	r1, #469	; 0x1d5
 800a48c:	e7dc      	b.n	800a448 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x88>
 800a48e:	6860      	ldr	r0, [r4, #4]
 800a490:	6803      	ldr	r3, [r0, #0]
 800a492:	a902      	add	r1, sp, #8
 800a494:	685b      	ldr	r3, [r3, #4]
 800a496:	4798      	blx	r3
 800a498:	b00a      	add	sp, #40	; 0x28
 800a49a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a49e:	bf00      	nop
 800a4a0:	0801edbb 	.word	0x0801edbb
 800a4a4:	0801f24a 	.word	0x0801f24a
 800a4a8:	0801ef6d 	.word	0x0801ef6d
 800a4ac:	0801edf3 	.word	0x0801edf3

0800a4b0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800a4b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a4b4:	b08b      	sub	sp, #44	; 0x2c
 800a4b6:	469b      	mov	fp, r3
 800a4b8:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800a4bc:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800a4c0:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800a4c4:	2fff      	cmp	r7, #255	; 0xff
 800a4c6:	bf14      	ite	ne
 800a4c8:	2308      	movne	r3, #8
 800a4ca:	2302      	moveq	r3, #2
 800a4cc:	2600      	movs	r6, #0
 800a4ce:	4604      	mov	r4, r0
 800a4d0:	4689      	mov	r9, r1
 800a4d2:	4692      	mov	sl, r2
 800a4d4:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800a4d8:	9605      	str	r6, [sp, #20]
 800a4da:	f7ff fe6d 	bl	800a1b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a4de:	e9cd 8500 	strd	r8, r5, [sp]
 800a4e2:	4603      	mov	r3, r0
 800a4e4:	465a      	mov	r2, fp
 800a4e6:	4651      	mov	r1, sl
 800a4e8:	4620      	mov	r0, r4
 800a4ea:	f7ff ff59 	bl	800a3a0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a4ee:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a4f2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a4f6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a4fa:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a4fe:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800a502:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
 800a506:	6823      	ldr	r3, [r4, #0]
 800a508:	9006      	str	r0, [sp, #24]
 800a50a:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800a50e:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800a512:	f8ad 6020 	strh.w	r6, [sp, #32]
 800a516:	f8ad 8022 	strh.w	r8, [sp, #34]	; 0x22
 800a51a:	f8cd 9014 	str.w	r9, [sp, #20]
 800a51e:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800a522:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a524:	9d02      	ldr	r5, [sp, #8]
 800a526:	4620      	mov	r0, r4
 800a528:	4798      	blx	r3
 800a52a:	4228      	tst	r0, r5
 800a52c:	d106      	bne.n	800a53c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>
 800a52e:	4b07      	ldr	r3, [pc, #28]	; (800a54c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x9c>)
 800a530:	4a07      	ldr	r2, [pc, #28]	; (800a550 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 800a532:	4808      	ldr	r0, [pc, #32]	; (800a554 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 800a534:	f240 2137 	movw	r1, #567	; 0x237
 800a538:	f011 faf0 	bl	801bb1c <__assert_func>
 800a53c:	6860      	ldr	r0, [r4, #4]
 800a53e:	6803      	ldr	r3, [r0, #0]
 800a540:	a902      	add	r1, sp, #8
 800a542:	685b      	ldr	r3, [r3, #4]
 800a544:	4798      	blx	r3
 800a546:	b00b      	add	sp, #44	; 0x2c
 800a548:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a54c:	0801edf3 	.word	0x0801edf3
 800a550:	0801f321 	.word	0x0801f321
 800a554:	0801ef6d 	.word	0x0801ef6d

0800a558 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a558:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a55c:	461f      	mov	r7, r3
 800a55e:	4b0b      	ldr	r3, [pc, #44]	; (800a58c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a560:	460d      	mov	r5, r1
 800a562:	f8b3 8000 	ldrh.w	r8, [r3]
 800a566:	4616      	mov	r6, r2
 800a568:	4604      	mov	r4, r0
 800a56a:	f7ff fc65 	bl	8009e38 <_ZN8touchgfx3HAL3lcdEv>
 800a56e:	6803      	ldr	r3, [r0, #0]
 800a570:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a572:	4798      	blx	r3
 800a574:	463b      	mov	r3, r7
 800a576:	e9cd 8000 	strd	r8, r0, [sp]
 800a57a:	4632      	mov	r2, r6
 800a57c:	4629      	mov	r1, r5
 800a57e:	4620      	mov	r0, r4
 800a580:	f7ff ff0e 	bl	800a3a0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a584:	b002      	add	sp, #8
 800a586:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a58a:	bf00      	nop
 800a58c:	20013502 	.word	0x20013502

0800a590 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800a590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a594:	b088      	sub	sp, #32
 800a596:	4698      	mov	r8, r3
 800a598:	2300      	movs	r3, #0
 800a59a:	9303      	str	r3, [sp, #12]
 800a59c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a5a0:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800a5a4:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800a5a8:	f8ad 6014 	strh.w	r6, [sp, #20]
 800a5ac:	e9cd 3100 	strd	r3, r1, [sp]
 800a5b0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a5b4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a5b8:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800a5bc:	f88d 301c 	strb.w	r3, [sp, #28]
 800a5c0:	4617      	mov	r7, r2
 800a5c2:	4604      	mov	r4, r0
 800a5c4:	f8ad 5016 	strh.w	r5, [sp, #22]
 800a5c8:	f7ff fdf6 	bl	800a1b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a5cc:	4642      	mov	r2, r8
 800a5ce:	4603      	mov	r3, r0
 800a5d0:	4639      	mov	r1, r7
 800a5d2:	4620      	mov	r0, r4
 800a5d4:	f7ff ffc0 	bl	800a558 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a5d8:	4b18      	ldr	r3, [pc, #96]	; (800a63c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xac>)
 800a5da:	9004      	str	r0, [sp, #16]
 800a5dc:	881b      	ldrh	r3, [r3, #0]
 800a5de:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a5e2:	f7ff fc29 	bl	8009e38 <_ZN8touchgfx3HAL3lcdEv>
 800a5e6:	6803      	ldr	r3, [r0, #0]
 800a5e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a5ea:	4798      	blx	r3
 800a5ec:	f88d 001e 	strb.w	r0, [sp, #30]
 800a5f0:	f88d 001d 	strb.w	r0, [sp, #29]
 800a5f4:	b106      	cbz	r6, 800a5f8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 800a5f6:	b935      	cbnz	r5, 800a606 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 800a5f8:	4b11      	ldr	r3, [pc, #68]	; (800a640 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 800a5fa:	4a12      	ldr	r2, [pc, #72]	; (800a644 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 800a5fc:	f240 11f1 	movw	r1, #497	; 0x1f1
 800a600:	4811      	ldr	r0, [pc, #68]	; (800a648 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800a602:	f011 fa8b 	bl	801bb1c <__assert_func>
 800a606:	6823      	ldr	r3, [r4, #0]
 800a608:	9d00      	ldr	r5, [sp, #0]
 800a60a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a60c:	4620      	mov	r0, r4
 800a60e:	4798      	blx	r3
 800a610:	4228      	tst	r0, r5
 800a612:	d104      	bne.n	800a61e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 800a614:	4b0d      	ldr	r3, [pc, #52]	; (800a64c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 800a616:	4a0b      	ldr	r2, [pc, #44]	; (800a644 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 800a618:	f44f 71f9 	mov.w	r1, #498	; 0x1f2
 800a61c:	e7f0      	b.n	800a600 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 800a61e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a620:	9303      	str	r3, [sp, #12]
 800a622:	6860      	ldr	r0, [r4, #4]
 800a624:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800a628:	f88d 301f 	strb.w	r3, [sp, #31]
 800a62c:	6803      	ldr	r3, [r0, #0]
 800a62e:	4669      	mov	r1, sp
 800a630:	685b      	ldr	r3, [r3, #4]
 800a632:	4798      	blx	r3
 800a634:	b008      	add	sp, #32
 800a636:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a63a:	bf00      	nop
 800a63c:	20013502 	.word	0x20013502
 800a640:	0801edbb 	.word	0x0801edbb
 800a644:	0801f0f6 	.word	0x0801f0f6
 800a648:	0801ef6d 	.word	0x0801ef6d
 800a64c:	0801edf3 	.word	0x0801edf3

0800a650 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a650:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a652:	b08b      	sub	sp, #44	; 0x2c
 800a654:	466b      	mov	r3, sp
 800a656:	e883 0006 	stmia.w	r3, {r1, r2}
 800a65a:	4b21      	ldr	r3, [pc, #132]	; (800a6e0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800a65c:	781b      	ldrb	r3, [r3, #0]
 800a65e:	4604      	mov	r4, r0
 800a660:	b933      	cbnz	r3, 800a670 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800a662:	4b20      	ldr	r3, [pc, #128]	; (800a6e4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800a664:	4a20      	ldr	r2, [pc, #128]	; (800a6e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800a666:	4821      	ldr	r0, [pc, #132]	; (800a6ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800a668:	f44f 7112 	mov.w	r1, #584	; 0x248
 800a66c:	f011 fa56 	bl	801bb1c <__assert_func>
 800a670:	2301      	movs	r3, #1
 800a672:	9302      	str	r3, [sp, #8]
 800a674:	6803      	ldr	r3, [r0, #0]
 800a676:	f8bd 6000 	ldrh.w	r6, [sp]
 800a67a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a67c:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a680:	2500      	movs	r5, #0
 800a682:	9505      	str	r5, [sp, #20]
 800a684:	4798      	blx	r3
 800a686:	463a      	mov	r2, r7
 800a688:	4631      	mov	r1, r6
 800a68a:	4603      	mov	r3, r0
 800a68c:	4620      	mov	r0, r4
 800a68e:	f7ff ff63 	bl	800a558 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a692:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a694:	9306      	str	r3, [sp, #24]
 800a696:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a69a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a69e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a6a2:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a6a6:	4b12      	ldr	r3, [pc, #72]	; (800a6f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 800a6a8:	9003      	str	r0, [sp, #12]
 800a6aa:	881b      	ldrh	r3, [r3, #0]
 800a6ac:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a6b0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a6b4:	f7ff fbc0 	bl	8009e38 <_ZN8touchgfx3HAL3lcdEv>
 800a6b8:	6803      	ldr	r3, [r0, #0]
 800a6ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a6bc:	4798      	blx	r3
 800a6be:	23ff      	movs	r3, #255	; 0xff
 800a6c0:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a6c4:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a6c8:	6860      	ldr	r0, [r4, #4]
 800a6ca:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a6ce:	f88d 5027 	strb.w	r5, [sp, #39]	; 0x27
 800a6d2:	6803      	ldr	r3, [r0, #0]
 800a6d4:	a902      	add	r1, sp, #8
 800a6d6:	685b      	ldr	r3, [r3, #4]
 800a6d8:	4798      	blx	r3
 800a6da:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a6dc:	b00b      	add	sp, #44	; 0x2c
 800a6de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a6e0:	20013507 	.word	0x20013507
 800a6e4:	0801eeba 	.word	0x0801eeba
 800a6e8:	0801f1a0 	.word	0x0801f1a0
 800a6ec:	0801ef6d 	.word	0x0801ef6d
 800a6f0:	20013502 	.word	0x20013502

0800a6f4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a6f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6f8:	b08a      	sub	sp, #40	; 0x28
 800a6fa:	466d      	mov	r5, sp
 800a6fc:	e885 0006 	stmia.w	r5, {r1, r2}
 800a700:	461d      	mov	r5, r3
 800a702:	2301      	movs	r3, #1
 800a704:	9302      	str	r3, [sp, #8]
 800a706:	6803      	ldr	r3, [r0, #0]
 800a708:	f8bd 7000 	ldrh.w	r7, [sp]
 800a70c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a70e:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800a712:	2600      	movs	r6, #0
 800a714:	9605      	str	r6, [sp, #20]
 800a716:	4604      	mov	r4, r0
 800a718:	4798      	blx	r3
 800a71a:	4642      	mov	r2, r8
 800a71c:	4639      	mov	r1, r7
 800a71e:	4603      	mov	r3, r0
 800a720:	4620      	mov	r0, r4
 800a722:	f7ff ff19 	bl	800a558 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a726:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a72a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a72e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a732:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a736:	4b10      	ldr	r3, [pc, #64]	; (800a778 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x84>)
 800a738:	9003      	str	r0, [sp, #12]
 800a73a:	881b      	ldrh	r3, [r3, #0]
 800a73c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a740:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a742:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a746:	9506      	str	r5, [sp, #24]
 800a748:	f7ff fb76 	bl	8009e38 <_ZN8touchgfx3HAL3lcdEv>
 800a74c:	6803      	ldr	r3, [r0, #0]
 800a74e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a750:	4798      	blx	r3
 800a752:	23ff      	movs	r3, #255	; 0xff
 800a754:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a758:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a75c:	6860      	ldr	r0, [r4, #4]
 800a75e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a762:	f88d 6027 	strb.w	r6, [sp, #39]	; 0x27
 800a766:	6803      	ldr	r3, [r0, #0]
 800a768:	a902      	add	r1, sp, #8
 800a76a:	685b      	ldr	r3, [r3, #4]
 800a76c:	4798      	blx	r3
 800a76e:	4628      	mov	r0, r5
 800a770:	b00a      	add	sp, #40	; 0x28
 800a772:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a776:	bf00      	nop
 800a778:	20013502 	.word	0x20013502

0800a77c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a77c:	b570      	push	{r4, r5, r6, lr}
 800a77e:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a782:	4604      	mov	r4, r0
 800a784:	b19b      	cbz	r3, 800a7ae <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a786:	2002      	movs	r0, #2
 800a788:	f7f5 ffde 	bl	8000748 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a78c:	2300      	movs	r3, #0
 800a78e:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a792:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a796:	6823      	ldr	r3, [r4, #0]
 800a798:	4620      	mov	r0, r4
 800a79a:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800a79e:	f7ff fd0b 	bl	800a1b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a7a2:	462b      	mov	r3, r5
 800a7a4:	4601      	mov	r1, r0
 800a7a6:	4620      	mov	r0, r4
 800a7a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a7ac:	4718      	bx	r3
 800a7ae:	bd70      	pop	{r4, r5, r6, pc}

0800a7b0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a7b0:	4770      	bx	lr

0800a7b2 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a7b2:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a7b6:	1a13      	subs	r3, r2, r0
 800a7b8:	4258      	negs	r0, r3
 800a7ba:	4158      	adcs	r0, r3
 800a7bc:	4770      	bx	lr

0800a7be <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a7be:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a7c2:	1a9b      	subs	r3, r3, r2
 800a7c4:	2b00      	cmp	r3, #0
 800a7c6:	bfdc      	itt	le
 800a7c8:	6882      	ldrle	r2, [r0, #8]
 800a7ca:	189b      	addle	r3, r3, r2
 800a7cc:	2b01      	cmp	r3, #1
 800a7ce:	bfcc      	ite	gt
 800a7d0:	2000      	movgt	r0, #0
 800a7d2:	2001      	movle	r0, #1
 800a7d4:	4770      	bx	lr

0800a7d6 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a7d6:	6902      	ldr	r2, [r0, #16]
 800a7d8:	6840      	ldr	r0, [r0, #4]
 800a7da:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800a7de:	4770      	bx	lr

0800a7e0 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a7e0:	6803      	ldr	r3, [r0, #0]
 800a7e2:	691b      	ldr	r3, [r3, #16]
 800a7e4:	4718      	bx	r3

0800a7e6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a7e6:	4770      	bx	lr

0800a7e8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a7e8:	4770      	bx	lr

0800a7ea <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a7ea:	4770      	bx	lr

0800a7ec <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a7ec:	b570      	push	{r4, r5, r6, lr}
 800a7ee:	2301      	movs	r3, #1
 800a7f0:	7203      	strb	r3, [r0, #8]
 800a7f2:	4604      	mov	r4, r0
 800a7f4:	6840      	ldr	r0, [r0, #4]
 800a7f6:	6803      	ldr	r3, [r0, #0]
 800a7f8:	699b      	ldr	r3, [r3, #24]
 800a7fa:	4798      	blx	r3
 800a7fc:	6803      	ldr	r3, [r0, #0]
 800a7fe:	2b40      	cmp	r3, #64	; 0x40
 800a800:	4605      	mov	r5, r0
 800a802:	d039      	beq.n	800a878 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a804:	d815      	bhi.n	800a832 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800a806:	2b04      	cmp	r3, #4
 800a808:	d022      	beq.n	800a850 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a80a:	d808      	bhi.n	800a81e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a80c:	2b01      	cmp	r3, #1
 800a80e:	d033      	beq.n	800a878 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a810:	2b02      	cmp	r3, #2
 800a812:	d108      	bne.n	800a826 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800a814:	6823      	ldr	r3, [r4, #0]
 800a816:	4620      	mov	r0, r4
 800a818:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a81a:	4798      	blx	r3
 800a81c:	e025      	b.n	800a86a <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800a81e:	2b08      	cmp	r3, #8
 800a820:	d01e      	beq.n	800a860 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800a822:	2b20      	cmp	r3, #32
 800a824:	d028      	beq.n	800a878 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a826:	4b17      	ldr	r3, [pc, #92]	; (800a884 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800a828:	4a17      	ldr	r2, [pc, #92]	; (800a888 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800a82a:	4818      	ldr	r0, [pc, #96]	; (800a88c <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800a82c:	218b      	movs	r1, #139	; 0x8b
 800a82e:	f011 f975 	bl	801bb1c <__assert_func>
 800a832:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a836:	d01f      	beq.n	800a878 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a838:	d804      	bhi.n	800a844 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800a83a:	2b80      	cmp	r3, #128	; 0x80
 800a83c:	d01c      	beq.n	800a878 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a83e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a842:	e7ef      	b.n	800a824 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800a844:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a848:	d016      	beq.n	800a878 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a84a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a84e:	e7e0      	b.n	800a812 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a850:	6823      	ldr	r3, [r4, #0]
 800a852:	7f01      	ldrb	r1, [r0, #28]
 800a854:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a856:	4620      	mov	r0, r4
 800a858:	4798      	blx	r3
 800a85a:	6823      	ldr	r3, [r4, #0]
 800a85c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a85e:	e006      	b.n	800a86e <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a860:	6823      	ldr	r3, [r4, #0]
 800a862:	7f01      	ldrb	r1, [r0, #28]
 800a864:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a866:	4620      	mov	r0, r4
 800a868:	4798      	blx	r3
 800a86a:	6823      	ldr	r3, [r4, #0]
 800a86c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a86e:	4629      	mov	r1, r5
 800a870:	4620      	mov	r0, r4
 800a872:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a876:	4718      	bx	r3
 800a878:	6823      	ldr	r3, [r4, #0]
 800a87a:	4620      	mov	r0, r4
 800a87c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a87e:	4798      	blx	r3
 800a880:	e7eb      	b.n	800a85a <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800a882:	bf00      	nop
 800a884:	0801f405 	.word	0x0801f405
 800a888:	0801f4c4 	.word	0x0801f4c4
 800a88c:	0801f42a 	.word	0x0801f42a

0800a890 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a890:	b570      	push	{r4, r5, r6, lr}
 800a892:	4604      	mov	r4, r0
 800a894:	460e      	mov	r6, r1
 800a896:	6860      	ldr	r0, [r4, #4]
 800a898:	6803      	ldr	r3, [r0, #0]
 800a89a:	685b      	ldr	r3, [r3, #4]
 800a89c:	4798      	blx	r3
 800a89e:	2800      	cmp	r0, #0
 800a8a0:	d1f9      	bne.n	800a896 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a8a2:	4d0d      	ldr	r5, [pc, #52]	; (800a8d8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a8a4:	6828      	ldr	r0, [r5, #0]
 800a8a6:	6803      	ldr	r3, [r0, #0]
 800a8a8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a8aa:	4798      	blx	r3
 800a8ac:	f7f6 f84a 	bl	8000944 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a8b0:	6828      	ldr	r0, [r5, #0]
 800a8b2:	2101      	movs	r1, #1
 800a8b4:	f7ff ff7c 	bl	800a7b0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a8b8:	6860      	ldr	r0, [r4, #4]
 800a8ba:	6803      	ldr	r3, [r0, #0]
 800a8bc:	4631      	mov	r1, r6
 800a8be:	689b      	ldr	r3, [r3, #8]
 800a8c0:	4798      	blx	r3
 800a8c2:	6823      	ldr	r3, [r4, #0]
 800a8c4:	4620      	mov	r0, r4
 800a8c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a8c8:	4798      	blx	r3
 800a8ca:	6828      	ldr	r0, [r5, #0]
 800a8cc:	6803      	ldr	r3, [r0, #0]
 800a8ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a8d2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a8d4:	4718      	bx	r3
 800a8d6:	bf00      	nop
 800a8d8:	20013508 	.word	0x20013508

0800a8dc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a8dc:	b508      	push	{r3, lr}
 800a8de:	f7f6 f823 	bl	8000928 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a8e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a8e6:	f7f6 b827 	b.w	8000938 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a8ea <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a8ea:	b510      	push	{r4, lr}
 800a8ec:	2114      	movs	r1, #20
 800a8ee:	4604      	mov	r4, r0
 800a8f0:	f011 f8e5 	bl	801babe <_ZdlPvj>
 800a8f4:	4620      	mov	r0, r4
 800a8f6:	bd10      	pop	{r4, pc}

0800a8f8 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a8f8:	b510      	push	{r4, lr}
 800a8fa:	4604      	mov	r4, r0
 800a8fc:	6840      	ldr	r0, [r0, #4]
 800a8fe:	6803      	ldr	r3, [r0, #0]
 800a900:	681b      	ldr	r3, [r3, #0]
 800a902:	4798      	blx	r3
 800a904:	b948      	cbnz	r0, 800a91a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a906:	7a63      	ldrb	r3, [r4, #9]
 800a908:	b13b      	cbz	r3, 800a91a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a90a:	7a23      	ldrb	r3, [r4, #8]
 800a90c:	b92b      	cbnz	r3, 800a91a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a90e:	6823      	ldr	r3, [r4, #0]
 800a910:	4620      	mov	r0, r4
 800a912:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a914:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a918:	4718      	bx	r3
 800a91a:	bd10      	pop	{r4, pc}

0800a91c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a91c:	b570      	push	{r4, r5, r6, lr}
 800a91e:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a922:	1a9b      	subs	r3, r3, r2
 800a924:	2b00      	cmp	r3, #0
 800a926:	4606      	mov	r6, r0
 800a928:	bfdc      	itt	le
 800a92a:	6880      	ldrle	r0, [r0, #8]
 800a92c:	181b      	addle	r3, r3, r0
 800a92e:	2b01      	cmp	r3, #1
 800a930:	dd13      	ble.n	800a95a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x3e>
 800a932:	6874      	ldr	r4, [r6, #4]
 800a934:	460d      	mov	r5, r1
 800a936:	eb04 1442 	add.w	r4, r4, r2, lsl #5
 800a93a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a93c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a93e:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800a942:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a946:	68f3      	ldr	r3, [r6, #12]
 800a948:	68b2      	ldr	r2, [r6, #8]
 800a94a:	f3bf 8f5b 	dmb	ish
 800a94e:	3301      	adds	r3, #1
 800a950:	429a      	cmp	r2, r3
 800a952:	bfd8      	it	le
 800a954:	1a9b      	suble	r3, r3, r2
 800a956:	60f3      	str	r3, [r6, #12]
 800a958:	bd70      	pop	{r4, r5, r6, pc}
 800a95a:	4b03      	ldr	r3, [pc, #12]	; (800a968 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x4c>)
 800a95c:	4a03      	ldr	r2, [pc, #12]	; (800a96c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 800a95e:	4804      	ldr	r0, [pc, #16]	; (800a970 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800a960:	2139      	movs	r1, #57	; 0x39
 800a962:	f011 f8db 	bl	801bb1c <__assert_func>
 800a966:	bf00      	nop
 800a968:	0801f450 	.word	0x0801f450
 800a96c:	0801f4f4 	.word	0x0801f4f4
 800a970:	0801f42a 	.word	0x0801f42a

0800a974 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a974:	b510      	push	{r4, lr}
 800a976:	6803      	ldr	r3, [r0, #0]
 800a978:	681b      	ldr	r3, [r3, #0]
 800a97a:	4604      	mov	r4, r0
 800a97c:	4798      	blx	r3
 800a97e:	b128      	cbz	r0, 800a98c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800a980:	4b07      	ldr	r3, [pc, #28]	; (800a9a0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800a982:	4a08      	ldr	r2, [pc, #32]	; (800a9a4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800a984:	4808      	ldr	r0, [pc, #32]	; (800a9a8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800a986:	213f      	movs	r1, #63	; 0x3f
 800a988:	f011 f8c8 	bl	801bb1c <__assert_func>
 800a98c:	6923      	ldr	r3, [r4, #16]
 800a98e:	68a2      	ldr	r2, [r4, #8]
 800a990:	f3bf 8f5b 	dmb	ish
 800a994:	3301      	adds	r3, #1
 800a996:	429a      	cmp	r2, r3
 800a998:	bfd8      	it	le
 800a99a:	1a9b      	suble	r3, r3, r2
 800a99c:	6123      	str	r3, [r4, #16]
 800a99e:	bd10      	pop	{r4, pc}
 800a9a0:	0801f473 	.word	0x0801f473
 800a9a4:	0801f542 	.word	0x0801f542
 800a9a8:	0801f42a 	.word	0x0801f42a

0800a9ac <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a9ac:	b570      	push	{r4, r5, r6, lr}
 800a9ae:	4604      	mov	r4, r0
 800a9b0:	6840      	ldr	r0, [r0, #4]
 800a9b2:	6803      	ldr	r3, [r0, #0]
 800a9b4:	681b      	ldr	r3, [r3, #0]
 800a9b6:	4798      	blx	r3
 800a9b8:	4605      	mov	r5, r0
 800a9ba:	b930      	cbnz	r0, 800a9ca <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a9bc:	7a23      	ldrb	r3, [r4, #8]
 800a9be:	b123      	cbz	r3, 800a9ca <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a9c0:	6860      	ldr	r0, [r4, #4]
 800a9c2:	6803      	ldr	r3, [r0, #0]
 800a9c4:	695b      	ldr	r3, [r3, #20]
 800a9c6:	4798      	blx	r3
 800a9c8:	7225      	strb	r5, [r4, #8]
 800a9ca:	6860      	ldr	r0, [r4, #4]
 800a9cc:	6803      	ldr	r3, [r0, #0]
 800a9ce:	681b      	ldr	r3, [r3, #0]
 800a9d0:	4798      	blx	r3
 800a9d2:	b928      	cbnz	r0, 800a9e0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a9d4:	6823      	ldr	r3, [r4, #0]
 800a9d6:	4620      	mov	r0, r4
 800a9d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a9da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a9de:	4718      	bx	r3
 800a9e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a9e4:	f7f5 bfb6 	b.w	8000954 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a9e8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a9e8:	b510      	push	{r4, lr}
 800a9ea:	4c04      	ldr	r4, [pc, #16]	; (800a9fc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a9ec:	6082      	str	r2, [r0, #8]
 800a9ee:	2200      	movs	r2, #0
 800a9f0:	e9c0 4100 	strd	r4, r1, [r0]
 800a9f4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a9f8:	bd10      	pop	{r4, pc}
 800a9fa:	bf00      	nop
 800a9fc:	0801f4a8 	.word	0x0801f4a8

0800aa00 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800aa00:	6840      	ldr	r0, [r0, #4]
 800aa02:	6803      	ldr	r3, [r0, #0]
 800aa04:	681b      	ldr	r3, [r3, #0]
 800aa06:	4718      	bx	r3

0800aa08 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800aa08:	2200      	movs	r2, #0
 800aa0a:	8002      	strh	r2, [r0, #0]
 800aa0c:	8042      	strh	r2, [r0, #2]
 800aa0e:	8082      	strh	r2, [r0, #4]
 800aa10:	80c2      	strh	r2, [r0, #6]
 800aa12:	4770      	bx	lr

0800aa14 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800aa14:	b570      	push	{r4, r5, r6, lr}
 800aa16:	6803      	ldr	r3, [r0, #0]
 800aa18:	4604      	mov	r4, r0
 800aa1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa1c:	4615      	mov	r5, r2
 800aa1e:	4798      	blx	r3
 800aa20:	6823      	ldr	r3, [r4, #0]
 800aa22:	4629      	mov	r1, r5
 800aa24:	4620      	mov	r0, r4
 800aa26:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800aa28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa2c:	4718      	bx	r3

0800aa2e <_ZN8touchgfx8TextAreaD1Ev>:
 800aa2e:	4770      	bx	lr

0800aa30 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800aa30:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aa32:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800aa34:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800aa38:	4299      	cmp	r1, r3
 800aa3a:	d029      	beq.n	800aa90 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800aa3c:	4b15      	ldr	r3, [pc, #84]	; (800aa94 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800aa3e:	681b      	ldr	r3, [r3, #0]
 800aa40:	b92b      	cbnz	r3, 800aa4e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800aa42:	4b15      	ldr	r3, [pc, #84]	; (800aa98 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800aa44:	4a15      	ldr	r2, [pc, #84]	; (800aa9c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800aa46:	21ae      	movs	r1, #174	; 0xae
 800aa48:	4815      	ldr	r0, [pc, #84]	; (800aaa0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800aa4a:	f011 f867 	bl	801bb1c <__assert_func>
 800aa4e:	4a15      	ldr	r2, [pc, #84]	; (800aaa4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800aa50:	8812      	ldrh	r2, [r2, #0]
 800aa52:	428a      	cmp	r2, r1
 800aa54:	d803      	bhi.n	800aa5e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800aa56:	4b14      	ldr	r3, [pc, #80]	; (800aaa8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800aa58:	4a10      	ldr	r2, [pc, #64]	; (800aa9c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800aa5a:	21af      	movs	r1, #175	; 0xaf
 800aa5c:	e7f4      	b.n	800aa48 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800aa5e:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800aa62:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800aa66:	4b11      	ldr	r3, [pc, #68]	; (800aaac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800aa68:	7854      	ldrb	r4, [r2, #1]
 800aa6a:	681b      	ldr	r3, [r3, #0]
 800aa6c:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800aa70:	682b      	ldr	r3, [r5, #0]
 800aa72:	69de      	ldr	r6, [r3, #28]
 800aa74:	4b0e      	ldr	r3, [pc, #56]	; (800aab0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800aa76:	6818      	ldr	r0, [r3, #0]
 800aa78:	f7f7 ff0e 	bl	8002898 <_ZNK8touchgfx5Texts7getTextEt>
 800aa7c:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800aa80:	2300      	movs	r3, #0
 800aa82:	4602      	mov	r2, r0
 800aa84:	9300      	str	r3, [sp, #0]
 800aa86:	4621      	mov	r1, r4
 800aa88:	4628      	mov	r0, r5
 800aa8a:	47b0      	blx	r6
 800aa8c:	b002      	add	sp, #8
 800aa8e:	bd70      	pop	{r4, r5, r6, pc}
 800aa90:	2000      	movs	r0, #0
 800aa92:	e7fb      	b.n	800aa8c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800aa94:	20013558 	.word	0x20013558
 800aa98:	0801ddb6 	.word	0x0801ddb6
 800aa9c:	0801f5ec 	.word	0x0801f5ec
 800aaa0:	0801de44 	.word	0x0801de44
 800aaa4:	2001355c 	.word	0x2001355c
 800aaa8:	0801de6d 	.word	0x0801de6d
 800aaac:	20013560 	.word	0x20013560
 800aab0:	20013564 	.word	0x20013564

0800aab4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800aab4:	b570      	push	{r4, r5, r6, lr}
 800aab6:	6803      	ldr	r3, [r0, #0]
 800aab8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800aaba:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800aabc:	4b11      	ldr	r3, [pc, #68]	; (800ab04 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800aabe:	681b      	ldr	r3, [r3, #0]
 800aac0:	4604      	mov	r4, r0
 800aac2:	b28d      	uxth	r5, r1
 800aac4:	b92b      	cbnz	r3, 800aad2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800aac6:	4b10      	ldr	r3, [pc, #64]	; (800ab08 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800aac8:	4a10      	ldr	r2, [pc, #64]	; (800ab0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800aaca:	21ae      	movs	r1, #174	; 0xae
 800aacc:	4810      	ldr	r0, [pc, #64]	; (800ab10 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800aace:	f011 f825 	bl	801bb1c <__assert_func>
 800aad2:	4910      	ldr	r1, [pc, #64]	; (800ab14 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800aad4:	8809      	ldrh	r1, [r1, #0]
 800aad6:	4291      	cmp	r1, r2
 800aad8:	d803      	bhi.n	800aae2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800aada:	4b0f      	ldr	r3, [pc, #60]	; (800ab18 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800aadc:	4a0b      	ldr	r2, [pc, #44]	; (800ab0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800aade:	21af      	movs	r1, #175	; 0xaf
 800aae0:	e7f4      	b.n	800aacc <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800aae2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800aae6:	4b0d      	ldr	r3, [pc, #52]	; (800ab1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800aae8:	681b      	ldr	r3, [r3, #0]
 800aaea:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800aaee:	6803      	ldr	r3, [r0, #0]
 800aaf0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aaf2:	4798      	blx	r3
 800aaf4:	1a29      	subs	r1, r5, r0
 800aaf6:	4633      	mov	r3, r6
 800aaf8:	4620      	mov	r0, r4
 800aafa:	b209      	sxth	r1, r1
 800aafc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ab00:	4718      	bx	r3
 800ab02:	bf00      	nop
 800ab04:	20013558 	.word	0x20013558
 800ab08:	0801ddb6 	.word	0x0801ddb6
 800ab0c:	0801f5ec 	.word	0x0801f5ec
 800ab10:	0801de44 	.word	0x0801de44
 800ab14:	2001355c 	.word	0x2001355c
 800ab18:	0801de6d 	.word	0x0801de6d
 800ab1c:	20013560 	.word	0x20013560

0800ab20 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800ab20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ab24:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800ab26:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ab2a:	4293      	cmp	r3, r2
 800ab2c:	b08c      	sub	sp, #48	; 0x30
 800ab2e:	4604      	mov	r4, r0
 800ab30:	4688      	mov	r8, r1
 800ab32:	d05f      	beq.n	800abf4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800ab34:	4e31      	ldr	r6, [pc, #196]	; (800abfc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800ab36:	6832      	ldr	r2, [r6, #0]
 800ab38:	b92a      	cbnz	r2, 800ab46 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800ab3a:	4b31      	ldr	r3, [pc, #196]	; (800ac00 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800ab3c:	4a31      	ldr	r2, [pc, #196]	; (800ac04 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800ab3e:	21ae      	movs	r1, #174	; 0xae
 800ab40:	4831      	ldr	r0, [pc, #196]	; (800ac08 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800ab42:	f010 ffeb 	bl	801bb1c <__assert_func>
 800ab46:	4d31      	ldr	r5, [pc, #196]	; (800ac0c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800ab48:	8829      	ldrh	r1, [r5, #0]
 800ab4a:	4299      	cmp	r1, r3
 800ab4c:	d803      	bhi.n	800ab56 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800ab4e:	4b30      	ldr	r3, [pc, #192]	; (800ac10 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800ab50:	4a2c      	ldr	r2, [pc, #176]	; (800ac04 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800ab52:	21af      	movs	r1, #175	; 0xaf
 800ab54:	e7f4      	b.n	800ab40 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800ab56:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800ab5a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ab5e:	4b2d      	ldr	r3, [pc, #180]	; (800ac14 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800ab60:	681b      	ldr	r3, [r3, #0]
 800ab62:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800ab66:	2a00      	cmp	r2, #0
 800ab68:	d044      	beq.n	800abf4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800ab6a:	784b      	ldrb	r3, [r1, #1]
 800ab6c:	9207      	str	r2, [sp, #28]
 800ab6e:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800ab72:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ab76:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800ab7a:	4b27      	ldr	r3, [pc, #156]	; (800ac18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800ab7c:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800ab80:	681b      	ldr	r3, [r3, #0]
 800ab82:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800ab86:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ab8a:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800ab8e:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800ab92:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800ab96:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ab98:	f88d a020 	strb.w	sl, [sp, #32]
 800ab9c:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800aba0:	9009      	str	r0, [sp, #36]	; 0x24
 800aba2:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800aba6:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800abaa:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800abae:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800abb2:	b10a      	cbz	r2, 800abb8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800abb4:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800abb6:	b907      	cbnz	r7, 800abba <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800abb8:	689f      	ldr	r7, [r3, #8]
 800abba:	f10d 0914 	add.w	r9, sp, #20
 800abbe:	4621      	mov	r1, r4
 800abc0:	4648      	mov	r0, r9
 800abc2:	f002 ff85 	bl	800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800abc6:	6833      	ldr	r3, [r6, #0]
 800abc8:	2b00      	cmp	r3, #0
 800abca:	d0b6      	beq.n	800ab3a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800abcc:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800abce:	882b      	ldrh	r3, [r5, #0]
 800abd0:	428b      	cmp	r3, r1
 800abd2:	d9bc      	bls.n	800ab4e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800abd4:	4b11      	ldr	r3, [pc, #68]	; (800ac1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800abd6:	6818      	ldr	r0, [r3, #0]
 800abd8:	f7f7 fe5e 	bl	8002898 <_ZNK8touchgfx5Texts7getTextEt>
 800abdc:	2300      	movs	r3, #0
 800abde:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800abe2:	ab07      	add	r3, sp, #28
 800abe4:	9001      	str	r0, [sp, #4]
 800abe6:	9300      	str	r3, [sp, #0]
 800abe8:	e899 0006 	ldmia.w	r9, {r1, r2}
 800abec:	4643      	mov	r3, r8
 800abee:	4638      	mov	r0, r7
 800abf0:	f7f7 fe04 	bl	80027fc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800abf4:	b00c      	add	sp, #48	; 0x30
 800abf6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800abfa:	bf00      	nop
 800abfc:	20013558 	.word	0x20013558
 800ac00:	0801ddb6 	.word	0x0801ddb6
 800ac04:	0801f5ec 	.word	0x0801f5ec
 800ac08:	0801de44 	.word	0x0801de44
 800ac0c:	2001355c 	.word	0x2001355c
 800ac10:	0801de6d 	.word	0x0801de6d
 800ac14:	20013560 	.word	0x20013560
 800ac18:	20013508 	.word	0x20013508
 800ac1c:	20013564 	.word	0x20013564

0800ac20 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800ac20:	b40e      	push	{r1, r2, r3}
 800ac22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac26:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800ac28:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ac2c:	4293      	cmp	r3, r2
 800ac2e:	b09c      	sub	sp, #112	; 0x70
 800ac30:	4604      	mov	r4, r0
 800ac32:	d06b      	beq.n	800ad0c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 800ac34:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 800ad20 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 800ac38:	aa26      	add	r2, sp, #152	; 0x98
 800ac3a:	9202      	str	r2, [sp, #8]
 800ac3c:	f8da 2000 	ldr.w	r2, [sl]
 800ac40:	b92a      	cbnz	r2, 800ac4e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800ac42:	4b33      	ldr	r3, [pc, #204]	; (800ad10 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 800ac44:	4a33      	ldr	r2, [pc, #204]	; (800ad14 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800ac46:	21ae      	movs	r1, #174	; 0xae
 800ac48:	4833      	ldr	r0, [pc, #204]	; (800ad18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>)
 800ac4a:	f010 ff67 	bl	801bb1c <__assert_func>
 800ac4e:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800ad24 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x104>
 800ac52:	f8b8 1000 	ldrh.w	r1, [r8]
 800ac56:	4299      	cmp	r1, r3
 800ac58:	d803      	bhi.n	800ac62 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800ac5a:	4b30      	ldr	r3, [pc, #192]	; (800ad1c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>)
 800ac5c:	4a2d      	ldr	r2, [pc, #180]	; (800ad14 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800ac5e:	21af      	movs	r1, #175	; 0xaf
 800ac60:	e7f2      	b.n	800ac48 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800ac62:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 800ad28 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x108>
 800ac66:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ac6a:	f8d9 3000 	ldr.w	r3, [r9]
 800ac6e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800ac72:	682b      	ldr	r3, [r5, #0]
 800ac74:	4628      	mov	r0, r5
 800ac76:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ac78:	4798      	blx	r3
 800ac7a:	4606      	mov	r6, r0
 800ac7c:	b207      	sxth	r7, r0
 800ac7e:	a803      	add	r0, sp, #12
 800ac80:	f003 fade 	bl	800e240 <_ZN8touchgfx12TextProviderC1Ev>
 800ac84:	682b      	ldr	r3, [r5, #0]
 800ac86:	4628      	mov	r0, r5
 800ac88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ac8a:	4798      	blx	r3
 800ac8c:	682b      	ldr	r3, [r5, #0]
 800ac8e:	4683      	mov	fp, r0
 800ac90:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ac92:	4628      	mov	r0, r5
 800ac94:	4798      	blx	r3
 800ac96:	465b      	mov	r3, fp
 800ac98:	9000      	str	r0, [sp, #0]
 800ac9a:	9925      	ldr	r1, [sp, #148]	; 0x94
 800ac9c:	9a02      	ldr	r2, [sp, #8]
 800ac9e:	a803      	add	r0, sp, #12
 800aca0:	f003 fb21 	bl	800e2e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800aca4:	f8da 3000 	ldr.w	r3, [sl]
 800aca8:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800acac:	2b00      	cmp	r3, #0
 800acae:	d0c8      	beq.n	800ac42 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800acb0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800acb2:	f8b8 0000 	ldrh.w	r0, [r8]
 800acb6:	4290      	cmp	r0, r2
 800acb8:	d9cf      	bls.n	800ac5a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800acba:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 800acbe:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800acc2:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800acc6:	786a      	ldrb	r2, [r5, #1]
 800acc8:	8925      	ldrh	r5, [r4, #8]
 800acca:	f8d9 3000 	ldr.w	r3, [r9]
 800acce:	eba5 050c 	sub.w	r5, r5, ip
 800acd2:	b22d      	sxth	r5, r5
 800acd4:	9500      	str	r5, [sp, #0]
 800acd6:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800acda:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800acde:	a803      	add	r0, sp, #12
 800ace0:	f001 fa2e 	bl	800c140 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800ace4:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800ace8:	18b9      	adds	r1, r7, r2
 800acea:	2900      	cmp	r1, #0
 800acec:	b203      	sxth	r3, r0
 800acee:	dd0b      	ble.n	800ad08 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>
 800acf0:	3b01      	subs	r3, #1
 800acf2:	fb13 f302 	smulbb	r3, r3, r2
 800acf6:	fb16 3300 	smlabb	r3, r6, r0, r3
 800acfa:	b21f      	sxth	r7, r3
 800acfc:	4638      	mov	r0, r7
 800acfe:	b01c      	add	sp, #112	; 0x70
 800ad00:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad04:	b003      	add	sp, #12
 800ad06:	4770      	bx	lr
 800ad08:	2b00      	cmp	r3, #0
 800ad0a:	dcf7      	bgt.n	800acfc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>
 800ad0c:	2700      	movs	r7, #0
 800ad0e:	e7f5      	b.n	800acfc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>
 800ad10:	0801ddb6 	.word	0x0801ddb6
 800ad14:	0801f5ec 	.word	0x0801f5ec
 800ad18:	0801de44 	.word	0x0801de44
 800ad1c:	0801de6d 	.word	0x0801de6d
 800ad20:	20013558 	.word	0x20013558
 800ad24:	2001355c 	.word	0x2001355c
 800ad28:	20013560 	.word	0x20013560

0800ad2c <_ZN8touchgfx8TextAreaD0Ev>:
 800ad2c:	b510      	push	{r4, lr}
 800ad2e:	213c      	movs	r1, #60	; 0x3c
 800ad30:	4604      	mov	r4, r0
 800ad32:	f010 fec4 	bl	801babe <_ZdlPvj>
 800ad36:	4620      	mov	r0, r4
 800ad38:	bd10      	pop	{r4, pc}
	...

0800ad3c <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800ad3c:	b570      	push	{r4, r5, r6, lr}
 800ad3e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ad40:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ad44:	4299      	cmp	r1, r3
 800ad46:	4604      	mov	r4, r0
 800ad48:	d01e      	beq.n	800ad88 <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800ad4a:	6803      	ldr	r3, [r0, #0]
 800ad4c:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800ad4e:	4b0f      	ldr	r3, [pc, #60]	; (800ad8c <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800ad50:	681b      	ldr	r3, [r3, #0]
 800ad52:	b92b      	cbnz	r3, 800ad60 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800ad54:	4b0e      	ldr	r3, [pc, #56]	; (800ad90 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800ad56:	4a0f      	ldr	r2, [pc, #60]	; (800ad94 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800ad58:	21ae      	movs	r1, #174	; 0xae
 800ad5a:	480f      	ldr	r0, [pc, #60]	; (800ad98 <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800ad5c:	f010 fede 	bl	801bb1c <__assert_func>
 800ad60:	4b0e      	ldr	r3, [pc, #56]	; (800ad9c <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800ad62:	881b      	ldrh	r3, [r3, #0]
 800ad64:	428b      	cmp	r3, r1
 800ad66:	d803      	bhi.n	800ad70 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800ad68:	4b0d      	ldr	r3, [pc, #52]	; (800ada0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800ad6a:	4a0a      	ldr	r2, [pc, #40]	; (800ad94 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800ad6c:	21af      	movs	r1, #175	; 0xaf
 800ad6e:	e7f4      	b.n	800ad5a <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800ad70:	4b0c      	ldr	r3, [pc, #48]	; (800ada4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800ad72:	6818      	ldr	r0, [r3, #0]
 800ad74:	f7f7 fd90 	bl	8002898 <_ZNK8touchgfx5Texts7getTextEt>
 800ad78:	2300      	movs	r3, #0
 800ad7a:	4601      	mov	r1, r0
 800ad7c:	46ac      	mov	ip, r5
 800ad7e:	4620      	mov	r0, r4
 800ad80:	461a      	mov	r2, r3
 800ad82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ad86:	4760      	bx	ip
 800ad88:	2000      	movs	r0, #0
 800ad8a:	bd70      	pop	{r4, r5, r6, pc}
 800ad8c:	20013558 	.word	0x20013558
 800ad90:	0801ddb6 	.word	0x0801ddb6
 800ad94:	0801f5ec 	.word	0x0801f5ec
 800ad98:	0801de44 	.word	0x0801de44
 800ad9c:	2001355c 	.word	0x2001355c
 800ada0:	0801de6d 	.word	0x0801de6d
 800ada4:	20013564 	.word	0x20013564

0800ada8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800ada8:	b538      	push	{r3, r4, r5, lr}
 800adaa:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800adac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800adb0:	429a      	cmp	r2, r3
 800adb2:	4604      	mov	r4, r0
 800adb4:	d014      	beq.n	800ade0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800adb6:	6803      	ldr	r3, [r0, #0]
 800adb8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800adba:	4798      	blx	r3
 800adbc:	6823      	ldr	r3, [r4, #0]
 800adbe:	4605      	mov	r5, r0
 800adc0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800adc2:	4620      	mov	r0, r4
 800adc4:	4798      	blx	r3
 800adc6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800adca:	b22d      	sxth	r5, r5
 800adcc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800add0:	4601      	mov	r1, r0
 800add2:	bf06      	itte	eq
 800add4:	4602      	moveq	r2, r0
 800add6:	4629      	moveq	r1, r5
 800add8:	462a      	movne	r2, r5
 800adda:	4620      	mov	r0, r4
 800addc:	f7f8 f906 	bl	8002fec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800ade0:	bd38      	pop	{r3, r4, r5, pc}

0800ade2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800ade2:	888a      	ldrh	r2, [r1, #4]
 800ade4:	8582      	strh	r2, [r0, #44]	; 0x2c
 800ade6:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800adea:	b922      	cbnz	r2, 800adf6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800adec:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800adf0:	b90b      	cbnz	r3, 800adf6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800adf2:	f7ff bfd9 	b.w	800ada8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800adf6:	4770      	bx	lr

0800adf8 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800adf8:	2300      	movs	r3, #0
 800adfa:	8083      	strh	r3, [r0, #4]
 800adfc:	80c3      	strh	r3, [r0, #6]
 800adfe:	8003      	strh	r3, [r0, #0]
 800ae00:	8043      	strh	r3, [r0, #2]
 800ae02:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800ae06:	2bff      	cmp	r3, #255	; 0xff
 800ae08:	bf01      	itttt	eq
 800ae0a:	890b      	ldrheq	r3, [r1, #8]
 800ae0c:	8083      	strheq	r3, [r0, #4]
 800ae0e:	894b      	ldrheq	r3, [r1, #10]
 800ae10:	80c3      	strheq	r3, [r0, #6]
 800ae12:	4770      	bx	lr

0800ae14 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800ae14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ae16:	4604      	mov	r4, r0
 800ae18:	6808      	ldr	r0, [r1, #0]
 800ae1a:	6849      	ldr	r1, [r1, #4]
 800ae1c:	466b      	mov	r3, sp
 800ae1e:	c303      	stmia	r3!, {r0, r1}
 800ae20:	6823      	ldr	r3, [r4, #0]
 800ae22:	4669      	mov	r1, sp
 800ae24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ae26:	4620      	mov	r0, r4
 800ae28:	4798      	blx	r3
 800ae2a:	4b08      	ldr	r3, [pc, #32]	; (800ae4c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800ae2c:	681b      	ldr	r3, [r3, #0]
 800ae2e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ae32:	b10a      	cbz	r2, 800ae38 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800ae34:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ae36:	b900      	cbnz	r0, 800ae3a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800ae38:	6898      	ldr	r0, [r3, #8]
 800ae3a:	6803      	ldr	r3, [r0, #0]
 800ae3c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800ae3e:	699d      	ldr	r5, [r3, #24]
 800ae40:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800ae44:	4669      	mov	r1, sp
 800ae46:	47a8      	blx	r5
 800ae48:	b003      	add	sp, #12
 800ae4a:	bd30      	pop	{r4, r5, pc}
 800ae4c:	20013508 	.word	0x20013508

0800ae50 <_ZN8touchgfx3BoxD1Ev>:
 800ae50:	4770      	bx	lr

0800ae52 <_ZN8touchgfx3BoxD0Ev>:
 800ae52:	b510      	push	{r4, lr}
 800ae54:	212c      	movs	r1, #44	; 0x2c
 800ae56:	4604      	mov	r4, r0
 800ae58:	f010 fe31 	bl	801babe <_ZdlPvj>
 800ae5c:	4620      	mov	r0, r4
 800ae5e:	bd10      	pop	{r4, pc}

0800ae60 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 800ae60:	4770      	bx	lr
	...

0800ae64 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
 800ae64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ae66:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ae68:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ae6c:	4299      	cmp	r1, r3
 800ae6e:	4606      	mov	r6, r0
 800ae70:	d02a      	beq.n	800aec8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
 800ae72:	4b16      	ldr	r3, [pc, #88]	; (800aecc <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 800ae74:	681b      	ldr	r3, [r3, #0]
 800ae76:	b92b      	cbnz	r3, 800ae84 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 800ae78:	4b15      	ldr	r3, [pc, #84]	; (800aed0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 800ae7a:	4a16      	ldr	r2, [pc, #88]	; (800aed4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800ae7c:	21ae      	movs	r1, #174	; 0xae
 800ae7e:	4816      	ldr	r0, [pc, #88]	; (800aed8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 800ae80:	f010 fe4c 	bl	801bb1c <__assert_func>
 800ae84:	4a15      	ldr	r2, [pc, #84]	; (800aedc <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800ae86:	8812      	ldrh	r2, [r2, #0]
 800ae88:	428a      	cmp	r2, r1
 800ae8a:	d803      	bhi.n	800ae94 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 800ae8c:	4b14      	ldr	r3, [pc, #80]	; (800aee0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 800ae8e:	4a11      	ldr	r2, [pc, #68]	; (800aed4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800ae90:	21af      	movs	r1, #175	; 0xaf
 800ae92:	e7f4      	b.n	800ae7e <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
 800ae94:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ae98:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ae9c:	4b11      	ldr	r3, [pc, #68]	; (800aee4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
 800ae9e:	7854      	ldrb	r4, [r2, #1]
 800aea0:	681b      	ldr	r3, [r3, #0]
 800aea2:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800aea6:	682b      	ldr	r3, [r5, #0]
 800aea8:	69df      	ldr	r7, [r3, #28]
 800aeaa:	4b0f      	ldr	r3, [pc, #60]	; (800aee8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 800aeac:	6818      	ldr	r0, [r3, #0]
 800aeae:	f7f7 fcf3 	bl	8002898 <_ZNK8touchgfx5Texts7getTextEt>
 800aeb2:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800aeb6:	2300      	movs	r3, #0
 800aeb8:	9300      	str	r3, [sp, #0]
 800aeba:	4602      	mov	r2, r0
 800aebc:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 800aebe:	4621      	mov	r1, r4
 800aec0:	4628      	mov	r0, r5
 800aec2:	47b8      	blx	r7
 800aec4:	b003      	add	sp, #12
 800aec6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aec8:	2000      	movs	r0, #0
 800aeca:	e7fb      	b.n	800aec4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 800aecc:	20013558 	.word	0x20013558
 800aed0:	0801ddb6 	.word	0x0801ddb6
 800aed4:	0801f6f8 	.word	0x0801f6f8
 800aed8:	0801de44 	.word	0x0801de44
 800aedc:	2001355c 	.word	0x2001355c
 800aee0:	0801de6d 	.word	0x0801de6d
 800aee4:	20013560 	.word	0x20013560
 800aee8:	20013564 	.word	0x20013564

0800aeec <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
 800aeec:	b570      	push	{r4, r5, r6, lr}
 800aeee:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800aef0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800aef4:	4299      	cmp	r1, r3
 800aef6:	4604      	mov	r4, r0
 800aef8:	d01e      	beq.n	800af38 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 800aefa:	6803      	ldr	r3, [r0, #0]
 800aefc:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800aefe:	4b0f      	ldr	r3, [pc, #60]	; (800af3c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 800af00:	681b      	ldr	r3, [r3, #0]
 800af02:	b92b      	cbnz	r3, 800af10 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 800af04:	4b0e      	ldr	r3, [pc, #56]	; (800af40 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 800af06:	4a0f      	ldr	r2, [pc, #60]	; (800af44 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800af08:	21ae      	movs	r1, #174	; 0xae
 800af0a:	480f      	ldr	r0, [pc, #60]	; (800af48 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 800af0c:	f010 fe06 	bl	801bb1c <__assert_func>
 800af10:	4b0e      	ldr	r3, [pc, #56]	; (800af4c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 800af12:	881b      	ldrh	r3, [r3, #0]
 800af14:	428b      	cmp	r3, r1
 800af16:	d803      	bhi.n	800af20 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 800af18:	4b0d      	ldr	r3, [pc, #52]	; (800af50 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 800af1a:	4a0a      	ldr	r2, [pc, #40]	; (800af44 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800af1c:	21af      	movs	r1, #175	; 0xaf
 800af1e:	e7f4      	b.n	800af0a <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
 800af20:	4b0c      	ldr	r3, [pc, #48]	; (800af54 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 800af22:	6818      	ldr	r0, [r3, #0]
 800af24:	f7f7 fcb8 	bl	8002898 <_ZNK8touchgfx5Texts7getTextEt>
 800af28:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800af2a:	4601      	mov	r1, r0
 800af2c:	46ac      	mov	ip, r5
 800af2e:	4620      	mov	r0, r4
 800af30:	2300      	movs	r3, #0
 800af32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800af36:	4760      	bx	ip
 800af38:	2000      	movs	r0, #0
 800af3a:	bd70      	pop	{r4, r5, r6, pc}
 800af3c:	20013558 	.word	0x20013558
 800af40:	0801ddb6 	.word	0x0801ddb6
 800af44:	0801f6f8 	.word	0x0801f6f8
 800af48:	0801de44 	.word	0x0801de44
 800af4c:	2001355c 	.word	0x2001355c
 800af50:	0801de6d 	.word	0x0801de6d
 800af54:	20013564 	.word	0x20013564

0800af58 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800af58:	b510      	push	{r4, lr}
 800af5a:	2140      	movs	r1, #64	; 0x40
 800af5c:	4604      	mov	r4, r0
 800af5e:	f010 fdae 	bl	801babe <_ZdlPvj>
 800af62:	4620      	mov	r0, r4
 800af64:	bd10      	pop	{r4, pc}
	...

0800af68 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 800af68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800af6c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800af6e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800af72:	4293      	cmp	r3, r2
 800af74:	b08c      	sub	sp, #48	; 0x30
 800af76:	4604      	mov	r4, r0
 800af78:	460e      	mov	r6, r1
 800af7a:	d05d      	beq.n	800b038 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800af7c:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 800b05c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 800af80:	f8d8 2000 	ldr.w	r2, [r8]
 800af84:	b92a      	cbnz	r2, 800af92 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 800af86:	4b2e      	ldr	r3, [pc, #184]	; (800b040 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 800af88:	4a2e      	ldr	r2, [pc, #184]	; (800b044 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800af8a:	21ae      	movs	r1, #174	; 0xae
 800af8c:	482e      	ldr	r0, [pc, #184]	; (800b048 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 800af8e:	f010 fdc5 	bl	801bb1c <__assert_func>
 800af92:	4f2e      	ldr	r7, [pc, #184]	; (800b04c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 800af94:	8839      	ldrh	r1, [r7, #0]
 800af96:	4299      	cmp	r1, r3
 800af98:	d803      	bhi.n	800afa2 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 800af9a:	4b2d      	ldr	r3, [pc, #180]	; (800b050 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 800af9c:	4a29      	ldr	r2, [pc, #164]	; (800b044 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800af9e:	21af      	movs	r1, #175	; 0xaf
 800afa0:	e7f4      	b.n	800af8c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 800afa2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800afa6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800afaa:	4b2a      	ldr	r3, [pc, #168]	; (800b054 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 800afac:	681b      	ldr	r3, [r3, #0]
 800afae:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800afb2:	2a00      	cmp	r2, #0
 800afb4:	d040      	beq.n	800b038 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800afb6:	784b      	ldrb	r3, [r1, #1]
 800afb8:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800afbc:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800afc0:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800afc4:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800afc8:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 800afcc:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800afce:	9207      	str	r2, [sp, #28]
 800afd0:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800afd4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800afd8:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800afdc:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800afe0:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800afe4:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800afe8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800afec:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800aff0:	f88d a020 	strb.w	sl, [sp, #32]
 800aff4:	9009      	str	r0, [sp, #36]	; 0x24
 800aff6:	f7fe ff1f 	bl	8009e38 <_ZN8touchgfx3HAL3lcdEv>
 800affa:	ad05      	add	r5, sp, #20
 800affc:	4681      	mov	r9, r0
 800affe:	4621      	mov	r1, r4
 800b000:	4628      	mov	r0, r5
 800b002:	f002 fd65 	bl	800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b006:	f8d8 3000 	ldr.w	r3, [r8]
 800b00a:	2b00      	cmp	r3, #0
 800b00c:	d0bb      	beq.n	800af86 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 800b00e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800b010:	883b      	ldrh	r3, [r7, #0]
 800b012:	428b      	cmp	r3, r1
 800b014:	d9c1      	bls.n	800af9a <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 800b016:	4b10      	ldr	r3, [pc, #64]	; (800b058 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 800b018:	6818      	ldr	r0, [r3, #0]
 800b01a:	f7f7 fc3d 	bl	8002898 <_ZNK8touchgfx5Texts7getTextEt>
 800b01e:	2300      	movs	r3, #0
 800b020:	9303      	str	r3, [sp, #12]
 800b022:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b024:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800b028:	ab07      	add	r3, sp, #28
 800b02a:	9300      	str	r3, [sp, #0]
 800b02c:	e895 0006 	ldmia.w	r5, {r1, r2}
 800b030:	4633      	mov	r3, r6
 800b032:	4648      	mov	r0, r9
 800b034:	f7f7 fbe2 	bl	80027fc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800b038:	b00c      	add	sp, #48	; 0x30
 800b03a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b03e:	bf00      	nop
 800b040:	0801ddb6 	.word	0x0801ddb6
 800b044:	0801f6f8 	.word	0x0801f6f8
 800b048:	0801de44 	.word	0x0801de44
 800b04c:	2001355c 	.word	0x2001355c
 800b050:	0801de6d 	.word	0x0801de6d
 800b054:	20013560 	.word	0x20013560
 800b058:	20013564 	.word	0x20013564
 800b05c:	20013558 	.word	0x20013558

0800b060 <_ZN8touchgfx5ImageD1Ev>:
 800b060:	4770      	bx	lr

0800b062 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800b062:	b570      	push	{r4, r5, r6, lr}
 800b064:	880b      	ldrh	r3, [r1, #0]
 800b066:	84c3      	strh	r3, [r0, #38]	; 0x26
 800b068:	4604      	mov	r4, r0
 800b06a:	4608      	mov	r0, r1
 800b06c:	460d      	mov	r5, r1
 800b06e:	f004 fce9 	bl	800fa44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b072:	4606      	mov	r6, r0
 800b074:	4628      	mov	r0, r5
 800b076:	f004 fd1f 	bl	800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b07a:	6823      	ldr	r3, [r4, #0]
 800b07c:	4605      	mov	r5, r0
 800b07e:	b231      	sxth	r1, r6
 800b080:	4620      	mov	r0, r4
 800b082:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b084:	4798      	blx	r3
 800b086:	6823      	ldr	r3, [r4, #0]
 800b088:	b229      	sxth	r1, r5
 800b08a:	4620      	mov	r0, r4
 800b08c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b08e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b092:	4718      	bx	r3

0800b094 <_ZN8touchgfx5ImageD0Ev>:
 800b094:	b510      	push	{r4, lr}
 800b096:	212c      	movs	r1, #44	; 0x2c
 800b098:	4604      	mov	r4, r0
 800b09a:	f010 fd10 	bl	801babe <_ZdlPvj>
 800b09e:	4620      	mov	r0, r4
 800b0a0:	bd10      	pop	{r4, pc}

0800b0a2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800b0a2:	b510      	push	{r4, lr}
 800b0a4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800b0a8:	2bff      	cmp	r3, #255	; 0xff
 800b0aa:	4604      	mov	r4, r0
 800b0ac:	d006      	beq.n	800b0bc <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800b0ae:	2300      	movs	r3, #0
 800b0b0:	8003      	strh	r3, [r0, #0]
 800b0b2:	8043      	strh	r3, [r0, #2]
 800b0b4:	8083      	strh	r3, [r0, #4]
 800b0b6:	80c3      	strh	r3, [r0, #6]
 800b0b8:	4620      	mov	r0, r4
 800b0ba:	bd10      	pop	{r4, pc}
 800b0bc:	3126      	adds	r1, #38	; 0x26
 800b0be:	f004 fd35 	bl	800fb2c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b0c2:	e7f9      	b.n	800b0b8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800b0c4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800b0c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b0c8:	4604      	mov	r4, r0
 800b0ca:	b088      	sub	sp, #32
 800b0cc:	f854 3b26 	ldr.w	r3, [r4], #38
 800b0d0:	2500      	movs	r5, #0
 800b0d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b0d4:	460f      	mov	r7, r1
 800b0d6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800b0da:	a904      	add	r1, sp, #16
 800b0dc:	4606      	mov	r6, r0
 800b0de:	4798      	blx	r3
 800b0e0:	4620      	mov	r0, r4
 800b0e2:	f004 fcaf 	bl	800fa44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b0e6:	4680      	mov	r8, r0
 800b0e8:	4620      	mov	r0, r4
 800b0ea:	f004 fce5 	bl	800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b0ee:	9506      	str	r5, [sp, #24]
 800b0f0:	ad06      	add	r5, sp, #24
 800b0f2:	f8ad 001e 	strh.w	r0, [sp, #30]
 800b0f6:	4639      	mov	r1, r7
 800b0f8:	4628      	mov	r0, r5
 800b0fa:	f8ad 801c 	strh.w	r8, [sp, #28]
 800b0fe:	f7fe fbcb 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 800b102:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b106:	2b00      	cmp	r3, #0
 800b108:	dd19      	ble.n	800b13e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b10a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b10e:	2b00      	cmp	r3, #0
 800b110:	dd15      	ble.n	800b13e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b112:	4b0c      	ldr	r3, [pc, #48]	; (800b144 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800b114:	681b      	ldr	r3, [r3, #0]
 800b116:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b11a:	b10a      	cbz	r2, 800b120 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800b11c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b11e:	b900      	cbnz	r0, 800b122 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800b120:	6898      	ldr	r0, [r3, #8]
 800b122:	6801      	ldr	r1, [r0, #0]
 800b124:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800b128:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800b12c:	2701      	movs	r7, #1
 800b12e:	9702      	str	r7, [sp, #8]
 800b130:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800b134:	e9cd 5600 	strd	r5, r6, [sp]
 800b138:	688d      	ldr	r5, [r1, #8]
 800b13a:	4621      	mov	r1, r4
 800b13c:	47a8      	blx	r5
 800b13e:	b008      	add	sp, #32
 800b140:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b144:	20013508 	.word	0x20013508

0800b148 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800b148:	b510      	push	{r4, lr}
 800b14a:	6803      	ldr	r3, [r0, #0]
 800b14c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b14e:	460c      	mov	r4, r1
 800b150:	4798      	blx	r3
 800b152:	1b03      	subs	r3, r0, r4
 800b154:	4258      	negs	r0, r3
 800b156:	4158      	adcs	r0, r3
 800b158:	bd10      	pop	{r4, pc}
	...

0800b15c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800b15c:	4b01      	ldr	r3, [pc, #4]	; (800b164 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800b15e:	6019      	str	r1, [r3, #0]
 800b160:	4770      	bx	lr
 800b162:	bf00      	nop
 800b164:	20013510 	.word	0x20013510

0800b168 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b16c:	4696      	mov	lr, r2
 800b16e:	4605      	mov	r5, r0
 800b170:	4614      	mov	r4, r2
 800b172:	460e      	mov	r6, r1
 800b174:	461f      	mov	r7, r3
 800b176:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b17a:	b097      	sub	sp, #92	; 0x5c
 800b17c:	f10d 0c1c 	add.w	ip, sp, #28
 800b180:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b184:	f8de 3000 	ldr.w	r3, [lr]
 800b188:	f8cc 3000 	str.w	r3, [ip]
 800b18c:	f104 0e14 	add.w	lr, r4, #20
 800b190:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b194:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b198:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b19c:	f8de 3000 	ldr.w	r3, [lr]
 800b1a0:	f8cc 3000 	str.w	r3, [ip]
 800b1a4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b1a8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b1ac:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b1b0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b1b4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800b1b8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800b1bc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800b1c0:	f8de 3000 	ldr.w	r3, [lr]
 800b1c4:	f8cc 3000 	str.w	r3, [ip]
 800b1c8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b1ca:	682b      	ldr	r3, [r5, #0]
 800b1cc:	9201      	str	r2, [sp, #4]
 800b1ce:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b1d2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b1d4:	9200      	str	r2, [sp, #0]
 800b1d6:	f8cd 8008 	str.w	r8, [sp, #8]
 800b1da:	f8d3 b034 	ldr.w	fp, [r3, #52]	; 0x34
 800b1de:	aa07      	add	r2, sp, #28
 800b1e0:	463b      	mov	r3, r7
 800b1e2:	4631      	mov	r1, r6
 800b1e4:	4628      	mov	r0, r5
 800b1e6:	47d8      	blx	fp
 800b1e8:	46a6      	mov	lr, r4
 800b1ea:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b1ee:	f10d 0c1c 	add.w	ip, sp, #28
 800b1f2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b1f6:	f8de 3000 	ldr.w	r3, [lr]
 800b1fa:	f8cc 3000 	str.w	r3, [ip]
 800b1fe:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b202:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b206:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b20a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b20e:	343c      	adds	r4, #60	; 0x3c
 800b210:	f8de 3000 	ldr.w	r3, [lr]
 800b214:	f8cc 3000 	str.w	r3, [ip]
 800b218:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b21a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b21e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b222:	6823      	ldr	r3, [r4, #0]
 800b224:	f8cc 3000 	str.w	r3, [ip]
 800b228:	682b      	ldr	r3, [r5, #0]
 800b22a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b22e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b230:	9201      	str	r2, [sp, #4]
 800b232:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b234:	9200      	str	r2, [sp, #0]
 800b236:	f8cd 8008 	str.w	r8, [sp, #8]
 800b23a:	6b5c      	ldr	r4, [r3, #52]	; 0x34
 800b23c:	aa07      	add	r2, sp, #28
 800b23e:	463b      	mov	r3, r7
 800b240:	4631      	mov	r1, r6
 800b242:	4628      	mov	r0, r5
 800b244:	47a0      	blx	r4
 800b246:	b017      	add	sp, #92	; 0x5c
 800b248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b24c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800b24c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b250:	b08d      	sub	sp, #52	; 0x34
 800b252:	4688      	mov	r8, r1
 800b254:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b256:	f8d3 c000 	ldr.w	ip, [r3]
 800b25a:	680f      	ldr	r7, [r1, #0]
 800b25c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800b260:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800b264:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800b268:	edd3 6a07 	vldr	s13, [r3, #28]
 800b26c:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b26e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800b272:	f9b1 9000 	ldrsh.w	r9, [r1]
 800b276:	f9ba 1000 	ldrsh.w	r1, [sl]
 800b27a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800b27e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800b282:	eba7 070c 	sub.w	r7, r7, ip
 800b286:	42bc      	cmp	r4, r7
 800b288:	bfa8      	it	ge
 800b28a:	463c      	movge	r4, r7
 800b28c:	ee07 4a90 	vmov	s15, r4
 800b290:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800b294:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800b298:	ee25 4a04 	vmul.f32	s8, s10, s8
 800b29c:	ee65 4a24 	vmul.f32	s9, s10, s9
 800b2a0:	ee25 5a27 	vmul.f32	s10, s10, s15
 800b2a4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b2a8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800b2ac:	eb09 0e0c 	add.w	lr, r9, ip
 800b2b0:	4571      	cmp	r1, lr
 800b2b2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800b2b6:	ee32 1a05 	vadd.f32	s2, s4, s10
 800b2ba:	ee36 0a84 	vadd.f32	s0, s13, s8
 800b2be:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b2c2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b2c6:	f340 808d 	ble.w	800b3e4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800b2ca:	eba1 060e 	sub.w	r6, r1, lr
 800b2ce:	fb96 f5f4 	sdiv	r5, r6, r4
 800b2d2:	ee07 5a10 	vmov	s14, r5
 800b2d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b2da:	2d00      	cmp	r5, #0
 800b2dc:	fb04 6615 	mls	r6, r4, r5, r6
 800b2e0:	eea7 0a04 	vfma.f32	s0, s14, s8
 800b2e4:	eee7 0a24 	vfma.f32	s1, s14, s9
 800b2e8:	eea7 1a05 	vfma.f32	s2, s14, s10
 800b2ec:	dd13      	ble.n	800b316 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800b2ee:	ee70 6a44 	vsub.f32	s13, s0, s8
 800b2f2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800b2f6:	eef5 6a40 	vcmp.f32	s13, #0.0
 800b2fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b2fe:	bf18      	it	ne
 800b300:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800b304:	ee31 2a45 	vsub.f32	s4, s2, s10
 800b308:	bf08      	it	eq
 800b30a:	eeb0 7a67 	vmoveq.f32	s14, s15
 800b30e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b312:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b316:	fb05 f204 	mul.w	r2, r5, r4
 800b31a:	1abf      	subs	r7, r7, r2
 800b31c:	4494      	add	ip, r2
 800b31e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800b322:	4411      	add	r1, r2
 800b324:	eb09 020c 	add.w	r2, r9, ip
 800b328:	443a      	add	r2, r7
 800b32a:	b209      	sxth	r1, r1
 800b32c:	428a      	cmp	r2, r1
 800b32e:	bfc4      	itt	gt
 800b330:	eba1 0209 	subgt.w	r2, r1, r9
 800b334:	eba2 070c 	subgt.w	r7, r2, ip
 800b338:	2f00      	cmp	r7, #0
 800b33a:	dd50      	ble.n	800b3de <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800b33c:	fb97 f1f4 	sdiv	r1, r7, r4
 800b340:	fb04 7211 	mls	r2, r4, r1, r7
 800b344:	b90a      	cbnz	r2, 800b34a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800b346:	3901      	subs	r1, #1
 800b348:	4622      	mov	r2, r4
 800b34a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800b34e:	6840      	ldr	r0, [r0, #4]
 800b350:	900b      	str	r0, [sp, #44]	; 0x2c
 800b352:	f8d0 a000 	ldr.w	sl, [r0]
 800b356:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800b358:	9008      	str	r0, [sp, #32]
 800b35a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800b35e:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b360:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800b364:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800b368:	695b      	ldr	r3, [r3, #20]
 800b36a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800b36c:	445b      	add	r3, fp
 800b36e:	eef0 6a42 	vmov.f32	s13, s4
 800b372:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800b376:	ee21 3a23 	vmul.f32	s6, s2, s7
 800b37a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800b37e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800b382:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b386:	9307      	str	r3, [sp, #28]
 800b388:	ee17 7a90 	vmov	r7, s15
 800b38c:	ee73 7a42 	vsub.f32	s15, s6, s4
 800b390:	eeb0 7a61 	vmov.f32	s14, s3
 800b394:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b398:	ee16 3a90 	vmov	r3, s13
 800b39c:	fb97 f7f4 	sdiv	r7, r7, r4
 800b3a0:	ee17 ca90 	vmov	ip, s15
 800b3a4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800b3a8:	fb9c fcf4 	sdiv	ip, ip, r4
 800b3ac:	fb0c 3306 	mla	r3, ip, r6, r3
 800b3b0:	9302      	str	r3, [sp, #8]
 800b3b2:	ee17 3a10 	vmov	r3, s14
 800b3b6:	44b6      	add	lr, r6
 800b3b8:	fb04 e505 	mla	r5, r4, r5, lr
 800b3bc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800b3c0:	fb07 3706 	mla	r7, r7, r6, r3
 800b3c4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800b3c8:	e9cd 4700 	strd	r4, r7, [sp]
 800b3cc:	2900      	cmp	r1, #0
 800b3ce:	bfcc      	ite	gt
 800b3d0:	46a1      	movgt	r9, r4
 800b3d2:	4691      	movle	r9, r2
 800b3d4:	eba9 0306 	sub.w	r3, r9, r6
 800b3d8:	f8da 4008 	ldr.w	r4, [sl, #8]
 800b3dc:	47a0      	blx	r4
 800b3de:	b00d      	add	sp, #52	; 0x34
 800b3e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b3e4:	2500      	movs	r5, #0
 800b3e6:	462e      	mov	r6, r5
 800b3e8:	e799      	b.n	800b31e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800b3ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b3ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b3f0:	b0db      	sub	sp, #364	; 0x16c
 800b3f2:	461d      	mov	r5, r3
 800b3f4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800b3f8:	930a      	str	r3, [sp, #40]	; 0x28
 800b3fa:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800b3fe:	930b      	str	r3, [sp, #44]	; 0x2c
 800b400:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800b404:	9310      	str	r3, [sp, #64]	; 0x40
 800b406:	6803      	ldr	r3, [r0, #0]
 800b408:	910f      	str	r1, [sp, #60]	; 0x3c
 800b40a:	6bdf      	ldr	r7, [r3, #60]	; 0x3c
 800b40c:	9009      	str	r0, [sp, #36]	; 0x24
 800b40e:	4614      	mov	r4, r2
 800b410:	4629      	mov	r1, r5
 800b412:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800b416:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800b41a:	47b8      	blx	r7
 800b41c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b41e:	6058      	str	r0, [r3, #4]
 800b420:	2800      	cmp	r0, #0
 800b422:	f000 83a1 	beq.w	800bb68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b426:	682b      	ldr	r3, [r5, #0]
 800b428:	9314      	str	r3, [sp, #80]	; 0x50
 800b42a:	686b      	ldr	r3, [r5, #4]
 800b42c:	9315      	str	r3, [sp, #84]	; 0x54
 800b42e:	4bc4      	ldr	r3, [pc, #784]	; (800b740 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800b430:	ed94 7a02 	vldr	s14, [r4, #8]
 800b434:	7819      	ldrb	r1, [r3, #0]
 800b436:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800b43a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800b43e:	2900      	cmp	r1, #0
 800b440:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b444:	bf16      	itet	ne
 800b446:	4619      	movne	r1, r3
 800b448:	4611      	moveq	r1, r2
 800b44a:	4613      	movne	r3, r2
 800b44c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b450:	9116      	str	r1, [sp, #88]	; 0x58
 800b452:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800b456:	f240 8387 	bls.w	800bb68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b45a:	ed94 7a07 	vldr	s14, [r4, #28]
 800b45e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b462:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b466:	f240 837f 	bls.w	800bb68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b46a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800b46e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b472:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b476:	f240 8377 	bls.w	800bb68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b47a:	6822      	ldr	r2, [r4, #0]
 800b47c:	4bb1      	ldr	r3, [pc, #708]	; (800b744 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800b47e:	429a      	cmp	r2, r3
 800b480:	f2c0 8372 	blt.w	800bb68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b484:	49b0      	ldr	r1, [pc, #704]	; (800b748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800b486:	6963      	ldr	r3, [r4, #20]
 800b488:	428a      	cmp	r2, r1
 800b48a:	f300 836d 	bgt.w	800bb68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b48e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b492:	48ae      	ldr	r0, [pc, #696]	; (800b74c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800b494:	33ff      	adds	r3, #255	; 0xff
 800b496:	4283      	cmp	r3, r0
 800b498:	f200 8366 	bhi.w	800bb68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b49c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b49e:	4dac      	ldr	r5, [pc, #688]	; (800b750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800b4a0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b4a4:	33ff      	adds	r3, #255	; 0xff
 800b4a6:	42ab      	cmp	r3, r5
 800b4a8:	f200 835e 	bhi.w	800bb68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b4ac:	6862      	ldr	r2, [r4, #4]
 800b4ae:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800b4b2:	33ff      	adds	r3, #255	; 0xff
 800b4b4:	4283      	cmp	r3, r0
 800b4b6:	f200 8357 	bhi.w	800bb68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b4ba:	69a1      	ldr	r1, [r4, #24]
 800b4bc:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800b4c0:	33ff      	adds	r3, #255	; 0xff
 800b4c2:	4283      	cmp	r3, r0
 800b4c4:	f200 8350 	bhi.w	800bb68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b4c8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b4ca:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800b4ce:	30ff      	adds	r0, #255	; 0xff
 800b4d0:	42a8      	cmp	r0, r5
 800b4d2:	f200 8349 	bhi.w	800bb68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b4d6:	428a      	cmp	r2, r1
 800b4d8:	f280 8110 	bge.w	800b6fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800b4dc:	429a      	cmp	r2, r3
 800b4de:	f300 8119 	bgt.w	800b714 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800b4e2:	4299      	cmp	r1, r3
 800b4e4:	f280 811d 	bge.w	800b722 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800b4e8:	2502      	movs	r5, #2
 800b4ea:	2701      	movs	r7, #1
 800b4ec:	46a9      	mov	r9, r5
 800b4ee:	46b8      	mov	r8, r7
 800b4f0:	f04f 0a00 	mov.w	sl, #0
 800b4f4:	4621      	mov	r1, r4
 800b4f6:	a849      	add	r0, sp, #292	; 0x124
 800b4f8:	f003 fc70 	bl	800eddc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800b4fc:	4622      	mov	r2, r4
 800b4fe:	4653      	mov	r3, sl
 800b500:	a949      	add	r1, sp, #292	; 0x124
 800b502:	f8cd 9000 	str.w	r9, [sp]
 800b506:	a819      	add	r0, sp, #100	; 0x64
 800b508:	f003 fd98 	bl	800f03c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b50c:	4622      	mov	r2, r4
 800b50e:	4653      	mov	r3, sl
 800b510:	a949      	add	r1, sp, #292	; 0x124
 800b512:	f8cd 8000 	str.w	r8, [sp]
 800b516:	a829      	add	r0, sp, #164	; 0xa4
 800b518:	f003 fd90 	bl	800f03c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b51c:	4643      	mov	r3, r8
 800b51e:	4622      	mov	r2, r4
 800b520:	a949      	add	r1, sp, #292	; 0x124
 800b522:	f8cd 9000 	str.w	r9, [sp]
 800b526:	a839      	add	r0, sp, #228	; 0xe4
 800b528:	f003 fd88 	bl	800f03c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b52c:	42af      	cmp	r7, r5
 800b52e:	bfb5      	itete	lt
 800b530:	2300      	movlt	r3, #0
 800b532:	2301      	movge	r3, #1
 800b534:	930e      	strlt	r3, [sp, #56]	; 0x38
 800b536:	930e      	strge	r3, [sp, #56]	; 0x38
 800b538:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b53a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b53e:	af12      	add	r7, sp, #72	; 0x48
 800b540:	bfb9      	ittee	lt
 800b542:	ad29      	addlt	r5, sp, #164	; 0xa4
 800b544:	ac19      	addlt	r4, sp, #100	; 0x64
 800b546:	ad19      	addge	r5, sp, #100	; 0x64
 800b548:	ac29      	addge	r4, sp, #164	; 0xa4
 800b54a:	e887 0003 	stmia.w	r7, {r0, r1}
 800b54e:	b928      	cbnz	r0, 800b55c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b550:	4b80      	ldr	r3, [pc, #512]	; (800b754 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800b552:	6818      	ldr	r0, [r3, #0]
 800b554:	6803      	ldr	r3, [r0, #0]
 800b556:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b558:	4798      	blx	r3
 800b55a:	6038      	str	r0, [r7, #0]
 800b55c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b55e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b562:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b566:	930c      	str	r3, [sp, #48]	; 0x30
 800b568:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b56a:	6963      	ldr	r3, [r4, #20]
 800b56c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800b56e:	440b      	add	r3, r1
 800b570:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b574:	4408      	add	r0, r1
 800b576:	b200      	sxth	r0, r0
 800b578:	4283      	cmp	r3, r0
 800b57a:	900d      	str	r0, [sp, #52]	; 0x34
 800b57c:	f280 80dd 	bge.w	800b73a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800b580:	428b      	cmp	r3, r1
 800b582:	da08      	bge.n	800b596 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b584:	2a00      	cmp	r2, #0
 800b586:	dd06      	ble.n	800b596 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b588:	1acb      	subs	r3, r1, r3
 800b58a:	429a      	cmp	r2, r3
 800b58c:	f2c0 80e4 	blt.w	800b758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800b590:	2b00      	cmp	r3, #0
 800b592:	f300 80e2 	bgt.w	800b75a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800b596:	6967      	ldr	r7, [r4, #20]
 800b598:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b59a:	443b      	add	r3, r7
 800b59c:	461f      	mov	r7, r3
 800b59e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b5a0:	1bdf      	subs	r7, r3, r7
 800b5a2:	4297      	cmp	r7, r2
 800b5a4:	bfa8      	it	ge
 800b5a6:	4617      	movge	r7, r2
 800b5a8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b5ac:	2f00      	cmp	r7, #0
 800b5ae:	f340 8166 	ble.w	800b87e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800b5b2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b5b4:	6829      	ldr	r1, [r5, #0]
 800b5b6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b5ba:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b5be:	6820      	ldr	r0, [r4, #0]
 800b5c0:	4411      	add	r1, r2
 800b5c2:	4299      	cmp	r1, r3
 800b5c4:	dd1a      	ble.n	800b5fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b5c6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b5ca:	440b      	add	r3, r1
 800b5cc:	4402      	add	r2, r0
 800b5ce:	b21b      	sxth	r3, r3
 800b5d0:	429a      	cmp	r2, r3
 800b5d2:	dc13      	bgt.n	800b5fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b5d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b5d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b5d8:	681b      	ldr	r3, [r3, #0]
 800b5da:	9206      	str	r2, [sp, #24]
 800b5dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b5de:	9205      	str	r2, [sp, #20]
 800b5e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b5e2:	9500      	str	r5, [sp, #0]
 800b5e4:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b5e8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b5ea:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b5ec:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b5f0:	a912      	add	r1, sp, #72	; 0x48
 800b5f2:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800b5f6:	aa49      	add	r2, sp, #292	; 0x124
 800b5f8:	4623      	mov	r3, r4
 800b5fa:	47c8      	blx	r9
 800b5fc:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b600:	441a      	add	r2, r3
 800b602:	6963      	ldr	r3, [r4, #20]
 800b604:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b608:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b60c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b610:	68a1      	ldr	r1, [r4, #8]
 800b612:	ed94 6a08 	vldr	s12, [r4, #32]
 800b616:	6022      	str	r2, [r4, #0]
 800b618:	3301      	adds	r3, #1
 800b61a:	6163      	str	r3, [r4, #20]
 800b61c:	69a3      	ldr	r3, [r4, #24]
 800b61e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b622:	3b01      	subs	r3, #1
 800b624:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b628:	61a3      	str	r3, [r4, #24]
 800b62a:	6923      	ldr	r3, [r4, #16]
 800b62c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b630:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b634:	edd4 6a07 	vldr	s13, [r4, #28]
 800b638:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b63c:	440b      	add	r3, r1
 800b63e:	68e1      	ldr	r1, [r4, #12]
 800b640:	6123      	str	r3, [r4, #16]
 800b642:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b646:	428b      	cmp	r3, r1
 800b648:	edc4 6a07 	vstr	s13, [r4, #28]
 800b64c:	db15      	blt.n	800b67a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800b64e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b652:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b656:	3201      	adds	r2, #1
 800b658:	edc4 6a07 	vstr	s13, [r4, #28]
 800b65c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b660:	6022      	str	r2, [r4, #0]
 800b662:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b666:	1a5b      	subs	r3, r3, r1
 800b668:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b66c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b670:	6123      	str	r3, [r4, #16]
 800b672:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b676:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b67a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b67e:	441a      	add	r2, r3
 800b680:	696b      	ldr	r3, [r5, #20]
 800b682:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b686:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b68a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b68e:	68a9      	ldr	r1, [r5, #8]
 800b690:	ed95 6a08 	vldr	s12, [r5, #32]
 800b694:	602a      	str	r2, [r5, #0]
 800b696:	3301      	adds	r3, #1
 800b698:	616b      	str	r3, [r5, #20]
 800b69a:	69ab      	ldr	r3, [r5, #24]
 800b69c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b6a0:	3b01      	subs	r3, #1
 800b6a2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b6a6:	61ab      	str	r3, [r5, #24]
 800b6a8:	692b      	ldr	r3, [r5, #16]
 800b6aa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b6ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b6b2:	edd5 6a07 	vldr	s13, [r5, #28]
 800b6b6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b6ba:	440b      	add	r3, r1
 800b6bc:	68e9      	ldr	r1, [r5, #12]
 800b6be:	612b      	str	r3, [r5, #16]
 800b6c0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b6c4:	428b      	cmp	r3, r1
 800b6c6:	edc5 6a07 	vstr	s13, [r5, #28]
 800b6ca:	db15      	blt.n	800b6f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800b6cc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b6d0:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b6d4:	3201      	adds	r2, #1
 800b6d6:	edc5 6a07 	vstr	s13, [r5, #28]
 800b6da:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b6de:	602a      	str	r2, [r5, #0]
 800b6e0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b6e4:	1a5b      	subs	r3, r3, r1
 800b6e6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b6ea:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b6ee:	612b      	str	r3, [r5, #16]
 800b6f0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b6f4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b6f8:	3f01      	subs	r7, #1
 800b6fa:	e757      	b.n	800b5ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800b6fc:	4299      	cmp	r1, r3
 800b6fe:	dc13      	bgt.n	800b728 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800b700:	429a      	cmp	r2, r3
 800b702:	da14      	bge.n	800b72e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800b704:	2502      	movs	r5, #2
 800b706:	2703      	movs	r7, #3
 800b708:	46a9      	mov	r9, r5
 800b70a:	f04f 0800 	mov.w	r8, #0
 800b70e:	f04f 0a01 	mov.w	sl, #1
 800b712:	e6ef      	b.n	800b4f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b714:	2501      	movs	r5, #1
 800b716:	2700      	movs	r7, #0
 800b718:	46a9      	mov	r9, r5
 800b71a:	46b8      	mov	r8, r7
 800b71c:	f04f 0a02 	mov.w	sl, #2
 800b720:	e6e8      	b.n	800b4f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b722:	2501      	movs	r5, #1
 800b724:	2702      	movs	r7, #2
 800b726:	e6e1      	b.n	800b4ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800b728:	2500      	movs	r5, #0
 800b72a:	2701      	movs	r7, #1
 800b72c:	e7f4      	b.n	800b718 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800b72e:	2702      	movs	r7, #2
 800b730:	2503      	movs	r5, #3
 800b732:	f04f 0900 	mov.w	r9, #0
 800b736:	46b8      	mov	r8, r7
 800b738:	e7e9      	b.n	800b70e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800b73a:	4613      	mov	r3, r2
 800b73c:	e728      	b.n	800b590 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800b73e:	bf00      	nop
 800b740:	20013500 	.word	0x20013500
 800b744:	fffd8f01 	.word	0xfffd8f01
 800b748:	00027100 	.word	0x00027100
 800b74c:	0004e1ff 	.word	0x0004e1ff
 800b750:	0004e1fe 	.word	0x0004e1fe
 800b754:	20013508 	.word	0x20013508
 800b758:	4613      	mov	r3, r2
 800b75a:	992b      	ldr	r1, [sp, #172]	; 0xac
 800b75c:	9111      	str	r1, [sp, #68]	; 0x44
 800b75e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800b762:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800b766:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800b768:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800b76c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800b770:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800b774:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800b778:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800b77c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800b780:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800b784:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800b788:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800b78c:	469e      	mov	lr, r3
 800b78e:	469c      	mov	ip, r3
 800b790:	f04f 0900 	mov.w	r9, #0
 800b794:	f1bc 0f00 	cmp.w	ip, #0
 800b798:	d147      	bne.n	800b82a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800b79a:	eb03 0c07 	add.w	ip, r3, r7
 800b79e:	1ad7      	subs	r7, r2, r3
 800b7a0:	f1b9 0f00 	cmp.w	r9, #0
 800b7a4:	d009      	beq.n	800b7ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800b7a6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800b7aa:	9029      	str	r0, [sp, #164]	; 0xa4
 800b7ac:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800b7b0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800b7b4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800b7b8:	912d      	str	r1, [sp, #180]	; 0xb4
 800b7ba:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b7bc:	9111      	str	r1, [sp, #68]	; 0x44
 800b7be:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b7c2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800b7c6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800b7ca:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800b7ce:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800b7d2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800b7d6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800b7da:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800b7de:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800b7e2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800b7e6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800b7ea:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800b7ee:	f04f 0800 	mov.w	r8, #0
 800b7f2:	f1be 0f00 	cmp.w	lr, #0
 800b7f6:	d031      	beq.n	800b85c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800b7f8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b7fa:	4431      	add	r1, r6
 800b7fc:	4549      	cmp	r1, r9
 800b7fe:	4450      	add	r0, sl
 800b800:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b804:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b808:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b80c:	db08      	blt.n	800b820 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800b80e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b812:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b816:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b81a:	3001      	adds	r0, #1
 800b81c:	eba1 0109 	sub.w	r1, r1, r9
 800b820:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b824:	f04f 0801 	mov.w	r8, #1
 800b828:	e7e3      	b.n	800b7f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800b82a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b82c:	4431      	add	r1, r6
 800b82e:	4541      	cmp	r1, r8
 800b830:	4450      	add	r0, sl
 800b832:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b836:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b83a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b83e:	db08      	blt.n	800b852 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800b840:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b844:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b848:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b84c:	3001      	adds	r0, #1
 800b84e:	eba1 0108 	sub.w	r1, r1, r8
 800b852:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b856:	f04f 0901 	mov.w	r9, #1
 800b85a:	e79b      	b.n	800b794 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800b85c:	449c      	add	ip, r3
 800b85e:	1aff      	subs	r7, r7, r3
 800b860:	f1b8 0f00 	cmp.w	r8, #0
 800b864:	d009      	beq.n	800b87a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800b866:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800b86a:	9019      	str	r0, [sp, #100]	; 0x64
 800b86c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800b870:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800b874:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800b878:	911d      	str	r1, [sp, #116]	; 0x74
 800b87a:	1ad2      	subs	r2, r2, r3
 800b87c:	e68b      	b.n	800b596 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b87e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b880:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800b882:	2b00      	cmp	r3, #0
 800b884:	f000 80d1 	beq.w	800ba2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800b888:	ad19      	add	r5, sp, #100	; 0x64
 800b88a:	ac39      	add	r4, sp, #228	; 0xe4
 800b88c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b88e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b892:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b896:	930c      	str	r3, [sp, #48]	; 0x30
 800b898:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b89a:	6963      	ldr	r3, [r4, #20]
 800b89c:	440b      	add	r3, r1
 800b89e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b8a2:	4408      	add	r0, r1
 800b8a4:	b200      	sxth	r0, r0
 800b8a6:	4283      	cmp	r3, r0
 800b8a8:	900d      	str	r0, [sp, #52]	; 0x34
 800b8aa:	f280 80c1 	bge.w	800ba30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800b8ae:	428b      	cmp	r3, r1
 800b8b0:	da08      	bge.n	800b8c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b8b2:	2a00      	cmp	r2, #0
 800b8b4:	dd06      	ble.n	800b8c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b8b6:	1acb      	subs	r3, r1, r3
 800b8b8:	429a      	cmp	r2, r3
 800b8ba:	f2c0 80bb 	blt.w	800ba34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800b8be:	2b00      	cmp	r3, #0
 800b8c0:	f300 80b9 	bgt.w	800ba36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800b8c4:	6967      	ldr	r7, [r4, #20]
 800b8c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b8c8:	443b      	add	r3, r7
 800b8ca:	461f      	mov	r7, r3
 800b8cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b8ce:	1bdf      	subs	r7, r3, r7
 800b8d0:	4297      	cmp	r7, r2
 800b8d2:	bfa8      	it	ge
 800b8d4:	4617      	movge	r7, r2
 800b8d6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b8da:	2f00      	cmp	r7, #0
 800b8dc:	f340 813c 	ble.w	800bb58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800b8e0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b8e2:	6829      	ldr	r1, [r5, #0]
 800b8e4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b8e8:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b8ec:	6820      	ldr	r0, [r4, #0]
 800b8ee:	4411      	add	r1, r2
 800b8f0:	4299      	cmp	r1, r3
 800b8f2:	dd1a      	ble.n	800b92a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b8f4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b8f8:	440b      	add	r3, r1
 800b8fa:	4402      	add	r2, r0
 800b8fc:	b21b      	sxth	r3, r3
 800b8fe:	429a      	cmp	r2, r3
 800b900:	dc13      	bgt.n	800b92a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800b902:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b904:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b906:	681b      	ldr	r3, [r3, #0]
 800b908:	9206      	str	r2, [sp, #24]
 800b90a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b90c:	9205      	str	r2, [sp, #20]
 800b90e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b910:	9500      	str	r5, [sp, #0]
 800b912:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b916:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b918:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b91a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b91e:	a912      	add	r1, sp, #72	; 0x48
 800b920:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800b924:	aa49      	add	r2, sp, #292	; 0x124
 800b926:	4623      	mov	r3, r4
 800b928:	47c8      	blx	r9
 800b92a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b92e:	441a      	add	r2, r3
 800b930:	6963      	ldr	r3, [r4, #20]
 800b932:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b936:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b93a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b93e:	68a1      	ldr	r1, [r4, #8]
 800b940:	ed94 6a08 	vldr	s12, [r4, #32]
 800b944:	6022      	str	r2, [r4, #0]
 800b946:	3301      	adds	r3, #1
 800b948:	6163      	str	r3, [r4, #20]
 800b94a:	69a3      	ldr	r3, [r4, #24]
 800b94c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b950:	3b01      	subs	r3, #1
 800b952:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b956:	61a3      	str	r3, [r4, #24]
 800b958:	6923      	ldr	r3, [r4, #16]
 800b95a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b95e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b962:	edd4 6a07 	vldr	s13, [r4, #28]
 800b966:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b96a:	440b      	add	r3, r1
 800b96c:	68e1      	ldr	r1, [r4, #12]
 800b96e:	6123      	str	r3, [r4, #16]
 800b970:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b974:	428b      	cmp	r3, r1
 800b976:	edc4 6a07 	vstr	s13, [r4, #28]
 800b97a:	db15      	blt.n	800b9a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800b97c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b980:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b984:	3201      	adds	r2, #1
 800b986:	edc4 6a07 	vstr	s13, [r4, #28]
 800b98a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b98e:	6022      	str	r2, [r4, #0]
 800b990:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b994:	1a5b      	subs	r3, r3, r1
 800b996:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b99a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b99e:	6123      	str	r3, [r4, #16]
 800b9a0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b9a4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b9a8:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b9ac:	441a      	add	r2, r3
 800b9ae:	696b      	ldr	r3, [r5, #20]
 800b9b0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b9b4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b9b8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b9bc:	68a9      	ldr	r1, [r5, #8]
 800b9be:	ed95 6a08 	vldr	s12, [r5, #32]
 800b9c2:	602a      	str	r2, [r5, #0]
 800b9c4:	3301      	adds	r3, #1
 800b9c6:	616b      	str	r3, [r5, #20]
 800b9c8:	69ab      	ldr	r3, [r5, #24]
 800b9ca:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b9ce:	3b01      	subs	r3, #1
 800b9d0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b9d4:	61ab      	str	r3, [r5, #24]
 800b9d6:	692b      	ldr	r3, [r5, #16]
 800b9d8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b9dc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b9e0:	edd5 6a07 	vldr	s13, [r5, #28]
 800b9e4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b9e8:	440b      	add	r3, r1
 800b9ea:	68e9      	ldr	r1, [r5, #12]
 800b9ec:	612b      	str	r3, [r5, #16]
 800b9ee:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b9f2:	428b      	cmp	r3, r1
 800b9f4:	edc5 6a07 	vstr	s13, [r5, #28]
 800b9f8:	db15      	blt.n	800ba26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800b9fa:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b9fe:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ba02:	3201      	adds	r2, #1
 800ba04:	edc5 6a07 	vstr	s13, [r5, #28]
 800ba08:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800ba0c:	602a      	str	r2, [r5, #0]
 800ba0e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ba12:	1a5b      	subs	r3, r3, r1
 800ba14:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ba18:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800ba1c:	612b      	str	r3, [r5, #16]
 800ba1e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ba22:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ba26:	3f01      	subs	r7, #1
 800ba28:	e757      	b.n	800b8da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800ba2a:	ad39      	add	r5, sp, #228	; 0xe4
 800ba2c:	ac19      	add	r4, sp, #100	; 0x64
 800ba2e:	e72d      	b.n	800b88c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800ba30:	4613      	mov	r3, r2
 800ba32:	e744      	b.n	800b8be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800ba34:	4613      	mov	r3, r2
 800ba36:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800ba3a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800ba3c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800ba40:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800ba44:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800ba48:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800ba4c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800ba50:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800ba54:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800ba58:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800ba5a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800ba5e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800ba62:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800ba66:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800ba6a:	960e      	str	r6, [sp, #56]	; 0x38
 800ba6c:	469e      	mov	lr, r3
 800ba6e:	461f      	mov	r7, r3
 800ba70:	f04f 0900 	mov.w	r9, #0
 800ba74:	2f00      	cmp	r7, #0
 800ba76:	d146      	bne.n	800bb06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800ba78:	449c      	add	ip, r3
 800ba7a:	1ad7      	subs	r7, r2, r3
 800ba7c:	f1b9 0f00 	cmp.w	r9, #0
 800ba80:	d009      	beq.n	800ba96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800ba82:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800ba86:	9039      	str	r0, [sp, #228]	; 0xe4
 800ba88:	913d      	str	r1, [sp, #244]	; 0xf4
 800ba8a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800ba8e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800ba92:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800ba96:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800ba98:	910e      	str	r1, [sp, #56]	; 0x38
 800ba9a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800ba9e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800baa2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800baa6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800baaa:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800baae:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800bab2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800bab6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800baba:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800babe:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800bac2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800bac6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800baca:	f04f 0800 	mov.w	r8, #0
 800bace:	f1be 0f00 	cmp.w	lr, #0
 800bad2:	d030      	beq.n	800bb36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800bad4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800bad6:	4431      	add	r1, r6
 800bad8:	4549      	cmp	r1, r9
 800bada:	4450      	add	r0, sl
 800badc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800bae0:	ee37 7a04 	vadd.f32	s14, s14, s8
 800bae4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800bae8:	db08      	blt.n	800bafc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800baea:	ee77 7a85 	vadd.f32	s15, s15, s10
 800baee:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800baf2:	ee37 7a06 	vadd.f32	s14, s14, s12
 800baf6:	3001      	adds	r0, #1
 800baf8:	eba1 0109 	sub.w	r1, r1, r9
 800bafc:	f10e 3eff 	add.w	lr, lr, #4294967295
 800bb00:	f04f 0801 	mov.w	r8, #1
 800bb04:	e7e3      	b.n	800bace <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800bb06:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800bb08:	4431      	add	r1, r6
 800bb0a:	4541      	cmp	r1, r8
 800bb0c:	4450      	add	r0, sl
 800bb0e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800bb12:	ee77 7a84 	vadd.f32	s15, s15, s8
 800bb16:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800bb1a:	db08      	blt.n	800bb2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800bb1c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800bb20:	ee37 7a25 	vadd.f32	s14, s14, s11
 800bb24:	ee77 7a86 	vadd.f32	s15, s15, s12
 800bb28:	3001      	adds	r0, #1
 800bb2a:	eba1 0108 	sub.w	r1, r1, r8
 800bb2e:	3f01      	subs	r7, #1
 800bb30:	f04f 0901 	mov.w	r9, #1
 800bb34:	e79e      	b.n	800ba74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800bb36:	449c      	add	ip, r3
 800bb38:	1aff      	subs	r7, r7, r3
 800bb3a:	f1b8 0f00 	cmp.w	r8, #0
 800bb3e:	d009      	beq.n	800bb54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800bb40:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800bb44:	9019      	str	r0, [sp, #100]	; 0x64
 800bb46:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800bb4a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800bb4e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800bb52:	911d      	str	r1, [sp, #116]	; 0x74
 800bb54:	1ad2      	subs	r2, r2, r3
 800bb56:	e6b5      	b.n	800b8c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800bb58:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800bb5a:	681b      	ldr	r3, [r3, #0]
 800bb5c:	b923      	cbnz	r3, 800bb68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bb5e:	4b04      	ldr	r3, [pc, #16]	; (800bb70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800bb60:	6818      	ldr	r0, [r3, #0]
 800bb62:	6803      	ldr	r3, [r0, #0]
 800bb64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bb66:	4798      	blx	r3
 800bb68:	b05b      	add	sp, #364	; 0x16c
 800bb6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb6e:	bf00      	nop
 800bb70:	20013508 	.word	0x20013508

0800bb74 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800bb74:	b570      	push	{r4, r5, r6, lr}
 800bb76:	4604      	mov	r4, r0
 800bb78:	2500      	movs	r5, #0
 800bb7a:	7223      	strb	r3, [r4, #8]
 800bb7c:	9804      	ldr	r0, [sp, #16]
 800bb7e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800bb82:	8025      	strh	r5, [r4, #0]
 800bb84:	6061      	str	r1, [r4, #4]
 800bb86:	7263      	strb	r3, [r4, #9]
 800bb88:	60e0      	str	r0, [r4, #12]
 800bb8a:	8222      	strh	r2, [r4, #16]
 800bb8c:	8265      	strh	r5, [r4, #18]
 800bb8e:	82a5      	strh	r5, [r4, #20]
 800bb90:	82e5      	strh	r5, [r4, #22]
 800bb92:	8325      	strh	r5, [r4, #24]
 800bb94:	8365      	strh	r5, [r4, #26]
 800bb96:	83a5      	strh	r5, [r4, #28]
 800bb98:	77a5      	strb	r5, [r4, #30]
 800bb9a:	6803      	ldr	r3, [r0, #0]
 800bb9c:	695b      	ldr	r3, [r3, #20]
 800bb9e:	4798      	blx	r3
 800bba0:	4606      	mov	r6, r0
 800bba2:	b1f8      	cbz	r0, 800bbe4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800bba4:	68e0      	ldr	r0, [r4, #12]
 800bba6:	6803      	ldr	r3, [r0, #0]
 800bba8:	4631      	mov	r1, r6
 800bbaa:	68db      	ldr	r3, [r3, #12]
 800bbac:	4798      	blx	r3
 800bbae:	7b43      	ldrb	r3, [r0, #13]
 800bbb0:	7a82      	ldrb	r2, [r0, #10]
 800bbb2:	005b      	lsls	r3, r3, #1
 800bbb4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bbb8:	4313      	orrs	r3, r2
 800bbba:	83a3      	strh	r3, [r4, #28]
 800bbbc:	7a63      	ldrb	r3, [r4, #9]
 800bbbe:	2b04      	cmp	r3, #4
 800bbc0:	4605      	mov	r5, r0
 800bbc2:	d10f      	bne.n	800bbe4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800bbc4:	68e0      	ldr	r0, [r4, #12]
 800bbc6:	6803      	ldr	r3, [r0, #0]
 800bbc8:	462a      	mov	r2, r5
 800bbca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bbcc:	4631      	mov	r1, r6
 800bbce:	4798      	blx	r3
 800bbd0:	7b6b      	ldrb	r3, [r5, #13]
 800bbd2:	005b      	lsls	r3, r3, #1
 800bbd4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800bbd8:	7aab      	ldrb	r3, [r5, #10]
 800bbda:	4313      	orrs	r3, r2
 800bbdc:	4418      	add	r0, r3
 800bbde:	8ba3      	ldrh	r3, [r4, #28]
 800bbe0:	4418      	add	r0, r3
 800bbe2:	83a0      	strh	r0, [r4, #28]
 800bbe4:	4620      	mov	r0, r4
 800bbe6:	bd70      	pop	{r4, r5, r6, pc}

0800bbe8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800bbe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbec:	2400      	movs	r4, #0
 800bbee:	b085      	sub	sp, #20
 800bbf0:	4681      	mov	r9, r0
 800bbf2:	4688      	mov	r8, r1
 800bbf4:	4692      	mov	sl, r2
 800bbf6:	469b      	mov	fp, r3
 800bbf8:	4627      	mov	r7, r4
 800bbfa:	4625      	mov	r5, r4
 800bbfc:	4626      	mov	r6, r4
 800bbfe:	4554      	cmp	r4, sl
 800bc00:	da2a      	bge.n	800bc58 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bc02:	2300      	movs	r3, #0
 800bc04:	9303      	str	r3, [sp, #12]
 800bc06:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bc0a:	429d      	cmp	r5, r3
 800bc0c:	d004      	beq.n	800bc18 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800bc0e:	f242 030b 	movw	r3, #8203	; 0x200b
 800bc12:	429d      	cmp	r5, r3
 800bc14:	bf18      	it	ne
 800bc16:	462f      	movne	r7, r5
 800bc18:	ab03      	add	r3, sp, #12
 800bc1a:	4642      	mov	r2, r8
 800bc1c:	4659      	mov	r1, fp
 800bc1e:	4648      	mov	r0, r9
 800bc20:	f002 fe60 	bl	800e8e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bc24:	4605      	mov	r5, r0
 800bc26:	b1b8      	cbz	r0, 800bc58 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bc28:	280a      	cmp	r0, #10
 800bc2a:	d015      	beq.n	800bc58 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bc2c:	9a03      	ldr	r2, [sp, #12]
 800bc2e:	b18a      	cbz	r2, 800bc54 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800bc30:	7b50      	ldrb	r0, [r2, #13]
 800bc32:	7a93      	ldrb	r3, [r2, #10]
 800bc34:	8895      	ldrh	r5, [r2, #4]
 800bc36:	0040      	lsls	r0, r0, #1
 800bc38:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800bc3c:	4303      	orrs	r3, r0
 800bc3e:	9301      	str	r3, [sp, #4]
 800bc40:	f8d8 3000 	ldr.w	r3, [r8]
 800bc44:	4639      	mov	r1, r7
 800bc46:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bc48:	4640      	mov	r0, r8
 800bc4a:	4798      	blx	r3
 800bc4c:	9b01      	ldr	r3, [sp, #4]
 800bc4e:	4418      	add	r0, r3
 800bc50:	4406      	add	r6, r0
 800bc52:	b2b6      	uxth	r6, r6
 800bc54:	3401      	adds	r4, #1
 800bc56:	e7d2      	b.n	800bbfe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800bc58:	4630      	mov	r0, r6
 800bc5a:	b005      	add	sp, #20
 800bc5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800bc60 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800bc60:	2a02      	cmp	r2, #2
 800bc62:	b530      	push	{r4, r5, lr}
 800bc64:	d011      	beq.n	800bc8a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800bc66:	2a03      	cmp	r2, #3
 800bc68:	d01c      	beq.n	800bca4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800bc6a:	2a01      	cmp	r2, #1
 800bc6c:	d10c      	bne.n	800bc88 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800bc6e:	888b      	ldrh	r3, [r1, #4]
 800bc70:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800bc74:	8801      	ldrh	r1, [r0, #0]
 800bc76:	8844      	ldrh	r4, [r0, #2]
 800bc78:	8004      	strh	r4, [r0, #0]
 800bc7a:	1a9b      	subs	r3, r3, r2
 800bc7c:	1a5b      	subs	r3, r3, r1
 800bc7e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800bc82:	8043      	strh	r3, [r0, #2]
 800bc84:	8081      	strh	r1, [r0, #4]
 800bc86:	80c2      	strh	r2, [r0, #6]
 800bc88:	bd30      	pop	{r4, r5, pc}
 800bc8a:	88cb      	ldrh	r3, [r1, #6]
 800bc8c:	88c2      	ldrh	r2, [r0, #6]
 800bc8e:	1a9b      	subs	r3, r3, r2
 800bc90:	8842      	ldrh	r2, [r0, #2]
 800bc92:	1a9b      	subs	r3, r3, r2
 800bc94:	888a      	ldrh	r2, [r1, #4]
 800bc96:	8881      	ldrh	r1, [r0, #4]
 800bc98:	8043      	strh	r3, [r0, #2]
 800bc9a:	1a52      	subs	r2, r2, r1
 800bc9c:	8801      	ldrh	r1, [r0, #0]
 800bc9e:	1a52      	subs	r2, r2, r1
 800bca0:	8002      	strh	r2, [r0, #0]
 800bca2:	e7f1      	b.n	800bc88 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800bca4:	88cb      	ldrh	r3, [r1, #6]
 800bca6:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800bcaa:	8841      	ldrh	r1, [r0, #2]
 800bcac:	f9b0 5000 	ldrsh.w	r5, [r0]
 800bcb0:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800bcb4:	8045      	strh	r5, [r0, #2]
 800bcb6:	1a9b      	subs	r3, r3, r2
 800bcb8:	1a5b      	subs	r3, r3, r1
 800bcba:	8003      	strh	r3, [r0, #0]
 800bcbc:	8082      	strh	r2, [r0, #4]
 800bcbe:	80c4      	strh	r4, [r0, #6]
 800bcc0:	e7e2      	b.n	800bc88 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800bcc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800bcc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bcc6:	b09f      	sub	sp, #124	; 0x7c
 800bcc8:	9116      	str	r1, [sp, #88]	; 0x58
 800bcca:	9317      	str	r3, [sp, #92]	; 0x5c
 800bccc:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800bcce:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bcd0:	8809      	ldrh	r1, [r1, #0]
 800bcd2:	889b      	ldrh	r3, [r3, #4]
 800bcd4:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800bcd8:	9212      	str	r2, [sp, #72]	; 0x48
 800bcda:	440b      	add	r3, r1
 800bcdc:	b21b      	sxth	r3, r3
 800bcde:	9310      	str	r3, [sp, #64]	; 0x40
 800bce0:	f8d8 3000 	ldr.w	r3, [r8]
 800bce4:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800bce8:	7a59      	ldrb	r1, [r3, #9]
 800bcea:	7a1b      	ldrb	r3, [r3, #8]
 800bcec:	9315      	str	r3, [sp, #84]	; 0x54
 800bcee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800bcf0:	9011      	str	r0, [sp, #68]	; 0x44
 800bcf2:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800bcf6:	9114      	str	r1, [sp, #80]	; 0x50
 800bcf8:	f9b3 5000 	ldrsh.w	r5, [r3]
 800bcfc:	2a00      	cmp	r2, #0
 800bcfe:	d067      	beq.n	800bdd0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800bd00:	f898 3010 	ldrb.w	r3, [r8, #16]
 800bd04:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800bd06:	2b04      	cmp	r3, #4
 800bd08:	bf14      	ite	ne
 800bd0a:	2301      	movne	r3, #1
 800bd0c:	2302      	moveq	r3, #2
 800bd0e:	4413      	add	r3, r2
 800bd10:	f04f 0900 	mov.w	r9, #0
 800bd14:	930f      	str	r3, [sp, #60]	; 0x3c
 800bd16:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800bd1a:	464c      	mov	r4, r9
 800bd1c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800bd20:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800bd24:	4293      	cmp	r3, r2
 800bd26:	f280 808c 	bge.w	800be42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800bd2a:	2300      	movs	r3, #0
 800bd2c:	931c      	str	r3, [sp, #112]	; 0x70
 800bd2e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bd32:	429c      	cmp	r4, r3
 800bd34:	d006      	beq.n	800bd44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800bd36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bd38:	f242 020b 	movw	r2, #8203	; 0x200b
 800bd3c:	4294      	cmp	r4, r2
 800bd3e:	bf18      	it	ne
 800bd40:	4623      	movne	r3, r4
 800bd42:	930d      	str	r3, [sp, #52]	; 0x34
 800bd44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bd46:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800bd48:	f8d8 2000 	ldr.w	r2, [r8]
 800bd4c:	428b      	cmp	r3, r1
 800bd4e:	db41      	blt.n	800bdd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800bd50:	6813      	ldr	r3, [r2, #0]
 800bd52:	4610      	mov	r0, r2
 800bd54:	695b      	ldr	r3, [r3, #20]
 800bd56:	4798      	blx	r3
 800bd58:	4604      	mov	r4, r0
 800bd5a:	f8d8 0000 	ldr.w	r0, [r8]
 800bd5e:	6803      	ldr	r3, [r0, #0]
 800bd60:	aa1d      	add	r2, sp, #116	; 0x74
 800bd62:	689e      	ldr	r6, [r3, #8]
 800bd64:	4621      	mov	r1, r4
 800bd66:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800bd6a:	47b0      	blx	r6
 800bd6c:	901c      	str	r0, [sp, #112]	; 0x70
 800bd6e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bd72:	429c      	cmp	r4, r3
 800bd74:	f000 80e9 	beq.w	800bf4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bd78:	f242 030b 	movw	r3, #8203	; 0x200b
 800bd7c:	429c      	cmp	r4, r3
 800bd7e:	f000 80e4 	beq.w	800bf4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800bd82:	2c00      	cmp	r4, #0
 800bd84:	f000 80f6 	beq.w	800bf74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800bd88:	2c0a      	cmp	r4, #10
 800bd8a:	d060      	beq.n	800be4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800bd8c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800bd8e:	b36a      	cbz	r2, 800bdec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800bd90:	8894      	ldrh	r4, [r2, #4]
 800bd92:	f1bb 0f00 	cmp.w	fp, #0
 800bd96:	d03b      	beq.n	800be10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800bd98:	f892 900d 	ldrb.w	r9, [r2, #13]
 800bd9c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800bda0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800bda4:	f892 900a 	ldrb.w	r9, [r2, #10]
 800bda8:	f1bb 0f01 	cmp.w	fp, #1
 800bdac:	ea49 0903 	orr.w	r9, r9, r3
 800bdb0:	d134      	bne.n	800be1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800bdb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bdb4:	eba5 0509 	sub.w	r5, r5, r9
 800bdb8:	2b00      	cmp	r3, #0
 800bdba:	d14f      	bne.n	800be5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800bdbc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800bdbe:	eb09 0305 	add.w	r3, r9, r5
 800bdc2:	4413      	add	r3, r2
 800bdc4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800bdc6:	f9b2 2000 	ldrsh.w	r2, [r2]
 800bdca:	4293      	cmp	r3, r2
 800bdcc:	da51      	bge.n	800be72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800bdce:	e038      	b.n	800be42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800bdd0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800bdd2:	e79d      	b.n	800bd10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800bdd4:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800bdd8:	9301      	str	r3, [sp, #4]
 800bdda:	ab1d      	add	r3, sp, #116	; 0x74
 800bddc:	9300      	str	r3, [sp, #0]
 800bdde:	4659      	mov	r1, fp
 800bde0:	ab1c      	add	r3, sp, #112	; 0x70
 800bde2:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800bde4:	f002 fdd6 	bl	800e994 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800bde8:	4604      	mov	r4, r0
 800bdea:	e7c0      	b.n	800bd6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800bdec:	f8d8 0000 	ldr.w	r0, [r8]
 800bdf0:	6803      	ldr	r3, [r0, #0]
 800bdf2:	691b      	ldr	r3, [r3, #16]
 800bdf4:	4798      	blx	r3
 800bdf6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bdfa:	4298      	cmp	r0, r3
 800bdfc:	f000 80a5 	beq.w	800bf4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800be00:	f242 030b 	movw	r3, #8203	; 0x200b
 800be04:	4298      	cmp	r0, r3
 800be06:	f000 80a0 	beq.w	800bf4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800be0a:	f1bb 0f00 	cmp.w	fp, #0
 800be0e:	d100      	bne.n	800be12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800be10:	444d      	add	r5, r9
 800be12:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800be14:	2a00      	cmp	r2, #0
 800be16:	d1bf      	bne.n	800bd98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800be18:	4691      	mov	r9, r2
 800be1a:	e096      	b.n	800bf4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800be1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800be1e:	2b00      	cmp	r3, #0
 800be20:	f000 80aa 	beq.w	800bf78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800be24:	f1bb 0f00 	cmp.w	fp, #0
 800be28:	d118      	bne.n	800be5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800be2a:	f8d8 0000 	ldr.w	r0, [r8]
 800be2e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800be30:	6803      	ldr	r3, [r0, #0]
 800be32:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800be34:	4798      	blx	r3
 800be36:	4405      	add	r5, r0
 800be38:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800be3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800be3c:	1aeb      	subs	r3, r5, r3
 800be3e:	4293      	cmp	r3, r2
 800be40:	dd17      	ble.n	800be72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800be42:	2c00      	cmp	r4, #0
 800be44:	f000 8096 	beq.w	800bf74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800be48:	2c0a      	cmp	r4, #10
 800be4a:	f040 8084 	bne.w	800bf56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800be4e:	240a      	movs	r4, #10
 800be50:	fab4 f084 	clz	r0, r4
 800be54:	0940      	lsrs	r0, r0, #5
 800be56:	b01f      	add	sp, #124	; 0x7c
 800be58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be5c:	f8d8 0000 	ldr.w	r0, [r8]
 800be60:	990d      	ldr	r1, [sp, #52]	; 0x34
 800be62:	6803      	ldr	r3, [r0, #0]
 800be64:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800be66:	4798      	blx	r3
 800be68:	f1bb 0f01 	cmp.w	fp, #1
 800be6c:	eba5 0500 	sub.w	r5, r5, r0
 800be70:	d0a4      	beq.n	800bdbc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800be72:	981c      	ldr	r0, [sp, #112]	; 0x70
 800be74:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800be76:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800be7a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800be7e:	7b43      	ldrb	r3, [r0, #13]
 800be80:	015b      	lsls	r3, r3, #5
 800be82:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800be86:	7983      	ldrb	r3, [r0, #6]
 800be88:	4429      	add	r1, r5
 800be8a:	4313      	orrs	r3, r2
 800be8c:	440b      	add	r3, r1
 800be8e:	42b3      	cmp	r3, r6
 800be90:	db5b      	blt.n	800bf4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800be92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800be94:	4299      	cmp	r1, r3
 800be96:	da58      	bge.n	800bf4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800be98:	f8d8 0000 	ldr.w	r0, [r8]
 800be9c:	6803      	ldr	r3, [r0, #0]
 800be9e:	42ae      	cmp	r6, r5
 800bea0:	bfc8      	it	gt
 800bea2:	1b76      	subgt	r6, r6, r5
 800bea4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bea6:	bfcc      	ite	gt
 800bea8:	b2b6      	uxthgt	r6, r6
 800beaa:	2600      	movle	r6, #0
 800beac:	4798      	blx	r3
 800beae:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800beb0:	7b5a      	ldrb	r2, [r3, #13]
 800beb2:	00d1      	lsls	r1, r2, #3
 800beb4:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800beb8:	7a19      	ldrb	r1, [r3, #8]
 800beba:	4339      	orrs	r1, r7
 800bebc:	0657      	lsls	r7, r2, #25
 800bebe:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800bec0:	bf44      	itt	mi
 800bec2:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800bec6:	b209      	sxthmi	r1, r1
 800bec8:	19c7      	adds	r7, r0, r7
 800beca:	1a7f      	subs	r7, r7, r1
 800becc:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800bece:	b2bf      	uxth	r7, r7
 800bed0:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800bed4:	fa0f fa87 	sxth.w	sl, r7
 800bed8:	4551      	cmp	r1, sl
 800beda:	dd3a      	ble.n	800bf52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bedc:	0112      	lsls	r2, r2, #4
 800bede:	79d8      	ldrb	r0, [r3, #7]
 800bee0:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800bee4:	4302      	orrs	r2, r0
 800bee6:	4492      	add	sl, r2
 800bee8:	4551      	cmp	r1, sl
 800beea:	dc2e      	bgt.n	800bf4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800beec:	1bcf      	subs	r7, r1, r7
 800beee:	b2bf      	uxth	r7, r7
 800bef0:	468a      	mov	sl, r1
 800bef2:	9319      	str	r3, [sp, #100]	; 0x64
 800bef4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bef6:	f8d8 0000 	ldr.w	r0, [r8]
 800befa:	681a      	ldr	r2, [r3, #0]
 800befc:	6801      	ldr	r1, [r0, #0]
 800befe:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800bf00:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800bf02:	9313      	str	r3, [sp, #76]	; 0x4c
 800bf04:	9218      	str	r2, [sp, #96]	; 0x60
 800bf06:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800bf08:	4788      	blx	r1
 800bf0a:	f898 1006 	ldrb.w	r1, [r8, #6]
 800bf0e:	910b      	str	r1, [sp, #44]	; 0x2c
 800bf10:	f898 100e 	ldrb.w	r1, [r8, #14]
 800bf14:	910a      	str	r1, [sp, #40]	; 0x28
 800bf16:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800bf1a:	9109      	str	r1, [sp, #36]	; 0x24
 800bf1c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bf1e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800bf22:	9305      	str	r3, [sp, #20]
 800bf24:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bf26:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800bf28:	9206      	str	r2, [sp, #24]
 800bf2a:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800bf2e:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800bf32:	e9cd a601 	strd	sl, r6, [sp, #4]
 800bf36:	442e      	add	r6, r5
 800bf38:	b236      	sxth	r6, r6
 800bf3a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bf3c:	9600      	str	r6, [sp, #0]
 800bf3e:	681a      	ldr	r2, [r3, #0]
 800bf40:	9916      	ldr	r1, [sp, #88]	; 0x58
 800bf42:	685b      	ldr	r3, [r3, #4]
 800bf44:	9811      	ldr	r0, [sp, #68]	; 0x44
 800bf46:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800bf48:	47b0      	blx	r6
 800bf4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bf4c:	3301      	adds	r3, #1
 800bf4e:	930e      	str	r3, [sp, #56]	; 0x38
 800bf50:	e6e6      	b.n	800bd20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800bf52:	2700      	movs	r7, #0
 800bf54:	e7cd      	b.n	800bef2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800bf56:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800bf58:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800bf5a:	3501      	adds	r5, #1
 800bf5c:	429d      	cmp	r5, r3
 800bf5e:	f6bf af77 	bge.w	800be50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800bf62:	4659      	mov	r1, fp
 800bf64:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800bf66:	f7f6 fc05 	bl	8002774 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800bf6a:	4604      	mov	r4, r0
 800bf6c:	b110      	cbz	r0, 800bf74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800bf6e:	280a      	cmp	r0, #10
 800bf70:	d1f2      	bne.n	800bf58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800bf72:	e76c      	b.n	800be4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800bf74:	2400      	movs	r4, #0
 800bf76:	e76b      	b.n	800be50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800bf78:	f1bb 0f00 	cmp.w	fp, #0
 800bf7c:	f43f af5c 	beq.w	800be38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800bf80:	e777      	b.n	800be72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800bf82 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800bf82:	b530      	push	{r4, r5, lr}
 800bf84:	8a44      	ldrh	r4, [r0, #18]
 800bf86:	8ac5      	ldrh	r5, [r0, #22]
 800bf88:	82c3      	strh	r3, [r0, #22]
 800bf8a:	442c      	add	r4, r5
 800bf8c:	1ae4      	subs	r4, r4, r3
 800bf8e:	8244      	strh	r4, [r0, #18]
 800bf90:	8b03      	ldrh	r3, [r0, #24]
 800bf92:	8a84      	ldrh	r4, [r0, #20]
 800bf94:	4422      	add	r2, r4
 800bf96:	440c      	add	r4, r1
 800bf98:	1a59      	subs	r1, r3, r1
 800bf9a:	8342      	strh	r2, [r0, #26]
 800bf9c:	8284      	strh	r4, [r0, #20]
 800bf9e:	8301      	strh	r1, [r0, #24]
 800bfa0:	bd30      	pop	{r4, r5, pc}

0800bfa2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800bfa2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bfa6:	7a43      	ldrb	r3, [r0, #9]
 800bfa8:	1eda      	subs	r2, r3, #3
 800bfaa:	b087      	sub	sp, #28
 800bfac:	4604      	mov	r4, r0
 800bfae:	b2d2      	uxtb	r2, r2
 800bfb0:	460f      	mov	r7, r1
 800bfb2:	2900      	cmp	r1, #0
 800bfb4:	d036      	beq.n	800c024 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800bfb6:	2a01      	cmp	r2, #1
 800bfb8:	d932      	bls.n	800c020 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800bfba:	1e58      	subs	r0, r3, #1
 800bfbc:	f1d0 0b00 	rsbs	fp, r0, #0
 800bfc0:	eb4b 0b00 	adc.w	fp, fp, r0
 800bfc4:	1e99      	subs	r1, r3, #2
 800bfc6:	424b      	negs	r3, r1
 800bfc8:	414b      	adcs	r3, r1
 800bfca:	9303      	str	r3, [sp, #12]
 800bfcc:	2300      	movs	r3, #0
 800bfce:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800bfd2:	2500      	movs	r5, #0
 800bfd4:	8265      	strh	r5, [r4, #18]
 800bfd6:	82a5      	strh	r5, [r4, #20]
 800bfd8:	46a9      	mov	r9, r5
 800bfda:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800bfde:	2300      	movs	r3, #0
 800bfe0:	9305      	str	r3, [sp, #20]
 800bfe2:	8823      	ldrh	r3, [r4, #0]
 800bfe4:	2b20      	cmp	r3, #32
 800bfe6:	d02b      	beq.n	800c040 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800bfe8:	eba3 020a 	sub.w	r2, r3, sl
 800bfec:	4256      	negs	r6, r2
 800bfee:	4156      	adcs	r6, r2
 800bff0:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800bff4:	4293      	cmp	r3, r2
 800bff6:	d004      	beq.n	800c002 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800bff8:	4553      	cmp	r3, sl
 800bffa:	bf16      	itet	ne
 800bffc:	4699      	movne	r9, r3
 800bffe:	2601      	moveq	r6, #1
 800c000:	2600      	movne	r6, #0
 800c002:	ab05      	add	r3, sp, #20
 800c004:	68e2      	ldr	r2, [r4, #12]
 800c006:	7a21      	ldrb	r1, [r4, #8]
 800c008:	6860      	ldr	r0, [r4, #4]
 800c00a:	f002 fc6b 	bl	800e8e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c00e:	8020      	strh	r0, [r4, #0]
 800c010:	b9c8      	cbnz	r0, 800c046 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800c012:	8b22      	ldrh	r2, [r4, #24]
 800c014:	2300      	movs	r3, #0
 800c016:	4611      	mov	r1, r2
 800c018:	4620      	mov	r0, r4
 800c01a:	f7ff ffb2 	bl	800bf82 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c01e:	e066      	b.n	800c0ee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800c020:	468b      	mov	fp, r1
 800c022:	e7cf      	b.n	800bfc4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800c024:	3b01      	subs	r3, #1
 800c026:	2a01      	cmp	r2, #1
 800c028:	bf8c      	ite	hi
 800c02a:	2200      	movhi	r2, #0
 800c02c:	2201      	movls	r2, #1
 800c02e:	2b01      	cmp	r3, #1
 800c030:	bf8c      	ite	hi
 800c032:	2300      	movhi	r3, #0
 800c034:	2301      	movls	r3, #1
 800c036:	9202      	str	r2, [sp, #8]
 800c038:	9301      	str	r3, [sp, #4]
 800c03a:	9103      	str	r1, [sp, #12]
 800c03c:	468b      	mov	fp, r1
 800c03e:	e7c8      	b.n	800bfd2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800c040:	4699      	mov	r9, r3
 800c042:	2601      	movs	r6, #1
 800c044:	e7dd      	b.n	800c002 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800c046:	8ae3      	ldrh	r3, [r4, #22]
 800c048:	280a      	cmp	r0, #10
 800c04a:	f103 0301 	add.w	r3, r3, #1
 800c04e:	82e3      	strh	r3, [r4, #22]
 800c050:	d0df      	beq.n	800c012 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800c052:	9a05      	ldr	r2, [sp, #20]
 800c054:	bb42      	cbnz	r2, 800c0a8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800c056:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c05a:	4298      	cmp	r0, r3
 800c05c:	d001      	beq.n	800c062 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800c05e:	4550      	cmp	r0, sl
 800c060:	d1bd      	bne.n	800bfde <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c062:	8823      	ldrh	r3, [r4, #0]
 800c064:	8b21      	ldrh	r1, [r4, #24]
 800c066:	2b20      	cmp	r3, #32
 800c068:	d001      	beq.n	800c06e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800c06a:	4553      	cmp	r3, sl
 800c06c:	d131      	bne.n	800c0d2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800c06e:	2e00      	cmp	r6, #0
 800c070:	bf0a      	itet	eq
 800c072:	460d      	moveq	r5, r1
 800c074:	4630      	movne	r0, r6
 800c076:	2001      	moveq	r0, #1
 800c078:	440a      	add	r2, r1
 800c07a:	8aa3      	ldrh	r3, [r4, #20]
 800c07c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800c080:	b292      	uxth	r2, r2
 800c082:	8322      	strh	r2, [r4, #24]
 800c084:	4413      	add	r3, r2
 800c086:	2f00      	cmp	r7, #0
 800c088:	d03a      	beq.n	800c100 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800c08a:	f1bb 0f00 	cmp.w	fp, #0
 800c08e:	d102      	bne.n	800c096 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800c090:	9903      	ldr	r1, [sp, #12]
 800c092:	b301      	cbz	r1, 800c0d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800c094:	b1f8      	cbz	r0, 800c0d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800c096:	8ba1      	ldrh	r1, [r4, #28]
 800c098:	4419      	add	r1, r3
 800c09a:	458c      	cmp	ip, r1
 800c09c:	da2a      	bge.n	800c0f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800c09e:	8a61      	ldrh	r1, [r4, #18]
 800c0a0:	b341      	cbz	r1, 800c0f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800c0a2:	4563      	cmp	r3, ip
 800c0a4:	dd9b      	ble.n	800bfde <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c0a6:	e01c      	b.n	800c0e2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800c0a8:	8893      	ldrh	r3, [r2, #4]
 800c0aa:	8023      	strh	r3, [r4, #0]
 800c0ac:	f892 800d 	ldrb.w	r8, [r2, #13]
 800c0b0:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800c0b4:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800c0b8:	f892 800a 	ldrb.w	r8, [r2, #10]
 800c0bc:	ea48 0800 	orr.w	r8, r8, r0
 800c0c0:	68e0      	ldr	r0, [r4, #12]
 800c0c2:	6803      	ldr	r3, [r0, #0]
 800c0c4:	4649      	mov	r1, r9
 800c0c6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c0c8:	4798      	blx	r3
 800c0ca:	eb08 0200 	add.w	r2, r8, r0
 800c0ce:	b292      	uxth	r2, r2
 800c0d0:	e7c7      	b.n	800c062 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800c0d2:	2000      	movs	r0, #0
 800c0d4:	e7d0      	b.n	800c078 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800c0d6:	4563      	cmp	r3, ip
 800c0d8:	dd81      	ble.n	800bfde <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c0da:	8a63      	ldrh	r3, [r4, #18]
 800c0dc:	2b00      	cmp	r3, #0
 800c0de:	f43f af7e 	beq.w	800bfde <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c0e2:	2301      	movs	r3, #1
 800c0e4:	77a3      	strb	r3, [r4, #30]
 800c0e6:	8ba2      	ldrh	r2, [r4, #28]
 800c0e8:	8b63      	ldrh	r3, [r4, #26]
 800c0ea:	4413      	add	r3, r2
 800c0ec:	8363      	strh	r3, [r4, #26]
 800c0ee:	b007      	add	sp, #28
 800c0f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c0f4:	2300      	movs	r3, #0
 800c0f6:	4611      	mov	r1, r2
 800c0f8:	4620      	mov	r0, r4
 800c0fa:	f7ff ff42 	bl	800bf82 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c0fe:	e76e      	b.n	800bfde <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c100:	4563      	cmp	r3, ip
 800c102:	dd14      	ble.n	800c12e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800c104:	9b02      	ldr	r3, [sp, #8]
 800c106:	b113      	cbz	r3, 800c10e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800c108:	2301      	movs	r3, #1
 800c10a:	460a      	mov	r2, r1
 800c10c:	e783      	b.n	800c016 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800c10e:	9b01      	ldr	r3, [sp, #4]
 800c110:	2b00      	cmp	r3, #0
 800c112:	f43f af64 	beq.w	800bfde <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c116:	2800      	cmp	r0, #0
 800c118:	f47f af61 	bne.w	800bfde <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c11c:	b116      	cbz	r6, 800c124 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800c11e:	2301      	movs	r3, #1
 800c120:	462a      	mov	r2, r5
 800c122:	e779      	b.n	800c018 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800c124:	8a63      	ldrh	r3, [r4, #18]
 800c126:	2b00      	cmp	r3, #0
 800c128:	f43f af59 	beq.w	800bfde <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c12c:	e7df      	b.n	800c0ee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800c12e:	2800      	cmp	r0, #0
 800c130:	f47f af55 	bne.w	800bfde <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c134:	2e00      	cmp	r6, #0
 800c136:	f43f af52 	beq.w	800bfde <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c13a:	2301      	movs	r3, #1
 800c13c:	462a      	mov	r2, r5
 800c13e:	e7db      	b.n	800c0f8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800c140 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800c140:	b530      	push	{r4, r5, lr}
 800c142:	4605      	mov	r5, r0
 800c144:	b08b      	sub	sp, #44	; 0x2c
 800c146:	b191      	cbz	r1, 800c16e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800c148:	e9cd 3100 	strd	r3, r1, [sp]
 800c14c:	4613      	mov	r3, r2
 800c14e:	4601      	mov	r1, r0
 800c150:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800c154:	a802      	add	r0, sp, #8
 800c156:	f7ff fd0d 	bl	800bb74 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800c15a:	2401      	movs	r4, #1
 800c15c:	2100      	movs	r1, #0
 800c15e:	a802      	add	r0, sp, #8
 800c160:	f7ff ff1f 	bl	800bfa2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c164:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800c168:	b163      	cbz	r3, 800c184 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800c16a:	3401      	adds	r4, #1
 800c16c:	e7f6      	b.n	800c15c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800c16e:	f002 fcb3 	bl	800ead8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c172:	2401      	movs	r4, #1
 800c174:	280a      	cmp	r0, #10
 800c176:	4628      	mov	r0, r5
 800c178:	bf08      	it	eq
 800c17a:	3401      	addeq	r4, #1
 800c17c:	f002 fcac 	bl	800ead8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c180:	2800      	cmp	r0, #0
 800c182:	d1f7      	bne.n	800c174 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800c184:	b2a0      	uxth	r0, r4
 800c186:	b00b      	add	sp, #44	; 0x2c
 800c188:	bd30      	pop	{r4, r5, pc}

0800c18a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800c18a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c18e:	b0e5      	sub	sp, #404	; 0x194
 800c190:	4689      	mov	r9, r1
 800c192:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800c196:	900a      	str	r0, [sp, #40]	; 0x28
 800c198:	461c      	mov	r4, r3
 800c19a:	f1ba 0f00 	cmp.w	sl, #0
 800c19e:	f000 80b4 	beq.w	800c30a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c1a2:	681b      	ldr	r3, [r3, #0]
 800c1a4:	2b00      	cmp	r3, #0
 800c1a6:	f000 80b0 	beq.w	800c30a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c1aa:	7ba3      	ldrb	r3, [r4, #14]
 800c1ac:	2b00      	cmp	r3, #0
 800c1ae:	f000 80ac 	beq.w	800c30a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c1b2:	6810      	ldr	r0, [r2, #0]
 800c1b4:	6851      	ldr	r1, [r2, #4]
 800c1b6:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800c1ba:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800c1be:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800c1c2:	4643      	mov	r3, r8
 800c1c4:	c303      	stmia	r3!, {r0, r1}
 800c1c6:	2500      	movs	r5, #0
 800c1c8:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800c1cc:	79a2      	ldrb	r2, [r4, #6]
 800c1ce:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c1d2:	a90f      	add	r1, sp, #60	; 0x3c
 800c1d4:	4640      	mov	r0, r8
 800c1d6:	950f      	str	r5, [sp, #60]	; 0x3c
 800c1d8:	f7ff fd42 	bl	800bc60 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c1dc:	a90f      	add	r1, sp, #60	; 0x3c
 800c1de:	4608      	mov	r0, r1
 800c1e0:	79a2      	ldrb	r2, [r4, #6]
 800c1e2:	af19      	add	r7, sp, #100	; 0x64
 800c1e4:	f7ff fd3c 	bl	800bc60 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c1e8:	4638      	mov	r0, r7
 800c1ea:	f002 f829 	bl	800e240 <_ZN8touchgfx12TextProviderC1Ev>
 800c1ee:	6820      	ldr	r0, [r4, #0]
 800c1f0:	6803      	ldr	r3, [r0, #0]
 800c1f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c1f4:	4798      	blx	r3
 800c1f6:	4606      	mov	r6, r0
 800c1f8:	6820      	ldr	r0, [r4, #0]
 800c1fa:	6803      	ldr	r3, [r0, #0]
 800c1fc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c1fe:	4798      	blx	r3
 800c200:	4633      	mov	r3, r6
 800c202:	9000      	str	r0, [sp, #0]
 800c204:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800c206:	4651      	mov	r1, sl
 800c208:	4638      	mov	r0, r7
 800c20a:	f002 f86c 	bl	800e2e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c20e:	6820      	ldr	r0, [r4, #0]
 800c210:	7923      	ldrb	r3, [r4, #4]
 800c212:	9308      	str	r3, [sp, #32]
 800c214:	6803      	ldr	r3, [r0, #0]
 800c216:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c218:	4798      	blx	r3
 800c21a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c21e:	181e      	adds	r6, r3, r0
 800c220:	42ae      	cmp	r6, r5
 800c222:	dd06      	ble.n	800c232 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800c224:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800c228:	4282      	cmp	r2, r0
 800c22a:	bfa4      	itt	ge
 800c22c:	189d      	addge	r5, r3, r2
 800c22e:	fb95 f5f6 	sdivge	r5, r5, r6
 800c232:	a832      	add	r0, sp, #200	; 0xc8
 800c234:	f002 f804 	bl	800e240 <_ZN8touchgfx12TextProviderC1Ev>
 800c238:	7c23      	ldrb	r3, [r4, #16]
 800c23a:	b17b      	cbz	r3, 800c25c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800c23c:	6820      	ldr	r0, [r4, #0]
 800c23e:	6803      	ldr	r3, [r0, #0]
 800c240:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c242:	4798      	blx	r3
 800c244:	4683      	mov	fp, r0
 800c246:	6820      	ldr	r0, [r4, #0]
 800c248:	6803      	ldr	r3, [r0, #0]
 800c24a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c24c:	4798      	blx	r3
 800c24e:	465b      	mov	r3, fp
 800c250:	9000      	str	r0, [sp, #0]
 800c252:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800c254:	4651      	mov	r1, sl
 800c256:	a832      	add	r0, sp, #200	; 0xc8
 800c258:	f002 f845 	bl	800e2e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c25c:	7be1      	ldrb	r1, [r4, #15]
 800c25e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800c262:	7963      	ldrb	r3, [r4, #5]
 800c264:	1a52      	subs	r2, r2, r1
 800c266:	7c21      	ldrb	r1, [r4, #16]
 800c268:	9101      	str	r1, [sp, #4]
 800c26a:	6821      	ldr	r1, [r4, #0]
 800c26c:	9100      	str	r1, [sp, #0]
 800c26e:	b292      	uxth	r2, r2
 800c270:	a932      	add	r1, sp, #200	; 0xc8
 800c272:	a811      	add	r0, sp, #68	; 0x44
 800c274:	f7ff fc7e 	bl	800bb74 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800c278:	7c23      	ldrb	r3, [r4, #16]
 800c27a:	b9bb      	cbnz	r3, 800c2ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 800c27c:	fa1f fa86 	uxth.w	sl, r6
 800c280:	2d00      	cmp	r5, #0
 800c282:	dd45      	ble.n	800c310 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800c284:	4638      	mov	r0, r7
 800c286:	f002 fc27 	bl	800ead8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c28a:	2800      	cmp	r0, #0
 800c28c:	d03d      	beq.n	800c30a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c28e:	280a      	cmp	r0, #10
 800c290:	d1f6      	bne.n	800c280 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800c292:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c296:	4453      	add	r3, sl
 800c298:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c29c:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800c2a0:	eba3 030a 	sub.w	r3, r3, sl
 800c2a4:	3d01      	subs	r5, #1
 800c2a6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c2aa:	e7e9      	b.n	800c280 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800c2ac:	0073      	lsls	r3, r6, #1
 800c2ae:	9309      	str	r3, [sp, #36]	; 0x24
 800c2b0:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800c2b4:	fa1f fa86 	uxth.w	sl, r6
 800c2b8:	2d00      	cmp	r5, #0
 800c2ba:	dd29      	ble.n	800c310 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800c2bc:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800c2c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c2c2:	428b      	cmp	r3, r1
 800c2c4:	bfd4      	ite	le
 800c2c6:	2100      	movle	r1, #0
 800c2c8:	2101      	movgt	r1, #1
 800c2ca:	a811      	add	r0, sp, #68	; 0x44
 800c2cc:	f7ff fe69 	bl	800bfa2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c2d0:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800c2d4:	3b01      	subs	r3, #1
 800c2d6:	b29b      	uxth	r3, r3
 800c2d8:	455b      	cmp	r3, fp
 800c2da:	930b      	str	r3, [sp, #44]	; 0x2c
 800c2dc:	d005      	beq.n	800c2ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 800c2de:	7961      	ldrb	r1, [r4, #5]
 800c2e0:	4638      	mov	r0, r7
 800c2e2:	f7f6 fa47 	bl	8002774 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c2e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c2e8:	e7f4      	b.n	800c2d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 800c2ea:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c2ee:	4453      	add	r3, sl
 800c2f0:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c2f4:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800c2f8:	eba3 030a 	sub.w	r3, r3, sl
 800c2fc:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c300:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c304:	3d01      	subs	r5, #1
 800c306:	2b00      	cmp	r3, #0
 800c308:	d1d6      	bne.n	800c2b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 800c30a:	b065      	add	sp, #404	; 0x194
 800c30c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c310:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800c314:	ad4b      	add	r5, sp, #300	; 0x12c
 800c316:	f04f 0b00 	mov.w	fp, #0
 800c31a:	7c23      	ldrb	r3, [r4, #16]
 800c31c:	2b00      	cmp	r3, #0
 800c31e:	d067      	beq.n	800c3f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x266>
 800c320:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800c324:	458a      	cmp	sl, r1
 800c326:	bfd4      	ite	le
 800c328:	2100      	movle	r1, #0
 800c32a:	2101      	movgt	r1, #1
 800c32c:	a811      	add	r0, sp, #68	; 0x44
 800c32e:	f7ff fe38 	bl	800bfa2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c332:	9b08      	ldr	r3, [sp, #32]
 800c334:	2b00      	cmp	r3, #0
 800c336:	d056      	beq.n	800c3e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800c338:	7c23      	ldrb	r3, [r4, #16]
 800c33a:	9309      	str	r3, [sp, #36]	; 0x24
 800c33c:	2264      	movs	r2, #100	; 0x64
 800c33e:	4639      	mov	r1, r7
 800c340:	4628      	mov	r0, r5
 800c342:	f00f fc69 	bl	801bc18 <memcpy>
 800c346:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c348:	2b00      	cmp	r3, #0
 800c34a:	d059      	beq.n	800c400 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x276>
 800c34c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800c350:	7922      	ldrb	r2, [r4, #4]
 800c352:	2a01      	cmp	r2, #1
 800c354:	d13d      	bne.n	800c3d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800c356:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800c35a:	1ac0      	subs	r0, r0, r3
 800c35c:	2302      	movs	r3, #2
 800c35e:	fb90 f0f3 	sdiv	r0, r0, r3
 800c362:	b200      	sxth	r0, r0
 800c364:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800c368:	4418      	add	r0, r3
 800c36a:	7c23      	ldrb	r3, [r4, #16]
 800c36c:	f8ad 012c 	strh.w	r0, [sp, #300]	; 0x12c
 800c370:	2b00      	cmp	r3, #0
 800c372:	d03a      	beq.n	800c3ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800c374:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800c378:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800c37c:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800c380:	9500      	str	r5, [sp, #0]
 800c382:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800c386:	e9cd b703 	strd	fp, r7, [sp, #12]
 800c38a:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800c38e:	464a      	mov	r2, r9
 800c390:	2100      	movs	r1, #0
 800c392:	980a      	ldr	r0, [sp, #40]	; 0x28
 800c394:	f7ff fc95 	bl	800bcc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800c398:	2800      	cmp	r0, #0
 800c39a:	d1b6      	bne.n	800c30a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c39c:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c3a0:	b2b2      	uxth	r2, r6
 800c3a2:	4611      	mov	r1, r2
 800c3a4:	4413      	add	r3, r2
 800c3a6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800c3aa:	1a52      	subs	r2, r2, r1
 800c3ac:	7c21      	ldrb	r1, [r4, #16]
 800c3ae:	b21b      	sxth	r3, r3
 800c3b0:	b212      	sxth	r2, r2
 800c3b2:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c3b6:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800c3ba:	b109      	cbz	r1, 800c3c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x236>
 800c3bc:	42b2      	cmp	r2, r6
 800c3be:	dba4      	blt.n	800c30a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c3c0:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800c3c4:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800c3c8:	440a      	add	r2, r1
 800c3ca:	b212      	sxth	r2, r2
 800c3cc:	4293      	cmp	r3, r2
 800c3ce:	dda4      	ble.n	800c31a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x190>
 800c3d0:	e79b      	b.n	800c30a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c3d2:	2a02      	cmp	r2, #2
 800c3d4:	d105      	bne.n	800c3e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800c3d6:	7be2      	ldrb	r2, [r4, #15]
 800c3d8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800c3dc:	1a80      	subs	r0, r0, r2
 800c3de:	1ac0      	subs	r0, r0, r3
 800c3e0:	e7bf      	b.n	800c362 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d8>
 800c3e2:	2000      	movs	r0, #0
 800c3e4:	e7be      	b.n	800c364 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1da>
 800c3e6:	7be0      	ldrb	r0, [r4, #15]
 800c3e8:	e7bc      	b.n	800c364 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1da>
 800c3ea:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c3ee:	e7c3      	b.n	800c378 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ee>
 800c3f0:	9b08      	ldr	r3, [sp, #32]
 800c3f2:	2b00      	cmp	r3, #0
 800c3f4:	d0f7      	beq.n	800c3e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800c3f6:	2264      	movs	r2, #100	; 0x64
 800c3f8:	4639      	mov	r1, r7
 800c3fa:	4628      	mov	r0, r5
 800c3fc:	f00f fc0c 	bl	801bc18 <memcpy>
 800c400:	2300      	movs	r3, #0
 800c402:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c406:	6821      	ldr	r1, [r4, #0]
 800c408:	4628      	mov	r0, r5
 800c40a:	f7ff fbed 	bl	800bbe8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800c40e:	b203      	sxth	r3, r0
 800c410:	e79e      	b.n	800c350 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>

0800c412 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c412:	b510      	push	{r4, lr}
 800c414:	2b02      	cmp	r3, #2
 800c416:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c41a:	d00b      	beq.n	800c434 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800c41c:	2b03      	cmp	r3, #3
 800c41e:	d00e      	beq.n	800c43e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800c420:	2b01      	cmp	r3, #1
 800c422:	d001      	beq.n	800c428 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800c424:	1860      	adds	r0, r4, r1
 800c426:	bd10      	pop	{r4, pc}
 800c428:	8880      	ldrh	r0, [r0, #4]
 800c42a:	4420      	add	r0, r4
 800c42c:	b200      	sxth	r0, r0
 800c42e:	1a80      	subs	r0, r0, r2
 800c430:	3801      	subs	r0, #1
 800c432:	e7f8      	b.n	800c426 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800c434:	8880      	ldrh	r0, [r0, #4]
 800c436:	4420      	add	r0, r4
 800c438:	b200      	sxth	r0, r0
 800c43a:	1a40      	subs	r0, r0, r1
 800c43c:	e7f8      	b.n	800c430 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800c43e:	18a0      	adds	r0, r4, r2
 800c440:	e7f1      	b.n	800c426 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800c442 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800c442:	b510      	push	{r4, lr}
 800c444:	2b02      	cmp	r3, #2
 800c446:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800c44a:	d006      	beq.n	800c45a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800c44c:	2b03      	cmp	r3, #3
 800c44e:	d00a      	beq.n	800c466 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800c450:	2b01      	cmp	r3, #1
 800c452:	bf14      	ite	ne
 800c454:	18a0      	addne	r0, r4, r2
 800c456:	1860      	addeq	r0, r4, r1
 800c458:	bd10      	pop	{r4, pc}
 800c45a:	88c0      	ldrh	r0, [r0, #6]
 800c45c:	4420      	add	r0, r4
 800c45e:	b200      	sxth	r0, r0
 800c460:	1a80      	subs	r0, r0, r2
 800c462:	3801      	subs	r0, #1
 800c464:	e7f8      	b.n	800c458 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800c466:	88c0      	ldrh	r0, [r0, #6]
 800c468:	4420      	add	r0, r4
 800c46a:	b200      	sxth	r0, r0
 800c46c:	1a40      	subs	r0, r0, r1
 800c46e:	e7f8      	b.n	800c462 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

0800c470 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800c470:	4b01      	ldr	r3, [pc, #4]	; (800c478 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800c472:	2200      	movs	r2, #0
 800c474:	601a      	str	r2, [r3, #0]
 800c476:	4770      	bx	lr
 800c478:	20013510 	.word	0x20013510

0800c47c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800c47c:	4603      	mov	r3, r0
 800c47e:	b1c8      	cbz	r0, 800c4b4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800c480:	0c02      	lsrs	r2, r0, #16
 800c482:	0412      	lsls	r2, r2, #16
 800c484:	b9a2      	cbnz	r2, 800c4b0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800c486:	0403      	lsls	r3, r0, #16
 800c488:	2010      	movs	r0, #16
 800c48a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800c48e:	bf04      	itt	eq
 800c490:	021b      	lsleq	r3, r3, #8
 800c492:	3008      	addeq	r0, #8
 800c494:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800c498:	bf04      	itt	eq
 800c49a:	011b      	lsleq	r3, r3, #4
 800c49c:	3004      	addeq	r0, #4
 800c49e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800c4a2:	bf04      	itt	eq
 800c4a4:	009b      	lsleq	r3, r3, #2
 800c4a6:	3002      	addeq	r0, #2
 800c4a8:	2b00      	cmp	r3, #0
 800c4aa:	db04      	blt.n	800c4b6 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800c4ac:	3001      	adds	r0, #1
 800c4ae:	4770      	bx	lr
 800c4b0:	2000      	movs	r0, #0
 800c4b2:	e7ea      	b.n	800c48a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800c4b4:	2020      	movs	r0, #32
 800c4b6:	4770      	bx	lr

0800c4b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800c4b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c4bc:	b087      	sub	sp, #28
 800c4be:	4681      	mov	r9, r0
 800c4c0:	4698      	mov	r8, r3
 800c4c2:	4610      	mov	r0, r2
 800c4c4:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800c4c8:	460d      	mov	r5, r1
 800c4ca:	b981      	cbnz	r1, 800c4ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800c4cc:	b14b      	cbz	r3, 800c4e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800c4ce:	460b      	mov	r3, r1
 800c4d0:	e9cd 4700 	strd	r4, r7, [sp]
 800c4d4:	464a      	mov	r2, r9
 800c4d6:	4641      	mov	r1, r8
 800c4d8:	f7ff ffee 	bl	800c4b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c4dc:	b007      	add	sp, #28
 800c4de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c4e2:	f04f 33ff 	mov.w	r3, #4294967295
 800c4e6:	603b      	str	r3, [r7, #0]
 800c4e8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800c4ec:	e7f6      	b.n	800c4dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c4ee:	fa32 fa01 	lsrs.w	sl, r2, r1
 800c4f2:	d107      	bne.n	800c504 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800c4f4:	fb09 f602 	mul.w	r6, r9, r2
 800c4f8:	fbb6 f0f4 	udiv	r0, r6, r4
 800c4fc:	fb04 6610 	mls	r6, r4, r0, r6
 800c500:	603e      	str	r6, [r7, #0]
 800c502:	e7eb      	b.n	800c4dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c504:	2601      	movs	r6, #1
 800c506:	408e      	lsls	r6, r1
 800c508:	3e01      	subs	r6, #1
 800c50a:	4016      	ands	r6, r2
 800c50c:	fa09 fb01 	lsl.w	fp, r9, r1
 800c510:	4630      	mov	r0, r6
 800c512:	fbbb f3f4 	udiv	r3, fp, r4
 800c516:	9302      	str	r3, [sp, #8]
 800c518:	fb0a f303 	mul.w	r3, sl, r3
 800c51c:	9303      	str	r3, [sp, #12]
 800c51e:	f7ff ffad 	bl	800c47c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c522:	464a      	mov	r2, r9
 800c524:	460b      	mov	r3, r1
 800c526:	e9cd 4700 	strd	r4, r7, [sp]
 800c52a:	4601      	mov	r1, r0
 800c52c:	4630      	mov	r0, r6
 800c52e:	f7ff ffc3 	bl	800c4b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c532:	9b02      	ldr	r3, [sp, #8]
 800c534:	fb04 bb13 	mls	fp, r4, r3, fp
 800c538:	4606      	mov	r6, r0
 800c53a:	4658      	mov	r0, fp
 800c53c:	eb05 0108 	add.w	r1, r5, r8
 800c540:	f7ff ff9c 	bl	800c47c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c544:	ab05      	add	r3, sp, #20
 800c546:	e9cd 4300 	strd	r4, r3, [sp]
 800c54a:	465a      	mov	r2, fp
 800c54c:	4603      	mov	r3, r0
 800c54e:	4650      	mov	r0, sl
 800c550:	f7ff ffb2 	bl	800c4b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c554:	6839      	ldr	r1, [r7, #0]
 800c556:	9a05      	ldr	r2, [sp, #20]
 800c558:	9b03      	ldr	r3, [sp, #12]
 800c55a:	4411      	add	r1, r2
 800c55c:	fbb1 f2f4 	udiv	r2, r1, r4
 800c560:	18d3      	adds	r3, r2, r3
 800c562:	441e      	add	r6, r3
 800c564:	fb04 1412 	mls	r4, r4, r2, r1
 800c568:	4430      	add	r0, r6
 800c56a:	603c      	str	r4, [r7, #0]
 800c56c:	e7b6      	b.n	800c4dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800c56e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800c56e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c572:	b085      	sub	sp, #20
 800c574:	f1b0 0900 	subs.w	r9, r0, #0
 800c578:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800c57a:	461d      	mov	r5, r3
 800c57c:	bfbf      	itttt	lt
 800c57e:	6823      	ldrlt	r3, [r4, #0]
 800c580:	425b      	neglt	r3, r3
 800c582:	f1c9 0900 	rsblt	r9, r9, #0
 800c586:	6023      	strlt	r3, [r4, #0]
 800c588:	bfb4      	ite	lt
 800c58a:	f04f 36ff 	movlt.w	r6, #4294967295
 800c58e:	2601      	movge	r6, #1
 800c590:	2a00      	cmp	r2, #0
 800c592:	4617      	mov	r7, r2
 800c594:	da04      	bge.n	800c5a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800c596:	6823      	ldr	r3, [r4, #0]
 800c598:	425b      	negs	r3, r3
 800c59a:	4257      	negs	r7, r2
 800c59c:	4276      	negs	r6, r6
 800c59e:	6023      	str	r3, [r4, #0]
 800c5a0:	2d00      	cmp	r5, #0
 800c5a2:	4638      	mov	r0, r7
 800c5a4:	bfba      	itte	lt
 800c5a6:	426d      	neglt	r5, r5
 800c5a8:	f04f 38ff 	movlt.w	r8, #4294967295
 800c5ac:	f04f 0801 	movge.w	r8, #1
 800c5b0:	f7ff ff64 	bl	800c47c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c5b4:	ab03      	add	r3, sp, #12
 800c5b6:	e9cd 5300 	strd	r5, r3, [sp]
 800c5ba:	463a      	mov	r2, r7
 800c5bc:	4603      	mov	r3, r0
 800c5be:	4648      	mov	r0, r9
 800c5c0:	f7ff ff7a 	bl	800c4b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c5c4:	6823      	ldr	r3, [r4, #0]
 800c5c6:	9a03      	ldr	r2, [sp, #12]
 800c5c8:	4546      	cmp	r6, r8
 800c5ca:	441a      	add	r2, r3
 800c5cc:	fb92 f3f5 	sdiv	r3, r2, r5
 800c5d0:	4418      	add	r0, r3
 800c5d2:	bf18      	it	ne
 800c5d4:	4240      	negne	r0, r0
 800c5d6:	fb05 2313 	mls	r3, r5, r3, r2
 800c5da:	1c72      	adds	r2, r6, #1
 800c5dc:	6023      	str	r3, [r4, #0]
 800c5de:	d105      	bne.n	800c5ec <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800c5e0:	2b00      	cmp	r3, #0
 800c5e2:	f1c3 0200 	rsb	r2, r3, #0
 800c5e6:	db0b      	blt.n	800c600 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800c5e8:	6022      	str	r2, [r4, #0]
 800c5ea:	e006      	b.n	800c5fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c5ec:	2e01      	cmp	r6, #1
 800c5ee:	d104      	bne.n	800c5fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c5f0:	2b00      	cmp	r3, #0
 800c5f2:	da02      	bge.n	800c5fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c5f4:	442b      	add	r3, r5
 800c5f6:	3801      	subs	r0, #1
 800c5f8:	6023      	str	r3, [r4, #0]
 800c5fa:	b005      	add	sp, #20
 800c5fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c600:	3801      	subs	r0, #1
 800c602:	1b52      	subs	r2, r2, r5
 800c604:	e7f0      	b.n	800c5e8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800c608 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800c608:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c60c:	4c1c      	ldr	r4, [pc, #112]	; (800c680 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800c60e:	6807      	ldr	r7, [r0, #0]
 800c610:	69a3      	ldr	r3, [r4, #24]
 800c612:	4605      	mov	r5, r0
 800c614:	b92b      	cbnz	r3, 800c622 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800c616:	6840      	ldr	r0, [r0, #4]
 800c618:	e9c5 7000 	strd	r7, r0, [r5]
 800c61c:	b004      	add	sp, #16
 800c61e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c622:	68a2      	ldr	r2, [r4, #8]
 800c624:	6820      	ldr	r0, [r4, #0]
 800c626:	ae04      	add	r6, sp, #16
 800c628:	f04f 0802 	mov.w	r8, #2
 800c62c:	fb93 f1f8 	sdiv	r1, r3, r8
 800c630:	440a      	add	r2, r1
 800c632:	f846 2d04 	str.w	r2, [r6, #-4]!
 800c636:	69e1      	ldr	r1, [r4, #28]
 800c638:	9600      	str	r6, [sp, #0]
 800c63a:	463a      	mov	r2, r7
 800c63c:	f7ff ff97 	bl	800c56e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c640:	69a3      	ldr	r3, [r4, #24]
 800c642:	686a      	ldr	r2, [r5, #4]
 800c644:	6a21      	ldr	r1, [r4, #32]
 800c646:	9600      	str	r6, [sp, #0]
 800c648:	4607      	mov	r7, r0
 800c64a:	6860      	ldr	r0, [r4, #4]
 800c64c:	f7ff ff8f 	bl	800c56e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c650:	6962      	ldr	r2, [r4, #20]
 800c652:	69a3      	ldr	r3, [r4, #24]
 800c654:	fb93 f8f8 	sdiv	r8, r3, r8
 800c658:	4442      	add	r2, r8
 800c65a:	9203      	str	r2, [sp, #12]
 800c65c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c65e:	682a      	ldr	r2, [r5, #0]
 800c660:	9600      	str	r6, [sp, #0]
 800c662:	4407      	add	r7, r0
 800c664:	68e0      	ldr	r0, [r4, #12]
 800c666:	f7ff ff82 	bl	800c56e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c66a:	9600      	str	r6, [sp, #0]
 800c66c:	4680      	mov	r8, r0
 800c66e:	69a3      	ldr	r3, [r4, #24]
 800c670:	686a      	ldr	r2, [r5, #4]
 800c672:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800c674:	6920      	ldr	r0, [r4, #16]
 800c676:	f7ff ff7a 	bl	800c56e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c67a:	4440      	add	r0, r8
 800c67c:	e7cc      	b.n	800c618 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800c67e:	bf00      	nop
 800c680:	20013514 	.word	0x20013514

0800c684 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800c684:	4b07      	ldr	r3, [pc, #28]	; (800c6a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800c686:	781b      	ldrb	r3, [r3, #0]
 800c688:	2b01      	cmp	r3, #1
 800c68a:	d109      	bne.n	800c6a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800c68c:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c690:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c694:	8003      	strh	r3, [r0, #0]
 800c696:	4b04      	ldr	r3, [pc, #16]	; (800c6a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800c698:	881b      	ldrh	r3, [r3, #0]
 800c69a:	3b01      	subs	r3, #1
 800c69c:	1a9b      	subs	r3, r3, r2
 800c69e:	800b      	strh	r3, [r1, #0]
 800c6a0:	4770      	bx	lr
 800c6a2:	bf00      	nop
 800c6a4:	20013500 	.word	0x20013500
 800c6a8:	20013504 	.word	0x20013504

0800c6ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800c6ac:	b510      	push	{r4, lr}
 800c6ae:	4b07      	ldr	r3, [pc, #28]	; (800c6cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800c6b0:	781b      	ldrb	r3, [r3, #0]
 800c6b2:	2b01      	cmp	r3, #1
 800c6b4:	d108      	bne.n	800c6c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800c6b6:	4b06      	ldr	r3, [pc, #24]	; (800c6d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800c6b8:	880c      	ldrh	r4, [r1, #0]
 800c6ba:	881b      	ldrh	r3, [r3, #0]
 800c6bc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c6c0:	3b01      	subs	r3, #1
 800c6c2:	1b1b      	subs	r3, r3, r4
 800c6c4:	8003      	strh	r3, [r0, #0]
 800c6c6:	800a      	strh	r2, [r1, #0]
 800c6c8:	bd10      	pop	{r4, pc}
 800c6ca:	bf00      	nop
 800c6cc:	20013500 	.word	0x20013500
 800c6d0:	20013504 	.word	0x20013504

0800c6d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800c6d4:	b510      	push	{r4, lr}
 800c6d6:	4b0a      	ldr	r3, [pc, #40]	; (800c700 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800c6d8:	781b      	ldrb	r3, [r3, #0]
 800c6da:	2b01      	cmp	r3, #1
 800c6dc:	d10e      	bne.n	800c6fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800c6de:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c6e2:	8843      	ldrh	r3, [r0, #2]
 800c6e4:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c6e8:	8044      	strh	r4, [r0, #2]
 800c6ea:	18ca      	adds	r2, r1, r3
 800c6ec:	4b05      	ldr	r3, [pc, #20]	; (800c704 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800c6ee:	881b      	ldrh	r3, [r3, #0]
 800c6f0:	1a9b      	subs	r3, r3, r2
 800c6f2:	8003      	strh	r3, [r0, #0]
 800c6f4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c6f8:	80c3      	strh	r3, [r0, #6]
 800c6fa:	8081      	strh	r1, [r0, #4]
 800c6fc:	bd10      	pop	{r4, pc}
 800c6fe:	bf00      	nop
 800c700:	20013500 	.word	0x20013500
 800c704:	20013504 	.word	0x20013504

0800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800c708:	4b08      	ldr	r3, [pc, #32]	; (800c72c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800c70a:	781b      	ldrb	r3, [r3, #0]
 800c70c:	2b01      	cmp	r3, #1
 800c70e:	d10c      	bne.n	800c72a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800c710:	8803      	ldrh	r3, [r0, #0]
 800c712:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800c716:	8842      	ldrh	r2, [r0, #2]
 800c718:	8002      	strh	r2, [r0, #0]
 800c71a:	185a      	adds	r2, r3, r1
 800c71c:	4b04      	ldr	r3, [pc, #16]	; (800c730 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800c71e:	881b      	ldrh	r3, [r3, #0]
 800c720:	1a9b      	subs	r3, r3, r2
 800c722:	8043      	strh	r3, [r0, #2]
 800c724:	88c3      	ldrh	r3, [r0, #6]
 800c726:	8083      	strh	r3, [r0, #4]
 800c728:	80c1      	strh	r1, [r0, #6]
 800c72a:	4770      	bx	lr
 800c72c:	20013500 	.word	0x20013500
 800c730:	20013504 	.word	0x20013504

0800c734 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800c734:	b510      	push	{r4, lr}
 800c736:	4b07      	ldr	r3, [pc, #28]	; (800c754 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800c738:	781b      	ldrb	r3, [r3, #0]
 800c73a:	2b01      	cmp	r3, #1
 800c73c:	d108      	bne.n	800c750 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800c73e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c742:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c746:	8003      	strh	r3, [r0, #0]
 800c748:	8893      	ldrh	r3, [r2, #4]
 800c74a:	3b01      	subs	r3, #1
 800c74c:	1b1b      	subs	r3, r3, r4
 800c74e:	800b      	strh	r3, [r1, #0]
 800c750:	bd10      	pop	{r4, pc}
 800c752:	bf00      	nop
 800c754:	20013500 	.word	0x20013500

0800c758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800c758:	b510      	push	{r4, lr}
 800c75a:	4b0a      	ldr	r3, [pc, #40]	; (800c784 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800c75c:	781b      	ldrb	r3, [r3, #0]
 800c75e:	2b01      	cmp	r3, #1
 800c760:	460a      	mov	r2, r1
 800c762:	d10d      	bne.n	800c780 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800c764:	8881      	ldrh	r1, [r0, #4]
 800c766:	8803      	ldrh	r3, [r0, #0]
 800c768:	440b      	add	r3, r1
 800c76a:	4601      	mov	r1, r0
 800c76c:	3b01      	subs	r3, #1
 800c76e:	f821 3b02 	strh.w	r3, [r1], #2
 800c772:	f7ff ffdf 	bl	800c734 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800c776:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c77a:	88c2      	ldrh	r2, [r0, #6]
 800c77c:	8082      	strh	r2, [r0, #4]
 800c77e:	80c3      	strh	r3, [r0, #6]
 800c780:	bd10      	pop	{r4, pc}
 800c782:	bf00      	nop
 800c784:	20013500 	.word	0x20013500

0800c788 <_ZN8touchgfx11Application13requestRedrawEv>:
 800c788:	4b06      	ldr	r3, [pc, #24]	; (800c7a4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800c78a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c78e:	4b06      	ldr	r3, [pc, #24]	; (800c7a8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800c790:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800c794:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c798:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800c79c:	2100      	movs	r1, #0
 800c79e:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800c7a2:	4770      	bx	lr
 800c7a4:	200134fc 	.word	0x200134fc
 800c7a8:	200134fe 	.word	0x200134fe

0800c7ac <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800c7ac:	4b03      	ldr	r3, [pc, #12]	; (800c7bc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800c7ae:	6818      	ldr	r0, [r3, #0]
 800c7b0:	b110      	cbz	r0, 800c7b8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800c7b2:	6803      	ldr	r3, [r0, #0]
 800c7b4:	699b      	ldr	r3, [r3, #24]
 800c7b6:	4718      	bx	r3
 800c7b8:	4770      	bx	lr
 800c7ba:	bf00      	nop
 800c7bc:	20013544 	.word	0x20013544

0800c7c0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800c7c0:	4770      	bx	lr
	...

0800c7c4 <_ZN8touchgfx11Application4drawEv>:
 800c7c4:	b507      	push	{r0, r1, r2, lr}
 800c7c6:	4b09      	ldr	r3, [pc, #36]	; (800c7ec <_ZN8touchgfx11Application4drawEv+0x28>)
 800c7c8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c7cc:	4b08      	ldr	r3, [pc, #32]	; (800c7f0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800c7ce:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c7d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c7d6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c7da:	6803      	ldr	r3, [r0, #0]
 800c7dc:	2100      	movs	r1, #0
 800c7de:	9100      	str	r1, [sp, #0]
 800c7e0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c7e2:	4669      	mov	r1, sp
 800c7e4:	4798      	blx	r3
 800c7e6:	b003      	add	sp, #12
 800c7e8:	f85d fb04 	ldr.w	pc, [sp], #4
 800c7ec:	200134fc 	.word	0x200134fc
 800c7f0:	200134fe 	.word	0x200134fe

0800c7f4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800c7f4:	4b03      	ldr	r3, [pc, #12]	; (800c804 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800c7f6:	6818      	ldr	r0, [r3, #0]
 800c7f8:	b110      	cbz	r0, 800c800 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800c7fa:	6803      	ldr	r3, [r0, #0]
 800c7fc:	69db      	ldr	r3, [r3, #28]
 800c7fe:	4718      	bx	r3
 800c800:	4770      	bx	lr
 800c802:	bf00      	nop
 800c804:	20013544 	.word	0x20013544

0800c808 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800c808:	4b03      	ldr	r3, [pc, #12]	; (800c818 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800c80a:	6818      	ldr	r0, [r3, #0]
 800c80c:	b110      	cbz	r0, 800c814 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800c80e:	6803      	ldr	r3, [r0, #0]
 800c810:	6a1b      	ldr	r3, [r3, #32]
 800c812:	4718      	bx	r3
 800c814:	4770      	bx	lr
 800c816:	bf00      	nop
 800c818:	20013544 	.word	0x20013544

0800c81c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800c81c:	4b03      	ldr	r3, [pc, #12]	; (800c82c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800c81e:	6818      	ldr	r0, [r3, #0]
 800c820:	b110      	cbz	r0, 800c828 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800c822:	6803      	ldr	r3, [r0, #0]
 800c824:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c826:	4718      	bx	r3
 800c828:	4770      	bx	lr
 800c82a:	bf00      	nop
 800c82c:	20013544 	.word	0x20013544

0800c830 <_ZN8touchgfx11ApplicationD1Ev>:
 800c830:	4770      	bx	lr

0800c832 <_ZN8touchgfx11ApplicationD0Ev>:
 800c832:	b510      	push	{r4, lr}
 800c834:	f44f 719c 	mov.w	r1, #312	; 0x138
 800c838:	4604      	mov	r4, r0
 800c83a:	f00f f940 	bl	801babe <_ZdlPvj>
 800c83e:	4620      	mov	r0, r4
 800c840:	bd10      	pop	{r4, pc}
	...

0800c844 <_ZN8touchgfx11Application15handleTickEventEv>:
 800c844:	b570      	push	{r4, r5, r6, lr}
 800c846:	4d38      	ldr	r5, [pc, #224]	; (800c928 <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 800c848:	4604      	mov	r4, r0
 800c84a:	6828      	ldr	r0, [r5, #0]
 800c84c:	b140      	cbz	r0, 800c860 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c84e:	7a03      	ldrb	r3, [r0, #8]
 800c850:	b933      	cbnz	r3, 800c860 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800c852:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800c856:	6803      	ldr	r3, [r0, #0]
 800c858:	689b      	ldr	r3, [r3, #8]
 800c85a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c85e:	4718      	bx	r3
 800c860:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800c864:	b97b      	cbnz	r3, 800c886 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c866:	b170      	cbz	r0, 800c886 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c868:	7a03      	ldrb	r3, [r0, #8]
 800c86a:	b163      	cbz	r3, 800c886 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800c86c:	4b2f      	ldr	r3, [pc, #188]	; (800c92c <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800c86e:	6818      	ldr	r0, [r3, #0]
 800c870:	b110      	cbz	r0, 800c878 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800c872:	6803      	ldr	r3, [r0, #0]
 800c874:	691b      	ldr	r3, [r3, #16]
 800c876:	4798      	blx	r3
 800c878:	6828      	ldr	r0, [r5, #0]
 800c87a:	6803      	ldr	r3, [r0, #0]
 800c87c:	68db      	ldr	r3, [r3, #12]
 800c87e:	4798      	blx	r3
 800c880:	2301      	movs	r3, #1
 800c882:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800c886:	2500      	movs	r5, #0
 800c888:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800c88c:	42a8      	cmp	r0, r5
 800c88e:	dd0c      	ble.n	800c8aa <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800c890:	1963      	adds	r3, r4, r5
 800c892:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800c896:	b132      	cbz	r2, 800c8a6 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800c898:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800c89c:	4413      	add	r3, r2
 800c89e:	6858      	ldr	r0, [r3, #4]
 800c8a0:	6803      	ldr	r3, [r0, #0]
 800c8a2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c8a4:	4798      	blx	r3
 800c8a6:	3501      	adds	r5, #1
 800c8a8:	e7ee      	b.n	800c888 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800c8aa:	2300      	movs	r3, #0
 800c8ac:	461a      	mov	r2, r3
 800c8ae:	4298      	cmp	r0, r3
 800c8b0:	d10f      	bne.n	800c8d2 <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 800c8b2:	1d25      	adds	r5, r4, #4
 800c8b4:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800c8b8:	4291      	cmp	r1, r2
 800c8ba:	dd2d      	ble.n	800c918 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 800c8bc:	1e48      	subs	r0, r1, #1
 800c8be:	b280      	uxth	r0, r0
 800c8c0:	4288      	cmp	r0, r1
 800c8c2:	d31a      	bcc.n	800c8fa <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800c8c4:	4b1a      	ldr	r3, [pc, #104]	; (800c930 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 800c8c6:	4a1b      	ldr	r2, [pc, #108]	; (800c934 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800c8c8:	481b      	ldr	r0, [pc, #108]	; (800c938 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800c8ca:	f240 11a9 	movw	r1, #425	; 0x1a9
 800c8ce:	f00f f925 	bl	801bb1c <__assert_func>
 800c8d2:	18e1      	adds	r1, r4, r3
 800c8d4:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800c8d8:	b16d      	cbz	r5, 800c8f6 <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 800c8da:	429a      	cmp	r2, r3
 800c8dc:	d00a      	beq.n	800c8f4 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 800c8de:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800c8e2:	4431      	add	r1, r6
 800c8e4:	684e      	ldr	r6, [r1, #4]
 800c8e6:	b291      	uxth	r1, r2
 800c8e8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800c8ec:	604e      	str	r6, [r1, #4]
 800c8ee:	18a1      	adds	r1, r4, r2
 800c8f0:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800c8f4:	3201      	adds	r2, #1
 800c8f6:	3301      	adds	r3, #1
 800c8f8:	e7d9      	b.n	800c8ae <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800c8fa:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800c8fe:	3304      	adds	r3, #4
 800c900:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800c904:	428b      	cmp	r3, r1
 800c906:	d004      	beq.n	800c912 <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 800c908:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800c90c:	f843 6c04 	str.w	r6, [r3, #-4]
 800c910:	e7f8      	b.n	800c904 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800c912:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800c916:	e7cd      	b.n	800c8b4 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800c918:	4b04      	ldr	r3, [pc, #16]	; (800c92c <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800c91a:	6818      	ldr	r0, [r3, #0]
 800c91c:	b110      	cbz	r0, 800c924 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800c91e:	6803      	ldr	r3, [r0, #0]
 800c920:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c922:	e79a      	b.n	800c85a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800c924:	bd70      	pop	{r4, r5, r6, pc}
 800c926:	bf00      	nop
 800c928:	20013548 	.word	0x20013548
 800c92c:	20013544 	.word	0x20013544
 800c930:	0801f7c4 	.word	0x0801f7c4
 800c934:	0801f958 	.word	0x0801f958
 800c938:	0801e508 	.word	0x0801e508

0800c93c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800c93c:	b570      	push	{r4, r5, r6, lr}
 800c93e:	4606      	mov	r6, r0
 800c940:	460c      	mov	r4, r1
 800c942:	b929      	cbnz	r1, 800c950 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800c944:	4b0c      	ldr	r3, [pc, #48]	; (800c978 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800c946:	4a0d      	ldr	r2, [pc, #52]	; (800c97c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800c948:	480d      	ldr	r0, [pc, #52]	; (800c980 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800c94a:	2167      	movs	r1, #103	; 0x67
 800c94c:	f00f f8e6 	bl	801bb1c <__assert_func>
 800c950:	4d0c      	ldr	r5, [pc, #48]	; (800c984 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800c952:	2300      	movs	r3, #0
 800c954:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800c958:	6828      	ldr	r0, [r5, #0]
 800c95a:	b110      	cbz	r0, 800c962 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800c95c:	6803      	ldr	r3, [r0, #0]
 800c95e:	695b      	ldr	r3, [r3, #20]
 800c960:	4798      	blx	r3
 800c962:	602c      	str	r4, [r5, #0]
 800c964:	6823      	ldr	r3, [r4, #0]
 800c966:	4620      	mov	r0, r4
 800c968:	68db      	ldr	r3, [r3, #12]
 800c96a:	4798      	blx	r3
 800c96c:	6833      	ldr	r3, [r6, #0]
 800c96e:	4630      	mov	r0, r6
 800c970:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c972:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c976:	4718      	bx	r3
 800c978:	0801f790 	.word	0x0801f790
 800c97c:	0801f818 	.word	0x0801f818
 800c980:	0801f79a 	.word	0x0801f79a
 800c984:	20013544 	.word	0x20013544

0800c988 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800c988:	b510      	push	{r4, lr}
 800c98a:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c98e:	888a      	ldrh	r2, [r1, #4]
 800c990:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c994:	4422      	add	r2, r4
 800c996:	b212      	sxth	r2, r2
 800c998:	4293      	cmp	r3, r2
 800c99a:	da15      	bge.n	800c9c8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c99c:	8882      	ldrh	r2, [r0, #4]
 800c99e:	4413      	add	r3, r2
 800c9a0:	b21b      	sxth	r3, r3
 800c9a2:	429c      	cmp	r4, r3
 800c9a4:	da10      	bge.n	800c9c8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c9a6:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800c9aa:	88c9      	ldrh	r1, [r1, #6]
 800c9ac:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c9b0:	4419      	add	r1, r3
 800c9b2:	b209      	sxth	r1, r1
 800c9b4:	428a      	cmp	r2, r1
 800c9b6:	da07      	bge.n	800c9c8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800c9b8:	88c0      	ldrh	r0, [r0, #6]
 800c9ba:	4410      	add	r0, r2
 800c9bc:	b200      	sxth	r0, r0
 800c9be:	4283      	cmp	r3, r0
 800c9c0:	bfac      	ite	ge
 800c9c2:	2000      	movge	r0, #0
 800c9c4:	2001      	movlt	r0, #1
 800c9c6:	bd10      	pop	{r4, pc}
 800c9c8:	2000      	movs	r0, #0
 800c9ca:	e7fc      	b.n	800c9c6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800c9cc <_ZNK8touchgfx4Rect8includesERKS0_>:
 800c9cc:	b570      	push	{r4, r5, r6, lr}
 800c9ce:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c9d2:	f9b0 5000 	ldrsh.w	r5, [r0]
 800c9d6:	42ac      	cmp	r4, r5
 800c9d8:	db18      	blt.n	800ca0c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c9da:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800c9de:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800c9e2:	429a      	cmp	r2, r3
 800c9e4:	db12      	blt.n	800ca0c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c9e6:	8886      	ldrh	r6, [r0, #4]
 800c9e8:	4435      	add	r5, r6
 800c9ea:	888e      	ldrh	r6, [r1, #4]
 800c9ec:	4434      	add	r4, r6
 800c9ee:	b22d      	sxth	r5, r5
 800c9f0:	b224      	sxth	r4, r4
 800c9f2:	42a5      	cmp	r5, r4
 800c9f4:	db0a      	blt.n	800ca0c <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800c9f6:	88c0      	ldrh	r0, [r0, #6]
 800c9f8:	4418      	add	r0, r3
 800c9fa:	88cb      	ldrh	r3, [r1, #6]
 800c9fc:	441a      	add	r2, r3
 800c9fe:	b200      	sxth	r0, r0
 800ca00:	b212      	sxth	r2, r2
 800ca02:	4290      	cmp	r0, r2
 800ca04:	bfb4      	ite	lt
 800ca06:	2000      	movlt	r0, #0
 800ca08:	2001      	movge	r0, #1
 800ca0a:	bd70      	pop	{r4, r5, r6, pc}
 800ca0c:	2000      	movs	r0, #0
 800ca0e:	e7fc      	b.n	800ca0a <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800ca10 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800ca10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca12:	4604      	mov	r4, r0
 800ca14:	4608      	mov	r0, r1
 800ca16:	460d      	mov	r5, r1
 800ca18:	f7fc ff81 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 800ca1c:	b978      	cbnz	r0, 800ca3e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800ca1e:	4620      	mov	r0, r4
 800ca20:	f7fc ff7d 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 800ca24:	f9b5 6000 	ldrsh.w	r6, [r5]
 800ca28:	b150      	cbz	r0, 800ca40 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800ca2a:	8026      	strh	r6, [r4, #0]
 800ca2c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ca30:	8063      	strh	r3, [r4, #2]
 800ca32:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800ca36:	80a3      	strh	r3, [r4, #4]
 800ca38:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ca3c:	80e3      	strh	r3, [r4, #6]
 800ca3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ca40:	f9b4 1000 	ldrsh.w	r1, [r4]
 800ca44:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ca48:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800ca4c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800ca50:	88ed      	ldrh	r5, [r5, #6]
 800ca52:	42b1      	cmp	r1, r6
 800ca54:	460f      	mov	r7, r1
 800ca56:	bfa8      	it	ge
 800ca58:	4637      	movge	r7, r6
 800ca5a:	4293      	cmp	r3, r2
 800ca5c:	4618      	mov	r0, r3
 800ca5e:	4466      	add	r6, ip
 800ca60:	bfa8      	it	ge
 800ca62:	4610      	movge	r0, r2
 800ca64:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800ca68:	8027      	strh	r7, [r4, #0]
 800ca6a:	442a      	add	r2, r5
 800ca6c:	88e5      	ldrh	r5, [r4, #6]
 800ca6e:	8060      	strh	r0, [r4, #2]
 800ca70:	4461      	add	r1, ip
 800ca72:	442b      	add	r3, r5
 800ca74:	b236      	sxth	r6, r6
 800ca76:	b209      	sxth	r1, r1
 800ca78:	b212      	sxth	r2, r2
 800ca7a:	b21b      	sxth	r3, r3
 800ca7c:	428e      	cmp	r6, r1
 800ca7e:	bfac      	ite	ge
 800ca80:	ebc7 0106 	rsbge	r1, r7, r6
 800ca84:	ebc7 0101 	rsblt	r1, r7, r1
 800ca88:	429a      	cmp	r2, r3
 800ca8a:	bfac      	ite	ge
 800ca8c:	ebc0 0202 	rsbge	r2, r0, r2
 800ca90:	ebc0 0203 	rsblt	r2, r0, r3
 800ca94:	80a1      	strh	r1, [r4, #4]
 800ca96:	80e2      	strh	r2, [r4, #6]
 800ca98:	e7d1      	b.n	800ca3e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800ca9c <_ZN8touchgfx11Application11getInstanceEv>:
 800ca9c:	4b01      	ldr	r3, [pc, #4]	; (800caa4 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800ca9e:	6818      	ldr	r0, [r3, #0]
 800caa0:	4770      	bx	lr
 800caa2:	bf00      	nop
 800caa4:	20013554 	.word	0x20013554

0800caa8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800caa8:	2300      	movs	r3, #0
 800caaa:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800caae:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800cab2:	30a8      	adds	r0, #168	; 0xa8
 800cab4:	f802 3b01 	strb.w	r3, [r2], #1
 800cab8:	4282      	cmp	r2, r0
 800caba:	d1fb      	bne.n	800cab4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800cabc:	4770      	bx	lr

0800cabe <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800cabe:	4603      	mov	r3, r0
 800cac0:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800cac4:	2200      	movs	r2, #0
 800cac6:	801a      	strh	r2, [r3, #0]
 800cac8:	805a      	strh	r2, [r3, #2]
 800caca:	809a      	strh	r2, [r3, #4]
 800cacc:	80da      	strh	r2, [r3, #6]
 800cace:	3308      	adds	r3, #8
 800cad0:	428b      	cmp	r3, r1
 800cad2:	d1f8      	bne.n	800cac6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800cad4:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800cad8:	4770      	bx	lr
	...

0800cadc <_ZN8touchgfx11ApplicationC1Ev>:
 800cadc:	b570      	push	{r4, r5, r6, lr}
 800cade:	4b1a      	ldr	r3, [pc, #104]	; (800cb48 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800cae0:	6003      	str	r3, [r0, #0]
 800cae2:	2500      	movs	r5, #0
 800cae4:	4604      	mov	r4, r0
 800cae6:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800caea:	30a8      	adds	r0, #168	; 0xa8
 800caec:	f7ff ffe7 	bl	800cabe <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800caf0:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800caf4:	f7ff ffe3 	bl	800cabe <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800caf8:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800cafc:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800cb00:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800cb04:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800cb08:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800cb0c:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800cb10:	490e      	ldr	r1, [pc, #56]	; (800cb4c <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800cb12:	480f      	ldr	r0, [pc, #60]	; (800cb50 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800cb14:	4e0f      	ldr	r6, [pc, #60]	; (800cb54 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800cb16:	f00e fec5 	bl	801b8a4 <CRC_Lock>
 800cb1a:	4b0f      	ldr	r3, [pc, #60]	; (800cb58 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800cb1c:	b158      	cbz	r0, 800cb36 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800cb1e:	801d      	strh	r5, [r3, #0]
 800cb20:	4a0e      	ldr	r2, [pc, #56]	; (800cb5c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800cb22:	2300      	movs	r3, #0
 800cb24:	6013      	str	r3, [r2, #0]
 800cb26:	4a0e      	ldr	r2, [pc, #56]	; (800cb60 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800cb28:	6033      	str	r3, [r6, #0]
 800cb2a:	4620      	mov	r0, r4
 800cb2c:	6013      	str	r3, [r2, #0]
 800cb2e:	f7ff ffbb 	bl	800caa8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800cb32:	4620      	mov	r0, r4
 800cb34:	bd70      	pop	{r4, r5, r6, pc}
 800cb36:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800cb3a:	2002      	movs	r0, #2
 800cb3c:	801a      	strh	r2, [r3, #0]
 800cb3e:	6030      	str	r0, [r6, #0]
 800cb40:	f001 fa04 	bl	800df4c <_ZN8touchgfx6Screen4drawEv>
 800cb44:	e7ec      	b.n	800cb20 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800cb46:	bf00      	nop
 800cb48:	0801f7dc 	.word	0x0801f7dc
 800cb4c:	b5e8b5cd 	.word	0xb5e8b5cd
 800cb50:	f407a5c2 	.word	0xf407a5c2
 800cb54:	20013544 	.word	0x20013544
 800cb58:	20000084 	.word	0x20000084
 800cb5c:	20013554 	.word	0x20013554
 800cb60:	20013548 	.word	0x20013548

0800cb64 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800cb64:	b510      	push	{r4, lr}
 800cb66:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800cb6a:	428b      	cmp	r3, r1
 800cb6c:	d806      	bhi.n	800cb7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 800cb6e:	4b0b      	ldr	r3, [pc, #44]	; (800cb9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 800cb70:	4a0b      	ldr	r2, [pc, #44]	; (800cba0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 800cb72:	480c      	ldr	r0, [pc, #48]	; (800cba4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 800cb74:	f44f 71de 	mov.w	r1, #444	; 0x1bc
 800cb78:	f00e ffd0 	bl	801bb1c <__assert_func>
 800cb7c:	3b01      	subs	r3, #1
 800cb7e:	b29b      	uxth	r3, r3
 800cb80:	428b      	cmp	r3, r1
 800cb82:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800cb86:	d908      	bls.n	800cb9a <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 800cb88:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800cb8c:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800cb90:	681a      	ldr	r2, [r3, #0]
 800cb92:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800cb96:	685a      	ldr	r2, [r3, #4]
 800cb98:	6062      	str	r2, [r4, #4]
 800cb9a:	bd10      	pop	{r4, pc}
 800cb9c:	0801f7c4 	.word	0x0801f7c4
 800cba0:	0801f85c 	.word	0x0801f85c
 800cba4:	0801e508 	.word	0x0801e508

0800cba8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800cba8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cbaa:	466b      	mov	r3, sp
 800cbac:	e883 0006 	stmia.w	r3, {r1, r2}
 800cbb0:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800cbb4:	2a07      	cmp	r2, #7
 800cbb6:	4604      	mov	r4, r0
 800cbb8:	d906      	bls.n	800cbc8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800cbba:	4b09      	ldr	r3, [pc, #36]	; (800cbe0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800cbbc:	4a09      	ldr	r2, [pc, #36]	; (800cbe4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800cbbe:	480a      	ldr	r0, [pc, #40]	; (800cbe8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800cbc0:	f44f 71c1 	mov.w	r1, #386	; 0x182
 800cbc4:	f00e ffaa 	bl	801bb1c <__assert_func>
 800cbc8:	1c51      	adds	r1, r2, #1
 800cbca:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800cbce:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800cbd2:	cb03      	ldmia	r3!, {r0, r1}
 800cbd4:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800cbd8:	6069      	str	r1, [r5, #4]
 800cbda:	b003      	add	sp, #12
 800cbdc:	bd30      	pop	{r4, r5, pc}
 800cbde:	bf00      	nop
 800cbe0:	0801e453 	.word	0x0801e453
 800cbe4:	0801f8f2 	.word	0x0801f8f2
 800cbe8:	0801e508 	.word	0x0801e508

0800cbec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800cbec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cbf0:	b08d      	sub	sp, #52	; 0x34
 800cbf2:	ac08      	add	r4, sp, #32
 800cbf4:	4683      	mov	fp, r0
 800cbf6:	4620      	mov	r0, r4
 800cbf8:	e884 0006 	stmia.w	r4, {r1, r2}
 800cbfc:	f7fc fe8f 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 800cc00:	2800      	cmp	r0, #0
 800cc02:	d16a      	bne.n	800ccda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800cc04:	9402      	str	r4, [sp, #8]
 800cc06:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800cc0a:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800cc0e:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800cc12:	2400      	movs	r4, #0
 800cc14:	9301      	str	r3, [sp, #4]
 800cc16:	36a0      	adds	r6, #160	; 0xa0
 800cc18:	42a5      	cmp	r5, r4
 800cc1a:	d00d      	beq.n	800cc38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 800cc1c:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800cc20:	9802      	ldr	r0, [sp, #8]
 800cc22:	f7ff fed3 	bl	800c9cc <_ZNK8touchgfx4Rect8includesERKS0_>
 800cc26:	b128      	cbz	r0, 800cc34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800cc28:	1e69      	subs	r1, r5, #1
 800cc2a:	1b09      	subs	r1, r1, r4
 800cc2c:	b289      	uxth	r1, r1
 800cc2e:	9801      	ldr	r0, [sp, #4]
 800cc30:	f7ff ff98 	bl	800cb64 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cc34:	3401      	adds	r4, #1
 800cc36:	e7ef      	b.n	800cc18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800cc38:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800cc3c:	9703      	str	r7, [sp, #12]
 800cc3e:	1e7b      	subs	r3, r7, #1
 800cc40:	9300      	str	r3, [sp, #0]
 800cc42:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800cc46:	2400      	movs	r4, #0
 800cc48:	4655      	mov	r5, sl
 800cc4a:	9704      	str	r7, [sp, #16]
 800cc4c:	4626      	mov	r6, r4
 800cc4e:	9b04      	ldr	r3, [sp, #16]
 800cc50:	2b00      	cmp	r3, #0
 800cc52:	d078      	beq.n	800cd46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 800cc54:	9902      	ldr	r1, [sp, #8]
 800cc56:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800cc5a:	f7ff fe95 	bl	800c988 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cc5e:	b360      	cbz	r0, 800ccba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800cc60:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800cc64:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800cc68:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800cc6c:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800cc70:	45e6      	cmp	lr, ip
 800cc72:	db35      	blt.n	800cce0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800cc74:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800cc78:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800cc7c:	4472      	add	r2, lr
 800cc7e:	4463      	add	r3, ip
 800cc80:	b212      	sxth	r2, r2
 800cc82:	b21b      	sxth	r3, r3
 800cc84:	429a      	cmp	r2, r3
 800cc86:	dc2b      	bgt.n	800cce0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800cc88:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800cc8c:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800cc90:	fa1f f288 	uxth.w	r2, r8
 800cc94:	4413      	add	r3, r2
 800cc96:	b29b      	uxth	r3, r3
 800cc98:	45c1      	cmp	r9, r8
 800cc9a:	fa0f fe83 	sxth.w	lr, r3
 800cc9e:	fa1f fc89 	uxth.w	ip, r9
 800cca2:	db0f      	blt.n	800ccc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 800cca4:	eba3 030c 	sub.w	r3, r3, ip
 800cca8:	1ac9      	subs	r1, r1, r3
 800ccaa:	b209      	sxth	r1, r1
 800ccac:	2900      	cmp	r1, #0
 800ccae:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800ccb2:	dd12      	ble.n	800ccda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800ccb4:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800ccb8:	4604      	mov	r4, r0
 800ccba:	9b04      	ldr	r3, [sp, #16]
 800ccbc:	3b01      	subs	r3, #1
 800ccbe:	9304      	str	r3, [sp, #16]
 800ccc0:	3d08      	subs	r5, #8
 800ccc2:	e7c4      	b.n	800cc4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800ccc4:	4461      	add	r1, ip
 800ccc6:	b209      	sxth	r1, r1
 800ccc8:	4571      	cmp	r1, lr
 800ccca:	dc3a      	bgt.n	800cd42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800cccc:	eba2 020c 	sub.w	r2, r2, ip
 800ccd0:	b212      	sxth	r2, r2
 800ccd2:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800ccd6:	2a00      	cmp	r2, #0
 800ccd8:	dcee      	bgt.n	800ccb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800ccda:	b00d      	add	sp, #52	; 0x34
 800ccdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cce0:	45c1      	cmp	r9, r8
 800cce2:	db2e      	blt.n	800cd42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800cce4:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800cce8:	4499      	add	r9, r3
 800ccea:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800ccee:	4498      	add	r8, r3
 800ccf0:	fa0f f989 	sxth.w	r9, r9
 800ccf4:	fa0f f888 	sxth.w	r8, r8
 800ccf8:	45c1      	cmp	r9, r8
 800ccfa:	dc22      	bgt.n	800cd42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800ccfc:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800cd00:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800cd04:	fa1f f28c 	uxth.w	r2, ip
 800cd08:	4413      	add	r3, r2
 800cd0a:	b29b      	uxth	r3, r3
 800cd0c:	45e6      	cmp	lr, ip
 800cd0e:	fa1f f88e 	uxth.w	r8, lr
 800cd12:	fa0f f983 	sxth.w	r9, r3
 800cd16:	db0a      	blt.n	800cd2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 800cd18:	eba3 0308 	sub.w	r3, r3, r8
 800cd1c:	1ac9      	subs	r1, r1, r3
 800cd1e:	b209      	sxth	r1, r1
 800cd20:	2900      	cmp	r1, #0
 800cd22:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800cd26:	ddd8      	ble.n	800ccda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800cd28:	f8ad 9020 	strh.w	r9, [sp, #32]
 800cd2c:	e7c4      	b.n	800ccb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800cd2e:	4441      	add	r1, r8
 800cd30:	b209      	sxth	r1, r1
 800cd32:	4549      	cmp	r1, r9
 800cd34:	dc05      	bgt.n	800cd42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800cd36:	eba2 0208 	sub.w	r2, r2, r8
 800cd3a:	b212      	sxth	r2, r2
 800cd3c:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800cd40:	e7c9      	b.n	800ccd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800cd42:	4606      	mov	r6, r0
 800cd44:	e7b9      	b.n	800ccba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800cd46:	2c00      	cmp	r4, #0
 800cd48:	f47f af7d 	bne.w	800cc46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800cd4c:	2e00      	cmp	r6, #0
 800cd4e:	f000 81dd 	beq.w	800d10c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800cd52:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800cd56:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800cd5a:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800cd5e:	b2b9      	uxth	r1, r7
 800cd60:	9104      	str	r1, [sp, #16]
 800cd62:	9804      	ldr	r0, [sp, #16]
 800cd64:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800cd68:	4401      	add	r1, r0
 800cd6a:	b2b3      	uxth	r3, r6
 800cd6c:	b289      	uxth	r1, r1
 800cd6e:	441a      	add	r2, r3
 800cd70:	9105      	str	r1, [sp, #20]
 800cd72:	b292      	uxth	r2, r2
 800cd74:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800cd78:	fa0f f882 	sxth.w	r8, r2
 800cd7c:	4655      	mov	r5, sl
 800cd7e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800cd82:	9b03      	ldr	r3, [sp, #12]
 800cd84:	2b00      	cmp	r3, #0
 800cd86:	d054      	beq.n	800ce32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800cd88:	9902      	ldr	r1, [sp, #8]
 800cd8a:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800cd8e:	f7ff fdfb 	bl	800c988 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cd92:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cd96:	b1d8      	cbz	r0, 800cdd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800cd98:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800cd9c:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800cda0:	4576      	cmp	r6, lr
 800cda2:	dc26      	bgt.n	800cdf2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800cda4:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800cda8:	44f4      	add	ip, lr
 800cdaa:	fa0f fc8c 	sxth.w	ip, ip
 800cdae:	45e0      	cmp	r8, ip
 800cdb0:	db1f      	blt.n	800cdf2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800cdb2:	428f      	cmp	r7, r1
 800cdb4:	fa1f fc81 	uxth.w	ip, r1
 800cdb8:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800cdbc:	dc0f      	bgt.n	800cdde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800cdbe:	9805      	ldr	r0, [sp, #20]
 800cdc0:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800cdc4:	eba0 0c0c 	sub.w	ip, r0, ip
 800cdc8:	eba1 010c 	sub.w	r1, r1, ip
 800cdcc:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800cdd0:	4620      	mov	r0, r4
 800cdd2:	9903      	ldr	r1, [sp, #12]
 800cdd4:	3901      	subs	r1, #1
 800cdd6:	9103      	str	r1, [sp, #12]
 800cdd8:	3d08      	subs	r5, #8
 800cdda:	4604      	mov	r4, r0
 800cddc:	e7cf      	b.n	800cd7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 800cdde:	4461      	add	r1, ip
 800cde0:	b209      	sxth	r1, r1
 800cde2:	4549      	cmp	r1, r9
 800cde4:	dcf5      	bgt.n	800cdd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800cde6:	9904      	ldr	r1, [sp, #16]
 800cde8:	eba1 0c0c 	sub.w	ip, r1, ip
 800cdec:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800cdf0:	e7ee      	b.n	800cdd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800cdf2:	428f      	cmp	r7, r1
 800cdf4:	dced      	bgt.n	800cdd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800cdf6:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800cdfa:	4461      	add	r1, ip
 800cdfc:	b209      	sxth	r1, r1
 800cdfe:	4589      	cmp	r9, r1
 800ce00:	dbe7      	blt.n	800cdd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800ce02:	4576      	cmp	r6, lr
 800ce04:	fa1f fc8e 	uxth.w	ip, lr
 800ce08:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800ce0c:	dc08      	bgt.n	800ce20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 800ce0e:	eba2 0c0c 	sub.w	ip, r2, ip
 800ce12:	eba1 010c 	sub.w	r1, r1, ip
 800ce16:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800ce1a:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800ce1e:	e7d7      	b.n	800cdd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800ce20:	4461      	add	r1, ip
 800ce22:	b209      	sxth	r1, r1
 800ce24:	4588      	cmp	r8, r1
 800ce26:	dbd4      	blt.n	800cdd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800ce28:	eba3 0c0c 	sub.w	ip, r3, ip
 800ce2c:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800ce30:	e7ce      	b.n	800cdd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800ce32:	2c00      	cmp	r4, #0
 800ce34:	f000 816a 	beq.w	800d10c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800ce38:	9b00      	ldr	r3, [sp, #0]
 800ce3a:	3301      	adds	r3, #1
 800ce3c:	f000 8166 	beq.w	800d10c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800ce40:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800ce44:	4621      	mov	r1, r4
 800ce46:	9802      	ldr	r0, [sp, #8]
 800ce48:	f7ff fdc0 	bl	800c9cc <_ZNK8touchgfx4Rect8includesERKS0_>
 800ce4c:	b120      	cbz	r0, 800ce58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 800ce4e:	f8bd 1000 	ldrh.w	r1, [sp]
 800ce52:	9801      	ldr	r0, [sp, #4]
 800ce54:	f7ff fe86 	bl	800cb64 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ce58:	9902      	ldr	r1, [sp, #8]
 800ce5a:	4620      	mov	r0, r4
 800ce5c:	f7ff fd94 	bl	800c988 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ce60:	2800      	cmp	r0, #0
 800ce62:	f000 809b 	beq.w	800cf9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 800ce66:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800ce6a:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800ce6e:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800ce72:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800ce76:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800ce7a:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800ce7e:	fa1f f288 	uxth.w	r2, r8
 800ce82:	19d5      	adds	r5, r2, r7
 800ce84:	fa1f f985 	uxth.w	r9, r5
 800ce88:	fa0f f589 	sxth.w	r5, r9
 800ce8c:	b2a1      	uxth	r1, r4
 800ce8e:	440b      	add	r3, r1
 800ce90:	9503      	str	r5, [sp, #12]
 800ce92:	45a0      	cmp	r8, r4
 800ce94:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800ce98:	9507      	str	r5, [sp, #28]
 800ce9a:	b29b      	uxth	r3, r3
 800ce9c:	f340 809d 	ble.w	800cfda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800cea0:	1a52      	subs	r2, r2, r1
 800cea2:	b292      	uxth	r2, r2
 800cea4:	4584      	cmp	ip, r0
 800cea6:	fa0f fe83 	sxth.w	lr, r3
 800ceaa:	b215      	sxth	r5, r2
 800ceac:	dd2f      	ble.n	800cf0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800ceae:	9e00      	ldr	r6, [sp, #0]
 800ceb0:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800ceb4:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800ceb8:	9e03      	ldr	r6, [sp, #12]
 800ceba:	eba6 060e 	sub.w	r6, r6, lr
 800cebe:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800cec2:	fa1f fc8c 	uxth.w	ip, ip
 800cec6:	b280      	uxth	r0, r0
 800cec8:	ebac 0300 	sub.w	r3, ip, r0
 800cecc:	448c      	add	ip, r1
 800cece:	4470      	add	r0, lr
 800ced0:	b29b      	uxth	r3, r3
 800ced2:	fa0f fc8c 	sxth.w	ip, ip
 800ced6:	b200      	sxth	r0, r0
 800ced8:	b21c      	sxth	r4, r3
 800ceda:	ebac 0000 	sub.w	r0, ip, r0
 800cede:	4366      	muls	r6, r4
 800cee0:	4368      	muls	r0, r5
 800cee2:	4286      	cmp	r6, r0
 800cee4:	db09      	blt.n	800cefa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 800cee6:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800ceea:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800ceee:	4417      	add	r7, r2
 800cef0:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cef4:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800cef8:	e685      	b.n	800cc06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cefa:	440b      	add	r3, r1
 800cefc:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800cf00:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800cf04:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800cf08:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cf0c:	e67b      	b.n	800cc06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cf0e:	9e03      	ldr	r6, [sp, #12]
 800cf10:	45b6      	cmp	lr, r6
 800cf12:	da28      	bge.n	800cf66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 800cf14:	9b00      	ldr	r3, [sp, #0]
 800cf16:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800cf1a:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800cf1e:	eb04 030c 	add.w	r3, r4, ip
 800cf22:	fa1f f883 	uxth.w	r8, r3
 800cf26:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800cf2a:	4403      	add	r3, r0
 800cf2c:	eba3 0308 	sub.w	r3, r3, r8
 800cf30:	b29b      	uxth	r3, r3
 800cf32:	fa0f f988 	sxth.w	r9, r8
 800cf36:	eba0 000c 	sub.w	r0, r0, ip
 800cf3a:	fa0f f883 	sxth.w	r8, r3
 800cf3e:	eba6 060e 	sub.w	r6, r6, lr
 800cf42:	4368      	muls	r0, r5
 800cf44:	fb08 f606 	mul.w	r6, r8, r6
 800cf48:	42b0      	cmp	r0, r6
 800cf4a:	dc06      	bgt.n	800cf5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 800cf4c:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800cf50:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800cf54:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800cf58:	e7c9      	b.n	800ceee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 800cf5a:	4423      	add	r3, r4
 800cf5c:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800cf60:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800cf64:	e64f      	b.n	800cc06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cf66:	9807      	ldr	r0, [sp, #28]
 800cf68:	eba3 0309 	sub.w	r3, r3, r9
 800cf6c:	b29b      	uxth	r3, r3
 800cf6e:	2806      	cmp	r0, #6
 800cf70:	fa0f fc83 	sxth.w	ip, r3
 800cf74:	d818      	bhi.n	800cfa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 800cf76:	4652      	mov	r2, sl
 800cf78:	ab0a      	add	r3, sp, #40	; 0x28
 800cf7a:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800cf7e:	6851      	ldr	r1, [r2, #4]
 800cf80:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800cf84:	c303      	stmia	r3!, {r0, r1}
 800cf86:	9b03      	ldr	r3, [sp, #12]
 800cf88:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800cf8c:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800cf90:	ab0a      	add	r3, sp, #40	; 0x28
 800cf92:	e893 0006 	ldmia.w	r3, {r1, r2}
 800cf96:	9801      	ldr	r0, [sp, #4]
 800cf98:	f7ff fe06 	bl	800cba8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800cf9c:	9b00      	ldr	r3, [sp, #0]
 800cf9e:	3b01      	subs	r3, #1
 800cfa0:	9300      	str	r3, [sp, #0]
 800cfa2:	f1aa 0a08 	sub.w	sl, sl, #8
 800cfa6:	e747      	b.n	800ce38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800cfa8:	9800      	ldr	r0, [sp, #0]
 800cfaa:	45ac      	cmp	ip, r5
 800cfac:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800cfb0:	db0c      	blt.n	800cfcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 800cfb2:	4417      	add	r7, r2
 800cfb4:	b2bf      	uxth	r7, r7
 800cfb6:	4458      	add	r0, fp
 800cfb8:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800cfbc:	440f      	add	r7, r1
 800cfbe:	f8ad 4020 	strh.w	r4, [sp, #32]
 800cfc2:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800cfc6:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800cfca:	e61c      	b.n	800cc06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cfcc:	4458      	add	r0, fp
 800cfce:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800cfd2:	443b      	add	r3, r7
 800cfd4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800cfd8:	e615      	b.n	800cc06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800cfda:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800cfde:	fa1f f18c 	uxth.w	r1, ip
 800cfe2:	eb01 0e05 	add.w	lr, r1, r5
 800cfe6:	b282      	uxth	r2, r0
 800cfe8:	fa1f fe8e 	uxth.w	lr, lr
 800cfec:	9204      	str	r2, [sp, #16]
 800cfee:	fa0f f28e 	sxth.w	r2, lr
 800cff2:	9205      	str	r2, [sp, #20]
 800cff4:	9e04      	ldr	r6, [sp, #16]
 800cff6:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800cffa:	4432      	add	r2, r6
 800cffc:	b292      	uxth	r2, r2
 800cffe:	4584      	cmp	ip, r0
 800d000:	9206      	str	r2, [sp, #24]
 800d002:	da26      	bge.n	800d052 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800d004:	eba3 0309 	sub.w	r3, r3, r9
 800d008:	eba2 020e 	sub.w	r2, r2, lr
 800d00c:	b29b      	uxth	r3, r3
 800d00e:	b292      	uxth	r2, r2
 800d010:	fa0f fa83 	sxth.w	sl, r3
 800d014:	b211      	sxth	r1, r2
 800d016:	eba0 000c 	sub.w	r0, r0, ip
 800d01a:	eba4 0408 	sub.w	r4, r4, r8
 800d01e:	fb0a f000 	mul.w	r0, sl, r0
 800d022:	434c      	muls	r4, r1
 800d024:	42a0      	cmp	r0, r4
 800d026:	9800      	ldr	r0, [sp, #0]
 800d028:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800d02c:	dc06      	bgt.n	800d03c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 800d02e:	4458      	add	r0, fp
 800d030:	9a05      	ldr	r2, [sp, #20]
 800d032:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800d036:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800d03a:	e7ca      	b.n	800cfd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800d03c:	eb0b 0300 	add.w	r3, fp, r0
 800d040:	9903      	ldr	r1, [sp, #12]
 800d042:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800d046:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800d04a:	442a      	add	r2, r5
 800d04c:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800d050:	e5d9      	b.n	800cc06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d052:	9e04      	ldr	r6, [sp, #16]
 800d054:	9a03      	ldr	r2, [sp, #12]
 800d056:	1b89      	subs	r1, r1, r6
 800d058:	b21e      	sxth	r6, r3
 800d05a:	b289      	uxth	r1, r1
 800d05c:	4296      	cmp	r6, r2
 800d05e:	fa0f fc81 	sxth.w	ip, r1
 800d062:	dd26      	ble.n	800d0b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 800d064:	eba3 0309 	sub.w	r3, r3, r9
 800d068:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800d06c:	9e05      	ldr	r6, [sp, #20]
 800d06e:	b29b      	uxth	r3, r3
 800d070:	eba6 0902 	sub.w	r9, r6, r2
 800d074:	b218      	sxth	r0, r3
 800d076:	eba4 0408 	sub.w	r4, r4, r8
 800d07a:	fb0c f404 	mul.w	r4, ip, r4
 800d07e:	fb00 f909 	mul.w	r9, r0, r9
 800d082:	9a00      	ldr	r2, [sp, #0]
 800d084:	454c      	cmp	r4, r9
 800d086:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d08a:	db03      	blt.n	800d094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 800d08c:	445a      	add	r2, fp
 800d08e:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800d092:	e79e      	b.n	800cfd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800d094:	eb0b 0302 	add.w	r3, fp, r2
 800d098:	9a03      	ldr	r2, [sp, #12]
 800d09a:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800d09e:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800d0a2:	4429      	add	r1, r5
 800d0a4:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800d0a8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d0ac:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800d0b0:	e5a9      	b.n	800cc06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d0b2:	9b06      	ldr	r3, [sp, #24]
 800d0b4:	9c07      	ldr	r4, [sp, #28]
 800d0b6:	eba3 020e 	sub.w	r2, r3, lr
 800d0ba:	b292      	uxth	r2, r2
 800d0bc:	2c06      	cmp	r4, #6
 800d0be:	b213      	sxth	r3, r2
 800d0c0:	d80d      	bhi.n	800d0de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 800d0c2:	4651      	mov	r1, sl
 800d0c4:	aa0a      	add	r2, sp, #40	; 0x28
 800d0c6:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800d0ca:	6849      	ldr	r1, [r1, #4]
 800d0cc:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800d0d0:	9b05      	ldr	r3, [sp, #20]
 800d0d2:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800d0d6:	c203      	stmia	r2!, {r0, r1}
 800d0d8:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800d0dc:	e758      	b.n	800cf90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 800d0de:	9c00      	ldr	r4, [sp, #0]
 800d0e0:	4563      	cmp	r3, ip
 800d0e2:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d0e6:	db0d      	blt.n	800d104 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 800d0e8:	4429      	add	r1, r5
 800d0ea:	9a04      	ldr	r2, [sp, #16]
 800d0ec:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d0f0:	b289      	uxth	r1, r1
 800d0f2:	445c      	add	r4, fp
 800d0f4:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800d0f8:	4411      	add	r1, r2
 800d0fa:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800d0fe:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800d102:	e580      	b.n	800cc06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d104:	445c      	add	r4, fp
 800d106:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800d10a:	e79e      	b.n	800d04a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 800d10c:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800d110:	2f07      	cmp	r7, #7
 800d112:	d806      	bhi.n	800d122 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 800d114:	ab08      	add	r3, sp, #32
 800d116:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d11a:	9801      	ldr	r0, [sp, #4]
 800d11c:	f7ff fd44 	bl	800cba8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d120:	e5db      	b.n	800ccda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800d122:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800d126:	f107 39ff 	add.w	r9, r7, #4294967295
 800d12a:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800d12e:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800d132:	f04f 35ff 	mov.w	r5, #4294967295
 800d136:	2400      	movs	r4, #0
 800d138:	9304      	str	r3, [sp, #16]
 800d13a:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800d13e:	9300      	str	r3, [sp, #0]
 800d140:	f109 32ff 	add.w	r2, r9, #4294967295
 800d144:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800d148:	9303      	str	r3, [sp, #12]
 800d14a:	4690      	mov	r8, r2
 800d14c:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800d150:	f1b8 3fff 	cmp.w	r8, #4294967295
 800d154:	bf14      	ite	ne
 800d156:	9904      	ldrne	r1, [sp, #16]
 800d158:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800d15c:	6818      	ldr	r0, [r3, #0]
 800d15e:	9206      	str	r2, [sp, #24]
 800d160:	bf18      	it	ne
 800d162:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800d166:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800d16a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d16e:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800d172:	9305      	str	r3, [sp, #20]
 800d174:	fb16 f601 	smulbb	r6, r6, r1
 800d178:	6859      	ldr	r1, [r3, #4]
 800d17a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d17e:	4671      	mov	r1, lr
 800d180:	a80a      	add	r0, sp, #40	; 0x28
 800d182:	f7ff fc45 	bl	800ca10 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d186:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800d18a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800d18e:	9b03      	ldr	r3, [sp, #12]
 800d190:	9a00      	ldr	r2, [sp, #0]
 800d192:	fb11 f100 	smulbb	r1, r1, r0
 800d196:	fb02 6603 	mla	r6, r2, r3, r6
 800d19a:	1b8e      	subs	r6, r1, r6
 800d19c:	2008      	movs	r0, #8
 800d19e:	fb91 f1f0 	sdiv	r1, r1, r0
 800d1a2:	42b1      	cmp	r1, r6
 800d1a4:	dc21      	bgt.n	800d1ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800d1a6:	4556      	cmp	r6, sl
 800d1a8:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800d1ac:	da03      	bge.n	800d1b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800d1ae:	b1e6      	cbz	r6, 800d1ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800d1b0:	46b2      	mov	sl, r6
 800d1b2:	4645      	mov	r5, r8
 800d1b4:	464c      	mov	r4, r9
 800d1b6:	f108 38ff 	add.w	r8, r8, #4294967295
 800d1ba:	f118 0f02 	cmn.w	r8, #2
 800d1be:	d1c7      	bne.n	800d150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 800d1c0:	f1b2 3fff 	cmp.w	r2, #4294967295
 800d1c4:	f1a7 0708 	sub.w	r7, r7, #8
 800d1c8:	4691      	mov	r9, r2
 800d1ca:	d1b6      	bne.n	800d13a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 800d1cc:	9b01      	ldr	r3, [sp, #4]
 800d1ce:	b2a6      	uxth	r6, r4
 800d1d0:	00e4      	lsls	r4, r4, #3
 800d1d2:	1918      	adds	r0, r3, r4
 800d1d4:	1c6b      	adds	r3, r5, #1
 800d1d6:	d10b      	bne.n	800d1f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800d1d8:	4601      	mov	r1, r0
 800d1da:	9802      	ldr	r0, [sp, #8]
 800d1dc:	f7ff fc18 	bl	800ca10 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d1e0:	4631      	mov	r1, r6
 800d1e2:	9801      	ldr	r0, [sp, #4]
 800d1e4:	f7ff fcbe 	bl	800cb64 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d1e8:	e50d      	b.n	800cc06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800d1ea:	4645      	mov	r5, r8
 800d1ec:	464c      	mov	r4, r9
 800d1ee:	e7ed      	b.n	800d1cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 800d1f0:	9b01      	ldr	r3, [sp, #4]
 800d1f2:	00ed      	lsls	r5, r5, #3
 800d1f4:	1959      	adds	r1, r3, r5
 800d1f6:	f7ff fc0b 	bl	800ca10 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d1fa:	9b02      	ldr	r3, [sp, #8]
 800d1fc:	cb03      	ldmia	r3!, {r0, r1}
 800d1fe:	445d      	add	r5, fp
 800d200:	445c      	add	r4, fp
 800d202:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800d206:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800d20a:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800d20e:	9b02      	ldr	r3, [sp, #8]
 800d210:	6861      	ldr	r1, [r4, #4]
 800d212:	c303      	stmia	r3!, {r0, r1}
 800d214:	e7e4      	b.n	800d1e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0800d218 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800d218:	b530      	push	{r4, r5, lr}
 800d21a:	4b1d      	ldr	r3, [pc, #116]	; (800d290 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800d21c:	b085      	sub	sp, #20
 800d21e:	460c      	mov	r4, r1
 800d220:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d224:	4b1b      	ldr	r3, [pc, #108]	; (800d294 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800d226:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d22a:	2100      	movs	r1, #0
 800d22c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d230:	9100      	str	r1, [sp, #0]
 800d232:	4605      	mov	r5, r0
 800d234:	6861      	ldr	r1, [r4, #4]
 800d236:	6820      	ldr	r0, [r4, #0]
 800d238:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d23c:	ab02      	add	r3, sp, #8
 800d23e:	c303      	stmia	r3!, {r0, r1}
 800d240:	4669      	mov	r1, sp
 800d242:	a802      	add	r0, sp, #8
 800d244:	f7fc fb28 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 800d248:	ab02      	add	r3, sp, #8
 800d24a:	cb03      	ldmia	r3!, {r0, r1}
 800d24c:	4b12      	ldr	r3, [pc, #72]	; (800d298 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800d24e:	6020      	str	r0, [r4, #0]
 800d250:	6818      	ldr	r0, [r3, #0]
 800d252:	6061      	str	r1, [r4, #4]
 800d254:	b138      	cbz	r0, 800d266 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d256:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800d25a:	b133      	cbz	r3, 800d26a <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800d25c:	6821      	ldr	r1, [r4, #0]
 800d25e:	6862      	ldr	r2, [r4, #4]
 800d260:	4628      	mov	r0, r5
 800d262:	f7ff fcc3 	bl	800cbec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d266:	b005      	add	sp, #20
 800d268:	bd30      	pop	{r4, r5, pc}
 800d26a:	6803      	ldr	r3, [r0, #0]
 800d26c:	4621      	mov	r1, r4
 800d26e:	689b      	ldr	r3, [r3, #8]
 800d270:	4798      	blx	r3
 800d272:	4b0a      	ldr	r3, [pc, #40]	; (800d29c <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800d274:	6818      	ldr	r0, [r3, #0]
 800d276:	b118      	cbz	r0, 800d280 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800d278:	6803      	ldr	r3, [r0, #0]
 800d27a:	4621      	mov	r1, r4
 800d27c:	689b      	ldr	r3, [r3, #8]
 800d27e:	4798      	blx	r3
 800d280:	4b07      	ldr	r3, [pc, #28]	; (800d2a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800d282:	6818      	ldr	r0, [r3, #0]
 800d284:	6803      	ldr	r3, [r0, #0]
 800d286:	4621      	mov	r1, r4
 800d288:	69db      	ldr	r3, [r3, #28]
 800d28a:	4798      	blx	r3
 800d28c:	e7eb      	b.n	800d266 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d28e:	bf00      	nop
 800d290:	200134fc 	.word	0x200134fc
 800d294:	200134fe 	.word	0x200134fe
 800d298:	20013544 	.word	0x20013544
 800d29c:	20013540 	.word	0x20013540
 800d2a0:	20013508 	.word	0x20013508

0800d2a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800d2a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2a8:	4604      	mov	r4, r0
 800d2aa:	b09b      	sub	sp, #108	; 0x6c
 800d2ac:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800d2b0:	b129      	cbz	r1, 800d2be <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800d2b2:	2300      	movs	r3, #0
 800d2b4:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800d2b8:	b01b      	add	sp, #108	; 0x6c
 800d2ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2be:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800d2c2:	4630      	mov	r0, r6
 800d2c4:	f7fc fb2b 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d2c8:	4605      	mov	r5, r0
 800d2ca:	b940      	cbnz	r0, 800d2de <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800d2cc:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d2d0:	4620      	mov	r0, r4
 800d2d2:	f7ff fc8b 	bl	800cbec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d2d6:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800d2da:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800d2de:	4ba7      	ldr	r3, [pc, #668]	; (800d57c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800d2e0:	681b      	ldr	r3, [r3, #0]
 800d2e2:	b33b      	cbz	r3, 800d334 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800d2e4:	4da6      	ldr	r5, [pc, #664]	; (800d580 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800d2e6:	4628      	mov	r0, r5
 800d2e8:	f7fc fb19 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d2ec:	4606      	mov	r6, r0
 800d2ee:	bb08      	cbnz	r0, 800d334 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800d2f0:	4628      	mov	r0, r5
 800d2f2:	f7ff f9ef 	bl	800c6d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d2f6:	6829      	ldr	r1, [r5, #0]
 800d2f8:	686a      	ldr	r2, [r5, #4]
 800d2fa:	4620      	mov	r0, r4
 800d2fc:	f7ff fc76 	bl	800cbec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d300:	802e      	strh	r6, [r5, #0]
 800d302:	806e      	strh	r6, [r5, #2]
 800d304:	80ae      	strh	r6, [r5, #4]
 800d306:	80ee      	strh	r6, [r5, #6]
 800d308:	4f9e      	ldr	r7, [pc, #632]	; (800d584 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800d30a:	a809      	add	r0, sp, #36	; 0x24
 800d30c:	f7ff fbd7 	bl	800cabe <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d310:	883d      	ldrh	r5, [r7, #0]
 800d312:	462e      	mov	r6, r5
 800d314:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d318:	42b3      	cmp	r3, r6
 800d31a:	d910      	bls.n	800d33e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800d31c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d320:	a809      	add	r0, sp, #36	; 0x24
 800d322:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800d326:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800d32a:	3601      	adds	r6, #1
 800d32c:	f7ff fc3c 	bl	800cba8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d330:	b2b6      	uxth	r6, r6
 800d332:	e7ef      	b.n	800d314 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800d334:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d338:	2b00      	cmp	r3, #0
 800d33a:	d1e5      	bne.n	800d308 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800d33c:	e7bc      	b.n	800d2b8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d33e:	462e      	mov	r6, r5
 800d340:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800d344:	42b3      	cmp	r3, r6
 800d346:	d90b      	bls.n	800d360 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800d348:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d34c:	4620      	mov	r0, r4
 800d34e:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800d352:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800d356:	3601      	adds	r6, #1
 800d358:	f7ff fc48 	bl	800cbec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d35c:	b2b6      	uxth	r6, r6
 800d35e:	e7ef      	b.n	800d340 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800d360:	4a89      	ldr	r2, [pc, #548]	; (800d588 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800d362:	6813      	ldr	r3, [r2, #0]
 800d364:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d368:	2b01      	cmp	r3, #1
 800d36a:	4690      	mov	r8, r2
 800d36c:	f040 8094 	bne.w	800d498 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800d370:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800d374:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800d378:	33aa      	adds	r3, #170	; 0xaa
 800d37a:	f04f 0900 	mov.w	r9, #0
 800d37e:	42a8      	cmp	r0, r5
 800d380:	f103 0308 	add.w	r3, r3, #8
 800d384:	dd0a      	ble.n	800d39c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800d386:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800d38a:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800d38e:	440a      	add	r2, r1
 800d390:	b212      	sxth	r2, r2
 800d392:	4591      	cmp	r9, r2
 800d394:	bfb8      	it	lt
 800d396:	4691      	movlt	r9, r2
 800d398:	3501      	adds	r5, #1
 800d39a:	e7f0      	b.n	800d37e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800d39c:	4b7b      	ldr	r3, [pc, #492]	; (800d58c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800d39e:	4e7c      	ldr	r6, [pc, #496]	; (800d590 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800d3a0:	881d      	ldrh	r5, [r3, #0]
 800d3a2:	2300      	movs	r3, #0
 800d3a4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d3a8:	2d0f      	cmp	r5, #15
 800d3aa:	bf8c      	ite	hi
 800d3ac:	08ed      	lsrhi	r5, r5, #3
 800d3ae:	2501      	movls	r5, #1
 800d3b0:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d3b4:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800d3b8:	f8d8 0000 	ldr.w	r0, [r8]
 800d3bc:	440b      	add	r3, r1
 800d3be:	b21b      	sxth	r3, r3
 800d3c0:	4599      	cmp	r9, r3
 800d3c2:	6802      	ldr	r2, [r0, #0]
 800d3c4:	dd4b      	ble.n	800d45e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800d3c6:	f8d2 3094 	ldr.w	r3, [r2, #148]	; 0x94
 800d3ca:	4798      	blx	r3
 800d3cc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d3d0:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d3d4:	4413      	add	r3, r2
 800d3d6:	b21b      	sxth	r3, r3
 800d3d8:	195a      	adds	r2, r3, r5
 800d3da:	4290      	cmp	r0, r2
 800d3dc:	da07      	bge.n	800d3ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800d3de:	4581      	cmp	r9, r0
 800d3e0:	dd05      	ble.n	800d3ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800d3e2:	4298      	cmp	r0, r3
 800d3e4:	da33      	bge.n	800d44e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800d3e6:	2b00      	cmp	r3, #0
 800d3e8:	dd31      	ble.n	800d44e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800d3ea:	4648      	mov	r0, r9
 800d3ec:	e004      	b.n	800d3f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800d3ee:	4298      	cmp	r0, r3
 800d3f0:	dbfb      	blt.n	800d3ea <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800d3f2:	4548      	cmp	r0, r9
 800d3f4:	bfa8      	it	ge
 800d3f6:	4648      	movge	r0, r9
 800d3f8:	f9b6 2000 	ldrsh.w	r2, [r6]
 800d3fc:	f8b7 a000 	ldrh.w	sl, [r7]
 800d400:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d404:	2100      	movs	r1, #0
 800d406:	1ac0      	subs	r0, r0, r3
 800d408:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d40c:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d410:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d414:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d418:	4553      	cmp	r3, sl
 800d41a:	d9c9      	bls.n	800d3b0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800d41c:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800d420:	ab07      	add	r3, sp, #28
 800d422:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d426:	6851      	ldr	r1, [r2, #4]
 800d428:	c303      	stmia	r3!, {r0, r1}
 800d42a:	a807      	add	r0, sp, #28
 800d42c:	a905      	add	r1, sp, #20
 800d42e:	f7fc fa33 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 800d432:	a807      	add	r0, sp, #28
 800d434:	f7fc fa73 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d438:	b920      	cbnz	r0, 800d444 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800d43a:	6823      	ldr	r3, [r4, #0]
 800d43c:	a907      	add	r1, sp, #28
 800d43e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d440:	4620      	mov	r0, r4
 800d442:	4798      	blx	r3
 800d444:	f10a 0a01 	add.w	sl, sl, #1
 800d448:	fa1f fa8a 	uxth.w	sl, sl
 800d44c:	e7e2      	b.n	800d414 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800d44e:	f8d8 0000 	ldr.w	r0, [r8]
 800d452:	6803      	ldr	r3, [r0, #0]
 800d454:	2101      	movs	r1, #1
 800d456:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d45a:	4798      	blx	r3
 800d45c:	e7a8      	b.n	800d3b0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800d45e:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800d460:	4798      	blx	r3
 800d462:	4b4c      	ldr	r3, [pc, #304]	; (800d594 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 800d464:	781b      	ldrb	r3, [r3, #0]
 800d466:	2b00      	cmp	r3, #0
 800d468:	f43f af26 	beq.w	800d2b8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d46c:	2300      	movs	r3, #0
 800d46e:	883d      	ldrh	r5, [r7, #0]
 800d470:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800d474:	34ea      	adds	r4, #234	; 0xea
 800d476:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800d47a:	42ab      	cmp	r3, r5
 800d47c:	f67f af1c 	bls.w	800d2b8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d480:	ab1a      	add	r3, sp, #104	; 0x68
 800d482:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d486:	3b44      	subs	r3, #68	; 0x44
 800d488:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d48c:	4620      	mov	r0, r4
 800d48e:	3501      	adds	r5, #1
 800d490:	f7ff fb8a 	bl	800cba8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d494:	b2ad      	uxth	r5, r5
 800d496:	e7ee      	b.n	800d476 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800d498:	2b02      	cmp	r3, #2
 800d49a:	f040 813e 	bne.w	800d71a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800d49e:	4b3e      	ldr	r3, [pc, #248]	; (800d598 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>)
 800d4a0:	781b      	ldrb	r3, [r3, #0]
 800d4a2:	2b01      	cmp	r3, #1
 800d4a4:	d02c      	beq.n	800d500 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25c>
 800d4a6:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800d4aa:	883a      	ldrh	r2, [r7, #0]
 800d4ac:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800d4b0:	3201      	adds	r2, #1
 800d4b2:	b292      	uxth	r2, r2
 800d4b4:	2900      	cmp	r1, #0
 800d4b6:	d0d4      	beq.n	800d462 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d4b8:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800d4bc:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800d4c0:	441d      	add	r5, r3
 800d4c2:	b22d      	sxth	r5, r5
 800d4c4:	4610      	mov	r0, r2
 800d4c6:	f04f 0a00 	mov.w	sl, #0
 800d4ca:	b283      	uxth	r3, r0
 800d4cc:	4299      	cmp	r1, r3
 800d4ce:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800d4d2:	f240 80c5 	bls.w	800d660 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3bc>
 800d4d6:	4426      	add	r6, r4
 800d4d8:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800d4dc:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800d4e0:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800d4e4:	4573      	cmp	r3, lr
 800d4e6:	4684      	mov	ip, r0
 800d4e8:	f340 80a7 	ble.w	800d63a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x396>
 800d4ec:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800d4f0:	4475      	add	r5, lr
 800d4f2:	b22d      	sxth	r5, r5
 800d4f4:	429d      	cmp	r5, r3
 800d4f6:	bfa8      	it	ge
 800d4f8:	461d      	movge	r5, r3
 800d4fa:	3001      	adds	r0, #1
 800d4fc:	46e2      	mov	sl, ip
 800d4fe:	e7e4      	b.n	800d4ca <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x226>
 800d500:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800d504:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800d508:	f1bb 0f00 	cmp.w	fp, #0
 800d50c:	d0a9      	beq.n	800d462 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d50e:	883b      	ldrh	r3, [r7, #0]
 800d510:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800d514:	3301      	adds	r3, #1
 800d516:	b29b      	uxth	r3, r3
 800d518:	2600      	movs	r6, #0
 800d51a:	b299      	uxth	r1, r3
 800d51c:	458b      	cmp	fp, r1
 800d51e:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800d522:	d93b      	bls.n	800d59c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f8>
 800d524:	4425      	add	r5, r4
 800d526:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800d52a:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800d52e:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800d532:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800d536:	4408      	add	r0, r1
 800d538:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800d53c:	4471      	add	r1, lr
 800d53e:	b200      	sxth	r0, r0
 800d540:	b209      	sxth	r1, r1
 800d542:	4288      	cmp	r0, r1
 800d544:	469c      	mov	ip, r3
 800d546:	da06      	bge.n	800d556 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b2>
 800d548:	4586      	cmp	lr, r0
 800d54a:	4672      	mov	r2, lr
 800d54c:	bfb8      	it	lt
 800d54e:	4602      	movlt	r2, r0
 800d550:	3301      	adds	r3, #1
 800d552:	4666      	mov	r6, ip
 800d554:	e7e1      	b.n	800d51a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800d556:	d10b      	bne.n	800d570 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2cc>
 800d558:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800d55c:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800d560:	458c      	cmp	ip, r1
 800d562:	bfb4      	ite	lt
 800d564:	469c      	movlt	ip, r3
 800d566:	46b4      	movge	ip, r6
 800d568:	4572      	cmp	r2, lr
 800d56a:	bfb8      	it	lt
 800d56c:	4672      	movlt	r2, lr
 800d56e:	e7ef      	b.n	800d550 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800d570:	428a      	cmp	r2, r1
 800d572:	bfb8      	it	lt
 800d574:	460a      	movlt	r2, r1
 800d576:	46b4      	mov	ip, r6
 800d578:	e7ea      	b.n	800d550 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800d57a:	bf00      	nop
 800d57c:	20013540 	.word	0x20013540
 800d580:	2001354c 	.word	0x2001354c
 800d584:	20000084 	.word	0x20000084
 800d588:	20013508 	.word	0x20013508
 800d58c:	200134fe 	.word	0x200134fe
 800d590:	200134fc 	.word	0x200134fc
 800d594:	20013506 	.word	0x20013506
 800d598:	20013500 	.word	0x20013500
 800d59c:	1961      	adds	r1, r4, r5
 800d59e:	ab07      	add	r3, sp, #28
 800d5a0:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800d5a4:	6849      	ldr	r1, [r1, #4]
 800d5a6:	c303      	stmia	r3!, {r0, r1}
 800d5a8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d5ac:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d5b0:	2b13      	cmp	r3, #19
 800d5b2:	bfd8      	it	le
 800d5b4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800d5b8:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d5bc:	440b      	add	r3, r1
 800d5be:	1a9b      	subs	r3, r3, r2
 800d5c0:	a807      	add	r0, sp, #28
 800d5c2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d5c6:	f7ff f89f 	bl	800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d5ca:	a807      	add	r0, sp, #28
 800d5cc:	f7fc f9a7 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d5d0:	2800      	cmp	r0, #0
 800d5d2:	d197      	bne.n	800d504 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d5d4:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800d5d8:	f8d8 0000 	ldr.w	r0, [r8]
 800d5dc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d5e0:	f8d0 e000 	ldr.w	lr, [r0]
 800d5e4:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800d5e8:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d5ec:	f1bc 0f14 	cmp.w	ip, #20
 800d5f0:	bfa8      	it	ge
 800d5f2:	f04f 0c14 	movge.w	ip, #20
 800d5f6:	fa1f fc8c 	uxth.w	ip, ip
 800d5fa:	f8cd c000 	str.w	ip, [sp]
 800d5fe:	f8de a088 	ldr.w	sl, [lr, #136]	; 0x88
 800d602:	47d0      	blx	sl
 800d604:	4682      	mov	sl, r0
 800d606:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d60a:	a807      	add	r0, sp, #28
 800d60c:	f7ff f862 	bl	800c6d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d610:	6823      	ldr	r3, [r4, #0]
 800d612:	4425      	add	r5, r4
 800d614:	4620      	mov	r0, r4
 800d616:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d618:	a907      	add	r1, sp, #28
 800d61a:	4798      	blx	r3
 800d61c:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800d620:	eba0 000a 	sub.w	r0, r0, sl
 800d624:	b200      	sxth	r0, r0
 800d626:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800d62a:	2800      	cmp	r0, #0
 800d62c:	f47f af6a 	bne.w	800d504 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d630:	b2b1      	uxth	r1, r6
 800d632:	4648      	mov	r0, r9
 800d634:	f7ff fa96 	bl	800cb64 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d638:	e764      	b.n	800d504 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800d63a:	d10c      	bne.n	800d656 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b2>
 800d63c:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800d640:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800d644:	45b4      	cmp	ip, r6
 800d646:	bfb4      	ite	lt
 800d648:	4684      	movlt	ip, r0
 800d64a:	46d4      	movge	ip, sl
 800d64c:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800d650:	4433      	add	r3, r6
 800d652:	b21b      	sxth	r3, r3
 800d654:	e74e      	b.n	800d4f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x250>
 800d656:	4575      	cmp	r5, lr
 800d658:	bfa8      	it	ge
 800d65a:	4675      	movge	r5, lr
 800d65c:	46d4      	mov	ip, sl
 800d65e:	e74c      	b.n	800d4fa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x256>
 800d660:	eb0b 0006 	add.w	r0, fp, r6
 800d664:	4426      	add	r6, r4
 800d666:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800d66a:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800d66e:	f1b9 0f13 	cmp.w	r9, #19
 800d672:	bfde      	ittt	le
 800d674:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800d678:	444d      	addle	r5, r9
 800d67a:	b22d      	sxthle	r5, r5
 800d67c:	f7fc f94f 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d680:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800d684:	2800      	cmp	r0, #0
 800d686:	f47f af15 	bne.w	800d4b4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x210>
 800d68a:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800d68e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d692:	eba5 050c 	sub.w	r5, r5, ip
 800d696:	fa1f f28c 	uxth.w	r2, ip
 800d69a:	fa1f f989 	uxth.w	r9, r9
 800d69e:	eb02 0009 	add.w	r0, r2, r9
 800d6a2:	2d14      	cmp	r5, #20
 800d6a4:	bfa8      	it	ge
 800d6a6:	2514      	movge	r5, #20
 800d6a8:	b200      	sxth	r0, r0
 800d6aa:	fa1f fe85 	uxth.w	lr, r5
 800d6ae:	eba0 000c 	sub.w	r0, r0, ip
 800d6b2:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800d6b6:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800d6ba:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d6be:	4586      	cmp	lr, r0
 800d6c0:	f8d8 0000 	ldr.w	r0, [r8]
 800d6c4:	f8ad c01e 	strh.w	ip, [sp, #30]
 800d6c8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d6cc:	bfb8      	it	lt
 800d6ce:	46f1      	movlt	r9, lr
 800d6d0:	6805      	ldr	r5, [r0, #0]
 800d6d2:	f8cd 9000 	str.w	r9, [sp]
 800d6d6:	b29b      	uxth	r3, r3
 800d6d8:	b289      	uxth	r1, r1
 800d6da:	f8d5 5088 	ldr.w	r5, [r5, #136]	; 0x88
 800d6de:	47a8      	blx	r5
 800d6e0:	6823      	ldr	r3, [r4, #0]
 800d6e2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d6e6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d6e8:	a907      	add	r1, sp, #28
 800d6ea:	4620      	mov	r0, r4
 800d6ec:	4798      	blx	r3
 800d6ee:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800d6f2:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800d6f6:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800d6fa:	1a5b      	subs	r3, r3, r1
 800d6fc:	440a      	add	r2, r1
 800d6fe:	b21b      	sxth	r3, r3
 800d700:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800d704:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800d708:	2b00      	cmp	r3, #0
 800d70a:	f47f aece 	bne.w	800d4aa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800d70e:	fa1f f18a 	uxth.w	r1, sl
 800d712:	4658      	mov	r0, fp
 800d714:	f7ff fa26 	bl	800cb64 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d718:	e6c7      	b.n	800d4aa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800d71a:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d71e:	42ab      	cmp	r3, r5
 800d720:	f67f ae9f 	bls.w	800d462 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800d724:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800d728:	ab07      	add	r3, sp, #28
 800d72a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d72e:	6851      	ldr	r1, [r2, #4]
 800d730:	c303      	stmia	r3!, {r0, r1}
 800d732:	a807      	add	r0, sp, #28
 800d734:	f7fc f8f3 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 800d738:	b920      	cbnz	r0, 800d744 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x4a0>
 800d73a:	6823      	ldr	r3, [r4, #0]
 800d73c:	a907      	add	r1, sp, #28
 800d73e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d740:	4620      	mov	r0, r4
 800d742:	4798      	blx	r3
 800d744:	3501      	adds	r5, #1
 800d746:	b2ad      	uxth	r5, r5
 800d748:	e7e7      	b.n	800d71a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800d74a:	bf00      	nop

0800d74c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800d74c:	4b03      	ldr	r3, [pc, #12]	; (800d75c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800d74e:	2200      	movs	r2, #0
 800d750:	801a      	strh	r2, [r3, #0]
 800d752:	805a      	strh	r2, [r3, #2]
 800d754:	809a      	strh	r2, [r3, #4]
 800d756:	80da      	strh	r2, [r3, #6]
 800d758:	4770      	bx	lr
 800d75a:	bf00      	nop
 800d75c:	2001354c 	.word	0x2001354c

0800d760 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800d760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d764:	4606      	mov	r6, r0
 800d766:	b09d      	sub	sp, #116	; 0x74
 800d768:	a803      	add	r0, sp, #12
 800d76a:	4614      	mov	r4, r2
 800d76c:	468a      	mov	sl, r1
 800d76e:	461d      	mov	r5, r3
 800d770:	f000 fd66 	bl	800e240 <_ZN8touchgfx12TextProviderC1Ev>
 800d774:	6833      	ldr	r3, [r6, #0]
 800d776:	4630      	mov	r0, r6
 800d778:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d77a:	4798      	blx	r3
 800d77c:	6833      	ldr	r3, [r6, #0]
 800d77e:	4607      	mov	r7, r0
 800d780:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d782:	4630      	mov	r0, r6
 800d784:	4798      	blx	r3
 800d786:	462a      	mov	r2, r5
 800d788:	9000      	str	r0, [sp, #0]
 800d78a:	4621      	mov	r1, r4
 800d78c:	463b      	mov	r3, r7
 800d78e:	a803      	add	r0, sp, #12
 800d790:	f000 fda9 	bl	800e2e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d794:	2500      	movs	r5, #0
 800d796:	462c      	mov	r4, r5
 800d798:	46a9      	mov	r9, r5
 800d79a:	46a8      	mov	r8, r5
 800d79c:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800d7a0:	2300      	movs	r3, #0
 800d7a2:	9302      	str	r3, [sp, #8]
 800d7a4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d7a8:	429c      	cmp	r4, r3
 800d7aa:	d002      	beq.n	800d7b2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800d7ac:	455c      	cmp	r4, fp
 800d7ae:	bf18      	it	ne
 800d7b0:	4625      	movne	r5, r4
 800d7b2:	ab02      	add	r3, sp, #8
 800d7b4:	4632      	mov	r2, r6
 800d7b6:	4651      	mov	r1, sl
 800d7b8:	a803      	add	r0, sp, #12
 800d7ba:	f001 f893 	bl	800e8e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d7be:	4604      	mov	r4, r0
 800d7c0:	b108      	cbz	r0, 800d7c6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800d7c2:	280a      	cmp	r0, #10
 800d7c4:	d10a      	bne.n	800d7dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800d7c6:	45c1      	cmp	r9, r8
 800d7c8:	bf38      	it	cc
 800d7ca:	46c1      	movcc	r9, r8
 800d7cc:	f04f 0800 	mov.w	r8, #0
 800d7d0:	2c00      	cmp	r4, #0
 800d7d2:	d1e5      	bne.n	800d7a0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800d7d4:	4648      	mov	r0, r9
 800d7d6:	b01d      	add	sp, #116	; 0x74
 800d7d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d7dc:	9a02      	ldr	r2, [sp, #8]
 800d7de:	2a00      	cmp	r2, #0
 800d7e0:	d0de      	beq.n	800d7a0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800d7e2:	7b57      	ldrb	r7, [r2, #13]
 800d7e4:	6833      	ldr	r3, [r6, #0]
 800d7e6:	8894      	ldrh	r4, [r2, #4]
 800d7e8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d7ea:	007f      	lsls	r7, r7, #1
 800d7ec:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800d7f0:	7a97      	ldrb	r7, [r2, #10]
 800d7f2:	4629      	mov	r1, r5
 800d7f4:	4307      	orrs	r7, r0
 800d7f6:	4630      	mov	r0, r6
 800d7f8:	4798      	blx	r3
 800d7fa:	4438      	add	r0, r7
 800d7fc:	4480      	add	r8, r0
 800d7fe:	fa1f f888 	uxth.w	r8, r8
 800d802:	e7e5      	b.n	800d7d0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800d804 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800d804:	b508      	push	{r3, lr}
 800d806:	6803      	ldr	r3, [r0, #0]
 800d808:	68db      	ldr	r3, [r3, #12]
 800d80a:	4798      	blx	r3
 800d80c:	b128      	cbz	r0, 800d81a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800d80e:	7b43      	ldrb	r3, [r0, #13]
 800d810:	7a80      	ldrb	r0, [r0, #10]
 800d812:	005b      	lsls	r3, r3, #1
 800d814:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d818:	4318      	orrs	r0, r3
 800d81a:	bd08      	pop	{r3, pc}

0800d81c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800d81c:	b40e      	push	{r1, r2, r3}
 800d81e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d820:	b09e      	sub	sp, #120	; 0x78
 800d822:	ab23      	add	r3, sp, #140	; 0x8c
 800d824:	4605      	mov	r5, r0
 800d826:	f853 4b04 	ldr.w	r4, [r3], #4
 800d82a:	9303      	str	r3, [sp, #12]
 800d82c:	a805      	add	r0, sp, #20
 800d82e:	f000 fd07 	bl	800e240 <_ZN8touchgfx12TextProviderC1Ev>
 800d832:	682b      	ldr	r3, [r5, #0]
 800d834:	4628      	mov	r0, r5
 800d836:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d838:	4798      	blx	r3
 800d83a:	682b      	ldr	r3, [r5, #0]
 800d83c:	4606      	mov	r6, r0
 800d83e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d840:	4628      	mov	r0, r5
 800d842:	4798      	blx	r3
 800d844:	4633      	mov	r3, r6
 800d846:	ae1e      	add	r6, sp, #120	; 0x78
 800d848:	4621      	mov	r1, r4
 800d84a:	9000      	str	r0, [sp, #0]
 800d84c:	9a03      	ldr	r2, [sp, #12]
 800d84e:	2400      	movs	r4, #0
 800d850:	a805      	add	r0, sp, #20
 800d852:	f000 fd48 	bl	800e2e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d856:	f846 4d68 	str.w	r4, [r6, #-104]!
 800d85a:	462a      	mov	r2, r5
 800d85c:	4633      	mov	r3, r6
 800d85e:	4621      	mov	r1, r4
 800d860:	a805      	add	r0, sp, #20
 800d862:	f001 f83f 	bl	800e8e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d866:	b1f0      	cbz	r0, 800d8a6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800d868:	280a      	cmp	r0, #10
 800d86a:	d018      	beq.n	800d89e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800d86c:	9f04      	ldr	r7, [sp, #16]
 800d86e:	b1b7      	cbz	r7, 800d89e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800d870:	7b78      	ldrb	r0, [r7, #13]
 800d872:	7a3b      	ldrb	r3, [r7, #8]
 800d874:	88aa      	ldrh	r2, [r5, #4]
 800d876:	00c1      	lsls	r1, r0, #3
 800d878:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d87c:	4319      	orrs	r1, r3
 800d87e:	0643      	lsls	r3, r0, #25
 800d880:	bf44      	itt	mi
 800d882:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800d886:	b219      	sxthmi	r1, r3
 800d888:	0100      	lsls	r0, r0, #4
 800d88a:	79fb      	ldrb	r3, [r7, #7]
 800d88c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d890:	4303      	orrs	r3, r0
 800d892:	4413      	add	r3, r2
 800d894:	1a5b      	subs	r3, r3, r1
 800d896:	b29b      	uxth	r3, r3
 800d898:	42a3      	cmp	r3, r4
 800d89a:	bfc8      	it	gt
 800d89c:	b21c      	sxthgt	r4, r3
 800d89e:	4633      	mov	r3, r6
 800d8a0:	462a      	mov	r2, r5
 800d8a2:	2100      	movs	r1, #0
 800d8a4:	e7dc      	b.n	800d860 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800d8a6:	b2a0      	uxth	r0, r4
 800d8a8:	b01e      	add	sp, #120	; 0x78
 800d8aa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d8ae:	b003      	add	sp, #12
 800d8b0:	4770      	bx	lr

0800d8b2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800d8b2:	b40e      	push	{r1, r2, r3}
 800d8b4:	b570      	push	{r4, r5, r6, lr}
 800d8b6:	b09d      	sub	sp, #116	; 0x74
 800d8b8:	ab21      	add	r3, sp, #132	; 0x84
 800d8ba:	4604      	mov	r4, r0
 800d8bc:	f853 5b04 	ldr.w	r5, [r3], #4
 800d8c0:	9302      	str	r3, [sp, #8]
 800d8c2:	a803      	add	r0, sp, #12
 800d8c4:	f000 fcbc 	bl	800e240 <_ZN8touchgfx12TextProviderC1Ev>
 800d8c8:	6823      	ldr	r3, [r4, #0]
 800d8ca:	4620      	mov	r0, r4
 800d8cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d8ce:	4798      	blx	r3
 800d8d0:	6823      	ldr	r3, [r4, #0]
 800d8d2:	4606      	mov	r6, r0
 800d8d4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d8d6:	4620      	mov	r0, r4
 800d8d8:	4798      	blx	r3
 800d8da:	4633      	mov	r3, r6
 800d8dc:	9000      	str	r0, [sp, #0]
 800d8de:	9a02      	ldr	r2, [sp, #8]
 800d8e0:	4629      	mov	r1, r5
 800d8e2:	a803      	add	r0, sp, #12
 800d8e4:	f000 fcff 	bl	800e2e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d8e8:	a803      	add	r0, sp, #12
 800d8ea:	f001 f8f5 	bl	800ead8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d8ee:	2401      	movs	r4, #1
 800d8f0:	b2a3      	uxth	r3, r4
 800d8f2:	b140      	cbz	r0, 800d906 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800d8f4:	280a      	cmp	r0, #10
 800d8f6:	bf08      	it	eq
 800d8f8:	3301      	addeq	r3, #1
 800d8fa:	a803      	add	r0, sp, #12
 800d8fc:	bf08      	it	eq
 800d8fe:	b21c      	sxtheq	r4, r3
 800d900:	f001 f8ea 	bl	800ead8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d904:	e7f4      	b.n	800d8f0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800d906:	4618      	mov	r0, r3
 800d908:	b01d      	add	sp, #116	; 0x74
 800d90a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d90e:	b003      	add	sp, #12
 800d910:	4770      	bx	lr

0800d912 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800d912:	b40e      	push	{r1, r2, r3}
 800d914:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d916:	b09e      	sub	sp, #120	; 0x78
 800d918:	ab23      	add	r3, sp, #140	; 0x8c
 800d91a:	4604      	mov	r4, r0
 800d91c:	f853 5b04 	ldr.w	r5, [r3], #4
 800d920:	9303      	str	r3, [sp, #12]
 800d922:	a805      	add	r0, sp, #20
 800d924:	f000 fc8c 	bl	800e240 <_ZN8touchgfx12TextProviderC1Ev>
 800d928:	6823      	ldr	r3, [r4, #0]
 800d92a:	4620      	mov	r0, r4
 800d92c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d92e:	4798      	blx	r3
 800d930:	6823      	ldr	r3, [r4, #0]
 800d932:	4606      	mov	r6, r0
 800d934:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d936:	4620      	mov	r0, r4
 800d938:	4798      	blx	r3
 800d93a:	4633      	mov	r3, r6
 800d93c:	4629      	mov	r1, r5
 800d93e:	9000      	str	r0, [sp, #0]
 800d940:	9a03      	ldr	r2, [sp, #12]
 800d942:	a805      	add	r0, sp, #20
 800d944:	ad1e      	add	r5, sp, #120	; 0x78
 800d946:	f000 fcce 	bl	800e2e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d94a:	2100      	movs	r1, #0
 800d94c:	f845 1d68 	str.w	r1, [r5, #-104]!
 800d950:	4622      	mov	r2, r4
 800d952:	462b      	mov	r3, r5
 800d954:	a805      	add	r0, sp, #20
 800d956:	f000 ffc5 	bl	800e8e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d95a:	26ff      	movs	r6, #255	; 0xff
 800d95c:	b1d8      	cbz	r0, 800d996 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800d95e:	280a      	cmp	r0, #10
 800d960:	d012      	beq.n	800d988 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800d962:	9804      	ldr	r0, [sp, #16]
 800d964:	b180      	cbz	r0, 800d988 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800d966:	7b47      	ldrb	r7, [r0, #13]
 800d968:	7922      	ldrb	r2, [r4, #4]
 800d96a:	00fb      	lsls	r3, r7, #3
 800d96c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d970:	7a03      	ldrb	r3, [r0, #8]
 800d972:	430b      	orrs	r3, r1
 800d974:	0679      	lsls	r1, r7, #25
 800d976:	bf44      	itt	mi
 800d978:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d97c:	b21b      	sxthmi	r3, r3
 800d97e:	1ad3      	subs	r3, r2, r3
 800d980:	b2db      	uxtb	r3, r3
 800d982:	429e      	cmp	r6, r3
 800d984:	bf28      	it	cs
 800d986:	461e      	movcs	r6, r3
 800d988:	462b      	mov	r3, r5
 800d98a:	4622      	mov	r2, r4
 800d98c:	2100      	movs	r1, #0
 800d98e:	a805      	add	r0, sp, #20
 800d990:	f000 ffa8 	bl	800e8e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d994:	e7e2      	b.n	800d95c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800d996:	4630      	mov	r0, r6
 800d998:	b01e      	add	sp, #120	; 0x78
 800d99a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d99e:	b003      	add	sp, #12
 800d9a0:	4770      	bx	lr

0800d9a2 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800d9a2:	b513      	push	{r0, r1, r4, lr}
 800d9a4:	6803      	ldr	r3, [r0, #0]
 800d9a6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800d9aa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d9ae:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d9b2:	2400      	movs	r4, #0
 800d9b4:	9400      	str	r4, [sp, #0]
 800d9b6:	f8ad 2006 	strh.w	r2, [sp, #6]
 800d9ba:	691b      	ldr	r3, [r3, #16]
 800d9bc:	4669      	mov	r1, sp
 800d9be:	4798      	blx	r3
 800d9c0:	b002      	add	sp, #8
 800d9c2:	bd10      	pop	{r4, pc}

0800d9c4 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800d9c4:	b538      	push	{r3, r4, r5, lr}
 800d9c6:	680b      	ldr	r3, [r1, #0]
 800d9c8:	460c      	mov	r4, r1
 800d9ca:	68db      	ldr	r3, [r3, #12]
 800d9cc:	4605      	mov	r5, r0
 800d9ce:	4798      	blx	r3
 800d9d0:	6823      	ldr	r3, [r4, #0]
 800d9d2:	4620      	mov	r0, r4
 800d9d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d9d6:	4629      	mov	r1, r5
 800d9d8:	4798      	blx	r3
 800d9da:	4628      	mov	r0, r5
 800d9dc:	bd38      	pop	{r3, r4, r5, pc}

0800d9de <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800d9de:	b410      	push	{r4}
 800d9e0:	880a      	ldrh	r2, [r1, #0]
 800d9e2:	8884      	ldrh	r4, [r0, #4]
 800d9e4:	4422      	add	r2, r4
 800d9e6:	800a      	strh	r2, [r1, #0]
 800d9e8:	88c4      	ldrh	r4, [r0, #6]
 800d9ea:	884a      	ldrh	r2, [r1, #2]
 800d9ec:	4422      	add	r2, r4
 800d9ee:	804a      	strh	r2, [r1, #2]
 800d9f0:	6940      	ldr	r0, [r0, #20]
 800d9f2:	b120      	cbz	r0, 800d9fe <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800d9f4:	6803      	ldr	r3, [r0, #0]
 800d9f6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d9fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d9fc:	4718      	bx	r3
 800d9fe:	f85d 4b04 	ldr.w	r4, [sp], #4
 800da02:	4770      	bx	lr

0800da04 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800da04:	b570      	push	{r4, r5, r6, lr}
 800da06:	8882      	ldrh	r2, [r0, #4]
 800da08:	880b      	ldrh	r3, [r1, #0]
 800da0a:	4413      	add	r3, r2
 800da0c:	800b      	strh	r3, [r1, #0]
 800da0e:	88c2      	ldrh	r2, [r0, #6]
 800da10:	884b      	ldrh	r3, [r1, #2]
 800da12:	460c      	mov	r4, r1
 800da14:	4413      	add	r3, r2
 800da16:	804b      	strh	r3, [r1, #2]
 800da18:	4605      	mov	r5, r0
 800da1a:	1d01      	adds	r1, r0, #4
 800da1c:	4620      	mov	r0, r4
 800da1e:	f7fb ff3b 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 800da22:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800da26:	2b00      	cmp	r3, #0
 800da28:	dd0b      	ble.n	800da42 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800da2a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800da2e:	2b00      	cmp	r3, #0
 800da30:	dd07      	ble.n	800da42 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800da32:	6968      	ldr	r0, [r5, #20]
 800da34:	b128      	cbz	r0, 800da42 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800da36:	6803      	ldr	r3, [r0, #0]
 800da38:	4621      	mov	r1, r4
 800da3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800da3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800da40:	4718      	bx	r3
 800da42:	bd70      	pop	{r4, r5, r6, pc}

0800da44 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800da44:	b570      	push	{r4, r5, r6, lr}
 800da46:	8882      	ldrh	r2, [r0, #4]
 800da48:	880b      	ldrh	r3, [r1, #0]
 800da4a:	4413      	add	r3, r2
 800da4c:	800b      	strh	r3, [r1, #0]
 800da4e:	88c2      	ldrh	r2, [r0, #6]
 800da50:	884b      	ldrh	r3, [r1, #2]
 800da52:	460c      	mov	r4, r1
 800da54:	4413      	add	r3, r2
 800da56:	804b      	strh	r3, [r1, #2]
 800da58:	4605      	mov	r5, r0
 800da5a:	1d01      	adds	r1, r0, #4
 800da5c:	4620      	mov	r0, r4
 800da5e:	f7fb ff1b 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 800da62:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800da66:	2b00      	cmp	r3, #0
 800da68:	dd15      	ble.n	800da96 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 800da6a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800da6e:	2b00      	cmp	r3, #0
 800da70:	dd11      	ble.n	800da96 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 800da72:	6968      	ldr	r0, [r5, #20]
 800da74:	b128      	cbz	r0, 800da82 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800da76:	6803      	ldr	r3, [r0, #0]
 800da78:	691b      	ldr	r3, [r3, #16]
 800da7a:	4621      	mov	r1, r4
 800da7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800da80:	4718      	bx	r3
 800da82:	4b05      	ldr	r3, [pc, #20]	; (800da98 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x54>)
 800da84:	681b      	ldr	r3, [r3, #0]
 800da86:	3304      	adds	r3, #4
 800da88:	429d      	cmp	r5, r3
 800da8a:	d104      	bne.n	800da96 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 800da8c:	f7ff f806 	bl	800ca9c <_ZN8touchgfx11Application11getInstanceEv>
 800da90:	6803      	ldr	r3, [r0, #0]
 800da92:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800da94:	e7f1      	b.n	800da7a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x36>
 800da96:	bd70      	pop	{r4, r5, r6, pc}
 800da98:	20013544 	.word	0x20013544

0800da9c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800da9c:	b570      	push	{r4, r5, r6, lr}
 800da9e:	4604      	mov	r4, r0
 800daa0:	4616      	mov	r6, r2
 800daa2:	460d      	mov	r5, r1
 800daa4:	b901      	cbnz	r1, 800daa8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800daa6:	b192      	cbz	r2, 800dace <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800daa8:	6823      	ldr	r3, [r4, #0]
 800daaa:	4620      	mov	r0, r4
 800daac:	695b      	ldr	r3, [r3, #20]
 800daae:	4798      	blx	r3
 800dab0:	88e2      	ldrh	r2, [r4, #6]
 800dab2:	88a1      	ldrh	r1, [r4, #4]
 800dab4:	4432      	add	r2, r6
 800dab6:	4429      	add	r1, r5
 800dab8:	4620      	mov	r0, r4
 800daba:	b212      	sxth	r2, r2
 800dabc:	b209      	sxth	r1, r1
 800dabe:	f7f4 ff65 	bl	800298c <_ZN8touchgfx8Drawable5setXYEss>
 800dac2:	6823      	ldr	r3, [r4, #0]
 800dac4:	4620      	mov	r0, r4
 800dac6:	695b      	ldr	r3, [r3, #20]
 800dac8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dacc:	4718      	bx	r3
 800dace:	bd70      	pop	{r4, r5, r6, pc}

0800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800dad0:	b510      	push	{r4, lr}
 800dad2:	4604      	mov	r4, r0
 800dad4:	4608      	mov	r0, r1
 800dad6:	2300      	movs	r3, #0
 800dad8:	8023      	strh	r3, [r4, #0]
 800dada:	8063      	strh	r3, [r4, #2]
 800dadc:	6803      	ldr	r3, [r0, #0]
 800dade:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800dae2:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800dae6:	80a1      	strh	r1, [r4, #4]
 800dae8:	80e2      	strh	r2, [r4, #6]
 800daea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800daec:	4621      	mov	r1, r4
 800daee:	4798      	blx	r3
 800daf0:	4620      	mov	r0, r4
 800daf2:	bd10      	pop	{r4, pc}

0800daf4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800daf4:	b530      	push	{r4, r5, lr}
 800daf6:	8083      	strh	r3, [r0, #4]
 800daf8:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800dafc:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800db00:	7183      	strb	r3, [r0, #6]
 800db02:	79c3      	ldrb	r3, [r0, #7]
 800db04:	6101      	str	r1, [r0, #16]
 800db06:	f365 0306 	bfi	r3, r5, #0, #7
 800db0a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800db0e:	8282      	strh	r2, [r0, #20]
 800db10:	f365 13c7 	bfi	r3, r5, #7, #1
 800db14:	71c3      	strb	r3, [r0, #7]
 800db16:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800db1a:	7203      	strb	r3, [r0, #8]
 800db1c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800db20:	7243      	strb	r3, [r0, #9]
 800db22:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800db26:	8143      	strh	r3, [r0, #10]
 800db28:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800db2c:	8183      	strh	r3, [r0, #12]
 800db2e:	4b01      	ldr	r3, [pc, #4]	; (800db34 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800db30:	6003      	str	r3, [r0, #0]
 800db32:	bd30      	pop	{r4, r5, pc}
 800db34:	0801fa58 	.word	0x0801fa58

0800db38 <_ZNK8touchgfx9ConstFont4findEt>:
 800db38:	b5f0      	push	{r4, r5, r6, r7, lr}
 800db3a:	6904      	ldr	r4, [r0, #16]
 800db3c:	b3bc      	cbz	r4, 800dbae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800db3e:	88a3      	ldrh	r3, [r4, #4]
 800db40:	8a82      	ldrh	r2, [r0, #20]
 800db42:	1acb      	subs	r3, r1, r3
 800db44:	f102 32ff 	add.w	r2, r2, #4294967295
 800db48:	d431      	bmi.n	800dbae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800db4a:	4293      	cmp	r3, r2
 800db4c:	dd0c      	ble.n	800db68 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800db4e:	230e      	movs	r3, #14
 800db50:	fb03 4302 	mla	r3, r3, r2, r4
 800db54:	889b      	ldrh	r3, [r3, #4]
 800db56:	1a5b      	subs	r3, r3, r1
 800db58:	1ad3      	subs	r3, r2, r3
 800db5a:	429a      	cmp	r2, r3
 800db5c:	db27      	blt.n	800dbae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800db5e:	2b00      	cmp	r3, #0
 800db60:	bfbc      	itt	lt
 800db62:	2302      	movlt	r3, #2
 800db64:	fb92 f3f3 	sdivlt	r3, r2, r3
 800db68:	2500      	movs	r5, #0
 800db6a:	260e      	movs	r6, #14
 800db6c:	4295      	cmp	r5, r2
 800db6e:	dc1e      	bgt.n	800dbae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800db70:	fb06 4003 	mla	r0, r6, r3, r4
 800db74:	8887      	ldrh	r7, [r0, #4]
 800db76:	42b9      	cmp	r1, r7
 800db78:	d01a      	beq.n	800dbb0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800db7a:	d20d      	bcs.n	800db98 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800db7c:	1e5a      	subs	r2, r3, #1
 800db7e:	4295      	cmp	r5, r2
 800db80:	dc15      	bgt.n	800dbae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800db82:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800db86:	1a5b      	subs	r3, r3, r1
 800db88:	1ad3      	subs	r3, r2, r3
 800db8a:	429a      	cmp	r2, r3
 800db8c:	db0f      	blt.n	800dbae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800db8e:	429d      	cmp	r5, r3
 800db90:	ddec      	ble.n	800db6c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800db92:	1953      	adds	r3, r2, r5
 800db94:	105b      	asrs	r3, r3, #1
 800db96:	e7e9      	b.n	800db6c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800db98:	1c5d      	adds	r5, r3, #1
 800db9a:	42aa      	cmp	r2, r5
 800db9c:	db07      	blt.n	800dbae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800db9e:	8a43      	ldrh	r3, [r0, #18]
 800dba0:	1acb      	subs	r3, r1, r3
 800dba2:	442b      	add	r3, r5
 800dba4:	429d      	cmp	r5, r3
 800dba6:	dc02      	bgt.n	800dbae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800dba8:	429a      	cmp	r2, r3
 800dbaa:	dadf      	bge.n	800db6c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800dbac:	e7f1      	b.n	800db92 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800dbae:	2000      	movs	r0, #0
 800dbb0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800dbb2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800dbb2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dbb4:	4604      	mov	r4, r0
 800dbb6:	4617      	mov	r7, r2
 800dbb8:	461e      	mov	r6, r3
 800dbba:	b911      	cbnz	r1, 800dbc2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800dbbc:	2500      	movs	r5, #0
 800dbbe:	4628      	mov	r0, r5
 800dbc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dbc2:	290a      	cmp	r1, #10
 800dbc4:	d0fa      	beq.n	800dbbc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800dbc6:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800dbca:	4291      	cmp	r1, r2
 800dbcc:	d0f6      	beq.n	800dbbc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800dbce:	f242 020b 	movw	r2, #8203	; 0x200b
 800dbd2:	4291      	cmp	r1, r2
 800dbd4:	d0f2      	beq.n	800dbbc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800dbd6:	f7ff ffaf 	bl	800db38 <_ZNK8touchgfx9ConstFont4findEt>
 800dbda:	4605      	mov	r5, r0
 800dbdc:	b950      	cbnz	r0, 800dbf4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800dbde:	6823      	ldr	r3, [r4, #0]
 800dbe0:	4620      	mov	r0, r4
 800dbe2:	691b      	ldr	r3, [r3, #16]
 800dbe4:	4798      	blx	r3
 800dbe6:	4601      	mov	r1, r0
 800dbe8:	4620      	mov	r0, r4
 800dbea:	f7ff ffa5 	bl	800db38 <_ZNK8touchgfx9ConstFont4findEt>
 800dbee:	4605      	mov	r5, r0
 800dbf0:	2800      	cmp	r0, #0
 800dbf2:	d0e3      	beq.n	800dbbc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800dbf4:	6823      	ldr	r3, [r4, #0]
 800dbf6:	4629      	mov	r1, r5
 800dbf8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800dbfa:	4620      	mov	r0, r4
 800dbfc:	4798      	blx	r3
 800dbfe:	6038      	str	r0, [r7, #0]
 800dc00:	6823      	ldr	r3, [r4, #0]
 800dc02:	4620      	mov	r0, r4
 800dc04:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800dc06:	4798      	blx	r3
 800dc08:	7030      	strb	r0, [r6, #0]
 800dc0a:	e7d8      	b.n	800dbbe <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800dc0c <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800dc0c:	2000      	movs	r0, #0
 800dc0e:	4770      	bx	lr

0800dc10 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800dc10:	2001      	movs	r0, #1
 800dc12:	4770      	bx	lr

0800dc14 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800dc14:	2002      	movs	r0, #2
 800dc16:	4770      	bx	lr

0800dc18 <_ZN8touchgfx6ScreenD1Ev>:
 800dc18:	4770      	bx	lr

0800dc1a <_ZN8touchgfx12GestureEventD1Ev>:
 800dc1a:	4770      	bx	lr

0800dc1c <_ZN8touchgfx9DragEventD1Ev>:
 800dc1c:	4770      	bx	lr

0800dc1e <_ZN8touchgfx10ClickEventD1Ev>:
 800dc1e:	4770      	bx	lr

0800dc20 <_ZN8touchgfx10ClickEventD0Ev>:
 800dc20:	b510      	push	{r4, lr}
 800dc22:	210c      	movs	r1, #12
 800dc24:	4604      	mov	r4, r0
 800dc26:	f00d ff4a 	bl	801babe <_ZdlPvj>
 800dc2a:	4620      	mov	r0, r4
 800dc2c:	bd10      	pop	{r4, pc}

0800dc2e <_ZN8touchgfx9DragEventD0Ev>:
 800dc2e:	b510      	push	{r4, lr}
 800dc30:	2110      	movs	r1, #16
 800dc32:	4604      	mov	r4, r0
 800dc34:	f00d ff43 	bl	801babe <_ZdlPvj>
 800dc38:	4620      	mov	r0, r4
 800dc3a:	bd10      	pop	{r4, pc}

0800dc3c <_ZN8touchgfx12GestureEventD0Ev>:
 800dc3c:	b510      	push	{r4, lr}
 800dc3e:	210c      	movs	r1, #12
 800dc40:	4604      	mov	r4, r0
 800dc42:	f00d ff3c 	bl	801babe <_ZdlPvj>
 800dc46:	4620      	mov	r0, r4
 800dc48:	bd10      	pop	{r4, pc}

0800dc4a <_ZN8touchgfx6ScreenD0Ev>:
 800dc4a:	b510      	push	{r4, lr}
 800dc4c:	213c      	movs	r1, #60	; 0x3c
 800dc4e:	4604      	mov	r4, r0
 800dc50:	f00d ff35 	bl	801babe <_ZdlPvj>
 800dc54:	4620      	mov	r0, r4
 800dc56:	bd10      	pop	{r4, pc}

0800dc58 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800dc58:	b530      	push	{r4, r5, lr}
 800dc5a:	460d      	mov	r5, r1
 800dc5c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800dc5e:	b087      	sub	sp, #28
 800dc60:	4604      	mov	r4, r0
 800dc62:	b301      	cbz	r1, 800dca6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800dc64:	a801      	add	r0, sp, #4
 800dc66:	f7ff ff33 	bl	800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dc6a:	892a      	ldrh	r2, [r5, #8]
 800dc6c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800dc70:	7928      	ldrb	r0, [r5, #4]
 800dc72:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800dc76:	f88d 0010 	strb.w	r0, [sp, #16]
 800dc7a:	1ad2      	subs	r2, r2, r3
 800dc7c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800dc7e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800dc80:	f8ad 1012 	strh.w	r1, [sp, #18]
 800dc84:	441a      	add	r2, r3
 800dc86:	896b      	ldrh	r3, [r5, #10]
 800dc88:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800dc8c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dc90:	1b5b      	subs	r3, r3, r5
 800dc92:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800dc94:	442b      	add	r3, r5
 800dc96:	4d05      	ldr	r5, [pc, #20]	; (800dcac <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800dc98:	9503      	str	r5, [sp, #12]
 800dc9a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dc9e:	6803      	ldr	r3, [r0, #0]
 800dca0:	a903      	add	r1, sp, #12
 800dca2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dca4:	4798      	blx	r3
 800dca6:	b007      	add	sp, #28
 800dca8:	bd30      	pop	{r4, r5, pc}
 800dcaa:	bf00      	nop
 800dcac:	0801fad8 	.word	0x0801fad8

0800dcb0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800dcb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dcb4:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800dcb6:	b08a      	sub	sp, #40	; 0x28
 800dcb8:	4604      	mov	r4, r0
 800dcba:	460d      	mov	r5, r1
 800dcbc:	b113      	cbz	r3, 800dcc4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800dcbe:	790b      	ldrb	r3, [r1, #4]
 800dcc0:	2b00      	cmp	r3, #0
 800dcc2:	d044      	beq.n	800dd4e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dcc4:	f104 0804 	add.w	r8, r4, #4
 800dcc8:	4641      	mov	r1, r8
 800dcca:	a803      	add	r0, sp, #12
 800dccc:	f7ff ff00 	bl	800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dcd0:	792b      	ldrb	r3, [r5, #4]
 800dcd2:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800dcd6:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800dcda:	b983      	cbnz	r3, 800dcfe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800dcdc:	892a      	ldrh	r2, [r5, #8]
 800dcde:	88e9      	ldrh	r1, [r5, #6]
 800dce0:	f104 0336 	add.w	r3, r4, #54	; 0x36
 800dce4:	1b92      	subs	r2, r2, r6
 800dce6:	1bc9      	subs	r1, r1, r7
 800dce8:	9301      	str	r3, [sp, #4]
 800dcea:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800dcee:	9300      	str	r3, [sp, #0]
 800dcf0:	b212      	sxth	r2, r2
 800dcf2:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800dcf6:	b209      	sxth	r1, r1
 800dcf8:	4640      	mov	r0, r8
 800dcfa:	f7fb fce9 	bl	80096d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800dcfe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800dd00:	b329      	cbz	r1, 800dd4e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dd02:	a805      	add	r0, sp, #20
 800dd04:	f7ff fee4 	bl	800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd08:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800dd0c:	792b      	ldrb	r3, [r5, #4]
 800dd0e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800dd10:	f88d 3020 	strb.w	r3, [sp, #32]
 800dd14:	1abf      	subs	r7, r7, r2
 800dd16:	88ea      	ldrh	r2, [r5, #6]
 800dd18:	4417      	add	r7, r2
 800dd1a:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800dd1c:	4417      	add	r7, r2
 800dd1e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800dd22:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800dd26:	1ab6      	subs	r6, r6, r2
 800dd28:	892a      	ldrh	r2, [r5, #8]
 800dd2a:	4416      	add	r6, r2
 800dd2c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800dd2e:	4416      	add	r6, r2
 800dd30:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800dd34:	4a07      	ldr	r2, [pc, #28]	; (800dd54 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800dd36:	9207      	str	r2, [sp, #28]
 800dd38:	2600      	movs	r6, #0
 800dd3a:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800dd3e:	6803      	ldr	r3, [r0, #0]
 800dd40:	a907      	add	r1, sp, #28
 800dd42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dd44:	4798      	blx	r3
 800dd46:	792b      	ldrb	r3, [r5, #4]
 800dd48:	b10b      	cbz	r3, 800dd4e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dd4a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800dd4e:	b00a      	add	sp, #40	; 0x28
 800dd50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dd54:	0801fab0 	.word	0x0801fab0

0800dd58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800dd58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dd5c:	460c      	mov	r4, r1
 800dd5e:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800dd60:	b088      	sub	sp, #32
 800dd62:	4605      	mov	r5, r0
 800dd64:	2900      	cmp	r1, #0
 800dd66:	d06d      	beq.n	800de44 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800dd68:	4668      	mov	r0, sp
 800dd6a:	f7ff feb1 	bl	800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd6e:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 800dd70:	88e3      	ldrh	r3, [r4, #6]
 800dd72:	f9bd 8000 	ldrsh.w	r8, [sp]
 800dd76:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800dd7a:	440b      	add	r3, r1
 800dd7c:	b21b      	sxth	r3, r3
 800dd7e:	4543      	cmp	r3, r8
 800dd80:	db31      	blt.n	800dde6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dd82:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800dd86:	44c4      	add	ip, r8
 800dd88:	fa0f fc8c 	sxth.w	ip, ip
 800dd8c:	4563      	cmp	r3, ip
 800dd8e:	da2a      	bge.n	800dde6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dd90:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 800dd92:	8926      	ldrh	r6, [r4, #8]
 800dd94:	4416      	add	r6, r2
 800dd96:	b236      	sxth	r6, r6
 800dd98:	42be      	cmp	r6, r7
 800dd9a:	db24      	blt.n	800dde6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dd9c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800dda0:	4438      	add	r0, r7
 800dda2:	b200      	sxth	r0, r0
 800dda4:	4286      	cmp	r6, r0
 800dda6:	da1e      	bge.n	800dde6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800dda8:	8963      	ldrh	r3, [r4, #10]
 800ddaa:	4419      	add	r1, r3
 800ddac:	b209      	sxth	r1, r1
 800ddae:	4541      	cmp	r1, r8
 800ddb0:	db08      	blt.n	800ddc4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800ddb2:	4561      	cmp	r1, ip
 800ddb4:	da06      	bge.n	800ddc4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800ddb6:	89a3      	ldrh	r3, [r4, #12]
 800ddb8:	441a      	add	r2, r3
 800ddba:	b212      	sxth	r2, r2
 800ddbc:	42ba      	cmp	r2, r7
 800ddbe:	db01      	blt.n	800ddc4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800ddc0:	4282      	cmp	r2, r0
 800ddc2:	db10      	blt.n	800dde6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800ddc4:	4b21      	ldr	r3, [pc, #132]	; (800de4c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800ddc6:	9304      	str	r3, [sp, #16]
 800ddc8:	2302      	movs	r3, #2
 800ddca:	f88d 3014 	strb.w	r3, [sp, #20]
 800ddce:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800ddd0:	2300      	movs	r3, #0
 800ddd2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ddd6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ddda:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ddde:	6803      	ldr	r3, [r0, #0]
 800dde0:	a904      	add	r1, sp, #16
 800dde2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dde4:	4798      	blx	r3
 800dde6:	1d29      	adds	r1, r5, #4
 800dde8:	a802      	add	r0, sp, #8
 800ddea:	f7ff fe71 	bl	800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ddee:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800ddf2:	88e0      	ldrh	r0, [r4, #6]
 800ddf4:	7921      	ldrb	r1, [r4, #4]
 800ddf6:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800ddfa:	8922      	ldrh	r2, [r4, #8]
 800ddfc:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800ddfe:	f88d 1014 	strb.w	r1, [sp, #20]
 800de02:	eba3 0808 	sub.w	r8, r3, r8
 800de06:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800de0a:	1bdf      	subs	r7, r3, r7
 800de0c:	b2bb      	uxth	r3, r7
 800de0e:	fa1f f888 	uxth.w	r8, r8
 800de12:	8967      	ldrh	r7, [r4, #10]
 800de14:	89a4      	ldrh	r4, [r4, #12]
 800de16:	4440      	add	r0, r8
 800de18:	4460      	add	r0, ip
 800de1a:	441a      	add	r2, r3
 800de1c:	44b8      	add	r8, r7
 800de1e:	4423      	add	r3, r4
 800de20:	f8ad 0016 	strh.w	r0, [sp, #22]
 800de24:	4433      	add	r3, r6
 800de26:	4432      	add	r2, r6
 800de28:	44e0      	add	r8, ip
 800de2a:	4c09      	ldr	r4, [pc, #36]	; (800de50 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800de2c:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800de2e:	9404      	str	r4, [sp, #16]
 800de30:	f8ad 2018 	strh.w	r2, [sp, #24]
 800de34:	f8ad 801a 	strh.w	r8, [sp, #26]
 800de38:	f8ad 301c 	strh.w	r3, [sp, #28]
 800de3c:	6803      	ldr	r3, [r0, #0]
 800de3e:	a904      	add	r1, sp, #16
 800de40:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800de42:	4798      	blx	r3
 800de44:	b008      	add	sp, #32
 800de46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800de4a:	bf00      	nop
 800de4c:	0801fab0 	.word	0x0801fab0
 800de50:	0801fac4 	.word	0x0801fac4

0800de54 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800de54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800de56:	4604      	mov	r4, r0
 800de58:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800de5c:	3201      	adds	r2, #1
 800de5e:	d112      	bne.n	800de86 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800de60:	6803      	ldr	r3, [r0, #0]
 800de62:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800de66:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800de6a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800de6e:	2500      	movs	r5, #0
 800de70:	9500      	str	r5, [sp, #0]
 800de72:	466d      	mov	r5, sp
 800de74:	4629      	mov	r1, r5
 800de76:	f8ad 2006 	strh.w	r2, [sp, #6]
 800de7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800de7c:	4798      	blx	r3
 800de7e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800de82:	e884 0003 	stmia.w	r4, {r0, r1}
 800de86:	4620      	mov	r0, r4
 800de88:	b003      	add	sp, #12
 800de8a:	bd30      	pop	{r4, r5, pc}

0800de8c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800de8c:	b513      	push	{r0, r1, r4, lr}
 800de8e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800de92:	3301      	adds	r3, #1
 800de94:	4604      	mov	r4, r0
 800de96:	d109      	bne.n	800deac <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800de98:	4601      	mov	r1, r0
 800de9a:	4668      	mov	r0, sp
 800de9c:	f7ff fe18 	bl	800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dea0:	f8bd 3000 	ldrh.w	r3, [sp]
 800dea4:	8423      	strh	r3, [r4, #32]
 800dea6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800deaa:	8463      	strh	r3, [r4, #34]	; 0x22
 800deac:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800deb0:	b002      	add	sp, #8
 800deb2:	bd10      	pop	{r4, pc}

0800deb4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800deb4:	b513      	push	{r0, r1, r4, lr}
 800deb6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800deba:	3301      	adds	r3, #1
 800debc:	4604      	mov	r4, r0
 800debe:	d109      	bne.n	800ded4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800dec0:	4601      	mov	r1, r0
 800dec2:	4668      	mov	r0, sp
 800dec4:	f7ff fe04 	bl	800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dec8:	f8bd 3000 	ldrh.w	r3, [sp]
 800decc:	8423      	strh	r3, [r4, #32]
 800dece:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ded2:	8463      	strh	r3, [r4, #34]	; 0x22
 800ded4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800ded8:	b002      	add	sp, #8
 800deda:	bd10      	pop	{r4, pc}

0800dedc <_ZN8touchgfx6ScreenC1Ev>:
 800dedc:	b570      	push	{r4, r5, r6, lr}
 800dede:	4605      	mov	r5, r0
 800dee0:	4b16      	ldr	r3, [pc, #88]	; (800df3c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800dee2:	f845 3b04 	str.w	r3, [r5], #4
 800dee6:	2300      	movs	r3, #0
 800dee8:	8103      	strh	r3, [r0, #8]
 800deea:	8143      	strh	r3, [r0, #10]
 800deec:	8183      	strh	r3, [r0, #12]
 800deee:	81c3      	strh	r3, [r0, #14]
 800def0:	8203      	strh	r3, [r0, #16]
 800def2:	8243      	strh	r3, [r0, #18]
 800def4:	8283      	strh	r3, [r0, #20]
 800def6:	82c3      	strh	r3, [r0, #22]
 800def8:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800defc:	6203      	str	r3, [r0, #32]
 800defe:	8483      	strh	r3, [r0, #36]	; 0x24
 800df00:	84c3      	strh	r3, [r0, #38]	; 0x26
 800df02:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800df06:	4a0e      	ldr	r2, [pc, #56]	; (800df40 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800df08:	6343      	str	r3, [r0, #52]	; 0x34
 800df0a:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800df0e:	4b0d      	ldr	r3, [pc, #52]	; (800df44 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800df10:	6042      	str	r2, [r0, #4]
 800df12:	f9b3 6000 	ldrsh.w	r6, [r3]
 800df16:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800df18:	4a0b      	ldr	r2, [pc, #44]	; (800df48 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800df1a:	4604      	mov	r4, r0
 800df1c:	2101      	movs	r1, #1
 800df1e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800df22:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800df26:	f9b2 1000 	ldrsh.w	r1, [r2]
 800df2a:	4628      	mov	r0, r5
 800df2c:	4798      	blx	r3
 800df2e:	6863      	ldr	r3, [r4, #4]
 800df30:	4628      	mov	r0, r5
 800df32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800df34:	4631      	mov	r1, r6
 800df36:	4798      	blx	r3
 800df38:	4620      	mov	r0, r4
 800df3a:	bd70      	pop	{r4, r5, r6, pc}
 800df3c:	0801faec 	.word	0x0801faec
 800df40:	0801ecfc 	.word	0x0801ecfc
 800df44:	200134fe 	.word	0x200134fe
 800df48:	200134fc 	.word	0x200134fc

0800df4c <_ZN8touchgfx6Screen4drawEv>:
 800df4c:	b507      	push	{r0, r1, r2, lr}
 800df4e:	4b09      	ldr	r3, [pc, #36]	; (800df74 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800df50:	f9b3 2000 	ldrsh.w	r2, [r3]
 800df54:	4b08      	ldr	r3, [pc, #32]	; (800df78 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800df56:	f8ad 2004 	strh.w	r2, [sp, #4]
 800df5a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800df5e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800df62:	6803      	ldr	r3, [r0, #0]
 800df64:	2100      	movs	r1, #0
 800df66:	9100      	str	r1, [sp, #0]
 800df68:	689b      	ldr	r3, [r3, #8]
 800df6a:	4669      	mov	r1, sp
 800df6c:	4798      	blx	r3
 800df6e:	b003      	add	sp, #12
 800df70:	f85d fb04 	ldr.w	pc, [sp], #4
 800df74:	200134fc 	.word	0x200134fc
 800df78:	200134fe 	.word	0x200134fe

0800df7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800df7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df80:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800df84:	2b00      	cmp	r3, #0
 800df86:	b089      	sub	sp, #36	; 0x24
 800df88:	4680      	mov	r8, r0
 800df8a:	460c      	mov	r4, r1
 800df8c:	4615      	mov	r5, r2
 800df8e:	dd0e      	ble.n	800dfae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800df90:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800df94:	2b00      	cmp	r3, #0
 800df96:	dd0a      	ble.n	800dfae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800df98:	4628      	mov	r0, r5
 800df9a:	f7ff ff5b 	bl	800de54 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800df9e:	4621      	mov	r1, r4
 800dfa0:	f7fe fcf2 	bl	800c988 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800dfa4:	69eb      	ldr	r3, [r5, #28]
 800dfa6:	b928      	cbnz	r0, 800dfb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800dfa8:	461d      	mov	r5, r3
 800dfaa:	2b00      	cmp	r3, #0
 800dfac:	d1f4      	bne.n	800df98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800dfae:	b009      	add	sp, #36	; 0x24
 800dfb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dfb4:	ae04      	add	r6, sp, #16
 800dfb6:	2b00      	cmp	r3, #0
 800dfb8:	f000 80b5 	beq.w	800e126 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800dfbc:	682b      	ldr	r3, [r5, #0]
 800dfbe:	4629      	mov	r1, r5
 800dfc0:	68db      	ldr	r3, [r3, #12]
 800dfc2:	a802      	add	r0, sp, #8
 800dfc4:	4798      	blx	r3
 800dfc6:	4628      	mov	r0, r5
 800dfc8:	f7ff ff60 	bl	800de8c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800dfcc:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800dfd0:	4407      	add	r7, r0
 800dfd2:	4628      	mov	r0, r5
 800dfd4:	f7ff ff6e 	bl	800deb4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800dfd8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800dfdc:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800dfe0:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dfe4:	4418      	add	r0, r3
 800dfe6:	4621      	mov	r1, r4
 800dfe8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800dfec:	f8ad 0012 	strh.w	r0, [sp, #18]
 800dff0:	b23f      	sxth	r7, r7
 800dff2:	4630      	mov	r0, r6
 800dff4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dff8:	f8ad 7010 	strh.w	r7, [sp, #16]
 800dffc:	f7fb fc4c 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 800e000:	4628      	mov	r0, r5
 800e002:	f7ff ff27 	bl	800de54 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e006:	4602      	mov	r2, r0
 800e008:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e00c:	ab06      	add	r3, sp, #24
 800e00e:	e883 0003 	stmia.w	r3, {r0, r1}
 800e012:	4611      	mov	r1, r2
 800e014:	4618      	mov	r0, r3
 800e016:	f7fb fc3f 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 800e01a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e01e:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e022:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800e026:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800e02a:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800e02e:	4299      	cmp	r1, r3
 800e030:	d10b      	bne.n	800e04a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e032:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e036:	4552      	cmp	r2, sl
 800e038:	d107      	bne.n	800e04a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e03a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800e03e:	455a      	cmp	r2, fp
 800e040:	d103      	bne.n	800e04a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e042:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e046:	454a      	cmp	r2, r9
 800e048:	d06d      	beq.n	800e126 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e04a:	f1bb 0f00 	cmp.w	fp, #0
 800e04e:	dd65      	ble.n	800e11c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e050:	f1b9 0f00 	cmp.w	r9, #0
 800e054:	dd62      	ble.n	800e11c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e056:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e05a:	fa1f f08a 	uxth.w	r0, sl
 800e05e:	4552      	cmp	r2, sl
 800e060:	9000      	str	r0, [sp, #0]
 800e062:	da12      	bge.n	800e08a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800e064:	9301      	str	r3, [sp, #4]
 800e066:	9b00      	ldr	r3, [sp, #0]
 800e068:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e06c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e070:	1a9a      	subs	r2, r3, r2
 800e072:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e076:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e07a:	f8ad 2016 	strh.w	r2, [sp, #22]
 800e07e:	69ea      	ldr	r2, [r5, #28]
 800e080:	4631      	mov	r1, r6
 800e082:	4640      	mov	r0, r8
 800e084:	f7ff ff7a 	bl	800df7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e088:	9b01      	ldr	r3, [sp, #4]
 800e08a:	f9b4 2000 	ldrsh.w	r2, [r4]
 800e08e:	429a      	cmp	r2, r3
 800e090:	b29f      	uxth	r7, r3
 800e092:	da0d      	bge.n	800e0b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800e094:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e098:	1aba      	subs	r2, r7, r2
 800e09a:	f8ad a012 	strh.w	sl, [sp, #18]
 800e09e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e0a2:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e0a6:	69ea      	ldr	r2, [r5, #28]
 800e0a8:	4631      	mov	r1, r6
 800e0aa:	4640      	mov	r0, r8
 800e0ac:	f7ff ff66 	bl	800df7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e0b0:	8822      	ldrh	r2, [r4, #0]
 800e0b2:	88a3      	ldrh	r3, [r4, #4]
 800e0b4:	445f      	add	r7, fp
 800e0b6:	4413      	add	r3, r2
 800e0b8:	b29b      	uxth	r3, r3
 800e0ba:	b2bf      	uxth	r7, r7
 800e0bc:	b23a      	sxth	r2, r7
 800e0be:	b219      	sxth	r1, r3
 800e0c0:	4291      	cmp	r1, r2
 800e0c2:	dd0d      	ble.n	800e0e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800e0c4:	1bdb      	subs	r3, r3, r7
 800e0c6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e0ca:	f8ad a012 	strh.w	sl, [sp, #18]
 800e0ce:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e0d2:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e0d6:	69ea      	ldr	r2, [r5, #28]
 800e0d8:	4631      	mov	r1, r6
 800e0da:	4640      	mov	r0, r8
 800e0dc:	f7ff ff4e 	bl	800df7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e0e0:	88e2      	ldrh	r2, [r4, #6]
 800e0e2:	8863      	ldrh	r3, [r4, #2]
 800e0e4:	4413      	add	r3, r2
 800e0e6:	9a00      	ldr	r2, [sp, #0]
 800e0e8:	444a      	add	r2, r9
 800e0ea:	b29b      	uxth	r3, r3
 800e0ec:	fa1f f982 	uxth.w	r9, r2
 800e0f0:	fa0f f289 	sxth.w	r2, r9
 800e0f4:	b219      	sxth	r1, r3
 800e0f6:	428a      	cmp	r2, r1
 800e0f8:	da15      	bge.n	800e126 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e0fa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e0fe:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e102:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e106:	eba3 0309 	sub.w	r3, r3, r9
 800e10a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e10e:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e112:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e116:	69ea      	ldr	r2, [r5, #28]
 800e118:	4631      	mov	r1, r6
 800e11a:	e001      	b.n	800e120 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800e11c:	69ea      	ldr	r2, [r5, #28]
 800e11e:	4621      	mov	r1, r4
 800e120:	4640      	mov	r0, r8
 800e122:	f7ff ff2b 	bl	800df7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e126:	4628      	mov	r0, r5
 800e128:	f7ff fe94 	bl	800de54 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e12c:	6861      	ldr	r1, [r4, #4]
 800e12e:	4602      	mov	r2, r0
 800e130:	6820      	ldr	r0, [r4, #0]
 800e132:	4633      	mov	r3, r6
 800e134:	c303      	stmia	r3!, {r0, r1}
 800e136:	4611      	mov	r1, r2
 800e138:	4630      	mov	r0, r6
 800e13a:	f7fb fbad 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 800e13e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e142:	2b00      	cmp	r3, #0
 800e144:	f77f af33 	ble.w	800dfae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e148:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e14c:	2b00      	cmp	r3, #0
 800e14e:	f77f af2e 	ble.w	800dfae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e152:	4628      	mov	r0, r5
 800e154:	f7ff fe9a 	bl	800de8c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e158:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e15c:	1a18      	subs	r0, r3, r0
 800e15e:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e162:	4628      	mov	r0, r5
 800e164:	f7ff fea6 	bl	800deb4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e168:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e16c:	1a18      	subs	r0, r3, r0
 800e16e:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e172:	682b      	ldr	r3, [r5, #0]
 800e174:	4631      	mov	r1, r6
 800e176:	689b      	ldr	r3, [r3, #8]
 800e178:	4628      	mov	r0, r5
 800e17a:	4798      	blx	r3
 800e17c:	e717      	b.n	800dfae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800e17e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e17e:	b570      	push	{r4, r5, r6, lr}
 800e180:	460c      	mov	r4, r1
 800e182:	b086      	sub	sp, #24
 800e184:	1d06      	adds	r6, r0, #4
 800e186:	2300      	movs	r3, #0
 800e188:	4631      	mov	r1, r6
 800e18a:	4605      	mov	r5, r0
 800e18c:	a802      	add	r0, sp, #8
 800e18e:	9301      	str	r3, [sp, #4]
 800e190:	f7ff fc9e 	bl	800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e194:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e198:	8822      	ldrh	r2, [r4, #0]
 800e19a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800e19e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e1a2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e1a6:	1ad2      	subs	r2, r2, r3
 800e1a8:	8863      	ldrh	r3, [r4, #2]
 800e1aa:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e1ae:	1a5b      	subs	r3, r3, r1
 800e1b0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800e1b4:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e1b8:	aa01      	add	r2, sp, #4
 800e1ba:	a904      	add	r1, sp, #16
 800e1bc:	4630      	mov	r0, r6
 800e1be:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e1c2:	f7fb fc41 	bl	8009a48 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e1c6:	9a01      	ldr	r2, [sp, #4]
 800e1c8:	b11a      	cbz	r2, 800e1d2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800e1ca:	4621      	mov	r1, r4
 800e1cc:	4628      	mov	r0, r5
 800e1ce:	f7ff fed5 	bl	800df7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e1d2:	b006      	add	sp, #24
 800e1d4:	bd70      	pop	{r4, r5, r6, pc}

0800e1d6 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e1d6:	b530      	push	{r4, r5, lr}
 800e1d8:	4602      	mov	r2, r0
 800e1da:	4604      	mov	r4, r0
 800e1dc:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e1e0:	b085      	sub	sp, #20
 800e1e2:	460d      	mov	r5, r1
 800e1e4:	6851      	ldr	r1, [r2, #4]
 800e1e6:	466b      	mov	r3, sp
 800e1e8:	c303      	stmia	r3!, {r0, r1}
 800e1ea:	4629      	mov	r1, r5
 800e1ec:	4668      	mov	r0, sp
 800e1ee:	f7fb fb53 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 800e1f2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e1f6:	b12b      	cbz	r3, 800e204 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800e1f8:	4669      	mov	r1, sp
 800e1fa:	4620      	mov	r0, r4
 800e1fc:	f7ff ffbf 	bl	800e17e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e200:	b005      	add	sp, #20
 800e202:	bd30      	pop	{r4, r5, pc}
 800e204:	3404      	adds	r4, #4
 800e206:	4621      	mov	r1, r4
 800e208:	a802      	add	r0, sp, #8
 800e20a:	f7ff fc61 	bl	800dad0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e20e:	f8bd 3000 	ldrh.w	r3, [sp]
 800e212:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e216:	1a9b      	subs	r3, r3, r2
 800e218:	f8ad 3000 	strh.w	r3, [sp]
 800e21c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800e220:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e224:	4669      	mov	r1, sp
 800e226:	1a9b      	subs	r3, r3, r2
 800e228:	4620      	mov	r0, r4
 800e22a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e22e:	f7fb fbd2 	bl	80099d6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e232:	e7e5      	b.n	800e200 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800e234 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e234:	680a      	ldr	r2, [r1, #0]
 800e236:	460b      	mov	r3, r1
 800e238:	6992      	ldr	r2, [r2, #24]
 800e23a:	1d01      	adds	r1, r0, #4
 800e23c:	4618      	mov	r0, r3
 800e23e:	4710      	bx	r2

0800e240 <_ZN8touchgfx12TextProviderC1Ev>:
 800e240:	b538      	push	{r3, r4, r5, lr}
 800e242:	2500      	movs	r5, #0
 800e244:	2302      	movs	r3, #2
 800e246:	4604      	mov	r4, r0
 800e248:	e9c0 5500 	strd	r5, r5, [r0]
 800e24c:	7403      	strb	r3, [r0, #16]
 800e24e:	6145      	str	r5, [r0, #20]
 800e250:	7605      	strb	r5, [r0, #24]
 800e252:	83c5      	strh	r5, [r0, #30]
 800e254:	8405      	strh	r5, [r0, #32]
 800e256:	86c5      	strh	r5, [r0, #54]	; 0x36
 800e258:	8705      	strh	r5, [r0, #56]	; 0x38
 800e25a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800e25c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800e260:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800e264:	220e      	movs	r2, #14
 800e266:	4629      	mov	r1, r5
 800e268:	304c      	adds	r0, #76	; 0x4c
 800e26a:	f00d fce3 	bl	801bc34 <memset>
 800e26e:	2301      	movs	r3, #1
 800e270:	4620      	mov	r0, r4
 800e272:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800e276:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e27a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800e27e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800e282:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800e286:	f7f4 fab7 	bl	80027f8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800e28a:	4620      	mov	r0, r4
 800e28c:	bd38      	pop	{r3, r4, r5, pc}

0800e28e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e28e:	b530      	push	{r4, r5, lr}
 800e290:	2500      	movs	r5, #0
 800e292:	2401      	movs	r4, #1
 800e294:	6843      	ldr	r3, [r0, #4]
 800e296:	b913      	cbnz	r3, 800e29e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e298:	6803      	ldr	r3, [r0, #0]
 800e29a:	b313      	cbz	r3, 800e2e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e29c:	6043      	str	r3, [r0, #4]
 800e29e:	7e03      	ldrb	r3, [r0, #24]
 800e2a0:	b143      	cbz	r3, 800e2b4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e2a2:	6943      	ldr	r3, [r0, #20]
 800e2a4:	b12b      	cbz	r3, 800e2b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e2a6:	881a      	ldrh	r2, [r3, #0]
 800e2a8:	b11a      	cbz	r2, 800e2b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e2aa:	1c9a      	adds	r2, r3, #2
 800e2ac:	6142      	str	r2, [r0, #20]
 800e2ae:	8818      	ldrh	r0, [r3, #0]
 800e2b0:	bd30      	pop	{r4, r5, pc}
 800e2b2:	7605      	strb	r5, [r0, #24]
 800e2b4:	6843      	ldr	r3, [r0, #4]
 800e2b6:	8819      	ldrh	r1, [r3, #0]
 800e2b8:	b199      	cbz	r1, 800e2e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e2ba:	1c9a      	adds	r2, r3, #2
 800e2bc:	2902      	cmp	r1, #2
 800e2be:	6042      	str	r2, [r0, #4]
 800e2c0:	d1f5      	bne.n	800e2ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e2c2:	7c03      	ldrb	r3, [r0, #16]
 800e2c4:	2b01      	cmp	r3, #1
 800e2c6:	d8e5      	bhi.n	800e294 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e2c8:	1c5a      	adds	r2, r3, #1
 800e2ca:	3302      	adds	r3, #2
 800e2cc:	7402      	strb	r2, [r0, #16]
 800e2ce:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800e2d2:	6143      	str	r3, [r0, #20]
 800e2d4:	2b00      	cmp	r3, #0
 800e2d6:	d0dd      	beq.n	800e294 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e2d8:	881b      	ldrh	r3, [r3, #0]
 800e2da:	2b00      	cmp	r3, #0
 800e2dc:	d0da      	beq.n	800e294 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e2de:	7604      	strb	r4, [r0, #24]
 800e2e0:	e7d8      	b.n	800e294 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e2e2:	2000      	movs	r0, #0
 800e2e4:	e7e4      	b.n	800e2b0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e2e6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800e2e6:	b430      	push	{r4, r5}
 800e2e8:	6815      	ldr	r5, [r2, #0]
 800e2ea:	6085      	str	r5, [r0, #8]
 800e2ec:	6852      	ldr	r2, [r2, #4]
 800e2ee:	60c2      	str	r2, [r0, #12]
 800e2f0:	6443      	str	r3, [r0, #68]	; 0x44
 800e2f2:	2200      	movs	r2, #0
 800e2f4:	9b02      	ldr	r3, [sp, #8]
 800e2f6:	7402      	strb	r2, [r0, #16]
 800e2f8:	6001      	str	r1, [r0, #0]
 800e2fa:	6483      	str	r3, [r0, #72]	; 0x48
 800e2fc:	6042      	str	r2, [r0, #4]
 800e2fe:	6142      	str	r2, [r0, #20]
 800e300:	7602      	strb	r2, [r0, #24]
 800e302:	8702      	strh	r2, [r0, #56]	; 0x38
 800e304:	8402      	strh	r2, [r0, #32]
 800e306:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800e30a:	bc30      	pop	{r4, r5}
 800e30c:	f7f4 ba74 	b.w	80027f8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800e310 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e310:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e312:	4605      	mov	r5, r0
 800e314:	4608      	mov	r0, r1
 800e316:	b1e9      	cbz	r1, 800e354 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e318:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800e31c:	460b      	mov	r3, r1
 800e31e:	f101 0708 	add.w	r7, r1, #8
 800e322:	4622      	mov	r2, r4
 800e324:	6818      	ldr	r0, [r3, #0]
 800e326:	6859      	ldr	r1, [r3, #4]
 800e328:	4626      	mov	r6, r4
 800e32a:	c603      	stmia	r6!, {r0, r1}
 800e32c:	3308      	adds	r3, #8
 800e32e:	42bb      	cmp	r3, r7
 800e330:	4634      	mov	r4, r6
 800e332:	d1f7      	bne.n	800e324 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e334:	6818      	ldr	r0, [r3, #0]
 800e336:	6030      	str	r0, [r6, #0]
 800e338:	889b      	ldrh	r3, [r3, #4]
 800e33a:	80b3      	strh	r3, [r6, #4]
 800e33c:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800e340:	015b      	lsls	r3, r3, #5
 800e342:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e346:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800e34a:	430b      	orrs	r3, r1
 800e34c:	425b      	negs	r3, r3
 800e34e:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800e352:	4610      	mov	r0, r2
 800e354:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e356 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e356:	b538      	push	{r3, r4, r5, lr}
 800e358:	460c      	mov	r4, r1
 800e35a:	6811      	ldr	r1, [r2, #0]
 800e35c:	4610      	mov	r0, r2
 800e35e:	68cd      	ldr	r5, [r1, #12]
 800e360:	4619      	mov	r1, r3
 800e362:	47a8      	blx	r5
 800e364:	2800      	cmp	r0, #0
 800e366:	bf08      	it	eq
 800e368:	4620      	moveq	r0, r4
 800e36a:	bd38      	pop	{r3, r4, r5, pc}

0800e36c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e36c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e36e:	4604      	mov	r4, r0
 800e370:	4615      	mov	r5, r2
 800e372:	4608      	mov	r0, r1
 800e374:	b93a      	cbnz	r2, 800e386 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e376:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800e37a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800e37e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800e382:	4628      	mov	r0, r5
 800e384:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e386:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800e38a:	8893      	ldrh	r3, [r2, #4]
 800e38c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800e390:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e394:	79ee      	ldrb	r6, [r5, #7]
 800e396:	4316      	orrs	r6, r2
 800e398:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800e39c:	189a      	adds	r2, r3, r2
 800e39e:	b291      	uxth	r1, r2
 800e3a0:	291d      	cmp	r1, #29
 800e3a2:	b2b7      	uxth	r7, r6
 800e3a4:	f200 8083 	bhi.w	800e4ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e3a8:	2201      	movs	r2, #1
 800e3aa:	408a      	lsls	r2, r1
 800e3ac:	4978      	ldr	r1, [pc, #480]	; (800e590 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800e3ae:	420a      	tst	r2, r1
 800e3b0:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800e3b4:	d12d      	bne.n	800e412 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800e3b6:	f412 7f60 	tst.w	r2, #896	; 0x380
 800e3ba:	d078      	beq.n	800e4ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800e3bc:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800e3c0:	462b      	mov	r3, r5
 800e3c2:	f105 0e08 	add.w	lr, r5, #8
 800e3c6:	4615      	mov	r5, r2
 800e3c8:	6818      	ldr	r0, [r3, #0]
 800e3ca:	6859      	ldr	r1, [r3, #4]
 800e3cc:	4694      	mov	ip, r2
 800e3ce:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e3d2:	3308      	adds	r3, #8
 800e3d4:	4573      	cmp	r3, lr
 800e3d6:	4662      	mov	r2, ip
 800e3d8:	d1f6      	bne.n	800e3c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800e3da:	6818      	ldr	r0, [r3, #0]
 800e3dc:	f8cc 0000 	str.w	r0, [ip]
 800e3e0:	889b      	ldrh	r3, [r3, #4]
 800e3e2:	f8ac 3004 	strh.w	r3, [ip, #4]
 800e3e6:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800e3ea:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800e3ee:	b2b3      	uxth	r3, r6
 800e3f0:	1aca      	subs	r2, r1, r3
 800e3f2:	b292      	uxth	r2, r2
 800e3f4:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800e3f8:	10d2      	asrs	r2, r2, #3
 800e3fa:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800e3fe:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800e402:	4302      	orrs	r2, r0
 800e404:	1bcf      	subs	r7, r1, r7
 800e406:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800e40a:	1afb      	subs	r3, r7, r3
 800e40c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800e410:	e7b7      	b.n	800e382 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e412:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e414:	b92b      	cbnz	r3, 800e422 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800e416:	4b5f      	ldr	r3, [pc, #380]	; (800e594 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800e418:	4a5f      	ldr	r2, [pc, #380]	; (800e598 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800e41a:	4860      	ldr	r0, [pc, #384]	; (800e59c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800e41c:	21c0      	movs	r1, #192	; 0xc0
 800e41e:	f00d fb7d 	bl	801bb1c <__assert_func>
 800e422:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e424:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e428:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800e42a:	f640 6333 	movw	r3, #3635	; 0xe33
 800e42e:	4299      	cmp	r1, r3
 800e430:	d110      	bne.n	800e454 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800e432:	6803      	ldr	r3, [r0, #0]
 800e434:	68db      	ldr	r3, [r3, #12]
 800e436:	4798      	blx	r3
 800e438:	7b41      	ldrb	r1, [r0, #13]
 800e43a:	00cb      	lsls	r3, r1, #3
 800e43c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e440:	7a03      	ldrb	r3, [r0, #8]
 800e442:	0648      	lsls	r0, r1, #25
 800e444:	ea43 0302 	orr.w	r3, r3, r2
 800e448:	bf44      	itt	mi
 800e44a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e44e:	b21b      	sxthmi	r3, r3
 800e450:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e454:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800e458:	443b      	add	r3, r7
 800e45a:	4433      	add	r3, r6
 800e45c:	b29b      	uxth	r3, r3
 800e45e:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800e462:	462a      	mov	r2, r5
 800e464:	f105 0c08 	add.w	ip, r5, #8
 800e468:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e46c:	4635      	mov	r5, r6
 800e46e:	6810      	ldr	r0, [r2, #0]
 800e470:	6851      	ldr	r1, [r2, #4]
 800e472:	4637      	mov	r7, r6
 800e474:	c703      	stmia	r7!, {r0, r1}
 800e476:	3208      	adds	r2, #8
 800e478:	4562      	cmp	r2, ip
 800e47a:	463e      	mov	r6, r7
 800e47c:	d1f7      	bne.n	800e46e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800e47e:	6810      	ldr	r0, [r2, #0]
 800e480:	6038      	str	r0, [r7, #0]
 800e482:	8892      	ldrh	r2, [r2, #4]
 800e484:	80ba      	strh	r2, [r7, #4]
 800e486:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800e48a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800e48e:	10db      	asrs	r3, r3, #3
 800e490:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e494:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e498:	4313      	orrs	r3, r2
 800e49a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e49e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800e4a2:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800e4a6:	1a9b      	subs	r3, r3, r2
 800e4a8:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800e4ac:	e769      	b.n	800e382 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e4ae:	f023 0204 	bic.w	r2, r3, #4
 800e4b2:	f640 611b 	movw	r1, #3611	; 0xe1b
 800e4b6:	428a      	cmp	r2, r1
 800e4b8:	d003      	beq.n	800e4c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800e4ba:	f640 621d 	movw	r2, #3613	; 0xe1d
 800e4be:	4293      	cmp	r3, r2
 800e4c0:	d120      	bne.n	800e504 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800e4c2:	3b01      	subs	r3, #1
 800e4c4:	4602      	mov	r2, r0
 800e4c6:	b29b      	uxth	r3, r3
 800e4c8:	4629      	mov	r1, r5
 800e4ca:	4620      	mov	r0, r4
 800e4cc:	f7ff ff43 	bl	800e356 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e4d0:	7b41      	ldrb	r1, [r0, #13]
 800e4d2:	00cb      	lsls	r3, r1, #3
 800e4d4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e4d8:	7a03      	ldrb	r3, [r0, #8]
 800e4da:	0649      	lsls	r1, r1, #25
 800e4dc:	ea43 0302 	orr.w	r3, r3, r2
 800e4e0:	bf44      	itt	mi
 800e4e2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e4e6:	b21b      	sxthmi	r3, r3
 800e4e8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e4ec:	7b6b      	ldrb	r3, [r5, #13]
 800e4ee:	7aaa      	ldrb	r2, [r5, #10]
 800e4f0:	005b      	lsls	r3, r3, #1
 800e4f2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e4f6:	4313      	orrs	r3, r2
 800e4f8:	115a      	asrs	r2, r3, #5
 800e4fa:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800e4fe:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800e502:	e036      	b.n	800e572 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800e504:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800e508:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800e50c:	7a2a      	ldrb	r2, [r5, #8]
 800e50e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800e512:	ea42 0201 	orr.w	r2, r2, r1
 800e516:	bf1c      	itt	ne
 800e518:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800e51c:	b212      	sxthne	r2, r2
 800e51e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800e522:	f640 6109 	movw	r1, #3593	; 0xe09
 800e526:	f023 0210 	bic.w	r2, r3, #16
 800e52a:	428a      	cmp	r2, r1
 800e52c:	d003      	beq.n	800e536 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800e52e:	f640 6213 	movw	r2, #3603	; 0xe13
 800e532:	4293      	cmp	r3, r2
 800e534:	d12a      	bne.n	800e58c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800e536:	7b6e      	ldrb	r6, [r5, #13]
 800e538:	0076      	lsls	r6, r6, #1
 800e53a:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e53e:	7aae      	ldrb	r6, [r5, #10]
 800e540:	4316      	orrs	r6, r2
 800e542:	f640 6213 	movw	r2, #3603	; 0xe13
 800e546:	4293      	cmp	r3, r2
 800e548:	bf18      	it	ne
 800e54a:	f103 33ff 	addne.w	r3, r3, #4294967295
 800e54e:	4602      	mov	r2, r0
 800e550:	bf14      	ite	ne
 800e552:	b29b      	uxthne	r3, r3
 800e554:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800e558:	4629      	mov	r1, r5
 800e55a:	4620      	mov	r0, r4
 800e55c:	f7ff fefb 	bl	800e356 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e560:	7b43      	ldrb	r3, [r0, #13]
 800e562:	7a82      	ldrb	r2, [r0, #10]
 800e564:	005b      	lsls	r3, r3, #1
 800e566:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e56a:	4313      	orrs	r3, r2
 800e56c:	1af6      	subs	r6, r6, r3
 800e56e:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 800e572:	7b69      	ldrb	r1, [r5, #13]
 800e574:	00cb      	lsls	r3, r1, #3
 800e576:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e57a:	7a2b      	ldrb	r3, [r5, #8]
 800e57c:	4313      	orrs	r3, r2
 800e57e:	064a      	lsls	r2, r1, #25
 800e580:	bf44      	itt	mi
 800e582:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e586:	b21b      	sxthmi	r3, r3
 800e588:	1bdb      	subs	r3, r3, r7
 800e58a:	e73f      	b.n	800e40c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800e58c:	2300      	movs	r3, #0
 800e58e:	e7b6      	b.n	800e4fe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800e590:	3fc00079 	.word	0x3fc00079
 800e594:	0801dbd8 	.word	0x0801dbd8
 800e598:	0801fd47 	.word	0x0801fd47
 800e59c:	0801dcaa 	.word	0x0801dcaa

0800e5a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800e5a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e5a4:	4604      	mov	r4, r0
 800e5a6:	b942      	cbnz	r2, 800e5ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800e5a8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e5ac:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 800e5b0:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800e5b4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800e5b8:	e046      	b.n	800e648 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800e5ba:	7b51      	ldrb	r1, [r2, #13]
 800e5bc:	8893      	ldrh	r3, [r2, #4]
 800e5be:	010f      	lsls	r7, r1, #4
 800e5c0:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800e5c4:	79d7      	ldrb	r7, [r2, #7]
 800e5c6:	4307      	orrs	r7, r0
 800e5c8:	2f04      	cmp	r7, #4
 800e5ca:	b2bd      	uxth	r5, r7
 800e5cc:	bfcc      	ite	gt
 800e5ce:	08bf      	lsrgt	r7, r7, #2
 800e5d0:	2701      	movle	r7, #1
 800e5d2:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800e5d6:	f200 80ab 	bhi.w	800e730 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800e5da:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800e5de:	4283      	cmp	r3, r0
 800e5e0:	d216      	bcs.n	800e610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e5e2:	f240 605b 	movw	r0, #1627	; 0x65b
 800e5e6:	4283      	cmp	r3, r0
 800e5e8:	d859      	bhi.n	800e69e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800e5ea:	f240 6057 	movw	r0, #1623	; 0x657
 800e5ee:	4283      	cmp	r3, r0
 800e5f0:	d20e      	bcs.n	800e610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e5f2:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e5f6:	d24a      	bcs.n	800e68e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800e5f8:	f240 604e 	movw	r0, #1614	; 0x64e
 800e5fc:	4283      	cmp	r3, r0
 800e5fe:	d207      	bcs.n	800e610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e600:	f240 601a 	movw	r0, #1562	; 0x61a
 800e604:	4283      	cmp	r3, r0
 800e606:	d02a      	beq.n	800e65e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e608:	d821      	bhi.n	800e64e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800e60a:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800e60e:	d35b      	bcc.n	800e6c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e610:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 800e614:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e618:	f040 80d0 	bne.w	800e7bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800e61c:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 800e620:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e624:	f040 80ca 	bne.w	800e7bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800e628:	00cb      	lsls	r3, r1, #3
 800e62a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e62e:	7a13      	ldrb	r3, [r2, #8]
 800e630:	0649      	lsls	r1, r1, #25
 800e632:	ea43 0300 	orr.w	r3, r3, r0
 800e636:	bf44      	itt	mi
 800e638:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e63c:	b21b      	sxthmi	r3, r3
 800e63e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e642:	1b5d      	subs	r5, r3, r5
 800e644:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e648:	4610      	mov	r0, r2
 800e64a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e64e:	f240 604b 	movw	r0, #1611	; 0x64b
 800e652:	4283      	cmp	r3, r0
 800e654:	d338      	bcc.n	800e6c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e656:	f240 604c 	movw	r0, #1612	; 0x64c
 800e65a:	4283      	cmp	r3, r0
 800e65c:	d9d8      	bls.n	800e610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e65e:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 800e662:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 800e666:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e66a:	f040 80f1 	bne.w	800e850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800e66e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e672:	f040 80ed 	bne.w	800e850 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800e676:	00cb      	lsls	r3, r1, #3
 800e678:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e67c:	7a13      	ldrb	r3, [r2, #8]
 800e67e:	064e      	lsls	r6, r1, #25
 800e680:	ea43 0300 	orr.w	r3, r3, r0
 800e684:	bf44      	itt	mi
 800e686:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e68a:	b21b      	sxthmi	r3, r3
 800e68c:	e7d9      	b.n	800e642 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800e68e:	f240 6054 	movw	r0, #1620	; 0x654
 800e692:	4283      	cmp	r3, r0
 800e694:	d8e3      	bhi.n	800e65e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e696:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e69a:	d9e0      	bls.n	800e65e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e69c:	e7b8      	b.n	800e610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e69e:	f240 6074 	movw	r0, #1652	; 0x674
 800e6a2:	4283      	cmp	r3, r0
 800e6a4:	d0b4      	beq.n	800e610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e6a6:	d82d      	bhi.n	800e704 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800e6a8:	f240 605e 	movw	r0, #1630	; 0x65e
 800e6ac:	4283      	cmp	r3, r0
 800e6ae:	d804      	bhi.n	800e6ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800e6b0:	f240 605d 	movw	r0, #1629	; 0x65d
 800e6b4:	4283      	cmp	r3, r0
 800e6b6:	d3d2      	bcc.n	800e65e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e6b8:	e7aa      	b.n	800e610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e6ba:	f240 605f 	movw	r0, #1631	; 0x65f
 800e6be:	4283      	cmp	r3, r0
 800e6c0:	d0cd      	beq.n	800e65e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e6c2:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800e6c6:	d0a3      	beq.n	800e610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e6c8:	00cb      	lsls	r3, r1, #3
 800e6ca:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e6ce:	7a13      	ldrb	r3, [r2, #8]
 800e6d0:	0649      	lsls	r1, r1, #25
 800e6d2:	ea43 0300 	orr.w	r3, r3, r0
 800e6d6:	bf44      	itt	mi
 800e6d8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e6dc:	b21b      	sxthmi	r3, r3
 800e6de:	1b5d      	subs	r5, r3, r5
 800e6e0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e6e4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e6e8:	7b53      	ldrb	r3, [r2, #13]
 800e6ea:	015b      	lsls	r3, r3, #5
 800e6ec:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e6f0:	7993      	ldrb	r3, [r2, #6]
 800e6f2:	430b      	orrs	r3, r1
 800e6f4:	005b      	lsls	r3, r3, #1
 800e6f6:	2105      	movs	r1, #5
 800e6f8:	fb93 f3f1 	sdiv	r3, r3, r1
 800e6fc:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800e700:	440b      	add	r3, r1
 800e702:	e757      	b.n	800e5b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800e704:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800e708:	4283      	cmp	r3, r0
 800e70a:	d809      	bhi.n	800e720 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800e70c:	f240 60df 	movw	r0, #1759	; 0x6df
 800e710:	4283      	cmp	r3, r0
 800e712:	f4bf af7d 	bcs.w	800e610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e716:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800e71a:	2b05      	cmp	r3, #5
 800e71c:	d8d4      	bhi.n	800e6c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e71e:	e777      	b.n	800e610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e720:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800e724:	4283      	cmp	r3, r0
 800e726:	d09a      	beq.n	800e65e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e728:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800e72c:	4283      	cmp	r3, r0
 800e72e:	e7ca      	b.n	800e6c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800e730:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800e734:	d22b      	bcs.n	800e78e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800e736:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800e73a:	4283      	cmp	r3, r0
 800e73c:	d28f      	bcs.n	800e65e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e73e:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800e742:	4283      	cmp	r3, r0
 800e744:	d816      	bhi.n	800e774 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800e746:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800e74a:	4283      	cmp	r3, r0
 800e74c:	f4bf af60 	bcs.w	800e610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e750:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800e754:	4283      	cmp	r3, r0
 800e756:	d80a      	bhi.n	800e76e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800e758:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800e75c:	4283      	cmp	r3, r0
 800e75e:	f4bf af57 	bcs.w	800e610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e762:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800e766:	4283      	cmp	r3, r0
 800e768:	f43f af79 	beq.w	800e65e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e76c:	e7ac      	b.n	800e6c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800e76e:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800e772:	e7f8      	b.n	800e766 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800e774:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800e778:	4283      	cmp	r3, r0
 800e77a:	d802      	bhi.n	800e782 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800e77c:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800e780:	e798      	b.n	800e6b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800e782:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800e786:	4283      	cmp	r3, r0
 800e788:	f47f af42 	bne.w	800e610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e78c:	e767      	b.n	800e65e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e78e:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800e792:	4283      	cmp	r3, r0
 800e794:	f43f af63 	beq.w	800e65e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e798:	d802      	bhi.n	800e7a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800e79a:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800e79e:	e7f2      	b.n	800e786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800e7a0:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800e7a4:	4283      	cmp	r3, r0
 800e7a6:	d805      	bhi.n	800e7b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800e7a8:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800e7ac:	4283      	cmp	r3, r0
 800e7ae:	f4ff af2f 	bcc.w	800e610 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800e7b2:	e754      	b.n	800e65e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800e7b4:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800e7b8:	4283      	cmp	r3, r0
 800e7ba:	e7af      	b.n	800e71c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800e7bc:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800e7c0:	4617      	mov	r7, r2
 800e7c2:	f102 0808 	add.w	r8, r2, #8
 800e7c6:	4666      	mov	r6, ip
 800e7c8:	6838      	ldr	r0, [r7, #0]
 800e7ca:	6879      	ldr	r1, [r7, #4]
 800e7cc:	46e6      	mov	lr, ip
 800e7ce:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800e7d2:	3708      	adds	r7, #8
 800e7d4:	4547      	cmp	r7, r8
 800e7d6:	46f4      	mov	ip, lr
 800e7d8:	d1f6      	bne.n	800e7c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800e7da:	6838      	ldr	r0, [r7, #0]
 800e7dc:	f8ce 0000 	str.w	r0, [lr]
 800e7e0:	88b9      	ldrh	r1, [r7, #4]
 800e7e2:	f8ae 1004 	strh.w	r1, [lr, #4]
 800e7e6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800e7ea:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e7ee:	d009      	beq.n	800e804 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800e7f0:	7b51      	ldrb	r1, [r2, #13]
 800e7f2:	7992      	ldrb	r2, [r2, #6]
 800e7f4:	0149      	lsls	r1, r1, #5
 800e7f6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e7fa:	4311      	orrs	r1, r2
 800e7fc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e800:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800e804:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e808:	d00d      	beq.n	800e826 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800e80a:	442b      	add	r3, r5
 800e80c:	b29b      	uxth	r3, r3
 800e80e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800e812:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800e816:	10db      	asrs	r3, r3, #3
 800e818:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e81c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e820:	4313      	orrs	r3, r2
 800e822:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e826:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800e82a:	00cb      	lsls	r3, r1, #3
 800e82c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e830:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800e834:	064f      	lsls	r7, r1, #25
 800e836:	ea43 0302 	orr.w	r3, r3, r2
 800e83a:	bf44      	itt	mi
 800e83c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e840:	b21b      	sxthmi	r3, r3
 800e842:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e846:	1b5d      	subs	r5, r3, r5
 800e848:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e84c:	4632      	mov	r2, r6
 800e84e:	e6fb      	b.n	800e648 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800e850:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 800e854:	4694      	mov	ip, r2
 800e856:	f102 0908 	add.w	r9, r2, #8
 800e85a:	4676      	mov	r6, lr
 800e85c:	f8dc 0000 	ldr.w	r0, [ip]
 800e860:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800e864:	46f0      	mov	r8, lr
 800e866:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800e86a:	f10c 0c08 	add.w	ip, ip, #8
 800e86e:	45cc      	cmp	ip, r9
 800e870:	46c6      	mov	lr, r8
 800e872:	d1f3      	bne.n	800e85c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800e874:	f8dc 0000 	ldr.w	r0, [ip]
 800e878:	f8c8 0000 	str.w	r0, [r8]
 800e87c:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800e880:	f8a8 1004 	strh.w	r1, [r8, #4]
 800e884:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800e888:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e88c:	d009      	beq.n	800e8a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800e88e:	7b51      	ldrb	r1, [r2, #13]
 800e890:	7992      	ldrb	r2, [r2, #6]
 800e892:	0149      	lsls	r1, r1, #5
 800e894:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e898:	4311      	orrs	r1, r2
 800e89a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800e89e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800e8a2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e8a6:	d00d      	beq.n	800e8c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800e8a8:	1bdb      	subs	r3, r3, r7
 800e8aa:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800e8ae:	b29b      	uxth	r3, r3
 800e8b0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800e8b4:	10db      	asrs	r3, r3, #3
 800e8b6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e8ba:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e8be:	4313      	orrs	r3, r2
 800e8c0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e8c4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800e8c8:	00cb      	lsls	r3, r1, #3
 800e8ca:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e8ce:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800e8d2:	0648      	lsls	r0, r1, #25
 800e8d4:	ea43 0302 	orr.w	r3, r3, r2
 800e8d8:	bf44      	itt	mi
 800e8da:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e8de:	b21b      	sxthmi	r3, r3
 800e8e0:	e7b1      	b.n	800e846 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800e8e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800e8e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e8e8:	461e      	mov	r6, r3
 800e8ea:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800e8ec:	4604      	mov	r4, r0
 800e8ee:	4617      	mov	r7, r2
 800e8f0:	b92b      	cbnz	r3, 800e8fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800e8f2:	4b25      	ldr	r3, [pc, #148]	; (800e988 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800e8f4:	4a25      	ldr	r2, [pc, #148]	; (800e98c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800e8f6:	4826      	ldr	r0, [pc, #152]	; (800e990 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800e8f8:	21c0      	movs	r1, #192	; 0xc0
 800e8fa:	f00d f90f 	bl	801bb1c <__assert_func>
 800e8fe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e900:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e904:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800e908:	f7f3 ff34 	bl	8002774 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e90c:	4605      	mov	r5, r0
 800e90e:	b918      	cbnz	r0, 800e918 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800e910:	6030      	str	r0, [r6, #0]
 800e912:	4628      	mov	r0, r5
 800e914:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e918:	683b      	ldr	r3, [r7, #0]
 800e91a:	4601      	mov	r1, r0
 800e91c:	68db      	ldr	r3, [r3, #12]
 800e91e:	4638      	mov	r0, r7
 800e920:	4798      	blx	r3
 800e922:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e926:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e92a:	4602      	mov	r2, r0
 800e92c:	6030      	str	r0, [r6, #0]
 800e92e:	d213      	bcs.n	800e958 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800e930:	4643      	mov	r3, r8
 800e932:	4639      	mov	r1, r7
 800e934:	4620      	mov	r0, r4
 800e936:	f7ff fe33 	bl	800e5a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e93a:	6030      	str	r0, [r6, #0]
 800e93c:	6833      	ldr	r3, [r6, #0]
 800e93e:	b143      	cbz	r3, 800e952 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800e940:	7b5a      	ldrb	r2, [r3, #13]
 800e942:	7a9b      	ldrb	r3, [r3, #10]
 800e944:	0052      	lsls	r2, r2, #1
 800e946:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e94a:	4313      	orrs	r3, r2
 800e94c:	bf0c      	ite	eq
 800e94e:	2301      	moveq	r3, #1
 800e950:	2300      	movne	r3, #0
 800e952:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800e956:	e7dc      	b.n	800e912 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800e958:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800e95c:	b29b      	uxth	r3, r3
 800e95e:	2b7f      	cmp	r3, #127	; 0x7f
 800e960:	d804      	bhi.n	800e96c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800e962:	4639      	mov	r1, r7
 800e964:	4620      	mov	r0, r4
 800e966:	f7ff fd01 	bl	800e36c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e96a:	e7e6      	b.n	800e93a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e96c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800e970:	2b00      	cmp	r3, #0
 800e972:	d0e3      	beq.n	800e93c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e974:	f640 1302 	movw	r3, #2306	; 0x902
 800e978:	429d      	cmp	r5, r3
 800e97a:	d1df      	bne.n	800e93c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e97c:	4601      	mov	r1, r0
 800e97e:	4620      	mov	r0, r4
 800e980:	f7ff fcc6 	bl	800e310 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e984:	e7d9      	b.n	800e93a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e986:	bf00      	nop
 800e988:	0801dbd8 	.word	0x0801dbd8
 800e98c:	0801fd47 	.word	0x0801fd47
 800e990:	0801dcaa 	.word	0x0801dcaa

0800e994 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800e994:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e998:	461e      	mov	r6, r3
 800e99a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800e99c:	4604      	mov	r4, r0
 800e99e:	4617      	mov	r7, r2
 800e9a0:	b92b      	cbnz	r3, 800e9ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800e9a2:	4b26      	ldr	r3, [pc, #152]	; (800ea3c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800e9a4:	4a26      	ldr	r2, [pc, #152]	; (800ea40 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800e9a6:	4827      	ldr	r0, [pc, #156]	; (800ea44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800e9a8:	21c0      	movs	r1, #192	; 0xc0
 800e9aa:	f00d f8b7 	bl	801bb1c <__assert_func>
 800e9ae:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e9b0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e9b4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800e9b8:	f7f3 fedc 	bl	8002774 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e9bc:	4605      	mov	r5, r0
 800e9be:	b918      	cbnz	r0, 800e9c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800e9c0:	6030      	str	r0, [r6, #0]
 800e9c2:	4628      	mov	r0, r5
 800e9c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e9c8:	683b      	ldr	r3, [r7, #0]
 800e9ca:	4601      	mov	r1, r0
 800e9cc:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800e9d0:	4638      	mov	r0, r7
 800e9d2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800e9d6:	47c8      	blx	r9
 800e9d8:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e9dc:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e9e0:	4602      	mov	r2, r0
 800e9e2:	6030      	str	r0, [r6, #0]
 800e9e4:	d213      	bcs.n	800ea0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800e9e6:	4643      	mov	r3, r8
 800e9e8:	4639      	mov	r1, r7
 800e9ea:	4620      	mov	r0, r4
 800e9ec:	f7ff fdd8 	bl	800e5a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e9f0:	6030      	str	r0, [r6, #0]
 800e9f2:	6833      	ldr	r3, [r6, #0]
 800e9f4:	b143      	cbz	r3, 800ea08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800e9f6:	7b5a      	ldrb	r2, [r3, #13]
 800e9f8:	7a9b      	ldrb	r3, [r3, #10]
 800e9fa:	0052      	lsls	r2, r2, #1
 800e9fc:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800ea00:	4313      	orrs	r3, r2
 800ea02:	bf0c      	ite	eq
 800ea04:	2301      	moveq	r3, #1
 800ea06:	2300      	movne	r3, #0
 800ea08:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800ea0c:	e7d9      	b.n	800e9c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800ea0e:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800ea12:	b29b      	uxth	r3, r3
 800ea14:	2b7f      	cmp	r3, #127	; 0x7f
 800ea16:	d804      	bhi.n	800ea22 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800ea18:	4639      	mov	r1, r7
 800ea1a:	4620      	mov	r0, r4
 800ea1c:	f7ff fca6 	bl	800e36c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800ea20:	e7e6      	b.n	800e9f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800ea22:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800ea26:	2b00      	cmp	r3, #0
 800ea28:	d0e3      	beq.n	800e9f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800ea2a:	f640 1302 	movw	r3, #2306	; 0x902
 800ea2e:	429d      	cmp	r5, r3
 800ea30:	d1df      	bne.n	800e9f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800ea32:	4601      	mov	r1, r0
 800ea34:	4620      	mov	r0, r4
 800ea36:	f7ff fc6b 	bl	800e310 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800ea3a:	e7d9      	b.n	800e9f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800ea3c:	0801dbd8 	.word	0x0801dbd8
 800ea40:	0801fd47 	.word	0x0801fd47
 800ea44:	0801dcaa 	.word	0x0801dcaa

0800ea48 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800ea48:	b510      	push	{r4, lr}
 800ea4a:	4604      	mov	r4, r0
 800ea4c:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800ea50:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ea52:	b9d9      	cbnz	r1, 800ea8c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 800ea54:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ea56:	2b0a      	cmp	r3, #10
 800ea58:	d037      	beq.n	800eaca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800ea5a:	4620      	mov	r0, r4
 800ea5c:	f7ff fc17 	bl	800e28e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800ea60:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ea62:	2b09      	cmp	r3, #9
 800ea64:	d906      	bls.n	800ea74 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800ea66:	4b19      	ldr	r3, [pc, #100]	; (800eacc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800ea68:	4a19      	ldr	r2, [pc, #100]	; (800ead0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800ea6a:	481a      	ldr	r0, [pc, #104]	; (800ead4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 800ea6c:	f44f 7182 	mov.w	r1, #260	; 0x104
 800ea70:	f00d f854 	bl	801bb1c <__assert_func>
 800ea74:	1c5a      	adds	r2, r3, #1
 800ea76:	8722      	strh	r2, [r4, #56]	; 0x38
 800ea78:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ea7a:	4413      	add	r3, r2
 800ea7c:	b29b      	uxth	r3, r3
 800ea7e:	2b09      	cmp	r3, #9
 800ea80:	bf88      	it	hi
 800ea82:	3b0a      	subhi	r3, #10
 800ea84:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ea88:	8458      	strh	r0, [r3, #34]	; 0x22
 800ea8a:	e7e3      	b.n	800ea54 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 800ea8c:	2b0a      	cmp	r3, #10
 800ea8e:	d01c      	beq.n	800eaca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800ea90:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800ea92:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800ea96:	3901      	subs	r1, #1
 800ea98:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 800ea9a:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 800ea9e:	1c51      	adds	r1, r2, #1
 800eaa0:	b289      	uxth	r1, r1
 800eaa2:	2901      	cmp	r1, #1
 800eaa4:	bf8a      	itet	hi
 800eaa6:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800eaaa:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 800eaac:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 800eaae:	2b09      	cmp	r3, #9
 800eab0:	d8d9      	bhi.n	800ea66 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 800eab2:	1c5a      	adds	r2, r3, #1
 800eab4:	8722      	strh	r2, [r4, #56]	; 0x38
 800eab6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800eab8:	4413      	add	r3, r2
 800eaba:	b29b      	uxth	r3, r3
 800eabc:	2b09      	cmp	r3, #9
 800eabe:	bf88      	it	hi
 800eac0:	3b0a      	subhi	r3, #10
 800eac2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800eac6:	8458      	strh	r0, [r3, #34]	; 0x22
 800eac8:	e7c0      	b.n	800ea4c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800eaca:	bd10      	pop	{r4, pc}
 800eacc:	0801fb18 	.word	0x0801fb18
 800ead0:	0801fe9d 	.word	0x0801fe9d
 800ead4:	0801dcaa 	.word	0x0801dcaa

0800ead8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800ead8:	b538      	push	{r3, r4, r5, lr}
 800eada:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 800eadc:	4604      	mov	r4, r0
 800eade:	b92a      	cbnz	r2, 800eaec <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800eae0:	4b13      	ldr	r3, [pc, #76]	; (800eb30 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800eae2:	4a14      	ldr	r2, [pc, #80]	; (800eb34 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800eae4:	4814      	ldr	r0, [pc, #80]	; (800eb38 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800eae6:	21d5      	movs	r1, #213	; 0xd5
 800eae8:	f00d f818 	bl	801bb1c <__assert_func>
 800eaec:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800eaee:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800eaf2:	3a01      	subs	r2, #1
 800eaf4:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 800eaf6:	8702      	strh	r2, [r0, #56]	; 0x38
 800eaf8:	1c5a      	adds	r2, r3, #1
 800eafa:	b292      	uxth	r2, r2
 800eafc:	2a09      	cmp	r2, #9
 800eafe:	bf86      	itte	hi
 800eb00:	3b09      	subhi	r3, #9
 800eb02:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 800eb04:	86c2      	strhls	r2, [r0, #54]	; 0x36
 800eb06:	f7ff ff9f 	bl	800ea48 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800eb0a:	8c23      	ldrh	r3, [r4, #32]
 800eb0c:	2b01      	cmp	r3, #1
 800eb0e:	bf9c      	itt	ls
 800eb10:	3301      	addls	r3, #1
 800eb12:	8423      	strhls	r3, [r4, #32]
 800eb14:	8be3      	ldrh	r3, [r4, #30]
 800eb16:	b90b      	cbnz	r3, 800eb1c <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800eb18:	2302      	movs	r3, #2
 800eb1a:	83e3      	strh	r3, [r4, #30]
 800eb1c:	8be3      	ldrh	r3, [r4, #30]
 800eb1e:	3b01      	subs	r3, #1
 800eb20:	b29b      	uxth	r3, r3
 800eb22:	83e3      	strh	r3, [r4, #30]
 800eb24:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800eb28:	4628      	mov	r0, r5
 800eb2a:	8365      	strh	r5, [r4, #26]
 800eb2c:	bd38      	pop	{r3, r4, r5, pc}
 800eb2e:	bf00      	nop
 800eb30:	0801dbd8 	.word	0x0801dbd8
 800eb34:	0801fdf2 	.word	0x0801fdf2
 800eb38:	0801dcaa 	.word	0x0801dcaa

0800eb3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800eb3c:	b538      	push	{r3, r4, r5, lr}
 800eb3e:	428a      	cmp	r2, r1
 800eb40:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 800eb42:	d90c      	bls.n	800eb5e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800eb44:	b92c      	cbnz	r4, 800eb52 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800eb46:	4b1c      	ldr	r3, [pc, #112]	; (800ebb8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800eb48:	4a1c      	ldr	r2, [pc, #112]	; (800ebbc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800eb4a:	21e1      	movs	r1, #225	; 0xe1
 800eb4c:	481c      	ldr	r0, [pc, #112]	; (800ebc0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800eb4e:	f00c ffe5 	bl	801bb1c <__assert_func>
 800eb52:	3c01      	subs	r4, #1
 800eb54:	8704      	strh	r4, [r0, #56]	; 0x38
 800eb56:	4b1b      	ldr	r3, [pc, #108]	; (800ebc4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800eb58:	4a1b      	ldr	r2, [pc, #108]	; (800ebc8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800eb5a:	21c5      	movs	r1, #197	; 0xc5
 800eb5c:	e7f6      	b.n	800eb4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800eb5e:	428c      	cmp	r4, r1
 800eb60:	d203      	bcs.n	800eb6a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800eb62:	4b1a      	ldr	r3, [pc, #104]	; (800ebcc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800eb64:	4a1a      	ldr	r2, [pc, #104]	; (800ebd0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800eb66:	21cb      	movs	r1, #203	; 0xcb
 800eb68:	e7f0      	b.n	800eb4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800eb6a:	1a64      	subs	r4, r4, r1
 800eb6c:	8704      	strh	r4, [r0, #56]	; 0x38
 800eb6e:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 800eb70:	4421      	add	r1, r4
 800eb72:	b289      	uxth	r1, r1
 800eb74:	2909      	cmp	r1, #9
 800eb76:	bf88      	it	hi
 800eb78:	390a      	subhi	r1, #10
 800eb7a:	86c1      	strh	r1, [r0, #54]	; 0x36
 800eb7c:	250a      	movs	r5, #10
 800eb7e:	b1ba      	cbz	r2, 800ebb0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800eb80:	3a01      	subs	r2, #1
 800eb82:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800eb84:	b292      	uxth	r2, r2
 800eb86:	2909      	cmp	r1, #9
 800eb88:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800eb8c:	d903      	bls.n	800eb96 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800eb8e:	4b11      	ldr	r3, [pc, #68]	; (800ebd4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800eb90:	4a11      	ldr	r2, [pc, #68]	; (800ebd8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800eb92:	21e6      	movs	r1, #230	; 0xe6
 800eb94:	e7da      	b.n	800eb4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800eb96:	3101      	adds	r1, #1
 800eb98:	8701      	strh	r1, [r0, #56]	; 0x38
 800eb9a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800eb9c:	b901      	cbnz	r1, 800eba0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800eb9e:	86c5      	strh	r5, [r0, #54]	; 0x36
 800eba0:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800eba2:	3901      	subs	r1, #1
 800eba4:	b289      	uxth	r1, r1
 800eba6:	86c1      	strh	r1, [r0, #54]	; 0x36
 800eba8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800ebac:	844c      	strh	r4, [r1, #34]	; 0x22
 800ebae:	e7e6      	b.n	800eb7e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800ebb0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ebb4:	f7ff bf48 	b.w	800ea48 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ebb8:	0801dbd8 	.word	0x0801dbd8
 800ebbc:	0801fbcb 	.word	0x0801fbcb
 800ebc0:	0801dcaa 	.word	0x0801dcaa
 800ebc4:	0801dcd6 	.word	0x0801dcd6
 800ebc8:	0801fc75 	.word	0x0801fc75
 800ebcc:	0801fb24 	.word	0x0801fb24
 800ebd0:	0801ff4c 	.word	0x0801ff4c
 800ebd4:	0801fb30 	.word	0x0801fb30
 800ebd8:	0801fb43 	.word	0x0801fb43

0800ebdc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800ebdc:	3a01      	subs	r2, #1
 800ebde:	b570      	push	{r4, r5, r6, lr}
 800ebe0:	b292      	uxth	r2, r2
 800ebe2:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800ebe6:	42b2      	cmp	r2, r6
 800ebe8:	d019      	beq.n	800ec1e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800ebea:	8c04      	ldrh	r4, [r0, #32]
 800ebec:	f831 5b02 	ldrh.w	r5, [r1], #2
 800ebf0:	4294      	cmp	r4, r2
 800ebf2:	d805      	bhi.n	800ec00 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800ebf4:	4b19      	ldr	r3, [pc, #100]	; (800ec5c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800ebf6:	4a1a      	ldr	r2, [pc, #104]	; (800ec60 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800ebf8:	481a      	ldr	r0, [pc, #104]	; (800ec64 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800ebfa:	21c5      	movs	r1, #197	; 0xc5
 800ebfc:	f00c ff8e 	bl	801bb1c <__assert_func>
 800ec00:	8bc4      	ldrh	r4, [r0, #30]
 800ec02:	4414      	add	r4, r2
 800ec04:	b2a4      	uxth	r4, r4
 800ec06:	2c01      	cmp	r4, #1
 800ec08:	bf88      	it	hi
 800ec0a:	3c02      	subhi	r4, #2
 800ec0c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800ec10:	3a01      	subs	r2, #1
 800ec12:	8b64      	ldrh	r4, [r4, #26]
 800ec14:	42ac      	cmp	r4, r5
 800ec16:	b292      	uxth	r2, r2
 800ec18:	d0e5      	beq.n	800ebe6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800ec1a:	2000      	movs	r0, #0
 800ec1c:	bd70      	pop	{r4, r5, r6, pc}
 800ec1e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800ec22:	2400      	movs	r4, #0
 800ec24:	4413      	add	r3, r2
 800ec26:	b2a2      	uxth	r2, r4
 800ec28:	429a      	cmp	r2, r3
 800ec2a:	da14      	bge.n	800ec56 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800ec2c:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 800ec2e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800ec32:	4296      	cmp	r6, r2
 800ec34:	d802      	bhi.n	800ec3c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800ec36:	4b09      	ldr	r3, [pc, #36]	; (800ec5c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800ec38:	4a0b      	ldr	r2, [pc, #44]	; (800ec68 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800ec3a:	e7dd      	b.n	800ebf8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800ec3c:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 800ec3e:	4432      	add	r2, r6
 800ec40:	b292      	uxth	r2, r2
 800ec42:	2a09      	cmp	r2, #9
 800ec44:	bf88      	it	hi
 800ec46:	3a0a      	subhi	r2, #10
 800ec48:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800ec4c:	3401      	adds	r4, #1
 800ec4e:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 800ec50:	42aa      	cmp	r2, r5
 800ec52:	d0e8      	beq.n	800ec26 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800ec54:	e7e1      	b.n	800ec1a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800ec56:	2001      	movs	r0, #1
 800ec58:	e7e0      	b.n	800ec1c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800ec5a:	bf00      	nop
 800ec5c:	0801dcd6 	.word	0x0801dcd6
 800ec60:	0801ffd0 	.word	0x0801ffd0
 800ec64:	0801dcaa 	.word	0x0801dcaa
 800ec68:	0801fc75 	.word	0x0801fc75

0800ec6c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800ec6c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec70:	4605      	mov	r5, r0
 800ec72:	4616      	mov	r6, r2
 800ec74:	1c8c      	adds	r4, r1, #2
 800ec76:	8809      	ldrh	r1, [r1, #0]
 800ec78:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800ec7c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800ec80:	42b3      	cmp	r3, r6
 800ec82:	d124      	bne.n	800ecce <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800ec84:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800ec88:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800ec8c:	f001 070f 	and.w	r7, r1, #15
 800ec90:	f8cd 8000 	str.w	r8, [sp]
 800ec94:	464b      	mov	r3, r9
 800ec96:	4652      	mov	r2, sl
 800ec98:	4621      	mov	r1, r4
 800ec9a:	4628      	mov	r0, r5
 800ec9c:	f7ff ff9e 	bl	800ebdc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800eca0:	4683      	mov	fp, r0
 800eca2:	b168      	cbz	r0, 800ecc0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800eca4:	eb0a 0109 	add.w	r1, sl, r9
 800eca8:	4441      	add	r1, r8
 800ecaa:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800ecae:	463a      	mov	r2, r7
 800ecb0:	4649      	mov	r1, r9
 800ecb2:	4628      	mov	r0, r5
 800ecb4:	f7ff ff42 	bl	800eb3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800ecb8:	4658      	mov	r0, fp
 800ecba:	b003      	add	sp, #12
 800ecbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ecc0:	eb07 010a 	add.w	r1, r7, sl
 800ecc4:	4449      	add	r1, r9
 800ecc6:	4441      	add	r1, r8
 800ecc8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800eccc:	e7d2      	b.n	800ec74 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800ecce:	f04f 0b00 	mov.w	fp, #0
 800ecd2:	e7f1      	b.n	800ecb8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800ecd4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800ecd4:	b570      	push	{r4, r5, r6, lr}
 800ecd6:	8810      	ldrh	r0, [r2, #0]
 800ecd8:	4298      	cmp	r0, r3
 800ecda:	d817      	bhi.n	800ed0c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ecdc:	1e48      	subs	r0, r1, #1
 800ecde:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800ece2:	4298      	cmp	r0, r3
 800ece4:	d312      	bcc.n	800ed0c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ece6:	2400      	movs	r4, #0
 800ece8:	428c      	cmp	r4, r1
 800ecea:	d20f      	bcs.n	800ed0c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ecec:	1860      	adds	r0, r4, r1
 800ecee:	1040      	asrs	r0, r0, #1
 800ecf0:	0085      	lsls	r5, r0, #2
 800ecf2:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800ecf6:	42b3      	cmp	r3, r6
 800ecf8:	d902      	bls.n	800ed00 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800ecfa:	3001      	adds	r0, #1
 800ecfc:	b284      	uxth	r4, r0
 800ecfe:	e7f3      	b.n	800ece8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800ed00:	d201      	bcs.n	800ed06 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800ed02:	b281      	uxth	r1, r0
 800ed04:	e7f0      	b.n	800ece8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800ed06:	442a      	add	r2, r5
 800ed08:	8850      	ldrh	r0, [r2, #2]
 800ed0a:	bd70      	pop	{r4, r5, r6, pc}
 800ed0c:	2000      	movs	r0, #0
 800ed0e:	e7fc      	b.n	800ed0a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800ed10 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800ed10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed14:	6c45      	ldr	r5, [r0, #68]	; 0x44
 800ed16:	886f      	ldrh	r7, [r5, #2]
 800ed18:	4604      	mov	r4, r0
 800ed1a:	087f      	lsrs	r7, r7, #1
 800ed1c:	260b      	movs	r6, #11
 800ed1e:	3e01      	subs	r6, #1
 800ed20:	d01b      	beq.n	800ed5a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800ed22:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ed24:	b92b      	cbnz	r3, 800ed32 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800ed26:	4b0e      	ldr	r3, [pc, #56]	; (800ed60 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800ed28:	4a0e      	ldr	r2, [pc, #56]	; (800ed64 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800ed2a:	480f      	ldr	r0, [pc, #60]	; (800ed68 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800ed2c:	21c0      	movs	r1, #192	; 0xc0
 800ed2e:	f00c fef5 	bl	801bb1c <__assert_func>
 800ed32:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ed34:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ed38:	462a      	mov	r2, r5
 800ed3a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800ed3e:	4639      	mov	r1, r7
 800ed40:	4643      	mov	r3, r8
 800ed42:	4620      	mov	r0, r4
 800ed44:	f7ff ffc6 	bl	800ecd4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800ed48:	b138      	cbz	r0, 800ed5a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800ed4a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800ed4e:	4642      	mov	r2, r8
 800ed50:	4620      	mov	r0, r4
 800ed52:	f7ff ff8b 	bl	800ec6c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800ed56:	2800      	cmp	r0, #0
 800ed58:	d1e1      	bne.n	800ed1e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800ed5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed5e:	bf00      	nop
 800ed60:	0801dbd8 	.word	0x0801dbd8
 800ed64:	0801fd47 	.word	0x0801fd47
 800ed68:	0801dcaa 	.word	0x0801dcaa

0800ed6c <_ZN8touchgfx8ceil28_4El>:
 800ed6c:	f110 030f 	adds.w	r3, r0, #15
 800ed70:	d401      	bmi.n	800ed76 <_ZN8touchgfx8ceil28_4El+0xa>
 800ed72:	1118      	asrs	r0, r3, #4
 800ed74:	4770      	bx	lr
 800ed76:	f1c0 0001 	rsb	r0, r0, #1
 800ed7a:	f010 000f 	ands.w	r0, r0, #15
 800ed7e:	bf18      	it	ne
 800ed80:	2001      	movne	r0, #1
 800ed82:	2210      	movs	r2, #16
 800ed84:	fb93 f3f2 	sdiv	r3, r3, r2
 800ed88:	1a18      	subs	r0, r3, r0
 800ed8a:	4770      	bx	lr

0800ed8c <_ZN8touchgfx11floorDivModEllRlS0_>:
 800ed8c:	2900      	cmp	r1, #0
 800ed8e:	b538      	push	{r3, r4, r5, lr}
 800ed90:	dc05      	bgt.n	800ed9e <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 800ed92:	4b0f      	ldr	r3, [pc, #60]	; (800edd0 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 800ed94:	4a0f      	ldr	r2, [pc, #60]	; (800edd4 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 800ed96:	4810      	ldr	r0, [pc, #64]	; (800edd8 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 800ed98:	21f7      	movs	r1, #247	; 0xf7
 800ed9a:	f00c febf 	bl	801bb1c <__assert_func>
 800ed9e:	2800      	cmp	r0, #0
 800eda0:	db06      	blt.n	800edb0 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 800eda2:	fb90 f4f1 	sdiv	r4, r0, r1
 800eda6:	6014      	str	r4, [r2, #0]
 800eda8:	fb01 0114 	mls	r1, r1, r4, r0
 800edac:	6019      	str	r1, [r3, #0]
 800edae:	bd38      	pop	{r3, r4, r5, pc}
 800edb0:	4240      	negs	r0, r0
 800edb2:	fb90 f4f1 	sdiv	r4, r0, r1
 800edb6:	4265      	negs	r5, r4
 800edb8:	fb01 0014 	mls	r0, r1, r4, r0
 800edbc:	6015      	str	r5, [r2, #0]
 800edbe:	6018      	str	r0, [r3, #0]
 800edc0:	2800      	cmp	r0, #0
 800edc2:	d0f4      	beq.n	800edae <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 800edc4:	6810      	ldr	r0, [r2, #0]
 800edc6:	3801      	subs	r0, #1
 800edc8:	6010      	str	r0, [r2, #0]
 800edca:	6818      	ldr	r0, [r3, #0]
 800edcc:	1a09      	subs	r1, r1, r0
 800edce:	e7ed      	b.n	800edac <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 800edd0:	080200a1 	.word	0x080200a1
 800edd4:	080200e0 	.word	0x080200e0
 800edd8:	080200b1 	.word	0x080200b1

0800eddc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800eddc:	b570      	push	{r4, r5, r6, lr}
 800edde:	694a      	ldr	r2, [r1, #20]
 800ede0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ede2:	684b      	ldr	r3, [r1, #4]
 800ede4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800ede6:	1b54      	subs	r4, r2, r5
 800ede8:	f000 8106 	beq.w	800eff8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800edec:	1b9b      	subs	r3, r3, r6
 800edee:	d003      	beq.n	800edf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800edf0:	4363      	muls	r3, r4
 800edf2:	2210      	movs	r2, #16
 800edf4:	fb93 f3f2 	sdiv	r3, r3, r2
 800edf8:	680c      	ldr	r4, [r1, #0]
 800edfa:	698a      	ldr	r2, [r1, #24]
 800edfc:	1b65      	subs	r5, r4, r5
 800edfe:	f000 80fd 	beq.w	800effc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800ee02:	1b92      	subs	r2, r2, r6
 800ee04:	d003      	beq.n	800ee0e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800ee06:	436a      	muls	r2, r5
 800ee08:	2410      	movs	r4, #16
 800ee0a:	fb92 f2f4 	sdiv	r2, r2, r4
 800ee0e:	1a9b      	subs	r3, r3, r2
 800ee10:	ee07 3a90 	vmov	s15, r3
 800ee14:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800f038 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800ee18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ee1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800ee20:	ee67 7a84 	vmul.f32	s15, s15, s8
 800ee24:	460a      	mov	r2, r1
 800ee26:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800ee2a:	4603      	mov	r3, r0
 800ee2c:	f100 040c 	add.w	r4, r0, #12
 800ee30:	eeb1 6a43 	vneg.f32	s12, s6
 800ee34:	edd2 7a02 	vldr	s15, [r2, #8]
 800ee38:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800ee3c:	3214      	adds	r2, #20
 800ee3e:	ece3 6a01 	vstmia	r3!, {s13}
 800ee42:	ed52 7a02 	vldr	s15, [r2, #-8]
 800ee46:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ee4a:	429c      	cmp	r4, r3
 800ee4c:	edc3 7a02 	vstr	s15, [r3, #8]
 800ee50:	ed52 7a01 	vldr	s15, [r2, #-4]
 800ee54:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ee58:	edc3 7a05 	vstr	s15, [r3, #20]
 800ee5c:	d1ea      	bne.n	800ee34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800ee5e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ee60:	698b      	ldr	r3, [r1, #24]
 800ee62:	edd0 4a02 	vldr	s9, [r0, #8]
 800ee66:	edd0 3a00 	vldr	s7, [r0]
 800ee6a:	edd0 6a01 	vldr	s13, [r0, #4]
 800ee6e:	ed90 5a05 	vldr	s10, [r0, #20]
 800ee72:	ed90 2a03 	vldr	s4, [r0, #12]
 800ee76:	edd0 5a04 	vldr	s11, [r0, #16]
 800ee7a:	ed90 1a07 	vldr	s2, [r0, #28]
 800ee7e:	edd0 2a06 	vldr	s5, [r0, #24]
 800ee82:	1a9b      	subs	r3, r3, r2
 800ee84:	ee07 3a90 	vmov	s15, r3
 800ee88:	684b      	ldr	r3, [r1, #4]
 800ee8a:	1a9b      	subs	r3, r3, r2
 800ee8c:	ee07 3a10 	vmov	s14, r3
 800ee90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ee94:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800ee98:	ee67 7a84 	vmul.f32	s15, s15, s8
 800ee9c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800eea0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eea4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800eea8:	ee27 7a04 	vmul.f32	s14, s14, s8
 800eeac:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800eeb0:	eee6 7a87 	vfma.f32	s15, s13, s14
 800eeb4:	ee32 5a45 	vsub.f32	s10, s4, s10
 800eeb8:	ee67 7a83 	vmul.f32	s15, s15, s6
 800eebc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800eec0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800eec2:	694a      	ldr	r2, [r1, #20]
 800eec4:	1b13      	subs	r3, r2, r4
 800eec6:	ee07 3a10 	vmov	s14, r3
 800eeca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eece:	680b      	ldr	r3, [r1, #0]
 800eed0:	ee27 7a04 	vmul.f32	s14, s14, s8
 800eed4:	1b1b      	subs	r3, r3, r4
 800eed6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800eeda:	ee07 3a10 	vmov	s14, r3
 800eede:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eee2:	ee27 7a04 	vmul.f32	s14, s14, s8
 800eee6:	eee6 4a87 	vfma.f32	s9, s13, s14
 800eeea:	ee64 4a86 	vmul.f32	s9, s9, s12
 800eeee:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800eef2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800eef4:	698b      	ldr	r3, [r1, #24]
 800eef6:	1a9b      	subs	r3, r3, r2
 800eef8:	ee06 3a90 	vmov	s13, r3
 800eefc:	684b      	ldr	r3, [r1, #4]
 800eefe:	1a9b      	subs	r3, r3, r2
 800ef00:	ee07 3a10 	vmov	s14, r3
 800ef04:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800ef08:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ef0c:	ee66 6a84 	vmul.f32	s13, s13, s8
 800ef10:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ef14:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800ef18:	eee5 6a87 	vfma.f32	s13, s11, s14
 800ef1c:	ee66 6a83 	vmul.f32	s13, s13, s6
 800ef20:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800ef24:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ef26:	694a      	ldr	r2, [r1, #20]
 800ef28:	1b13      	subs	r3, r2, r4
 800ef2a:	ee07 3a10 	vmov	s14, r3
 800ef2e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ef32:	680b      	ldr	r3, [r1, #0]
 800ef34:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ef38:	1b1b      	subs	r3, r3, r4
 800ef3a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800ef3e:	ee07 3a10 	vmov	s14, r3
 800ef42:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ef46:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ef4a:	eea5 5a87 	vfma.f32	s10, s11, s14
 800ef4e:	edd0 5a08 	vldr	s11, [r0, #32]
 800ef52:	ee25 5a06 	vmul.f32	s10, s10, s12
 800ef56:	ee31 1a65 	vsub.f32	s2, s2, s11
 800ef5a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800ef5e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ef60:	698b      	ldr	r3, [r1, #24]
 800ef62:	1a9b      	subs	r3, r3, r2
 800ef64:	ee07 3a10 	vmov	s14, r3
 800ef68:	684b      	ldr	r3, [r1, #4]
 800ef6a:	1a9b      	subs	r3, r3, r2
 800ef6c:	ee01 3a90 	vmov	s3, r3
 800ef70:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ef74:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800ef78:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ef7c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800ef80:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800ef84:	ee61 1a84 	vmul.f32	s3, s3, s8
 800ef88:	eea1 7a21 	vfma.f32	s14, s2, s3
 800ef8c:	ee27 7a03 	vmul.f32	s14, s14, s6
 800ef90:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800ef94:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ef96:	694a      	ldr	r2, [r1, #20]
 800ef98:	1b13      	subs	r3, r2, r4
 800ef9a:	ee03 3a10 	vmov	s6, r3
 800ef9e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800efa2:	680b      	ldr	r3, [r1, #0]
 800efa4:	ee23 3a04 	vmul.f32	s6, s6, s8
 800efa8:	1b1b      	subs	r3, r3, r4
 800efaa:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800efae:	ee03 3a10 	vmov	s6, r3
 800efb2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800efb6:	ee23 4a04 	vmul.f32	s8, s6, s8
 800efba:	eee1 5a04 	vfma.f32	s11, s2, s8
 800efbe:	ee25 6a86 	vmul.f32	s12, s11, s12
 800efc2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800efc6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800efca:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800efce:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800efd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800efd6:	dd13      	ble.n	800f000 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800efd8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800efdc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800efe0:	63c3      	str	r3, [r0, #60]	; 0x3c
 800efe2:	eee3 7a87 	vfma.f32	s15, s7, s14
 800efe6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800efea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800efee:	dd15      	ble.n	800f01c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800eff0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800eff4:	6403      	str	r3, [r0, #64]	; 0x40
 800eff6:	bd70      	pop	{r4, r5, r6, pc}
 800eff8:	4623      	mov	r3, r4
 800effa:	e6fd      	b.n	800edf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800effc:	462a      	mov	r2, r5
 800effe:	e706      	b.n	800ee0e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f000:	d502      	bpl.n	800f008 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800f002:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800f006:	e7e9      	b.n	800efdc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800f008:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800f00c:	eea3 2a85 	vfma.f32	s4, s7, s10
 800f010:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800f014:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f018:	dade      	bge.n	800efd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800f01a:	e7f2      	b.n	800f002 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800f01c:	d502      	bpl.n	800f024 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800f01e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800f022:	e7e7      	b.n	800eff4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800f024:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800f028:	eee3 4a86 	vfma.f32	s9, s7, s12
 800f02c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800f030:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f034:	dadc      	bge.n	800eff0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800f036:	e7f2      	b.n	800f01e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800f038:	3d800000 	.word	0x3d800000

0800f03c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800f03c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f040:	f04f 0814 	mov.w	r8, #20
 800f044:	fb08 f903 	mul.w	r9, r8, r3
 800f048:	eb02 0a09 	add.w	sl, r2, r9
 800f04c:	4604      	mov	r4, r0
 800f04e:	f8da 0004 	ldr.w	r0, [sl, #4]
 800f052:	4617      	mov	r7, r2
 800f054:	460d      	mov	r5, r1
 800f056:	461e      	mov	r6, r3
 800f058:	f7ff fe88 	bl	800ed6c <_ZN8touchgfx8ceil28_4El>
 800f05c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f05e:	6160      	str	r0, [r4, #20]
 800f060:	fb08 f803 	mul.w	r8, r8, r3
 800f064:	eb07 0b08 	add.w	fp, r7, r8
 800f068:	9001      	str	r0, [sp, #4]
 800f06a:	f8db 0004 	ldr.w	r0, [fp, #4]
 800f06e:	f7ff fe7d 	bl	800ed6c <_ZN8touchgfx8ceil28_4El>
 800f072:	9a01      	ldr	r2, [sp, #4]
 800f074:	1a80      	subs	r0, r0, r2
 800f076:	61a0      	str	r0, [r4, #24]
 800f078:	2800      	cmp	r0, #0
 800f07a:	f000 8088 	beq.w	800f18e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 800f07e:	f857 3009 	ldr.w	r3, [r7, r9]
 800f082:	f857 c008 	ldr.w	ip, [r7, r8]
 800f086:	f8da 1004 	ldr.w	r1, [sl, #4]
 800f08a:	f8db 0004 	ldr.w	r0, [fp, #4]
 800f08e:	ebac 0c03 	sub.w	ip, ip, r3
 800f092:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 800f096:	fb0b f202 	mul.w	r2, fp, r2
 800f09a:	fb0c 2211 	mls	r2, ip, r1, r2
 800f09e:	1a40      	subs	r0, r0, r1
 800f0a0:	ea4f 1800 	mov.w	r8, r0, lsl #4
 800f0a4:	fb00 2003 	mla	r0, r0, r3, r2
 800f0a8:	3801      	subs	r0, #1
 800f0aa:	f104 0310 	add.w	r3, r4, #16
 800f0ae:	4622      	mov	r2, r4
 800f0b0:	4641      	mov	r1, r8
 800f0b2:	4440      	add	r0, r8
 800f0b4:	f7ff fe6a 	bl	800ed8c <_ZN8touchgfx11floorDivModEllRlS0_>
 800f0b8:	f104 0308 	add.w	r3, r4, #8
 800f0bc:	1d22      	adds	r2, r4, #4
 800f0be:	4641      	mov	r1, r8
 800f0c0:	4658      	mov	r0, fp
 800f0c2:	f7ff fe63 	bl	800ed8c <_ZN8touchgfx11floorDivModEllRlS0_>
 800f0c6:	f8c4 800c 	str.w	r8, [r4, #12]
 800f0ca:	f8da 3004 	ldr.w	r3, [sl, #4]
 800f0ce:	6962      	ldr	r2, [r4, #20]
 800f0d0:	eddf 6a31 	vldr	s13, [pc, #196]	; 800f198 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800f0d4:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800f0d8:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800f0dc:	ee07 3a10 	vmov	s14, r3
 800f0e0:	6822      	ldr	r2, [r4, #0]
 800f0e2:	f857 3009 	ldr.w	r3, [r7, r9]
 800f0e6:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800f0ea:	ee07 3a90 	vmov	s15, r3
 800f0ee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f0f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f0f6:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 800f0fa:	ee27 7a26 	vmul.f32	s14, s14, s13
 800f0fe:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f102:	edd3 6a00 	vldr	s13, [r3]
 800f106:	eee6 6a07 	vfma.f32	s13, s12, s14
 800f10a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f10e:	eee6 6a27 	vfma.f32	s13, s12, s15
 800f112:	edc4 6a07 	vstr	s13, [r4, #28]
 800f116:	edd4 6a01 	vldr	s13, [r4, #4]
 800f11a:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 800f11e:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800f122:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f126:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f12a:	ed84 6a08 	vstr	s12, [r4, #32]
 800f12e:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800f130:	6262      	str	r2, [r4, #36]	; 0x24
 800f132:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 800f136:	ed93 6a03 	vldr	s12, [r3, #12]
 800f13a:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f13e:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800f142:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800f146:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 800f14a:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800f14e:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 800f152:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f156:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 800f15a:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800f15c:	6322      	str	r2, [r4, #48]	; 0x30
 800f15e:	ed93 6a06 	vldr	s12, [r3, #24]
 800f162:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 800f166:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f16a:	eeb0 7a46 	vmov.f32	s14, s12
 800f16e:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 800f172:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f176:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 800f17a:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 800f17e:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 800f182:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f186:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 800f18a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800f18c:	63e3      	str	r3, [r4, #60]	; 0x3c
 800f18e:	4620      	mov	r0, r4
 800f190:	b003      	add	sp, #12
 800f192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f196:	bf00      	nop
 800f198:	3d800000 	.word	0x3d800000

0800f19c <_ZN8touchgfx7Unicode6strlenEPKt>:
 800f19c:	4602      	mov	r2, r0
 800f19e:	b148      	cbz	r0, 800f1b4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800f1a0:	2300      	movs	r3, #0
 800f1a2:	b298      	uxth	r0, r3
 800f1a4:	3301      	adds	r3, #1
 800f1a6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800f1aa:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800f1ae:	2900      	cmp	r1, #0
 800f1b0:	d1f7      	bne.n	800f1a2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800f1b2:	4770      	bx	lr
 800f1b4:	4770      	bx	lr

0800f1b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800f1b6:	b530      	push	{r4, r5, lr}
 800f1b8:	4604      	mov	r4, r0
 800f1ba:	b159      	cbz	r1, 800f1d4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800f1bc:	b148      	cbz	r0, 800f1d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f1be:	2300      	movs	r3, #0
 800f1c0:	b298      	uxth	r0, r3
 800f1c2:	4282      	cmp	r2, r0
 800f1c4:	d905      	bls.n	800f1d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f1c6:	5ccd      	ldrb	r5, [r1, r3]
 800f1c8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800f1cc:	3301      	adds	r3, #1
 800f1ce:	2d00      	cmp	r5, #0
 800f1d0:	d1f6      	bne.n	800f1c0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800f1d2:	bd30      	pop	{r4, r5, pc}
 800f1d4:	4608      	mov	r0, r1
 800f1d6:	e7fc      	b.n	800f1d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800f1d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 800f1d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f1da:	b08b      	sub	sp, #44	; 0x2c
 800f1dc:	468c      	mov	ip, r1
 800f1de:	2100      	movs	r1, #0
 800f1e0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f1e4:	ae01      	add	r6, sp, #4
 800f1e6:	211f      	movs	r1, #31
 800f1e8:	fbb0 f7f3 	udiv	r7, r0, r3
 800f1ec:	fb03 0517 	mls	r5, r3, r7, r0
 800f1f0:	b2ec      	uxtb	r4, r5
 800f1f2:	2d09      	cmp	r5, #9
 800f1f4:	bfd4      	ite	le
 800f1f6:	3430      	addle	r4, #48	; 0x30
 800f1f8:	3457      	addgt	r4, #87	; 0x57
 800f1fa:	b2e4      	uxtb	r4, r4
 800f1fc:	558c      	strb	r4, [r1, r6]
 800f1fe:	4638      	mov	r0, r7
 800f200:	1e4c      	subs	r4, r1, #1
 800f202:	b92f      	cbnz	r7, 800f210 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 800f204:	4431      	add	r1, r6
 800f206:	4660      	mov	r0, ip
 800f208:	f7ff ffd5 	bl	800f1b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f20c:	b00b      	add	sp, #44	; 0x2c
 800f20e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f210:	4621      	mov	r1, r4
 800f212:	e7e9      	b.n	800f1e8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0800f214 <_ZN8touchgfx7Unicode4itoaElPtti>:
 800f214:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f216:	4607      	mov	r7, r0
 800f218:	b08b      	sub	sp, #44	; 0x2c
 800f21a:	4608      	mov	r0, r1
 800f21c:	b341      	cbz	r1, 800f270 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800f21e:	1e99      	subs	r1, r3, #2
 800f220:	2922      	cmp	r1, #34	; 0x22
 800f222:	d825      	bhi.n	800f270 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800f224:	2100      	movs	r1, #0
 800f226:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f22a:	463c      	mov	r4, r7
 800f22c:	261f      	movs	r6, #31
 800f22e:	f10d 0c04 	add.w	ip, sp, #4
 800f232:	fb94 fef3 	sdiv	lr, r4, r3
 800f236:	fb03 441e 	mls	r4, r3, lr, r4
 800f23a:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800f23e:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800f242:	b2ec      	uxtb	r4, r5
 800f244:	2d09      	cmp	r5, #9
 800f246:	bfd4      	ite	le
 800f248:	3430      	addle	r4, #48	; 0x30
 800f24a:	3457      	addgt	r4, #87	; 0x57
 800f24c:	b2e4      	uxtb	r4, r4
 800f24e:	f80c 4006 	strb.w	r4, [ip, r6]
 800f252:	4674      	mov	r4, lr
 800f254:	1e71      	subs	r1, r6, #1
 800f256:	b96c      	cbnz	r4, 800f274 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 800f258:	2f00      	cmp	r7, #0
 800f25a:	da05      	bge.n	800f268 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 800f25c:	ab0a      	add	r3, sp, #40	; 0x28
 800f25e:	4419      	add	r1, r3
 800f260:	232d      	movs	r3, #45	; 0x2d
 800f262:	f801 3c24 	strb.w	r3, [r1, #-36]
 800f266:	1eb1      	subs	r1, r6, #2
 800f268:	3101      	adds	r1, #1
 800f26a:	4461      	add	r1, ip
 800f26c:	f7ff ffa3 	bl	800f1b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f270:	b00b      	add	sp, #44	; 0x2c
 800f272:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f274:	460e      	mov	r6, r1
 800f276:	e7dc      	b.n	800f232 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0800f278 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800f278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f27c:	4691      	mov	r9, r2
 800f27e:	b085      	sub	sp, #20
 800f280:	6802      	ldr	r2, [r0, #0]
 800f282:	9201      	str	r2, [sp, #4]
 800f284:	4688      	mov	r8, r1
 800f286:	4683      	mov	fp, r0
 800f288:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 800f28c:	9103      	str	r1, [sp, #12]
 800f28e:	4610      	mov	r0, r2
 800f290:	461c      	mov	r4, r3
 800f292:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800f296:	9302      	str	r3, [sp, #8]
 800f298:	f7ff ff80 	bl	800f19c <_ZN8touchgfx7Unicode6strlenEPKt>
 800f29c:	f1b8 0f00 	cmp.w	r8, #0
 800f2a0:	bf0c      	ite	eq
 800f2a2:	4684      	moveq	ip, r0
 800f2a4:	f100 0c01 	addne.w	ip, r0, #1
 800f2a8:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 800f2ac:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 800f2b0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f2b2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f2b4:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 800f2b8:	9903      	ldr	r1, [sp, #12]
 800f2ba:	fa1f fc8c 	uxth.w	ip, ip
 800f2be:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f2c2:	d041      	beq.n	800f348 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f2c4:	d834      	bhi.n	800f330 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800f2c6:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 800f2ca:	d059      	beq.n	800f380 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800f2cc:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 800f2d0:	d03a      	beq.n	800f348 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f2d2:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 800f2d6:	d034      	beq.n	800f342 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f2d8:	2400      	movs	r4, #0
 800f2da:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800f2de:	3a01      	subs	r2, #1
 800f2e0:	b169      	cbz	r1, 800f2fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f2e2:	9911      	ldr	r1, [sp, #68]	; 0x44
 800f2e4:	458c      	cmp	ip, r1
 800f2e6:	da09      	bge.n	800f2fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f2e8:	eba1 010c 	sub.w	r1, r1, ip
 800f2ec:	b289      	uxth	r1, r1
 800f2ee:	b933      	cbnz	r3, 800f2fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f2f0:	2e00      	cmp	r6, #0
 800f2f2:	d051      	beq.n	800f398 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f2f4:	2800      	cmp	r0, #0
 800f2f6:	d04f      	beq.n	800f398 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f2f8:	440c      	add	r4, r1
 800f2fa:	b2a4      	uxth	r4, r4
 800f2fc:	2100      	movs	r1, #0
 800f2fe:	682b      	ldr	r3, [r5, #0]
 800f300:	4293      	cmp	r3, r2
 800f302:	da07      	bge.n	800f314 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f304:	f1b8 0f00 	cmp.w	r8, #0
 800f308:	d004      	beq.n	800f314 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f30a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 800f30e:	682b      	ldr	r3, [r5, #0]
 800f310:	3301      	adds	r3, #1
 800f312:	602b      	str	r3, [r5, #0]
 800f314:	2730      	movs	r7, #48	; 0x30
 800f316:	2c00      	cmp	r4, #0
 800f318:	d04e      	beq.n	800f3b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f31a:	682e      	ldr	r6, [r5, #0]
 800f31c:	3c01      	subs	r4, #1
 800f31e:	42b2      	cmp	r2, r6
 800f320:	b2a4      	uxth	r4, r4
 800f322:	dd49      	ble.n	800f3b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f324:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f328:	682b      	ldr	r3, [r5, #0]
 800f32a:	3301      	adds	r3, #1
 800f32c:	602b      	str	r3, [r5, #0]
 800f32e:	e7f2      	b.n	800f316 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 800f330:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 800f334:	d01d      	beq.n	800f372 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 800f336:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 800f33a:	d002      	beq.n	800f342 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f33c:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 800f340:	e7c9      	b.n	800f2d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 800f342:	4684      	mov	ip, r0
 800f344:	f04f 0800 	mov.w	r8, #0
 800f348:	2c00      	cmp	r4, #0
 800f34a:	d0c6      	beq.n	800f2da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f34c:	b947      	cbnz	r7, 800f360 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f34e:	2801      	cmp	r0, #1
 800f350:	d106      	bne.n	800f360 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f352:	8814      	ldrh	r4, [r2, #0]
 800f354:	2c30      	cmp	r4, #48	; 0x30
 800f356:	bf02      	ittt	eq
 800f358:	3202      	addeq	r2, #2
 800f35a:	f8cb 2000 	streq.w	r2, [fp]
 800f35e:	4638      	moveq	r0, r7
 800f360:	45bc      	cmp	ip, r7
 800f362:	da14      	bge.n	800f38e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 800f364:	b2bf      	uxth	r7, r7
 800f366:	eba7 040c 	sub.w	r4, r7, ip
 800f36a:	b2a4      	uxth	r4, r4
 800f36c:	46bc      	mov	ip, r7
 800f36e:	2600      	movs	r6, #0
 800f370:	e7b3      	b.n	800f2da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f372:	4684      	mov	ip, r0
 800f374:	b16c      	cbz	r4, 800f392 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 800f376:	42b8      	cmp	r0, r7
 800f378:	dd00      	ble.n	800f37c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 800f37a:	b2b8      	uxth	r0, r7
 800f37c:	2400      	movs	r4, #0
 800f37e:	e003      	b.n	800f388 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 800f380:	f04f 0c01 	mov.w	ip, #1
 800f384:	2400      	movs	r4, #0
 800f386:	4660      	mov	r0, ip
 800f388:	4626      	mov	r6, r4
 800f38a:	46a0      	mov	r8, r4
 800f38c:	e7a5      	b.n	800f2da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f38e:	2400      	movs	r4, #0
 800f390:	e7ed      	b.n	800f36e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 800f392:	4626      	mov	r6, r4
 800f394:	46a0      	mov	r8, r4
 800f396:	e7a0      	b.n	800f2da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f398:	2900      	cmp	r1, #0
 800f39a:	d0b0      	beq.n	800f2fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f39c:	2720      	movs	r7, #32
 800f39e:	682e      	ldr	r6, [r5, #0]
 800f3a0:	2900      	cmp	r1, #0
 800f3a2:	d0ac      	beq.n	800f2fe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f3a4:	3901      	subs	r1, #1
 800f3a6:	4296      	cmp	r6, r2
 800f3a8:	b289      	uxth	r1, r1
 800f3aa:	daa7      	bge.n	800f2fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f3ac:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f3b0:	682b      	ldr	r3, [r5, #0]
 800f3b2:	3301      	adds	r3, #1
 800f3b4:	602b      	str	r3, [r5, #0]
 800f3b6:	e7f2      	b.n	800f39e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800f3b8:	b188      	cbz	r0, 800f3de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f3ba:	682b      	ldr	r3, [r5, #0]
 800f3bc:	3801      	subs	r0, #1
 800f3be:	429a      	cmp	r2, r3
 800f3c0:	b280      	uxth	r0, r0
 800f3c2:	dd0c      	ble.n	800f3de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f3c4:	f8db 3000 	ldr.w	r3, [fp]
 800f3c8:	1c9c      	adds	r4, r3, #2
 800f3ca:	f8cb 4000 	str.w	r4, [fp]
 800f3ce:	881c      	ldrh	r4, [r3, #0]
 800f3d0:	682b      	ldr	r3, [r5, #0]
 800f3d2:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 800f3d6:	682b      	ldr	r3, [r5, #0]
 800f3d8:	3301      	adds	r3, #1
 800f3da:	602b      	str	r3, [r5, #0]
 800f3dc:	e7ec      	b.n	800f3b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f3de:	2620      	movs	r6, #32
 800f3e0:	b151      	cbz	r1, 800f3f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f3e2:	6828      	ldr	r0, [r5, #0]
 800f3e4:	3901      	subs	r1, #1
 800f3e6:	4282      	cmp	r2, r0
 800f3e8:	b289      	uxth	r1, r1
 800f3ea:	dd05      	ble.n	800f3f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f3ec:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 800f3f0:	682b      	ldr	r3, [r5, #0]
 800f3f2:	3301      	adds	r3, #1
 800f3f4:	602b      	str	r3, [r5, #0]
 800f3f6:	e7f3      	b.n	800f3e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 800f3f8:	b005      	add	sp, #20
 800f3fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f3fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800f3fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f402:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 800f406:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 800f40a:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 800f40e:	2400      	movs	r4, #0
 800f410:	8014      	strh	r4, [r2, #0]
 800f412:	701c      	strb	r4, [r3, #0]
 800f414:	f888 4000 	strb.w	r4, [r8]
 800f418:	f88c 4000 	strb.w	r4, [ip]
 800f41c:	f88e 4000 	strb.w	r4, [lr]
 800f420:	703c      	strb	r4, [r7, #0]
 800f422:	6804      	ldr	r4, [r0, #0]
 800f424:	b1a4      	cbz	r4, 800f450 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 800f426:	8824      	ldrh	r4, [r4, #0]
 800f428:	f04f 0901 	mov.w	r9, #1
 800f42c:	b314      	cbz	r4, 800f474 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f42e:	2c2b      	cmp	r4, #43	; 0x2b
 800f430:	d001      	beq.n	800f436 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800f432:	2c20      	cmp	r4, #32
 800f434:	d110      	bne.n	800f458 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 800f436:	8014      	strh	r4, [r2, #0]
 800f438:	6804      	ldr	r4, [r0, #0]
 800f43a:	b10c      	cbz	r4, 800f440 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800f43c:	3402      	adds	r4, #2
 800f43e:	6004      	str	r4, [r0, #0]
 800f440:	680c      	ldr	r4, [r1, #0]
 800f442:	b10c      	cbz	r4, 800f448 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 800f444:	3401      	adds	r4, #1
 800f446:	600c      	str	r4, [r1, #0]
 800f448:	6804      	ldr	r4, [r0, #0]
 800f44a:	b17c      	cbz	r4, 800f46c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 800f44c:	8824      	ldrh	r4, [r4, #0]
 800f44e:	e7ed      	b.n	800f42c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f450:	680c      	ldr	r4, [r1, #0]
 800f452:	b17c      	cbz	r4, 800f474 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f454:	7824      	ldrb	r4, [r4, #0]
 800f456:	e7e7      	b.n	800f428 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800f458:	2c2d      	cmp	r4, #45	; 0x2d
 800f45a:	d102      	bne.n	800f462 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 800f45c:	f883 9000 	strb.w	r9, [r3]
 800f460:	e7ea      	b.n	800f438 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f462:	2c23      	cmp	r4, #35	; 0x23
 800f464:	d107      	bne.n	800f476 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 800f466:	f888 9000 	strb.w	r9, [r8]
 800f46a:	e7e5      	b.n	800f438 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f46c:	680c      	ldr	r4, [r1, #0]
 800f46e:	b10c      	cbz	r4, 800f474 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f470:	7824      	ldrb	r4, [r4, #0]
 800f472:	e7db      	b.n	800f42c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f474:	2400      	movs	r4, #0
 800f476:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f47a:	2b09      	cmp	r3, #9
 800f47c:	d901      	bls.n	800f482 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 800f47e:	2c2a      	cmp	r4, #42	; 0x2a
 800f480:	d122      	bne.n	800f4c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f482:	2301      	movs	r3, #1
 800f484:	2c30      	cmp	r4, #48	; 0x30
 800f486:	f88e 3000 	strb.w	r3, [lr]
 800f48a:	d10d      	bne.n	800f4a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f48c:	f88c 3000 	strb.w	r3, [ip]
 800f490:	6803      	ldr	r3, [r0, #0]
 800f492:	b10b      	cbz	r3, 800f498 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 800f494:	3302      	adds	r3, #2
 800f496:	6003      	str	r3, [r0, #0]
 800f498:	680b      	ldr	r3, [r1, #0]
 800f49a:	b10b      	cbz	r3, 800f4a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800f49c:	3301      	adds	r3, #1
 800f49e:	600b      	str	r3, [r1, #0]
 800f4a0:	6803      	ldr	r3, [r0, #0]
 800f4a2:	2b00      	cmp	r3, #0
 800f4a4:	d02f      	beq.n	800f506 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 800f4a6:	881c      	ldrh	r4, [r3, #0]
 800f4a8:	2c2a      	cmp	r4, #42	; 0x2a
 800f4aa:	d135      	bne.n	800f518 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f4ac:	f04f 33ff 	mov.w	r3, #4294967295
 800f4b0:	6033      	str	r3, [r6, #0]
 800f4b2:	6803      	ldr	r3, [r0, #0]
 800f4b4:	b10b      	cbz	r3, 800f4ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 800f4b6:	3302      	adds	r3, #2
 800f4b8:	6003      	str	r3, [r0, #0]
 800f4ba:	680b      	ldr	r3, [r1, #0]
 800f4bc:	b10b      	cbz	r3, 800f4c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 800f4be:	3301      	adds	r3, #1
 800f4c0:	600b      	str	r3, [r1, #0]
 800f4c2:	6803      	ldr	r3, [r0, #0]
 800f4c4:	b31b      	cbz	r3, 800f50e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800f4c6:	881c      	ldrh	r4, [r3, #0]
 800f4c8:	2c2e      	cmp	r4, #46	; 0x2e
 800f4ca:	d11a      	bne.n	800f502 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f4cc:	2301      	movs	r3, #1
 800f4ce:	703b      	strb	r3, [r7, #0]
 800f4d0:	6803      	ldr	r3, [r0, #0]
 800f4d2:	b10b      	cbz	r3, 800f4d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 800f4d4:	3302      	adds	r3, #2
 800f4d6:	6003      	str	r3, [r0, #0]
 800f4d8:	680b      	ldr	r3, [r1, #0]
 800f4da:	b10b      	cbz	r3, 800f4e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 800f4dc:	3301      	adds	r3, #1
 800f4de:	600b      	str	r3, [r1, #0]
 800f4e0:	6803      	ldr	r3, [r0, #0]
 800f4e2:	2b00      	cmp	r3, #0
 800f4e4:	d036      	beq.n	800f554 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 800f4e6:	881b      	ldrh	r3, [r3, #0]
 800f4e8:	2b2a      	cmp	r3, #42	; 0x2a
 800f4ea:	d137      	bne.n	800f55c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f4ec:	f04f 33ff 	mov.w	r3, #4294967295
 800f4f0:	602b      	str	r3, [r5, #0]
 800f4f2:	6803      	ldr	r3, [r0, #0]
 800f4f4:	b10b      	cbz	r3, 800f4fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 800f4f6:	3302      	adds	r3, #2
 800f4f8:	6003      	str	r3, [r0, #0]
 800f4fa:	680b      	ldr	r3, [r1, #0]
 800f4fc:	b10b      	cbz	r3, 800f502 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f4fe:	3301      	adds	r3, #1
 800f500:	600b      	str	r3, [r1, #0]
 800f502:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f506:	680c      	ldr	r4, [r1, #0]
 800f508:	b134      	cbz	r4, 800f518 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f50a:	7824      	ldrb	r4, [r4, #0]
 800f50c:	e7cc      	b.n	800f4a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f50e:	680b      	ldr	r3, [r1, #0]
 800f510:	2b00      	cmp	r3, #0
 800f512:	d0f6      	beq.n	800f502 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f514:	781c      	ldrb	r4, [r3, #0]
 800f516:	e7d7      	b.n	800f4c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f518:	2300      	movs	r3, #0
 800f51a:	6033      	str	r3, [r6, #0]
 800f51c:	220a      	movs	r2, #10
 800f51e:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800f522:	fa1f f38c 	uxth.w	r3, ip
 800f526:	2b09      	cmp	r3, #9
 800f528:	d8ce      	bhi.n	800f4c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f52a:	6833      	ldr	r3, [r6, #0]
 800f52c:	fb02 c303 	mla	r3, r2, r3, ip
 800f530:	6033      	str	r3, [r6, #0]
 800f532:	6803      	ldr	r3, [r0, #0]
 800f534:	b10b      	cbz	r3, 800f53a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 800f536:	3302      	adds	r3, #2
 800f538:	6003      	str	r3, [r0, #0]
 800f53a:	680b      	ldr	r3, [r1, #0]
 800f53c:	b10b      	cbz	r3, 800f542 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 800f53e:	3301      	adds	r3, #1
 800f540:	600b      	str	r3, [r1, #0]
 800f542:	6803      	ldr	r3, [r0, #0]
 800f544:	b10b      	cbz	r3, 800f54a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 800f546:	881c      	ldrh	r4, [r3, #0]
 800f548:	e7e9      	b.n	800f51e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f54a:	680c      	ldr	r4, [r1, #0]
 800f54c:	2c00      	cmp	r4, #0
 800f54e:	d0e6      	beq.n	800f51e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f550:	7824      	ldrb	r4, [r4, #0]
 800f552:	e7e4      	b.n	800f51e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f554:	680b      	ldr	r3, [r1, #0]
 800f556:	b10b      	cbz	r3, 800f55c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f558:	781b      	ldrb	r3, [r3, #0]
 800f55a:	e7c5      	b.n	800f4e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 800f55c:	2200      	movs	r2, #0
 800f55e:	602a      	str	r2, [r5, #0]
 800f560:	240a      	movs	r4, #10
 800f562:	3b30      	subs	r3, #48	; 0x30
 800f564:	b29e      	uxth	r6, r3
 800f566:	2e09      	cmp	r6, #9
 800f568:	682a      	ldr	r2, [r5, #0]
 800f56a:	d813      	bhi.n	800f594 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 800f56c:	fb04 3302 	mla	r3, r4, r2, r3
 800f570:	602b      	str	r3, [r5, #0]
 800f572:	6803      	ldr	r3, [r0, #0]
 800f574:	b10b      	cbz	r3, 800f57a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 800f576:	3302      	adds	r3, #2
 800f578:	6003      	str	r3, [r0, #0]
 800f57a:	680b      	ldr	r3, [r1, #0]
 800f57c:	b10b      	cbz	r3, 800f582 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 800f57e:	3301      	adds	r3, #1
 800f580:	600b      	str	r3, [r1, #0]
 800f582:	6803      	ldr	r3, [r0, #0]
 800f584:	b10b      	cbz	r3, 800f58a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 800f586:	881b      	ldrh	r3, [r3, #0]
 800f588:	e7eb      	b.n	800f562 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f58a:	680b      	ldr	r3, [r1, #0]
 800f58c:	2b00      	cmp	r3, #0
 800f58e:	d0e8      	beq.n	800f562 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f590:	781b      	ldrb	r3, [r3, #0]
 800f592:	e7e6      	b.n	800f562 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f594:	2a06      	cmp	r2, #6
 800f596:	bfa8      	it	ge
 800f598:	2206      	movge	r2, #6
 800f59a:	602a      	str	r2, [r5, #0]
 800f59c:	e7b1      	b.n	800f502 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0800f59e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800f59e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5a2:	b0a3      	sub	sp, #140	; 0x8c
 800f5a4:	2600      	movs	r6, #0
 800f5a6:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 800f5aa:	4607      	mov	r7, r0
 800f5ac:	4688      	mov	r8, r1
 800f5ae:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800f5b2:	4631      	mov	r1, r6
 800f5b4:	2242      	movs	r2, #66	; 0x42
 800f5b6:	4648      	mov	r0, r9
 800f5b8:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800f5ba:	960d      	str	r6, [sp, #52]	; 0x34
 800f5bc:	f00c fb3a 	bl	801bc34 <memset>
 800f5c0:	b15f      	cbz	r7, 800f5da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 800f5c2:	f108 3aff 	add.w	sl, r8, #4294967295
 800f5c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f5c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f5ca:	b152      	cbz	r2, 800f5e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 800f5cc:	8812      	ldrh	r2, [r2, #0]
 800f5ce:	b10a      	cbz	r2, 800f5d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f5d0:	459a      	cmp	sl, r3
 800f5d2:	dc2e      	bgt.n	800f632 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 800f5d4:	2200      	movs	r2, #0
 800f5d6:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f5da:	4638      	mov	r0, r7
 800f5dc:	b023      	add	sp, #140	; 0x8c
 800f5de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f5e2:	9a08      	ldr	r2, [sp, #32]
 800f5e4:	2a00      	cmp	r2, #0
 800f5e6:	d0f5      	beq.n	800f5d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f5e8:	7812      	ldrb	r2, [r2, #0]
 800f5ea:	e7f0      	b.n	800f5ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 800f5ec:	2d00      	cmp	r5, #0
 800f5ee:	d0ea      	beq.n	800f5c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f5f0:	782a      	ldrb	r2, [r5, #0]
 800f5f2:	b142      	cbz	r2, 800f606 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 800f5f4:	2a25      	cmp	r2, #37	; 0x25
 800f5f6:	d001      	beq.n	800f5fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 800f5f8:	459a      	cmp	sl, r3
 800f5fa:	dc08      	bgt.n	800f60e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 800f5fc:	f1bb 0f00 	cmp.w	fp, #0
 800f600:	d121      	bne.n	800f646 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 800f602:	2d00      	cmp	r5, #0
 800f604:	d0df      	beq.n	800f5c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f606:	782a      	ldrb	r2, [r5, #0]
 800f608:	f04f 0b00 	mov.w	fp, #0
 800f60c:	e01d      	b.n	800f64a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 800f60e:	f1bb 0f00 	cmp.w	fp, #0
 800f612:	d078      	beq.n	800f706 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 800f614:	f8bb 2000 	ldrh.w	r2, [fp]
 800f618:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f61c:	f1bb 0f00 	cmp.w	fp, #0
 800f620:	d002      	beq.n	800f628 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 800f622:	f10b 0202 	add.w	r2, fp, #2
 800f626:	9209      	str	r2, [sp, #36]	; 0x24
 800f628:	b10d      	cbz	r5, 800f62e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 800f62a:	3501      	adds	r5, #1
 800f62c:	9508      	str	r5, [sp, #32]
 800f62e:	3301      	adds	r3, #1
 800f630:	930d      	str	r3, [sp, #52]	; 0x34
 800f632:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 800f636:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f638:	f1bb 0f00 	cmp.w	fp, #0
 800f63c:	d0d6      	beq.n	800f5ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 800f63e:	f8bb 2000 	ldrh.w	r2, [fp]
 800f642:	2a00      	cmp	r2, #0
 800f644:	d1d6      	bne.n	800f5f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 800f646:	f8bb 2000 	ldrh.w	r2, [fp]
 800f64a:	2a00      	cmp	r2, #0
 800f64c:	d0bb      	beq.n	800f5c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f64e:	459a      	cmp	sl, r3
 800f650:	ddb9      	ble.n	800f5c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f652:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 800f656:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 800f65a:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800f65e:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 800f662:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 800f666:	960e      	str	r6, [sp, #56]	; 0x38
 800f668:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 800f66c:	960f      	str	r6, [sp, #60]	; 0x3c
 800f66e:	f1bb 0f00 	cmp.w	fp, #0
 800f672:	d002      	beq.n	800f67a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 800f674:	f10b 0302 	add.w	r3, fp, #2
 800f678:	9309      	str	r3, [sp, #36]	; 0x24
 800f67a:	b10d      	cbz	r5, 800f680 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 800f67c:	1c6b      	adds	r3, r5, #1
 800f67e:	9308      	str	r3, [sp, #32]
 800f680:	ab0f      	add	r3, sp, #60	; 0x3c
 800f682:	9305      	str	r3, [sp, #20]
 800f684:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 800f688:	9304      	str	r3, [sp, #16]
 800f68a:	ab0e      	add	r3, sp, #56	; 0x38
 800f68c:	9303      	str	r3, [sp, #12]
 800f68e:	ab0c      	add	r3, sp, #48	; 0x30
 800f690:	9302      	str	r3, [sp, #8]
 800f692:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 800f696:	9301      	str	r3, [sp, #4]
 800f698:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800f69c:	9300      	str	r3, [sp, #0]
 800f69e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 800f6a2:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 800f6a6:	a908      	add	r1, sp, #32
 800f6a8:	a809      	add	r0, sp, #36	; 0x24
 800f6aa:	f7ff fea8 	bl	800f3fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800f6ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f6b0:	2b00      	cmp	r3, #0
 800f6b2:	bfbe      	ittt	lt
 800f6b4:	6823      	ldrlt	r3, [r4, #0]
 800f6b6:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f6ba:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f6bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f6be:	bfb8      	it	lt
 800f6c0:	3404      	addlt	r4, #4
 800f6c2:	2b00      	cmp	r3, #0
 800f6c4:	bfb8      	it	lt
 800f6c6:	6823      	ldrlt	r3, [r4, #0]
 800f6c8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 800f6cc:	bfbe      	ittt	lt
 800f6ce:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f6d2:	930f      	strlt	r3, [sp, #60]	; 0x3c
 800f6d4:	3404      	addlt	r4, #4
 800f6d6:	b1d9      	cbz	r1, 800f710 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 800f6d8:	880b      	ldrh	r3, [r1, #0]
 800f6da:	2b69      	cmp	r3, #105	; 0x69
 800f6dc:	d01f      	beq.n	800f71e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f6de:	d82f      	bhi.n	800f740 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 800f6e0:	2b58      	cmp	r3, #88	; 0x58
 800f6e2:	d01c      	beq.n	800f71e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f6e4:	d818      	bhi.n	800f718 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 800f6e6:	2b25      	cmp	r3, #37	; 0x25
 800f6e8:	d034      	beq.n	800f754 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 800f6ea:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 800f6ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f6f0:	f1bb 0f00 	cmp.w	fp, #0
 800f6f4:	f000 80b8 	beq.w	800f868 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 800f6f8:	f8bb 5000 	ldrh.w	r5, [fp]
 800f6fc:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 800f700:	3301      	adds	r3, #1
 800f702:	930d      	str	r3, [sp, #52]	; 0x34
 800f704:	e029      	b.n	800f75a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f706:	b10d      	cbz	r5, 800f70c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 800f708:	782a      	ldrb	r2, [r5, #0]
 800f70a:	e785      	b.n	800f618 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f70c:	462a      	mov	r2, r5
 800f70e:	e783      	b.n	800f618 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f710:	2a00      	cmp	r2, #0
 800f712:	d0ea      	beq.n	800f6ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f714:	7813      	ldrb	r3, [r2, #0]
 800f716:	e7e0      	b.n	800f6da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 800f718:	3b63      	subs	r3, #99	; 0x63
 800f71a:	2b01      	cmp	r3, #1
 800f71c:	d8e5      	bhi.n	800f6ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f71e:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 800f722:	b329      	cbz	r1, 800f770 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 800f724:	880b      	ldrh	r3, [r1, #0]
 800f726:	2b69      	cmp	r3, #105	; 0x69
 800f728:	d063      	beq.n	800f7f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f72a:	d825      	bhi.n	800f778 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 800f72c:	2b63      	cmp	r3, #99	; 0x63
 800f72e:	d038      	beq.n	800f7a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 800f730:	2b64      	cmp	r3, #100	; 0x64
 800f732:	d05e      	beq.n	800f7f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f734:	2b58      	cmp	r3, #88	; 0x58
 800f736:	d07b      	beq.n	800f830 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 800f738:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800f73c:	4625      	mov	r5, r4
 800f73e:	e036      	b.n	800f7ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f740:	2b73      	cmp	r3, #115	; 0x73
 800f742:	d0ec      	beq.n	800f71e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f744:	d802      	bhi.n	800f74c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 800f746:	2b6f      	cmp	r3, #111	; 0x6f
 800f748:	d1cf      	bne.n	800f6ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f74a:	e7e8      	b.n	800f71e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f74c:	2b75      	cmp	r3, #117	; 0x75
 800f74e:	d0e6      	beq.n	800f71e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f750:	2b78      	cmp	r3, #120	; 0x78
 800f752:	e7f9      	b.n	800f748 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 800f754:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f756:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 800f75a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f75c:	b10b      	cbz	r3, 800f762 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800f75e:	3302      	adds	r3, #2
 800f760:	9309      	str	r3, [sp, #36]	; 0x24
 800f762:	9b08      	ldr	r3, [sp, #32]
 800f764:	2b00      	cmp	r3, #0
 800f766:	f43f af2e 	beq.w	800f5c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f76a:	3301      	adds	r3, #1
 800f76c:	9308      	str	r3, [sp, #32]
 800f76e:	e72a      	b.n	800f5c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f770:	2a00      	cmp	r2, #0
 800f772:	d0e1      	beq.n	800f738 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f774:	7813      	ldrb	r3, [r2, #0]
 800f776:	e7d6      	b.n	800f726 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 800f778:	2b73      	cmp	r3, #115	; 0x73
 800f77a:	d036      	beq.n	800f7ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 800f77c:	d807      	bhi.n	800f78e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 800f77e:	2b6f      	cmp	r3, #111	; 0x6f
 800f780:	d1da      	bne.n	800f738 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f782:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f784:	1d25      	adds	r5, r4, #4
 800f786:	eba8 0202 	sub.w	r2, r8, r2
 800f78a:	2308      	movs	r3, #8
 800f78c:	e04a      	b.n	800f824 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800f78e:	2b75      	cmp	r3, #117	; 0x75
 800f790:	d043      	beq.n	800f81a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 800f792:	2b78      	cmp	r3, #120	; 0x78
 800f794:	d1d0      	bne.n	800f738 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800f796:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f798:	1d25      	adds	r5, r4, #4
 800f79a:	eba8 0202 	sub.w	r2, r8, r2
 800f79e:	2310      	movs	r3, #16
 800f7a0:	e040      	b.n	800f824 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800f7a2:	7823      	ldrb	r3, [r4, #0]
 800f7a4:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 800f7a8:	1d25      	adds	r5, r4, #4
 800f7aa:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 800f7ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f7b0:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800f7b4:	2b00      	cmp	r3, #0
 800f7b6:	d052      	beq.n	800f85e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 800f7b8:	881a      	ldrh	r2, [r3, #0]
 800f7ba:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 800f7be:	a80d      	add	r0, sp, #52	; 0x34
 800f7c0:	9005      	str	r0, [sp, #20]
 800f7c2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 800f7c6:	9004      	str	r0, [sp, #16]
 800f7c8:	980e      	ldr	r0, [sp, #56]	; 0x38
 800f7ca:	9003      	str	r0, [sp, #12]
 800f7cc:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 800f7d0:	9002      	str	r0, [sp, #8]
 800f7d2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800f7d4:	9001      	str	r0, [sp, #4]
 800f7d6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 800f7da:	9000      	str	r0, [sp, #0]
 800f7dc:	e9cd 8706 	strd	r8, r7, [sp, #24]
 800f7e0:	a810      	add	r0, sp, #64	; 0x40
 800f7e2:	f7ff fd49 	bl	800f278 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800f7e6:	462c      	mov	r4, r5
 800f7e8:	e7b7      	b.n	800f75a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f7ea:	6823      	ldr	r3, [r4, #0]
 800f7ec:	1d25      	adds	r5, r4, #4
 800f7ee:	9310      	str	r3, [sp, #64]	; 0x40
 800f7f0:	e7dd      	b.n	800f7ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f7f2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f7f4:	6820      	ldr	r0, [r4, #0]
 800f7f6:	eba8 0202 	sub.w	r2, r8, r2
 800f7fa:	230a      	movs	r3, #10
 800f7fc:	b292      	uxth	r2, r2
 800f7fe:	4649      	mov	r1, r9
 800f800:	f7ff fd08 	bl	800f214 <_ZN8touchgfx7Unicode4itoaElPtti>
 800f804:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f808:	2b2d      	cmp	r3, #45	; 0x2d
 800f80a:	f104 0504 	add.w	r5, r4, #4
 800f80e:	d1ce      	bne.n	800f7ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f810:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f814:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f816:	3302      	adds	r3, #2
 800f818:	e7e9      	b.n	800f7ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 800f81a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f81c:	1d25      	adds	r5, r4, #4
 800f81e:	eba8 0202 	sub.w	r2, r8, r2
 800f822:	230a      	movs	r3, #10
 800f824:	b292      	uxth	r2, r2
 800f826:	4649      	mov	r1, r9
 800f828:	6820      	ldr	r0, [r4, #0]
 800f82a:	f7ff fcd5 	bl	800f1d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800f82e:	e7be      	b.n	800f7ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f830:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f832:	6820      	ldr	r0, [r4, #0]
 800f834:	eba8 0202 	sub.w	r2, r8, r2
 800f838:	b292      	uxth	r2, r2
 800f83a:	2310      	movs	r3, #16
 800f83c:	4649      	mov	r1, r9
 800f83e:	f7ff fccb 	bl	800f1d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800f842:	1d25      	adds	r5, r4, #4
 800f844:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 800f848:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800f84c:	2b00      	cmp	r3, #0
 800f84e:	d0ae      	beq.n	800f7ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f850:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 800f854:	2919      	cmp	r1, #25
 800f856:	d8f7      	bhi.n	800f848 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800f858:	3b20      	subs	r3, #32
 800f85a:	8013      	strh	r3, [r2, #0]
 800f85c:	e7f4      	b.n	800f848 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800f85e:	9a08      	ldr	r2, [sp, #32]
 800f860:	2a00      	cmp	r2, #0
 800f862:	d0aa      	beq.n	800f7ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800f864:	7812      	ldrb	r2, [r2, #0]
 800f866:	e7a8      	b.n	800f7ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800f868:	2d00      	cmp	r5, #0
 800f86a:	f43f af47 	beq.w	800f6fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 800f86e:	782d      	ldrb	r5, [r5, #0]
 800f870:	e744      	b.n	800f6fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0800f872 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800f872:	b507      	push	{r0, r1, r2, lr}
 800f874:	9300      	str	r3, [sp, #0]
 800f876:	4613      	mov	r3, r2
 800f878:	2200      	movs	r2, #0
 800f87a:	f7ff fe90 	bl	800f59e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800f87e:	b003      	add	sp, #12
 800f880:	f85d fb04 	ldr.w	pc, [sp], #4

0800f884 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800f884:	b40c      	push	{r2, r3}
 800f886:	b507      	push	{r0, r1, r2, lr}
 800f888:	ab04      	add	r3, sp, #16
 800f88a:	f853 2b04 	ldr.w	r2, [r3], #4
 800f88e:	9301      	str	r3, [sp, #4]
 800f890:	f7ff ffef 	bl	800f872 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800f894:	b003      	add	sp, #12
 800f896:	f85d eb04 	ldr.w	lr, [sp], #4
 800f89a:	b002      	add	sp, #8
 800f89c:	4770      	bx	lr
	...

0800f8a0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800f8a0:	4b01      	ldr	r3, [pc, #4]	; (800f8a8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800f8a2:	6018      	str	r0, [r3, #0]
 800f8a4:	4770      	bx	lr
 800f8a6:	bf00      	nop
 800f8a8:	20013568 	.word	0x20013568

0800f8ac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800f8ac:	4b06      	ldr	r3, [pc, #24]	; (800f8c8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800f8ae:	881a      	ldrh	r2, [r3, #0]
 800f8b0:	4282      	cmp	r2, r0
 800f8b2:	d807      	bhi.n	800f8c4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800f8b4:	4b05      	ldr	r3, [pc, #20]	; (800f8cc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800f8b6:	881b      	ldrh	r3, [r3, #0]
 800f8b8:	4413      	add	r3, r2
 800f8ba:	4298      	cmp	r0, r3
 800f8bc:	bfac      	ite	ge
 800f8be:	2000      	movge	r0, #0
 800f8c0:	2001      	movlt	r0, #1
 800f8c2:	4770      	bx	lr
 800f8c4:	2000      	movs	r0, #0
 800f8c6:	4770      	bx	lr
 800f8c8:	20013588 	.word	0x20013588
 800f8cc:	2001358c 	.word	0x2001358c

0800f8d0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800f8d0:	b508      	push	{r3, lr}
 800f8d2:	4601      	mov	r1, r0
 800f8d4:	f7ff ffea 	bl	800f8ac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800f8d8:	b118      	cbz	r0, 800f8e2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800f8da:	4b02      	ldr	r3, [pc, #8]	; (800f8e4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800f8dc:	681b      	ldr	r3, [r3, #0]
 800f8de:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800f8e2:	bd08      	pop	{r3, pc}
 800f8e4:	2001356c 	.word	0x2001356c

0800f8e8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800f8e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f8ec:	4d28      	ldr	r5, [pc, #160]	; (800f990 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800f8ee:	682b      	ldr	r3, [r5, #0]
 800f8f0:	2b00      	cmp	r3, #0
 800f8f2:	d04a      	beq.n	800f98a <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800f8f4:	4a27      	ldr	r2, [pc, #156]	; (800f994 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800f8f6:	4e28      	ldr	r6, [pc, #160]	; (800f998 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800f8f8:	8810      	ldrh	r0, [r2, #0]
 800f8fa:	f8b6 8000 	ldrh.w	r8, [r6]
 800f8fe:	4c27      	ldr	r4, [pc, #156]	; (800f99c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800f900:	4f27      	ldr	r7, [pc, #156]	; (800f9a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800f902:	4440      	add	r0, r8
 800f904:	1c41      	adds	r1, r0, #1
 800f906:	f021 0101 	bic.w	r1, r1, #1
 800f90a:	0409      	lsls	r1, r1, #16
 800f90c:	0c09      	lsrs	r1, r1, #16
 800f90e:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800f912:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800f916:	eb03 020e 	add.w	r2, r3, lr
 800f91a:	eb0e 010c 	add.w	r1, lr, ip
 800f91e:	6022      	str	r2, [r4, #0]
 800f920:	185a      	adds	r2, r3, r1
 800f922:	603a      	str	r2, [r7, #0]
 800f924:	220e      	movs	r2, #14
 800f926:	fb02 f208 	mul.w	r2, r2, r8
 800f92a:	3203      	adds	r2, #3
 800f92c:	f022 0203 	bic.w	r2, r2, #3
 800f930:	4411      	add	r1, r2
 800f932:	440b      	add	r3, r1
 800f934:	491b      	ldr	r1, [pc, #108]	; (800f9a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800f936:	600b      	str	r3, [r1, #0]
 800f938:	491b      	ldr	r1, [pc, #108]	; (800f9a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800f93a:	2300      	movs	r3, #0
 800f93c:	800b      	strh	r3, [r1, #0]
 800f93e:	491b      	ldr	r1, [pc, #108]	; (800f9ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800f940:	6809      	ldr	r1, [r1, #0]
 800f942:	eba1 010e 	sub.w	r1, r1, lr
 800f946:	eba1 010c 	sub.w	r1, r1, ip
 800f94a:	1a8a      	subs	r2, r1, r2
 800f94c:	4918      	ldr	r1, [pc, #96]	; (800f9b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800f94e:	600a      	str	r2, [r1, #0]
 800f950:	4a18      	ldr	r2, [pc, #96]	; (800f9b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800f952:	469c      	mov	ip, r3
 800f954:	8013      	strh	r3, [r2, #0]
 800f956:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f95a:	4283      	cmp	r3, r0
 800f95c:	d10d      	bne.n	800f97a <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800f95e:	8835      	ldrh	r5, [r6, #0]
 800f960:	6838      	ldr	r0, [r7, #0]
 800f962:	2300      	movs	r3, #0
 800f964:	240e      	movs	r4, #14
 800f966:	429d      	cmp	r5, r3
 800f968:	d90f      	bls.n	800f98a <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800f96a:	fb04 0203 	mla	r2, r4, r3, r0
 800f96e:	3301      	adds	r3, #1
 800f970:	7b11      	ldrb	r1, [r2, #12]
 800f972:	f36f 1145 	bfc	r1, #5, #1
 800f976:	7311      	strb	r1, [r2, #12]
 800f978:	e7f5      	b.n	800f966 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800f97a:	682a      	ldr	r2, [r5, #0]
 800f97c:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800f980:	6822      	ldr	r2, [r4, #0]
 800f982:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800f986:	3301      	adds	r3, #1
 800f988:	e7e7      	b.n	800f95a <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800f98a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f98e:	bf00      	nop
 800f990:	2001356c 	.word	0x2001356c
 800f994:	20013588 	.word	0x20013588
 800f998:	2001358c 	.word	0x2001358c
 800f99c:	20013580 	.word	0x20013580
 800f9a0:	20013570 	.word	0x20013570
 800f9a4:	20013578 	.word	0x20013578
 800f9a8:	2001358a 	.word	0x2001358a
 800f9ac:	20013574 	.word	0x20013574
 800f9b0:	20013584 	.word	0x20013584
 800f9b4:	2001357c 	.word	0x2001357c

0800f9b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800f9b8:	b510      	push	{r4, lr}
 800f9ba:	4b10      	ldr	r3, [pc, #64]	; (800f9fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800f9bc:	681b      	ldr	r3, [r3, #0]
 800f9be:	b9db      	cbnz	r3, 800f9f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f9c0:	b1d1      	cbz	r1, 800f9f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f9c2:	4b0f      	ldr	r3, [pc, #60]	; (800fa00 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800f9c4:	801a      	strh	r2, [r3, #0]
 800f9c6:	4b0f      	ldr	r3, [pc, #60]	; (800fa04 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800f9c8:	881b      	ldrh	r3, [r3, #0]
 800f9ca:	b292      	uxth	r2, r2
 800f9cc:	240e      	movs	r4, #14
 800f9ce:	4413      	add	r3, r2
 800f9d0:	4362      	muls	r2, r4
 800f9d2:	2406      	movs	r4, #6
 800f9d4:	fb04 2203 	mla	r2, r4, r3, r2
 800f9d8:	428a      	cmp	r2, r1
 800f9da:	d305      	bcc.n	800f9e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800f9dc:	4b0a      	ldr	r3, [pc, #40]	; (800fa08 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800f9de:	4a0b      	ldr	r2, [pc, #44]	; (800fa0c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800f9e0:	480b      	ldr	r0, [pc, #44]	; (800fa10 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800f9e2:	2135      	movs	r1, #53	; 0x35
 800f9e4:	f00c f89a 	bl	801bb1c <__assert_func>
 800f9e8:	4b0a      	ldr	r3, [pc, #40]	; (800fa14 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800f9ea:	6019      	str	r1, [r3, #0]
 800f9ec:	4b0a      	ldr	r3, [pc, #40]	; (800fa18 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800f9ee:	6018      	str	r0, [r3, #0]
 800f9f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f9f4:	f7ff bf78 	b.w	800f8e8 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800f9f8:	bd10      	pop	{r4, pc}
 800f9fa:	bf00      	nop
 800f9fc:	20013578 	.word	0x20013578
 800fa00:	2001358c 	.word	0x2001358c
 800fa04:	20013588 	.word	0x20013588
 800fa08:	0802017e 	.word	0x0802017e
 800fa0c:	08020213 	.word	0x08020213
 800fa10:	08020159 	.word	0x08020159
 800fa14:	20013574 	.word	0x20013574
 800fa18:	2001356c 	.word	0x2001356c

0800fa1c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800fa1c:	b470      	push	{r4, r5, r6}
 800fa1e:	4c07      	ldr	r4, [pc, #28]	; (800fa3c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800fa20:	6826      	ldr	r6, [r4, #0]
 800fa22:	4605      	mov	r5, r0
 800fa24:	4610      	mov	r0, r2
 800fa26:	9a03      	ldr	r2, [sp, #12]
 800fa28:	b936      	cbnz	r6, 800fa38 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800fa2a:	6025      	str	r5, [r4, #0]
 800fa2c:	4c04      	ldr	r4, [pc, #16]	; (800fa40 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800fa2e:	8021      	strh	r1, [r4, #0]
 800fa30:	bc70      	pop	{r4, r5, r6}
 800fa32:	4619      	mov	r1, r3
 800fa34:	f7ff bfc0 	b.w	800f9b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800fa38:	bc70      	pop	{r4, r5, r6}
 800fa3a:	4770      	bx	lr
 800fa3c:	20013590 	.word	0x20013590
 800fa40:	20013588 	.word	0x20013588

0800fa44 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800fa44:	b508      	push	{r3, lr}
 800fa46:	4b14      	ldr	r3, [pc, #80]	; (800fa98 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800fa48:	6819      	ldr	r1, [r3, #0]
 800fa4a:	b931      	cbnz	r1, 800fa5a <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800fa4c:	4b13      	ldr	r3, [pc, #76]	; (800fa9c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800fa4e:	4a14      	ldr	r2, [pc, #80]	; (800faa0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800fa50:	4814      	ldr	r0, [pc, #80]	; (800faa4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800fa52:	f240 4185 	movw	r1, #1157	; 0x485
 800fa56:	f00c f861 	bl	801bb1c <__assert_func>
 800fa5a:	4a13      	ldr	r2, [pc, #76]	; (800faa8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800fa5c:	8803      	ldrh	r3, [r0, #0]
 800fa5e:	8812      	ldrh	r2, [r2, #0]
 800fa60:	4293      	cmp	r3, r2
 800fa62:	d204      	bcs.n	800fa6e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800fa64:	2214      	movs	r2, #20
 800fa66:	fb02 1303 	mla	r3, r2, r3, r1
 800fa6a:	8918      	ldrh	r0, [r3, #8]
 800fa6c:	bd08      	pop	{r3, pc}
 800fa6e:	490f      	ldr	r1, [pc, #60]	; (800faac <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800fa70:	8809      	ldrh	r1, [r1, #0]
 800fa72:	4411      	add	r1, r2
 800fa74:	428b      	cmp	r3, r1
 800fa76:	da06      	bge.n	800fa86 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800fa78:	1a9b      	subs	r3, r3, r2
 800fa7a:	4a0d      	ldr	r2, [pc, #52]	; (800fab0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800fa7c:	6812      	ldr	r2, [r2, #0]
 800fa7e:	210e      	movs	r1, #14
 800fa80:	fb01 2303 	mla	r3, r1, r3, r2
 800fa84:	e7f1      	b.n	800fa6a <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800fa86:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fa8a:	4293      	cmp	r3, r2
 800fa8c:	bf0a      	itet	eq
 800fa8e:	4b09      	ldreq	r3, [pc, #36]	; (800fab4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800fa90:	2000      	movne	r0, #0
 800fa92:	8818      	ldrheq	r0, [r3, #0]
 800fa94:	e7ea      	b.n	800fa6c <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800fa96:	bf00      	nop
 800fa98:	20013590 	.word	0x20013590
 800fa9c:	080201d7 	.word	0x080201d7
 800faa0:	080202c0 	.word	0x080202c0
 800faa4:	08020159 	.word	0x08020159
 800faa8:	20013588 	.word	0x20013588
 800faac:	2001358c 	.word	0x2001358c
 800fab0:	20013570 	.word	0x20013570
 800fab4:	200134fc 	.word	0x200134fc

0800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800fab8:	b508      	push	{r3, lr}
 800faba:	4b14      	ldr	r3, [pc, #80]	; (800fb0c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800fabc:	6819      	ldr	r1, [r3, #0]
 800fabe:	b931      	cbnz	r1, 800face <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800fac0:	4b13      	ldr	r3, [pc, #76]	; (800fb10 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800fac2:	4a14      	ldr	r2, [pc, #80]	; (800fb14 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800fac4:	4814      	ldr	r0, [pc, #80]	; (800fb18 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800fac6:	f240 4199 	movw	r1, #1177	; 0x499
 800faca:	f00c f827 	bl	801bb1c <__assert_func>
 800face:	4a13      	ldr	r2, [pc, #76]	; (800fb1c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800fad0:	8803      	ldrh	r3, [r0, #0]
 800fad2:	8812      	ldrh	r2, [r2, #0]
 800fad4:	4293      	cmp	r3, r2
 800fad6:	d204      	bcs.n	800fae2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800fad8:	2214      	movs	r2, #20
 800fada:	fb02 1303 	mla	r3, r2, r3, r1
 800fade:	8958      	ldrh	r0, [r3, #10]
 800fae0:	bd08      	pop	{r3, pc}
 800fae2:	490f      	ldr	r1, [pc, #60]	; (800fb20 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800fae4:	8809      	ldrh	r1, [r1, #0]
 800fae6:	4411      	add	r1, r2
 800fae8:	428b      	cmp	r3, r1
 800faea:	da06      	bge.n	800fafa <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800faec:	1a9b      	subs	r3, r3, r2
 800faee:	4a0d      	ldr	r2, [pc, #52]	; (800fb24 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800faf0:	6812      	ldr	r2, [r2, #0]
 800faf2:	210e      	movs	r1, #14
 800faf4:	fb01 2303 	mla	r3, r1, r3, r2
 800faf8:	e7f1      	b.n	800fade <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800fafa:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fafe:	4293      	cmp	r3, r2
 800fb00:	bf0a      	itet	eq
 800fb02:	4b09      	ldreq	r3, [pc, #36]	; (800fb28 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800fb04:	2000      	movne	r0, #0
 800fb06:	8818      	ldrheq	r0, [r3, #0]
 800fb08:	e7ea      	b.n	800fae0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800fb0a:	bf00      	nop
 800fb0c:	20013590 	.word	0x20013590
 800fb10:	080201d7 	.word	0x080201d7
 800fb14:	080202ec 	.word	0x080202ec
 800fb18:	08020159 	.word	0x08020159
 800fb1c:	20013588 	.word	0x20013588
 800fb20:	2001358c 	.word	0x2001358c
 800fb24:	20013570 	.word	0x20013570
 800fb28:	200134fe 	.word	0x200134fe

0800fb2c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800fb2c:	b510      	push	{r4, lr}
 800fb2e:	4b23      	ldr	r3, [pc, #140]	; (800fbbc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800fb30:	681c      	ldr	r4, [r3, #0]
 800fb32:	b934      	cbnz	r4, 800fb42 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800fb34:	4b22      	ldr	r3, [pc, #136]	; (800fbc0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800fb36:	4a23      	ldr	r2, [pc, #140]	; (800fbc4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800fb38:	4823      	ldr	r0, [pc, #140]	; (800fbc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800fb3a:	f240 41ad 	movw	r1, #1197	; 0x4ad
 800fb3e:	f00b ffed 	bl	801bb1c <__assert_func>
 800fb42:	4a22      	ldr	r2, [pc, #136]	; (800fbcc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800fb44:	880b      	ldrh	r3, [r1, #0]
 800fb46:	8812      	ldrh	r2, [r2, #0]
 800fb48:	4293      	cmp	r3, r2
 800fb4a:	d211      	bcs.n	800fb70 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800fb4c:	2214      	movs	r2, #20
 800fb4e:	fb02 4303 	mla	r3, r2, r3, r4
 800fb52:	8a1a      	ldrh	r2, [r3, #16]
 800fb54:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800fb58:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800fb5c:	8a5b      	ldrh	r3, [r3, #18]
 800fb5e:	8004      	strh	r4, [r0, #0]
 800fb60:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fb64:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800fb68:	8041      	strh	r1, [r0, #2]
 800fb6a:	8082      	strh	r2, [r0, #4]
 800fb6c:	80c3      	strh	r3, [r0, #6]
 800fb6e:	e00e      	b.n	800fb8e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800fb70:	4917      	ldr	r1, [pc, #92]	; (800fbd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800fb72:	8809      	ldrh	r1, [r1, #0]
 800fb74:	4411      	add	r1, r2
 800fb76:	428b      	cmp	r3, r1
 800fb78:	da0a      	bge.n	800fb90 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800fb7a:	1a9b      	subs	r3, r3, r2
 800fb7c:	4a15      	ldr	r2, [pc, #84]	; (800fbd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800fb7e:	6812      	ldr	r2, [r2, #0]
 800fb80:	210e      	movs	r1, #14
 800fb82:	fb01 2303 	mla	r3, r1, r3, r2
 800fb86:	681a      	ldr	r2, [r3, #0]
 800fb88:	6002      	str	r2, [r0, #0]
 800fb8a:	685a      	ldr	r2, [r3, #4]
 800fb8c:	6042      	str	r2, [r0, #4]
 800fb8e:	bd10      	pop	{r4, pc}
 800fb90:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fb94:	4293      	cmp	r3, r2
 800fb96:	d10b      	bne.n	800fbb0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800fb98:	4b0f      	ldr	r3, [pc, #60]	; (800fbd8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800fb9a:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fb9e:	4b0f      	ldr	r3, [pc, #60]	; (800fbdc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800fba0:	8081      	strh	r1, [r0, #4]
 800fba2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fba6:	80c2      	strh	r2, [r0, #6]
 800fba8:	2300      	movs	r3, #0
 800fbaa:	8003      	strh	r3, [r0, #0]
 800fbac:	8043      	strh	r3, [r0, #2]
 800fbae:	e7ee      	b.n	800fb8e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800fbb0:	2300      	movs	r3, #0
 800fbb2:	8003      	strh	r3, [r0, #0]
 800fbb4:	8043      	strh	r3, [r0, #2]
 800fbb6:	8083      	strh	r3, [r0, #4]
 800fbb8:	e7d8      	b.n	800fb6c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800fbba:	bf00      	nop
 800fbbc:	20013590 	.word	0x20013590
 800fbc0:	080201d7 	.word	0x080201d7
 800fbc4:	08020259 	.word	0x08020259
 800fbc8:	08020159 	.word	0x08020159
 800fbcc:	20013588 	.word	0x20013588
 800fbd0:	2001358c 	.word	0x2001358c
 800fbd4:	20013570 	.word	0x20013570
 800fbd8:	200134fc 	.word	0x200134fc
 800fbdc:	200134fe 	.word	0x200134fe

0800fbe0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800fbe0:	4b18      	ldr	r3, [pc, #96]	; (800fc44 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800fbe2:	681b      	ldr	r3, [r3, #0]
 800fbe4:	b34b      	cbz	r3, 800fc3a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800fbe6:	4a18      	ldr	r2, [pc, #96]	; (800fc48 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800fbe8:	8800      	ldrh	r0, [r0, #0]
 800fbea:	8812      	ldrh	r2, [r2, #0]
 800fbec:	4290      	cmp	r0, r2
 800fbee:	d211      	bcs.n	800fc14 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800fbf0:	2214      	movs	r2, #20
 800fbf2:	fb02 3300 	mla	r3, r2, r0, r3
 800fbf6:	8a1a      	ldrh	r2, [r3, #16]
 800fbf8:	8919      	ldrh	r1, [r3, #8]
 800fbfa:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fbfe:	428a      	cmp	r2, r1
 800fc00:	db1d      	blt.n	800fc3e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800fc02:	8a58      	ldrh	r0, [r3, #18]
 800fc04:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800fc08:	895b      	ldrh	r3, [r3, #10]
 800fc0a:	4298      	cmp	r0, r3
 800fc0c:	bfac      	ite	ge
 800fc0e:	2000      	movge	r0, #0
 800fc10:	2001      	movlt	r0, #1
 800fc12:	4770      	bx	lr
 800fc14:	4b0d      	ldr	r3, [pc, #52]	; (800fc4c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800fc16:	881b      	ldrh	r3, [r3, #0]
 800fc18:	4413      	add	r3, r2
 800fc1a:	4298      	cmp	r0, r3
 800fc1c:	da0d      	bge.n	800fc3a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800fc1e:	4b0c      	ldr	r3, [pc, #48]	; (800fc50 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800fc20:	681b      	ldr	r3, [r3, #0]
 800fc22:	1a80      	subs	r0, r0, r2
 800fc24:	220e      	movs	r2, #14
 800fc26:	fb02 3300 	mla	r3, r2, r0, r3
 800fc2a:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800fc2e:	891a      	ldrh	r2, [r3, #8]
 800fc30:	4291      	cmp	r1, r2
 800fc32:	db04      	blt.n	800fc3e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800fc34:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800fc38:	e7e6      	b.n	800fc08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800fc3a:	2000      	movs	r0, #0
 800fc3c:	4770      	bx	lr
 800fc3e:	2001      	movs	r0, #1
 800fc40:	4770      	bx	lr
 800fc42:	bf00      	nop
 800fc44:	20013590 	.word	0x20013590
 800fc48:	20013588 	.word	0x20013588
 800fc4c:	2001358c 	.word	0x2001358c
 800fc50:	20013570 	.word	0x20013570

0800fc54 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800fc54:	b508      	push	{r3, lr}
 800fc56:	4b12      	ldr	r3, [pc, #72]	; (800fca0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800fc58:	6819      	ldr	r1, [r3, #0]
 800fc5a:	b931      	cbnz	r1, 800fc6a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800fc5c:	4b11      	ldr	r3, [pc, #68]	; (800fca4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800fc5e:	4a12      	ldr	r2, [pc, #72]	; (800fca8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800fc60:	4812      	ldr	r0, [pc, #72]	; (800fcac <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800fc62:	f240 41d1 	movw	r1, #1233	; 0x4d1
 800fc66:	f00b ff59 	bl	801bb1c <__assert_func>
 800fc6a:	8803      	ldrh	r3, [r0, #0]
 800fc6c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fc70:	4293      	cmp	r3, r2
 800fc72:	d012      	beq.n	800fc9a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800fc74:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fc78:	4293      	cmp	r3, r2
 800fc7a:	d103      	bne.n	800fc84 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800fc7c:	4b0c      	ldr	r3, [pc, #48]	; (800fcb0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800fc7e:	681b      	ldr	r3, [r3, #0]
 800fc80:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800fc82:	bd08      	pop	{r3, pc}
 800fc84:	4a0b      	ldr	r2, [pc, #44]	; (800fcb4 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800fc86:	6812      	ldr	r2, [r2, #0]
 800fc88:	b11a      	cbz	r2, 800fc92 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800fc8a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800fc8e:	2800      	cmp	r0, #0
 800fc90:	d1f7      	bne.n	800fc82 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fc92:	2214      	movs	r2, #20
 800fc94:	4353      	muls	r3, r2
 800fc96:	58c8      	ldr	r0, [r1, r3]
 800fc98:	e7f3      	b.n	800fc82 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fc9a:	2000      	movs	r0, #0
 800fc9c:	e7f1      	b.n	800fc82 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fc9e:	bf00      	nop
 800fca0:	20013590 	.word	0x20013590
 800fca4:	080201d7 	.word	0x080201d7
 800fca8:	0802028f 	.word	0x0802028f
 800fcac:	08020159 	.word	0x08020159
 800fcb0:	20013508 	.word	0x20013508
 800fcb4:	2001356c 	.word	0x2001356c

0800fcb8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800fcb8:	8802      	ldrh	r2, [r0, #0]
 800fcba:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800fcbe:	429a      	cmp	r2, r3
 800fcc0:	d845      	bhi.n	800fd4e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fcc2:	4b24      	ldr	r3, [pc, #144]	; (800fd54 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800fcc4:	8818      	ldrh	r0, [r3, #0]
 800fcc6:	4282      	cmp	r2, r0
 800fcc8:	d221      	bcs.n	800fd0e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 800fcca:	4b23      	ldr	r3, [pc, #140]	; (800fd58 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800fccc:	6819      	ldr	r1, [r3, #0]
 800fcce:	2314      	movs	r3, #20
 800fcd0:	fb03 1302 	mla	r3, r3, r2, r1
 800fcd4:	6858      	ldr	r0, [r3, #4]
 800fcd6:	2800      	cmp	r0, #0
 800fcd8:	d03a      	beq.n	800fd50 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fcda:	4920      	ldr	r1, [pc, #128]	; (800fd5c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fcdc:	6809      	ldr	r1, [r1, #0]
 800fcde:	2900      	cmp	r1, #0
 800fce0:	d036      	beq.n	800fd50 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fce2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800fce6:	2900      	cmp	r1, #0
 800fce8:	d032      	beq.n	800fd50 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fcea:	891a      	ldrh	r2, [r3, #8]
 800fcec:	8958      	ldrh	r0, [r3, #10]
 800fcee:	4350      	muls	r0, r2
 800fcf0:	7c5a      	ldrb	r2, [r3, #17]
 800fcf2:	7cdb      	ldrb	r3, [r3, #19]
 800fcf4:	0952      	lsrs	r2, r2, #5
 800fcf6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800fcfa:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800fcfe:	2b0b      	cmp	r3, #11
 800fd00:	bf18      	it	ne
 800fd02:	0040      	lslne	r0, r0, #1
 800fd04:	3003      	adds	r0, #3
 800fd06:	f020 0003 	bic.w	r0, r0, #3
 800fd0a:	4408      	add	r0, r1
 800fd0c:	4770      	bx	lr
 800fd0e:	4b14      	ldr	r3, [pc, #80]	; (800fd60 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800fd10:	881b      	ldrh	r3, [r3, #0]
 800fd12:	4403      	add	r3, r0
 800fd14:	429a      	cmp	r2, r3
 800fd16:	da1a      	bge.n	800fd4e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fd18:	4b12      	ldr	r3, [pc, #72]	; (800fd64 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 800fd1a:	681b      	ldr	r3, [r3, #0]
 800fd1c:	1a10      	subs	r0, r2, r0
 800fd1e:	210e      	movs	r1, #14
 800fd20:	fb01 3000 	mla	r0, r1, r0, r3
 800fd24:	7b03      	ldrb	r3, [r0, #12]
 800fd26:	f003 031f 	and.w	r3, r3, #31
 800fd2a:	2b0b      	cmp	r3, #11
 800fd2c:	d10b      	bne.n	800fd46 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800fd2e:	8903      	ldrh	r3, [r0, #8]
 800fd30:	8940      	ldrh	r0, [r0, #10]
 800fd32:	4358      	muls	r0, r3
 800fd34:	4b09      	ldr	r3, [pc, #36]	; (800fd5c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fd36:	6819      	ldr	r1, [r3, #0]
 800fd38:	3003      	adds	r0, #3
 800fd3a:	f020 0303 	bic.w	r3, r0, #3
 800fd3e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800fd42:	4418      	add	r0, r3
 800fd44:	4770      	bx	lr
 800fd46:	2b0d      	cmp	r3, #13
 800fd48:	d101      	bne.n	800fd4e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fd4a:	300d      	adds	r0, #13
 800fd4c:	4770      	bx	lr
 800fd4e:	2000      	movs	r0, #0
 800fd50:	4770      	bx	lr
 800fd52:	bf00      	nop
 800fd54:	20013588 	.word	0x20013588
 800fd58:	20013590 	.word	0x20013590
 800fd5c:	2001356c 	.word	0x2001356c
 800fd60:	2001358c 	.word	0x2001358c
 800fd64:	20013570 	.word	0x20013570

0800fd68 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800fd68:	b510      	push	{r4, lr}
 800fd6a:	4b17      	ldr	r3, [pc, #92]	; (800fdc8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 800fd6c:	6819      	ldr	r1, [r3, #0]
 800fd6e:	8803      	ldrh	r3, [r0, #0]
 800fd70:	b1e9      	cbz	r1, 800fdae <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800fd72:	4a16      	ldr	r2, [pc, #88]	; (800fdcc <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 800fd74:	8812      	ldrh	r2, [r2, #0]
 800fd76:	429a      	cmp	r2, r3
 800fd78:	d90a      	bls.n	800fd90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 800fd7a:	2214      	movs	r2, #20
 800fd7c:	fb02 1303 	mla	r3, r2, r3, r1
 800fd80:	7c58      	ldrb	r0, [r3, #17]
 800fd82:	0942      	lsrs	r2, r0, #5
 800fd84:	7cd8      	ldrb	r0, [r3, #19]
 800fd86:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800fd8a:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800fd8e:	bd10      	pop	{r4, pc}
 800fd90:	490f      	ldr	r1, [pc, #60]	; (800fdd0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800fd92:	8809      	ldrh	r1, [r1, #0]
 800fd94:	4411      	add	r1, r2
 800fd96:	428b      	cmp	r3, r1
 800fd98:	da09      	bge.n	800fdae <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800fd9a:	1a9b      	subs	r3, r3, r2
 800fd9c:	4a0d      	ldr	r2, [pc, #52]	; (800fdd4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800fd9e:	6812      	ldr	r2, [r2, #0]
 800fda0:	210e      	movs	r1, #14
 800fda2:	fb01 2303 	mla	r3, r1, r3, r2
 800fda6:	7b18      	ldrb	r0, [r3, #12]
 800fda8:	f000 001f 	and.w	r0, r0, #31
 800fdac:	e7ef      	b.n	800fd8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fdae:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fdb2:	4293      	cmp	r3, r2
 800fdb4:	d106      	bne.n	800fdc4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800fdb6:	f7fa f83f 	bl	8009e38 <_ZN8touchgfx3HAL3lcdEv>
 800fdba:	6803      	ldr	r3, [r0, #0]
 800fdbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fdc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fdc2:	4718      	bx	r3
 800fdc4:	2000      	movs	r0, #0
 800fdc6:	e7e2      	b.n	800fd8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fdc8:	20013590 	.word	0x20013590
 800fdcc:	20013588 	.word	0x20013588
 800fdd0:	2001358c 	.word	0x2001358c
 800fdd4:	20013570 	.word	0x20013570

0800fdd8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800fdd8:	2010      	movs	r0, #16
 800fdda:	4770      	bx	lr

0800fddc <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800fddc:	2000      	movs	r0, #0
 800fdde:	4770      	bx	lr

0800fde0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800fde0:	2bff      	cmp	r3, #255	; 0xff
 800fde2:	d050      	beq.n	800fe86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800fde4:	2a0b      	cmp	r2, #11
 800fde6:	d04a      	beq.n	800fe7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fde8:	d80e      	bhi.n	800fe08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800fdea:	2a03      	cmp	r2, #3
 800fdec:	d03f      	beq.n	800fe6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800fdee:	d804      	bhi.n	800fdfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800fdf0:	2a01      	cmp	r2, #1
 800fdf2:	d03e      	beq.n	800fe72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800fdf4:	d93f      	bls.n	800fe76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800fdf6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800fdf8:	4770      	bx	lr
 800fdfa:	2a09      	cmp	r2, #9
 800fdfc:	d03f      	beq.n	800fe7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fdfe:	d83c      	bhi.n	800fe7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fe00:	2a08      	cmp	r2, #8
 800fe02:	d03a      	beq.n	800fe7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fe04:	2000      	movs	r0, #0
 800fe06:	4770      	bx	lr
 800fe08:	2a2f      	cmp	r2, #47	; 0x2f
 800fe0a:	d024      	beq.n	800fe56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800fe0c:	d80d      	bhi.n	800fe2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800fe0e:	2a2d      	cmp	r2, #45	; 0x2d
 800fe10:	d014      	beq.n	800fe3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800fe12:	d826      	bhi.n	800fe62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800fe14:	2a2c      	cmp	r2, #44	; 0x2c
 800fe16:	d1f5      	bne.n	800fe04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe18:	684b      	ldr	r3, [r1, #4]
 800fe1a:	781b      	ldrb	r3, [r3, #0]
 800fe1c:	2b01      	cmp	r3, #1
 800fe1e:	d018      	beq.n	800fe52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800fe20:	d323      	bcc.n	800fe6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800fe22:	2b02      	cmp	r3, #2
 800fe24:	d1ee      	bne.n	800fe04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe26:	6880      	ldr	r0, [r0, #8]
 800fe28:	4770      	bx	lr
 800fe2a:	2a31      	cmp	r2, #49	; 0x31
 800fe2c:	d004      	beq.n	800fe38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800fe2e:	d328      	bcc.n	800fe82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fe30:	2a32      	cmp	r2, #50	; 0x32
 800fe32:	d026      	beq.n	800fe82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fe34:	2a33      	cmp	r2, #51	; 0x33
 800fe36:	d1e5      	bne.n	800fe04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe38:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800fe3a:	4770      	bx	lr
 800fe3c:	684b      	ldr	r3, [r1, #4]
 800fe3e:	781b      	ldrb	r3, [r3, #0]
 800fe40:	2b01      	cmp	r3, #1
 800fe42:	d004      	beq.n	800fe4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800fe44:	d30b      	bcc.n	800fe5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800fe46:	2b02      	cmp	r3, #2
 800fe48:	d1dc      	bne.n	800fe04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe4a:	6900      	ldr	r0, [r0, #16]
 800fe4c:	4770      	bx	lr
 800fe4e:	6a00      	ldr	r0, [r0, #32]
 800fe50:	4770      	bx	lr
 800fe52:	6980      	ldr	r0, [r0, #24]
 800fe54:	4770      	bx	lr
 800fe56:	684b      	ldr	r3, [r1, #4]
 800fe58:	781b      	ldrb	r3, [r3, #0]
 800fe5a:	2b00      	cmp	r3, #0
 800fe5c:	d1d2      	bne.n	800fe04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe5e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800fe60:	4770      	bx	lr
 800fe62:	684b      	ldr	r3, [r1, #4]
 800fe64:	781b      	ldrb	r3, [r3, #0]
 800fe66:	2b00      	cmp	r3, #0
 800fe68:	d1cc      	bne.n	800fe04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe6a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800fe6c:	4770      	bx	lr
 800fe6e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800fe70:	4770      	bx	lr
 800fe72:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800fe74:	4770      	bx	lr
 800fe76:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800fe78:	4770      	bx	lr
 800fe7a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800fe7c:	4770      	bx	lr
 800fe7e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800fe80:	4770      	bx	lr
 800fe82:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800fe84:	4770      	bx	lr
 800fe86:	2a0b      	cmp	r2, #11
 800fe88:	d049      	beq.n	800ff1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fe8a:	d80e      	bhi.n	800feaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800fe8c:	2a03      	cmp	r2, #3
 800fe8e:	d040      	beq.n	800ff12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800fe90:	d804      	bhi.n	800fe9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800fe92:	2a01      	cmp	r2, #1
 800fe94:	d03f      	beq.n	800ff16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800fe96:	d940      	bls.n	800ff1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800fe98:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800fe9a:	4770      	bx	lr
 800fe9c:	2a09      	cmp	r2, #9
 800fe9e:	d03e      	beq.n	800ff1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fea0:	d801      	bhi.n	800fea6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800fea2:	2a08      	cmp	r2, #8
 800fea4:	d1ae      	bne.n	800fe04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fea6:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800fea8:	4770      	bx	lr
 800feaa:	2a2f      	cmp	r2, #47	; 0x2f
 800feac:	d024      	beq.n	800fef8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800feae:	d80d      	bhi.n	800fecc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800feb0:	2a2d      	cmp	r2, #45	; 0x2d
 800feb2:	d014      	beq.n	800fede <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800feb4:	d826      	bhi.n	800ff04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800feb6:	2a2c      	cmp	r2, #44	; 0x2c
 800feb8:	d1a4      	bne.n	800fe04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800feba:	684b      	ldr	r3, [r1, #4]
 800febc:	781b      	ldrb	r3, [r3, #0]
 800febe:	2b01      	cmp	r3, #1
 800fec0:	d018      	beq.n	800fef4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800fec2:	d324      	bcc.n	800ff0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800fec4:	2b02      	cmp	r3, #2
 800fec6:	d19d      	bne.n	800fe04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fec8:	68c0      	ldr	r0, [r0, #12]
 800feca:	4770      	bx	lr
 800fecc:	2a31      	cmp	r2, #49	; 0x31
 800fece:	d004      	beq.n	800feda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800fed0:	d327      	bcc.n	800ff22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fed2:	2a32      	cmp	r2, #50	; 0x32
 800fed4:	d025      	beq.n	800ff22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fed6:	2a33      	cmp	r2, #51	; 0x33
 800fed8:	d194      	bne.n	800fe04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800feda:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800fedc:	4770      	bx	lr
 800fede:	684b      	ldr	r3, [r1, #4]
 800fee0:	781b      	ldrb	r3, [r3, #0]
 800fee2:	2b01      	cmp	r3, #1
 800fee4:	d004      	beq.n	800fef0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800fee6:	d30b      	bcc.n	800ff00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800fee8:	2b02      	cmp	r3, #2
 800feea:	d18b      	bne.n	800fe04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800feec:	6940      	ldr	r0, [r0, #20]
 800feee:	4770      	bx	lr
 800fef0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800fef2:	4770      	bx	lr
 800fef4:	69c0      	ldr	r0, [r0, #28]
 800fef6:	4770      	bx	lr
 800fef8:	684b      	ldr	r3, [r1, #4]
 800fefa:	781b      	ldrb	r3, [r3, #0]
 800fefc:	2b00      	cmp	r3, #0
 800fefe:	d181      	bne.n	800fe04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ff00:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800ff02:	4770      	bx	lr
 800ff04:	684b      	ldr	r3, [r1, #4]
 800ff06:	781b      	ldrb	r3, [r3, #0]
 800ff08:	2b00      	cmp	r3, #0
 800ff0a:	f47f af7b 	bne.w	800fe04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ff0e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800ff10:	4770      	bx	lr
 800ff12:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800ff14:	4770      	bx	lr
 800ff16:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800ff18:	4770      	bx	lr
 800ff1a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800ff1c:	4770      	bx	lr
 800ff1e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800ff20:	4770      	bx	lr
 800ff22:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800ff24:	4770      	bx	lr

0800ff26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ff26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff2a:	b087      	sub	sp, #28
 800ff2c:	9815      	ldr	r0, [sp, #84]	; 0x54
 800ff2e:	9205      	str	r2, [sp, #20]
 800ff30:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800ff34:	9202      	str	r2, [sp, #8]
 800ff36:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800ff3a:	9101      	str	r1, [sp, #4]
 800ff3c:	6841      	ldr	r1, [r0, #4]
 800ff3e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800ff42:	fb01 2404 	mla	r4, r1, r4, r2
 800ff46:	6802      	ldr	r2, [r0, #0]
 800ff48:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ff4c:	f8de 2000 	ldr.w	r2, [lr]
 800ff50:	9203      	str	r2, [sp, #12]
 800ff52:	f8de 2004 	ldr.w	r2, [lr, #4]
 800ff56:	3204      	adds	r2, #4
 800ff58:	9204      	str	r2, [sp, #16]
 800ff5a:	9a02      	ldr	r2, [sp, #8]
 800ff5c:	43d6      	mvns	r6, r2
 800ff5e:	b2f6      	uxtb	r6, r6
 800ff60:	9a01      	ldr	r2, [sp, #4]
 800ff62:	2a00      	cmp	r2, #0
 800ff64:	dc03      	bgt.n	800ff6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800ff66:	9a05      	ldr	r2, [sp, #20]
 800ff68:	2a00      	cmp	r2, #0
 800ff6a:	f340 8129 	ble.w	80101c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800ff6e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ff70:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800ff74:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800ff78:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ff7c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ff7e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ff82:	2b00      	cmp	r3, #0
 800ff84:	dd0e      	ble.n	800ffa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800ff86:	1408      	asrs	r0, r1, #16
 800ff88:	d405      	bmi.n	800ff96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ff8a:	4560      	cmp	r0, ip
 800ff8c:	da03      	bge.n	800ff96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ff8e:	1410      	asrs	r0, r2, #16
 800ff90:	d401      	bmi.n	800ff96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ff92:	42b8      	cmp	r0, r7
 800ff94:	db07      	blt.n	800ffa6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800ff96:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ff98:	4401      	add	r1, r0
 800ff9a:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ff9c:	3b01      	subs	r3, #1
 800ff9e:	4402      	add	r2, r0
 800ffa0:	3402      	adds	r4, #2
 800ffa2:	e7ee      	b.n	800ff82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800ffa4:	d071      	beq.n	801008a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800ffa6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ffa8:	1e58      	subs	r0, r3, #1
 800ffaa:	fb05 1500 	mla	r5, r5, r0, r1
 800ffae:	142d      	asrs	r5, r5, #16
 800ffb0:	d45f      	bmi.n	8010072 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ffb2:	4565      	cmp	r5, ip
 800ffb4:	da5d      	bge.n	8010072 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ffb6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ffb8:	fb05 2000 	mla	r0, r5, r0, r2
 800ffbc:	1400      	asrs	r0, r0, #16
 800ffbe:	d458      	bmi.n	8010072 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ffc0:	42b8      	cmp	r0, r7
 800ffc2:	da56      	bge.n	8010072 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ffc4:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800ffc8:	4699      	mov	r9, r3
 800ffca:	46a2      	mov	sl, r4
 800ffcc:	f1b9 0f00 	cmp.w	r9, #0
 800ffd0:	dd57      	ble.n	8010082 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800ffd2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800ffd6:	9803      	ldr	r0, [sp, #12]
 800ffd8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800ffdc:	140d      	asrs	r5, r1, #16
 800ffde:	fb07 000c 	mla	r0, r7, ip, r0
 800ffe2:	f109 39ff 	add.w	r9, r9, #4294967295
 800ffe6:	5d40      	ldrb	r0, [r0, r5]
 800ffe8:	9d04      	ldr	r5, [sp, #16]
 800ffea:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800ffee:	f8ba 5000 	ldrh.w	r5, [sl]
 800fff2:	122f      	asrs	r7, r5, #8
 800fff4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fff8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fffc:	fb17 f706 	smulbb	r7, r7, r6
 8010000:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8010004:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010008:	00ed      	lsls	r5, r5, #3
 801000a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801000e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8010012:	10c7      	asrs	r7, r0, #3
 8010014:	b2ed      	uxtb	r5, r5
 8010016:	00c0      	lsls	r0, r0, #3
 8010018:	fb18 f806 	smulbb	r8, r8, r6
 801001c:	fb15 f506 	smulbb	r5, r5, r6
 8010020:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010024:	b2c0      	uxtb	r0, r0
 8010026:	fa1f fc8c 	uxth.w	ip, ip
 801002a:	fb07 870b 	mla	r7, r7, fp, r8
 801002e:	fb00 500b 	mla	r0, r0, fp, r5
 8010032:	b280      	uxth	r0, r0
 8010034:	b2bf      	uxth	r7, r7
 8010036:	f10c 0501 	add.w	r5, ip, #1
 801003a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801003e:	f107 0801 	add.w	r8, r7, #1
 8010042:	1c45      	adds	r5, r0, #1
 8010044:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8010048:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801004c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801004e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010052:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010056:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801005a:	ea45 0c0c 	orr.w	ip, r5, ip
 801005e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8010062:	4401      	add	r1, r0
 8010064:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010066:	ea4c 0c08 	orr.w	ip, ip, r8
 801006a:	f82a cb02 	strh.w	ip, [sl], #2
 801006e:	4402      	add	r2, r0
 8010070:	e7ac      	b.n	800ffcc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8010072:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8010076:	f04f 0800 	mov.w	r8, #0
 801007a:	eb03 0008 	add.w	r0, r3, r8
 801007e:	2800      	cmp	r0, #0
 8010080:	dc41      	bgt.n	8010106 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010082:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010086:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801008a:	9b01      	ldr	r3, [sp, #4]
 801008c:	2b00      	cmp	r3, #0
 801008e:	f340 8097 	ble.w	80101c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8010092:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010096:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801009a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801009e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80100a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80100a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80100a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80100ac:	eef0 6a62 	vmov.f32	s13, s5
 80100b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80100b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80100b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80100bc:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80100c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80100c4:	eef0 6a43 	vmov.f32	s13, s6
 80100c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80100cc:	ee12 2a90 	vmov	r2, s5
 80100d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80100d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80100d8:	ee13 2a10 	vmov	r2, s6
 80100dc:	9313      	str	r3, [sp, #76]	; 0x4c
 80100de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80100e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80100e4:	9314      	str	r3, [sp, #80]	; 0x50
 80100e6:	9b01      	ldr	r3, [sp, #4]
 80100e8:	9a05      	ldr	r2, [sp, #20]
 80100ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80100ee:	3b01      	subs	r3, #1
 80100f0:	9301      	str	r3, [sp, #4]
 80100f2:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80100f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80100f8:	eeb0 3a67 	vmov.f32	s6, s15
 80100fc:	bf08      	it	eq
 80100fe:	4613      	moveq	r3, r2
 8010100:	eef0 2a47 	vmov.f32	s5, s14
 8010104:	e72c      	b.n	800ff60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8010106:	140f      	asrs	r7, r1, #16
 8010108:	d453      	bmi.n	80101b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801010a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801010e:	42bd      	cmp	r5, r7
 8010110:	dd4f      	ble.n	80101b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010112:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010116:	d44c      	bmi.n	80101b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010118:	f8de 000c 	ldr.w	r0, [lr, #12]
 801011c:	4560      	cmp	r0, ip
 801011e:	dd48      	ble.n	80101b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010120:	9803      	ldr	r0, [sp, #12]
 8010122:	b22d      	sxth	r5, r5
 8010124:	fb0c 0505 	mla	r5, ip, r5, r0
 8010128:	5de8      	ldrb	r0, [r5, r7]
 801012a:	9d04      	ldr	r5, [sp, #16]
 801012c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8010130:	f06f 0501 	mvn.w	r5, #1
 8010134:	fb05 fb08 	mul.w	fp, r5, r8
 8010138:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801013c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8010140:	122f      	asrs	r7, r5, #8
 8010142:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010146:	fb17 f706 	smulbb	r7, r7, r6
 801014a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801014e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010152:	00ed      	lsls	r5, r5, #3
 8010154:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8010158:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801015c:	10c7      	asrs	r7, r0, #3
 801015e:	b2ed      	uxtb	r5, r5
 8010160:	00c0      	lsls	r0, r0, #3
 8010162:	fb19 f906 	smulbb	r9, r9, r6
 8010166:	fb15 f506 	smulbb	r5, r5, r6
 801016a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801016e:	b2c0      	uxtb	r0, r0
 8010170:	fa1f fc8c 	uxth.w	ip, ip
 8010174:	fb07 970a 	mla	r7, r7, sl, r9
 8010178:	fb00 500a 	mla	r0, r0, sl, r5
 801017c:	b2bf      	uxth	r7, r7
 801017e:	b280      	uxth	r0, r0
 8010180:	f10c 0501 	add.w	r5, ip, #1
 8010184:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010188:	f107 0901 	add.w	r9, r7, #1
 801018c:	1c45      	adds	r5, r0, #1
 801018e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8010192:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8010196:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801019a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801019e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80101a2:	ea45 0c0c 	orr.w	ip, r5, ip
 80101a6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80101aa:	ea4c 0c09 	orr.w	ip, ip, r9
 80101ae:	f824 c00b 	strh.w	ip, [r4, fp]
 80101b2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80101b4:	4401      	add	r1, r0
 80101b6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80101b8:	f108 38ff 	add.w	r8, r8, #4294967295
 80101bc:	4402      	add	r2, r0
 80101be:	e75c      	b.n	801007a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80101c0:	b007      	add	sp, #28
 80101c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080101c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80101c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101ca:	b085      	sub	sp, #20
 80101cc:	4693      	mov	fp, r2
 80101ce:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80101d0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80101d2:	6870      	ldr	r0, [r6, #4]
 80101d4:	9100      	str	r1, [sp, #0]
 80101d6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80101da:	fb00 2404 	mla	r4, r0, r4, r2
 80101de:	6832      	ldr	r2, [r6, #0]
 80101e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80101e4:	682a      	ldr	r2, [r5, #0]
 80101e6:	9201      	str	r2, [sp, #4]
 80101e8:	686a      	ldr	r2, [r5, #4]
 80101ea:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80101ee:	3204      	adds	r2, #4
 80101f0:	9202      	str	r2, [sp, #8]
 80101f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80101f6:	9a00      	ldr	r2, [sp, #0]
 80101f8:	2a00      	cmp	r2, #0
 80101fa:	dc03      	bgt.n	8010204 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80101fc:	f1bb 0f00 	cmp.w	fp, #0
 8010200:	f340 80a0 	ble.w	8010344 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8010204:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010206:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801020a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801020e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010212:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010214:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010218:	2b00      	cmp	r3, #0
 801021a:	dd0c      	ble.n	8010236 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801021c:	1406      	asrs	r6, r0, #16
 801021e:	d405      	bmi.n	801022c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010220:	454e      	cmp	r6, r9
 8010222:	da03      	bge.n	801022c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010224:	1416      	asrs	r6, r2, #16
 8010226:	d401      	bmi.n	801022c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010228:	4546      	cmp	r6, r8
 801022a:	db05      	blt.n	8010238 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801022c:	4470      	add	r0, lr
 801022e:	4462      	add	r2, ip
 8010230:	3b01      	subs	r3, #1
 8010232:	3402      	adds	r4, #2
 8010234:	e7f0      	b.n	8010218 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8010236:	d00f      	beq.n	8010258 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8010238:	1e5e      	subs	r6, r3, #1
 801023a:	fb0e 0706 	mla	r7, lr, r6, r0
 801023e:	143f      	asrs	r7, r7, #16
 8010240:	d541      	bpl.n	80102c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8010242:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8010246:	4698      	mov	r8, r3
 8010248:	9603      	str	r6, [sp, #12]
 801024a:	f1b8 0f00 	cmp.w	r8, #0
 801024e:	dc59      	bgt.n	8010304 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8010250:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010254:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010258:	9b00      	ldr	r3, [sp, #0]
 801025a:	2b00      	cmp	r3, #0
 801025c:	dd72      	ble.n	8010344 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801025e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010262:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010266:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801026a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801026c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010270:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010274:	eeb0 6a62 	vmov.f32	s12, s5
 8010278:	ee61 7a27 	vmul.f32	s15, s2, s15
 801027c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010280:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010284:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010288:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801028c:	eeb0 6a43 	vmov.f32	s12, s6
 8010290:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010294:	ee12 2a90 	vmov	r2, s5
 8010298:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801029c:	fb92 fef3 	sdiv	lr, r2, r3
 80102a0:	ee13 2a10 	vmov	r2, s6
 80102a4:	fb92 fcf3 	sdiv	ip, r2, r3
 80102a8:	9b00      	ldr	r3, [sp, #0]
 80102aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80102ae:	3b01      	subs	r3, #1
 80102b0:	9300      	str	r3, [sp, #0]
 80102b2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80102b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80102b8:	eeb0 3a67 	vmov.f32	s6, s15
 80102bc:	bf08      	it	eq
 80102be:	465b      	moveq	r3, fp
 80102c0:	eef0 2a47 	vmov.f32	s5, s14
 80102c4:	e797      	b.n	80101f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80102c6:	454f      	cmp	r7, r9
 80102c8:	dabb      	bge.n	8010242 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80102ca:	fb0c 2606 	mla	r6, ip, r6, r2
 80102ce:	1436      	asrs	r6, r6, #16
 80102d0:	d4b7      	bmi.n	8010242 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80102d2:	4546      	cmp	r6, r8
 80102d4:	dab5      	bge.n	8010242 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80102d6:	461e      	mov	r6, r3
 80102d8:	46a0      	mov	r8, r4
 80102da:	2e00      	cmp	r6, #0
 80102dc:	ddb8      	ble.n	8010250 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80102de:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80102e2:	9901      	ldr	r1, [sp, #4]
 80102e4:	1417      	asrs	r7, r2, #16
 80102e6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80102ea:	fb0a 1707 	mla	r7, sl, r7, r1
 80102ee:	9902      	ldr	r1, [sp, #8]
 80102f0:	f817 7009 	ldrb.w	r7, [r7, r9]
 80102f4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80102f8:	f828 7b02 	strh.w	r7, [r8], #2
 80102fc:	4470      	add	r0, lr
 80102fe:	4462      	add	r2, ip
 8010300:	3e01      	subs	r6, #1
 8010302:	e7ea      	b.n	80102da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8010304:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010308:	d417      	bmi.n	801033a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801030a:	68ae      	ldr	r6, [r5, #8]
 801030c:	454e      	cmp	r6, r9
 801030e:	dd14      	ble.n	801033a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010310:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8010314:	d411      	bmi.n	801033a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010316:	68ef      	ldr	r7, [r5, #12]
 8010318:	4557      	cmp	r7, sl
 801031a:	dd0e      	ble.n	801033a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801031c:	9f01      	ldr	r7, [sp, #4]
 801031e:	b236      	sxth	r6, r6
 8010320:	fb0a 7606 	mla	r6, sl, r6, r7
 8010324:	9f02      	ldr	r7, [sp, #8]
 8010326:	f816 6009 	ldrb.w	r6, [r6, r9]
 801032a:	f06f 0101 	mvn.w	r1, #1
 801032e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8010332:	fb01 f608 	mul.w	r6, r1, r8
 8010336:	9903      	ldr	r1, [sp, #12]
 8010338:	538f      	strh	r7, [r1, r6]
 801033a:	4470      	add	r0, lr
 801033c:	4462      	add	r2, ip
 801033e:	f108 38ff 	add.w	r8, r8, #4294967295
 8010342:	e782      	b.n	801024a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010344:	b005      	add	sp, #20
 8010346:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801034a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801034a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801034e:	b087      	sub	sp, #28
 8010350:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010352:	9205      	str	r2, [sp, #20]
 8010354:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010358:	9203      	str	r2, [sp, #12]
 801035a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801035e:	9102      	str	r1, [sp, #8]
 8010360:	6861      	ldr	r1, [r4, #4]
 8010362:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8010366:	fb01 2000 	mla	r0, r1, r0, r2
 801036a:	6822      	ldr	r2, [r4, #0]
 801036c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8010370:	9200      	str	r2, [sp, #0]
 8010372:	f8dc 2000 	ldr.w	r2, [ip]
 8010376:	9204      	str	r2, [sp, #16]
 8010378:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801037c:	3204      	adds	r2, #4
 801037e:	9201      	str	r2, [sp, #4]
 8010380:	9a03      	ldr	r2, [sp, #12]
 8010382:	43d5      	mvns	r5, r2
 8010384:	b2ed      	uxtb	r5, r5
 8010386:	9a02      	ldr	r2, [sp, #8]
 8010388:	2a00      	cmp	r2, #0
 801038a:	dc03      	bgt.n	8010394 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801038c:	9a05      	ldr	r2, [sp, #20]
 801038e:	2a00      	cmp	r2, #0
 8010390:	f340 812c 	ble.w	80105ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8010394:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010396:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801039a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801039e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80103a2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80103a4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80103a8:	2b00      	cmp	r3, #0
 80103aa:	dd10      	ble.n	80103ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80103ac:	140c      	asrs	r4, r1, #16
 80103ae:	d405      	bmi.n	80103bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80103b0:	4574      	cmp	r4, lr
 80103b2:	da03      	bge.n	80103bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80103b4:	1414      	asrs	r4, r2, #16
 80103b6:	d401      	bmi.n	80103bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80103b8:	42bc      	cmp	r4, r7
 80103ba:	db09      	blt.n	80103d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80103bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80103be:	9800      	ldr	r0, [sp, #0]
 80103c0:	4421      	add	r1, r4
 80103c2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80103c4:	3002      	adds	r0, #2
 80103c6:	4422      	add	r2, r4
 80103c8:	3b01      	subs	r3, #1
 80103ca:	9000      	str	r0, [sp, #0]
 80103cc:	e7ec      	b.n	80103a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80103ce:	d071      	beq.n	80104b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80103d0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80103d2:	1e5c      	subs	r4, r3, #1
 80103d4:	fb06 1604 	mla	r6, r6, r4, r1
 80103d8:	1436      	asrs	r6, r6, #16
 80103da:	d45d      	bmi.n	8010498 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80103dc:	4576      	cmp	r6, lr
 80103de:	da5b      	bge.n	8010498 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80103e0:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80103e2:	fb06 2404 	mla	r4, r6, r4, r2
 80103e6:	1424      	asrs	r4, r4, #16
 80103e8:	d456      	bmi.n	8010498 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80103ea:	42bc      	cmp	r4, r7
 80103ec:	da54      	bge.n	8010498 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80103ee:	f8dd 9000 	ldr.w	r9, [sp]
 80103f2:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80103f6:	4698      	mov	r8, r3
 80103f8:	f1b8 0f00 	cmp.w	r8, #0
 80103fc:	dd54      	ble.n	80104a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80103fe:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010402:	9804      	ldr	r0, [sp, #16]
 8010404:	1414      	asrs	r4, r2, #16
 8010406:	fb07 0404 	mla	r4, r7, r4, r0
 801040a:	140e      	asrs	r6, r1, #16
 801040c:	9801      	ldr	r0, [sp, #4]
 801040e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8010412:	f8b9 4000 	ldrh.w	r4, [r9]
 8010416:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801041a:	eb00 0b0e 	add.w	fp, r0, lr
 801041e:	1227      	asrs	r7, r4, #8
 8010420:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010424:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010428:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801042c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801042e:	fb16 f60a 	smulbb	r6, r6, sl
 8010432:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010436:	fb07 6705 	mla	r7, r7, r5, r6
 801043a:	10e6      	asrs	r6, r4, #3
 801043c:	00e4      	lsls	r4, r4, #3
 801043e:	b2e4      	uxtb	r4, r4
 8010440:	fb1b fb0a 	smulbb	fp, fp, sl
 8010444:	fb14 f405 	smulbb	r4, r4, r5
 8010448:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801044c:	b2bf      	uxth	r7, r7
 801044e:	fb06 b605 	mla	r6, r6, r5, fp
 8010452:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8010456:	b2b6      	uxth	r6, r6
 8010458:	fa1f fe8e 	uxth.w	lr, lr
 801045c:	1c7c      	adds	r4, r7, #1
 801045e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8010462:	f106 0b01 	add.w	fp, r6, #1
 8010466:	f10e 0401 	add.w	r4, lr, #1
 801046a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801046e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8010472:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010476:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801047a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801047e:	4327      	orrs	r7, r4
 8010480:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010484:	4401      	add	r1, r0
 8010486:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010488:	ea47 070b 	orr.w	r7, r7, fp
 801048c:	f829 7b02 	strh.w	r7, [r9], #2
 8010490:	4402      	add	r2, r0
 8010492:	f108 38ff 	add.w	r8, r8, #4294967295
 8010496:	e7af      	b.n	80103f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8010498:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801049c:	f04f 0e00 	mov.w	lr, #0
 80104a0:	eb03 040e 	add.w	r4, r3, lr
 80104a4:	2c00      	cmp	r4, #0
 80104a6:	dc43      	bgt.n	8010530 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80104a8:	9a00      	ldr	r2, [sp, #0]
 80104aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80104ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80104b2:	9300      	str	r3, [sp, #0]
 80104b4:	9b02      	ldr	r3, [sp, #8]
 80104b6:	2b00      	cmp	r3, #0
 80104b8:	f340 8098 	ble.w	80105ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80104bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80104c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80104c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80104c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80104ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80104ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80104d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80104d6:	eef0 6a62 	vmov.f32	s13, s5
 80104da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80104de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80104e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80104e6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80104ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80104ee:	eef0 6a43 	vmov.f32	s13, s6
 80104f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80104f6:	ee12 2a90 	vmov	r2, s5
 80104fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80104fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8010502:	ee13 2a10 	vmov	r2, s6
 8010506:	9313      	str	r3, [sp, #76]	; 0x4c
 8010508:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801050a:	fb92 f3f3 	sdiv	r3, r2, r3
 801050e:	9314      	str	r3, [sp, #80]	; 0x50
 8010510:	9b02      	ldr	r3, [sp, #8]
 8010512:	9a05      	ldr	r2, [sp, #20]
 8010514:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010518:	3b01      	subs	r3, #1
 801051a:	9302      	str	r3, [sp, #8]
 801051c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8010520:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010522:	eeb0 3a67 	vmov.f32	s6, s15
 8010526:	bf08      	it	eq
 8010528:	4613      	moveq	r3, r2
 801052a:	eef0 2a47 	vmov.f32	s5, s14
 801052e:	e72a      	b.n	8010386 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010530:	140f      	asrs	r7, r1, #16
 8010532:	d454      	bmi.n	80105de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010534:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8010538:	42be      	cmp	r6, r7
 801053a:	dd50      	ble.n	80105de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801053c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8010540:	d44d      	bmi.n	80105de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010542:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8010546:	4544      	cmp	r4, r8
 8010548:	dd49      	ble.n	80105de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801054a:	9c04      	ldr	r4, [sp, #16]
 801054c:	b236      	sxth	r6, r6
 801054e:	fb08 4606 	mla	r6, r8, r6, r4
 8010552:	f06f 0001 	mvn.w	r0, #1
 8010556:	f816 8007 	ldrb.w	r8, [r6, r7]
 801055a:	9c01      	ldr	r4, [sp, #4]
 801055c:	fb00 fa0e 	mul.w	sl, r0, lr
 8010560:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8010564:	9800      	ldr	r0, [sp, #0]
 8010566:	eb04 0b08 	add.w	fp, r4, r8
 801056a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801056e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010572:	9801      	ldr	r0, [sp, #4]
 8010574:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010578:	f810 8008 	ldrb.w	r8, [r0, r8]
 801057c:	9800      	ldr	r0, [sp, #0]
 801057e:	1227      	asrs	r7, r4, #8
 8010580:	fb16 f609 	smulbb	r6, r6, r9
 8010584:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010588:	fb07 6705 	mla	r7, r7, r5, r6
 801058c:	10e6      	asrs	r6, r4, #3
 801058e:	00e4      	lsls	r4, r4, #3
 8010590:	b2e4      	uxtb	r4, r4
 8010592:	fb1b fb09 	smulbb	fp, fp, r9
 8010596:	fb14 f405 	smulbb	r4, r4, r5
 801059a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801059e:	b2bf      	uxth	r7, r7
 80105a0:	fb06 b605 	mla	r6, r6, r5, fp
 80105a4:	fb08 4809 	mla	r8, r8, r9, r4
 80105a8:	b2b6      	uxth	r6, r6
 80105aa:	fa1f f888 	uxth.w	r8, r8
 80105ae:	1c7c      	adds	r4, r7, #1
 80105b0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80105b4:	f106 0b01 	add.w	fp, r6, #1
 80105b8:	f108 0401 	add.w	r4, r8, #1
 80105bc:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80105c0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80105c4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80105c8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80105cc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80105d0:	4327      	orrs	r7, r4
 80105d2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80105d6:	ea47 070b 	orr.w	r7, r7, fp
 80105da:	f820 700a 	strh.w	r7, [r0, sl]
 80105de:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80105e0:	4401      	add	r1, r0
 80105e2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80105e4:	f10e 3eff 	add.w	lr, lr, #4294967295
 80105e8:	4402      	add	r2, r0
 80105ea:	e759      	b.n	80104a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80105ec:	b007      	add	sp, #28
 80105ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080105f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80105f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105f8:	b085      	sub	sp, #20
 80105fa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80105fe:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010600:	9203      	str	r2, [sp, #12]
 8010602:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010606:	6870      	ldr	r0, [r6, #4]
 8010608:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801060a:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801060e:	686f      	ldr	r7, [r5, #4]
 8010610:	9101      	str	r1, [sp, #4]
 8010612:	fb00 2404 	mla	r4, r0, r4, r2
 8010616:	6832      	ldr	r2, [r6, #0]
 8010618:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801061c:	682a      	ldr	r2, [r5, #0]
 801061e:	9202      	str	r2, [sp, #8]
 8010620:	3704      	adds	r7, #4
 8010622:	9a01      	ldr	r2, [sp, #4]
 8010624:	2a00      	cmp	r2, #0
 8010626:	dc03      	bgt.n	8010630 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010628:	9a03      	ldr	r2, [sp, #12]
 801062a:	2a00      	cmp	r2, #0
 801062c:	f340 80cc 	ble.w	80107c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010630:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010632:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010636:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801063a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801063e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010640:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010644:	2b00      	cmp	r3, #0
 8010646:	dd0d      	ble.n	8010664 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010648:	1406      	asrs	r6, r0, #16
 801064a:	d405      	bmi.n	8010658 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801064c:	454e      	cmp	r6, r9
 801064e:	da03      	bge.n	8010658 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010650:	1416      	asrs	r6, r2, #16
 8010652:	d401      	bmi.n	8010658 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010654:	4546      	cmp	r6, r8
 8010656:	db06      	blt.n	8010666 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010658:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801065a:	4460      	add	r0, ip
 801065c:	4432      	add	r2, r6
 801065e:	3b01      	subs	r3, #1
 8010660:	3402      	adds	r4, #2
 8010662:	e7ef      	b.n	8010644 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8010664:	d00f      	beq.n	8010686 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8010666:	1e5e      	subs	r6, r3, #1
 8010668:	fb0c 0e06 	mla	lr, ip, r6, r0
 801066c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8010670:	d543      	bpl.n	80106fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8010672:	4698      	mov	r8, r3
 8010674:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8010678:	f1b8 0f00 	cmp.w	r8, #0
 801067c:	dc71      	bgt.n	8010762 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801067e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010682:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010686:	9b01      	ldr	r3, [sp, #4]
 8010688:	2b00      	cmp	r3, #0
 801068a:	f340 809d 	ble.w	80107c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801068e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010692:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010696:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801069a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801069c:	ee31 1a05 	vadd.f32	s2, s2, s10
 80106a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80106a4:	eeb0 6a62 	vmov.f32	s12, s5
 80106a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80106ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80106b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80106b4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80106b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80106bc:	eeb0 6a43 	vmov.f32	s12, s6
 80106c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80106c4:	ee12 2a90 	vmov	r2, s5
 80106c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80106cc:	fb92 fcf3 	sdiv	ip, r2, r3
 80106d0:	ee13 2a10 	vmov	r2, s6
 80106d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80106d8:	9312      	str	r3, [sp, #72]	; 0x48
 80106da:	9b01      	ldr	r3, [sp, #4]
 80106dc:	9a03      	ldr	r2, [sp, #12]
 80106de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80106e2:	3b01      	subs	r3, #1
 80106e4:	9301      	str	r3, [sp, #4]
 80106e6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80106ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80106ec:	eeb0 3a67 	vmov.f32	s6, s15
 80106f0:	bf08      	it	eq
 80106f2:	4613      	moveq	r3, r2
 80106f4:	eef0 2a47 	vmov.f32	s5, s14
 80106f8:	e793      	b.n	8010622 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80106fa:	45ce      	cmp	lr, r9
 80106fc:	dab9      	bge.n	8010672 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80106fe:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010700:	fb01 2606 	mla	r6, r1, r6, r2
 8010704:	1436      	asrs	r6, r6, #16
 8010706:	d4b4      	bmi.n	8010672 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010708:	4546      	cmp	r6, r8
 801070a:	dab2      	bge.n	8010672 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801070c:	4698      	mov	r8, r3
 801070e:	46a2      	mov	sl, r4
 8010710:	f1b8 0f00 	cmp.w	r8, #0
 8010714:	ddb3      	ble.n	801067e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8010716:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801071a:	9902      	ldr	r1, [sp, #8]
 801071c:	1416      	asrs	r6, r2, #16
 801071e:	fb09 1606 	mla	r6, r9, r6, r1
 8010722:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8010726:	492a      	ldr	r1, [pc, #168]	; (80107d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8010728:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801072c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010730:	eb07 0b0e 	add.w	fp, r7, lr
 8010734:	4460      	add	r0, ip
 8010736:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801073a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801073e:	00f6      	lsls	r6, r6, #3
 8010740:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8010744:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010748:	ea49 0606 	orr.w	r6, r9, r6
 801074c:	f817 900e 	ldrb.w	r9, [r7, lr]
 8010750:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010752:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8010756:	f82a 6b02 	strh.w	r6, [sl], #2
 801075a:	440a      	add	r2, r1
 801075c:	f108 38ff 	add.w	r8, r8, #4294967295
 8010760:	e7d6      	b.n	8010710 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8010762:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010766:	d429      	bmi.n	80107bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010768:	68ae      	ldr	r6, [r5, #8]
 801076a:	454e      	cmp	r6, r9
 801076c:	dd26      	ble.n	80107bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801076e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8010772:	d423      	bmi.n	80107bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010774:	68e9      	ldr	r1, [r5, #12]
 8010776:	4559      	cmp	r1, fp
 8010778:	dd20      	ble.n	80107bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801077a:	9902      	ldr	r1, [sp, #8]
 801077c:	fa0f fe86 	sxth.w	lr, r6
 8010780:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8010784:	f06f 0101 	mvn.w	r1, #1
 8010788:	f81e e009 	ldrb.w	lr, [lr, r9]
 801078c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010790:	eb07 060e 	add.w	r6, r7, lr
 8010794:	fb01 f908 	mul.w	r9, r1, r8
 8010798:	f896 b002 	ldrb.w	fp, [r6, #2]
 801079c:	7876      	ldrb	r6, [r6, #1]
 801079e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80107a2:	00f6      	lsls	r6, r6, #3
 80107a4:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80107a8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80107ac:	ea4b 0606 	orr.w	r6, fp, r6
 80107b0:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80107b4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80107b8:	f82a 6009 	strh.w	r6, [sl, r9]
 80107bc:	9912      	ldr	r1, [sp, #72]	; 0x48
 80107be:	4460      	add	r0, ip
 80107c0:	440a      	add	r2, r1
 80107c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80107c6:	e757      	b.n	8010678 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80107c8:	b005      	add	sp, #20
 80107ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107ce:	bf00      	nop
 80107d0:	fffff800 	.word	0xfffff800

080107d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80107d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107d8:	b087      	sub	sp, #28
 80107da:	468b      	mov	fp, r1
 80107dc:	9815      	ldr	r0, [sp, #84]	; 0x54
 80107de:	9204      	str	r2, [sp, #16]
 80107e0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80107e4:	9205      	str	r2, [sp, #20]
 80107e6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80107ea:	6841      	ldr	r1, [r0, #4]
 80107ec:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80107f0:	fb01 2404 	mla	r4, r1, r4, r2
 80107f4:	6802      	ldr	r2, [r0, #0]
 80107f6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80107fa:	f8dc 2000 	ldr.w	r2, [ip]
 80107fe:	9201      	str	r2, [sp, #4]
 8010800:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010804:	3204      	adds	r2, #4
 8010806:	9202      	str	r2, [sp, #8]
 8010808:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801080c:	f1bb 0f00 	cmp.w	fp, #0
 8010810:	dc03      	bgt.n	801081a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8010812:	9a04      	ldr	r2, [sp, #16]
 8010814:	2a00      	cmp	r2, #0
 8010816:	f340 8138 	ble.w	8010a8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801081a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801081c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010820:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8010824:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010828:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801082a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801082e:	2b00      	cmp	r3, #0
 8010830:	dd0e      	ble.n	8010850 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010832:	1402      	asrs	r2, r0, #16
 8010834:	d405      	bmi.n	8010842 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010836:	42ba      	cmp	r2, r7
 8010838:	da03      	bge.n	8010842 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801083a:	140a      	asrs	r2, r1, #16
 801083c:	d401      	bmi.n	8010842 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801083e:	42b2      	cmp	r2, r6
 8010840:	db07      	blt.n	8010852 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010842:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010844:	4410      	add	r0, r2
 8010846:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010848:	3b01      	subs	r3, #1
 801084a:	4411      	add	r1, r2
 801084c:	3402      	adds	r4, #2
 801084e:	e7ee      	b.n	801082e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8010850:	d019      	beq.n	8010886 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8010852:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010854:	1e5a      	subs	r2, r3, #1
 8010856:	fb05 0502 	mla	r5, r5, r2, r0
 801085a:	142d      	asrs	r5, r5, #16
 801085c:	d409      	bmi.n	8010872 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801085e:	42bd      	cmp	r5, r7
 8010860:	da07      	bge.n	8010872 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010862:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010864:	fb05 1202 	mla	r2, r5, r2, r1
 8010868:	1412      	asrs	r2, r2, #16
 801086a:	d402      	bmi.n	8010872 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801086c:	42b2      	cmp	r2, r6
 801086e:	f2c0 80ac 	blt.w	80109ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8010872:	f04f 0e00 	mov.w	lr, #0
 8010876:	eb03 020e 	add.w	r2, r3, lr
 801087a:	2a00      	cmp	r2, #0
 801087c:	dc3e      	bgt.n	80108fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801087e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010882:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010886:	f1bb 0f00 	cmp.w	fp, #0
 801088a:	f340 80fe 	ble.w	8010a8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801088e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010892:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010896:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801089a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801089c:	f1bb 0b01 	subs.w	fp, fp, #1
 80108a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80108a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80108a8:	eeb0 6a62 	vmov.f32	s12, s5
 80108ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 80108b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80108b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80108b8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80108bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80108c0:	eeb0 6a43 	vmov.f32	s12, s6
 80108c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80108c8:	ee12 2a90 	vmov	r2, s5
 80108cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80108d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80108d4:	ee13 2a10 	vmov	r2, s6
 80108d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80108dc:	9313      	str	r3, [sp, #76]	; 0x4c
 80108de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80108e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80108e4:	9a04      	ldr	r2, [sp, #16]
 80108e6:	9314      	str	r3, [sp, #80]	; 0x50
 80108e8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80108ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80108ee:	eeb0 3a67 	vmov.f32	s6, s15
 80108f2:	bf08      	it	eq
 80108f4:	4613      	moveq	r3, r2
 80108f6:	eef0 2a47 	vmov.f32	s5, s14
 80108fa:	e787      	b.n	801080c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80108fc:	1406      	asrs	r6, r0, #16
 80108fe:	d45d      	bmi.n	80109bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010900:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8010904:	42b5      	cmp	r5, r6
 8010906:	dd59      	ble.n	80109bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010908:	140f      	asrs	r7, r1, #16
 801090a:	d457      	bmi.n	80109bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801090c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8010910:	42ba      	cmp	r2, r7
 8010912:	dd53      	ble.n	80109bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010914:	9a01      	ldr	r2, [sp, #4]
 8010916:	b22d      	sxth	r5, r5
 8010918:	fb07 2505 	mla	r5, r7, r5, r2
 801091c:	5daa      	ldrb	r2, [r5, r6]
 801091e:	9d02      	ldr	r5, [sp, #8]
 8010920:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010924:	0e2e      	lsrs	r6, r5, #24
 8010926:	d049      	beq.n	80109bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010928:	f06f 0201 	mvn.w	r2, #1
 801092c:	fb02 f20e 	mul.w	r2, r2, lr
 8010930:	9203      	str	r2, [sp, #12]
 8010932:	f834 8002 	ldrh.w	r8, [r4, r2]
 8010936:	9a05      	ldr	r2, [sp, #20]
 8010938:	4356      	muls	r6, r2
 801093a:	1c72      	adds	r2, r6, #1
 801093c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010940:	1212      	asrs	r2, r2, #8
 8010942:	fa1f f982 	uxth.w	r9, r2
 8010946:	ea4f 2728 	mov.w	r7, r8, asr #8
 801094a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801094e:	43d2      	mvns	r2, r2
 8010950:	b2d2      	uxtb	r2, r2
 8010952:	fb16 f609 	smulbb	r6, r6, r9
 8010956:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801095a:	fb07 6702 	mla	r7, r7, r2, r6
 801095e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010962:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010966:	b2ed      	uxtb	r5, r5
 8010968:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801096c:	fa5f f888 	uxtb.w	r8, r8
 8010970:	fb15 f509 	smulbb	r5, r5, r9
 8010974:	fb08 5502 	mla	r5, r8, r2, r5
 8010978:	b2bf      	uxth	r7, r7
 801097a:	fb1a fa09 	smulbb	sl, sl, r9
 801097e:	b2ad      	uxth	r5, r5
 8010980:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010984:	fb06 a602 	mla	r6, r6, r2, sl
 8010988:	1c7a      	adds	r2, r7, #1
 801098a:	f105 0a01 	add.w	sl, r5, #1
 801098e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010992:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010996:	b2b6      	uxth	r6, r6
 8010998:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801099c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80109a0:	ea4a 0707 	orr.w	r7, sl, r7
 80109a4:	f106 0a01 	add.w	sl, r6, #1
 80109a8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80109ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80109b0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80109b4:	9a03      	ldr	r2, [sp, #12]
 80109b6:	ea47 070a 	orr.w	r7, r7, sl
 80109ba:	52a7      	strh	r7, [r4, r2]
 80109bc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80109be:	4410      	add	r0, r2
 80109c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80109c2:	f10e 3eff 	add.w	lr, lr, #4294967295
 80109c6:	4411      	add	r1, r2
 80109c8:	e755      	b.n	8010876 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80109ca:	f04f 0800 	mov.w	r8, #0
 80109ce:	eba3 0208 	sub.w	r2, r3, r8
 80109d2:	2a00      	cmp	r2, #0
 80109d4:	f77f af53 	ble.w	801087e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80109d8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80109dc:	9f01      	ldr	r7, [sp, #4]
 80109de:	140a      	asrs	r2, r1, #16
 80109e0:	1405      	asrs	r5, r0, #16
 80109e2:	fb06 7202 	mla	r2, r6, r2, r7
 80109e6:	5d52      	ldrb	r2, [r2, r5]
 80109e8:	9d02      	ldr	r5, [sp, #8]
 80109ea:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80109ee:	0e2e      	lsrs	r6, r5, #24
 80109f0:	d044      	beq.n	8010a7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80109f2:	9a05      	ldr	r2, [sp, #20]
 80109f4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80109f8:	4356      	muls	r6, r2
 80109fa:	1c72      	adds	r2, r6, #1
 80109fc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010a00:	1212      	asrs	r2, r2, #8
 8010a02:	fa1f f982 	uxth.w	r9, r2
 8010a06:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010a0a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010a0e:	43d2      	mvns	r2, r2
 8010a10:	b2d2      	uxtb	r2, r2
 8010a12:	fb16 f609 	smulbb	r6, r6, r9
 8010a16:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010a1a:	fb07 6702 	mla	r7, r7, r2, r6
 8010a1e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010a22:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010a26:	b2ed      	uxtb	r5, r5
 8010a28:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010a2c:	fa5f fe8e 	uxtb.w	lr, lr
 8010a30:	fb15 f509 	smulbb	r5, r5, r9
 8010a34:	fb0e 5502 	mla	r5, lr, r2, r5
 8010a38:	b2bf      	uxth	r7, r7
 8010a3a:	fb1a fa09 	smulbb	sl, sl, r9
 8010a3e:	b2ad      	uxth	r5, r5
 8010a40:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010a44:	fb06 a602 	mla	r6, r6, r2, sl
 8010a48:	1c7a      	adds	r2, r7, #1
 8010a4a:	f105 0a01 	add.w	sl, r5, #1
 8010a4e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010a52:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010a56:	b2b6      	uxth	r6, r6
 8010a58:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010a5c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010a60:	ea4a 0707 	orr.w	r7, sl, r7
 8010a64:	f106 0a01 	add.w	sl, r6, #1
 8010a68:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010a6c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010a70:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010a74:	ea47 070a 	orr.w	r7, r7, sl
 8010a78:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010a7c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010a7e:	4410      	add	r0, r2
 8010a80:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010a82:	f108 0801 	add.w	r8, r8, #1
 8010a86:	4411      	add	r1, r2
 8010a88:	e7a1      	b.n	80109ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8010a8a:	b007      	add	sp, #28
 8010a8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010a90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010a90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a94:	b085      	sub	sp, #20
 8010a96:	468b      	mov	fp, r1
 8010a98:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010a9a:	9203      	str	r2, [sp, #12]
 8010a9c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010aa0:	6841      	ldr	r1, [r0, #4]
 8010aa2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8010aa6:	fb01 2404 	mla	r4, r1, r4, r2
 8010aaa:	6802      	ldr	r2, [r0, #0]
 8010aac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010ab0:	f8de 2000 	ldr.w	r2, [lr]
 8010ab4:	9200      	str	r2, [sp, #0]
 8010ab6:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010aba:	3204      	adds	r2, #4
 8010abc:	9201      	str	r2, [sp, #4]
 8010abe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010ac2:	f1bb 0f00 	cmp.w	fp, #0
 8010ac6:	dc03      	bgt.n	8010ad0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8010ac8:	9a03      	ldr	r2, [sp, #12]
 8010aca:	2a00      	cmp	r2, #0
 8010acc:	f340 8153 	ble.w	8010d76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010ad0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010ad2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010ad6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010ada:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010ade:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010ae0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010ae4:	2b00      	cmp	r3, #0
 8010ae6:	dd0e      	ble.n	8010b06 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010ae8:	1408      	asrs	r0, r1, #16
 8010aea:	d405      	bmi.n	8010af8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010aec:	42b8      	cmp	r0, r7
 8010aee:	da03      	bge.n	8010af8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010af0:	1410      	asrs	r0, r2, #16
 8010af2:	d401      	bmi.n	8010af8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010af4:	42b0      	cmp	r0, r6
 8010af6:	db07      	blt.n	8010b08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8010af8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010afa:	4401      	add	r1, r0
 8010afc:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010afe:	3b01      	subs	r3, #1
 8010b00:	4402      	add	r2, r0
 8010b02:	3402      	adds	r4, #2
 8010b04:	e7ee      	b.n	8010ae4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8010b06:	d017      	beq.n	8010b38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010b08:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010b0a:	1e58      	subs	r0, r3, #1
 8010b0c:	fb05 1500 	mla	r5, r5, r0, r1
 8010b10:	142d      	asrs	r5, r5, #16
 8010b12:	d409      	bmi.n	8010b28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010b14:	42bd      	cmp	r5, r7
 8010b16:	da07      	bge.n	8010b28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010b18:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010b1a:	fb05 2000 	mla	r0, r5, r0, r2
 8010b1e:	1400      	asrs	r0, r0, #16
 8010b20:	d402      	bmi.n	8010b28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010b22:	42b0      	cmp	r0, r6
 8010b24:	f2c0 80bc 	blt.w	8010ca0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8010b28:	2600      	movs	r6, #0
 8010b2a:	1998      	adds	r0, r3, r6
 8010b2c:	2800      	cmp	r0, #0
 8010b2e:	dc3e      	bgt.n	8010bae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8010b30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010b34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010b38:	f1bb 0f00 	cmp.w	fp, #0
 8010b3c:	f340 811b 	ble.w	8010d76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010b40:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010b44:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010b48:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010b4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b4e:	f1bb 0b01 	subs.w	fp, fp, #1
 8010b52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010b56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010b5a:	eeb0 6a62 	vmov.f32	s12, s5
 8010b5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010b62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010b66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010b6a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010b6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010b72:	eeb0 6a43 	vmov.f32	s12, s6
 8010b76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010b7a:	ee12 2a90 	vmov	r2, s5
 8010b7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010b82:	fb92 f3f3 	sdiv	r3, r2, r3
 8010b86:	ee13 2a10 	vmov	r2, s6
 8010b8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010b8e:	9311      	str	r3, [sp, #68]	; 0x44
 8010b90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b92:	fb92 f3f3 	sdiv	r3, r2, r3
 8010b96:	9a03      	ldr	r2, [sp, #12]
 8010b98:	9312      	str	r3, [sp, #72]	; 0x48
 8010b9a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010b9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010ba0:	eeb0 3a67 	vmov.f32	s6, s15
 8010ba4:	bf08      	it	eq
 8010ba6:	4613      	moveq	r3, r2
 8010ba8:	eef0 2a47 	vmov.f32	s5, s14
 8010bac:	e789      	b.n	8010ac2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8010bae:	140f      	asrs	r7, r1, #16
 8010bb0:	d426      	bmi.n	8010c00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010bb2:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010bb6:	42bd      	cmp	r5, r7
 8010bb8:	dd22      	ble.n	8010c00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010bba:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010bbe:	d41f      	bmi.n	8010c00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010bc0:	f8de 000c 	ldr.w	r0, [lr, #12]
 8010bc4:	4560      	cmp	r0, ip
 8010bc6:	dd1b      	ble.n	8010c00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010bc8:	9800      	ldr	r0, [sp, #0]
 8010bca:	b22d      	sxth	r5, r5
 8010bcc:	fb0c 0505 	mla	r5, ip, r5, r0
 8010bd0:	5de8      	ldrb	r0, [r5, r7]
 8010bd2:	9d01      	ldr	r5, [sp, #4]
 8010bd4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010bd8:	0e07      	lsrs	r7, r0, #24
 8010bda:	2fff      	cmp	r7, #255	; 0xff
 8010bdc:	d116      	bne.n	8010c0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8010bde:	f06f 0501 	mvn.w	r5, #1
 8010be2:	fb05 f706 	mul.w	r7, r5, r6
 8010be6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010bea:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010bee:	0945      	lsrs	r5, r0, #5
 8010bf0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010bf4:	ea4c 0505 	orr.w	r5, ip, r5
 8010bf8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010bfc:	4305      	orrs	r5, r0
 8010bfe:	53e5      	strh	r5, [r4, r7]
 8010c00:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010c02:	4401      	add	r1, r0
 8010c04:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010c06:	3e01      	subs	r6, #1
 8010c08:	4402      	add	r2, r0
 8010c0a:	e78e      	b.n	8010b2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8010c0c:	b2fd      	uxtb	r5, r7
 8010c0e:	2f00      	cmp	r7, #0
 8010c10:	d0f6      	beq.n	8010c00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010c12:	f06f 0701 	mvn.w	r7, #1
 8010c16:	4377      	muls	r7, r6
 8010c18:	fa1f f985 	uxth.w	r9, r5
 8010c1c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8010c20:	9702      	str	r7, [sp, #8]
 8010c22:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010c26:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010c2a:	43ed      	mvns	r5, r5
 8010c2c:	b2ed      	uxtb	r5, r5
 8010c2e:	fb17 f709 	smulbb	r7, r7, r9
 8010c32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010c36:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010c3a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010c3e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8010c42:	b2c0      	uxtb	r0, r0
 8010c44:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010c48:	fa5f f888 	uxtb.w	r8, r8
 8010c4c:	fb10 f009 	smulbb	r0, r0, r9
 8010c50:	fb08 0005 	mla	r0, r8, r5, r0
 8010c54:	b280      	uxth	r0, r0
 8010c56:	fa1f fc8c 	uxth.w	ip, ip
 8010c5a:	fb1a fa09 	smulbb	sl, sl, r9
 8010c5e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010c62:	fb07 a705 	mla	r7, r7, r5, sl
 8010c66:	f100 0a01 	add.w	sl, r0, #1
 8010c6a:	f10c 0501 	add.w	r5, ip, #1
 8010c6e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010c72:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010c76:	b2bf      	uxth	r7, r7
 8010c78:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010c7c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010c80:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010c84:	f107 0a01 	add.w	sl, r7, #1
 8010c88:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010c8c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010c90:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010c94:	9802      	ldr	r0, [sp, #8]
 8010c96:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010c9a:	f824 c000 	strh.w	ip, [r4, r0]
 8010c9e:	e7af      	b.n	8010c00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010ca0:	f04f 0800 	mov.w	r8, #0
 8010ca4:	eba3 0008 	sub.w	r0, r3, r8
 8010ca8:	2800      	cmp	r0, #0
 8010caa:	f77f af41 	ble.w	8010b30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010cae:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010cb2:	9f00      	ldr	r7, [sp, #0]
 8010cb4:	1410      	asrs	r0, r2, #16
 8010cb6:	140d      	asrs	r5, r1, #16
 8010cb8:	fb06 7000 	mla	r0, r6, r0, r7
 8010cbc:	5d40      	ldrb	r0, [r0, r5]
 8010cbe:	9d01      	ldr	r5, [sp, #4]
 8010cc0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8010cc4:	0e2e      	lsrs	r6, r5, #24
 8010cc6:	2eff      	cmp	r6, #255	; 0xff
 8010cc8:	d112      	bne.n	8010cf0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8010cca:	482c      	ldr	r0, [pc, #176]	; (8010d7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8010ccc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8010cd0:	0968      	lsrs	r0, r5, #5
 8010cd2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8010cd6:	4330      	orrs	r0, r6
 8010cd8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8010cdc:	4328      	orrs	r0, r5
 8010cde:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8010ce2:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010ce4:	4401      	add	r1, r0
 8010ce6:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010ce8:	f108 0801 	add.w	r8, r8, #1
 8010cec:	4402      	add	r2, r0
 8010cee:	e7d9      	b.n	8010ca4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8010cf0:	b2f0      	uxtb	r0, r6
 8010cf2:	2e00      	cmp	r6, #0
 8010cf4:	d0f5      	beq.n	8010ce2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8010cf6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8010cfa:	fa1f f980 	uxth.w	r9, r0
 8010cfe:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010d02:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010d06:	43c0      	mvns	r0, r0
 8010d08:	b2c0      	uxtb	r0, r0
 8010d0a:	fb16 f609 	smulbb	r6, r6, r9
 8010d0e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010d12:	fb07 6700 	mla	r7, r7, r0, r6
 8010d16:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010d1a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010d1e:	b2ed      	uxtb	r5, r5
 8010d20:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010d24:	fa5f fc8c 	uxtb.w	ip, ip
 8010d28:	fb15 f509 	smulbb	r5, r5, r9
 8010d2c:	fb0c 5500 	mla	r5, ip, r0, r5
 8010d30:	b2bf      	uxth	r7, r7
 8010d32:	fb1a fa09 	smulbb	sl, sl, r9
 8010d36:	b2ad      	uxth	r5, r5
 8010d38:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010d3c:	fb06 a600 	mla	r6, r6, r0, sl
 8010d40:	1c78      	adds	r0, r7, #1
 8010d42:	f105 0a01 	add.w	sl, r5, #1
 8010d46:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8010d4a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010d4e:	b2b6      	uxth	r6, r6
 8010d50:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010d54:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010d58:	ea4a 0707 	orr.w	r7, sl, r7
 8010d5c:	f106 0a01 	add.w	sl, r6, #1
 8010d60:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010d64:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010d68:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010d6c:	ea47 070a 	orr.w	r7, r7, sl
 8010d70:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010d74:	e7b5      	b.n	8010ce2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8010d76:	b005      	add	sp, #20
 8010d78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d7c:	fffff800 	.word	0xfffff800

08010d80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010d80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d84:	b087      	sub	sp, #28
 8010d86:	468b      	mov	fp, r1
 8010d88:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010d8a:	9204      	str	r2, [sp, #16]
 8010d8c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010d90:	9205      	str	r2, [sp, #20]
 8010d92:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010d96:	6861      	ldr	r1, [r4, #4]
 8010d98:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8010d9c:	fb01 2000 	mla	r0, r1, r0, r2
 8010da0:	6822      	ldr	r2, [r4, #0]
 8010da2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010da6:	f8de 2000 	ldr.w	r2, [lr]
 8010daa:	9201      	str	r2, [sp, #4]
 8010dac:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010db0:	9202      	str	r2, [sp, #8]
 8010db2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010db6:	f1bb 0f00 	cmp.w	fp, #0
 8010dba:	dc03      	bgt.n	8010dc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8010dbc:	9a04      	ldr	r2, [sp, #16]
 8010dbe:	2a00      	cmp	r2, #0
 8010dc0:	f340 8142 	ble.w	8011048 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010dc4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010dc6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010dca:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010dce:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010dd2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010dd4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010dd8:	2b00      	cmp	r3, #0
 8010dda:	dd0e      	ble.n	8010dfa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8010ddc:	140c      	asrs	r4, r1, #16
 8010dde:	d405      	bmi.n	8010dec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010de0:	42bc      	cmp	r4, r7
 8010de2:	da03      	bge.n	8010dec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010de4:	1414      	asrs	r4, r2, #16
 8010de6:	d401      	bmi.n	8010dec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010de8:	42b4      	cmp	r4, r6
 8010dea:	db07      	blt.n	8010dfc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010dec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010dee:	4421      	add	r1, r4
 8010df0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010df2:	3b01      	subs	r3, #1
 8010df4:	4422      	add	r2, r4
 8010df6:	3002      	adds	r0, #2
 8010df8:	e7ee      	b.n	8010dd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8010dfa:	d019      	beq.n	8010e30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8010dfc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010dfe:	1e5c      	subs	r4, r3, #1
 8010e00:	fb05 1504 	mla	r5, r5, r4, r1
 8010e04:	142d      	asrs	r5, r5, #16
 8010e06:	d409      	bmi.n	8010e1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010e08:	42bd      	cmp	r5, r7
 8010e0a:	da07      	bge.n	8010e1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010e0c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010e0e:	fb05 2404 	mla	r4, r5, r4, r2
 8010e12:	1424      	asrs	r4, r4, #16
 8010e14:	d402      	bmi.n	8010e1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010e16:	42b4      	cmp	r4, r6
 8010e18:	f2c0 80b1 	blt.w	8010f7e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8010e1c:	f04f 0800 	mov.w	r8, #0
 8010e20:	eb03 0408 	add.w	r4, r3, r8
 8010e24:	2c00      	cmp	r4, #0
 8010e26:	dc3e      	bgt.n	8010ea6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8010e28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010e2c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010e30:	f1bb 0f00 	cmp.w	fp, #0
 8010e34:	f340 8108 	ble.w	8011048 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010e38:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010e3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010e40:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010e44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e46:	f1bb 0b01 	subs.w	fp, fp, #1
 8010e4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010e4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010e52:	eeb0 6a62 	vmov.f32	s12, s5
 8010e56:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010e5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010e62:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010e66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010e6a:	eeb0 6a43 	vmov.f32	s12, s6
 8010e6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010e72:	ee12 2a90 	vmov	r2, s5
 8010e76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010e7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e7e:	ee13 2a10 	vmov	r2, s6
 8010e82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e86:	9313      	str	r3, [sp, #76]	; 0x4c
 8010e88:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e8e:	9a04      	ldr	r2, [sp, #16]
 8010e90:	9314      	str	r3, [sp, #80]	; 0x50
 8010e92:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010e96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e98:	eeb0 3a67 	vmov.f32	s6, s15
 8010e9c:	bf08      	it	eq
 8010e9e:	4613      	moveq	r3, r2
 8010ea0:	eef0 2a47 	vmov.f32	s5, s14
 8010ea4:	e787      	b.n	8010db6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8010ea6:	140e      	asrs	r6, r1, #16
 8010ea8:	d462      	bmi.n	8010f70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010eaa:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010eae:	42b5      	cmp	r5, r6
 8010eb0:	dd5e      	ble.n	8010f70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010eb2:	1417      	asrs	r7, r2, #16
 8010eb4:	d45c      	bmi.n	8010f70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010eb6:	f8de 400c 	ldr.w	r4, [lr, #12]
 8010eba:	42bc      	cmp	r4, r7
 8010ebc:	dd58      	ble.n	8010f70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010ebe:	b22d      	sxth	r5, r5
 8010ec0:	fb07 6505 	mla	r5, r7, r5, r6
 8010ec4:	9c02      	ldr	r4, [sp, #8]
 8010ec6:	5d66      	ldrb	r6, [r4, r5]
 8010ec8:	2e00      	cmp	r6, #0
 8010eca:	d051      	beq.n	8010f70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010ecc:	9c01      	ldr	r4, [sp, #4]
 8010ece:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8010ed2:	f06f 0401 	mvn.w	r4, #1
 8010ed6:	fb04 f408 	mul.w	r4, r4, r8
 8010eda:	9403      	str	r4, [sp, #12]
 8010edc:	5b05      	ldrh	r5, [r0, r4]
 8010ede:	9c05      	ldr	r4, [sp, #20]
 8010ee0:	4366      	muls	r6, r4
 8010ee2:	1c74      	adds	r4, r6, #1
 8010ee4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010ee8:	1224      	asrs	r4, r4, #8
 8010eea:	b2a7      	uxth	r7, r4
 8010eec:	122e      	asrs	r6, r5, #8
 8010eee:	43e4      	mvns	r4, r4
 8010ef0:	b2e4      	uxtb	r4, r4
 8010ef2:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8010ef6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010efa:	fb16 f604 	smulbb	r6, r6, r4
 8010efe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010f02:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010f06:	00ed      	lsls	r5, r5, #3
 8010f08:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010f0c:	b2ed      	uxtb	r5, r5
 8010f0e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8010f12:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8010f16:	fb15 f504 	smulbb	r5, r5, r4
 8010f1a:	fa5f f989 	uxtb.w	r9, r9
 8010f1e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010f22:	fb09 5507 	mla	r5, r9, r7, r5
 8010f26:	fb1a fa04 	smulbb	sl, sl, r4
 8010f2a:	fa1f fc8c 	uxth.w	ip, ip
 8010f2e:	b2ad      	uxth	r5, r5
 8010f30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010f34:	fb06 a607 	mla	r6, r6, r7, sl
 8010f38:	f10c 0401 	add.w	r4, ip, #1
 8010f3c:	f105 0a01 	add.w	sl, r5, #1
 8010f40:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010f44:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010f48:	b2b6      	uxth	r6, r6
 8010f4a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010f4e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010f52:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010f56:	f106 0a01 	add.w	sl, r6, #1
 8010f5a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010f5e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010f62:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010f66:	9c03      	ldr	r4, [sp, #12]
 8010f68:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010f6c:	f820 c004 	strh.w	ip, [r0, r4]
 8010f70:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010f72:	4421      	add	r1, r4
 8010f74:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010f76:	f108 38ff 	add.w	r8, r8, #4294967295
 8010f7a:	4422      	add	r2, r4
 8010f7c:	e750      	b.n	8010e20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010f7e:	f04f 0900 	mov.w	r9, #0
 8010f82:	eba3 0409 	sub.w	r4, r3, r9
 8010f86:	2c00      	cmp	r4, #0
 8010f88:	f77f af4e 	ble.w	8010e28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010f8c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010f90:	140d      	asrs	r5, r1, #16
 8010f92:	1414      	asrs	r4, r2, #16
 8010f94:	fb06 5404 	mla	r4, r6, r4, r5
 8010f98:	9d02      	ldr	r5, [sp, #8]
 8010f9a:	5d2e      	ldrb	r6, [r5, r4]
 8010f9c:	2e00      	cmp	r6, #0
 8010f9e:	d04c      	beq.n	801103a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8010fa0:	9d01      	ldr	r5, [sp, #4]
 8010fa2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8010fa6:	9c05      	ldr	r4, [sp, #20]
 8010fa8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8010fac:	4366      	muls	r6, r4
 8010fae:	1c74      	adds	r4, r6, #1
 8010fb0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010fb4:	1224      	asrs	r4, r4, #8
 8010fb6:	b2a7      	uxth	r7, r4
 8010fb8:	122e      	asrs	r6, r5, #8
 8010fba:	43e4      	mvns	r4, r4
 8010fbc:	b2e4      	uxtb	r4, r4
 8010fbe:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010fc2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010fc6:	fb16 f604 	smulbb	r6, r6, r4
 8010fca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010fce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010fd2:	00ed      	lsls	r5, r5, #3
 8010fd4:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010fd8:	b2ed      	uxtb	r5, r5
 8010fda:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010fde:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010fe2:	fb15 f504 	smulbb	r5, r5, r4
 8010fe6:	fa5f f888 	uxtb.w	r8, r8
 8010fea:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010fee:	fb08 5507 	mla	r5, r8, r7, r5
 8010ff2:	fb1a fa04 	smulbb	sl, sl, r4
 8010ff6:	fa1f fc8c 	uxth.w	ip, ip
 8010ffa:	b2ad      	uxth	r5, r5
 8010ffc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011000:	fb06 a607 	mla	r6, r6, r7, sl
 8011004:	f10c 0401 	add.w	r4, ip, #1
 8011008:	f105 0a01 	add.w	sl, r5, #1
 801100c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011010:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011014:	b2b6      	uxth	r6, r6
 8011016:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801101a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801101e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011022:	f106 0a01 	add.w	sl, r6, #1
 8011026:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801102a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801102e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011032:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011036:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801103a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801103c:	4421      	add	r1, r4
 801103e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011040:	f109 0901 	add.w	r9, r9, #1
 8011044:	4422      	add	r2, r4
 8011046:	e79c      	b.n	8010f82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011048:	b007      	add	sp, #28
 801104a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801104e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801104e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011052:	b085      	sub	sp, #20
 8011054:	468b      	mov	fp, r1
 8011056:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011058:	9203      	str	r2, [sp, #12]
 801105a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801105e:	6861      	ldr	r1, [r4, #4]
 8011060:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8011064:	fb01 2000 	mla	r0, r1, r0, r2
 8011068:	6822      	ldr	r2, [r4, #0]
 801106a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801106e:	f8d8 2000 	ldr.w	r2, [r8]
 8011072:	9200      	str	r2, [sp, #0]
 8011074:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8011078:	9201      	str	r2, [sp, #4]
 801107a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801107e:	f1bb 0f00 	cmp.w	fp, #0
 8011082:	dc03      	bgt.n	801108c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011084:	9a03      	ldr	r2, [sp, #12]
 8011086:	2a00      	cmp	r2, #0
 8011088:	f340 8146 	ble.w	8011318 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801108c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801108e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011092:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011096:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801109a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801109c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80110a0:	2b00      	cmp	r3, #0
 80110a2:	dd0e      	ble.n	80110c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80110a4:	140c      	asrs	r4, r1, #16
 80110a6:	d405      	bmi.n	80110b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80110a8:	42bc      	cmp	r4, r7
 80110aa:	da03      	bge.n	80110b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80110ac:	1414      	asrs	r4, r2, #16
 80110ae:	d401      	bmi.n	80110b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80110b0:	42b4      	cmp	r4, r6
 80110b2:	db07      	blt.n	80110c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80110b4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80110b6:	4421      	add	r1, r4
 80110b8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80110ba:	3b01      	subs	r3, #1
 80110bc:	4422      	add	r2, r4
 80110be:	3002      	adds	r0, #2
 80110c0:	e7ee      	b.n	80110a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80110c2:	d017      	beq.n	80110f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80110c4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80110c6:	1e5c      	subs	r4, r3, #1
 80110c8:	fb05 1504 	mla	r5, r5, r4, r1
 80110cc:	142d      	asrs	r5, r5, #16
 80110ce:	d409      	bmi.n	80110e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80110d0:	42bd      	cmp	r5, r7
 80110d2:	da07      	bge.n	80110e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80110d4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80110d6:	fb05 2404 	mla	r4, r5, r4, r2
 80110da:	1424      	asrs	r4, r4, #16
 80110dc:	d402      	bmi.n	80110e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80110de:	42b4      	cmp	r4, r6
 80110e0:	f2c0 80b3 	blt.w	801124a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80110e4:	2600      	movs	r6, #0
 80110e6:	199c      	adds	r4, r3, r6
 80110e8:	2c00      	cmp	r4, #0
 80110ea:	dc3e      	bgt.n	801116a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80110ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80110f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80110f4:	f1bb 0f00 	cmp.w	fp, #0
 80110f8:	f340 810e 	ble.w	8011318 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80110fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011100:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011104:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011108:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801110a:	f1bb 0b01 	subs.w	fp, fp, #1
 801110e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011112:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011116:	eeb0 6a62 	vmov.f32	s12, s5
 801111a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801111e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011122:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011126:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801112a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801112e:	eeb0 6a43 	vmov.f32	s12, s6
 8011132:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011136:	ee12 2a90 	vmov	r2, s5
 801113a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801113e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011142:	ee13 2a10 	vmov	r2, s6
 8011146:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801114a:	9311      	str	r3, [sp, #68]	; 0x44
 801114c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801114e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011152:	9a03      	ldr	r2, [sp, #12]
 8011154:	9312      	str	r3, [sp, #72]	; 0x48
 8011156:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801115a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801115c:	eeb0 3a67 	vmov.f32	s6, s15
 8011160:	bf08      	it	eq
 8011162:	4613      	moveq	r3, r2
 8011164:	eef0 2a47 	vmov.f32	s5, s14
 8011168:	e789      	b.n	801107e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801116a:	140f      	asrs	r7, r1, #16
 801116c:	d418      	bmi.n	80111a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801116e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8011172:	42bd      	cmp	r5, r7
 8011174:	dd14      	ble.n	80111a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011176:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801117a:	d411      	bmi.n	80111a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801117c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8011180:	4564      	cmp	r4, ip
 8011182:	dd0d      	ble.n	80111a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011184:	b22d      	sxth	r5, r5
 8011186:	fb0c 7505 	mla	r5, ip, r5, r7
 801118a:	9c01      	ldr	r4, [sp, #4]
 801118c:	5d64      	ldrb	r4, [r4, r5]
 801118e:	2cff      	cmp	r4, #255	; 0xff
 8011190:	d10c      	bne.n	80111ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8011192:	9c00      	ldr	r4, [sp, #0]
 8011194:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8011198:	f06f 0401 	mvn.w	r4, #1
 801119c:	4374      	muls	r4, r6
 801119e:	5305      	strh	r5, [r0, r4]
 80111a0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80111a2:	4421      	add	r1, r4
 80111a4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80111a6:	3e01      	subs	r6, #1
 80111a8:	4422      	add	r2, r4
 80111aa:	e79c      	b.n	80110e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80111ac:	2c00      	cmp	r4, #0
 80111ae:	d0f7      	beq.n	80111a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80111b0:	9f00      	ldr	r7, [sp, #0]
 80111b2:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80111b6:	f06f 0501 	mvn.w	r5, #1
 80111ba:	4375      	muls	r5, r6
 80111bc:	9502      	str	r5, [sp, #8]
 80111be:	5b45      	ldrh	r5, [r0, r5]
 80111c0:	fa1f fc84 	uxth.w	ip, r4
 80111c4:	122f      	asrs	r7, r5, #8
 80111c6:	43e4      	mvns	r4, r4
 80111c8:	b2e4      	uxtb	r4, r4
 80111ca:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80111ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80111d2:	fb17 f704 	smulbb	r7, r7, r4
 80111d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80111da:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80111de:	00ed      	lsls	r5, r5, #3
 80111e0:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80111e4:	b2ed      	uxtb	r5, r5
 80111e6:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80111ea:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80111ee:	fb15 f504 	smulbb	r5, r5, r4
 80111f2:	fa5f f989 	uxtb.w	r9, r9
 80111f6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80111fa:	fb09 550c 	mla	r5, r9, ip, r5
 80111fe:	fb1a fa04 	smulbb	sl, sl, r4
 8011202:	fa1f fe8e 	uxth.w	lr, lr
 8011206:	b2ad      	uxth	r5, r5
 8011208:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801120c:	fb07 a70c 	mla	r7, r7, ip, sl
 8011210:	f10e 0401 	add.w	r4, lr, #1
 8011214:	f105 0a01 	add.w	sl, r5, #1
 8011218:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801121c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011220:	b2bf      	uxth	r7, r7
 8011222:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011226:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801122a:	ea4a 0e0e 	orr.w	lr, sl, lr
 801122e:	f107 0a01 	add.w	sl, r7, #1
 8011232:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011236:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801123a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801123e:	9c02      	ldr	r4, [sp, #8]
 8011240:	ea4e 0e0a 	orr.w	lr, lr, sl
 8011244:	f820 e004 	strh.w	lr, [r0, r4]
 8011248:	e7aa      	b.n	80111a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801124a:	f04f 0900 	mov.w	r9, #0
 801124e:	eba3 0409 	sub.w	r4, r3, r9
 8011252:	2c00      	cmp	r4, #0
 8011254:	f77f af4a 	ble.w	80110ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011258:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801125c:	1414      	asrs	r4, r2, #16
 801125e:	140d      	asrs	r5, r1, #16
 8011260:	fb06 5504 	mla	r5, r6, r4, r5
 8011264:	9c01      	ldr	r4, [sp, #4]
 8011266:	5d64      	ldrb	r4, [r4, r5]
 8011268:	2cff      	cmp	r4, #255	; 0xff
 801126a:	d10b      	bne.n	8011284 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801126c:	9c00      	ldr	r4, [sp, #0]
 801126e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8011272:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8011276:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011278:	4421      	add	r1, r4
 801127a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801127c:	f109 0901 	add.w	r9, r9, #1
 8011280:	4422      	add	r2, r4
 8011282:	e7e4      	b.n	801124e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8011284:	2c00      	cmp	r4, #0
 8011286:	d0f6      	beq.n	8011276 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8011288:	9e00      	ldr	r6, [sp, #0]
 801128a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801128e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8011292:	b2a7      	uxth	r7, r4
 8011294:	122e      	asrs	r6, r5, #8
 8011296:	43e4      	mvns	r4, r4
 8011298:	b2e4      	uxtb	r4, r4
 801129a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801129e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80112a2:	fb16 f604 	smulbb	r6, r6, r4
 80112a6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80112aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80112ae:	00ed      	lsls	r5, r5, #3
 80112b0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80112b4:	b2ed      	uxtb	r5, r5
 80112b6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80112ba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80112be:	fb15 f504 	smulbb	r5, r5, r4
 80112c2:	fa5f fe8e 	uxtb.w	lr, lr
 80112c6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80112ca:	fb0e 5507 	mla	r5, lr, r7, r5
 80112ce:	fb1a fa04 	smulbb	sl, sl, r4
 80112d2:	fa1f fc8c 	uxth.w	ip, ip
 80112d6:	b2ad      	uxth	r5, r5
 80112d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80112dc:	fb06 a607 	mla	r6, r6, r7, sl
 80112e0:	f10c 0401 	add.w	r4, ip, #1
 80112e4:	f105 0a01 	add.w	sl, r5, #1
 80112e8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80112ec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80112f0:	b2b6      	uxth	r6, r6
 80112f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80112f6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80112fa:	ea4a 0c0c 	orr.w	ip, sl, ip
 80112fe:	f106 0a01 	add.w	sl, r6, #1
 8011302:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011306:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801130a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801130e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011312:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8011316:	e7ae      	b.n	8011276 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8011318:	b005      	add	sp, #20
 801131a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801131e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801131e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011322:	b085      	sub	sp, #20
 8011324:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011326:	9203      	str	r2, [sp, #12]
 8011328:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801132c:	9201      	str	r2, [sp, #4]
 801132e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011332:	9100      	str	r1, [sp, #0]
 8011334:	6841      	ldr	r1, [r0, #4]
 8011336:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801133a:	fb01 2404 	mla	r4, r1, r4, r2
 801133e:	6802      	ldr	r2, [r0, #0]
 8011340:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011344:	f8de 2000 	ldr.w	r2, [lr]
 8011348:	9202      	str	r2, [sp, #8]
 801134a:	9a01      	ldr	r2, [sp, #4]
 801134c:	43d6      	mvns	r6, r2
 801134e:	b2f6      	uxtb	r6, r6
 8011350:	9a00      	ldr	r2, [sp, #0]
 8011352:	2a00      	cmp	r2, #0
 8011354:	dc03      	bgt.n	801135e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8011356:	9a03      	ldr	r2, [sp, #12]
 8011358:	2a00      	cmp	r2, #0
 801135a:	f340 8124 	ble.w	80115a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801135e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011360:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8011364:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8011368:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801136c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801136e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011372:	2b00      	cmp	r3, #0
 8011374:	dd0e      	ble.n	8011394 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011376:	1408      	asrs	r0, r1, #16
 8011378:	d405      	bmi.n	8011386 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801137a:	4560      	cmp	r0, ip
 801137c:	da03      	bge.n	8011386 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801137e:	1410      	asrs	r0, r2, #16
 8011380:	d401      	bmi.n	8011386 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011382:	42b8      	cmp	r0, r7
 8011384:	db07      	blt.n	8011396 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8011386:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011388:	4401      	add	r1, r0
 801138a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801138c:	3b01      	subs	r3, #1
 801138e:	4402      	add	r2, r0
 8011390:	3402      	adds	r4, #2
 8011392:	e7ee      	b.n	8011372 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8011394:	d06e      	beq.n	8011474 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8011396:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011398:	1e58      	subs	r0, r3, #1
 801139a:	fb05 1500 	mla	r5, r5, r0, r1
 801139e:	142d      	asrs	r5, r5, #16
 80113a0:	d45c      	bmi.n	801145c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80113a2:	4565      	cmp	r5, ip
 80113a4:	da5a      	bge.n	801145c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80113a6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80113a8:	fb05 2000 	mla	r0, r5, r0, r2
 80113ac:	1400      	asrs	r0, r0, #16
 80113ae:	d455      	bmi.n	801145c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80113b0:	42b8      	cmp	r0, r7
 80113b2:	da53      	bge.n	801145c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80113b4:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80113b8:	4699      	mov	r9, r3
 80113ba:	46a2      	mov	sl, r4
 80113bc:	f1b9 0f00 	cmp.w	r9, #0
 80113c0:	dd54      	ble.n	801146c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80113c2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80113c6:	140d      	asrs	r5, r1, #16
 80113c8:	1410      	asrs	r0, r2, #16
 80113ca:	fb07 5000 	mla	r0, r7, r0, r5
 80113ce:	9d02      	ldr	r5, [sp, #8]
 80113d0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80113d4:	f8ba 5000 	ldrh.w	r5, [sl]
 80113d8:	122f      	asrs	r7, r5, #8
 80113da:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80113de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80113e2:	fb17 f706 	smulbb	r7, r7, r6
 80113e6:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80113ea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80113ee:	00ed      	lsls	r5, r5, #3
 80113f0:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80113f4:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80113f8:	10c7      	asrs	r7, r0, #3
 80113fa:	b2ed      	uxtb	r5, r5
 80113fc:	00c0      	lsls	r0, r0, #3
 80113fe:	fb18 f806 	smulbb	r8, r8, r6
 8011402:	fb15 f506 	smulbb	r5, r5, r6
 8011406:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801140a:	b2c0      	uxtb	r0, r0
 801140c:	fa1f fc8c 	uxth.w	ip, ip
 8011410:	fb07 870b 	mla	r7, r7, fp, r8
 8011414:	fb00 500b 	mla	r0, r0, fp, r5
 8011418:	b280      	uxth	r0, r0
 801141a:	b2bf      	uxth	r7, r7
 801141c:	f10c 0501 	add.w	r5, ip, #1
 8011420:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011424:	f107 0801 	add.w	r8, r7, #1
 8011428:	1c45      	adds	r5, r0, #1
 801142a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801142e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8011432:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011434:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011438:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801143c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011440:	ea45 0c0c 	orr.w	ip, r5, ip
 8011444:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011448:	4401      	add	r1, r0
 801144a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801144c:	ea4c 0c08 	orr.w	ip, ip, r8
 8011450:	f82a cb02 	strh.w	ip, [sl], #2
 8011454:	4402      	add	r2, r0
 8011456:	f109 39ff 	add.w	r9, r9, #4294967295
 801145a:	e7af      	b.n	80113bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801145c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8011460:	f04f 0800 	mov.w	r8, #0
 8011464:	eb03 0008 	add.w	r0, r3, r8
 8011468:	2800      	cmp	r0, #0
 801146a:	dc41      	bgt.n	80114f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801146c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011470:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011474:	9b00      	ldr	r3, [sp, #0]
 8011476:	2b00      	cmp	r3, #0
 8011478:	f340 8095 	ble.w	80115a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801147c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011480:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011484:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011488:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801148a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801148e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011492:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011496:	eef0 6a62 	vmov.f32	s13, s5
 801149a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801149e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80114a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80114a6:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80114aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80114ae:	eef0 6a43 	vmov.f32	s13, s6
 80114b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80114b6:	ee12 2a90 	vmov	r2, s5
 80114ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80114be:	fb92 f3f3 	sdiv	r3, r2, r3
 80114c2:	ee13 2a10 	vmov	r2, s6
 80114c6:	9311      	str	r3, [sp, #68]	; 0x44
 80114c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80114ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80114ce:	9312      	str	r3, [sp, #72]	; 0x48
 80114d0:	9b00      	ldr	r3, [sp, #0]
 80114d2:	9a03      	ldr	r2, [sp, #12]
 80114d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80114d8:	3b01      	subs	r3, #1
 80114da:	9300      	str	r3, [sp, #0]
 80114dc:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80114e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80114e2:	eeb0 3a67 	vmov.f32	s6, s15
 80114e6:	bf08      	it	eq
 80114e8:	4613      	moveq	r3, r2
 80114ea:	eef0 2a47 	vmov.f32	s5, s14
 80114ee:	e72f      	b.n	8011350 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80114f0:	140f      	asrs	r7, r1, #16
 80114f2:	d451      	bmi.n	8011598 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80114f4:	f8de 5008 	ldr.w	r5, [lr, #8]
 80114f8:	42bd      	cmp	r5, r7
 80114fa:	dd4d      	ble.n	8011598 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80114fc:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011500:	d44a      	bmi.n	8011598 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011502:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011506:	4560      	cmp	r0, ip
 8011508:	dd46      	ble.n	8011598 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801150a:	b22d      	sxth	r5, r5
 801150c:	fb0c 7505 	mla	r5, ip, r5, r7
 8011510:	9802      	ldr	r0, [sp, #8]
 8011512:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8011516:	f06f 0501 	mvn.w	r5, #1
 801151a:	fb05 fb08 	mul.w	fp, r5, r8
 801151e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011522:	f834 500b 	ldrh.w	r5, [r4, fp]
 8011526:	122f      	asrs	r7, r5, #8
 8011528:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801152c:	fb17 f706 	smulbb	r7, r7, r6
 8011530:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8011534:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011538:	00ed      	lsls	r5, r5, #3
 801153a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801153e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011542:	10c7      	asrs	r7, r0, #3
 8011544:	b2ed      	uxtb	r5, r5
 8011546:	00c0      	lsls	r0, r0, #3
 8011548:	fb19 f906 	smulbb	r9, r9, r6
 801154c:	fb15 f506 	smulbb	r5, r5, r6
 8011550:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011554:	b2c0      	uxtb	r0, r0
 8011556:	fa1f fc8c 	uxth.w	ip, ip
 801155a:	fb07 970a 	mla	r7, r7, sl, r9
 801155e:	fb00 500a 	mla	r0, r0, sl, r5
 8011562:	b2bf      	uxth	r7, r7
 8011564:	b280      	uxth	r0, r0
 8011566:	f10c 0501 	add.w	r5, ip, #1
 801156a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801156e:	f107 0901 	add.w	r9, r7, #1
 8011572:	1c45      	adds	r5, r0, #1
 8011574:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011578:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801157c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011580:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011584:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011588:	ea45 0c0c 	orr.w	ip, r5, ip
 801158c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011590:	ea4c 0c09 	orr.w	ip, ip, r9
 8011594:	f824 c00b 	strh.w	ip, [r4, fp]
 8011598:	9811      	ldr	r0, [sp, #68]	; 0x44
 801159a:	4401      	add	r1, r0
 801159c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801159e:	f108 38ff 	add.w	r8, r8, #4294967295
 80115a2:	4402      	add	r2, r0
 80115a4:	e75e      	b.n	8011464 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80115a6:	b005      	add	sp, #20
 80115a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080115ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80115ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115b0:	b085      	sub	sp, #20
 80115b2:	4693      	mov	fp, r2
 80115b4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80115b6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80115b8:	6870      	ldr	r0, [r6, #4]
 80115ba:	9101      	str	r1, [sp, #4]
 80115bc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80115c0:	fb00 2404 	mla	r4, r0, r4, r2
 80115c4:	6832      	ldr	r2, [r6, #0]
 80115c6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80115ca:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80115ce:	682a      	ldr	r2, [r5, #0]
 80115d0:	9202      	str	r2, [sp, #8]
 80115d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80115d6:	9a01      	ldr	r2, [sp, #4]
 80115d8:	2a00      	cmp	r2, #0
 80115da:	dc03      	bgt.n	80115e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80115dc:	f1bb 0f00 	cmp.w	fp, #0
 80115e0:	f340 809a 	ble.w	8011718 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80115e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80115e6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80115ea:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80115ee:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80115f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80115f4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80115f8:	2b00      	cmp	r3, #0
 80115fa:	dd0c      	ble.n	8011616 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80115fc:	1406      	asrs	r6, r0, #16
 80115fe:	d405      	bmi.n	801160c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011600:	454e      	cmp	r6, r9
 8011602:	da03      	bge.n	801160c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011604:	1416      	asrs	r6, r2, #16
 8011606:	d401      	bmi.n	801160c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011608:	4546      	cmp	r6, r8
 801160a:	db05      	blt.n	8011618 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801160c:	4470      	add	r0, lr
 801160e:	4462      	add	r2, ip
 8011610:	3b01      	subs	r3, #1
 8011612:	3402      	adds	r4, #2
 8011614:	e7f0      	b.n	80115f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011616:	d00f      	beq.n	8011638 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8011618:	1e5e      	subs	r6, r3, #1
 801161a:	fb0e 0706 	mla	r7, lr, r6, r0
 801161e:	143f      	asrs	r7, r7, #16
 8011620:	d541      	bpl.n	80116a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8011622:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8011626:	4698      	mov	r8, r3
 8011628:	9603      	str	r6, [sp, #12]
 801162a:	f1b8 0f00 	cmp.w	r8, #0
 801162e:	dc56      	bgt.n	80116de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8011630:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011634:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011638:	9b01      	ldr	r3, [sp, #4]
 801163a:	2b00      	cmp	r3, #0
 801163c:	dd6c      	ble.n	8011718 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801163e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011642:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011646:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801164a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801164c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011650:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011654:	eeb0 6a62 	vmov.f32	s12, s5
 8011658:	ee61 7a27 	vmul.f32	s15, s2, s15
 801165c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011660:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011664:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011668:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801166c:	eeb0 6a43 	vmov.f32	s12, s6
 8011670:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011674:	ee12 2a90 	vmov	r2, s5
 8011678:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801167c:	fb92 fef3 	sdiv	lr, r2, r3
 8011680:	ee13 2a10 	vmov	r2, s6
 8011684:	fb92 fcf3 	sdiv	ip, r2, r3
 8011688:	9b01      	ldr	r3, [sp, #4]
 801168a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801168e:	3b01      	subs	r3, #1
 8011690:	9301      	str	r3, [sp, #4]
 8011692:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011696:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011698:	eeb0 3a67 	vmov.f32	s6, s15
 801169c:	bf08      	it	eq
 801169e:	465b      	moveq	r3, fp
 80116a0:	eef0 2a47 	vmov.f32	s5, s14
 80116a4:	e797      	b.n	80115d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80116a6:	454f      	cmp	r7, r9
 80116a8:	dabb      	bge.n	8011622 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80116aa:	fb0c 2606 	mla	r6, ip, r6, r2
 80116ae:	1436      	asrs	r6, r6, #16
 80116b0:	d4b7      	bmi.n	8011622 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80116b2:	4546      	cmp	r6, r8
 80116b4:	dab5      	bge.n	8011622 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80116b6:	461e      	mov	r6, r3
 80116b8:	46a0      	mov	r8, r4
 80116ba:	2e00      	cmp	r6, #0
 80116bc:	ddb8      	ble.n	8011630 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80116be:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80116c2:	9902      	ldr	r1, [sp, #8]
 80116c4:	1417      	asrs	r7, r2, #16
 80116c6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80116ca:	fb0a 9707 	mla	r7, sl, r7, r9
 80116ce:	4470      	add	r0, lr
 80116d0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80116d4:	f828 7b02 	strh.w	r7, [r8], #2
 80116d8:	4462      	add	r2, ip
 80116da:	3e01      	subs	r6, #1
 80116dc:	e7ed      	b.n	80116ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80116de:	ea5f 4920 	movs.w	r9, r0, asr #16
 80116e2:	d414      	bmi.n	801170e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80116e4:	68ae      	ldr	r6, [r5, #8]
 80116e6:	454e      	cmp	r6, r9
 80116e8:	dd11      	ble.n	801170e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80116ea:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80116ee:	d40e      	bmi.n	801170e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80116f0:	68ef      	ldr	r7, [r5, #12]
 80116f2:	4557      	cmp	r7, sl
 80116f4:	dd0b      	ble.n	801170e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80116f6:	b236      	sxth	r6, r6
 80116f8:	fb0a 9606 	mla	r6, sl, r6, r9
 80116fc:	9f02      	ldr	r7, [sp, #8]
 80116fe:	f06f 0101 	mvn.w	r1, #1
 8011702:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8011706:	fb01 f608 	mul.w	r6, r1, r8
 801170a:	9903      	ldr	r1, [sp, #12]
 801170c:	538f      	strh	r7, [r1, r6]
 801170e:	4470      	add	r0, lr
 8011710:	4462      	add	r2, ip
 8011712:	f108 38ff 	add.w	r8, r8, #4294967295
 8011716:	e788      	b.n	801162a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011718:	b005      	add	sp, #20
 801171a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801171e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801171e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011722:	b087      	sub	sp, #28
 8011724:	468b      	mov	fp, r1
 8011726:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011728:	9203      	str	r2, [sp, #12]
 801172a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801172e:	9204      	str	r2, [sp, #16]
 8011730:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8011734:	6841      	ldr	r1, [r0, #4]
 8011736:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801173a:	fb01 2505 	mla	r5, r1, r5, r2
 801173e:	6802      	ldr	r2, [r0, #0]
 8011740:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8011744:	f8d9 2000 	ldr.w	r2, [r9]
 8011748:	9201      	str	r2, [sp, #4]
 801174a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801174e:	f1bb 0f00 	cmp.w	fp, #0
 8011752:	dc03      	bgt.n	801175c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011754:	9a03      	ldr	r2, [sp, #12]
 8011756:	2a00      	cmp	r2, #0
 8011758:	f340 8159 	ble.w	8011a0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801175c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801175e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8011762:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8011766:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801176a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801176c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011770:	2b00      	cmp	r3, #0
 8011772:	dd0e      	ble.n	8011792 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8011774:	1402      	asrs	r2, r0, #16
 8011776:	d405      	bmi.n	8011784 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011778:	42ba      	cmp	r2, r7
 801177a:	da03      	bge.n	8011784 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801177c:	140a      	asrs	r2, r1, #16
 801177e:	d401      	bmi.n	8011784 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011780:	42b2      	cmp	r2, r6
 8011782:	db07      	blt.n	8011794 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011784:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011786:	4410      	add	r0, r2
 8011788:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801178a:	3b01      	subs	r3, #1
 801178c:	4411      	add	r1, r2
 801178e:	3502      	adds	r5, #2
 8011790:	e7ee      	b.n	8011770 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011792:	d017      	beq.n	80117c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011794:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011796:	1e5a      	subs	r2, r3, #1
 8011798:	fb04 0402 	mla	r4, r4, r2, r0
 801179c:	1424      	asrs	r4, r4, #16
 801179e:	d409      	bmi.n	80117b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80117a0:	42bc      	cmp	r4, r7
 80117a2:	da07      	bge.n	80117b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80117a4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80117a6:	fb04 1202 	mla	r2, r4, r2, r1
 80117aa:	1412      	asrs	r2, r2, #16
 80117ac:	d402      	bmi.n	80117b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80117ae:	42b2      	cmp	r2, r6
 80117b0:	f2c0 80bf 	blt.w	8011932 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80117b4:	2700      	movs	r7, #0
 80117b6:	19da      	adds	r2, r3, r7
 80117b8:	2a00      	cmp	r2, #0
 80117ba:	dc3e      	bgt.n	801183a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80117bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80117c0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80117c4:	f1bb 0f00 	cmp.w	fp, #0
 80117c8:	f340 8121 	ble.w	8011a0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80117cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80117d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80117d4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80117d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80117da:	f1bb 0b01 	subs.w	fp, fp, #1
 80117de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80117e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80117e6:	eeb0 6a62 	vmov.f32	s12, s5
 80117ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80117ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80117f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80117f6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80117fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80117fe:	eeb0 6a43 	vmov.f32	s12, s6
 8011802:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011806:	ee12 2a90 	vmov	r2, s5
 801180a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801180e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011812:	ee13 2a10 	vmov	r2, s6
 8011816:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801181a:	9313      	str	r3, [sp, #76]	; 0x4c
 801181c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801181e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011822:	9a03      	ldr	r2, [sp, #12]
 8011824:	9314      	str	r3, [sp, #80]	; 0x50
 8011826:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801182a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801182c:	eeb0 3a67 	vmov.f32	s6, s15
 8011830:	bf08      	it	eq
 8011832:	4613      	moveq	r3, r2
 8011834:	eef0 2a47 	vmov.f32	s5, s14
 8011838:	e789      	b.n	801174e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801183a:	1406      	asrs	r6, r0, #16
 801183c:	d42d      	bmi.n	801189a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801183e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8011842:	42b4      	cmp	r4, r6
 8011844:	dd29      	ble.n	801189a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011846:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801184a:	d426      	bmi.n	801189a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801184c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011850:	4562      	cmp	r2, ip
 8011852:	dd22      	ble.n	801189a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011854:	b224      	sxth	r4, r4
 8011856:	9a01      	ldr	r2, [sp, #4]
 8011858:	fb0c 6404 	mla	r4, ip, r4, r6
 801185c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8011860:	0e22      	lsrs	r2, r4, #24
 8011862:	d01a      	beq.n	801189a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011864:	9e04      	ldr	r6, [sp, #16]
 8011866:	4372      	muls	r2, r6
 8011868:	1c56      	adds	r6, r2, #1
 801186a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801186e:	1212      	asrs	r2, r2, #8
 8011870:	0a26      	lsrs	r6, r4, #8
 8011872:	2aff      	cmp	r2, #255	; 0xff
 8011874:	9605      	str	r6, [sp, #20]
 8011876:	d116      	bne.n	80118a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8011878:	f06f 0201 	mvn.w	r2, #1
 801187c:	fb02 fc07 	mul.w	ip, r2, r7
 8011880:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011884:	0962      	lsrs	r2, r4, #5
 8011886:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801188a:	f026 0607 	bic.w	r6, r6, #7
 801188e:	4316      	orrs	r6, r2
 8011890:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011894:	4326      	orrs	r6, r4
 8011896:	f825 600c 	strh.w	r6, [r5, ip]
 801189a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801189c:	4410      	add	r0, r2
 801189e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80118a0:	3f01      	subs	r7, #1
 80118a2:	4411      	add	r1, r2
 80118a4:	e787      	b.n	80117b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80118a6:	f06f 0601 	mvn.w	r6, #1
 80118aa:	437e      	muls	r6, r7
 80118ac:	fa1f fa82 	uxth.w	sl, r2
 80118b0:	f835 8006 	ldrh.w	r8, [r5, r6]
 80118b4:	9602      	str	r6, [sp, #8]
 80118b6:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80118ba:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80118be:	43d2      	mvns	r2, r2
 80118c0:	b2d2      	uxtb	r2, r2
 80118c2:	fb1c fc0a 	smulbb	ip, ip, sl
 80118c6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80118ca:	fb0e ce02 	mla	lr, lr, r2, ip
 80118ce:	b2e4      	uxtb	r4, r4
 80118d0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80118d4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80118d8:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80118dc:	fa5f f888 	uxtb.w	r8, r8
 80118e0:	fb14 f40a 	smulbb	r4, r4, sl
 80118e4:	fb08 4402 	mla	r4, r8, r2, r4
 80118e8:	fa1f fe8e 	uxth.w	lr, lr
 80118ec:	fb16 f60a 	smulbb	r6, r6, sl
 80118f0:	b2a4      	uxth	r4, r4
 80118f2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80118f6:	fb0c 6c02 	mla	ip, ip, r2, r6
 80118fa:	f10e 0201 	add.w	r2, lr, #1
 80118fe:	1c66      	adds	r6, r4, #1
 8011900:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8011904:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011908:	fa1f fc8c 	uxth.w	ip, ip
 801190c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011910:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011914:	ea46 0e0e 	orr.w	lr, r6, lr
 8011918:	f10c 0601 	add.w	r6, ip, #1
 801191c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011920:	0976      	lsrs	r6, r6, #5
 8011922:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011926:	9a02      	ldr	r2, [sp, #8]
 8011928:	ea4e 0e06 	orr.w	lr, lr, r6
 801192c:	f825 e002 	strh.w	lr, [r5, r2]
 8011930:	e7b3      	b.n	801189a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011932:	f04f 0800 	mov.w	r8, #0
 8011936:	eba3 0208 	sub.w	r2, r3, r8
 801193a:	2a00      	cmp	r2, #0
 801193c:	f77f af3e 	ble.w	80117bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011940:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8011944:	1404      	asrs	r4, r0, #16
 8011946:	140a      	asrs	r2, r1, #16
 8011948:	fb06 4202 	mla	r2, r6, r2, r4
 801194c:	9c01      	ldr	r4, [sp, #4]
 801194e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8011952:	0e22      	lsrs	r2, r4, #24
 8011954:	d016      	beq.n	8011984 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8011956:	9e04      	ldr	r6, [sp, #16]
 8011958:	4372      	muls	r2, r6
 801195a:	1c56      	adds	r6, r2, #1
 801195c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011960:	1212      	asrs	r2, r2, #8
 8011962:	2aff      	cmp	r2, #255	; 0xff
 8011964:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8011968:	d113      	bne.n	8011992 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801196a:	0962      	lsrs	r2, r4, #5
 801196c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011970:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011974:	f026 0607 	bic.w	r6, r6, #7
 8011978:	4316      	orrs	r6, r2
 801197a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801197e:	4326      	orrs	r6, r4
 8011980:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8011984:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011986:	4410      	add	r0, r2
 8011988:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801198a:	f108 0801 	add.w	r8, r8, #1
 801198e:	4411      	add	r1, r2
 8011990:	e7d1      	b.n	8011936 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8011992:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8011996:	fa1f fa82 	uxth.w	sl, r2
 801199a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801199e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80119a2:	43d2      	mvns	r2, r2
 80119a4:	b2d2      	uxtb	r2, r2
 80119a6:	fb17 f70a 	smulbb	r7, r7, sl
 80119aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80119ae:	fb0c 7c02 	mla	ip, ip, r2, r7
 80119b2:	b2e4      	uxtb	r4, r4
 80119b4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80119b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80119bc:	fa5f fe8e 	uxtb.w	lr, lr
 80119c0:	fb14 f40a 	smulbb	r4, r4, sl
 80119c4:	fb0e 4402 	mla	r4, lr, r2, r4
 80119c8:	b2f6      	uxtb	r6, r6
 80119ca:	fa1f fc8c 	uxth.w	ip, ip
 80119ce:	fb16 f60a 	smulbb	r6, r6, sl
 80119d2:	b2a4      	uxth	r4, r4
 80119d4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80119d8:	fb07 6702 	mla	r7, r7, r2, r6
 80119dc:	f10c 0201 	add.w	r2, ip, #1
 80119e0:	1c66      	adds	r6, r4, #1
 80119e2:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80119e6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80119ea:	b2bf      	uxth	r7, r7
 80119ec:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80119f0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80119f4:	ea46 0c0c 	orr.w	ip, r6, ip
 80119f8:	1c7e      	adds	r6, r7, #1
 80119fa:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80119fe:	0976      	lsrs	r6, r6, #5
 8011a00:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011a04:	ea4c 0c06 	orr.w	ip, ip, r6
 8011a08:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8011a0c:	e7ba      	b.n	8011984 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8011a0e:	b007      	add	sp, #28
 8011a10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011a14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011a14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a18:	b085      	sub	sp, #20
 8011a1a:	468b      	mov	fp, r1
 8011a1c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011a1e:	9203      	str	r2, [sp, #12]
 8011a20:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011a24:	6841      	ldr	r1, [r0, #4]
 8011a26:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8011a2a:	fb01 2404 	mla	r4, r1, r4, r2
 8011a2e:	6802      	ldr	r2, [r0, #0]
 8011a30:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011a34:	f8d8 2000 	ldr.w	r2, [r8]
 8011a38:	9201      	str	r2, [sp, #4]
 8011a3a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011a3e:	f1bb 0f00 	cmp.w	fp, #0
 8011a42:	dc03      	bgt.n	8011a4c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011a44:	9a03      	ldr	r2, [sp, #12]
 8011a46:	2a00      	cmp	r2, #0
 8011a48:	f340 814f 	ble.w	8011cea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011a4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011a4e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011a52:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011a56:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011a5a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011a5c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011a60:	2b00      	cmp	r3, #0
 8011a62:	dd0e      	ble.n	8011a82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011a64:	1408      	asrs	r0, r1, #16
 8011a66:	d405      	bmi.n	8011a74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011a68:	42b8      	cmp	r0, r7
 8011a6a:	da03      	bge.n	8011a74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011a6c:	1410      	asrs	r0, r2, #16
 8011a6e:	d401      	bmi.n	8011a74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011a70:	42b0      	cmp	r0, r6
 8011a72:	db07      	blt.n	8011a84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011a74:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011a76:	4401      	add	r1, r0
 8011a78:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011a7a:	3b01      	subs	r3, #1
 8011a7c:	4402      	add	r2, r0
 8011a7e:	3402      	adds	r4, #2
 8011a80:	e7ee      	b.n	8011a60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011a82:	d017      	beq.n	8011ab4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011a84:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011a86:	1e58      	subs	r0, r3, #1
 8011a88:	fb05 1500 	mla	r5, r5, r0, r1
 8011a8c:	142d      	asrs	r5, r5, #16
 8011a8e:	d409      	bmi.n	8011aa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011a90:	42bd      	cmp	r5, r7
 8011a92:	da07      	bge.n	8011aa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011a94:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011a96:	fb05 2000 	mla	r0, r5, r0, r2
 8011a9a:	1400      	asrs	r0, r0, #16
 8011a9c:	d402      	bmi.n	8011aa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011a9e:	42b0      	cmp	r0, r6
 8011aa0:	f2c0 80ba 	blt.w	8011c18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8011aa4:	2600      	movs	r6, #0
 8011aa6:	1998      	adds	r0, r3, r6
 8011aa8:	2800      	cmp	r0, #0
 8011aaa:	dc3e      	bgt.n	8011b2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8011aac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011ab0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011ab4:	f1bb 0f00 	cmp.w	fp, #0
 8011ab8:	f340 8117 	ble.w	8011cea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011abc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011ac0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011ac4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011ac8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011aca:	f1bb 0b01 	subs.w	fp, fp, #1
 8011ace:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011ad2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011ad6:	eeb0 6a62 	vmov.f32	s12, s5
 8011ada:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011ade:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011ae2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011ae6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011aea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011aee:	eeb0 6a43 	vmov.f32	s12, s6
 8011af2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011af6:	ee12 2a90 	vmov	r2, s5
 8011afa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011afe:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b02:	ee13 2a10 	vmov	r2, s6
 8011b06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011b0a:	9311      	str	r3, [sp, #68]	; 0x44
 8011b0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011b0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b12:	9a03      	ldr	r2, [sp, #12]
 8011b14:	9312      	str	r3, [sp, #72]	; 0x48
 8011b16:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011b1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011b1c:	eeb0 3a67 	vmov.f32	s6, s15
 8011b20:	bf08      	it	eq
 8011b22:	4613      	moveq	r3, r2
 8011b24:	eef0 2a47 	vmov.f32	s5, s14
 8011b28:	e789      	b.n	8011a3e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011b2a:	140f      	asrs	r7, r1, #16
 8011b2c:	d424      	bmi.n	8011b78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011b2e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8011b32:	42bd      	cmp	r5, r7
 8011b34:	dd20      	ble.n	8011b78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011b36:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011b3a:	d41d      	bmi.n	8011b78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011b3c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8011b40:	4560      	cmp	r0, ip
 8011b42:	dd19      	ble.n	8011b78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011b44:	b22d      	sxth	r5, r5
 8011b46:	fb0c 7505 	mla	r5, ip, r5, r7
 8011b4a:	9801      	ldr	r0, [sp, #4]
 8011b4c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8011b50:	0e07      	lsrs	r7, r0, #24
 8011b52:	2fff      	cmp	r7, #255	; 0xff
 8011b54:	d116      	bne.n	8011b84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011b56:	f06f 0501 	mvn.w	r5, #1
 8011b5a:	fb05 f706 	mul.w	r7, r5, r6
 8011b5e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8011b62:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8011b66:	0945      	lsrs	r5, r0, #5
 8011b68:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011b6c:	ea4c 0505 	orr.w	r5, ip, r5
 8011b70:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011b74:	4305      	orrs	r5, r0
 8011b76:	53e5      	strh	r5, [r4, r7]
 8011b78:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011b7a:	4401      	add	r1, r0
 8011b7c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011b7e:	3e01      	subs	r6, #1
 8011b80:	4402      	add	r2, r0
 8011b82:	e790      	b.n	8011aa6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011b84:	b2fd      	uxtb	r5, r7
 8011b86:	2f00      	cmp	r7, #0
 8011b88:	d0f6      	beq.n	8011b78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011b8a:	f06f 0701 	mvn.w	r7, #1
 8011b8e:	4377      	muls	r7, r6
 8011b90:	fa1f f985 	uxth.w	r9, r5
 8011b94:	f834 e007 	ldrh.w	lr, [r4, r7]
 8011b98:	9702      	str	r7, [sp, #8]
 8011b9a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011b9e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011ba2:	43ed      	mvns	r5, r5
 8011ba4:	b2ed      	uxtb	r5, r5
 8011ba6:	fb17 f709 	smulbb	r7, r7, r9
 8011baa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011bae:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011bb2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011bb6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011bba:	b2c0      	uxtb	r0, r0
 8011bbc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011bc0:	fa5f fe8e 	uxtb.w	lr, lr
 8011bc4:	fb10 f009 	smulbb	r0, r0, r9
 8011bc8:	fb0e 0005 	mla	r0, lr, r5, r0
 8011bcc:	b280      	uxth	r0, r0
 8011bce:	fa1f fc8c 	uxth.w	ip, ip
 8011bd2:	fb1a fa09 	smulbb	sl, sl, r9
 8011bd6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011bda:	fb07 a705 	mla	r7, r7, r5, sl
 8011bde:	f100 0a01 	add.w	sl, r0, #1
 8011be2:	f10c 0501 	add.w	r5, ip, #1
 8011be6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011bea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011bee:	b2bf      	uxth	r7, r7
 8011bf0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011bf4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011bf8:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011bfc:	f107 0a01 	add.w	sl, r7, #1
 8011c00:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011c04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011c08:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011c0c:	9802      	ldr	r0, [sp, #8]
 8011c0e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011c12:	f824 c000 	strh.w	ip, [r4, r0]
 8011c16:	e7af      	b.n	8011b78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011c18:	f04f 0e00 	mov.w	lr, #0
 8011c1c:	eba3 000e 	sub.w	r0, r3, lr
 8011c20:	2800      	cmp	r0, #0
 8011c22:	f77f af43 	ble.w	8011aac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011c26:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8011c2a:	140d      	asrs	r5, r1, #16
 8011c2c:	1410      	asrs	r0, r2, #16
 8011c2e:	fb06 5000 	mla	r0, r6, r0, r5
 8011c32:	9d01      	ldr	r5, [sp, #4]
 8011c34:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8011c38:	0e2e      	lsrs	r6, r5, #24
 8011c3a:	2eff      	cmp	r6, #255	; 0xff
 8011c3c:	d112      	bne.n	8011c64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8011c3e:	482c      	ldr	r0, [pc, #176]	; (8011cf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011c40:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8011c44:	0968      	lsrs	r0, r5, #5
 8011c46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8011c4a:	4330      	orrs	r0, r6
 8011c4c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011c50:	4328      	orrs	r0, r5
 8011c52:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8011c56:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011c58:	4401      	add	r1, r0
 8011c5a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011c5c:	f10e 0e01 	add.w	lr, lr, #1
 8011c60:	4402      	add	r2, r0
 8011c62:	e7db      	b.n	8011c1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8011c64:	b2f0      	uxtb	r0, r6
 8011c66:	2e00      	cmp	r6, #0
 8011c68:	d0f5      	beq.n	8011c56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8011c6a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011c6e:	fa1f f980 	uxth.w	r9, r0
 8011c72:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011c76:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011c7a:	43c0      	mvns	r0, r0
 8011c7c:	b2c0      	uxtb	r0, r0
 8011c7e:	fb16 f609 	smulbb	r6, r6, r9
 8011c82:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011c86:	fb07 6700 	mla	r7, r7, r0, r6
 8011c8a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011c8e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011c92:	b2ed      	uxtb	r5, r5
 8011c94:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011c98:	fa5f fc8c 	uxtb.w	ip, ip
 8011c9c:	fb15 f509 	smulbb	r5, r5, r9
 8011ca0:	fb0c 5500 	mla	r5, ip, r0, r5
 8011ca4:	b2bf      	uxth	r7, r7
 8011ca6:	fb1a fa09 	smulbb	sl, sl, r9
 8011caa:	b2ad      	uxth	r5, r5
 8011cac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011cb0:	fb06 a600 	mla	r6, r6, r0, sl
 8011cb4:	1c78      	adds	r0, r7, #1
 8011cb6:	f105 0a01 	add.w	sl, r5, #1
 8011cba:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8011cbe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011cc2:	b2b6      	uxth	r6, r6
 8011cc4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011cc8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011ccc:	ea4a 0707 	orr.w	r7, sl, r7
 8011cd0:	f106 0a01 	add.w	sl, r6, #1
 8011cd4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011cd8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011cdc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011ce0:	ea47 070a 	orr.w	r7, r7, sl
 8011ce4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8011ce8:	e7b5      	b.n	8011c56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8011cea:	b005      	add	sp, #20
 8011cec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011cf0:	fffff800 	.word	0xfffff800

08011cf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cf8:	b087      	sub	sp, #28
 8011cfa:	468b      	mov	fp, r1
 8011cfc:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011cfe:	9203      	str	r2, [sp, #12]
 8011d00:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011d04:	9204      	str	r2, [sp, #16]
 8011d06:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011d0a:	6841      	ldr	r1, [r0, #4]
 8011d0c:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8011d10:	fb01 2404 	mla	r4, r1, r4, r2
 8011d14:	6802      	ldr	r2, [r0, #0]
 8011d16:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011d1a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8011d1e:	3201      	adds	r2, #1
 8011d20:	f022 0201 	bic.w	r2, r2, #1
 8011d24:	9200      	str	r2, [sp, #0]
 8011d26:	f8d9 2000 	ldr.w	r2, [r9]
 8011d2a:	9201      	str	r2, [sp, #4]
 8011d2c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011d30:	f1bb 0f00 	cmp.w	fp, #0
 8011d34:	dc03      	bgt.n	8011d3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8011d36:	9a03      	ldr	r2, [sp, #12]
 8011d38:	2a00      	cmp	r2, #0
 8011d3a:	f340 8169 	ble.w	8012010 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8011d3e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011d40:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8011d44:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8011d48:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011d4c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011d4e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011d52:	2b00      	cmp	r3, #0
 8011d54:	dd0e      	ble.n	8011d74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011d56:	1402      	asrs	r2, r0, #16
 8011d58:	d405      	bmi.n	8011d66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011d5a:	42ba      	cmp	r2, r7
 8011d5c:	da03      	bge.n	8011d66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011d5e:	140a      	asrs	r2, r1, #16
 8011d60:	d401      	bmi.n	8011d66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011d62:	42b2      	cmp	r2, r6
 8011d64:	db07      	blt.n	8011d76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8011d66:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011d68:	4410      	add	r0, r2
 8011d6a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011d6c:	3b01      	subs	r3, #1
 8011d6e:	4411      	add	r1, r2
 8011d70:	3402      	adds	r4, #2
 8011d72:	e7ee      	b.n	8011d52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8011d74:	d017      	beq.n	8011da6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8011d76:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011d78:	1e5a      	subs	r2, r3, #1
 8011d7a:	fb05 0502 	mla	r5, r5, r2, r0
 8011d7e:	142d      	asrs	r5, r5, #16
 8011d80:	d409      	bmi.n	8011d96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011d82:	42bd      	cmp	r5, r7
 8011d84:	da07      	bge.n	8011d96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011d86:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011d88:	fb05 1202 	mla	r2, r5, r2, r1
 8011d8c:	1412      	asrs	r2, r2, #16
 8011d8e:	d402      	bmi.n	8011d96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011d90:	42b2      	cmp	r2, r6
 8011d92:	f2c0 80c7 	blt.w	8011f24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8011d96:	2700      	movs	r7, #0
 8011d98:	19da      	adds	r2, r3, r7
 8011d9a:	2a00      	cmp	r2, #0
 8011d9c:	dc3e      	bgt.n	8011e1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011d9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011da2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011da6:	f1bb 0f00 	cmp.w	fp, #0
 8011daa:	f340 8131 	ble.w	8012010 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8011dae:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011db2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011db6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011dba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011dbc:	f1bb 0b01 	subs.w	fp, fp, #1
 8011dc0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011dc4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011dc8:	eeb0 6a62 	vmov.f32	s12, s5
 8011dcc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011dd0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011dd4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011dd8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011ddc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011de0:	eeb0 6a43 	vmov.f32	s12, s6
 8011de4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011de8:	ee12 2a90 	vmov	r2, s5
 8011dec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011df0:	fb92 f3f3 	sdiv	r3, r2, r3
 8011df4:	ee13 2a10 	vmov	r2, s6
 8011df8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011dfc:	9313      	str	r3, [sp, #76]	; 0x4c
 8011dfe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e00:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e04:	9a03      	ldr	r2, [sp, #12]
 8011e06:	9314      	str	r3, [sp, #80]	; 0x50
 8011e08:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011e0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e0e:	eeb0 3a67 	vmov.f32	s6, s15
 8011e12:	bf08      	it	eq
 8011e14:	4613      	moveq	r3, r2
 8011e16:	eef0 2a47 	vmov.f32	s5, s14
 8011e1a:	e789      	b.n	8011d30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011e1c:	1405      	asrs	r5, r0, #16
 8011e1e:	d435      	bmi.n	8011e8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011e20:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8011e24:	42aa      	cmp	r2, r5
 8011e26:	dd31      	ble.n	8011e8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011e28:	140e      	asrs	r6, r1, #16
 8011e2a:	d42f      	bmi.n	8011e8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011e2c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011e30:	42b2      	cmp	r2, r6
 8011e32:	dd2b      	ble.n	8011e8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011e34:	9a00      	ldr	r2, [sp, #0]
 8011e36:	fb06 5502 	mla	r5, r6, r2, r5
 8011e3a:	086a      	lsrs	r2, r5, #1
 8011e3c:	9e01      	ldr	r6, [sp, #4]
 8011e3e:	5cb2      	ldrb	r2, [r6, r2]
 8011e40:	07ee      	lsls	r6, r5, #31
 8011e42:	bf54      	ite	pl
 8011e44:	f002 020f 	andpl.w	r2, r2, #15
 8011e48:	1112      	asrmi	r2, r2, #4
 8011e4a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011e4e:	b2d2      	uxtb	r2, r2
 8011e50:	b1e2      	cbz	r2, 8011e8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011e52:	9d04      	ldr	r5, [sp, #16]
 8011e54:	436a      	muls	r2, r5
 8011e56:	1c55      	adds	r5, r2, #1
 8011e58:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011e5c:	4d6e      	ldr	r5, [pc, #440]	; (8012018 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8011e5e:	682d      	ldr	r5, [r5, #0]
 8011e60:	1212      	asrs	r2, r2, #8
 8011e62:	0a2e      	lsrs	r6, r5, #8
 8011e64:	2aff      	cmp	r2, #255	; 0xff
 8011e66:	9605      	str	r6, [sp, #20]
 8011e68:	d116      	bne.n	8011e98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8011e6a:	f06f 0201 	mvn.w	r2, #1
 8011e6e:	fb02 fc07 	mul.w	ip, r2, r7
 8011e72:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011e76:	096a      	lsrs	r2, r5, #5
 8011e78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011e7c:	f026 0607 	bic.w	r6, r6, #7
 8011e80:	4316      	orrs	r6, r2
 8011e82:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011e86:	432e      	orrs	r6, r5
 8011e88:	f824 600c 	strh.w	r6, [r4, ip]
 8011e8c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011e8e:	4410      	add	r0, r2
 8011e90:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011e92:	3f01      	subs	r7, #1
 8011e94:	4411      	add	r1, r2
 8011e96:	e77f      	b.n	8011d98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8011e98:	f06f 0601 	mvn.w	r6, #1
 8011e9c:	437e      	muls	r6, r7
 8011e9e:	fa1f fa82 	uxth.w	sl, r2
 8011ea2:	f834 8006 	ldrh.w	r8, [r4, r6]
 8011ea6:	9602      	str	r6, [sp, #8]
 8011ea8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011eac:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8011eb0:	43d2      	mvns	r2, r2
 8011eb2:	b2d2      	uxtb	r2, r2
 8011eb4:	fb1c fc0a 	smulbb	ip, ip, sl
 8011eb8:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011ebc:	fb0e ce02 	mla	lr, lr, r2, ip
 8011ec0:	b2ed      	uxtb	r5, r5
 8011ec2:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8011ec6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011eca:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8011ece:	fa5f f888 	uxtb.w	r8, r8
 8011ed2:	fb15 f50a 	smulbb	r5, r5, sl
 8011ed6:	fb08 5502 	mla	r5, r8, r2, r5
 8011eda:	fa1f fe8e 	uxth.w	lr, lr
 8011ede:	fb16 f60a 	smulbb	r6, r6, sl
 8011ee2:	b2ad      	uxth	r5, r5
 8011ee4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011ee8:	fb0c 6c02 	mla	ip, ip, r2, r6
 8011eec:	f10e 0201 	add.w	r2, lr, #1
 8011ef0:	1c6e      	adds	r6, r5, #1
 8011ef2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8011ef6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8011efa:	fa1f fc8c 	uxth.w	ip, ip
 8011efe:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011f02:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011f06:	ea46 0e0e 	orr.w	lr, r6, lr
 8011f0a:	f10c 0601 	add.w	r6, ip, #1
 8011f0e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011f12:	0976      	lsrs	r6, r6, #5
 8011f14:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011f18:	9a02      	ldr	r2, [sp, #8]
 8011f1a:	ea4e 0e06 	orr.w	lr, lr, r6
 8011f1e:	f824 e002 	strh.w	lr, [r4, r2]
 8011f22:	e7b3      	b.n	8011e8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011f24:	f04f 0800 	mov.w	r8, #0
 8011f28:	eba3 0208 	sub.w	r2, r3, r8
 8011f2c:	2a00      	cmp	r2, #0
 8011f2e:	f77f af36 	ble.w	8011d9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011f32:	9e00      	ldr	r6, [sp, #0]
 8011f34:	1402      	asrs	r2, r0, #16
 8011f36:	140d      	asrs	r5, r1, #16
 8011f38:	fb06 2505 	mla	r5, r6, r5, r2
 8011f3c:	086a      	lsrs	r2, r5, #1
 8011f3e:	9e01      	ldr	r6, [sp, #4]
 8011f40:	5cb2      	ldrb	r2, [r6, r2]
 8011f42:	07ed      	lsls	r5, r5, #31
 8011f44:	bf54      	ite	pl
 8011f46:	f002 020f 	andpl.w	r2, r2, #15
 8011f4a:	1112      	asrmi	r2, r2, #4
 8011f4c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011f50:	b2d2      	uxtb	r2, r2
 8011f52:	b1c2      	cbz	r2, 8011f86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8011f54:	9d04      	ldr	r5, [sp, #16]
 8011f56:	436a      	muls	r2, r5
 8011f58:	1c55      	adds	r5, r2, #1
 8011f5a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011f5e:	4d2e      	ldr	r5, [pc, #184]	; (8012018 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8011f60:	1212      	asrs	r2, r2, #8
 8011f62:	682e      	ldr	r6, [r5, #0]
 8011f64:	2aff      	cmp	r2, #255	; 0xff
 8011f66:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8011f6a:	d113      	bne.n	8011f94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8011f6c:	0972      	lsrs	r2, r6, #5
 8011f6e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8011f72:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011f76:	f025 0507 	bic.w	r5, r5, #7
 8011f7a:	4315      	orrs	r5, r2
 8011f7c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8011f80:	4335      	orrs	r5, r6
 8011f82:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8011f86:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f88:	4410      	add	r0, r2
 8011f8a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f8c:	f108 0801 	add.w	r8, r8, #1
 8011f90:	4411      	add	r1, r2
 8011f92:	e7c9      	b.n	8011f28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8011f94:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8011f98:	fa1f fa82 	uxth.w	sl, r2
 8011f9c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011fa0:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8011fa4:	43d2      	mvns	r2, r2
 8011fa6:	b2d2      	uxtb	r2, r2
 8011fa8:	fb17 f70a 	smulbb	r7, r7, sl
 8011fac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011fb0:	fb0c 7c02 	mla	ip, ip, r2, r7
 8011fb4:	b2f6      	uxtb	r6, r6
 8011fb6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011fba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011fbe:	fa5f fe8e 	uxtb.w	lr, lr
 8011fc2:	fb16 f60a 	smulbb	r6, r6, sl
 8011fc6:	fb0e 6602 	mla	r6, lr, r2, r6
 8011fca:	b2ed      	uxtb	r5, r5
 8011fcc:	fa1f fc8c 	uxth.w	ip, ip
 8011fd0:	fb15 f50a 	smulbb	r5, r5, sl
 8011fd4:	b2b6      	uxth	r6, r6
 8011fd6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011fda:	fb07 5702 	mla	r7, r7, r2, r5
 8011fde:	f10c 0201 	add.w	r2, ip, #1
 8011fe2:	1c75      	adds	r5, r6, #1
 8011fe4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011fe8:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8011fec:	b2bf      	uxth	r7, r7
 8011fee:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011ff2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011ff6:	ea45 0c0c 	orr.w	ip, r5, ip
 8011ffa:	1c7d      	adds	r5, r7, #1
 8011ffc:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8012000:	096d      	lsrs	r5, r5, #5
 8012002:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012006:	ea4c 0c05 	orr.w	ip, ip, r5
 801200a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801200e:	e7ba      	b.n	8011f86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8012010:	b007      	add	sp, #28
 8012012:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012016:	bf00      	nop
 8012018:	20013510 	.word	0x20013510

0801201c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801201c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012020:	b087      	sub	sp, #28
 8012022:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8012330 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8012026:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012028:	9205      	str	r2, [sp, #20]
 801202a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801202e:	9101      	str	r1, [sp, #4]
 8012030:	6841      	ldr	r1, [r0, #4]
 8012032:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8012036:	fb01 2404 	mla	r4, r1, r4, r2
 801203a:	6802      	ldr	r2, [r0, #0]
 801203c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012040:	f8db 2008 	ldr.w	r2, [fp, #8]
 8012044:	3201      	adds	r2, #1
 8012046:	f022 0201 	bic.w	r2, r2, #1
 801204a:	9202      	str	r2, [sp, #8]
 801204c:	f8db 2000 	ldr.w	r2, [fp]
 8012050:	9203      	str	r2, [sp, #12]
 8012052:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012056:	9a01      	ldr	r2, [sp, #4]
 8012058:	2a00      	cmp	r2, #0
 801205a:	dc03      	bgt.n	8012064 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801205c:	9a05      	ldr	r2, [sp, #20]
 801205e:	2a00      	cmp	r2, #0
 8012060:	f340 8162 	ble.w	8012328 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8012064:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012066:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801206a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801206e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012072:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012074:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012078:	2b00      	cmp	r3, #0
 801207a:	dd0e      	ble.n	801209a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801207c:	1402      	asrs	r2, r0, #16
 801207e:	d405      	bmi.n	801208c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012080:	42ba      	cmp	r2, r7
 8012082:	da03      	bge.n	801208c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012084:	140a      	asrs	r2, r1, #16
 8012086:	d401      	bmi.n	801208c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012088:	42b2      	cmp	r2, r6
 801208a:	db07      	blt.n	801209c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801208c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801208e:	4410      	add	r0, r2
 8012090:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012092:	3b01      	subs	r3, #1
 8012094:	4411      	add	r1, r2
 8012096:	3402      	adds	r4, #2
 8012098:	e7ee      	b.n	8012078 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801209a:	d017      	beq.n	80120cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801209c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801209e:	1e5a      	subs	r2, r3, #1
 80120a0:	fb05 0502 	mla	r5, r5, r2, r0
 80120a4:	142d      	asrs	r5, r5, #16
 80120a6:	d409      	bmi.n	80120bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80120a8:	42bd      	cmp	r5, r7
 80120aa:	da07      	bge.n	80120bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80120ac:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80120ae:	fb05 1202 	mla	r2, r5, r2, r1
 80120b2:	1412      	asrs	r2, r2, #16
 80120b4:	d402      	bmi.n	80120bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80120b6:	42b2      	cmp	r2, r6
 80120b8:	f2c0 80c3 	blt.w	8012242 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80120bc:	2500      	movs	r5, #0
 80120be:	195a      	adds	r2, r3, r5
 80120c0:	2a00      	cmp	r2, #0
 80120c2:	dc3f      	bgt.n	8012144 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80120c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80120c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80120cc:	9b01      	ldr	r3, [sp, #4]
 80120ce:	2b00      	cmp	r3, #0
 80120d0:	f340 812a 	ble.w	8012328 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80120d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80120d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80120dc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80120e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80120e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80120e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80120ea:	eeb0 6a62 	vmov.f32	s12, s5
 80120ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80120f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80120f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80120fa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80120fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012102:	eeb0 6a43 	vmov.f32	s12, s6
 8012106:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801210a:	ee12 2a90 	vmov	r2, s5
 801210e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012112:	fb92 f3f3 	sdiv	r3, r2, r3
 8012116:	ee13 2a10 	vmov	r2, s6
 801211a:	9313      	str	r3, [sp, #76]	; 0x4c
 801211c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801211e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012122:	9314      	str	r3, [sp, #80]	; 0x50
 8012124:	9b01      	ldr	r3, [sp, #4]
 8012126:	9a05      	ldr	r2, [sp, #20]
 8012128:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801212c:	3b01      	subs	r3, #1
 801212e:	9301      	str	r3, [sp, #4]
 8012130:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012134:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012136:	eeb0 3a67 	vmov.f32	s6, s15
 801213a:	bf08      	it	eq
 801213c:	4613      	moveq	r3, r2
 801213e:	eef0 2a47 	vmov.f32	s5, s14
 8012142:	e788      	b.n	8012056 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8012144:	1406      	asrs	r6, r0, #16
 8012146:	d42c      	bmi.n	80121a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012148:	f8db 2008 	ldr.w	r2, [fp, #8]
 801214c:	42b2      	cmp	r2, r6
 801214e:	dd28      	ble.n	80121a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012150:	140f      	asrs	r7, r1, #16
 8012152:	d426      	bmi.n	80121a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012154:	f8db 200c 	ldr.w	r2, [fp, #12]
 8012158:	42ba      	cmp	r2, r7
 801215a:	dd22      	ble.n	80121a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801215c:	9a02      	ldr	r2, [sp, #8]
 801215e:	fb07 6602 	mla	r6, r7, r2, r6
 8012162:	0872      	lsrs	r2, r6, #1
 8012164:	9f03      	ldr	r7, [sp, #12]
 8012166:	5cba      	ldrb	r2, [r7, r2]
 8012168:	07f6      	lsls	r6, r6, #31
 801216a:	bf54      	ite	pl
 801216c:	f002 020f 	andpl.w	r2, r2, #15
 8012170:	1112      	asrmi	r2, r2, #4
 8012172:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012176:	b2d2      	uxtb	r2, r2
 8012178:	2aff      	cmp	r2, #255	; 0xff
 801217a:	d118      	bne.n	80121ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801217c:	f8d8 2000 	ldr.w	r2, [r8]
 8012180:	f06f 0601 	mvn.w	r6, #1
 8012184:	fb06 f705 	mul.w	r7, r6, r5
 8012188:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801218c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8012190:	0956      	lsrs	r6, r2, #5
 8012192:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012196:	ea4c 0606 	orr.w	r6, ip, r6
 801219a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801219e:	4316      	orrs	r6, r2
 80121a0:	53e6      	strh	r6, [r4, r7]
 80121a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80121a4:	4410      	add	r0, r2
 80121a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80121a8:	3d01      	subs	r5, #1
 80121aa:	4411      	add	r1, r2
 80121ac:	e787      	b.n	80120be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80121ae:	2a00      	cmp	r2, #0
 80121b0:	d0f7      	beq.n	80121a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80121b2:	f06f 0601 	mvn.w	r6, #1
 80121b6:	436e      	muls	r6, r5
 80121b8:	f8d8 c000 	ldr.w	ip, [r8]
 80121bc:	f834 e006 	ldrh.w	lr, [r4, r6]
 80121c0:	9604      	str	r6, [sp, #16]
 80121c2:	fa1f f982 	uxth.w	r9, r2
 80121c6:	ea4f 272e 	mov.w	r7, lr, asr #8
 80121ca:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80121ce:	43d2      	mvns	r2, r2
 80121d0:	b2d2      	uxtb	r2, r2
 80121d2:	fb16 f609 	smulbb	r6, r6, r9
 80121d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80121da:	fb07 6702 	mla	r7, r7, r2, r6
 80121de:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80121e2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80121e6:	fa5f fc8c 	uxtb.w	ip, ip
 80121ea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80121ee:	fa5f fe8e 	uxtb.w	lr, lr
 80121f2:	fb1c fc09 	smulbb	ip, ip, r9
 80121f6:	fb0e cc02 	mla	ip, lr, r2, ip
 80121fa:	b2bf      	uxth	r7, r7
 80121fc:	fb1a fa09 	smulbb	sl, sl, r9
 8012200:	fa1f fc8c 	uxth.w	ip, ip
 8012204:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012208:	fb06 a602 	mla	r6, r6, r2, sl
 801220c:	1c7a      	adds	r2, r7, #1
 801220e:	f10c 0a01 	add.w	sl, ip, #1
 8012212:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012216:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801221a:	b2b6      	uxth	r6, r6
 801221c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012220:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012224:	ea4a 0707 	orr.w	r7, sl, r7
 8012228:	f106 0a01 	add.w	sl, r6, #1
 801222c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012230:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012234:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012238:	9a04      	ldr	r2, [sp, #16]
 801223a:	ea47 070a 	orr.w	r7, r7, sl
 801223e:	52a7      	strh	r7, [r4, r2]
 8012240:	e7af      	b.n	80121a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012242:	f04f 0e00 	mov.w	lr, #0
 8012246:	eba3 020e 	sub.w	r2, r3, lr
 801224a:	2a00      	cmp	r2, #0
 801224c:	f77f af3a 	ble.w	80120c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8012250:	9e02      	ldr	r6, [sp, #8]
 8012252:	1402      	asrs	r2, r0, #16
 8012254:	140d      	asrs	r5, r1, #16
 8012256:	fb06 2505 	mla	r5, r6, r5, r2
 801225a:	086a      	lsrs	r2, r5, #1
 801225c:	9e03      	ldr	r6, [sp, #12]
 801225e:	5cb2      	ldrb	r2, [r6, r2]
 8012260:	07ed      	lsls	r5, r5, #31
 8012262:	bf54      	ite	pl
 8012264:	f002 020f 	andpl.w	r2, r2, #15
 8012268:	1112      	asrmi	r2, r2, #4
 801226a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801226e:	b2d2      	uxtb	r2, r2
 8012270:	2aff      	cmp	r2, #255	; 0xff
 8012272:	d115      	bne.n	80122a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8012274:	f8d8 5000 	ldr.w	r5, [r8]
 8012278:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801227c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8012280:	096a      	lsrs	r2, r5, #5
 8012282:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012286:	4332      	orrs	r2, r6
 8012288:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801228c:	432a      	orrs	r2, r5
 801228e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8012292:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012294:	4410      	add	r0, r2
 8012296:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012298:	f10e 0e01 	add.w	lr, lr, #1
 801229c:	4411      	add	r1, r2
 801229e:	e7d2      	b.n	8012246 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80122a0:	2a00      	cmp	r2, #0
 80122a2:	d0f6      	beq.n	8012292 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80122a4:	f8d8 7000 	ldr.w	r7, [r8]
 80122a8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80122ac:	fa1f f982 	uxth.w	r9, r2
 80122b0:	ea4f 262c 	mov.w	r6, ip, asr #8
 80122b4:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80122b8:	43d2      	mvns	r2, r2
 80122ba:	b2d2      	uxtb	r2, r2
 80122bc:	fb15 f509 	smulbb	r5, r5, r9
 80122c0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80122c4:	fb06 5602 	mla	r6, r6, r2, r5
 80122c8:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80122cc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80122d0:	b2ff      	uxtb	r7, r7
 80122d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80122d6:	fa5f fc8c 	uxtb.w	ip, ip
 80122da:	fb17 f709 	smulbb	r7, r7, r9
 80122de:	fb0c 7702 	mla	r7, ip, r2, r7
 80122e2:	b2b6      	uxth	r6, r6
 80122e4:	fb1a fa09 	smulbb	sl, sl, r9
 80122e8:	b2bf      	uxth	r7, r7
 80122ea:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80122ee:	fb05 a502 	mla	r5, r5, r2, sl
 80122f2:	1c72      	adds	r2, r6, #1
 80122f4:	f107 0a01 	add.w	sl, r7, #1
 80122f8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80122fc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012300:	b2ad      	uxth	r5, r5
 8012302:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012306:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801230a:	ea4a 0606 	orr.w	r6, sl, r6
 801230e:	f105 0a01 	add.w	sl, r5, #1
 8012312:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012316:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801231a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801231e:	ea46 060a 	orr.w	r6, r6, sl
 8012322:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8012326:	e7b4      	b.n	8012292 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8012328:	b007      	add	sp, #28
 801232a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801232e:	bf00      	nop
 8012330:	20013510 	.word	0x20013510

08012334 <_ZN8touchgfx8LCD16bppD1Ev>:
 8012334:	4770      	bx	lr

08012336 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8012336:	4770      	bx	lr

08012338 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8012338:	4770      	bx	lr

0801233a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801233a:	4770      	bx	lr

0801233c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801233c:	4770      	bx	lr

0801233e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801233e:	4770      	bx	lr

08012340 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012340:	4770      	bx	lr

08012342 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012342:	4770      	bx	lr

08012344 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012344:	4770      	bx	lr

08012346 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012346:	4770      	bx	lr

08012348 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012348:	4770      	bx	lr

0801234a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801234a:	4770      	bx	lr

0801234c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801234c:	4770      	bx	lr

0801234e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801234e:	4770      	bx	lr

08012350 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012350:	4770      	bx	lr

08012352 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012352:	4770      	bx	lr

08012354 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012354:	4770      	bx	lr

08012356 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012356:	4770      	bx	lr

08012358 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012358:	4770      	bx	lr

0801235a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801235a:	4770      	bx	lr

0801235c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801235c:	4770      	bx	lr

0801235e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801235e:	4770      	bx	lr

08012360 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8012360:	4770      	bx	lr

08012362 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012362:	4770      	bx	lr

08012364 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8012364:	4770      	bx	lr

08012366 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012366:	4770      	bx	lr

08012368 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012368:	4770      	bx	lr

0801236a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801236a:	4770      	bx	lr

0801236c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801236c:	4770      	bx	lr
	...

08012370 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012370:	b508      	push	{r3, lr}
 8012372:	4b06      	ldr	r3, [pc, #24]	; (801238c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8012374:	8818      	ldrh	r0, [r3, #0]
 8012376:	b928      	cbnz	r0, 8012384 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8012378:	4b05      	ldr	r3, [pc, #20]	; (8012390 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801237a:	4a06      	ldr	r2, [pc, #24]	; (8012394 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 801237c:	4806      	ldr	r0, [pc, #24]	; (8012398 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801237e:	2150      	movs	r1, #80	; 0x50
 8012380:	f009 fbcc 	bl	801bb1c <__assert_func>
 8012384:	0040      	lsls	r0, r0, #1
 8012386:	b280      	uxth	r0, r0
 8012388:	bd08      	pop	{r3, pc}
 801238a:	bf00      	nop
 801238c:	20013502 	.word	0x20013502
 8012390:	08020670 	.word	0x08020670
 8012394:	08020c6c 	.word	0x08020c6c
 8012398:	080206b2 	.word	0x080206b2

0801239c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801239c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123a0:	b08b      	sub	sp, #44	; 0x2c
 80123a2:	460f      	mov	r7, r1
 80123a4:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 80123a8:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80123ac:	4616      	mov	r6, r2
 80123ae:	f1bb 0f00 	cmp.w	fp, #0
 80123b2:	d049      	beq.n	8012448 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80123b4:	6810      	ldr	r0, [r2, #0]
 80123b6:	6851      	ldr	r1, [r2, #4]
 80123b8:	ad06      	add	r5, sp, #24
 80123ba:	c503      	stmia	r5!, {r0, r1}
 80123bc:	6818      	ldr	r0, [r3, #0]
 80123be:	6859      	ldr	r1, [r3, #4]
 80123c0:	ad08      	add	r5, sp, #32
 80123c2:	c503      	stmia	r5!, {r0, r1}
 80123c4:	a806      	add	r0, sp, #24
 80123c6:	f7fa f99f 	bl	800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80123ca:	4631      	mov	r1, r6
 80123cc:	a808      	add	r0, sp, #32
 80123ce:	f7fa f9c3 	bl	800c758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80123d2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80123d6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80123da:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80123de:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80123e2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80123e6:	fb16 2103 	smlabb	r1, r6, r3, r2
 80123ea:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80123ee:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80123f2:	4f5f      	ldr	r7, [pc, #380]	; (8012570 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80123f4:	440a      	add	r2, r1
 80123f6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80123fa:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80123fe:	6838      	ldr	r0, [r7, #0]
 8012400:	4413      	add	r3, r2
 8012402:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012406:	6803      	ldr	r3, [r0, #0]
 8012408:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801240a:	4798      	blx	r3
 801240c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012410:	46b9      	mov	r9, r7
 8012412:	d01c      	beq.n	801244e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8012414:	f010 0f04 	tst.w	r0, #4
 8012418:	d01d      	beq.n	8012456 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801241a:	f8d9 0000 	ldr.w	r0, [r9]
 801241e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012422:	6801      	ldr	r1, [r0, #0]
 8012424:	f8cd b00c 	str.w	fp, [sp, #12]
 8012428:	2700      	movs	r7, #0
 801242a:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801242e:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8012432:	9402      	str	r4, [sp, #8]
 8012434:	b2ad      	uxth	r5, r5
 8012436:	fa1f f488 	uxth.w	r4, r8
 801243a:	9501      	str	r5, [sp, #4]
 801243c:	9400      	str	r4, [sp, #0]
 801243e:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8012440:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012444:	4631      	mov	r1, r6
 8012446:	47a0      	blx	r4
 8012448:	b00b      	add	sp, #44	; 0x2c
 801244a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801244e:	b914      	cbnz	r4, 8012456 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8012450:	f010 0f01 	tst.w	r0, #1
 8012454:	e7e0      	b.n	8012418 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8012456:	f8d9 0000 	ldr.w	r0, [r9]
 801245a:	6803      	ldr	r3, [r0, #0]
 801245c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801245e:	4798      	blx	r3
 8012460:	4b44      	ldr	r3, [pc, #272]	; (8012574 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8012462:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8012466:	881a      	ldrh	r2, [r3, #0]
 8012468:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801246c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012470:	fb02 1404 	mla	r4, r2, r4, r1
 8012474:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012478:	469a      	mov	sl, r3
 801247a:	fb05 f502 	mul.w	r5, r5, r2
 801247e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8012482:	d059      	beq.n	8012538 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8012484:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8012488:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801248c:	fa1f f28b 	uxth.w	r2, fp
 8012490:	fa1f f989 	uxth.w	r9, r9
 8012494:	469e      	mov	lr, r3
 8012496:	42ac      	cmp	r4, r5
 8012498:	d264      	bcs.n	8012564 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801249a:	eb04 0a07 	add.w	sl, r4, r7
 801249e:	4554      	cmp	r4, sl
 80124a0:	d23d      	bcs.n	801251e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80124a2:	8821      	ldrh	r1, [r4, #0]
 80124a4:	f836 3b02 	ldrh.w	r3, [r6], #2
 80124a8:	1208      	asrs	r0, r1, #8
 80124aa:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80124ae:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80124b2:	fb10 f009 	smulbb	r0, r0, r9
 80124b6:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80124ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80124be:	00c9      	lsls	r1, r1, #3
 80124c0:	fb0c 0c02 	mla	ip, ip, r2, r0
 80124c4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80124c8:	10d8      	asrs	r0, r3, #3
 80124ca:	b2c9      	uxtb	r1, r1
 80124cc:	00db      	lsls	r3, r3, #3
 80124ce:	fa1f fc8c 	uxth.w	ip, ip
 80124d2:	fb1b fb09 	smulbb	fp, fp, r9
 80124d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80124da:	b2db      	uxtb	r3, r3
 80124dc:	fb11 f109 	smulbb	r1, r1, r9
 80124e0:	fb00 b002 	mla	r0, r0, r2, fp
 80124e4:	fb03 1302 	mla	r3, r3, r2, r1
 80124e8:	f10c 0b01 	add.w	fp, ip, #1
 80124ec:	b29b      	uxth	r3, r3
 80124ee:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80124f2:	b280      	uxth	r0, r0
 80124f4:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80124f8:	f103 0c01 	add.w	ip, r3, #1
 80124fc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8012500:	1c43      	adds	r3, r0, #1
 8012502:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8012506:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801250a:	0940      	lsrs	r0, r0, #5
 801250c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8012510:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8012514:	ea4c 0c00 	orr.w	ip, ip, r0
 8012518:	f824 cb02 	strh.w	ip, [r4], #2
 801251c:	e7bf      	b.n	801249e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801251e:	f8be 3000 	ldrh.w	r3, [lr]
 8012522:	eba3 0308 	sub.w	r3, r3, r8
 8012526:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801252a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801252e:	eba3 0308 	sub.w	r3, r3, r8
 8012532:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012536:	e7ae      	b.n	8012496 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8012538:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801253c:	f8d9 0000 	ldr.w	r0, [r9]
 8012540:	42ac      	cmp	r4, r5
 8012542:	6803      	ldr	r3, [r0, #0]
 8012544:	d20e      	bcs.n	8012564 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8012546:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801254a:	4632      	mov	r2, r6
 801254c:	463b      	mov	r3, r7
 801254e:	4621      	mov	r1, r4
 8012550:	47c0      	blx	r8
 8012552:	f8ba 3000 	ldrh.w	r3, [sl]
 8012556:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801255a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801255e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012562:	e7eb      	b.n	801253c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8012564:	4b02      	ldr	r3, [pc, #8]	; (8012570 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8012566:	6818      	ldr	r0, [r3, #0]
 8012568:	6803      	ldr	r3, [r0, #0]
 801256a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801256c:	4798      	blx	r3
 801256e:	e76b      	b.n	8012448 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8012570:	20013508 	.word	0x20013508
 8012574:	20013502 	.word	0x20013502

08012578 <_ZN8touchgfx8LCD16bppD0Ev>:
 8012578:	b510      	push	{r4, lr}
 801257a:	2178      	movs	r1, #120	; 0x78
 801257c:	4604      	mov	r4, r0
 801257e:	f009 fa9e 	bl	801babe <_ZdlPvj>
 8012582:	4620      	mov	r0, r4
 8012584:	bd10      	pop	{r4, pc}

08012586 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012586:	b510      	push	{r4, lr}
 8012588:	2104      	movs	r1, #4
 801258a:	4604      	mov	r4, r0
 801258c:	f009 fa97 	bl	801babe <_ZdlPvj>
 8012590:	4620      	mov	r0, r4
 8012592:	bd10      	pop	{r4, pc}

08012594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012594:	b510      	push	{r4, lr}
 8012596:	2104      	movs	r1, #4
 8012598:	4604      	mov	r4, r0
 801259a:	f009 fa90 	bl	801babe <_ZdlPvj>
 801259e:	4620      	mov	r0, r4
 80125a0:	bd10      	pop	{r4, pc}

080125a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80125a2:	b510      	push	{r4, lr}
 80125a4:	2104      	movs	r1, #4
 80125a6:	4604      	mov	r4, r0
 80125a8:	f009 fa89 	bl	801babe <_ZdlPvj>
 80125ac:	4620      	mov	r0, r4
 80125ae:	bd10      	pop	{r4, pc}

080125b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80125b0:	b510      	push	{r4, lr}
 80125b2:	2104      	movs	r1, #4
 80125b4:	4604      	mov	r4, r0
 80125b6:	f009 fa82 	bl	801babe <_ZdlPvj>
 80125ba:	4620      	mov	r0, r4
 80125bc:	bd10      	pop	{r4, pc}

080125be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80125be:	b510      	push	{r4, lr}
 80125c0:	2104      	movs	r1, #4
 80125c2:	4604      	mov	r4, r0
 80125c4:	f009 fa7b 	bl	801babe <_ZdlPvj>
 80125c8:	4620      	mov	r0, r4
 80125ca:	bd10      	pop	{r4, pc}

080125cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80125cc:	b510      	push	{r4, lr}
 80125ce:	2104      	movs	r1, #4
 80125d0:	4604      	mov	r4, r0
 80125d2:	f009 fa74 	bl	801babe <_ZdlPvj>
 80125d6:	4620      	mov	r0, r4
 80125d8:	bd10      	pop	{r4, pc}

080125da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80125da:	b510      	push	{r4, lr}
 80125dc:	2104      	movs	r1, #4
 80125de:	4604      	mov	r4, r0
 80125e0:	f009 fa6d 	bl	801babe <_ZdlPvj>
 80125e4:	4620      	mov	r0, r4
 80125e6:	bd10      	pop	{r4, pc}

080125e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80125e8:	b510      	push	{r4, lr}
 80125ea:	2104      	movs	r1, #4
 80125ec:	4604      	mov	r4, r0
 80125ee:	f009 fa66 	bl	801babe <_ZdlPvj>
 80125f2:	4620      	mov	r0, r4
 80125f4:	bd10      	pop	{r4, pc}

080125f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80125f6:	b510      	push	{r4, lr}
 80125f8:	2104      	movs	r1, #4
 80125fa:	4604      	mov	r4, r0
 80125fc:	f009 fa5f 	bl	801babe <_ZdlPvj>
 8012600:	4620      	mov	r0, r4
 8012602:	bd10      	pop	{r4, pc}

08012604 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012604:	b510      	push	{r4, lr}
 8012606:	2104      	movs	r1, #4
 8012608:	4604      	mov	r4, r0
 801260a:	f009 fa58 	bl	801babe <_ZdlPvj>
 801260e:	4620      	mov	r0, r4
 8012610:	bd10      	pop	{r4, pc}

08012612 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012612:	b510      	push	{r4, lr}
 8012614:	2104      	movs	r1, #4
 8012616:	4604      	mov	r4, r0
 8012618:	f009 fa51 	bl	801babe <_ZdlPvj>
 801261c:	4620      	mov	r0, r4
 801261e:	bd10      	pop	{r4, pc}

08012620 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012620:	b510      	push	{r4, lr}
 8012622:	2104      	movs	r1, #4
 8012624:	4604      	mov	r4, r0
 8012626:	f009 fa4a 	bl	801babe <_ZdlPvj>
 801262a:	4620      	mov	r0, r4
 801262c:	bd10      	pop	{r4, pc}

0801262e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801262e:	b510      	push	{r4, lr}
 8012630:	2104      	movs	r1, #4
 8012632:	4604      	mov	r4, r0
 8012634:	f009 fa43 	bl	801babe <_ZdlPvj>
 8012638:	4620      	mov	r0, r4
 801263a:	bd10      	pop	{r4, pc}

0801263c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801263c:	b510      	push	{r4, lr}
 801263e:	2104      	movs	r1, #4
 8012640:	4604      	mov	r4, r0
 8012642:	f009 fa3c 	bl	801babe <_ZdlPvj>
 8012646:	4620      	mov	r0, r4
 8012648:	bd10      	pop	{r4, pc}

0801264a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801264a:	b510      	push	{r4, lr}
 801264c:	2104      	movs	r1, #4
 801264e:	4604      	mov	r4, r0
 8012650:	f009 fa35 	bl	801babe <_ZdlPvj>
 8012654:	4620      	mov	r0, r4
 8012656:	bd10      	pop	{r4, pc}

08012658 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012658:	b510      	push	{r4, lr}
 801265a:	2104      	movs	r1, #4
 801265c:	4604      	mov	r4, r0
 801265e:	f009 fa2e 	bl	801babe <_ZdlPvj>
 8012662:	4620      	mov	r0, r4
 8012664:	bd10      	pop	{r4, pc}

08012666 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012666:	b510      	push	{r4, lr}
 8012668:	2104      	movs	r1, #4
 801266a:	4604      	mov	r4, r0
 801266c:	f009 fa27 	bl	801babe <_ZdlPvj>
 8012670:	4620      	mov	r0, r4
 8012672:	bd10      	pop	{r4, pc}

08012674 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012674:	b510      	push	{r4, lr}
 8012676:	2104      	movs	r1, #4
 8012678:	4604      	mov	r4, r0
 801267a:	f009 fa20 	bl	801babe <_ZdlPvj>
 801267e:	4620      	mov	r0, r4
 8012680:	bd10      	pop	{r4, pc}

08012682 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012682:	b510      	push	{r4, lr}
 8012684:	2104      	movs	r1, #4
 8012686:	4604      	mov	r4, r0
 8012688:	f009 fa19 	bl	801babe <_ZdlPvj>
 801268c:	4620      	mov	r0, r4
 801268e:	bd10      	pop	{r4, pc}

08012690 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012690:	b510      	push	{r4, lr}
 8012692:	2104      	movs	r1, #4
 8012694:	4604      	mov	r4, r0
 8012696:	f009 fa12 	bl	801babe <_ZdlPvj>
 801269a:	4620      	mov	r0, r4
 801269c:	bd10      	pop	{r4, pc}

0801269e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801269e:	b510      	push	{r4, lr}
 80126a0:	2104      	movs	r1, #4
 80126a2:	4604      	mov	r4, r0
 80126a4:	f009 fa0b 	bl	801babe <_ZdlPvj>
 80126a8:	4620      	mov	r0, r4
 80126aa:	bd10      	pop	{r4, pc}

080126ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80126ac:	b510      	push	{r4, lr}
 80126ae:	2104      	movs	r1, #4
 80126b0:	4604      	mov	r4, r0
 80126b2:	f009 fa04 	bl	801babe <_ZdlPvj>
 80126b6:	4620      	mov	r0, r4
 80126b8:	bd10      	pop	{r4, pc}

080126ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80126ba:	b510      	push	{r4, lr}
 80126bc:	2104      	movs	r1, #4
 80126be:	4604      	mov	r4, r0
 80126c0:	f009 f9fd 	bl	801babe <_ZdlPvj>
 80126c4:	4620      	mov	r0, r4
 80126c6:	bd10      	pop	{r4, pc}

080126c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80126c8:	b510      	push	{r4, lr}
 80126ca:	2104      	movs	r1, #4
 80126cc:	4604      	mov	r4, r0
 80126ce:	f009 f9f6 	bl	801babe <_ZdlPvj>
 80126d2:	4620      	mov	r0, r4
 80126d4:	bd10      	pop	{r4, pc}

080126d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80126d6:	b510      	push	{r4, lr}
 80126d8:	2104      	movs	r1, #4
 80126da:	4604      	mov	r4, r0
 80126dc:	f009 f9ef 	bl	801babe <_ZdlPvj>
 80126e0:	4620      	mov	r0, r4
 80126e2:	bd10      	pop	{r4, pc}

080126e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80126e4:	b510      	push	{r4, lr}
 80126e6:	2104      	movs	r1, #4
 80126e8:	4604      	mov	r4, r0
 80126ea:	f009 f9e8 	bl	801babe <_ZdlPvj>
 80126ee:	4620      	mov	r0, r4
 80126f0:	bd10      	pop	{r4, pc}

080126f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80126f2:	b510      	push	{r4, lr}
 80126f4:	2104      	movs	r1, #4
 80126f6:	4604      	mov	r4, r0
 80126f8:	f009 f9e1 	bl	801babe <_ZdlPvj>
 80126fc:	4620      	mov	r0, r4
 80126fe:	bd10      	pop	{r4, pc}

08012700 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8012700:	b510      	push	{r4, lr}
 8012702:	2104      	movs	r1, #4
 8012704:	4604      	mov	r4, r0
 8012706:	f009 f9da 	bl	801babe <_ZdlPvj>
 801270a:	4620      	mov	r0, r4
 801270c:	bd10      	pop	{r4, pc}
	...

08012710 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8012710:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012712:	4606      	mov	r6, r0
 8012714:	b087      	sub	sp, #28
 8012716:	460c      	mov	r4, r1
 8012718:	4617      	mov	r7, r2
 801271a:	461d      	mov	r5, r3
 801271c:	b333      	cbz	r3, 801276c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801271e:	4608      	mov	r0, r1
 8012720:	f7f7 f8fd 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 8012724:	bb10      	cbnz	r0, 801276c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012726:	6820      	ldr	r0, [r4, #0]
 8012728:	6861      	ldr	r1, [r4, #4]
 801272a:	4c1c      	ldr	r4, [pc, #112]	; (801279c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801272c:	ab04      	add	r3, sp, #16
 801272e:	c303      	stmia	r3!, {r0, r1}
 8012730:	a804      	add	r0, sp, #16
 8012732:	f7f9 ffe9 	bl	800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012736:	6820      	ldr	r0, [r4, #0]
 8012738:	6803      	ldr	r3, [r0, #0]
 801273a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801273c:	4798      	blx	r3
 801273e:	2dff      	cmp	r5, #255	; 0xff
 8012740:	d016      	beq.n	8012770 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8012742:	f010 0f08 	tst.w	r0, #8
 8012746:	6820      	ldr	r0, [r4, #0]
 8012748:	d015      	beq.n	8012776 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801274a:	2400      	movs	r4, #0
 801274c:	6801      	ldr	r1, [r0, #0]
 801274e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012752:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012756:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801275a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801275e:	9401      	str	r4, [sp, #4]
 8012760:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8012764:	9400      	str	r4, [sp, #0]
 8012766:	6dcc      	ldr	r4, [r1, #92]	; 0x5c
 8012768:	4639      	mov	r1, r7
 801276a:	47a0      	blx	r4
 801276c:	b007      	add	sp, #28
 801276e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012770:	f010 0f02 	tst.w	r0, #2
 8012774:	e7e7      	b.n	8012746 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8012776:	6803      	ldr	r3, [r0, #0]
 8012778:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801277a:	4798      	blx	r3
 801277c:	4b08      	ldr	r3, [pc, #32]	; (80127a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801277e:	881a      	ldrh	r2, [r3, #0]
 8012780:	6833      	ldr	r3, [r6, #0]
 8012782:	e9cd 7500 	strd	r7, r5, [sp]
 8012786:	4601      	mov	r1, r0
 8012788:	69dd      	ldr	r5, [r3, #28]
 801278a:	4630      	mov	r0, r6
 801278c:	ab04      	add	r3, sp, #16
 801278e:	47a8      	blx	r5
 8012790:	6820      	ldr	r0, [r4, #0]
 8012792:	6803      	ldr	r3, [r0, #0]
 8012794:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012796:	4798      	blx	r3
 8012798:	e7e8      	b.n	801276c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801279a:	bf00      	nop
 801279c:	20013508 	.word	0x20013508
 80127a0:	20013502 	.word	0x20013502

080127a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80127a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127a8:	4f97      	ldr	r7, [pc, #604]	; (8012a08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 80127aa:	4616      	mov	r6, r2
 80127ac:	683a      	ldr	r2, [r7, #0]
 80127ae:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 80127b2:	2a02      	cmp	r2, #2
 80127b4:	b08f      	sub	sp, #60	; 0x3c
 80127b6:	4604      	mov	r4, r0
 80127b8:	4689      	mov	r9, r1
 80127ba:	d106      	bne.n	80127ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 80127bc:	4b93      	ldr	r3, [pc, #588]	; (8012a0c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 80127be:	4a94      	ldr	r2, [pc, #592]	; (8012a10 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80127c0:	f44f 7159 	mov.w	r1, #868	; 0x364
 80127c4:	4893      	ldr	r0, [pc, #588]	; (8012a14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 80127c6:	f009 f9a9 	bl	801bb1c <__assert_func>
 80127ca:	ad0e      	add	r5, sp, #56	; 0x38
 80127cc:	f825 3d24 	strh.w	r3, [r5, #-36]!
 80127d0:	4628      	mov	r0, r5
 80127d2:	f7fd fac9 	bl	800fd68 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80127d6:	6823      	ldr	r3, [r4, #0]
 80127d8:	4680      	mov	r8, r0
 80127da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80127dc:	4620      	mov	r0, r4
 80127de:	4798      	blx	r3
 80127e0:	4580      	cmp	r8, r0
 80127e2:	d004      	beq.n	80127ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 80127e4:	4b8c      	ldr	r3, [pc, #560]	; (8012a18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 80127e6:	4a8a      	ldr	r2, [pc, #552]	; (8012a10 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80127e8:	f240 3166 	movw	r1, #870	; 0x366
 80127ec:	e7ea      	b.n	80127c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80127ee:	4628      	mov	r0, r5
 80127f0:	f7fd fa30 	bl	800fc54 <_ZNK8touchgfx6Bitmap7getDataEv>
 80127f4:	4680      	mov	r8, r0
 80127f6:	b920      	cbnz	r0, 8012802 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 80127f8:	4b88      	ldr	r3, [pc, #544]	; (8012a1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 80127fa:	4a85      	ldr	r2, [pc, #532]	; (8012a10 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80127fc:	f44f 715a 	mov.w	r1, #872	; 0x368
 8012800:	e7e0      	b.n	80127c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012802:	6830      	ldr	r0, [r6, #0]
 8012804:	6871      	ldr	r1, [r6, #4]
 8012806:	f9b6 a000 	ldrsh.w	sl, [r6]
 801280a:	ab06      	add	r3, sp, #24
 801280c:	c303      	stmia	r3!, {r0, r1}
 801280e:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8012812:	f8d9 0000 	ldr.w	r0, [r9]
 8012816:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801281a:	ab08      	add	r3, sp, #32
 801281c:	c303      	stmia	r3!, {r0, r1}
 801281e:	4628      	mov	r0, r5
 8012820:	f7fd f910 	bl	800fa44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012824:	4606      	mov	r6, r0
 8012826:	4628      	mov	r0, r5
 8012828:	f7fd f946 	bl	800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801282c:	f10d 0b20 	add.w	fp, sp, #32
 8012830:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8012834:	a806      	add	r0, sp, #24
 8012836:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 801283a:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801283e:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8012842:	f7f9 ff61 	bl	800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012846:	4658      	mov	r0, fp
 8012848:	f7f9 ff5e 	bl	800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801284c:	a80a      	add	r0, sp, #40	; 0x28
 801284e:	f7f9 ff5b 	bl	800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012852:	4d73      	ldr	r5, [pc, #460]	; (8012a20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8012854:	4b73      	ldr	r3, [pc, #460]	; (8012a24 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8012856:	f9b5 2000 	ldrsh.w	r2, [r5]
 801285a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801285e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8012862:	2100      	movs	r1, #0
 8012864:	910c      	str	r1, [sp, #48]	; 0x30
 8012866:	4658      	mov	r0, fp
 8012868:	a90c      	add	r1, sp, #48	; 0x30
 801286a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801286e:	f7f7 f813 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 8012872:	4658      	mov	r0, fp
 8012874:	f7f7 f853 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 8012878:	2800      	cmp	r0, #0
 801287a:	f040 8099 	bne.w	80129b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801287e:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8012882:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8012886:	4288      	cmp	r0, r1
 8012888:	db37      	blt.n	80128fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801288a:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 801288e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012892:	429a      	cmp	r2, r3
 8012894:	db31      	blt.n	80128fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8012896:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 801289a:	4430      	add	r0, r6
 801289c:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80128a0:	4431      	add	r1, r6
 80128a2:	b200      	sxth	r0, r0
 80128a4:	b209      	sxth	r1, r1
 80128a6:	4288      	cmp	r0, r1
 80128a8:	dc27      	bgt.n	80128fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80128aa:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 80128ae:	440a      	add	r2, r1
 80128b0:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 80128b4:	440b      	add	r3, r1
 80128b6:	b212      	sxth	r2, r2
 80128b8:	b21b      	sxth	r3, r3
 80128ba:	429a      	cmp	r2, r3
 80128bc:	dc1d      	bgt.n	80128fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80128be:	6823      	ldr	r3, [r4, #0]
 80128c0:	4620      	mov	r0, r4
 80128c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80128c4:	4798      	blx	r3
 80128c6:	4682      	mov	sl, r0
 80128c8:	6838      	ldr	r0, [r7, #0]
 80128ca:	6803      	ldr	r3, [r0, #0]
 80128cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80128ce:	4798      	blx	r3
 80128d0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80128d4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80128d8:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80128dc:	1a5b      	subs	r3, r3, r1
 80128de:	b29b      	uxth	r3, r3
 80128e0:	b21c      	sxth	r4, r3
 80128e2:	2c00      	cmp	r4, #0
 80128e4:	dc0e      	bgt.n	8012904 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 80128e6:	bf1f      	itttt	ne
 80128e8:	f8ad 1020 	strhne.w	r1, [sp, #32]
 80128ec:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 80128f0:	185b      	addne	r3, r3, r1
 80128f2:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 80128f6:	4644      	mov	r4, r8
 80128f8:	e009      	b.n	801290e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 80128fa:	4b4b      	ldr	r3, [pc, #300]	; (8012a28 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 80128fc:	4a44      	ldr	r2, [pc, #272]	; (8012a10 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80128fe:	f240 3176 	movw	r1, #886	; 0x376
 8012902:	e75f      	b.n	80127c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012904:	1ad3      	subs	r3, r2, r3
 8012906:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801290a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801290e:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 8012912:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012916:	1b9b      	subs	r3, r3, r6
 8012918:	b29b      	uxth	r3, r3
 801291a:	b219      	sxth	r1, r3
 801291c:	2900      	cmp	r1, #0
 801291e:	dd4b      	ble.n	80129b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 8012920:	4351      	muls	r1, r2
 8012922:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8012926:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801292a:	1acb      	subs	r3, r1, r3
 801292c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012930:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8012934:	2e00      	cmp	r6, #0
 8012936:	dd3b      	ble.n	80129b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012938:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801293c:	2b00      	cmp	r3, #0
 801293e:	dd37      	ble.n	80129b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8012940:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8012944:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8012948:	fb0a f90c 	mul.w	r9, sl, ip
 801294c:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 8012950:	4481      	add	r9, r0
 8012952:	8828      	ldrh	r0, [r5, #0]
 8012954:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 8012958:	42ae      	cmp	r6, r5
 801295a:	bfa8      	it	ge
 801295c:	462e      	movge	r6, r5
 801295e:	1a41      	subs	r1, r0, r1
 8012960:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8012964:	428e      	cmp	r6, r1
 8012966:	bfa8      	it	ge
 8012968:	460e      	movge	r6, r1
 801296a:	429d      	cmp	r5, r3
 801296c:	bfa8      	it	ge
 801296e:	461d      	movge	r5, r3
 8012970:	4b2c      	ldr	r3, [pc, #176]	; (8012a24 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8012972:	881b      	ldrh	r3, [r3, #0]
 8012974:	eba3 030c 	sub.w	r3, r3, ip
 8012978:	429d      	cmp	r5, r3
 801297a:	bfa8      	it	ge
 801297c:	461d      	movge	r5, r3
 801297e:	42b0      	cmp	r0, r6
 8012980:	d12c      	bne.n	80129dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8012982:	4290      	cmp	r0, r2
 8012984:	d12a      	bne.n	80129dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8012986:	6838      	ldr	r0, [r7, #0]
 8012988:	9203      	str	r2, [sp, #12]
 801298a:	6803      	ldr	r3, [r0, #0]
 801298c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801298e:	4798      	blx	r3
 8012990:	07c3      	lsls	r3, r0, #31
 8012992:	d51a      	bpl.n	80129ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 8012994:	9a03      	ldr	r2, [sp, #12]
 8012996:	6838      	ldr	r0, [r7, #0]
 8012998:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 801299c:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80129a0:	6803      	ldr	r3, [r0, #0]
 80129a2:	9200      	str	r2, [sp, #0]
 80129a4:	6e9d      	ldr	r5, [r3, #104]	; 0x68
 80129a6:	e89b 0006 	ldmia.w	fp, {r1, r2}
 80129aa:	4623      	mov	r3, r4
 80129ac:	47a8      	blx	r5
 80129ae:	4680      	mov	r8, r0
 80129b0:	4640      	mov	r0, r8
 80129b2:	b00f      	add	sp, #60	; 0x3c
 80129b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80129b8:	bf1f      	itttt	ne
 80129ba:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 80129be:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 80129c2:	185b      	addne	r3, r3, r1
 80129c4:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 80129c8:	e7b2      	b.n	8012930 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 80129ca:	6838      	ldr	r0, [r7, #0]
 80129cc:	6803      	ldr	r3, [r0, #0]
 80129ce:	464a      	mov	r2, r9
 80129d0:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 80129d2:	4621      	mov	r1, r4
 80129d4:	fb05 f30a 	mul.w	r3, r5, sl
 80129d8:	47b0      	blx	r6
 80129da:	e7e9      	b.n	80129b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80129dc:	4355      	muls	r5, r2
 80129de:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 80129e2:	9303      	str	r3, [sp, #12]
 80129e4:	0076      	lsls	r6, r6, #1
 80129e6:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 80129ea:	9b03      	ldr	r3, [sp, #12]
 80129ec:	429c      	cmp	r4, r3
 80129ee:	d2df      	bcs.n	80129b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80129f0:	6838      	ldr	r0, [r7, #0]
 80129f2:	6803      	ldr	r3, [r0, #0]
 80129f4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80129f6:	464a      	mov	r2, r9
 80129f8:	461d      	mov	r5, r3
 80129fa:	4621      	mov	r1, r4
 80129fc:	4633      	mov	r3, r6
 80129fe:	47a8      	blx	r5
 8012a00:	44d1      	add	r9, sl
 8012a02:	445c      	add	r4, fp
 8012a04:	e7f1      	b.n	80129ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 8012a06:	bf00      	nop
 8012a08:	20013508 	.word	0x20013508
 8012a0c:	08020468 	.word	0x08020468
 8012a10:	08020d1c 	.word	0x08020d1c
 8012a14:	0802051a 	.word	0x0802051a
 8012a18:	0802054c 	.word	0x0802054c
 8012a1c:	080205a1 	.word	0x080205a1
 8012a20:	20013502 	.word	0x20013502
 8012a24:	20013504 	.word	0x20013504
 8012a28:	080205df 	.word	0x080205df

08012a2c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8012a2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012a30:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8012a34:	9e08      	ldr	r6, [sp, #32]
 8012a36:	4688      	mov	r8, r1
 8012a38:	4614      	mov	r4, r2
 8012a3a:	461d      	mov	r5, r3
 8012a3c:	2f00      	cmp	r7, #0
 8012a3e:	f000 80b3 	beq.w	8012ba8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012a42:	4618      	mov	r0, r3
 8012a44:	f7f6 ff6b 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 8012a48:	2800      	cmp	r0, #0
 8012a4a:	f040 80ad 	bne.w	8012ba8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012a4e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012a52:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012a56:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8012a5a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8012a5e:	fb04 1303 	mla	r3, r4, r3, r1
 8012a62:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8012a66:	4365      	muls	r5, r4
 8012a68:	2fff      	cmp	r7, #255	; 0xff
 8012a6a:	eba4 0200 	sub.w	r2, r4, r0
 8012a6e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8012a72:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8012a76:	d04b      	beq.n	8012b10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8012a78:	b2bc      	uxth	r4, r7
 8012a7a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8012a7e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8012a82:	fa5f f788 	uxtb.w	r7, r8
 8012a86:	b2f3      	uxtb	r3, r6
 8012a88:	0040      	lsls	r0, r0, #1
 8012a8a:	fb0e fe04 	mul.w	lr, lr, r4
 8012a8e:	4367      	muls	r7, r4
 8012a90:	4363      	muls	r3, r4
 8012a92:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8012a96:	fa1f fc8c 	uxth.w	ip, ip
 8012a9a:	42a9      	cmp	r1, r5
 8012a9c:	f080 8084 	bcs.w	8012ba8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012aa0:	eb01 0900 	add.w	r9, r1, r0
 8012aa4:	4549      	cmp	r1, r9
 8012aa6:	d231      	bcs.n	8012b0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8012aa8:	880a      	ldrh	r2, [r1, #0]
 8012aaa:	1214      	asrs	r4, r2, #8
 8012aac:	10d6      	asrs	r6, r2, #3
 8012aae:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8012ab2:	00d2      	lsls	r2, r2, #3
 8012ab4:	b2d2      	uxtb	r2, r2
 8012ab6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8012aba:	fb14 f40c 	smulbb	r4, r4, ip
 8012abe:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8012ac2:	4474      	add	r4, lr
 8012ac4:	fb12 f20c 	smulbb	r2, r2, ip
 8012ac8:	b2a4      	uxth	r4, r4
 8012aca:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012ace:	441a      	add	r2, r3
 8012ad0:	b292      	uxth	r2, r2
 8012ad2:	f104 0a01 	add.w	sl, r4, #1
 8012ad6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8012ada:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8012ade:	fb16 f60c 	smulbb	r6, r6, ip
 8012ae2:	f102 0a01 	add.w	sl, r2, #1
 8012ae6:	443e      	add	r6, r7
 8012ae8:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8012aec:	b2b6      	uxth	r6, r6
 8012aee:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8012af2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012af6:	4322      	orrs	r2, r4
 8012af8:	1c74      	adds	r4, r6, #1
 8012afa:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8012afe:	0976      	lsrs	r6, r6, #5
 8012b00:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012b04:	4332      	orrs	r2, r6
 8012b06:	f821 2b02 	strh.w	r2, [r1], #2
 8012b0a:	e7cb      	b.n	8012aa4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8012b0c:	4441      	add	r1, r8
 8012b0e:	e7c4      	b.n	8012a9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8012b10:	4f26      	ldr	r7, [pc, #152]	; (8012bac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 8012b12:	0973      	lsrs	r3, r6, #5
 8012b14:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012b18:	ea08 0707 	and.w	r7, r8, r7
 8012b1c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8012b20:	433b      	orrs	r3, r7
 8012b22:	4333      	orrs	r3, r6
 8012b24:	07e6      	lsls	r6, r4, #31
 8012b26:	b29b      	uxth	r3, r3
 8012b28:	d50b      	bpl.n	8012b42 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 8012b2a:	0040      	lsls	r0, r0, #1
 8012b2c:	0052      	lsls	r2, r2, #1
 8012b2e:	42a9      	cmp	r1, r5
 8012b30:	d23a      	bcs.n	8012ba8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012b32:	180c      	adds	r4, r1, r0
 8012b34:	42a1      	cmp	r1, r4
 8012b36:	d202      	bcs.n	8012b3e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 8012b38:	f821 3b02 	strh.w	r3, [r1], #2
 8012b3c:	e7fa      	b.n	8012b34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 8012b3e:	4411      	add	r1, r2
 8012b40:	e7f5      	b.n	8012b2e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 8012b42:	078f      	lsls	r7, r1, #30
 8012b44:	d008      	beq.n	8012b58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 8012b46:	0066      	lsls	r6, r4, #1
 8012b48:	460a      	mov	r2, r1
 8012b4a:	42aa      	cmp	r2, r5
 8012b4c:	d202      	bcs.n	8012b54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 8012b4e:	8013      	strh	r3, [r2, #0]
 8012b50:	4432      	add	r2, r6
 8012b52:	e7fa      	b.n	8012b4a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 8012b54:	3102      	adds	r1, #2
 8012b56:	3801      	subs	r0, #1
 8012b58:	07c6      	lsls	r6, r0, #31
 8012b5a:	d50b      	bpl.n	8012b74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8012b5c:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8012b60:	3a01      	subs	r2, #1
 8012b62:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8012b66:	0066      	lsls	r6, r4, #1
 8012b68:	42aa      	cmp	r2, r5
 8012b6a:	d202      	bcs.n	8012b72 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8012b6c:	8013      	strh	r3, [r2, #0]
 8012b6e:	4432      	add	r2, r6
 8012b70:	e7fa      	b.n	8012b68 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 8012b72:	3801      	subs	r0, #1
 8012b74:	b1c0      	cbz	r0, 8012ba8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012b76:	1040      	asrs	r0, r0, #1
 8012b78:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8012b7c:	0080      	lsls	r0, r0, #2
 8012b7e:	0064      	lsls	r4, r4, #1
 8012b80:	42a9      	cmp	r1, r5
 8012b82:	d211      	bcs.n	8012ba8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012b84:	078a      	lsls	r2, r1, #30
 8012b86:	d006      	beq.n	8012b96 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 8012b88:	4b09      	ldr	r3, [pc, #36]	; (8012bb0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 8012b8a:	4a0a      	ldr	r2, [pc, #40]	; (8012bb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8012b8c:	480a      	ldr	r0, [pc, #40]	; (8012bb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 8012b8e:	f44f 6185 	mov.w	r1, #1064	; 0x428
 8012b92:	f008 ffc3 	bl	801bb1c <__assert_func>
 8012b96:	180e      	adds	r6, r1, r0
 8012b98:	460a      	mov	r2, r1
 8012b9a:	42b2      	cmp	r2, r6
 8012b9c:	d202      	bcs.n	8012ba4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 8012b9e:	f842 3b04 	str.w	r3, [r2], #4
 8012ba2:	e7fa      	b.n	8012b9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 8012ba4:	4421      	add	r1, r4
 8012ba6:	e7eb      	b.n	8012b80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 8012ba8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012bac:	00fff800 	.word	0x00fff800
 8012bb0:	08020319 	.word	0x08020319
 8012bb4:	08020968 	.word	0x08020968
 8012bb8:	0802051a 	.word	0x0802051a

08012bbc <_ZN8touchgfx8LCD16bppC1Ev>:
 8012bbc:	2200      	movs	r2, #0
 8012bbe:	4910      	ldr	r1, [pc, #64]	; (8012c00 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8012bc0:	6042      	str	r2, [r0, #4]
 8012bc2:	6001      	str	r1, [r0, #0]
 8012bc4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8012bc8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8012bcc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8012bd0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8012bd4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8012bd8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8012bdc:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8012be0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8012be4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8012be8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8012bec:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8012bf0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8012bf4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8012bf8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8012bfc:	4770      	bx	lr
 8012bfe:	bf00      	nop
 8012c00:	08020920 	.word	0x08020920

08012c04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8012c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c08:	460d      	mov	r5, r1
 8012c0a:	b08d      	sub	sp, #52	; 0x34
 8012c0c:	4604      	mov	r4, r0
 8012c0e:	6808      	ldr	r0, [r1, #0]
 8012c10:	6849      	ldr	r1, [r1, #4]
 8012c12:	4699      	mov	r9, r3
 8012c14:	ab08      	add	r3, sp, #32
 8012c16:	c303      	stmia	r3!, {r0, r1}
 8012c18:	6810      	ldr	r0, [r2, #0]
 8012c1a:	6851      	ldr	r1, [r2, #4]
 8012c1c:	ab0a      	add	r3, sp, #40	; 0x28
 8012c1e:	c303      	stmia	r3!, {r0, r1}
 8012c20:	a808      	add	r0, sp, #32
 8012c22:	f7f9 fd71 	bl	800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012c26:	4629      	mov	r1, r5
 8012c28:	a80a      	add	r0, sp, #40	; 0x28
 8012c2a:	f7f9 fd95 	bl	800c758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012c2e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012c32:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8012c36:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8012c3a:	4d63      	ldr	r5, [pc, #396]	; (8012dc8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8012c3c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8012c40:	6828      	ldr	r0, [r5, #0]
 8012c42:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8012c46:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012c4a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8012c4e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8012c52:	440a      	add	r2, r1
 8012c54:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012c58:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8012c5c:	4413      	add	r3, r2
 8012c5e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012c62:	6803      	ldr	r3, [r0, #0]
 8012c64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012c66:	4798      	blx	r3
 8012c68:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012c6c:	d119      	bne.n	8012ca2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8012c6e:	f010 0f20 	tst.w	r0, #32
 8012c72:	6828      	ldr	r0, [r5, #0]
 8012c74:	d018      	beq.n	8012ca8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8012c76:	2500      	movs	r5, #0
 8012c78:	6801      	ldr	r1, [r0, #0]
 8012c7a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8012c7e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012c82:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8012c86:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8012c8a:	9502      	str	r5, [sp, #8]
 8012c8c:	b2b6      	uxth	r6, r6
 8012c8e:	fa1f f588 	uxth.w	r5, r8
 8012c92:	9601      	str	r6, [sp, #4]
 8012c94:	9500      	str	r5, [sp, #0]
 8012c96:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8012c98:	4621      	mov	r1, r4
 8012c9a:	47a8      	blx	r5
 8012c9c:	b00d      	add	sp, #52	; 0x34
 8012c9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ca2:	f010 0f40 	tst.w	r0, #64	; 0x40
 8012ca6:	e7e4      	b.n	8012c72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8012ca8:	6803      	ldr	r3, [r0, #0]
 8012caa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012cac:	4798      	blx	r3
 8012cae:	4947      	ldr	r1, [pc, #284]	; (8012dcc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8012cb0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8012cb4:	880b      	ldrh	r3, [r1, #0]
 8012cb6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8012cba:	fb03 5202 	mla	r2, r3, r2, r5
 8012cbe:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012cc2:	4373      	muls	r3, r6
 8012cc4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012cc8:	9307      	str	r3, [sp, #28]
 8012cca:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8012cce:	9306      	str	r3, [sp, #24]
 8012cd0:	468a      	mov	sl, r1
 8012cd2:	9b07      	ldr	r3, [sp, #28]
 8012cd4:	4298      	cmp	r0, r3
 8012cd6:	d270      	bcs.n	8012dba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8012cd8:	9b06      	ldr	r3, [sp, #24]
 8012cda:	4621      	mov	r1, r4
 8012cdc:	eb00 0b03 	add.w	fp, r0, r3
 8012ce0:	4558      	cmp	r0, fp
 8012ce2:	d25d      	bcs.n	8012da0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8012ce4:	f851 4b04 	ldr.w	r4, [r1], #4
 8012ce8:	0e23      	lsrs	r3, r4, #24
 8012cea:	d014      	beq.n	8012d16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8012cec:	2bff      	cmp	r3, #255	; 0xff
 8012cee:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8012cf2:	d112      	bne.n	8012d1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8012cf4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012cf8:	d10f      	bne.n	8012d1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8012cfa:	0963      	lsrs	r3, r4, #5
 8012cfc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8012d00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012d04:	f02c 0c07 	bic.w	ip, ip, #7
 8012d08:	ea43 0c0c 	orr.w	ip, r3, ip
 8012d0c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012d10:	ea4c 0404 	orr.w	r4, ip, r4
 8012d14:	8004      	strh	r4, [r0, #0]
 8012d16:	3002      	adds	r0, #2
 8012d18:	e7e2      	b.n	8012ce0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8012d1a:	fb09 f303 	mul.w	r3, r9, r3
 8012d1e:	8807      	ldrh	r7, [r0, #0]
 8012d20:	1c5a      	adds	r2, r3, #1
 8012d22:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8012d26:	1212      	asrs	r2, r2, #8
 8012d28:	123e      	asrs	r6, r7, #8
 8012d2a:	b293      	uxth	r3, r2
 8012d2c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8012d30:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012d34:	43d2      	mvns	r2, r2
 8012d36:	b2d2      	uxtb	r2, r2
 8012d38:	10fd      	asrs	r5, r7, #3
 8012d3a:	fb1e fe03 	smulbb	lr, lr, r3
 8012d3e:	00ff      	lsls	r7, r7, #3
 8012d40:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8012d44:	fb06 e602 	mla	r6, r6, r2, lr
 8012d48:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012d4c:	b2ff      	uxtb	r7, r7
 8012d4e:	fa5f fc8c 	uxtb.w	ip, ip
 8012d52:	b2e4      	uxtb	r4, r4
 8012d54:	b2b6      	uxth	r6, r6
 8012d56:	fb1c fc03 	smulbb	ip, ip, r3
 8012d5a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8012d5e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8012d62:	fb14 f403 	smulbb	r4, r4, r3
 8012d66:	fb05 c502 	mla	r5, r5, r2, ip
 8012d6a:	f106 0e01 	add.w	lr, r6, #1
 8012d6e:	fb07 4702 	mla	r7, r7, r2, r4
 8012d72:	b2ad      	uxth	r5, r5
 8012d74:	b2bf      	uxth	r7, r7
 8012d76:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8012d7a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8012d7e:	f105 0c01 	add.w	ip, r5, #1
 8012d82:	1c7e      	adds	r6, r7, #1
 8012d84:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8012d88:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8012d8c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012d90:	096d      	lsrs	r5, r5, #5
 8012d92:	ea46 060e 	orr.w	r6, r6, lr
 8012d96:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012d9a:	432e      	orrs	r6, r5
 8012d9c:	8006      	strh	r6, [r0, #0]
 8012d9e:	e7ba      	b.n	8012d16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8012da0:	f8ba 3000 	ldrh.w	r3, [sl]
 8012da4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8012da8:	eba3 0308 	sub.w	r3, r3, r8
 8012dac:	eba4 0408 	sub.w	r4, r4, r8
 8012db0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012db4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8012db8:	e78b      	b.n	8012cd2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8012dba:	4b03      	ldr	r3, [pc, #12]	; (8012dc8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8012dbc:	6818      	ldr	r0, [r3, #0]
 8012dbe:	6803      	ldr	r3, [r0, #0]
 8012dc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012dc2:	4798      	blx	r3
 8012dc4:	e76a      	b.n	8012c9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8012dc6:	bf00      	nop
 8012dc8:	20013508 	.word	0x20013508
 8012dcc:	20013502 	.word	0x20013502

08012dd0 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8012dd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012dd4:	460c      	mov	r4, r1
 8012dd6:	b085      	sub	sp, #20
 8012dd8:	6810      	ldr	r0, [r2, #0]
 8012dda:	6851      	ldr	r1, [r2, #4]
 8012ddc:	466d      	mov	r5, sp
 8012dde:	c503      	stmia	r5!, {r0, r1}
 8012de0:	6818      	ldr	r0, [r3, #0]
 8012de2:	6859      	ldr	r1, [r3, #4]
 8012de4:	4616      	mov	r6, r2
 8012de6:	c503      	stmia	r5!, {r0, r1}
 8012de8:	4668      	mov	r0, sp
 8012dea:	f7f9 fc8d 	bl	800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012dee:	4631      	mov	r1, r6
 8012df0:	a802      	add	r0, sp, #8
 8012df2:	f7f9 fcb1 	bl	800c758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012df6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8012dfa:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8012dfe:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8012e02:	4d28      	ldr	r5, [pc, #160]	; (8012ea4 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8012e04:	4e28      	ldr	r6, [pc, #160]	; (8012ea8 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8012e06:	6828      	ldr	r0, [r5, #0]
 8012e08:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8012e0c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8012e10:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012e14:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8012e18:	f8bd 1000 	ldrh.w	r1, [sp]
 8012e1c:	440a      	add	r2, r1
 8012e1e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8012e22:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8012e26:	4413      	add	r3, r2
 8012e28:	f8ad 300a 	strh.w	r3, [sp, #10]
 8012e2c:	6803      	ldr	r3, [r0, #0]
 8012e2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012e30:	4798      	blx	r3
 8012e32:	8833      	ldrh	r3, [r6, #0]
 8012e34:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8012e38:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8012e3c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8012eac <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8012e40:	fb03 1202 	mla	r2, r3, r2, r1
 8012e44:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012e48:	fb08 f303 	mul.w	r3, r8, r3
 8012e4c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012e50:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8012e54:	4298      	cmp	r0, r3
 8012e56:	d21d      	bcs.n	8012e94 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8012e58:	eb00 080c 	add.w	r8, r0, ip
 8012e5c:	4540      	cmp	r0, r8
 8012e5e:	d20f      	bcs.n	8012e80 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8012e60:	f854 1b04 	ldr.w	r1, [r4], #4
 8012e64:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8012e68:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8012e6c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8012e70:	ea42 0209 	orr.w	r2, r2, r9
 8012e74:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8012e78:	430a      	orrs	r2, r1
 8012e7a:	f820 2b02 	strh.w	r2, [r0], #2
 8012e7e:	e7ed      	b.n	8012e5c <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8012e80:	8832      	ldrh	r2, [r6, #0]
 8012e82:	1bd2      	subs	r2, r2, r7
 8012e84:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012e88:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8012e8c:	1bd2      	subs	r2, r2, r7
 8012e8e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8012e92:	e7df      	b.n	8012e54 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8012e94:	6828      	ldr	r0, [r5, #0]
 8012e96:	6803      	ldr	r3, [r0, #0]
 8012e98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012e9a:	4798      	blx	r3
 8012e9c:	b005      	add	sp, #20
 8012e9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012ea2:	bf00      	nop
 8012ea4:	20013508 	.word	0x20013508
 8012ea8:	20013502 	.word	0x20013502
 8012eac:	fffff800 	.word	0xfffff800

08012eb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8012eb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012eb4:	460e      	mov	r6, r1
 8012eb6:	b08e      	sub	sp, #56	; 0x38
 8012eb8:	4604      	mov	r4, r0
 8012eba:	6808      	ldr	r0, [r1, #0]
 8012ebc:	6849      	ldr	r1, [r1, #4]
 8012ebe:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8013098 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8012ec2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801309c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8012ec6:	461d      	mov	r5, r3
 8012ec8:	ab0a      	add	r3, sp, #40	; 0x28
 8012eca:	c303      	stmia	r3!, {r0, r1}
 8012ecc:	6810      	ldr	r0, [r2, #0]
 8012ece:	6851      	ldr	r1, [r2, #4]
 8012ed0:	ab0c      	add	r3, sp, #48	; 0x30
 8012ed2:	c303      	stmia	r3!, {r0, r1}
 8012ed4:	a80a      	add	r0, sp, #40	; 0x28
 8012ed6:	f7f9 fc17 	bl	800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012eda:	4631      	mov	r1, r6
 8012edc:	a80c      	add	r0, sp, #48	; 0x30
 8012ede:	f7f9 fc3b 	bl	800c758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012ee2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8012ee6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012eea:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8012eee:	f8d8 0000 	ldr.w	r0, [r8]
 8012ef2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8012ef6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8012efa:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012efe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8012f02:	440c      	add	r4, r1
 8012f04:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8012f08:	440a      	add	r2, r1
 8012f0a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8012f0e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8012f12:	4413      	add	r3, r2
 8012f14:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012f18:	6803      	ldr	r3, [r0, #0]
 8012f1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012f1c:	4798      	blx	r3
 8012f1e:	2dff      	cmp	r5, #255	; 0xff
 8012f20:	d124      	bne.n	8012f6c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8012f22:	f010 0f01 	tst.w	r0, #1
 8012f26:	f8d8 0000 	ldr.w	r0, [r8]
 8012f2a:	d022      	beq.n	8012f72 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8012f2c:	2100      	movs	r1, #0
 8012f2e:	f8d0 c000 	ldr.w	ip, [r0]
 8012f32:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8012f36:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8012f3a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8012f3e:	f04f 0e01 	mov.w	lr, #1
 8012f42:	f8cd e018 	str.w	lr, [sp, #24]
 8012f46:	f8b9 e000 	ldrh.w	lr, [r9]
 8012f4a:	9503      	str	r5, [sp, #12]
 8012f4c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8012f50:	b2b6      	uxth	r6, r6
 8012f52:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8012f56:	9102      	str	r1, [sp, #8]
 8012f58:	b2bf      	uxth	r7, r7
 8012f5a:	9601      	str	r6, [sp, #4]
 8012f5c:	9700      	str	r7, [sp, #0]
 8012f5e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8012f62:	4621      	mov	r1, r4
 8012f64:	47a8      	blx	r5
 8012f66:	b00e      	add	sp, #56	; 0x38
 8012f68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012f6c:	f010 0f04 	tst.w	r0, #4
 8012f70:	e7d9      	b.n	8012f26 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8012f72:	6803      	ldr	r3, [r0, #0]
 8012f74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012f76:	4798      	blx	r3
 8012f78:	f8b9 3000 	ldrh.w	r3, [r9]
 8012f7c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8012f80:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8012f84:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8012f88:	fb03 1202 	mla	r2, r3, r2, r1
 8012f8c:	ebac 0c07 	sub.w	ip, ip, r7
 8012f90:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012f94:	435e      	muls	r6, r3
 8012f96:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8012f9a:	2dff      	cmp	r5, #255	; 0xff
 8012f9c:	eba3 0707 	sub.w	r7, r3, r7
 8012fa0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012fa4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8012fa8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8012fac:	d049      	beq.n	8013042 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8012fae:	43eb      	mvns	r3, r5
 8012fb0:	fa1f f985 	uxth.w	r9, r5
 8012fb4:	b2db      	uxtb	r3, r3
 8012fb6:	42b0      	cmp	r0, r6
 8012fb8:	d266      	bcs.n	8013088 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8012fba:	eb00 0a0e 	add.w	sl, r0, lr
 8012fbe:	4550      	cmp	r0, sl
 8012fc0:	4621      	mov	r1, r4
 8012fc2:	f104 0403 	add.w	r4, r4, #3
 8012fc6:	d25b      	bcs.n	8013080 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8012fc8:	8802      	ldrh	r2, [r0, #0]
 8012fca:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8012fce:	ea4f 2822 	mov.w	r8, r2, asr #8
 8012fd2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8012fd6:	fb11 f109 	smulbb	r1, r1, r9
 8012fda:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8012fde:	10d5      	asrs	r5, r2, #3
 8012fe0:	fb08 1803 	mla	r8, r8, r3, r1
 8012fe4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8012fe8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012fec:	fb11 f109 	smulbb	r1, r1, r9
 8012ff0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8012ff4:	fb05 1503 	mla	r5, r5, r3, r1
 8012ff8:	00d2      	lsls	r2, r2, #3
 8012ffa:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8012ffe:	b2d2      	uxtb	r2, r2
 8013000:	fb11 f109 	smulbb	r1, r1, r9
 8013004:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8013008:	fa1f f888 	uxth.w	r8, r8
 801300c:	fb02 1203 	mla	r2, r2, r3, r1
 8013010:	b292      	uxth	r2, r2
 8013012:	f108 0101 	add.w	r1, r8, #1
 8013016:	b2ad      	uxth	r5, r5
 8013018:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801301c:	1c51      	adds	r1, r2, #1
 801301e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8013022:	1c69      	adds	r1, r5, #1
 8013024:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8013028:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801302c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013030:	096d      	lsrs	r5, r5, #5
 8013032:	ea42 0208 	orr.w	r2, r2, r8
 8013036:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801303a:	432a      	orrs	r2, r5
 801303c:	f820 2b02 	strh.w	r2, [r0], #2
 8013040:	e7bd      	b.n	8012fbe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8013042:	4a14      	ldr	r2, [pc, #80]	; (8013094 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8013044:	42b0      	cmp	r0, r6
 8013046:	d21f      	bcs.n	8013088 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8013048:	eb00 050e 	add.w	r5, r0, lr
 801304c:	42a8      	cmp	r0, r5
 801304e:	4621      	mov	r1, r4
 8013050:	f104 0403 	add.w	r4, r4, #3
 8013054:	d210      	bcs.n	8013078 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8013056:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801305a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801305e:	00db      	lsls	r3, r3, #3
 8013060:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8013064:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013068:	430b      	orrs	r3, r1
 801306a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801306e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8013072:	f820 3b02 	strh.w	r3, [r0], #2
 8013076:	e7e9      	b.n	801304c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8013078:	4438      	add	r0, r7
 801307a:	eb01 040c 	add.w	r4, r1, ip
 801307e:	e7e1      	b.n	8013044 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8013080:	4438      	add	r0, r7
 8013082:	eb01 040c 	add.w	r4, r1, ip
 8013086:	e796      	b.n	8012fb6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8013088:	4b03      	ldr	r3, [pc, #12]	; (8013098 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801308a:	6818      	ldr	r0, [r3, #0]
 801308c:	6803      	ldr	r3, [r0, #0]
 801308e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013090:	4798      	blx	r3
 8013092:	e768      	b.n	8012f66 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8013094:	fffff800 	.word	0xfffff800
 8013098:	20013508 	.word	0x20013508
 801309c:	20013502 	.word	0x20013502

080130a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80130a0:	b570      	push	{r4, r5, r6, lr}
 80130a2:	9c04      	ldr	r4, [sp, #16]
 80130a4:	f89d 6018 	ldrb.w	r6, [sp, #24]
 80130a8:	4605      	mov	r5, r0
 80130aa:	4608      	mov	r0, r1
 80130ac:	4619      	mov	r1, r3
 80130ae:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80130b2:	2a0d      	cmp	r2, #13
 80130b4:	d825      	bhi.n	8013102 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 80130b6:	e8df f002 	tbb	[pc, r2]
 80130ba:	1807      	.short	0x1807
 80130bc:	1d1d1d13 	.word	0x1d1d1d13
 80130c0:	1d1d1d1d 	.word	0x1d1d1d1d
 80130c4:	1d1d1d1d 	.word	0x1d1d1d1d
 80130c8:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80130cc:	682a      	ldr	r2, [r5, #0]
 80130ce:	68d6      	ldr	r6, [r2, #12]
 80130d0:	4623      	mov	r3, r4
 80130d2:	460a      	mov	r2, r1
 80130d4:	46b4      	mov	ip, r6
 80130d6:	4601      	mov	r1, r0
 80130d8:	4628      	mov	r0, r5
 80130da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80130de:	4760      	bx	ip
 80130e0:	4622      	mov	r2, r4
 80130e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80130e6:	f7ff bd8d 	b.w	8012c04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80130ea:	4622      	mov	r2, r4
 80130ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80130f0:	f7ff bede 	b.w	8012eb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80130f4:	4b03      	ldr	r3, [pc, #12]	; (8013104 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 80130f6:	4a04      	ldr	r2, [pc, #16]	; (8013108 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 80130f8:	4804      	ldr	r0, [pc, #16]	; (801310c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 80130fa:	f240 315d 	movw	r1, #861	; 0x35d
 80130fe:	f008 fd0d 	bl	801bb1c <__assert_func>
 8013102:	bd70      	pop	{r4, r5, r6, pc}
 8013104:	0802063f 	.word	0x0802063f
 8013108:	08020da2 	.word	0x08020da2
 801310c:	0802051a 	.word	0x0802051a

08013110 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8013110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013114:	b093      	sub	sp, #76	; 0x4c
 8013116:	880e      	ldrh	r6, [r1, #0]
 8013118:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801311c:	4681      	mov	r9, r0
 801311e:	4688      	mov	r8, r1
 8013120:	4615      	mov	r5, r2
 8013122:	b136      	cbz	r6, 8013132 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 8013124:	4b70      	ldr	r3, [pc, #448]	; (80132e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8013126:	4a71      	ldr	r2, [pc, #452]	; (80132ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8013128:	4871      	ldr	r0, [pc, #452]	; (80132f0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 801312a:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 801312e:	f008 fcf5 	bl	801bb1c <__assert_func>
 8013132:	6810      	ldr	r0, [r2, #0]
 8013134:	6851      	ldr	r1, [r2, #4]
 8013136:	4f6f      	ldr	r7, [pc, #444]	; (80132f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8013138:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 80132f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 801313c:	ac0e      	add	r4, sp, #56	; 0x38
 801313e:	c403      	stmia	r4!, {r0, r1}
 8013140:	6818      	ldr	r0, [r3, #0]
 8013142:	6859      	ldr	r1, [r3, #4]
 8013144:	ac10      	add	r4, sp, #64	; 0x40
 8013146:	c403      	stmia	r4!, {r0, r1}
 8013148:	a80e      	add	r0, sp, #56	; 0x38
 801314a:	f7f9 fadd 	bl	800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801314e:	4629      	mov	r1, r5
 8013150:	a810      	add	r0, sp, #64	; 0x40
 8013152:	f7f9 fb01 	bl	800c758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013156:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801315a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801315e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8013162:	6838      	ldr	r0, [r7, #0]
 8013164:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8013168:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801316c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013170:	4489      	add	r9, r1
 8013172:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8013176:	440a      	add	r2, r1
 8013178:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801317c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013180:	4413      	add	r3, r2
 8013182:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8013186:	6803      	ldr	r3, [r0, #0]
 8013188:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801318a:	4798      	blx	r3
 801318c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8013190:	6838      	ldr	r0, [r7, #0]
 8013192:	d01d      	beq.n	80131d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 8013194:	6802      	ldr	r2, [r0, #0]
 8013196:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801319a:	e9cd 6608 	strd	r6, r6, [sp, #32]
 801319e:	210b      	movs	r1, #11
 80131a0:	9107      	str	r1, [sp, #28]
 80131a2:	f8bb 1000 	ldrh.w	r1, [fp]
 80131a6:	9106      	str	r1, [sp, #24]
 80131a8:	2101      	movs	r1, #1
 80131aa:	e9cd a104 	strd	sl, r1, [sp, #16]
 80131ae:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80131b2:	9103      	str	r1, [sp, #12]
 80131b4:	b2a4      	uxth	r4, r4
 80131b6:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 80131ba:	9100      	str	r1, [sp, #0]
 80131bc:	b2ad      	uxth	r5, r5
 80131be:	9502      	str	r5, [sp, #8]
 80131c0:	9401      	str	r4, [sp, #4]
 80131c2:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 80131c4:	4649      	mov	r1, r9
 80131c6:	4642      	mov	r2, r8
 80131c8:	47a0      	blx	r4
 80131ca:	b013      	add	sp, #76	; 0x4c
 80131cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80131d0:	6803      	ldr	r3, [r0, #0]
 80131d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80131d4:	4798      	blx	r3
 80131d6:	f8bb 3000 	ldrh.w	r3, [fp]
 80131da:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80131de:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 80131e2:	fb03 1202 	mla	r2, r3, r2, r1
 80131e6:	435d      	muls	r5, r3
 80131e8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80131ec:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80131f0:	920c      	str	r2, [sp, #48]	; 0x30
 80131f2:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 80131f6:	1b12      	subs	r2, r2, r4
 80131f8:	920d      	str	r2, [sp, #52]	; 0x34
 80131fa:	0062      	lsls	r2, r4, #1
 80131fc:	1b1c      	subs	r4, r3, r4
 80131fe:	0063      	lsls	r3, r4, #1
 8013200:	920a      	str	r2, [sp, #40]	; 0x28
 8013202:	930b      	str	r3, [sp, #44]	; 0x2c
 8013204:	f04f 0e04 	mov.w	lr, #4
 8013208:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801320a:	4298      	cmp	r0, r3
 801320c:	d266      	bcs.n	80132dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 801320e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013210:	eb00 0b03 	add.w	fp, r0, r3
 8013214:	4558      	cmp	r0, fp
 8013216:	d25c      	bcs.n	80132d2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 8013218:	f819 3b01 	ldrb.w	r3, [r9], #1
 801321c:	fb1e e303 	smlabb	r3, lr, r3, lr
 8013220:	f858 2003 	ldr.w	r2, [r8, r3]
 8013224:	0e11      	lsrs	r1, r2, #24
 8013226:	d012      	beq.n	801324e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 8013228:	29ff      	cmp	r1, #255	; 0xff
 801322a:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801322e:	d110      	bne.n	8013252 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 8013230:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013234:	d10d      	bne.n	8013252 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 8013236:	0953      	lsrs	r3, r2, #5
 8013238:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801323c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013240:	f027 0707 	bic.w	r7, r7, #7
 8013244:	431f      	orrs	r7, r3
 8013246:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801324a:	433a      	orrs	r2, r7
 801324c:	8002      	strh	r2, [r0, #0]
 801324e:	3002      	adds	r0, #2
 8013250:	e7e0      	b.n	8013214 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 8013252:	fb0a f101 	mul.w	r1, sl, r1
 8013256:	8806      	ldrh	r6, [r0, #0]
 8013258:	1c4b      	adds	r3, r1, #1
 801325a:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801325e:	1235      	asrs	r5, r6, #8
 8013260:	10f4      	asrs	r4, r6, #3
 8013262:	121b      	asrs	r3, r3, #8
 8013264:	00f6      	lsls	r6, r6, #3
 8013266:	b299      	uxth	r1, r3
 8013268:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801326c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8013270:	b2f6      	uxtb	r6, r6
 8013272:	43db      	mvns	r3, r3
 8013274:	b2d2      	uxtb	r2, r2
 8013276:	b2db      	uxtb	r3, r3
 8013278:	fb1c fc01 	smulbb	ip, ip, r1
 801327c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8013280:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8013284:	fb12 f201 	smulbb	r2, r2, r1
 8013288:	fb05 c503 	mla	r5, r5, r3, ip
 801328c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8013290:	b2ff      	uxtb	r7, r7
 8013292:	fb06 2203 	mla	r2, r6, r3, r2
 8013296:	b2ad      	uxth	r5, r5
 8013298:	fb17 f701 	smulbb	r7, r7, r1
 801329c:	b292      	uxth	r2, r2
 801329e:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80132a2:	fb04 7403 	mla	r4, r4, r3, r7
 80132a6:	f105 0c01 	add.w	ip, r5, #1
 80132aa:	1c57      	adds	r7, r2, #1
 80132ac:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80132b0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80132b4:	b2a4      	uxth	r4, r4
 80132b6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80132ba:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80132be:	433d      	orrs	r5, r7
 80132c0:	1c67      	adds	r7, r4, #1
 80132c2:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80132c6:	0964      	lsrs	r4, r4, #5
 80132c8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80132cc:	4325      	orrs	r5, r4
 80132ce:	8005      	strh	r5, [r0, #0]
 80132d0:	e7bd      	b.n	801324e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 80132d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80132d4:	4418      	add	r0, r3
 80132d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80132d8:	4499      	add	r9, r3
 80132da:	e795      	b.n	8013208 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 80132dc:	4b05      	ldr	r3, [pc, #20]	; (80132f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 80132de:	6818      	ldr	r0, [r3, #0]
 80132e0:	6803      	ldr	r3, [r0, #0]
 80132e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80132e4:	4798      	blx	r3
 80132e6:	e770      	b.n	80131ca <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 80132e8:	08020418 	.word	0x08020418
 80132ec:	08020b73 	.word	0x08020b73
 80132f0:	0802051a 	.word	0x0802051a
 80132f4:	20013508 	.word	0x20013508
 80132f8:	20013502 	.word	0x20013502

080132fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80132fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013300:	4614      	mov	r4, r2
 8013302:	880a      	ldrh	r2, [r1, #0]
 8013304:	b087      	sub	sp, #28
 8013306:	2a02      	cmp	r2, #2
 8013308:	4680      	mov	r8, r0
 801330a:	460d      	mov	r5, r1
 801330c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8013310:	d006      	beq.n	8013320 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8013312:	4b63      	ldr	r3, [pc, #396]	; (80134a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 8013314:	4a63      	ldr	r2, [pc, #396]	; (80134a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8013316:	4864      	ldr	r0, [pc, #400]	; (80134a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8013318:	f240 11e1 	movw	r1, #481	; 0x1e1
 801331c:	f008 fbfe 	bl	801bb1c <__assert_func>
 8013320:	2e00      	cmp	r6, #0
 8013322:	f000 80b9 	beq.w	8013498 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 8013326:	6820      	ldr	r0, [r4, #0]
 8013328:	6861      	ldr	r1, [r4, #4]
 801332a:	af02      	add	r7, sp, #8
 801332c:	c703      	stmia	r7!, {r0, r1}
 801332e:	6818      	ldr	r0, [r3, #0]
 8013330:	6859      	ldr	r1, [r3, #4]
 8013332:	af04      	add	r7, sp, #16
 8013334:	c703      	stmia	r7!, {r0, r1}
 8013336:	a802      	add	r0, sp, #8
 8013338:	f7f9 f9e6 	bl	800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801333c:	4621      	mov	r1, r4
 801333e:	a804      	add	r0, sp, #16
 8013340:	f7f9 fa0a 	bl	800c758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013344:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013348:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801334c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8013350:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8013354:	fb14 2103 	smlabb	r1, r4, r3, r2
 8013358:	eb08 0401 	add.w	r4, r8, r1
 801335c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8013360:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8013364:	440a      	add	r2, r1
 8013366:	f8ad 2010 	strh.w	r2, [sp, #16]
 801336a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801336e:	4413      	add	r3, r2
 8013370:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013374:	4b4d      	ldr	r3, [pc, #308]	; (80134ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8013376:	6818      	ldr	r0, [r3, #0]
 8013378:	6803      	ldr	r3, [r0, #0]
 801337a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801337c:	4798      	blx	r3
 801337e:	4b4c      	ldr	r3, [pc, #304]	; (80134b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 8013380:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8013384:	881a      	ldrh	r2, [r3, #0]
 8013386:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801338a:	2eff      	cmp	r6, #255	; 0xff
 801338c:	fb02 c101 	mla	r1, r2, r1, ip
 8013390:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8013394:	fb02 f207 	mul.w	r2, r2, r7
 8013398:	f105 0104 	add.w	r1, r5, #4
 801339c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80133a0:	461d      	mov	r5, r3
 80133a2:	d05a      	beq.n	801345a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 80133a4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 80133a8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80133ac:	b2b6      	uxth	r6, r6
 80133ae:	fa1f fe8e 	uxth.w	lr, lr
 80133b2:	9301      	str	r3, [sp, #4]
 80133b4:	4282      	cmp	r2, r0
 80133b6:	d96a      	bls.n	801348e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 80133b8:	eb00 0b0a 	add.w	fp, r0, sl
 80133bc:	4583      	cmp	fp, r0
 80133be:	d940      	bls.n	8013442 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 80133c0:	f814 3b01 	ldrb.w	r3, [r4], #1
 80133c4:	8805      	ldrh	r5, [r0, #0]
 80133c6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80133ca:	122f      	asrs	r7, r5, #8
 80133cc:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80133d0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80133d4:	fb17 f70e 	smulbb	r7, r7, lr
 80133d8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80133dc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80133e0:	00ed      	lsls	r5, r5, #3
 80133e2:	fb0c 7c06 	mla	ip, ip, r6, r7
 80133e6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80133ea:	10df      	asrs	r7, r3, #3
 80133ec:	b2ed      	uxtb	r5, r5
 80133ee:	00db      	lsls	r3, r3, #3
 80133f0:	fa1f fc8c 	uxth.w	ip, ip
 80133f4:	fb19 f90e 	smulbb	r9, r9, lr
 80133f8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80133fc:	b2db      	uxtb	r3, r3
 80133fe:	fb15 f50e 	smulbb	r5, r5, lr
 8013402:	fb07 9706 	mla	r7, r7, r6, r9
 8013406:	fb03 5306 	mla	r3, r3, r6, r5
 801340a:	f10c 0901 	add.w	r9, ip, #1
 801340e:	b29b      	uxth	r3, r3
 8013410:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8013414:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8013418:	f103 0c01 	add.w	ip, r3, #1
 801341c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013420:	b2bf      	uxth	r7, r7
 8013422:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013426:	ea4c 0c09 	orr.w	ip, ip, r9
 801342a:	f107 0901 	add.w	r9, r7, #1
 801342e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8013432:	097f      	lsrs	r7, r7, #5
 8013434:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8013438:	ea4c 0c07 	orr.w	ip, ip, r7
 801343c:	f820 cb02 	strh.w	ip, [r0], #2
 8013440:	e7bc      	b.n	80133bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8013442:	9b01      	ldr	r3, [sp, #4]
 8013444:	881b      	ldrh	r3, [r3, #0]
 8013446:	eba3 0308 	sub.w	r3, r3, r8
 801344a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801344e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8013452:	eba3 0308 	sub.w	r3, r3, r8
 8013456:	441c      	add	r4, r3
 8013458:	e7ac      	b.n	80133b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 801345a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801345e:	4282      	cmp	r2, r0
 8013460:	d915      	bls.n	801348e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8013462:	eb00 060a 	add.w	r6, r0, sl
 8013466:	4286      	cmp	r6, r0
 8013468:	d906      	bls.n	8013478 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 801346a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801346e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8013472:	f820 3b02 	strh.w	r3, [r0], #2
 8013476:	e7f6      	b.n	8013466 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 8013478:	882b      	ldrh	r3, [r5, #0]
 801347a:	eba3 0308 	sub.w	r3, r3, r8
 801347e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013482:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8013486:	eba3 0308 	sub.w	r3, r3, r8
 801348a:	441c      	add	r4, r3
 801348c:	e7e7      	b.n	801345e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 801348e:	4b07      	ldr	r3, [pc, #28]	; (80134ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8013490:	6818      	ldr	r0, [r3, #0]
 8013492:	6803      	ldr	r3, [r0, #0]
 8013494:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013496:	4798      	blx	r3
 8013498:	b007      	add	sp, #28
 801349a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801349e:	bf00      	nop
 80134a0:	08020348 	.word	0x08020348
 80134a4:	080209dd 	.word	0x080209dd
 80134a8:	0802051a 	.word	0x0802051a
 80134ac:	20013508 	.word	0x20013508
 80134b0:	20013502 	.word	0x20013502

080134b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80134b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134b8:	f8b1 9000 	ldrh.w	r9, [r1]
 80134bc:	b091      	sub	sp, #68	; 0x44
 80134be:	f1b9 0f01 	cmp.w	r9, #1
 80134c2:	4604      	mov	r4, r0
 80134c4:	460f      	mov	r7, r1
 80134c6:	4690      	mov	r8, r2
 80134c8:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 80134cc:	d006      	beq.n	80134dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 80134ce:	4b84      	ldr	r3, [pc, #528]	; (80136e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 80134d0:	4a84      	ldr	r2, [pc, #528]	; (80136e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 80134d2:	4885      	ldr	r0, [pc, #532]	; (80136e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 80134d4:	f240 212f 	movw	r1, #559	; 0x22f
 80134d8:	f008 fb20 	bl	801bb1c <__assert_func>
 80134dc:	2d00      	cmp	r5, #0
 80134de:	d04f      	beq.n	8013580 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 80134e0:	6810      	ldr	r0, [r2, #0]
 80134e2:	6851      	ldr	r1, [r2, #4]
 80134e4:	f8df b208 	ldr.w	fp, [pc, #520]	; 80136f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 80134e8:	ae0c      	add	r6, sp, #48	; 0x30
 80134ea:	c603      	stmia	r6!, {r0, r1}
 80134ec:	6818      	ldr	r0, [r3, #0]
 80134ee:	6859      	ldr	r1, [r3, #4]
 80134f0:	ae0e      	add	r6, sp, #56	; 0x38
 80134f2:	c603      	stmia	r6!, {r0, r1}
 80134f4:	a80c      	add	r0, sp, #48	; 0x30
 80134f6:	f7f9 f907 	bl	800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80134fa:	4641      	mov	r1, r8
 80134fc:	a80e      	add	r0, sp, #56	; 0x38
 80134fe:	f7f9 f92b 	bl	800c758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013502:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8013506:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801350a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801350e:	f8db 0000 	ldr.w	r0, [fp]
 8013512:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8013516:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801351a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 80136f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 801351e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013522:	440c      	add	r4, r1
 8013524:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8013528:	440a      	add	r2, r1
 801352a:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801352e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8013532:	4413      	add	r3, r2
 8013534:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8013538:	6803      	ldr	r3, [r0, #0]
 801353a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801353c:	4798      	blx	r3
 801353e:	f010 0f80 	tst.w	r0, #128	; 0x80
 8013542:	f8db 0000 	ldr.w	r0, [fp]
 8013546:	d01e      	beq.n	8013586 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 8013548:	2200      	movs	r2, #0
 801354a:	6801      	ldr	r1, [r0, #0]
 801354c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013550:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8013554:	220b      	movs	r2, #11
 8013556:	9207      	str	r2, [sp, #28]
 8013558:	f8b8 2000 	ldrh.w	r2, [r8]
 801355c:	9504      	str	r5, [sp, #16]
 801355e:	e9cd 9205 	strd	r9, r2, [sp, #20]
 8013562:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8013566:	9203      	str	r2, [sp, #12]
 8013568:	fa1f f28a 	uxth.w	r2, sl
 801356c:	9202      	str	r2, [sp, #8]
 801356e:	b2b6      	uxth	r6, r6
 8013570:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013574:	9200      	str	r2, [sp, #0]
 8013576:	9601      	str	r6, [sp, #4]
 8013578:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801357a:	463a      	mov	r2, r7
 801357c:	4621      	mov	r1, r4
 801357e:	47a8      	blx	r5
 8013580:	b011      	add	sp, #68	; 0x44
 8013582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013586:	6803      	ldr	r3, [r0, #0]
 8013588:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801358a:	4798      	blx	r3
 801358c:	f8b8 2000 	ldrh.w	r2, [r8]
 8013590:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8013594:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8013598:	2dff      	cmp	r5, #255	; 0xff
 801359a:	fb02 1303 	mla	r3, r2, r3, r1
 801359e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80135a2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80135a6:	fb0a fa02 	mul.w	sl, sl, r2
 80135aa:	d062      	beq.n	8013672 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 80135ac:	ea6f 0c05 	mvn.w	ip, r5
 80135b0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80135b4:	930a      	str	r3, [sp, #40]	; 0x28
 80135b6:	b2ad      	uxth	r5, r5
 80135b8:	fa5f fc8c 	uxtb.w	ip, ip
 80135bc:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80135c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80135c2:	4298      	cmp	r0, r3
 80135c4:	f080 8085 	bcs.w	80136d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80135c8:	eb00 0b09 	add.w	fp, r0, r9
 80135cc:	4558      	cmp	r0, fp
 80135ce:	d246      	bcs.n	801365e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80135d0:	f814 eb01 	ldrb.w	lr, [r4], #1
 80135d4:	2303      	movs	r3, #3
 80135d6:	2204      	movs	r2, #4
 80135d8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80135dc:	eb07 0a0e 	add.w	sl, r7, lr
 80135e0:	8803      	ldrh	r3, [r0, #0]
 80135e2:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80135e6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80135ea:	1219      	asrs	r1, r3, #8
 80135ec:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80135f0:	fb18 f805 	smulbb	r8, r8, r5
 80135f4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80135f8:	10da      	asrs	r2, r3, #3
 80135fa:	fb01 810c 	mla	r1, r1, ip, r8
 80135fe:	00db      	lsls	r3, r3, #3
 8013600:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8013604:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8013608:	b2db      	uxtb	r3, r3
 801360a:	fb18 f805 	smulbb	r8, r8, r5
 801360e:	fb1e fe05 	smulbb	lr, lr, r5
 8013612:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8013616:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801361a:	b289      	uxth	r1, r1
 801361c:	fb02 820c 	mla	r2, r2, ip, r8
 8013620:	fb03 e30c 	mla	r3, r3, ip, lr
 8013624:	b292      	uxth	r2, r2
 8013626:	b29b      	uxth	r3, r3
 8013628:	f101 0801 	add.w	r8, r1, #1
 801362c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8013630:	f103 0e01 	add.w	lr, r3, #1
 8013634:	f102 0801 	add.w	r8, r2, #1
 8013638:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801363c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8013640:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8013644:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8013648:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801364c:	ea4e 0101 	orr.w	r1, lr, r1
 8013650:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013654:	ea41 0108 	orr.w	r1, r1, r8
 8013658:	f820 1b02 	strh.w	r1, [r0], #2
 801365c:	e7b6      	b.n	80135cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 801365e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013660:	881b      	ldrh	r3, [r3, #0]
 8013662:	1b9b      	subs	r3, r3, r6
 8013664:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013668:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801366c:	1b9b      	subs	r3, r3, r6
 801366e:	441c      	add	r4, r3
 8013670:	e7a6      	b.n	80135c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 8013672:	491e      	ldr	r1, [pc, #120]	; (80136ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 8013674:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8013678:	2203      	movs	r2, #3
 801367a:	2504      	movs	r5, #4
 801367c:	4550      	cmp	r0, sl
 801367e:	d228      	bcs.n	80136d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8013680:	eb00 0c09 	add.w	ip, r0, r9
 8013684:	4560      	cmp	r0, ip
 8013686:	4623      	mov	r3, r4
 8013688:	d219      	bcs.n	80136be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801368a:	f893 e000 	ldrb.w	lr, [r3]
 801368e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8013692:	eb07 0b0e 	add.w	fp, r7, lr
 8013696:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801369a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801369e:	f89b b001 	ldrb.w	fp, [fp, #1]
 80136a2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80136a6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80136aa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80136ae:	ea43 030b 	orr.w	r3, r3, fp
 80136b2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80136b6:	3401      	adds	r4, #1
 80136b8:	f820 3b02 	strh.w	r3, [r0], #2
 80136bc:	e7e2      	b.n	8013684 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 80136be:	f8b8 3000 	ldrh.w	r3, [r8]
 80136c2:	1b9b      	subs	r3, r3, r6
 80136c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80136c8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80136cc:	1b9b      	subs	r3, r3, r6
 80136ce:	441c      	add	r4, r3
 80136d0:	e7d4      	b.n	801367c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 80136d2:	4b07      	ldr	r3, [pc, #28]	; (80136f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 80136d4:	6818      	ldr	r0, [r3, #0]
 80136d6:	6803      	ldr	r3, [r0, #0]
 80136d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80136da:	4798      	blx	r3
 80136dc:	e750      	b.n	8013580 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 80136de:	bf00      	nop
 80136e0:	08020396 	.word	0x08020396
 80136e4:	08020a66 	.word	0x08020a66
 80136e8:	0802051a 	.word	0x0802051a
 80136ec:	fffff800 	.word	0xfffff800
 80136f0:	20013508 	.word	0x20013508
 80136f4:	20013502 	.word	0x20013502

080136f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80136f8:	b430      	push	{r4, r5}
 80136fa:	780d      	ldrb	r5, [r1, #0]
 80136fc:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8013700:	2d01      	cmp	r5, #1
 8013702:	d00a      	beq.n	801371a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8013704:	d305      	bcc.n	8013712 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8013706:	2d02      	cmp	r5, #2
 8013708:	d10b      	bne.n	8013722 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801370a:	9402      	str	r4, [sp, #8]
 801370c:	bc30      	pop	{r4, r5}
 801370e:	f7ff bdf5 	b.w	80132fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8013712:	9402      	str	r4, [sp, #8]
 8013714:	bc30      	pop	{r4, r5}
 8013716:	f7ff bcfb 	b.w	8013110 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801371a:	9402      	str	r4, [sp, #8]
 801371c:	bc30      	pop	{r4, r5}
 801371e:	f7ff bec9 	b.w	80134b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8013722:	bc30      	pop	{r4, r5}
 8013724:	4770      	bx	lr
	...

08013728 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8013728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801372c:	4604      	mov	r4, r0
 801372e:	b087      	sub	sp, #28
 8013730:	6810      	ldr	r0, [r2, #0]
 8013732:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8013736:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8013970 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801373a:	460e      	mov	r6, r1
 801373c:	6851      	ldr	r1, [r2, #4]
 801373e:	ad02      	add	r5, sp, #8
 8013740:	c503      	stmia	r5!, {r0, r1}
 8013742:	6818      	ldr	r0, [r3, #0]
 8013744:	6859      	ldr	r1, [r3, #4]
 8013746:	ad04      	add	r5, sp, #16
 8013748:	4617      	mov	r7, r2
 801374a:	c503      	stmia	r5!, {r0, r1}
 801374c:	a802      	add	r0, sp, #8
 801374e:	f7f8 ffdb 	bl	800c708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013752:	4639      	mov	r1, r7
 8013754:	a804      	add	r0, sp, #16
 8013756:	f7f8 ffff 	bl	800c758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801375a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801375e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013762:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8013766:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801376a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801376e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013772:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8013776:	440e      	add	r6, r1
 8013778:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801377c:	440a      	add	r2, r1
 801377e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013782:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013786:	4413      	add	r3, r2
 8013788:	f8ad 3012 	strh.w	r3, [sp, #18]
 801378c:	4b77      	ldr	r3, [pc, #476]	; (801396c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801378e:	6818      	ldr	r0, [r3, #0]
 8013790:	6803      	ldr	r3, [r0, #0]
 8013792:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013794:	4798      	blx	r3
 8013796:	f8b9 b000 	ldrh.w	fp, [r9]
 801379a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801379e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80137a2:	fb0b 2303 	mla	r3, fp, r3, r2
 80137a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80137aa:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80137ae:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80137b2:	fb05 f50b 	mul.w	r5, r5, fp
 80137b6:	9300      	str	r3, [sp, #0]
 80137b8:	d069      	beq.n	801388e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80137ba:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80137be:	4558      	cmp	r0, fp
 80137c0:	f080 80cc 	bcs.w	801395c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80137c4:	9b00      	ldr	r3, [sp, #0]
 80137c6:	18c3      	adds	r3, r0, r3
 80137c8:	9301      	str	r3, [sp, #4]
 80137ca:	4631      	mov	r1, r6
 80137cc:	9b01      	ldr	r3, [sp, #4]
 80137ce:	4298      	cmp	r0, r3
 80137d0:	d24f      	bcs.n	8013872 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80137d2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80137d6:	2a00      	cmp	r2, #0
 80137d8:	d048      	beq.n	801386c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80137da:	fb0a f202 	mul.w	r2, sl, r2
 80137de:	1c53      	adds	r3, r2, #1
 80137e0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80137e4:	121b      	asrs	r3, r3, #8
 80137e6:	d041      	beq.n	801386c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80137e8:	8802      	ldrh	r2, [r0, #0]
 80137ea:	f8b4 c000 	ldrh.w	ip, [r4]
 80137ee:	b29e      	uxth	r6, r3
 80137f0:	1215      	asrs	r5, r2, #8
 80137f2:	43db      	mvns	r3, r3
 80137f4:	b2db      	uxtb	r3, r3
 80137f6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80137fa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80137fe:	fb15 f503 	smulbb	r5, r5, r3
 8013802:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8013806:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801380a:	00d2      	lsls	r2, r2, #3
 801380c:	fb07 5706 	mla	r7, r7, r6, r5
 8013810:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013814:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8013818:	b2d2      	uxtb	r2, r2
 801381a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801381e:	b2bf      	uxth	r7, r7
 8013820:	fb1e fe03 	smulbb	lr, lr, r3
 8013824:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013828:	fa5f fc8c 	uxtb.w	ip, ip
 801382c:	fb12 f203 	smulbb	r2, r2, r3
 8013830:	fb05 e506 	mla	r5, r5, r6, lr
 8013834:	fb0c 2c06 	mla	ip, ip, r6, r2
 8013838:	f107 0e01 	add.w	lr, r7, #1
 801383c:	fa1f fc8c 	uxth.w	ip, ip
 8013840:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8013844:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8013848:	f10c 0701 	add.w	r7, ip, #1
 801384c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8013850:	b2ad      	uxth	r5, r5
 8013852:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013856:	ea47 070e 	orr.w	r7, r7, lr
 801385a:	f105 0e01 	add.w	lr, r5, #1
 801385e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8013862:	096d      	lsrs	r5, r5, #5
 8013864:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013868:	432f      	orrs	r7, r5
 801386a:	8007      	strh	r7, [r0, #0]
 801386c:	3002      	adds	r0, #2
 801386e:	3402      	adds	r4, #2
 8013870:	e7ac      	b.n	80137cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8013872:	f8b9 3000 	ldrh.w	r3, [r9]
 8013876:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801387a:	eba3 0308 	sub.w	r3, r3, r8
 801387e:	eba6 0608 	sub.w	r6, r6, r8
 8013882:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013886:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801388a:	440e      	add	r6, r1
 801388c:	e797      	b.n	80137be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801388e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013892:	42a8      	cmp	r0, r5
 8013894:	d262      	bcs.n	801395c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8013896:	9b00      	ldr	r3, [sp, #0]
 8013898:	4631      	mov	r1, r6
 801389a:	eb00 0b03 	add.w	fp, r0, r3
 801389e:	4558      	cmp	r0, fp
 80138a0:	d24e      	bcs.n	8013940 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80138a2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80138a6:	b12b      	cbz	r3, 80138b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80138a8:	2bff      	cmp	r3, #255	; 0xff
 80138aa:	f8b4 e000 	ldrh.w	lr, [r4]
 80138ae:	d104      	bne.n	80138ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80138b0:	f8a0 e000 	strh.w	lr, [r0]
 80138b4:	3002      	adds	r0, #2
 80138b6:	3402      	adds	r4, #2
 80138b8:	e7f1      	b.n	801389e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80138ba:	8802      	ldrh	r2, [r0, #0]
 80138bc:	b29f      	uxth	r7, r3
 80138be:	1216      	asrs	r6, r2, #8
 80138c0:	43db      	mvns	r3, r3
 80138c2:	b2db      	uxtb	r3, r3
 80138c4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80138c8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80138cc:	fb16 f603 	smulbb	r6, r6, r3
 80138d0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80138d4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80138d8:	00d2      	lsls	r2, r2, #3
 80138da:	fb0c 6c07 	mla	ip, ip, r7, r6
 80138de:	b2d2      	uxtb	r2, r2
 80138e0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80138e4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80138e8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80138ec:	fb1a fa03 	smulbb	sl, sl, r3
 80138f0:	fa1f fc8c 	uxth.w	ip, ip
 80138f4:	fb12 f303 	smulbb	r3, r2, r3
 80138f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80138fc:	fa5f fe8e 	uxtb.w	lr, lr
 8013900:	fb06 a607 	mla	r6, r6, r7, sl
 8013904:	f10c 0201 	add.w	r2, ip, #1
 8013908:	fb0e 3307 	mla	r3, lr, r7, r3
 801390c:	b2b6      	uxth	r6, r6
 801390e:	b29b      	uxth	r3, r3
 8013910:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8013914:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8013918:	f106 0a01 	add.w	sl, r6, #1
 801391c:	f103 0c01 	add.w	ip, r3, #1
 8013920:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013924:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8013928:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801392c:	0976      	lsrs	r6, r6, #5
 801392e:	ea4c 0c02 	orr.w	ip, ip, r2
 8013932:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013936:	ea4c 0c06 	orr.w	ip, ip, r6
 801393a:	f8a0 c000 	strh.w	ip, [r0]
 801393e:	e7b9      	b.n	80138b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8013940:	f8b9 3000 	ldrh.w	r3, [r9]
 8013944:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013948:	eba3 0308 	sub.w	r3, r3, r8
 801394c:	eba6 0608 	sub.w	r6, r6, r8
 8013950:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013954:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013958:	440e      	add	r6, r1
 801395a:	e79a      	b.n	8013892 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801395c:	4b03      	ldr	r3, [pc, #12]	; (801396c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801395e:	6818      	ldr	r0, [r3, #0]
 8013960:	6803      	ldr	r3, [r0, #0]
 8013962:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013964:	4798      	blx	r3
 8013966:	b007      	add	sp, #28
 8013968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801396c:	20013508 	.word	0x20013508
 8013970:	20013502 	.word	0x20013502

08013974 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8013974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013978:	b089      	sub	sp, #36	; 0x24
 801397a:	4682      	mov	sl, r0
 801397c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8013980:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013982:	460f      	mov	r7, r1
 8013984:	4691      	mov	r9, r2
 8013986:	4698      	mov	r8, r3
 8013988:	2e00      	cmp	r6, #0
 801398a:	d03d      	beq.n	8013a08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801398c:	4608      	mov	r0, r1
 801398e:	f7fc f859 	bl	800fa44 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013992:	4605      	mov	r5, r0
 8013994:	4638      	mov	r0, r7
 8013996:	f7fc f88f 	bl	800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801399a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801399e:	4638      	mov	r0, r7
 80139a0:	f8ad 9008 	strh.w	r9, [sp, #8]
 80139a4:	f8ad 500c 	strh.w	r5, [sp, #12]
 80139a8:	f8ad 800a 	strh.w	r8, [sp, #10]
 80139ac:	f7fc f952 	bl	800fc54 <_ZNK8touchgfx6Bitmap7getDataEv>
 80139b0:	4605      	mov	r5, r0
 80139b2:	4638      	mov	r0, r7
 80139b4:	f7fc f980 	bl	800fcb8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80139b8:	4681      	mov	r9, r0
 80139ba:	4638      	mov	r0, r7
 80139bc:	f7fc f9d4 	bl	800fd68 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80139c0:	280b      	cmp	r0, #11
 80139c2:	f200 816f 	bhi.w	8013ca4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 80139c6:	e8df f010 	tbh	[pc, r0, lsl #1]
 80139ca:	00c3      	.short	0x00c3
 80139cc:	000c00b4 	.word	0x000c00b4
 80139d0:	016d016d 	.word	0x016d016d
 80139d4:	016d016d 	.word	0x016d016d
 80139d8:	016d016d 	.word	0x016d016d
 80139dc:	016d016d 	.word	0x016d016d
 80139e0:	00bb      	.short	0x00bb
 80139e2:	4bb3      	ldr	r3, [pc, #716]	; (8013cb0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 80139e4:	6818      	ldr	r0, [r3, #0]
 80139e6:	6803      	ldr	r3, [r0, #0]
 80139e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80139ea:	4798      	blx	r3
 80139ec:	2eff      	cmp	r6, #255	; 0xff
 80139ee:	d121      	bne.n	8013a34 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80139f0:	0683      	lsls	r3, r0, #26
 80139f2:	d41f      	bmi.n	8013a34 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80139f4:	4638      	mov	r0, r7
 80139f6:	f7fc f8f3 	bl	800fbe0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80139fa:	b940      	cbnz	r0, 8013a0e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 80139fc:	4623      	mov	r3, r4
 80139fe:	aa02      	add	r2, sp, #8
 8013a00:	4629      	mov	r1, r5
 8013a02:	4650      	mov	r0, sl
 8013a04:	f7ff f9e4 	bl	8012dd0 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8013a08:	b009      	add	sp, #36	; 0x24
 8013a0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a0e:	f10d 0818 	add.w	r8, sp, #24
 8013a12:	4639      	mov	r1, r7
 8013a14:	4640      	mov	r0, r8
 8013a16:	f7fc f889 	bl	800fb2c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013a1a:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013a1e:	af04      	add	r7, sp, #16
 8013a20:	e887 0003 	stmia.w	r7, {r0, r1}
 8013a24:	4638      	mov	r0, r7
 8013a26:	4621      	mov	r1, r4
 8013a28:	f7f5 ff36 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 8013a2c:	4638      	mov	r0, r7
 8013a2e:	f7f5 ff76 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 8013a32:	b130      	cbz	r0, 8013a42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 8013a34:	4633      	mov	r3, r6
 8013a36:	4622      	mov	r2, r4
 8013a38:	a902      	add	r1, sp, #8
 8013a3a:	4628      	mov	r0, r5
 8013a3c:	f7ff f8e2 	bl	8012c04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013a40:	e7e2      	b.n	8013a08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013a42:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013a46:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013a4a:	4293      	cmp	r3, r2
 8013a4c:	dd12      	ble.n	8013a74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 8013a4e:	1a9b      	subs	r3, r3, r2
 8013a50:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013a54:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013a58:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013a5c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013a60:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013a64:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013a68:	4642      	mov	r2, r8
 8013a6a:	4633      	mov	r3, r6
 8013a6c:	a902      	add	r1, sp, #8
 8013a6e:	4628      	mov	r0, r5
 8013a70:	f7ff f8c8 	bl	8012c04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013a74:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013a78:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013a7c:	4293      	cmp	r3, r2
 8013a7e:	dd12      	ble.n	8013aa6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 8013a80:	1a9b      	subs	r3, r3, r2
 8013a82:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013a86:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013a8a:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013a8e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013a92:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013a96:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013a9a:	23ff      	movs	r3, #255	; 0xff
 8013a9c:	4642      	mov	r2, r8
 8013a9e:	a902      	add	r1, sp, #8
 8013aa0:	4628      	mov	r0, r5
 8013aa2:	f7ff f8af 	bl	8012c04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013aa6:	463b      	mov	r3, r7
 8013aa8:	aa02      	add	r2, sp, #8
 8013aaa:	4629      	mov	r1, r5
 8013aac:	4650      	mov	r0, sl
 8013aae:	f7ff f98f 	bl	8012dd0 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8013ab2:	88a2      	ldrh	r2, [r4, #4]
 8013ab4:	8823      	ldrh	r3, [r4, #0]
 8013ab6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013aba:	4413      	add	r3, r2
 8013abc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013ac0:	440a      	add	r2, r1
 8013ac2:	b29b      	uxth	r3, r3
 8013ac4:	b292      	uxth	r2, r2
 8013ac6:	b211      	sxth	r1, r2
 8013ac8:	b218      	sxth	r0, r3
 8013aca:	4288      	cmp	r0, r1
 8013acc:	dd12      	ble.n	8013af4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 8013ace:	1a9b      	subs	r3, r3, r2
 8013ad0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013ad4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8013ad8:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013adc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013ae0:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013ae4:	23ff      	movs	r3, #255	; 0xff
 8013ae6:	4642      	mov	r2, r8
 8013ae8:	a902      	add	r1, sp, #8
 8013aea:	4628      	mov	r0, r5
 8013aec:	f8ad 601a 	strh.w	r6, [sp, #26]
 8013af0:	f7ff f888 	bl	8012c04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013af4:	88e2      	ldrh	r2, [r4, #6]
 8013af6:	8863      	ldrh	r3, [r4, #2]
 8013af8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013afc:	4413      	add	r3, r2
 8013afe:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013b02:	440a      	add	r2, r1
 8013b04:	b29b      	uxth	r3, r3
 8013b06:	b292      	uxth	r2, r2
 8013b08:	b211      	sxth	r1, r2
 8013b0a:	b218      	sxth	r0, r3
 8013b0c:	4288      	cmp	r0, r1
 8013b0e:	f77f af7b 	ble.w	8013a08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013b12:	1a9b      	subs	r3, r3, r2
 8013b14:	f9b4 6000 	ldrsh.w	r6, [r4]
 8013b18:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013b1c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013b20:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013b24:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013b28:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013b2c:	23ff      	movs	r3, #255	; 0xff
 8013b2e:	4642      	mov	r2, r8
 8013b30:	e782      	b.n	8013a38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 8013b32:	4633      	mov	r3, r6
 8013b34:	4622      	mov	r2, r4
 8013b36:	a902      	add	r1, sp, #8
 8013b38:	4628      	mov	r0, r5
 8013b3a:	f7ff f9b9 	bl	8012eb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8013b3e:	e763      	b.n	8013a08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013b40:	9600      	str	r6, [sp, #0]
 8013b42:	4623      	mov	r3, r4
 8013b44:	aa02      	add	r2, sp, #8
 8013b46:	4649      	mov	r1, r9
 8013b48:	4628      	mov	r0, r5
 8013b4a:	f7ff fdd5 	bl	80136f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8013b4e:	e75b      	b.n	8013a08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013b50:	4638      	mov	r0, r7
 8013b52:	f7fc f845 	bl	800fbe0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013b56:	b950      	cbnz	r0, 8013b6e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 8013b58:	e9cd 6000 	strd	r6, r0, [sp]
 8013b5c:	f8da 3000 	ldr.w	r3, [sl]
 8013b60:	aa02      	add	r2, sp, #8
 8013b62:	68de      	ldr	r6, [r3, #12]
 8013b64:	4629      	mov	r1, r5
 8013b66:	4623      	mov	r3, r4
 8013b68:	4650      	mov	r0, sl
 8013b6a:	47b0      	blx	r6
 8013b6c:	e74c      	b.n	8013a08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013b6e:	f10d 0818 	add.w	r8, sp, #24
 8013b72:	4639      	mov	r1, r7
 8013b74:	4640      	mov	r0, r8
 8013b76:	f7fb ffd9 	bl	800fb2c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013b7a:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013b7e:	af04      	add	r7, sp, #16
 8013b80:	e887 0003 	stmia.w	r7, {r0, r1}
 8013b84:	4638      	mov	r0, r7
 8013b86:	4621      	mov	r1, r4
 8013b88:	f7f5 fe86 	bl	8009898 <_ZN8touchgfx4RectaNERKS0_>
 8013b8c:	4638      	mov	r0, r7
 8013b8e:	f7f5 fec6 	bl	800991e <_ZNK8touchgfx4Rect7isEmptyEv>
 8013b92:	b138      	cbz	r0, 8013ba4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8013b94:	9600      	str	r6, [sp, #0]
 8013b96:	4623      	mov	r3, r4
 8013b98:	aa02      	add	r2, sp, #8
 8013b9a:	4649      	mov	r1, r9
 8013b9c:	4628      	mov	r0, r5
 8013b9e:	f7ff fdc3 	bl	8013728 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013ba2:	e731      	b.n	8013a08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013ba4:	e9cd 6000 	strd	r6, r0, [sp]
 8013ba8:	f8da 3000 	ldr.w	r3, [sl]
 8013bac:	aa02      	add	r2, sp, #8
 8013bae:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8013bb2:	4629      	mov	r1, r5
 8013bb4:	463b      	mov	r3, r7
 8013bb6:	4650      	mov	r0, sl
 8013bb8:	47d8      	blx	fp
 8013bba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013bbe:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013bc2:	4293      	cmp	r3, r2
 8013bc4:	dd13      	ble.n	8013bee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 8013bc6:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013bca:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013bce:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013bd2:	1a9b      	subs	r3, r3, r2
 8013bd4:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013bd8:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013bdc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013be0:	9600      	str	r6, [sp, #0]
 8013be2:	4643      	mov	r3, r8
 8013be4:	aa02      	add	r2, sp, #8
 8013be6:	4649      	mov	r1, r9
 8013be8:	4628      	mov	r0, r5
 8013bea:	f7ff fd9d 	bl	8013728 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013bee:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013bf2:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013bf6:	4293      	cmp	r3, r2
 8013bf8:	dd13      	ble.n	8013c22 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 8013bfa:	1a9b      	subs	r3, r3, r2
 8013bfc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013c00:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013c04:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013c08:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013c0c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013c10:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013c14:	9600      	str	r6, [sp, #0]
 8013c16:	4643      	mov	r3, r8
 8013c18:	aa02      	add	r2, sp, #8
 8013c1a:	4649      	mov	r1, r9
 8013c1c:	4628      	mov	r0, r5
 8013c1e:	f7ff fd83 	bl	8013728 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013c22:	88a2      	ldrh	r2, [r4, #4]
 8013c24:	8823      	ldrh	r3, [r4, #0]
 8013c26:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013c2a:	4413      	add	r3, r2
 8013c2c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013c30:	440a      	add	r2, r1
 8013c32:	b29b      	uxth	r3, r3
 8013c34:	b292      	uxth	r2, r2
 8013c36:	b211      	sxth	r1, r2
 8013c38:	b218      	sxth	r0, r3
 8013c3a:	4288      	cmp	r0, r1
 8013c3c:	dd13      	ble.n	8013c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 8013c3e:	1a9b      	subs	r3, r3, r2
 8013c40:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013c44:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8013c48:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013c4c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013c50:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013c54:	9600      	str	r6, [sp, #0]
 8013c56:	4643      	mov	r3, r8
 8013c58:	aa02      	add	r2, sp, #8
 8013c5a:	4649      	mov	r1, r9
 8013c5c:	4628      	mov	r0, r5
 8013c5e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013c62:	f7ff fd61 	bl	8013728 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013c66:	88e2      	ldrh	r2, [r4, #6]
 8013c68:	8863      	ldrh	r3, [r4, #2]
 8013c6a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013c6e:	4413      	add	r3, r2
 8013c70:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013c74:	440a      	add	r2, r1
 8013c76:	b29b      	uxth	r3, r3
 8013c78:	b292      	uxth	r2, r2
 8013c7a:	b211      	sxth	r1, r2
 8013c7c:	b218      	sxth	r0, r3
 8013c7e:	4288      	cmp	r0, r1
 8013c80:	f77f aec2 	ble.w	8013a08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013c84:	f9b4 7000 	ldrsh.w	r7, [r4]
 8013c88:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013c8c:	f8ad 7018 	strh.w	r7, [sp, #24]
 8013c90:	1a9b      	subs	r3, r3, r2
 8013c92:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013c96:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013c9a:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013c9e:	9600      	str	r6, [sp, #0]
 8013ca0:	4643      	mov	r3, r8
 8013ca2:	e779      	b.n	8013b98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8013ca4:	4b03      	ldr	r3, [pc, #12]	; (8013cb4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 8013ca6:	4a04      	ldr	r2, [pc, #16]	; (8013cb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 8013ca8:	4804      	ldr	r0, [pc, #16]	; (8013cbc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 8013caa:	21b4      	movs	r1, #180	; 0xb4
 8013cac:	f007 ff36 	bl	801bb1c <__assert_func>
 8013cb0:	20013508 	.word	0x20013508
 8013cb4:	080203e4 	.word	0x080203e4
 8013cb8:	08020aef 	.word	0x08020aef
 8013cbc:	0802051a 	.word	0x0802051a

08013cc0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8013cc0:	b508      	push	{r3, lr}
 8013cc2:	b180      	cbz	r0, 8013ce6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8013cc4:	2902      	cmp	r1, #2
 8013cc6:	d014      	beq.n	8013cf2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8013cc8:	2903      	cmp	r1, #3
 8013cca:	d01d      	beq.n	8013d08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013ccc:	2901      	cmp	r1, #1
 8013cce:	d101      	bne.n	8013cd4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013cd0:	2001      	movs	r0, #1
 8013cd2:	bd08      	pop	{r3, pc}
 8013cd4:	4b0e      	ldr	r3, [pc, #56]	; (8013d10 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013cd6:	8818      	ldrh	r0, [r3, #0]
 8013cd8:	b990      	cbnz	r0, 8013d00 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8013cda:	4b0e      	ldr	r3, [pc, #56]	; (8013d14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8013cdc:	4a0e      	ldr	r2, [pc, #56]	; (8013d18 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8013cde:	480f      	ldr	r0, [pc, #60]	; (8013d1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8013ce0:	2150      	movs	r1, #80	; 0x50
 8013ce2:	f007 ff1b 	bl	801bb1c <__assert_func>
 8013ce6:	2902      	cmp	r1, #2
 8013ce8:	d00e      	beq.n	8013d08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013cea:	2903      	cmp	r1, #3
 8013cec:	d0f2      	beq.n	8013cd4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013cee:	2901      	cmp	r1, #1
 8013cf0:	d1ee      	bne.n	8013cd0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8013cf2:	4b07      	ldr	r3, [pc, #28]	; (8013d10 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013cf4:	8818      	ldrh	r0, [r3, #0]
 8013cf6:	2800      	cmp	r0, #0
 8013cf8:	d0ef      	beq.n	8013cda <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8013cfa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013cfe:	e7e8      	b.n	8013cd2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013d00:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013d04:	4240      	negs	r0, r0
 8013d06:	e7e4      	b.n	8013cd2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013d08:	f04f 30ff 	mov.w	r0, #4294967295
 8013d0c:	e7e1      	b.n	8013cd2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013d0e:	bf00      	nop
 8013d10:	20013502 	.word	0x20013502
 8013d14:	08020670 	.word	0x08020670
 8013d18:	08020c6c 	.word	0x08020c6c
 8013d1c:	080206b2 	.word	0x080206b2

08013d20 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8013d20:	b508      	push	{r3, lr}
 8013d22:	b180      	cbz	r0, 8013d46 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8013d24:	2902      	cmp	r1, #2
 8013d26:	d014      	beq.n	8013d52 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8013d28:	2903      	cmp	r1, #3
 8013d2a:	d018      	beq.n	8013d5e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013d2c:	2901      	cmp	r1, #1
 8013d2e:	d001      	beq.n	8013d34 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013d30:	2001      	movs	r0, #1
 8013d32:	e013      	b.n	8013d5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013d34:	4b0e      	ldr	r3, [pc, #56]	; (8013d70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013d36:	8818      	ldrh	r0, [r3, #0]
 8013d38:	b970      	cbnz	r0, 8013d58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8013d3a:	4b0e      	ldr	r3, [pc, #56]	; (8013d74 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8013d3c:	4a0e      	ldr	r2, [pc, #56]	; (8013d78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8013d3e:	480f      	ldr	r0, [pc, #60]	; (8013d7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8013d40:	2150      	movs	r1, #80	; 0x50
 8013d42:	f007 feeb 	bl	801bb1c <__assert_func>
 8013d46:	2902      	cmp	r1, #2
 8013d48:	d009      	beq.n	8013d5e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013d4a:	2903      	cmp	r1, #3
 8013d4c:	d0f0      	beq.n	8013d30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8013d4e:	2901      	cmp	r1, #1
 8013d50:	d1f0      	bne.n	8013d34 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013d52:	f04f 30ff 	mov.w	r0, #4294967295
 8013d56:	e001      	b.n	8013d5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013d58:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013d5c:	bd08      	pop	{r3, pc}
 8013d5e:	4b04      	ldr	r3, [pc, #16]	; (8013d70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013d60:	8818      	ldrh	r0, [r3, #0]
 8013d62:	2800      	cmp	r0, #0
 8013d64:	d0e9      	beq.n	8013d3a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8013d66:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013d6a:	4240      	negs	r0, r0
 8013d6c:	e7f6      	b.n	8013d5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013d6e:	bf00      	nop
 8013d70:	20013502 	.word	0x20013502
 8013d74:	08020670 	.word	0x08020670
 8013d78:	08020c6c 	.word	0x08020c6c
 8013d7c:	080206b2 	.word	0x080206b2

08013d80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8013d80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d84:	b099      	sub	sp, #100	; 0x64
 8013d86:	910b      	str	r1, [sp, #44]	; 0x2c
 8013d88:	a914      	add	r1, sp, #80	; 0x50
 8013d8a:	e881 000c 	stmia.w	r1, {r2, r3}
 8013d8e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8013d92:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8013d96:	930a      	str	r3, [sp, #40]	; 0x28
 8013d98:	f891 900d 	ldrb.w	r9, [r1, #13]
 8013d9c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8013da0:	9311      	str	r3, [sp, #68]	; 0x44
 8013da2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8013da6:	930c      	str	r3, [sp, #48]	; 0x30
 8013da8:	7988      	ldrb	r0, [r1, #6]
 8013daa:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8013dae:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8013db2:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8013db6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8013dba:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8013dbe:	ea4f 1349 	mov.w	r3, r9, lsl #5
 8013dc2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013dc6:	4303      	orrs	r3, r0
 8013dc8:	9309      	str	r3, [sp, #36]	; 0x24
 8013dca:	f000 81a1 	beq.w	8014110 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013dce:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8013dd2:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8013dd6:	f891 9007 	ldrb.w	r9, [r1, #7]
 8013dda:	ea59 0903 	orrs.w	r9, r9, r3
 8013dde:	f000 8197 	beq.w	8014110 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013de2:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8013de6:	b29b      	uxth	r3, r3
 8013de8:	2e00      	cmp	r6, #0
 8013dea:	f000 813a 	beq.w	8014062 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8013dee:	1af6      	subs	r6, r6, r3
 8013df0:	b2b6      	uxth	r6, r6
 8013df2:	0433      	lsls	r3, r6, #16
 8013df4:	d502      	bpl.n	8013dfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8013df6:	1bad      	subs	r5, r5, r6
 8013df8:	b22d      	sxth	r5, r5
 8013dfa:	2600      	movs	r6, #0
 8013dfc:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013e00:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8013e04:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8013e08:	428d      	cmp	r5, r1
 8013e0a:	b28b      	uxth	r3, r1
 8013e0c:	bfbf      	itttt	lt
 8013e0e:	18f6      	addlt	r6, r6, r3
 8013e10:	1b75      	sublt	r5, r6, r5
 8013e12:	b2ae      	uxthlt	r6, r5
 8013e14:	460d      	movlt	r5, r1
 8013e16:	8891      	ldrh	r1, [r2, #4]
 8013e18:	440b      	add	r3, r1
 8013e1a:	b21b      	sxth	r3, r3
 8013e1c:	9310      	str	r3, [sp, #64]	; 0x40
 8013e1e:	88d3      	ldrh	r3, [r2, #6]
 8013e20:	8852      	ldrh	r2, [r2, #2]
 8013e22:	4413      	add	r3, r2
 8013e24:	b21b      	sxth	r3, r3
 8013e26:	930f      	str	r3, [sp, #60]	; 0x3c
 8013e28:	4bbc      	ldr	r3, [pc, #752]	; (801411c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8013e2a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013e2c:	f893 b000 	ldrb.w	fp, [r3]
 8013e30:	f10b 3cff 	add.w	ip, fp, #4294967295
 8013e34:	f1dc 0300 	rsbs	r3, ip, #0
 8013e38:	eb43 030c 	adc.w	r3, r3, ip
 8013e3c:	930e      	str	r3, [sp, #56]	; 0x38
 8013e3e:	4629      	mov	r1, r5
 8013e40:	4653      	mov	r3, sl
 8013e42:	a814      	add	r0, sp, #80	; 0x50
 8013e44:	f7f8 fae5 	bl	800c412 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8013e48:	4629      	mov	r1, r5
 8013e4a:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8013e4e:	4653      	mov	r3, sl
 8013e50:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013e52:	a814      	add	r0, sp, #80	; 0x50
 8013e54:	f7f8 faf5 	bl	800c442 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8013e58:	a918      	add	r1, sp, #96	; 0x60
 8013e5a:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8013e5e:	a817      	add	r0, sp, #92	; 0x5c
 8013e60:	f7f8 fc10 	bl	800c684 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8013e64:	f1ba 0f00 	cmp.w	sl, #0
 8013e68:	f040 80fe 	bne.w	8014068 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8013e6c:	f1bb 0f01 	cmp.w	fp, #1
 8013e70:	f040 8102 	bne.w	8014078 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 8013e74:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013e76:	b153      	cbz	r3, 8013e8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8013e78:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013e7a:	2408      	movs	r4, #8
 8013e7c:	fb94 f3f8 	sdiv	r3, r4, r8
 8013e80:	1e5c      	subs	r4, r3, #1
 8013e82:	4414      	add	r4, r2
 8013e84:	fb94 f4f3 	sdiv	r4, r4, r3
 8013e88:	fb14 f403 	smulbb	r4, r4, r3
 8013e8c:	b2a4      	uxth	r4, r4
 8013e8e:	b906      	cbnz	r6, 8013e92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8013e90:	b16f      	cbz	r7, 8013eae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 8013e92:	fb07 6304 	mla	r3, r7, r4, r6
 8013e96:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013e98:	fb08 f303 	mul.w	r3, r8, r3
 8013e9c:	463a      	mov	r2, r7
 8013e9e:	f003 0707 	and.w	r7, r3, #7
 8013ea2:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 8013ea6:	9328      	str	r3, [sp, #160]	; 0xa0
 8013ea8:	eba9 0302 	sub.w	r3, r9, r2
 8013eac:	930d      	str	r3, [sp, #52]	; 0x34
 8013eae:	4651      	mov	r1, sl
 8013eb0:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013eb2:	f7ff ff05 	bl	8013cc0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8013eb6:	4651      	mov	r1, sl
 8013eb8:	4681      	mov	r9, r0
 8013eba:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013ebc:	f7ff ff30 	bl	8013d20 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8013ec0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013ec2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013ec4:	eba3 0a02 	sub.w	sl, r3, r2
 8013ec8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013eca:	459a      	cmp	sl, r3
 8013ecc:	bfa8      	it	ge
 8013ece:	469a      	movge	sl, r3
 8013ed0:	f1ba 0f00 	cmp.w	sl, #0
 8013ed4:	4683      	mov	fp, r0
 8013ed6:	f340 811b 	ble.w	8014110 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013eda:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013edc:	1bad      	subs	r5, r5, r6
 8013ede:	1b5d      	subs	r5, r3, r5
 8013ee0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013ee2:	429d      	cmp	r5, r3
 8013ee4:	bfd4      	ite	le
 8013ee6:	ebc6 0605 	rsble	r6, r6, r5
 8013eea:	ebc6 0603 	rsbgt	r6, r6, r3
 8013eee:	2e00      	cmp	r6, #0
 8013ef0:	f340 810e 	ble.w	8014110 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013ef4:	1ba4      	subs	r4, r4, r6
 8013ef6:	fb08 f304 	mul.w	r3, r8, r4
 8013efa:	930f      	str	r3, [sp, #60]	; 0x3c
 8013efc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013efe:	2b00      	cmp	r3, #0
 8013f00:	f040 8114 	bne.w	801412c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8013f04:	4b86      	ldr	r3, [pc, #536]	; (8014120 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8013f06:	6818      	ldr	r0, [r3, #0]
 8013f08:	6803      	ldr	r3, [r0, #0]
 8013f0a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013f0c:	4798      	blx	r3
 8013f0e:	2301      	movs	r3, #1
 8013f10:	fa03 f308 	lsl.w	r3, r3, r8
 8013f14:	4a83      	ldr	r2, [pc, #524]	; (8014124 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8013f16:	3b01      	subs	r3, #1
 8013f18:	b2db      	uxtb	r3, r3
 8013f1a:	8811      	ldrh	r1, [r2, #0]
 8013f1c:	930e      	str	r3, [sp, #56]	; 0x38
 8013f1e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8013f22:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8013f26:	fb01 2303 	mla	r3, r1, r3, r2
 8013f2a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013f2e:	930a      	str	r3, [sp, #40]	; 0x28
 8013f30:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013f32:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8013f36:	9313      	str	r3, [sp, #76]	; 0x4c
 8013f38:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013f3a:	0a19      	lsrs	r1, r3, #8
 8013f3c:	b2cb      	uxtb	r3, r1
 8013f3e:	9312      	str	r3, [sp, #72]	; 0x48
 8013f40:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013f42:	b2db      	uxtb	r3, r3
 8013f44:	9311      	str	r3, [sp, #68]	; 0x44
 8013f46:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013f48:	095a      	lsrs	r2, r3, #5
 8013f4a:	4b77      	ldr	r3, [pc, #476]	; (8014128 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8013f4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013f50:	400b      	ands	r3, r1
 8013f52:	4313      	orrs	r3, r2
 8013f54:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8013f56:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8013f5a:	4313      	orrs	r3, r2
 8013f5c:	b29b      	uxth	r3, r3
 8013f5e:	9310      	str	r3, [sp, #64]	; 0x40
 8013f60:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013f62:	781a      	ldrb	r2, [r3, #0]
 8013f64:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8013f68:	413a      	asrs	r2, r7
 8013f6a:	fb06 b919 	mls	r9, r6, r9, fp
 8013f6e:	fb03 fb06 	mul.w	fp, r3, r6
 8013f72:	b2d2      	uxtb	r2, r2
 8013f74:	930d      	str	r3, [sp, #52]	; 0x34
 8013f76:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8013f7a:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8013f7e:	f0c0 80ea 	bcc.w	8014156 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 8013f82:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8013f86:	46b6      	mov	lr, r6
 8013f88:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8013f8c:	f0c0 80d2 	bcc.w	8014134 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8013f90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013f92:	4013      	ands	r3, r2
 8013f94:	d055      	beq.n	8014042 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 8013f96:	20ff      	movs	r0, #255	; 0xff
 8013f98:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013f9a:	fb90 f1f1 	sdiv	r1, r0, r1
 8013f9e:	434b      	muls	r3, r1
 8013fa0:	2bfe      	cmp	r3, #254	; 0xfe
 8013fa2:	dd03      	ble.n	8013fac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 8013fa4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013fa6:	4281      	cmp	r1, r0
 8013fa8:	f000 80c2 	beq.w	8014130 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8013fac:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013fae:	f8bc 4000 	ldrh.w	r4, [ip]
 8013fb2:	fb11 f303 	smulbb	r3, r1, r3
 8013fb6:	b29b      	uxth	r3, r3
 8013fb8:	1c59      	adds	r1, r3, #1
 8013fba:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8013fbe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013fc2:	b29d      	uxth	r5, r3
 8013fc4:	43db      	mvns	r3, r3
 8013fc6:	b2db      	uxtb	r3, r3
 8013fc8:	9309      	str	r3, [sp, #36]	; 0x24
 8013fca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013fcc:	1220      	asrs	r0, r4, #8
 8013fce:	fb13 f905 	smulbb	r9, r3, r5
 8013fd2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013fd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fd8:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8013fdc:	fb00 9003 	mla	r0, r0, r3, r9
 8013fe0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013fe2:	10e1      	asrs	r1, r4, #3
 8013fe4:	fb13 f905 	smulbb	r9, r3, r5
 8013fe8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013fec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fee:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8013ff2:	fb01 9103 	mla	r1, r1, r3, r9
 8013ff6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013ff8:	00e4      	lsls	r4, r4, #3
 8013ffa:	fb13 f505 	smulbb	r5, r3, r5
 8013ffe:	b2e4      	uxtb	r4, r4
 8014000:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014002:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8014006:	fb04 5403 	mla	r4, r4, r3, r5
 801400a:	b280      	uxth	r0, r0
 801400c:	b2a4      	uxth	r4, r4
 801400e:	1c43      	adds	r3, r0, #1
 8014010:	f104 0901 	add.w	r9, r4, #1
 8014014:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8014018:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801401c:	b289      	uxth	r1, r1
 801401e:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8014022:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8014026:	ea49 0000 	orr.w	r0, r9, r0
 801402a:	f101 0901 	add.w	r9, r1, #1
 801402e:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8014032:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014036:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801403a:	ea40 0009 	orr.w	r0, r0, r9
 801403e:	f8ac 0000 	strh.w	r0, [ip]
 8014042:	4447      	add	r7, r8
 8014044:	b2bf      	uxth	r7, r7
 8014046:	2f07      	cmp	r7, #7
 8014048:	bf81      	itttt	hi
 801404a:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801404c:	785a      	ldrbhi	r2, [r3, #1]
 801404e:	3301      	addhi	r3, #1
 8014050:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8014052:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014054:	bf9a      	itte	ls
 8014056:	fa42 f208 	asrls.w	r2, r2, r8
 801405a:	b2d2      	uxtbls	r2, r2
 801405c:	2700      	movhi	r7, #0
 801405e:	449c      	add	ip, r3
 8014060:	e792      	b.n	8013f88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 8014062:	441d      	add	r5, r3
 8014064:	b22d      	sxth	r5, r5
 8014066:	e6c9      	b.n	8013dfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8014068:	f1ba 0f01 	cmp.w	sl, #1
 801406c:	f47f af02 	bne.w	8013e74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8014070:	f1bb 0f01 	cmp.w	fp, #1
 8014074:	f47f aefe 	bne.w	8013e74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8014078:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 8014120 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801407c:	f8db 0000 	ldr.w	r0, [fp]
 8014080:	6803      	ldr	r3, [r0, #0]
 8014082:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014084:	4798      	blx	r3
 8014086:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801408a:	465a      	mov	r2, fp
 801408c:	d006      	beq.n	801409c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801408e:	f1b8 0f04 	cmp.w	r8, #4
 8014092:	d140      	bne.n	8014116 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8014094:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014096:	3300      	adds	r3, #0
 8014098:	bf18      	it	ne
 801409a:	2301      	movne	r3, #1
 801409c:	0580      	lsls	r0, r0, #22
 801409e:	d563      	bpl.n	8014168 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 80140a0:	f1b8 0f08 	cmp.w	r8, #8
 80140a4:	d160      	bne.n	8014168 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 80140a6:	2b00      	cmp	r3, #0
 80140a8:	bf0c      	ite	eq
 80140aa:	f44f 7100 	moveq.w	r1, #512	; 0x200
 80140ae:	f44f 7180 	movne.w	r1, #256	; 0x100
 80140b2:	2e00      	cmp	r6, #0
 80140b4:	f47f aede 	bne.w	8013e74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80140b8:	2f00      	cmp	r7, #0
 80140ba:	f47f aedb 	bne.w	8013e74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80140be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80140c0:	9810      	ldr	r0, [sp, #64]	; 0x40
 80140c2:	18eb      	adds	r3, r5, r3
 80140c4:	4283      	cmp	r3, r0
 80140c6:	f73f aed5 	bgt.w	8013e74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80140ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80140cc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80140ce:	444b      	add	r3, r9
 80140d0:	4283      	cmp	r3, r0
 80140d2:	f73f aecf 	bgt.w	8013e74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80140d6:	6810      	ldr	r0, [r2, #0]
 80140d8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 80140dc:	6805      	ldr	r5, [r0, #0]
 80140de:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80140e2:	f1b8 0f08 	cmp.w	r8, #8
 80140e6:	f04f 0600 	mov.w	r6, #0
 80140ea:	bf18      	it	ne
 80140ec:	3401      	addne	r4, #1
 80140ee:	e9cd 1605 	strd	r1, r6, [sp, #20]
 80140f2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80140f4:	9104      	str	r1, [sp, #16]
 80140f6:	bf18      	it	ne
 80140f8:	f024 0401 	bicne.w	r4, r4, #1
 80140fc:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80140fe:	bf18      	it	ne
 8014100:	b2a4      	uxthne	r4, r4
 8014102:	e9cd 4102 	strd	r4, r1, [sp, #8]
 8014106:	e9cd 4900 	strd	r4, r9, [sp]
 801410a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801410c:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 801410e:	47a0      	blx	r4
 8014110:	b019      	add	sp, #100	; 0x64
 8014112:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014116:	2300      	movs	r3, #0
 8014118:	e7c0      	b.n	801409c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801411a:	bf00      	nop
 801411c:	20013500 	.word	0x20013500
 8014120:	20013508 	.word	0x20013508
 8014124:	20013502 	.word	0x20013502
 8014128:	00fff800 	.word	0x00fff800
 801412c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801412e:	e6ee      	b.n	8013f0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 8014130:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014132:	e784      	b.n	801403e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 8014134:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014136:	b153      	cbz	r3, 801414e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 8014138:	441f      	add	r7, r3
 801413a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801413c:	b2bf      	uxth	r7, r7
 801413e:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8014142:	f007 0707 	and.w	r7, r7, #7
 8014146:	781a      	ldrb	r2, [r3, #0]
 8014148:	9328      	str	r3, [sp, #160]	; 0xa0
 801414a:	413a      	asrs	r2, r7
 801414c:	b2d2      	uxtb	r2, r2
 801414e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014150:	445b      	add	r3, fp
 8014152:	930a      	str	r3, [sp, #40]	; 0x28
 8014154:	e711      	b.n	8013f7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 8014156:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014158:	2b00      	cmp	r3, #0
 801415a:	d1d9      	bne.n	8014110 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801415c:	4b05      	ldr	r3, [pc, #20]	; (8014174 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 801415e:	6818      	ldr	r0, [r3, #0]
 8014160:	6803      	ldr	r3, [r0, #0]
 8014162:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014164:	4798      	blx	r3
 8014166:	e7d3      	b.n	8014110 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8014168:	2b00      	cmp	r3, #0
 801416a:	f43f ae83 	beq.w	8013e74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801416e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8014172:	e79e      	b.n	80140b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 8014174:	20013508 	.word	0x20013508

08014178 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8014178:	b538      	push	{r3, r4, r5, lr}
 801417a:	4c15      	ldr	r4, [pc, #84]	; (80141d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801417c:	7823      	ldrb	r3, [r4, #0]
 801417e:	f3bf 8f5b 	dmb	ish
 8014182:	07da      	lsls	r2, r3, #31
 8014184:	4605      	mov	r5, r0
 8014186:	d40b      	bmi.n	80141a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014188:	4620      	mov	r0, r4
 801418a:	f007 fc9a 	bl	801bac2 <__cxa_guard_acquire>
 801418e:	b138      	cbz	r0, 80141a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014190:	4620      	mov	r0, r4
 8014192:	f007 fca2 	bl	801bada <__cxa_guard_release>
 8014196:	4a0f      	ldr	r2, [pc, #60]	; (80141d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8014198:	490f      	ldr	r1, [pc, #60]	; (80141d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801419a:	4810      	ldr	r0, [pc, #64]	; (80141dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801419c:	f007 fc8a 	bl	801bab4 <__aeabi_atexit>
 80141a0:	4c0f      	ldr	r4, [pc, #60]	; (80141e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80141a2:	7823      	ldrb	r3, [r4, #0]
 80141a4:	f3bf 8f5b 	dmb	ish
 80141a8:	07db      	lsls	r3, r3, #31
 80141aa:	d40b      	bmi.n	80141c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80141ac:	4620      	mov	r0, r4
 80141ae:	f007 fc88 	bl	801bac2 <__cxa_guard_acquire>
 80141b2:	b138      	cbz	r0, 80141c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80141b4:	4620      	mov	r0, r4
 80141b6:	f007 fc90 	bl	801bada <__cxa_guard_release>
 80141ba:	4a06      	ldr	r2, [pc, #24]	; (80141d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80141bc:	4909      	ldr	r1, [pc, #36]	; (80141e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80141be:	480a      	ldr	r0, [pc, #40]	; (80141e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80141c0:	f007 fc78 	bl	801bab4 <__aeabi_atexit>
 80141c4:	4b05      	ldr	r3, [pc, #20]	; (80141dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80141c6:	612b      	str	r3, [r5, #16]
 80141c8:	4b07      	ldr	r3, [pc, #28]	; (80141e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80141ca:	616b      	str	r3, [r5, #20]
 80141cc:	bd38      	pop	{r3, r4, r5, pc}
 80141ce:	bf00      	nop
 80141d0:	200135d4 	.word	0x200135d4
 80141d4:	20000000 	.word	0x20000000
 80141d8:	08012369 	.word	0x08012369
 80141dc:	200000c8 	.word	0x200000c8
 80141e0:	200135d8 	.word	0x200135d8
 80141e4:	08012367 	.word	0x08012367
 80141e8:	200000cc 	.word	0x200000cc

080141ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80141ec:	b538      	push	{r3, r4, r5, lr}
 80141ee:	4c15      	ldr	r4, [pc, #84]	; (8014244 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80141f0:	7823      	ldrb	r3, [r4, #0]
 80141f2:	f3bf 8f5b 	dmb	ish
 80141f6:	07da      	lsls	r2, r3, #31
 80141f8:	4605      	mov	r5, r0
 80141fa:	d40b      	bmi.n	8014214 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80141fc:	4620      	mov	r0, r4
 80141fe:	f007 fc60 	bl	801bac2 <__cxa_guard_acquire>
 8014202:	b138      	cbz	r0, 8014214 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8014204:	4620      	mov	r0, r4
 8014206:	f007 fc68 	bl	801bada <__cxa_guard_release>
 801420a:	4a0f      	ldr	r2, [pc, #60]	; (8014248 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801420c:	490f      	ldr	r1, [pc, #60]	; (801424c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801420e:	4810      	ldr	r0, [pc, #64]	; (8014250 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8014210:	f007 fc50 	bl	801bab4 <__aeabi_atexit>
 8014214:	4c0f      	ldr	r4, [pc, #60]	; (8014254 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8014216:	7823      	ldrb	r3, [r4, #0]
 8014218:	f3bf 8f5b 	dmb	ish
 801421c:	07db      	lsls	r3, r3, #31
 801421e:	d40b      	bmi.n	8014238 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8014220:	4620      	mov	r0, r4
 8014222:	f007 fc4e 	bl	801bac2 <__cxa_guard_acquire>
 8014226:	b138      	cbz	r0, 8014238 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8014228:	4620      	mov	r0, r4
 801422a:	f007 fc56 	bl	801bada <__cxa_guard_release>
 801422e:	4a06      	ldr	r2, [pc, #24]	; (8014248 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8014230:	4909      	ldr	r1, [pc, #36]	; (8014258 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8014232:	480a      	ldr	r0, [pc, #40]	; (801425c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8014234:	f007 fc3e 	bl	801bab4 <__aeabi_atexit>
 8014238:	4b05      	ldr	r3, [pc, #20]	; (8014250 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801423a:	60ab      	str	r3, [r5, #8]
 801423c:	4b07      	ldr	r3, [pc, #28]	; (801425c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801423e:	60eb      	str	r3, [r5, #12]
 8014240:	bd38      	pop	{r3, r4, r5, pc}
 8014242:	bf00      	nop
 8014244:	200135ac 	.word	0x200135ac
 8014248:	20000000 	.word	0x20000000
 801424c:	0801236d 	.word	0x0801236d
 8014250:	200000a0 	.word	0x200000a0
 8014254:	200135b0 	.word	0x200135b0
 8014258:	0801236b 	.word	0x0801236b
 801425c:	200000a4 	.word	0x200000a4

08014260 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8014260:	b510      	push	{r4, lr}
 8014262:	4604      	mov	r4, r0
 8014264:	f7ff ff88 	bl	8014178 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8014268:	4620      	mov	r0, r4
 801426a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801426e:	f7ff bfbd 	b.w	80141ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08014274 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8014274:	b538      	push	{r3, r4, r5, lr}
 8014276:	4c15      	ldr	r4, [pc, #84]	; (80142cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8014278:	7823      	ldrb	r3, [r4, #0]
 801427a:	f3bf 8f5b 	dmb	ish
 801427e:	07da      	lsls	r2, r3, #31
 8014280:	4605      	mov	r5, r0
 8014282:	d40b      	bmi.n	801429c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014284:	4620      	mov	r0, r4
 8014286:	f007 fc1c 	bl	801bac2 <__cxa_guard_acquire>
 801428a:	b138      	cbz	r0, 801429c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801428c:	4620      	mov	r0, r4
 801428e:	f007 fc24 	bl	801bada <__cxa_guard_release>
 8014292:	4a0f      	ldr	r2, [pc, #60]	; (80142d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8014294:	490f      	ldr	r1, [pc, #60]	; (80142d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8014296:	4810      	ldr	r0, [pc, #64]	; (80142d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014298:	f007 fc0c 	bl	801bab4 <__aeabi_atexit>
 801429c:	4c0f      	ldr	r4, [pc, #60]	; (80142dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801429e:	7823      	ldrb	r3, [r4, #0]
 80142a0:	f3bf 8f5b 	dmb	ish
 80142a4:	07db      	lsls	r3, r3, #31
 80142a6:	d40b      	bmi.n	80142c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80142a8:	4620      	mov	r0, r4
 80142aa:	f007 fc0a 	bl	801bac2 <__cxa_guard_acquire>
 80142ae:	b138      	cbz	r0, 80142c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80142b0:	4620      	mov	r0, r4
 80142b2:	f007 fc12 	bl	801bada <__cxa_guard_release>
 80142b6:	4a06      	ldr	r2, [pc, #24]	; (80142d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80142b8:	4909      	ldr	r1, [pc, #36]	; (80142e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80142ba:	480a      	ldr	r0, [pc, #40]	; (80142e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80142bc:	f007 fbfa 	bl	801bab4 <__aeabi_atexit>
 80142c0:	4b05      	ldr	r3, [pc, #20]	; (80142d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80142c2:	622b      	str	r3, [r5, #32]
 80142c4:	4b07      	ldr	r3, [pc, #28]	; (80142e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80142c6:	626b      	str	r3, [r5, #36]	; 0x24
 80142c8:	bd38      	pop	{r3, r4, r5, pc}
 80142ca:	bf00      	nop
 80142cc:	200135dc 	.word	0x200135dc
 80142d0:	20000000 	.word	0x20000000
 80142d4:	08012361 	.word	0x08012361
 80142d8:	200000d0 	.word	0x200000d0
 80142dc:	200135e0 	.word	0x200135e0
 80142e0:	0801235f 	.word	0x0801235f
 80142e4:	200000d4 	.word	0x200000d4

080142e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80142e8:	b538      	push	{r3, r4, r5, lr}
 80142ea:	4c15      	ldr	r4, [pc, #84]	; (8014340 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80142ec:	7823      	ldrb	r3, [r4, #0]
 80142ee:	f3bf 8f5b 	dmb	ish
 80142f2:	07da      	lsls	r2, r3, #31
 80142f4:	4605      	mov	r5, r0
 80142f6:	d40b      	bmi.n	8014310 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80142f8:	4620      	mov	r0, r4
 80142fa:	f007 fbe2 	bl	801bac2 <__cxa_guard_acquire>
 80142fe:	b138      	cbz	r0, 8014310 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8014300:	4620      	mov	r0, r4
 8014302:	f007 fbea 	bl	801bada <__cxa_guard_release>
 8014306:	4a0f      	ldr	r2, [pc, #60]	; (8014344 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014308:	490f      	ldr	r1, [pc, #60]	; (8014348 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801430a:	4810      	ldr	r0, [pc, #64]	; (801434c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801430c:	f007 fbd2 	bl	801bab4 <__aeabi_atexit>
 8014310:	4c0f      	ldr	r4, [pc, #60]	; (8014350 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8014312:	7823      	ldrb	r3, [r4, #0]
 8014314:	f3bf 8f5b 	dmb	ish
 8014318:	07db      	lsls	r3, r3, #31
 801431a:	d40b      	bmi.n	8014334 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801431c:	4620      	mov	r0, r4
 801431e:	f007 fbd0 	bl	801bac2 <__cxa_guard_acquire>
 8014322:	b138      	cbz	r0, 8014334 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8014324:	4620      	mov	r0, r4
 8014326:	f007 fbd8 	bl	801bada <__cxa_guard_release>
 801432a:	4a06      	ldr	r2, [pc, #24]	; (8014344 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801432c:	4909      	ldr	r1, [pc, #36]	; (8014354 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801432e:	480a      	ldr	r0, [pc, #40]	; (8014358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014330:	f007 fbc0 	bl	801bab4 <__aeabi_atexit>
 8014334:	4b05      	ldr	r3, [pc, #20]	; (801434c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8014336:	61ab      	str	r3, [r5, #24]
 8014338:	4b07      	ldr	r3, [pc, #28]	; (8014358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801433a:	61eb      	str	r3, [r5, #28]
 801433c:	bd38      	pop	{r3, r4, r5, pc}
 801433e:	bf00      	nop
 8014340:	200135b4 	.word	0x200135b4
 8014344:	20000000 	.word	0x20000000
 8014348:	08012365 	.word	0x08012365
 801434c:	200000a8 	.word	0x200000a8
 8014350:	200135b8 	.word	0x200135b8
 8014354:	08012363 	.word	0x08012363
 8014358:	200000ac 	.word	0x200000ac

0801435c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801435c:	b510      	push	{r4, lr}
 801435e:	4604      	mov	r4, r0
 8014360:	f7ff ff88 	bl	8014274 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8014364:	4620      	mov	r0, r4
 8014366:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801436a:	f7ff bfbd 	b.w	80142e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08014370 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8014370:	b538      	push	{r3, r4, r5, lr}
 8014372:	4c15      	ldr	r4, [pc, #84]	; (80143c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8014374:	7823      	ldrb	r3, [r4, #0]
 8014376:	f3bf 8f5b 	dmb	ish
 801437a:	07da      	lsls	r2, r3, #31
 801437c:	4605      	mov	r5, r0
 801437e:	d40b      	bmi.n	8014398 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014380:	4620      	mov	r0, r4
 8014382:	f007 fb9e 	bl	801bac2 <__cxa_guard_acquire>
 8014386:	b138      	cbz	r0, 8014398 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014388:	4620      	mov	r0, r4
 801438a:	f007 fba6 	bl	801bada <__cxa_guard_release>
 801438e:	4a0f      	ldr	r2, [pc, #60]	; (80143cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8014390:	490f      	ldr	r1, [pc, #60]	; (80143d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8014392:	4810      	ldr	r0, [pc, #64]	; (80143d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8014394:	f007 fb8e 	bl	801bab4 <__aeabi_atexit>
 8014398:	4c0f      	ldr	r4, [pc, #60]	; (80143d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801439a:	7823      	ldrb	r3, [r4, #0]
 801439c:	f3bf 8f5b 	dmb	ish
 80143a0:	07db      	lsls	r3, r3, #31
 80143a2:	d40b      	bmi.n	80143bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80143a4:	4620      	mov	r0, r4
 80143a6:	f007 fb8c 	bl	801bac2 <__cxa_guard_acquire>
 80143aa:	b138      	cbz	r0, 80143bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80143ac:	4620      	mov	r0, r4
 80143ae:	f007 fb94 	bl	801bada <__cxa_guard_release>
 80143b2:	4a06      	ldr	r2, [pc, #24]	; (80143cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80143b4:	4909      	ldr	r1, [pc, #36]	; (80143dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80143b6:	480a      	ldr	r0, [pc, #40]	; (80143e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80143b8:	f007 fb7c 	bl	801bab4 <__aeabi_atexit>
 80143bc:	4b05      	ldr	r3, [pc, #20]	; (80143d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80143be:	632b      	str	r3, [r5, #48]	; 0x30
 80143c0:	4b07      	ldr	r3, [pc, #28]	; (80143e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80143c2:	636b      	str	r3, [r5, #52]	; 0x34
 80143c4:	bd38      	pop	{r3, r4, r5, pc}
 80143c6:	bf00      	nop
 80143c8:	200135ec 	.word	0x200135ec
 80143cc:	20000000 	.word	0x20000000
 80143d0:	08012359 	.word	0x08012359
 80143d4:	200000e0 	.word	0x200000e0
 80143d8:	200135f0 	.word	0x200135f0
 80143dc:	08012357 	.word	0x08012357
 80143e0:	200000e4 	.word	0x200000e4

080143e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80143e4:	b538      	push	{r3, r4, r5, lr}
 80143e6:	4c15      	ldr	r4, [pc, #84]	; (801443c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80143e8:	7823      	ldrb	r3, [r4, #0]
 80143ea:	f3bf 8f5b 	dmb	ish
 80143ee:	07da      	lsls	r2, r3, #31
 80143f0:	4605      	mov	r5, r0
 80143f2:	d40b      	bmi.n	801440c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80143f4:	4620      	mov	r0, r4
 80143f6:	f007 fb64 	bl	801bac2 <__cxa_guard_acquire>
 80143fa:	b138      	cbz	r0, 801440c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80143fc:	4620      	mov	r0, r4
 80143fe:	f007 fb6c 	bl	801bada <__cxa_guard_release>
 8014402:	4a0f      	ldr	r2, [pc, #60]	; (8014440 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8014404:	490f      	ldr	r1, [pc, #60]	; (8014444 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8014406:	4810      	ldr	r0, [pc, #64]	; (8014448 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8014408:	f007 fb54 	bl	801bab4 <__aeabi_atexit>
 801440c:	4c0f      	ldr	r4, [pc, #60]	; (801444c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801440e:	7823      	ldrb	r3, [r4, #0]
 8014410:	f3bf 8f5b 	dmb	ish
 8014414:	07db      	lsls	r3, r3, #31
 8014416:	d40b      	bmi.n	8014430 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8014418:	4620      	mov	r0, r4
 801441a:	f007 fb52 	bl	801bac2 <__cxa_guard_acquire>
 801441e:	b138      	cbz	r0, 8014430 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8014420:	4620      	mov	r0, r4
 8014422:	f007 fb5a 	bl	801bada <__cxa_guard_release>
 8014426:	4a06      	ldr	r2, [pc, #24]	; (8014440 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8014428:	4909      	ldr	r1, [pc, #36]	; (8014450 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801442a:	480a      	ldr	r0, [pc, #40]	; (8014454 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801442c:	f007 fb42 	bl	801bab4 <__aeabi_atexit>
 8014430:	4b05      	ldr	r3, [pc, #20]	; (8014448 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8014432:	62ab      	str	r3, [r5, #40]	; 0x28
 8014434:	4b07      	ldr	r3, [pc, #28]	; (8014454 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8014436:	62eb      	str	r3, [r5, #44]	; 0x2c
 8014438:	bd38      	pop	{r3, r4, r5, pc}
 801443a:	bf00      	nop
 801443c:	200135bc 	.word	0x200135bc
 8014440:	20000000 	.word	0x20000000
 8014444:	0801235d 	.word	0x0801235d
 8014448:	200000b0 	.word	0x200000b0
 801444c:	200135c0 	.word	0x200135c0
 8014450:	0801235b 	.word	0x0801235b
 8014454:	200000b4 	.word	0x200000b4

08014458 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8014458:	b510      	push	{r4, lr}
 801445a:	4604      	mov	r4, r0
 801445c:	f7ff ff88 	bl	8014370 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8014460:	4620      	mov	r0, r4
 8014462:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014466:	f7ff bfbd 	b.w	80143e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801446c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801446c:	b538      	push	{r3, r4, r5, lr}
 801446e:	4c15      	ldr	r4, [pc, #84]	; (80144c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8014470:	7823      	ldrb	r3, [r4, #0]
 8014472:	f3bf 8f5b 	dmb	ish
 8014476:	07da      	lsls	r2, r3, #31
 8014478:	4605      	mov	r5, r0
 801447a:	d40b      	bmi.n	8014494 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801447c:	4620      	mov	r0, r4
 801447e:	f007 fb20 	bl	801bac2 <__cxa_guard_acquire>
 8014482:	b138      	cbz	r0, 8014494 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8014484:	4620      	mov	r0, r4
 8014486:	f007 fb28 	bl	801bada <__cxa_guard_release>
 801448a:	4a0f      	ldr	r2, [pc, #60]	; (80144c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801448c:	490f      	ldr	r1, [pc, #60]	; (80144cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801448e:	4810      	ldr	r0, [pc, #64]	; (80144d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8014490:	f007 fb10 	bl	801bab4 <__aeabi_atexit>
 8014494:	4c0f      	ldr	r4, [pc, #60]	; (80144d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8014496:	7823      	ldrb	r3, [r4, #0]
 8014498:	f3bf 8f5b 	dmb	ish
 801449c:	07db      	lsls	r3, r3, #31
 801449e:	d40b      	bmi.n	80144b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80144a0:	4620      	mov	r0, r4
 80144a2:	f007 fb0e 	bl	801bac2 <__cxa_guard_acquire>
 80144a6:	b138      	cbz	r0, 80144b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80144a8:	4620      	mov	r0, r4
 80144aa:	f007 fb16 	bl	801bada <__cxa_guard_release>
 80144ae:	4a06      	ldr	r2, [pc, #24]	; (80144c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80144b0:	4909      	ldr	r1, [pc, #36]	; (80144d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80144b2:	480a      	ldr	r0, [pc, #40]	; (80144dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80144b4:	f007 fafe 	bl	801bab4 <__aeabi_atexit>
 80144b8:	4b05      	ldr	r3, [pc, #20]	; (80144d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80144ba:	652b      	str	r3, [r5, #80]	; 0x50
 80144bc:	4b07      	ldr	r3, [pc, #28]	; (80144dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80144be:	656b      	str	r3, [r5, #84]	; 0x54
 80144c0:	bd38      	pop	{r3, r4, r5, pc}
 80144c2:	bf00      	nop
 80144c4:	200135f4 	.word	0x200135f4
 80144c8:	20000000 	.word	0x20000000
 80144cc:	08012349 	.word	0x08012349
 80144d0:	200000e8 	.word	0x200000e8
 80144d4:	200135f8 	.word	0x200135f8
 80144d8:	08012347 	.word	0x08012347
 80144dc:	200000ec 	.word	0x200000ec

080144e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80144e0:	b538      	push	{r3, r4, r5, lr}
 80144e2:	4c15      	ldr	r4, [pc, #84]	; (8014538 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80144e4:	7823      	ldrb	r3, [r4, #0]
 80144e6:	f3bf 8f5b 	dmb	ish
 80144ea:	07da      	lsls	r2, r3, #31
 80144ec:	4605      	mov	r5, r0
 80144ee:	d40b      	bmi.n	8014508 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80144f0:	4620      	mov	r0, r4
 80144f2:	f007 fae6 	bl	801bac2 <__cxa_guard_acquire>
 80144f6:	b138      	cbz	r0, 8014508 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80144f8:	4620      	mov	r0, r4
 80144fa:	f007 faee 	bl	801bada <__cxa_guard_release>
 80144fe:	4a0f      	ldr	r2, [pc, #60]	; (801453c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8014500:	490f      	ldr	r1, [pc, #60]	; (8014540 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8014502:	4810      	ldr	r0, [pc, #64]	; (8014544 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8014504:	f007 fad6 	bl	801bab4 <__aeabi_atexit>
 8014508:	4c0f      	ldr	r4, [pc, #60]	; (8014548 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801450a:	7823      	ldrb	r3, [r4, #0]
 801450c:	f3bf 8f5b 	dmb	ish
 8014510:	07db      	lsls	r3, r3, #31
 8014512:	d40b      	bmi.n	801452c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8014514:	4620      	mov	r0, r4
 8014516:	f007 fad4 	bl	801bac2 <__cxa_guard_acquire>
 801451a:	b138      	cbz	r0, 801452c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801451c:	4620      	mov	r0, r4
 801451e:	f007 fadc 	bl	801bada <__cxa_guard_release>
 8014522:	4a06      	ldr	r2, [pc, #24]	; (801453c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8014524:	4909      	ldr	r1, [pc, #36]	; (801454c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8014526:	480a      	ldr	r0, [pc, #40]	; (8014550 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8014528:	f007 fac4 	bl	801bab4 <__aeabi_atexit>
 801452c:	4b05      	ldr	r3, [pc, #20]	; (8014544 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801452e:	64ab      	str	r3, [r5, #72]	; 0x48
 8014530:	4b07      	ldr	r3, [pc, #28]	; (8014550 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8014532:	64eb      	str	r3, [r5, #76]	; 0x4c
 8014534:	bd38      	pop	{r3, r4, r5, pc}
 8014536:	bf00      	nop
 8014538:	200135fc 	.word	0x200135fc
 801453c:	20000000 	.word	0x20000000
 8014540:	0801234d 	.word	0x0801234d
 8014544:	200000f0 	.word	0x200000f0
 8014548:	20013600 	.word	0x20013600
 801454c:	0801234b 	.word	0x0801234b
 8014550:	200000f4 	.word	0x200000f4

08014554 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8014554:	b538      	push	{r3, r4, r5, lr}
 8014556:	4c15      	ldr	r4, [pc, #84]	; (80145ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8014558:	7823      	ldrb	r3, [r4, #0]
 801455a:	f3bf 8f5b 	dmb	ish
 801455e:	07da      	lsls	r2, r3, #31
 8014560:	4605      	mov	r5, r0
 8014562:	d40b      	bmi.n	801457c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8014564:	4620      	mov	r0, r4
 8014566:	f007 faac 	bl	801bac2 <__cxa_guard_acquire>
 801456a:	b138      	cbz	r0, 801457c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801456c:	4620      	mov	r0, r4
 801456e:	f007 fab4 	bl	801bada <__cxa_guard_release>
 8014572:	4a0f      	ldr	r2, [pc, #60]	; (80145b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014574:	490f      	ldr	r1, [pc, #60]	; (80145b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8014576:	4810      	ldr	r0, [pc, #64]	; (80145b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8014578:	f007 fa9c 	bl	801bab4 <__aeabi_atexit>
 801457c:	4c0f      	ldr	r4, [pc, #60]	; (80145bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801457e:	7823      	ldrb	r3, [r4, #0]
 8014580:	f3bf 8f5b 	dmb	ish
 8014584:	07db      	lsls	r3, r3, #31
 8014586:	d40b      	bmi.n	80145a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014588:	4620      	mov	r0, r4
 801458a:	f007 fa9a 	bl	801bac2 <__cxa_guard_acquire>
 801458e:	b138      	cbz	r0, 80145a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014590:	4620      	mov	r0, r4
 8014592:	f007 faa2 	bl	801bada <__cxa_guard_release>
 8014596:	4a06      	ldr	r2, [pc, #24]	; (80145b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014598:	4909      	ldr	r1, [pc, #36]	; (80145c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801459a:	480a      	ldr	r0, [pc, #40]	; (80145c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801459c:	f007 fa8a 	bl	801bab4 <__aeabi_atexit>
 80145a0:	4b05      	ldr	r3, [pc, #20]	; (80145b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80145a2:	642b      	str	r3, [r5, #64]	; 0x40
 80145a4:	4b07      	ldr	r3, [pc, #28]	; (80145c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80145a6:	646b      	str	r3, [r5, #68]	; 0x44
 80145a8:	bd38      	pop	{r3, r4, r5, pc}
 80145aa:	bf00      	nop
 80145ac:	200135c4 	.word	0x200135c4
 80145b0:	20000000 	.word	0x20000000
 80145b4:	08012351 	.word	0x08012351
 80145b8:	200000b8 	.word	0x200000b8
 80145bc:	200135c8 	.word	0x200135c8
 80145c0:	0801234f 	.word	0x0801234f
 80145c4:	200000bc 	.word	0x200000bc

080145c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80145c8:	b538      	push	{r3, r4, r5, lr}
 80145ca:	4c15      	ldr	r4, [pc, #84]	; (8014620 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80145cc:	7823      	ldrb	r3, [r4, #0]
 80145ce:	f3bf 8f5b 	dmb	ish
 80145d2:	07da      	lsls	r2, r3, #31
 80145d4:	4605      	mov	r5, r0
 80145d6:	d40b      	bmi.n	80145f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80145d8:	4620      	mov	r0, r4
 80145da:	f007 fa72 	bl	801bac2 <__cxa_guard_acquire>
 80145de:	b138      	cbz	r0, 80145f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80145e0:	4620      	mov	r0, r4
 80145e2:	f007 fa7a 	bl	801bada <__cxa_guard_release>
 80145e6:	4a0f      	ldr	r2, [pc, #60]	; (8014624 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80145e8:	490f      	ldr	r1, [pc, #60]	; (8014628 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80145ea:	4810      	ldr	r0, [pc, #64]	; (801462c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80145ec:	f007 fa62 	bl	801bab4 <__aeabi_atexit>
 80145f0:	4c0f      	ldr	r4, [pc, #60]	; (8014630 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80145f2:	7823      	ldrb	r3, [r4, #0]
 80145f4:	f3bf 8f5b 	dmb	ish
 80145f8:	07db      	lsls	r3, r3, #31
 80145fa:	d40b      	bmi.n	8014614 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80145fc:	4620      	mov	r0, r4
 80145fe:	f007 fa60 	bl	801bac2 <__cxa_guard_acquire>
 8014602:	b138      	cbz	r0, 8014614 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8014604:	4620      	mov	r0, r4
 8014606:	f007 fa68 	bl	801bada <__cxa_guard_release>
 801460a:	4a06      	ldr	r2, [pc, #24]	; (8014624 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801460c:	4909      	ldr	r1, [pc, #36]	; (8014634 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801460e:	480a      	ldr	r0, [pc, #40]	; (8014638 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8014610:	f007 fa50 	bl	801bab4 <__aeabi_atexit>
 8014614:	4b05      	ldr	r3, [pc, #20]	; (801462c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8014616:	63ab      	str	r3, [r5, #56]	; 0x38
 8014618:	4b07      	ldr	r3, [pc, #28]	; (8014638 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801461a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801461c:	bd38      	pop	{r3, r4, r5, pc}
 801461e:	bf00      	nop
 8014620:	200135e4 	.word	0x200135e4
 8014624:	20000000 	.word	0x20000000
 8014628:	08012355 	.word	0x08012355
 801462c:	200000d8 	.word	0x200000d8
 8014630:	200135e8 	.word	0x200135e8
 8014634:	08012353 	.word	0x08012353
 8014638:	200000dc 	.word	0x200000dc

0801463c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801463c:	b510      	push	{r4, lr}
 801463e:	4604      	mov	r4, r0
 8014640:	f7ff ff14 	bl	801446c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8014644:	4620      	mov	r0, r4
 8014646:	f7ff ff85 	bl	8014554 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801464a:	4620      	mov	r0, r4
 801464c:	f7ff ff48 	bl	80144e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8014650:	4620      	mov	r0, r4
 8014652:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014656:	f7ff bfb7 	b.w	80145c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801465c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801465c:	b538      	push	{r3, r4, r5, lr}
 801465e:	4c15      	ldr	r4, [pc, #84]	; (80146b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8014660:	7823      	ldrb	r3, [r4, #0]
 8014662:	f3bf 8f5b 	dmb	ish
 8014666:	07da      	lsls	r2, r3, #31
 8014668:	4605      	mov	r5, r0
 801466a:	d40b      	bmi.n	8014684 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801466c:	4620      	mov	r0, r4
 801466e:	f007 fa28 	bl	801bac2 <__cxa_guard_acquire>
 8014672:	b138      	cbz	r0, 8014684 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8014674:	4620      	mov	r0, r4
 8014676:	f007 fa30 	bl	801bada <__cxa_guard_release>
 801467a:	4a0f      	ldr	r2, [pc, #60]	; (80146b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801467c:	490f      	ldr	r1, [pc, #60]	; (80146bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801467e:	4810      	ldr	r0, [pc, #64]	; (80146c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014680:	f007 fa18 	bl	801bab4 <__aeabi_atexit>
 8014684:	4c0f      	ldr	r4, [pc, #60]	; (80146c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8014686:	7823      	ldrb	r3, [r4, #0]
 8014688:	f3bf 8f5b 	dmb	ish
 801468c:	07db      	lsls	r3, r3, #31
 801468e:	d40b      	bmi.n	80146a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014690:	4620      	mov	r0, r4
 8014692:	f007 fa16 	bl	801bac2 <__cxa_guard_acquire>
 8014696:	b138      	cbz	r0, 80146a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014698:	4620      	mov	r0, r4
 801469a:	f007 fa1e 	bl	801bada <__cxa_guard_release>
 801469e:	4a06      	ldr	r2, [pc, #24]	; (80146b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80146a0:	4909      	ldr	r1, [pc, #36]	; (80146c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80146a2:	480a      	ldr	r0, [pc, #40]	; (80146cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80146a4:	f007 fa06 	bl	801bab4 <__aeabi_atexit>
 80146a8:	4b05      	ldr	r3, [pc, #20]	; (80146c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80146aa:	662b      	str	r3, [r5, #96]	; 0x60
 80146ac:	4b07      	ldr	r3, [pc, #28]	; (80146cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80146ae:	666b      	str	r3, [r5, #100]	; 0x64
 80146b0:	bd38      	pop	{r3, r4, r5, pc}
 80146b2:	bf00      	nop
 80146b4:	200135cc 	.word	0x200135cc
 80146b8:	20000000 	.word	0x20000000
 80146bc:	08012341 	.word	0x08012341
 80146c0:	200000c0 	.word	0x200000c0
 80146c4:	200135d0 	.word	0x200135d0
 80146c8:	0801233f 	.word	0x0801233f
 80146cc:	200000c4 	.word	0x200000c4

080146d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80146d0:	b538      	push	{r3, r4, r5, lr}
 80146d2:	4c15      	ldr	r4, [pc, #84]	; (8014728 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80146d4:	7823      	ldrb	r3, [r4, #0]
 80146d6:	f3bf 8f5b 	dmb	ish
 80146da:	07da      	lsls	r2, r3, #31
 80146dc:	4605      	mov	r5, r0
 80146de:	d40b      	bmi.n	80146f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80146e0:	4620      	mov	r0, r4
 80146e2:	f007 f9ee 	bl	801bac2 <__cxa_guard_acquire>
 80146e6:	b138      	cbz	r0, 80146f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80146e8:	4620      	mov	r0, r4
 80146ea:	f007 f9f6 	bl	801bada <__cxa_guard_release>
 80146ee:	4a0f      	ldr	r2, [pc, #60]	; (801472c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80146f0:	490f      	ldr	r1, [pc, #60]	; (8014730 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80146f2:	4810      	ldr	r0, [pc, #64]	; (8014734 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80146f4:	f007 f9de 	bl	801bab4 <__aeabi_atexit>
 80146f8:	4c0f      	ldr	r4, [pc, #60]	; (8014738 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80146fa:	7823      	ldrb	r3, [r4, #0]
 80146fc:	f3bf 8f5b 	dmb	ish
 8014700:	07db      	lsls	r3, r3, #31
 8014702:	d40b      	bmi.n	801471c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8014704:	4620      	mov	r0, r4
 8014706:	f007 f9dc 	bl	801bac2 <__cxa_guard_acquire>
 801470a:	b138      	cbz	r0, 801471c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801470c:	4620      	mov	r0, r4
 801470e:	f007 f9e4 	bl	801bada <__cxa_guard_release>
 8014712:	4a06      	ldr	r2, [pc, #24]	; (801472c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8014714:	4909      	ldr	r1, [pc, #36]	; (801473c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8014716:	480a      	ldr	r0, [pc, #40]	; (8014740 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8014718:	f007 f9cc 	bl	801bab4 <__aeabi_atexit>
 801471c:	4b05      	ldr	r3, [pc, #20]	; (8014734 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801471e:	65ab      	str	r3, [r5, #88]	; 0x58
 8014720:	4b07      	ldr	r3, [pc, #28]	; (8014740 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8014722:	65eb      	str	r3, [r5, #92]	; 0x5c
 8014724:	bd38      	pop	{r3, r4, r5, pc}
 8014726:	bf00      	nop
 8014728:	200135a4 	.word	0x200135a4
 801472c:	20000000 	.word	0x20000000
 8014730:	08012345 	.word	0x08012345
 8014734:	20000098 	.word	0x20000098
 8014738:	200135a8 	.word	0x200135a8
 801473c:	08012343 	.word	0x08012343
 8014740:	2000009c 	.word	0x2000009c

08014744 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8014744:	b510      	push	{r4, lr}
 8014746:	4604      	mov	r4, r0
 8014748:	f7ff ff88 	bl	801465c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801474c:	4620      	mov	r0, r4
 801474e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014752:	f7ff bfbd 	b.w	80146d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08014758 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8014758:	b538      	push	{r3, r4, r5, lr}
 801475a:	4c15      	ldr	r4, [pc, #84]	; (80147b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801475c:	7823      	ldrb	r3, [r4, #0]
 801475e:	f3bf 8f5b 	dmb	ish
 8014762:	07da      	lsls	r2, r3, #31
 8014764:	4605      	mov	r5, r0
 8014766:	d40b      	bmi.n	8014780 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014768:	4620      	mov	r0, r4
 801476a:	f007 f9aa 	bl	801bac2 <__cxa_guard_acquire>
 801476e:	b138      	cbz	r0, 8014780 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014770:	4620      	mov	r0, r4
 8014772:	f007 f9b2 	bl	801bada <__cxa_guard_release>
 8014776:	4a0f      	ldr	r2, [pc, #60]	; (80147b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014778:	490f      	ldr	r1, [pc, #60]	; (80147b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801477a:	4810      	ldr	r0, [pc, #64]	; (80147bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801477c:	f007 f99a 	bl	801bab4 <__aeabi_atexit>
 8014780:	4c0f      	ldr	r4, [pc, #60]	; (80147c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8014782:	7823      	ldrb	r3, [r4, #0]
 8014784:	f3bf 8f5b 	dmb	ish
 8014788:	07db      	lsls	r3, r3, #31
 801478a:	d40b      	bmi.n	80147a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801478c:	4620      	mov	r0, r4
 801478e:	f007 f998 	bl	801bac2 <__cxa_guard_acquire>
 8014792:	b138      	cbz	r0, 80147a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014794:	4620      	mov	r0, r4
 8014796:	f007 f9a0 	bl	801bada <__cxa_guard_release>
 801479a:	4a06      	ldr	r2, [pc, #24]	; (80147b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801479c:	4909      	ldr	r1, [pc, #36]	; (80147c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801479e:	480a      	ldr	r0, [pc, #40]	; (80147c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80147a0:	f007 f988 	bl	801bab4 <__aeabi_atexit>
 80147a4:	4b05      	ldr	r3, [pc, #20]	; (80147bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80147a6:	672b      	str	r3, [r5, #112]	; 0x70
 80147a8:	4b07      	ldr	r3, [pc, #28]	; (80147c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80147aa:	676b      	str	r3, [r5, #116]	; 0x74
 80147ac:	bd38      	pop	{r3, r4, r5, pc}
 80147ae:	bf00      	nop
 80147b0:	2001359c 	.word	0x2001359c
 80147b4:	20000000 	.word	0x20000000
 80147b8:	08012339 	.word	0x08012339
 80147bc:	20000090 	.word	0x20000090
 80147c0:	200135a0 	.word	0x200135a0
 80147c4:	08012337 	.word	0x08012337
 80147c8:	20000094 	.word	0x20000094

080147cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80147cc:	b538      	push	{r3, r4, r5, lr}
 80147ce:	4c15      	ldr	r4, [pc, #84]	; (8014824 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80147d0:	7823      	ldrb	r3, [r4, #0]
 80147d2:	f3bf 8f5b 	dmb	ish
 80147d6:	07da      	lsls	r2, r3, #31
 80147d8:	4605      	mov	r5, r0
 80147da:	d40b      	bmi.n	80147f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80147dc:	4620      	mov	r0, r4
 80147de:	f007 f970 	bl	801bac2 <__cxa_guard_acquire>
 80147e2:	b138      	cbz	r0, 80147f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80147e4:	4620      	mov	r0, r4
 80147e6:	f007 f978 	bl	801bada <__cxa_guard_release>
 80147ea:	4a0f      	ldr	r2, [pc, #60]	; (8014828 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80147ec:	490f      	ldr	r1, [pc, #60]	; (801482c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80147ee:	4810      	ldr	r0, [pc, #64]	; (8014830 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80147f0:	f007 f960 	bl	801bab4 <__aeabi_atexit>
 80147f4:	4c0f      	ldr	r4, [pc, #60]	; (8014834 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80147f6:	7823      	ldrb	r3, [r4, #0]
 80147f8:	f3bf 8f5b 	dmb	ish
 80147fc:	07db      	lsls	r3, r3, #31
 80147fe:	d40b      	bmi.n	8014818 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014800:	4620      	mov	r0, r4
 8014802:	f007 f95e 	bl	801bac2 <__cxa_guard_acquire>
 8014806:	b138      	cbz	r0, 8014818 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014808:	4620      	mov	r0, r4
 801480a:	f007 f966 	bl	801bada <__cxa_guard_release>
 801480e:	4a06      	ldr	r2, [pc, #24]	; (8014828 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014810:	4909      	ldr	r1, [pc, #36]	; (8014838 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8014812:	480a      	ldr	r0, [pc, #40]	; (801483c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8014814:	f007 f94e 	bl	801bab4 <__aeabi_atexit>
 8014818:	4b05      	ldr	r3, [pc, #20]	; (8014830 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801481a:	66ab      	str	r3, [r5, #104]	; 0x68
 801481c:	4b07      	ldr	r3, [pc, #28]	; (801483c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801481e:	66eb      	str	r3, [r5, #108]	; 0x6c
 8014820:	bd38      	pop	{r3, r4, r5, pc}
 8014822:	bf00      	nop
 8014824:	20013594 	.word	0x20013594
 8014828:	20000000 	.word	0x20000000
 801482c:	0801233d 	.word	0x0801233d
 8014830:	20000088 	.word	0x20000088
 8014834:	20013598 	.word	0x20013598
 8014838:	0801233b 	.word	0x0801233b
 801483c:	2000008c 	.word	0x2000008c

08014840 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8014840:	b510      	push	{r4, lr}
 8014842:	4604      	mov	r4, r0
 8014844:	f7ff ff88 	bl	8014758 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8014848:	4620      	mov	r0, r4
 801484a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801484e:	f7ff bfbd 	b.w	80147cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08014852 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8014852:	b510      	push	{r4, lr}
 8014854:	4604      	mov	r4, r0
 8014856:	f7ff fff3 	bl	8014840 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801485a:	4620      	mov	r0, r4
 801485c:	f7ff ff72 	bl	8014744 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8014860:	4620      	mov	r0, r4
 8014862:	f7ff fdf9 	bl	8014458 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8014866:	4620      	mov	r0, r4
 8014868:	f7ff fcfa 	bl	8014260 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801486c:	4620      	mov	r0, r4
 801486e:	f7ff fd75 	bl	801435c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8014872:	4620      	mov	r0, r4
 8014874:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014878:	f7ff bee0 	b.w	801463c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801487c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801487c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014880:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8014884:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8014888:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801488c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8014890:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8014894:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8014898:	8808      	ldrh	r0, [r1, #0]
 801489a:	fb0e 4708 	mla	r7, lr, r8, r4
 801489e:	f1be 0f00 	cmp.w	lr, #0
 80148a2:	eb02 0a07 	add.w	sl, r2, r7
 80148a6:	db37      	blt.n	8014918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80148a8:	45f3      	cmp	fp, lr
 80148aa:	dd35      	ble.n	8014918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80148ac:	2c00      	cmp	r4, #0
 80148ae:	db31      	blt.n	8014914 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80148b0:	45a0      	cmp	r8, r4
 80148b2:	dd2f      	ble.n	8014914 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80148b4:	5dd2      	ldrb	r2, [r2, r7]
 80148b6:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80148ba:	1c62      	adds	r2, r4, #1
 80148bc:	d42f      	bmi.n	801491e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80148be:	4590      	cmp	r8, r2
 80148c0:	dd2d      	ble.n	801491e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80148c2:	b366      	cbz	r6, 801491e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80148c4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80148c8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80148cc:	f11e 0e01 	adds.w	lr, lr, #1
 80148d0:	d429      	bmi.n	8014926 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80148d2:	45f3      	cmp	fp, lr
 80148d4:	dd27      	ble.n	8014926 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80148d6:	f1bc 0f00 	cmp.w	ip, #0
 80148da:	f000 80a1 	beq.w	8014a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 80148de:	2c00      	cmp	r4, #0
 80148e0:	db1f      	blt.n	8014922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80148e2:	45a0      	cmp	r8, r4
 80148e4:	dd1d      	ble.n	8014922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80148e6:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80148ea:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80148ee:	3401      	adds	r4, #1
 80148f0:	d41c      	bmi.n	801492c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80148f2:	45a0      	cmp	r8, r4
 80148f4:	dd1a      	ble.n	801492c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80148f6:	b1de      	cbz	r6, 8014930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80148f8:	44d0      	add	r8, sl
 80148fa:	f898 2001 	ldrb.w	r2, [r8, #1]
 80148fe:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8014902:	2e0f      	cmp	r6, #15
 8014904:	d915      	bls.n	8014932 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8014906:	4b49      	ldr	r3, [pc, #292]	; (8014a2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8014908:	4a49      	ldr	r2, [pc, #292]	; (8014a30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 801490a:	484a      	ldr	r0, [pc, #296]	; (8014a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 801490c:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8014910:	f007 f904 	bl	801bb1c <__assert_func>
 8014914:	4681      	mov	r9, r0
 8014916:	e7d0      	b.n	80148ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8014918:	4607      	mov	r7, r0
 801491a:	4681      	mov	r9, r0
 801491c:	e7d6      	b.n	80148cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801491e:	4607      	mov	r7, r0
 8014920:	e7d4      	b.n	80148cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8014922:	4686      	mov	lr, r0
 8014924:	e7e3      	b.n	80148ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8014926:	4603      	mov	r3, r0
 8014928:	4686      	mov	lr, r0
 801492a:	e7ea      	b.n	8014902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801492c:	4603      	mov	r3, r0
 801492e:	e7e8      	b.n	8014902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8014930:	4603      	mov	r3, r0
 8014932:	f1bc 0f0f 	cmp.w	ip, #15
 8014936:	d8e6      	bhi.n	8014906 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014938:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801493c:	fb16 f80c 	smulbb	r8, r6, ip
 8014940:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014944:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014948:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801494c:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8014950:	ea44 0909 	orr.w	r9, r4, r9
 8014954:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8014958:	f1cc 0410 	rsb	r4, ip, #16
 801495c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014960:	1ba4      	subs	r4, r4, r6
 8014962:	041a      	lsls	r2, r3, #16
 8014964:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8014968:	ea4a 0707 	orr.w	r7, sl, r7
 801496c:	4377      	muls	r7, r6
 801496e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014972:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8014976:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801497a:	fb04 7409 	mla	r4, r4, r9, r7
 801497e:	4313      	orrs	r3, r2
 8014980:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8014984:	fb08 4303 	mla	r3, r8, r3, r4
 8014988:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801498c:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8014990:	4322      	orrs	r2, r4
 8014992:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8014996:	fb0c 3202 	mla	r2, ip, r2, r3
 801499a:	0d53      	lsrs	r3, r2, #21
 801499c:	0952      	lsrs	r2, r2, #5
 801499e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80149a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80149a6:	431a      	orrs	r2, r3
 80149a8:	b293      	uxth	r3, r2
 80149aa:	b2af      	uxth	r7, r5
 80149ac:	1202      	asrs	r2, r0, #8
 80149ae:	43ed      	mvns	r5, r5
 80149b0:	b2ed      	uxtb	r5, r5
 80149b2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80149b6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80149ba:	fb12 f205 	smulbb	r2, r2, r5
 80149be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80149c2:	fb0c 2c07 	mla	ip, ip, r7, r2
 80149c6:	00dc      	lsls	r4, r3, #3
 80149c8:	10da      	asrs	r2, r3, #3
 80149ca:	10c6      	asrs	r6, r0, #3
 80149cc:	00c3      	lsls	r3, r0, #3
 80149ce:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80149d2:	b2db      	uxtb	r3, r3
 80149d4:	fb16 f605 	smulbb	r6, r6, r5
 80149d8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80149dc:	b2e4      	uxtb	r4, r4
 80149de:	fb13 f305 	smulbb	r3, r3, r5
 80149e2:	fa1f fc8c 	uxth.w	ip, ip
 80149e6:	fb02 6207 	mla	r2, r2, r7, r6
 80149ea:	fb04 3307 	mla	r3, r4, r7, r3
 80149ee:	b296      	uxth	r6, r2
 80149f0:	b29a      	uxth	r2, r3
 80149f2:	f10c 0301 	add.w	r3, ip, #1
 80149f6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80149fa:	1c53      	adds	r3, r2, #1
 80149fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014a00:	1c72      	adds	r2, r6, #1
 8014a02:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8014a06:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014a0a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014a0e:	0952      	lsrs	r2, r2, #5
 8014a10:	ea43 030c 	orr.w	r3, r3, ip
 8014a14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014a18:	4313      	orrs	r3, r2
 8014a1a:	800b      	strh	r3, [r1, #0]
 8014a1c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014a20:	2e0f      	cmp	r6, #15
 8014a22:	f63f af70 	bhi.w	8014906 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014a26:	4603      	mov	r3, r0
 8014a28:	4686      	mov	lr, r0
 8014a2a:	e785      	b.n	8014938 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8014a2c:	0802062e 	.word	0x0802062e
 8014a30:	08020ca7 	.word	0x08020ca7
 8014a34:	080206b2 	.word	0x080206b2

08014a38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014a38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a3c:	ed2d 8b08 	vpush	{d8-d11}
 8014a40:	b099      	sub	sp, #100	; 0x64
 8014a42:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8014a46:	9215      	str	r2, [sp, #84]	; 0x54
 8014a48:	9309      	str	r3, [sp, #36]	; 0x24
 8014a4a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8014a4c:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8014a50:	930d      	str	r3, [sp, #52]	; 0x34
 8014a52:	910c      	str	r1, [sp, #48]	; 0x30
 8014a54:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8014a58:	9016      	str	r0, [sp, #88]	; 0x58
 8014a5a:	6850      	ldr	r0, [r2, #4]
 8014a5c:	6812      	ldr	r2, [r2, #0]
 8014a5e:	fb00 1303 	mla	r3, r0, r3, r1
 8014a62:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8014a66:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014a68:	681b      	ldr	r3, [r3, #0]
 8014a6a:	930b      	str	r3, [sp, #44]	; 0x2c
 8014a6c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014a6e:	685e      	ldr	r6, [r3, #4]
 8014a70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014a72:	43db      	mvns	r3, r3
 8014a74:	b2db      	uxtb	r3, r3
 8014a76:	eeb0 aa40 	vmov.f32	s20, s0
 8014a7a:	eef0 9a60 	vmov.f32	s19, s1
 8014a7e:	eeb0 9a41 	vmov.f32	s18, s2
 8014a82:	eeb0 8a62 	vmov.f32	s16, s5
 8014a86:	eef0 8a43 	vmov.f32	s17, s6
 8014a8a:	eef0 ba44 	vmov.f32	s23, s8
 8014a8e:	eeb0 ba64 	vmov.f32	s22, s9
 8014a92:	eef0 aa45 	vmov.f32	s21, s10
 8014a96:	3604      	adds	r6, #4
 8014a98:	930a      	str	r3, [sp, #40]	; 0x28
 8014a9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014a9c:	2b00      	cmp	r3, #0
 8014a9e:	dc03      	bgt.n	8014aa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014aa0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014aa2:	2b00      	cmp	r3, #0
 8014aa4:	f340 8225 	ble.w	8014ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8014aa8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014aaa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014aae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014ab2:	1e48      	subs	r0, r1, #1
 8014ab4:	1e57      	subs	r7, r2, #1
 8014ab6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014ab8:	2b00      	cmp	r3, #0
 8014aba:	f340 80e3 	ble.w	8014c84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 8014abe:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8014ac2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8014ac6:	d406      	bmi.n	8014ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014ac8:	4584      	cmp	ip, r0
 8014aca:	da04      	bge.n	8014ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014acc:	2b00      	cmp	r3, #0
 8014ace:	db02      	blt.n	8014ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014ad0:	42bb      	cmp	r3, r7
 8014ad2:	f2c0 80d8 	blt.w	8014c86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8014ad6:	f11c 0c01 	adds.w	ip, ip, #1
 8014ada:	f100 80c9 	bmi.w	8014c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014ade:	4561      	cmp	r1, ip
 8014ae0:	f2c0 80c6 	blt.w	8014c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014ae4:	3301      	adds	r3, #1
 8014ae6:	f100 80c3 	bmi.w	8014c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014aea:	429a      	cmp	r2, r3
 8014aec:	f2c0 80c0 	blt.w	8014c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014af0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8014af4:	4647      	mov	r7, r8
 8014af6:	f1bb 0f00 	cmp.w	fp, #0
 8014afa:	f340 80e3 	ble.w	8014cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014afe:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014b00:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014b02:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8014b06:	689b      	ldr	r3, [r3, #8]
 8014b08:	ea5f 422a 	movs.w	r2, sl, asr #16
 8014b0c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8014b10:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8014b14:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8014b18:	f100 8121 	bmi.w	8014d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014b1c:	f103 39ff 	add.w	r9, r3, #4294967295
 8014b20:	454a      	cmp	r2, r9
 8014b22:	f280 811c 	bge.w	8014d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014b26:	f1bc 0f00 	cmp.w	ip, #0
 8014b2a:	f2c0 8118 	blt.w	8014d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014b2e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8014b32:	45cc      	cmp	ip, r9
 8014b34:	f280 8113 	bge.w	8014d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014b38:	b21b      	sxth	r3, r3
 8014b3a:	fb0c 2203 	mla	r2, ip, r3, r2
 8014b3e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014b40:	eb04 0902 	add.w	r9, r4, r2
 8014b44:	5ca2      	ldrb	r2, [r4, r2]
 8014b46:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8014b4a:	2800      	cmp	r0, #0
 8014b4c:	f000 80fe 	beq.w	8014d4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8014b50:	f899 2001 	ldrb.w	r2, [r9, #1]
 8014b54:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014b58:	9211      	str	r2, [sp, #68]	; 0x44
 8014b5a:	b151      	cbz	r1, 8014b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014b5c:	eb09 0203 	add.w	r2, r9, r3
 8014b60:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014b64:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014b68:	930f      	str	r3, [sp, #60]	; 0x3c
 8014b6a:	7853      	ldrb	r3, [r2, #1]
 8014b6c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014b70:	9312      	str	r3, [sp, #72]	; 0x48
 8014b72:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014b74:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014b76:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014b7a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014b7e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014b82:	ea4c 0c03 	orr.w	ip, ip, r3
 8014b86:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014b88:	041b      	lsls	r3, r3, #16
 8014b8a:	fb10 f201 	smulbb	r2, r0, r1
 8014b8e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8014b92:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014b96:	10d2      	asrs	r2, r2, #3
 8014b98:	4323      	orrs	r3, r4
 8014b9a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8014b9e:	4353      	muls	r3, r2
 8014ba0:	fb09 330c 	mla	r3, r9, ip, r3
 8014ba4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014ba8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014bac:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014bb0:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014bb4:	f1c1 0c10 	rsb	ip, r1, #16
 8014bb8:	ebac 0c00 	sub.w	ip, ip, r0
 8014bbc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014bc0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014bc4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014bc6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014bc8:	0418      	lsls	r0, r3, #16
 8014bca:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014bce:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014bd2:	4318      	orrs	r0, r3
 8014bd4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014bd8:	fb02 c200 	mla	r2, r2, r0, ip
 8014bdc:	0d53      	lsrs	r3, r2, #21
 8014bde:	0952      	lsrs	r2, r2, #5
 8014be0:	8838      	ldrh	r0, [r7, #0]
 8014be2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014be6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014bea:	431a      	orrs	r2, r3
 8014bec:	b292      	uxth	r2, r2
 8014bee:	1201      	asrs	r1, r0, #8
 8014bf0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8014bf4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8014bf8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014bfc:	fb11 f104 	smulbb	r1, r1, r4
 8014c00:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8014c04:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014c08:	00c0      	lsls	r0, r0, #3
 8014c0a:	fb0c 1c03 	mla	ip, ip, r3, r1
 8014c0e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014c12:	10d1      	asrs	r1, r2, #3
 8014c14:	b2c0      	uxtb	r0, r0
 8014c16:	00d2      	lsls	r2, r2, #3
 8014c18:	b2d2      	uxtb	r2, r2
 8014c1a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014c1e:	fb1e fe04 	smulbb	lr, lr, r4
 8014c22:	fb10 f004 	smulbb	r0, r0, r4
 8014c26:	fa1f fc8c 	uxth.w	ip, ip
 8014c2a:	fb01 e103 	mla	r1, r1, r3, lr
 8014c2e:	fb02 0303 	mla	r3, r2, r3, r0
 8014c32:	b29a      	uxth	r2, r3
 8014c34:	f10c 0301 	add.w	r3, ip, #1
 8014c38:	b289      	uxth	r1, r1
 8014c3a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8014c3e:	1c53      	adds	r3, r2, #1
 8014c40:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014c44:	1c4a      	adds	r2, r1, #1
 8014c46:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014c4a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014c4e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014c52:	0949      	lsrs	r1, r1, #5
 8014c54:	ea43 030c 	orr.w	r3, r3, ip
 8014c58:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014c5c:	430b      	orrs	r3, r1
 8014c5e:	803b      	strh	r3, [r7, #0]
 8014c60:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014c62:	449a      	add	sl, r3
 8014c64:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014c66:	3702      	adds	r7, #2
 8014c68:	441d      	add	r5, r3
 8014c6a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014c6e:	e742      	b.n	8014af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8014c70:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014c72:	449a      	add	sl, r3
 8014c74:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014c76:	441d      	add	r5, r3
 8014c78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c7a:	3b01      	subs	r3, #1
 8014c7c:	9309      	str	r3, [sp, #36]	; 0x24
 8014c7e:	f108 0802 	add.w	r8, r8, #2
 8014c82:	e718      	b.n	8014ab6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014c84:	d023      	beq.n	8014cce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8014c86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c88:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8014c8a:	3b01      	subs	r3, #1
 8014c8c:	fb00 a003 	mla	r0, r0, r3, sl
 8014c90:	1400      	asrs	r0, r0, #16
 8014c92:	f53f af2d 	bmi.w	8014af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014c96:	3901      	subs	r1, #1
 8014c98:	4288      	cmp	r0, r1
 8014c9a:	f6bf af29 	bge.w	8014af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014c9e:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8014ca0:	fb01 5303 	mla	r3, r1, r3, r5
 8014ca4:	141b      	asrs	r3, r3, #16
 8014ca6:	f53f af23 	bmi.w	8014af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014caa:	3a01      	subs	r2, #1
 8014cac:	4293      	cmp	r3, r2
 8014cae:	f6bf af1f 	bge.w	8014af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014cb2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8014cb6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8014cba:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8014cbe:	f1be 0f00 	cmp.w	lr, #0
 8014cc2:	dc6c      	bgt.n	8014d9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8014cc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014cc6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8014cca:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8014cce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014cd0:	2b00      	cmp	r3, #0
 8014cd2:	f340 810e 	ble.w	8014ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8014cd6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014cda:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014cde:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014ce2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014ce4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014ce8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014cec:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014cf0:	eef0 6a48 	vmov.f32	s13, s16
 8014cf4:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014cf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014cfc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014d00:	ee16 aa90 	vmov	sl, s13
 8014d04:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014d08:	eef0 6a68 	vmov.f32	s13, s17
 8014d0c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014d10:	ee18 2a10 	vmov	r2, s16
 8014d14:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014d18:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d1c:	ee18 2a90 	vmov	r2, s17
 8014d20:	932d      	str	r3, [sp, #180]	; 0xb4
 8014d22:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014d24:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d28:	932e      	str	r3, [sp, #184]	; 0xb8
 8014d2a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014d2c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8014d2e:	3b01      	subs	r3, #1
 8014d30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d34:	930c      	str	r3, [sp, #48]	; 0x30
 8014d36:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014d38:	bf08      	it	eq
 8014d3a:	4613      	moveq	r3, r2
 8014d3c:	ee16 5a90 	vmov	r5, s13
 8014d40:	9309      	str	r3, [sp, #36]	; 0x24
 8014d42:	eef0 8a67 	vmov.f32	s17, s15
 8014d46:	eeb0 8a47 	vmov.f32	s16, s14
 8014d4a:	e6a6      	b.n	8014a9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8014d4c:	2900      	cmp	r1, #0
 8014d4e:	f43f af10 	beq.w	8014b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014d52:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014d56:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014d5a:	930f      	str	r3, [sp, #60]	; 0x3c
 8014d5c:	e709      	b.n	8014b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014d5e:	f112 0901 	adds.w	r9, r2, #1
 8014d62:	f53f af7d 	bmi.w	8014c60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014d66:	454b      	cmp	r3, r9
 8014d68:	f6ff af7a 	blt.w	8014c60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014d6c:	f11c 0901 	adds.w	r9, ip, #1
 8014d70:	f53f af76 	bmi.w	8014c60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014d74:	45ce      	cmp	lr, r9
 8014d76:	f6ff af73 	blt.w	8014c60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014d7a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014d7c:	9202      	str	r2, [sp, #8]
 8014d7e:	b21b      	sxth	r3, r3
 8014d80:	fa0f f28e 	sxth.w	r2, lr
 8014d84:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8014d88:	e9cd c003 	strd	ip, r0, [sp, #12]
 8014d8c:	9201      	str	r2, [sp, #4]
 8014d8e:	9300      	str	r3, [sp, #0]
 8014d90:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014d92:	9816      	ldr	r0, [sp, #88]	; 0x58
 8014d94:	4633      	mov	r3, r6
 8014d96:	4639      	mov	r1, r7
 8014d98:	f7ff fd70 	bl	801487c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8014d9c:	e760      	b.n	8014c60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014d9e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014da0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014da2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014da6:	ea4f 422a 	mov.w	r2, sl, asr #16
 8014daa:	1429      	asrs	r1, r5, #16
 8014dac:	fb03 2101 	mla	r1, r3, r1, r2
 8014db0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014db2:	440a      	add	r2, r1
 8014db4:	5c61      	ldrb	r1, [r4, r1]
 8014db6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8014dba:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8014dbe:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8014dc2:	f1bc 0f00 	cmp.w	ip, #0
 8014dc6:	f000 808c 	beq.w	8014ee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8014dca:	7857      	ldrb	r7, [r2, #1]
 8014dcc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8014dd0:	9413      	str	r4, [sp, #76]	; 0x4c
 8014dd2:	b140      	cbz	r0, 8014de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8014dd4:	18d7      	adds	r7, r2, r3
 8014dd6:	5cd3      	ldrb	r3, [r2, r3]
 8014dd8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014ddc:	9310      	str	r3, [sp, #64]	; 0x40
 8014dde:	787b      	ldrb	r3, [r7, #1]
 8014de0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014de4:	9314      	str	r3, [sp, #80]	; 0x50
 8014de6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014de8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014dea:	fb1c f200 	smulbb	r2, ip, r0
 8014dee:	041f      	lsls	r7, r3, #16
 8014df0:	10d2      	asrs	r2, r2, #3
 8014df2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014df6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8014dfa:	431f      	orrs	r7, r3
 8014dfc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8014e00:	9317      	str	r3, [sp, #92]	; 0x5c
 8014e02:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014e04:	041b      	lsls	r3, r3, #16
 8014e06:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8014e0a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014e0e:	ea43 030b 	orr.w	r3, r3, fp
 8014e12:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014e14:	4353      	muls	r3, r2
 8014e16:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014e1a:	fb04 3707 	mla	r7, r4, r7, r3
 8014e1e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014e22:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014e26:	ea43 0b01 	orr.w	fp, r3, r1
 8014e2a:	f1c0 0110 	rsb	r1, r0, #16
 8014e2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014e30:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014e32:	eba1 0c0c 	sub.w	ip, r1, ip
 8014e36:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014e3a:	fb0c 770b 	mla	r7, ip, fp, r7
 8014e3e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014e42:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8014e46:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014e4a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014e4e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014e52:	fb02 770c 	mla	r7, r2, ip, r7
 8014e56:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014e58:	0d79      	lsrs	r1, r7, #21
 8014e5a:	097f      	lsrs	r7, r7, #5
 8014e5c:	8812      	ldrh	r2, [r2, #0]
 8014e5e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014e62:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014e66:	430f      	orrs	r7, r1
 8014e68:	b2bb      	uxth	r3, r7
 8014e6a:	1211      	asrs	r1, r2, #8
 8014e6c:	1218      	asrs	r0, r3, #8
 8014e6e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014e72:	fb11 f104 	smulbb	r1, r1, r4
 8014e76:	10d7      	asrs	r7, r2, #3
 8014e78:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014e7c:	00d2      	lsls	r2, r2, #3
 8014e7e:	fb00 1009 	mla	r0, r0, r9, r1
 8014e82:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014e86:	10d9      	asrs	r1, r3, #3
 8014e88:	b2d2      	uxtb	r2, r2
 8014e8a:	00db      	lsls	r3, r3, #3
 8014e8c:	fb17 f704 	smulbb	r7, r7, r4
 8014e90:	fb12 f204 	smulbb	r2, r2, r4
 8014e94:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014e98:	b2db      	uxtb	r3, r3
 8014e9a:	b280      	uxth	r0, r0
 8014e9c:	fb01 7109 	mla	r1, r1, r9, r7
 8014ea0:	fb03 2309 	mla	r3, r3, r9, r2
 8014ea4:	b29b      	uxth	r3, r3
 8014ea6:	b289      	uxth	r1, r1
 8014ea8:	1c42      	adds	r2, r0, #1
 8014eaa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8014eae:	1c4f      	adds	r7, r1, #1
 8014eb0:	1c5a      	adds	r2, r3, #1
 8014eb2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8014eb6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8014eba:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8014ebe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014ec2:	0949      	lsrs	r1, r1, #5
 8014ec4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014ec6:	4310      	orrs	r0, r2
 8014ec8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014ecc:	4308      	orrs	r0, r1
 8014ece:	f823 0b02 	strh.w	r0, [r3], #2
 8014ed2:	930e      	str	r3, [sp, #56]	; 0x38
 8014ed4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014ed6:	449a      	add	sl, r3
 8014ed8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014eda:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014ede:	441d      	add	r5, r3
 8014ee0:	e6ed      	b.n	8014cbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8014ee2:	2800      	cmp	r0, #0
 8014ee4:	f43f af7f 	beq.w	8014de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8014ee8:	5cd3      	ldrb	r3, [r2, r3]
 8014eea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014eee:	9310      	str	r3, [sp, #64]	; 0x40
 8014ef0:	e779      	b.n	8014de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8014ef2:	b019      	add	sp, #100	; 0x64
 8014ef4:	ecbd 8b08 	vpop	{d8-d11}
 8014ef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014efc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8014efc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014f00:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8014f04:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8014f08:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8014f0c:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8014f10:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8014f14:	8808      	ldrh	r0, [r1, #0]
 8014f16:	fb06 570e 	mla	r7, r6, lr, r5
 8014f1a:	2e00      	cmp	r6, #0
 8014f1c:	eb02 0807 	add.w	r8, r2, r7
 8014f20:	db38      	blt.n	8014f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8014f22:	45b1      	cmp	r9, r6
 8014f24:	dd36      	ble.n	8014f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8014f26:	2d00      	cmp	r5, #0
 8014f28:	db32      	blt.n	8014f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014f2a:	45ae      	cmp	lr, r5
 8014f2c:	dd30      	ble.n	8014f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014f2e:	5dd2      	ldrb	r2, [r2, r7]
 8014f30:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8014f34:	1c6a      	adds	r2, r5, #1
 8014f36:	d430      	bmi.n	8014f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014f38:	4596      	cmp	lr, r2
 8014f3a:	dd2e      	ble.n	8014f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014f3c:	b36c      	cbz	r4, 8014f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014f3e:	f898 2001 	ldrb.w	r2, [r8, #1]
 8014f42:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8014f46:	3601      	adds	r6, #1
 8014f48:	d42b      	bmi.n	8014fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014f4a:	45b1      	cmp	r9, r6
 8014f4c:	dd29      	ble.n	8014fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014f4e:	f1bc 0f00 	cmp.w	ip, #0
 8014f52:	d028      	beq.n	8014fa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8014f54:	2d00      	cmp	r5, #0
 8014f56:	db22      	blt.n	8014f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014f58:	45ae      	cmp	lr, r5
 8014f5a:	dd20      	ble.n	8014f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014f5c:	f818 600e 	ldrb.w	r6, [r8, lr]
 8014f60:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8014f64:	3501      	adds	r5, #1
 8014f66:	d407      	bmi.n	8014f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014f68:	45ae      	cmp	lr, r5
 8014f6a:	dd05      	ble.n	8014f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014f6c:	b134      	cbz	r4, 8014f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8014f6e:	44c6      	add	lr, r8
 8014f70:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8014f74:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014f78:	2c0f      	cmp	r4, #15
 8014f7a:	d802      	bhi.n	8014f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014f7c:	f1bc 0f0f 	cmp.w	ip, #15
 8014f80:	d914      	bls.n	8014fac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8014f82:	4b26      	ldr	r3, [pc, #152]	; (801501c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8014f84:	4a26      	ldr	r2, [pc, #152]	; (8015020 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8014f86:	4827      	ldr	r0, [pc, #156]	; (8015024 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8014f88:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8014f8c:	f006 fdc6 	bl	801bb1c <__assert_func>
 8014f90:	4607      	mov	r7, r0
 8014f92:	e7cf      	b.n	8014f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8014f94:	4602      	mov	r2, r0
 8014f96:	4607      	mov	r7, r0
 8014f98:	e7d5      	b.n	8014f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014f9a:	4602      	mov	r2, r0
 8014f9c:	e7d3      	b.n	8014f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014f9e:	4606      	mov	r6, r0
 8014fa0:	e7e0      	b.n	8014f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8014fa2:	4606      	mov	r6, r0
 8014fa4:	e7e8      	b.n	8014f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014fa6:	2c0f      	cmp	r4, #15
 8014fa8:	d8eb      	bhi.n	8014f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014faa:	4606      	mov	r6, r0
 8014fac:	043d      	lsls	r5, r7, #16
 8014fae:	fb14 f30c 	smulbb	r3, r4, ip
 8014fb2:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8014fb6:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8014fba:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014fbe:	10db      	asrs	r3, r3, #3
 8014fc0:	432f      	orrs	r7, r5
 8014fc2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8014fc6:	f1cc 0510 	rsb	r5, ip, #16
 8014fca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014fce:	1b2d      	subs	r5, r5, r4
 8014fd0:	ea4e 0202 	orr.w	r2, lr, r2
 8014fd4:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8014fd8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8014fdc:	4354      	muls	r4, r2
 8014fde:	fb05 4507 	mla	r5, r5, r7, r4
 8014fe2:	0404      	lsls	r4, r0, #16
 8014fe4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014fe8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014fec:	4320      	orrs	r0, r4
 8014fee:	fb03 5400 	mla	r4, r3, r0, r5
 8014ff2:	0430      	lsls	r0, r6, #16
 8014ff4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014ff8:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8014ffc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8015000:	4330      	orrs	r0, r6
 8015002:	fb03 4000 	mla	r0, r3, r0, r4
 8015006:	0d43      	lsrs	r3, r0, #21
 8015008:	0940      	lsrs	r0, r0, #5
 801500a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801500e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015012:	4318      	orrs	r0, r3
 8015014:	8008      	strh	r0, [r1, #0]
 8015016:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801501a:	bf00      	nop
 801501c:	0802062e 	.word	0x0802062e
 8015020:	08020ca7 	.word	0x08020ca7
 8015024:	080206b2 	.word	0x080206b2

08015028 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801502c:	ed2d 8b0a 	vpush	{d8-d12}
 8015030:	b093      	sub	sp, #76	; 0x4c
 8015032:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8015036:	920f      	str	r2, [sp, #60]	; 0x3c
 8015038:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801503a:	9108      	str	r1, [sp, #32]
 801503c:	9306      	str	r3, [sp, #24]
 801503e:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8015042:	9010      	str	r0, [sp, #64]	; 0x40
 8015044:	6850      	ldr	r0, [r2, #4]
 8015046:	6812      	ldr	r2, [r2, #0]
 8015048:	fb00 1303 	mla	r3, r0, r3, r1
 801504c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8015050:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015052:	681b      	ldr	r3, [r3, #0]
 8015054:	9307      	str	r3, [sp, #28]
 8015056:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015058:	685f      	ldr	r7, [r3, #4]
 801505a:	eeb0 aa40 	vmov.f32	s20, s0
 801505e:	eef0 9a60 	vmov.f32	s19, s1
 8015062:	eeb0 9a41 	vmov.f32	s18, s2
 8015066:	eeb0 8a62 	vmov.f32	s16, s5
 801506a:	eef0 8a43 	vmov.f32	s17, s6
 801506e:	eeb0 ca44 	vmov.f32	s24, s8
 8015072:	eef0 ba64 	vmov.f32	s23, s9
 8015076:	eeb0 ba45 	vmov.f32	s22, s10
 801507a:	3704      	adds	r7, #4
 801507c:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8015080:	9b08      	ldr	r3, [sp, #32]
 8015082:	2b00      	cmp	r3, #0
 8015084:	dc03      	bgt.n	801508e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015086:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015088:	2b00      	cmp	r3, #0
 801508a:	f340 81b2 	ble.w	80153f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801508e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015090:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015094:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015098:	1e48      	subs	r0, r1, #1
 801509a:	f102 3cff 	add.w	ip, r2, #4294967295
 801509e:	9b06      	ldr	r3, [sp, #24]
 80150a0:	2b00      	cmp	r3, #0
 80150a2:	f340 80a9 	ble.w	80151f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 80150a6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80150aa:	ea4f 4326 	mov.w	r3, r6, asr #16
 80150ae:	d406      	bmi.n	80150be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80150b0:	4586      	cmp	lr, r0
 80150b2:	da04      	bge.n	80150be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80150b4:	2b00      	cmp	r3, #0
 80150b6:	db02      	blt.n	80150be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80150b8:	4563      	cmp	r3, ip
 80150ba:	f2c0 809e 	blt.w	80151fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80150be:	f11e 0e01 	adds.w	lr, lr, #1
 80150c2:	f100 808f 	bmi.w	80151e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80150c6:	4571      	cmp	r1, lr
 80150c8:	f2c0 808c 	blt.w	80151e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80150cc:	3301      	adds	r3, #1
 80150ce:	f100 8089 	bmi.w	80151e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80150d2:	429a      	cmp	r2, r3
 80150d4:	f2c0 8086 	blt.w	80151e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80150d8:	f8dd b018 	ldr.w	fp, [sp, #24]
 80150dc:	46c8      	mov	r8, r9
 80150de:	f1bb 0f00 	cmp.w	fp, #0
 80150e2:	f340 80a6 	ble.w	8015232 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 80150e6:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80150e8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80150ea:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80150ee:	689b      	ldr	r3, [r3, #8]
 80150f0:	1422      	asrs	r2, r4, #16
 80150f2:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80150f6:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80150fa:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80150fe:	f100 80e3 	bmi.w	80152c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015102:	f103 3aff 	add.w	sl, r3, #4294967295
 8015106:	4552      	cmp	r2, sl
 8015108:	f280 80de 	bge.w	80152c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801510c:	f1bc 0f00 	cmp.w	ip, #0
 8015110:	f2c0 80da 	blt.w	80152c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015114:	f10e 3aff 	add.w	sl, lr, #4294967295
 8015118:	45d4      	cmp	ip, sl
 801511a:	f280 80d5 	bge.w	80152c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801511e:	b21b      	sxth	r3, r3
 8015120:	fb0c 2203 	mla	r2, ip, r3, r2
 8015124:	9d07      	ldr	r5, [sp, #28]
 8015126:	eb05 0a02 	add.w	sl, r5, r2
 801512a:	5caa      	ldrb	r2, [r5, r2]
 801512c:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8015130:	2800      	cmp	r0, #0
 8015132:	f000 80c0 	beq.w	80152b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8015136:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801513a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801513e:	920b      	str	r2, [sp, #44]	; 0x2c
 8015140:	b151      	cbz	r1, 8015158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8015142:	eb0a 0203 	add.w	r2, sl, r3
 8015146:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801514a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801514e:	9309      	str	r3, [sp, #36]	; 0x24
 8015150:	7853      	ldrb	r3, [r2, #1]
 8015152:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015156:	930c      	str	r3, [sp, #48]	; 0x30
 8015158:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801515a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801515c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015160:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015164:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015168:	ea4c 0c03 	orr.w	ip, ip, r3
 801516c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801516e:	041b      	lsls	r3, r3, #16
 8015170:	fb10 f201 	smulbb	r2, r0, r1
 8015174:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015178:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801517c:	10d2      	asrs	r2, r2, #3
 801517e:	432b      	orrs	r3, r5
 8015180:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8015184:	4353      	muls	r3, r2
 8015186:	fb0a 330c 	mla	r3, sl, ip, r3
 801518a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801518e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015192:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015196:	ea4c 0e0e 	orr.w	lr, ip, lr
 801519a:	f1c1 0c10 	rsb	ip, r1, #16
 801519e:	ebac 0c00 	sub.w	ip, ip, r0
 80151a2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80151a6:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80151aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80151ac:	0418      	lsls	r0, r3, #16
 80151ae:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80151b2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80151b6:	4318      	orrs	r0, r3
 80151b8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80151bc:	fb02 c200 	mla	r2, r2, r0, ip
 80151c0:	0d53      	lsrs	r3, r2, #21
 80151c2:	0952      	lsrs	r2, r2, #5
 80151c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80151c8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80151cc:	431a      	orrs	r2, r3
 80151ce:	f8a8 2000 	strh.w	r2, [r8]
 80151d2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80151d4:	441c      	add	r4, r3
 80151d6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80151d8:	f108 0802 	add.w	r8, r8, #2
 80151dc:	441e      	add	r6, r3
 80151de:	f10b 3bff 	add.w	fp, fp, #4294967295
 80151e2:	e77c      	b.n	80150de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80151e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80151e6:	441c      	add	r4, r3
 80151e8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80151ea:	441e      	add	r6, r3
 80151ec:	9b06      	ldr	r3, [sp, #24]
 80151ee:	3b01      	subs	r3, #1
 80151f0:	9306      	str	r3, [sp, #24]
 80151f2:	f109 0902 	add.w	r9, r9, #2
 80151f6:	e752      	b.n	801509e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80151f8:	d020      	beq.n	801523c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80151fa:	9b06      	ldr	r3, [sp, #24]
 80151fc:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80151fe:	3b01      	subs	r3, #1
 8015200:	fb00 4003 	mla	r0, r0, r3, r4
 8015204:	1400      	asrs	r0, r0, #16
 8015206:	f53f af67 	bmi.w	80150d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801520a:	3901      	subs	r1, #1
 801520c:	4288      	cmp	r0, r1
 801520e:	f6bf af63 	bge.w	80150d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015212:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015214:	fb01 6303 	mla	r3, r1, r3, r6
 8015218:	141b      	asrs	r3, r3, #16
 801521a:	f53f af5d 	bmi.w	80150d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801521e:	3a01      	subs	r2, #1
 8015220:	4293      	cmp	r3, r2
 8015222:	f6bf af59 	bge.w	80150d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015226:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801522a:	46ca      	mov	sl, r9
 801522c:	f1b8 0f00 	cmp.w	r8, #0
 8015230:	dc67      	bgt.n	8015302 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8015232:	9b06      	ldr	r3, [sp, #24]
 8015234:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8015238:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801523c:	9b08      	ldr	r3, [sp, #32]
 801523e:	2b00      	cmp	r3, #0
 8015240:	f340 80d7 	ble.w	80153f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8015244:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8015248:	ee79 9aab 	vadd.f32	s19, s19, s23
 801524c:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8015250:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015252:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8015256:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801525a:	eef0 6a48 	vmov.f32	s13, s16
 801525e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015262:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015266:	ee37 8a48 	vsub.f32	s16, s14, s16
 801526a:	ee16 4a90 	vmov	r4, s13
 801526e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015272:	eef0 6a68 	vmov.f32	s13, s17
 8015276:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801527a:	ee18 2a10 	vmov	r2, s16
 801527e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015282:	fb92 f3f3 	sdiv	r3, r2, r3
 8015286:	ee18 2a90 	vmov	r2, s17
 801528a:	9329      	str	r3, [sp, #164]	; 0xa4
 801528c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801528e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015292:	932a      	str	r3, [sp, #168]	; 0xa8
 8015294:	9b08      	ldr	r3, [sp, #32]
 8015296:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015298:	3b01      	subs	r3, #1
 801529a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801529e:	9308      	str	r3, [sp, #32]
 80152a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80152a2:	bf08      	it	eq
 80152a4:	4613      	moveq	r3, r2
 80152a6:	ee16 6a90 	vmov	r6, s13
 80152aa:	9306      	str	r3, [sp, #24]
 80152ac:	eef0 8a67 	vmov.f32	s17, s15
 80152b0:	eeb0 8a47 	vmov.f32	s16, s14
 80152b4:	e6e4      	b.n	8015080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80152b6:	2900      	cmp	r1, #0
 80152b8:	f43f af4e 	beq.w	8015158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80152bc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80152c0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80152c4:	9309      	str	r3, [sp, #36]	; 0x24
 80152c6:	e747      	b.n	8015158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80152c8:	f112 0a01 	adds.w	sl, r2, #1
 80152cc:	d481      	bmi.n	80151d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80152ce:	4553      	cmp	r3, sl
 80152d0:	f6ff af7f 	blt.w	80151d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80152d4:	f11c 0a01 	adds.w	sl, ip, #1
 80152d8:	f53f af7b 	bmi.w	80151d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80152dc:	45d6      	cmp	lr, sl
 80152de:	f6ff af78 	blt.w	80151d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80152e2:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80152e6:	b21b      	sxth	r3, r3
 80152e8:	fa0f f28e 	sxth.w	r2, lr
 80152ec:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80152f0:	9201      	str	r2, [sp, #4]
 80152f2:	9300      	str	r3, [sp, #0]
 80152f4:	9a07      	ldr	r2, [sp, #28]
 80152f6:	9810      	ldr	r0, [sp, #64]	; 0x40
 80152f8:	463b      	mov	r3, r7
 80152fa:	4641      	mov	r1, r8
 80152fc:	f7ff fdfe 	bl	8014efc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8015300:	e767      	b.n	80151d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015302:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015304:	9d07      	ldr	r5, [sp, #28]
 8015306:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801530a:	1422      	asrs	r2, r4, #16
 801530c:	1431      	asrs	r1, r6, #16
 801530e:	fb03 2101 	mla	r1, r3, r1, r2
 8015312:	9a07      	ldr	r2, [sp, #28]
 8015314:	440a      	add	r2, r1
 8015316:	5c69      	ldrb	r1, [r5, r1]
 8015318:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801531c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8015320:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8015324:	f1be 0f00 	cmp.w	lr, #0
 8015328:	d05c      	beq.n	80153e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801532a:	f892 c001 	ldrb.w	ip, [r2, #1]
 801532e:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8015332:	950d      	str	r5, [sp, #52]	; 0x34
 8015334:	b150      	cbz	r0, 801534c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8015336:	eb02 0c03 	add.w	ip, r2, r3
 801533a:	5cd3      	ldrb	r3, [r2, r3]
 801533c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015340:	930a      	str	r3, [sp, #40]	; 0x28
 8015342:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8015346:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801534a:	930e      	str	r3, [sp, #56]	; 0x38
 801534c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801534e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015350:	fb1e f200 	smulbb	r2, lr, r0
 8015354:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015358:	10d2      	asrs	r2, r2, #3
 801535a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801535e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015362:	ea4c 0c03 	orr.w	ip, ip, r3
 8015366:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801536a:	9311      	str	r3, [sp, #68]	; 0x44
 801536c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801536e:	041b      	lsls	r3, r3, #16
 8015370:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8015374:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015378:	ea43 030b 	orr.w	r3, r3, fp
 801537c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801537e:	4353      	muls	r3, r2
 8015380:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8015384:	fb05 3c0c 	mla	ip, r5, ip, r3
 8015388:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801538c:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8015390:	ea43 0b01 	orr.w	fp, r3, r1
 8015394:	f1c0 0110 	rsb	r1, r0, #16
 8015398:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801539a:	eba1 0e0e 	sub.w	lr, r1, lr
 801539e:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80153a2:	fb0e cc0b 	mla	ip, lr, fp, ip
 80153a6:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80153aa:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80153ae:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80153b2:	ea4b 0e0e 	orr.w	lr, fp, lr
 80153b6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80153ba:	fb02 cc0e 	mla	ip, r2, lr, ip
 80153be:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80153c2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80153c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80153ca:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80153ce:	ea43 0c0c 	orr.w	ip, r3, ip
 80153d2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80153d4:	f82a cb02 	strh.w	ip, [sl], #2
 80153d8:	441c      	add	r4, r3
 80153da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80153dc:	f108 38ff 	add.w	r8, r8, #4294967295
 80153e0:	441e      	add	r6, r3
 80153e2:	e723      	b.n	801522c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80153e4:	2800      	cmp	r0, #0
 80153e6:	d0b1      	beq.n	801534c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80153e8:	5cd3      	ldrb	r3, [r2, r3]
 80153ea:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80153ee:	930a      	str	r3, [sp, #40]	; 0x28
 80153f0:	e7ac      	b.n	801534c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80153f2:	b013      	add	sp, #76	; 0x4c
 80153f4:	ecbd 8b0a 	vpop	{d8-d12}
 80153f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080153fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80153fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015400:	468b      	mov	fp, r1
 8015402:	8809      	ldrh	r1, [r1, #0]
 8015404:	b089      	sub	sp, #36	; 0x24
 8015406:	10cd      	asrs	r5, r1, #3
 8015408:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 801540c:	ea4f 2921 	mov.w	r9, r1, asr #8
 8015410:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015414:	00c9      	lsls	r1, r1, #3
 8015416:	9500      	str	r5, [sp, #0]
 8015418:	b2c9      	uxtb	r1, r1
 801541a:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 801541e:	9101      	str	r1, [sp, #4]
 8015420:	9900      	ldr	r1, [sp, #0]
 8015422:	9202      	str	r2, [sp, #8]
 8015424:	fb04 650e 	mla	r5, r4, lr, r6
 8015428:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801542c:	eb02 0805 	add.w	r8, r2, r5
 8015430:	0209      	lsls	r1, r1, #8
 8015432:	9a01      	ldr	r2, [sp, #4]
 8015434:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8015438:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 801543c:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8015440:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8015444:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8015448:	4311      	orrs	r1, r2
 801544a:	2c00      	cmp	r4, #0
 801544c:	9107      	str	r1, [sp, #28]
 801544e:	db43      	blt.n	80154d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8015450:	45a2      	cmp	sl, r4
 8015452:	dd41      	ble.n	80154d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8015454:	2e00      	cmp	r6, #0
 8015456:	db3d      	blt.n	80154d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8015458:	45b6      	cmp	lr, r6
 801545a:	dd3b      	ble.n	80154d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801545c:	9a02      	ldr	r2, [sp, #8]
 801545e:	5d55      	ldrb	r5, [r2, r5]
 8015460:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015464:	441d      	add	r5, r3
 8015466:	1c72      	adds	r2, r6, #1
 8015468:	d439      	bmi.n	80154de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801546a:	4596      	cmp	lr, r2
 801546c:	dd37      	ble.n	80154de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801546e:	2f00      	cmp	r7, #0
 8015470:	d035      	beq.n	80154de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8015472:	f898 1001 	ldrb.w	r1, [r8, #1]
 8015476:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801547a:	4419      	add	r1, r3
 801547c:	3401      	adds	r4, #1
 801547e:	d432      	bmi.n	80154e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015480:	45a2      	cmp	sl, r4
 8015482:	dd30      	ble.n	80154e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015484:	b378      	cbz	r0, 80154e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015486:	2e00      	cmp	r6, #0
 8015488:	db2b      	blt.n	80154e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801548a:	45b6      	cmp	lr, r6
 801548c:	dd29      	ble.n	80154e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801548e:	f818 400e 	ldrb.w	r4, [r8, lr]
 8015492:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015496:	441c      	add	r4, r3
 8015498:	3601      	adds	r6, #1
 801549a:	d427      	bmi.n	80154ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801549c:	45b6      	cmp	lr, r6
 801549e:	dd25      	ble.n	80154ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80154a0:	b327      	cbz	r7, 80154ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80154a2:	44c6      	add	lr, r8
 80154a4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80154a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80154ac:	4413      	add	r3, r2
 80154ae:	782a      	ldrb	r2, [r5, #0]
 80154b0:	9202      	str	r2, [sp, #8]
 80154b2:	780a      	ldrb	r2, [r1, #0]
 80154b4:	9203      	str	r2, [sp, #12]
 80154b6:	7822      	ldrb	r2, [r4, #0]
 80154b8:	9204      	str	r2, [sp, #16]
 80154ba:	2f0f      	cmp	r7, #15
 80154bc:	781a      	ldrb	r2, [r3, #0]
 80154be:	9205      	str	r2, [sp, #20]
 80154c0:	d801      	bhi.n	80154c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 80154c2:	280f      	cmp	r0, #15
 80154c4:	d914      	bls.n	80154f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 80154c6:	4b3f      	ldr	r3, [pc, #252]	; (80155c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 80154c8:	4a3f      	ldr	r2, [pc, #252]	; (80155c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 80154ca:	4840      	ldr	r0, [pc, #256]	; (80155cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 80154cc:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 80154d0:	f006 fb24 	bl	801bb1c <__assert_func>
 80154d4:	ad07      	add	r5, sp, #28
 80154d6:	e7c6      	b.n	8015466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 80154d8:	a907      	add	r1, sp, #28
 80154da:	460d      	mov	r5, r1
 80154dc:	e7ce      	b.n	801547c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80154de:	a907      	add	r1, sp, #28
 80154e0:	e7cc      	b.n	801547c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80154e2:	ac07      	add	r4, sp, #28
 80154e4:	e7d8      	b.n	8015498 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 80154e6:	ab07      	add	r3, sp, #28
 80154e8:	461c      	mov	r4, r3
 80154ea:	e7e0      	b.n	80154ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80154ec:	ab07      	add	r3, sp, #28
 80154ee:	e7de      	b.n	80154ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80154f0:	b2ba      	uxth	r2, r7
 80154f2:	b280      	uxth	r0, r0
 80154f4:	fb02 fa00 	mul.w	sl, r2, r0
 80154f8:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80154fc:	0112      	lsls	r2, r2, #4
 80154fe:	b280      	uxth	r0, r0
 8015500:	f891 8002 	ldrb.w	r8, [r1, #2]
 8015504:	7849      	ldrb	r1, [r1, #1]
 8015506:	78ae      	ldrb	r6, [r5, #2]
 8015508:	786d      	ldrb	r5, [r5, #1]
 801550a:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 801550e:	eba2 020a 	sub.w	r2, r2, sl
 8015512:	b292      	uxth	r2, r2
 8015514:	ebae 0e00 	sub.w	lr, lr, r0
 8015518:	fa1f fe8e 	uxth.w	lr, lr
 801551c:	4351      	muls	r1, r2
 801551e:	fb02 f808 	mul.w	r8, r2, r8
 8015522:	fb0e 8806 	mla	r8, lr, r6, r8
 8015526:	fb0e 1505 	mla	r5, lr, r5, r1
 801552a:	78a6      	ldrb	r6, [r4, #2]
 801552c:	7861      	ldrb	r1, [r4, #1]
 801552e:	fa1f f78c 	uxth.w	r7, ip
 8015532:	fb00 8806 	mla	r8, r0, r6, r8
 8015536:	fb00 5501 	mla	r5, r0, r1, r5
 801553a:	789e      	ldrb	r6, [r3, #2]
 801553c:	7859      	ldrb	r1, [r3, #1]
 801553e:	9b00      	ldr	r3, [sp, #0]
 8015540:	ea6f 0c0c 	mvn.w	ip, ip
 8015544:	fa5f fc8c 	uxtb.w	ip, ip
 8015548:	fb0a 5101 	mla	r1, sl, r1, r5
 801554c:	fb13 f50c 	smulbb	r5, r3, ip
 8015550:	9b03      	ldr	r3, [sp, #12]
 8015552:	435a      	muls	r2, r3
 8015554:	9b02      	ldr	r3, [sp, #8]
 8015556:	fb0e 2203 	mla	r2, lr, r3, r2
 801555a:	9b04      	ldr	r3, [sp, #16]
 801555c:	fb00 2003 	mla	r0, r0, r3, r2
 8015560:	9b05      	ldr	r3, [sp, #20]
 8015562:	fb0a 8606 	mla	r6, sl, r6, r8
 8015566:	fb19 f90c 	smulbb	r9, r9, ip
 801556a:	fb0a 0a03 	mla	sl, sl, r3, r0
 801556e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015572:	9b01      	ldr	r3, [sp, #4]
 8015574:	fb06 9607 	mla	r6, r6, r7, r9
 8015578:	b2b6      	uxth	r6, r6
 801557a:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 801557e:	fb13 fc0c 	smulbb	ip, r3, ip
 8015582:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015586:	fb01 5107 	mla	r1, r1, r7, r5
 801558a:	f106 0901 	add.w	r9, r6, #1
 801558e:	fb0a c707 	mla	r7, sl, r7, ip
 8015592:	b2bf      	uxth	r7, r7
 8015594:	b289      	uxth	r1, r1
 8015596:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801559a:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 801559e:	1c4d      	adds	r5, r1, #1
 80155a0:	1c7e      	adds	r6, r7, #1
 80155a2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80155a6:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80155aa:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80155ae:	0949      	lsrs	r1, r1, #5
 80155b0:	ea46 0609 	orr.w	r6, r6, r9
 80155b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80155b8:	430e      	orrs	r6, r1
 80155ba:	f8ab 6000 	strh.w	r6, [fp]
 80155be:	b009      	add	sp, #36	; 0x24
 80155c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155c4:	0802062e 	.word	0x0802062e
 80155c8:	08020bfe 	.word	0x08020bfe
 80155cc:	080206b2 	.word	0x080206b2

080155d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80155d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155d4:	ed2d 8b08 	vpush	{d8-d11}
 80155d8:	b095      	sub	sp, #84	; 0x54
 80155da:	eeb0 aa40 	vmov.f32	s20, s0
 80155de:	9212      	str	r2, [sp, #72]	; 0x48
 80155e0:	9309      	str	r3, [sp, #36]	; 0x24
 80155e2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80155e4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80155e8:	930f      	str	r3, [sp, #60]	; 0x3c
 80155ea:	910e      	str	r1, [sp, #56]	; 0x38
 80155ec:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80155f0:	9013      	str	r0, [sp, #76]	; 0x4c
 80155f2:	6850      	ldr	r0, [r2, #4]
 80155f4:	6812      	ldr	r2, [r2, #0]
 80155f6:	fb00 1303 	mla	r3, r0, r3, r1
 80155fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80155fe:	930a      	str	r3, [sp, #40]	; 0x28
 8015600:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015602:	681b      	ldr	r3, [r3, #0]
 8015604:	930d      	str	r3, [sp, #52]	; 0x34
 8015606:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015608:	685c      	ldr	r4, [r3, #4]
 801560a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801560c:	43db      	mvns	r3, r3
 801560e:	b2db      	uxtb	r3, r3
 8015610:	eef0 9a60 	vmov.f32	s19, s1
 8015614:	eeb0 9a41 	vmov.f32	s18, s2
 8015618:	eeb0 8a62 	vmov.f32	s16, s5
 801561c:	eef0 8a43 	vmov.f32	s17, s6
 8015620:	eef0 ba44 	vmov.f32	s23, s8
 8015624:	eeb0 ba64 	vmov.f32	s22, s9
 8015628:	eef0 aa45 	vmov.f32	s21, s10
 801562c:	3404      	adds	r4, #4
 801562e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015630:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015632:	2b00      	cmp	r3, #0
 8015634:	dc03      	bgt.n	801563e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015636:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015638:	2b00      	cmp	r3, #0
 801563a:	f340 8255 	ble.w	8015ae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801563e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015640:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015644:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015648:	1e48      	subs	r0, r1, #1
 801564a:	1e55      	subs	r5, r2, #1
 801564c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801564e:	2b00      	cmp	r3, #0
 8015650:	f340 80f9 	ble.w	8015846 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015654:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8015656:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015658:	1436      	asrs	r6, r6, #16
 801565a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801565e:	d406      	bmi.n	801566e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015660:	4286      	cmp	r6, r0
 8015662:	da04      	bge.n	801566e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015664:	2b00      	cmp	r3, #0
 8015666:	db02      	blt.n	801566e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015668:	42ab      	cmp	r3, r5
 801566a:	f2c0 80ed 	blt.w	8015848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801566e:	3601      	adds	r6, #1
 8015670:	f100 80da 	bmi.w	8015828 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015674:	42b1      	cmp	r1, r6
 8015676:	f2c0 80d7 	blt.w	8015828 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801567a:	3301      	adds	r3, #1
 801567c:	f100 80d4 	bmi.w	8015828 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015680:	429a      	cmp	r2, r3
 8015682:	f2c0 80d1 	blt.w	8015828 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015686:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015688:	9311      	str	r3, [sp, #68]	; 0x44
 801568a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801568c:	930c      	str	r3, [sp, #48]	; 0x30
 801568e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015690:	2b00      	cmp	r3, #0
 8015692:	f340 80fa 	ble.w	801588a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015696:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8015698:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801569a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801569c:	68c6      	ldr	r6, [r0, #12]
 801569e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80156a0:	141d      	asrs	r5, r3, #16
 80156a2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80156a6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80156a8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80156aa:	1400      	asrs	r0, r0, #16
 80156ac:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80156b0:	6892      	ldr	r2, [r2, #8]
 80156b2:	f100 813e 	bmi.w	8015932 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80156b6:	1e57      	subs	r7, r2, #1
 80156b8:	42b8      	cmp	r0, r7
 80156ba:	f280 813a 	bge.w	8015932 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80156be:	2d00      	cmp	r5, #0
 80156c0:	f2c0 8137 	blt.w	8015932 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80156c4:	1e77      	subs	r7, r6, #1
 80156c6:	42bd      	cmp	r5, r7
 80156c8:	f280 8133 	bge.w	8015932 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80156cc:	b212      	sxth	r2, r2
 80156ce:	fb05 0002 	mla	r0, r5, r2, r0
 80156d2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80156d4:	f815 a000 	ldrb.w	sl, [r5, r0]
 80156d8:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80156dc:	182e      	adds	r6, r5, r0
 80156de:	eb04 050a 	add.w	r5, r4, sl
 80156e2:	2b00      	cmp	r3, #0
 80156e4:	f000 8117 	beq.w	8015916 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 80156e8:	f896 c001 	ldrb.w	ip, [r6, #1]
 80156ec:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80156f0:	44a4      	add	ip, r4
 80156f2:	2900      	cmp	r1, #0
 80156f4:	f000 8117 	beq.w	8015926 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80156f8:	18b0      	adds	r0, r6, r2
 80156fa:	5cb2      	ldrb	r2, [r6, r2]
 80156fc:	7840      	ldrb	r0, [r0, #1]
 80156fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015702:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015706:	4422      	add	r2, r4
 8015708:	4420      	add	r0, r4
 801570a:	b29b      	uxth	r3, r3
 801570c:	b289      	uxth	r1, r1
 801570e:	fb03 f901 	mul.w	r9, r3, r1
 8015712:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015716:	011b      	lsls	r3, r3, #4
 8015718:	b289      	uxth	r1, r1
 801571a:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801571e:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015722:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8015724:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8015728:	f8b6 e000 	ldrh.w	lr, [r6]
 801572c:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8015730:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8015734:	eba3 0309 	sub.w	r3, r3, r9
 8015738:	b29b      	uxth	r3, r3
 801573a:	eba8 0801 	sub.w	r8, r8, r1
 801573e:	fa1f f888 	uxth.w	r8, r8
 8015742:	435f      	muls	r7, r3
 8015744:	fb08 770b 	mla	r7, r8, fp, r7
 8015748:	f892 b002 	ldrb.w	fp, [r2, #2]
 801574c:	9310      	str	r3, [sp, #64]	; 0x40
 801574e:	fb01 770b 	mla	r7, r1, fp, r7
 8015752:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015756:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015758:	fb09 770b 	mla	r7, r9, fp, r7
 801575c:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8015760:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015764:	fb1b fb03 	smulbb	fp, fp, r3
 8015768:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801576c:	fb07 b706 	mla	r7, r7, r6, fp
 8015770:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015772:	f895 b001 	ldrb.w	fp, [r5, #1]
 8015776:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801577a:	f89c c000 	ldrb.w	ip, [ip]
 801577e:	435d      	muls	r5, r3
 8015780:	fb08 550b 	mla	r5, r8, fp, r5
 8015784:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015788:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801578a:	fb01 550b 	mla	r5, r1, fp, r5
 801578e:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015792:	fb09 550b 	mla	r5, r9, fp, r5
 8015796:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801579a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801579e:	fb1b fb03 	smulbb	fp, fp, r3
 80157a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80157a4:	fb03 f30c 	mul.w	r3, r3, ip
 80157a8:	f892 c000 	ldrb.w	ip, [r2]
 80157ac:	fb08 330a 	mla	r3, r8, sl, r3
 80157b0:	fb01 330c 	mla	r3, r1, ip, r3
 80157b4:	f890 c000 	ldrb.w	ip, [r0]
 80157b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80157bc:	fb09 3c0c 	mla	ip, r9, ip, r3
 80157c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80157c2:	fa5f fe8e 	uxtb.w	lr, lr
 80157c6:	b2bf      	uxth	r7, r7
 80157c8:	fb1e fe03 	smulbb	lr, lr, r3
 80157cc:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80157d0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80157d4:	fb05 b506 	mla	r5, r5, r6, fp
 80157d8:	1c7b      	adds	r3, r7, #1
 80157da:	fb0c e606 	mla	r6, ip, r6, lr
 80157de:	b2ad      	uxth	r5, r5
 80157e0:	b2b6      	uxth	r6, r6
 80157e2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80157e6:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80157ea:	f105 0b01 	add.w	fp, r5, #1
 80157ee:	1c77      	adds	r7, r6, #1
 80157f0:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80157f4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80157f8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80157fc:	096d      	lsrs	r5, r5, #5
 80157fe:	431f      	orrs	r7, r3
 8015800:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015804:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015806:	433d      	orrs	r5, r7
 8015808:	801d      	strh	r5, [r3, #0]
 801580a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801580c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801580e:	3302      	adds	r3, #2
 8015810:	930c      	str	r3, [sp, #48]	; 0x30
 8015812:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015814:	4413      	add	r3, r2
 8015816:	9327      	str	r3, [sp, #156]	; 0x9c
 8015818:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801581a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801581c:	4413      	add	r3, r2
 801581e:	9328      	str	r3, [sp, #160]	; 0xa0
 8015820:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015822:	3b01      	subs	r3, #1
 8015824:	9311      	str	r3, [sp, #68]	; 0x44
 8015826:	e732      	b.n	801568e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8015828:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801582a:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 801582c:	4433      	add	r3, r6
 801582e:	9327      	str	r3, [sp, #156]	; 0x9c
 8015830:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8015832:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015834:	4433      	add	r3, r6
 8015836:	9328      	str	r3, [sp, #160]	; 0xa0
 8015838:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801583a:	3b01      	subs	r3, #1
 801583c:	9309      	str	r3, [sp, #36]	; 0x24
 801583e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015840:	3302      	adds	r3, #2
 8015842:	930a      	str	r3, [sp, #40]	; 0x28
 8015844:	e702      	b.n	801564c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015846:	d027      	beq.n	8015898 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015848:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801584a:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801584c:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801584e:	3b01      	subs	r3, #1
 8015850:	fb00 5003 	mla	r0, r0, r3, r5
 8015854:	1400      	asrs	r0, r0, #16
 8015856:	f53f af16 	bmi.w	8015686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801585a:	3901      	subs	r1, #1
 801585c:	4288      	cmp	r0, r1
 801585e:	f6bf af12 	bge.w	8015686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015862:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015864:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015866:	fb01 0303 	mla	r3, r1, r3, r0
 801586a:	141b      	asrs	r3, r3, #16
 801586c:	f53f af0b 	bmi.w	8015686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015870:	3a01      	subs	r2, #1
 8015872:	4293      	cmp	r3, r2
 8015874:	f6bf af07 	bge.w	8015686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015878:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801587a:	9311      	str	r3, [sp, #68]	; 0x44
 801587c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8015880:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015882:	930c      	str	r3, [sp, #48]	; 0x30
 8015884:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015886:	2b00      	cmp	r3, #0
 8015888:	dc70      	bgt.n	801596c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801588a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801588c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801588e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015892:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015896:	930a      	str	r3, [sp, #40]	; 0x28
 8015898:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801589a:	2b00      	cmp	r3, #0
 801589c:	f340 8124 	ble.w	8015ae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80158a0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80158a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80158a8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80158ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80158ae:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80158b2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80158b6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80158ba:	eef0 6a48 	vmov.f32	s13, s16
 80158be:	ee69 7a27 	vmul.f32	s15, s18, s15
 80158c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80158c6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80158ca:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80158ce:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80158d2:	eef0 6a68 	vmov.f32	s13, s17
 80158d6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80158da:	ee18 2a10 	vmov	r2, s16
 80158de:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80158e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80158e6:	ee18 2a90 	vmov	r2, s17
 80158ea:	9329      	str	r3, [sp, #164]	; 0xa4
 80158ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80158ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80158f2:	932a      	str	r3, [sp, #168]	; 0xa8
 80158f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80158f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80158f8:	3b01      	subs	r3, #1
 80158fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80158fe:	930e      	str	r3, [sp, #56]	; 0x38
 8015900:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015902:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8015906:	bf08      	it	eq
 8015908:	4613      	moveq	r3, r2
 801590a:	9309      	str	r3, [sp, #36]	; 0x24
 801590c:	eef0 8a67 	vmov.f32	s17, s15
 8015910:	eeb0 8a47 	vmov.f32	s16, s14
 8015914:	e68c      	b.n	8015630 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015916:	b149      	cbz	r1, 801592c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8015918:	5cb2      	ldrb	r2, [r6, r2]
 801591a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801591e:	4422      	add	r2, r4
 8015920:	4628      	mov	r0, r5
 8015922:	46ac      	mov	ip, r5
 8015924:	e6f1      	b.n	801570a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015926:	4628      	mov	r0, r5
 8015928:	462a      	mov	r2, r5
 801592a:	e6ee      	b.n	801570a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801592c:	4628      	mov	r0, r5
 801592e:	462a      	mov	r2, r5
 8015930:	e7f7      	b.n	8015922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8015932:	1c47      	adds	r7, r0, #1
 8015934:	f53f af69 	bmi.w	801580a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015938:	42ba      	cmp	r2, r7
 801593a:	f6ff af66 	blt.w	801580a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801593e:	1c6f      	adds	r7, r5, #1
 8015940:	f53f af63 	bmi.w	801580a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015944:	42be      	cmp	r6, r7
 8015946:	f6ff af60 	blt.w	801580a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801594a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801594c:	9002      	str	r0, [sp, #8]
 801594e:	b236      	sxth	r6, r6
 8015950:	b212      	sxth	r2, r2
 8015952:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8015956:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801595a:	9200      	str	r2, [sp, #0]
 801595c:	9601      	str	r6, [sp, #4]
 801595e:	4623      	mov	r3, r4
 8015960:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8015964:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015966:	f7ff fd49 	bl	80153fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801596a:	e74e      	b.n	801580a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801596c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801596e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015970:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8015972:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015974:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015978:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801597a:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801597e:	142d      	asrs	r5, r5, #16
 8015980:	1400      	asrs	r0, r0, #16
 8015982:	fb02 5000 	mla	r0, r2, r0, r5
 8015986:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015988:	f815 9000 	ldrb.w	r9, [r5, r0]
 801598c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015990:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8015994:	182e      	adds	r6, r5, r0
 8015996:	eb04 0509 	add.w	r5, r4, r9
 801599a:	2b00      	cmp	r3, #0
 801599c:	f000 8096 	beq.w	8015acc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 80159a0:	7877      	ldrb	r7, [r6, #1]
 80159a2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80159a6:	4427      	add	r7, r4
 80159a8:	2900      	cmp	r1, #0
 80159aa:	f000 8097 	beq.w	8015adc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 80159ae:	18b0      	adds	r0, r6, r2
 80159b0:	5cb2      	ldrb	r2, [r6, r2]
 80159b2:	7840      	ldrb	r0, [r0, #1]
 80159b4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80159b8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80159bc:	4422      	add	r2, r4
 80159be:	4420      	add	r0, r4
 80159c0:	b29b      	uxth	r3, r3
 80159c2:	b289      	uxth	r1, r1
 80159c4:	fb03 f801 	mul.w	r8, r3, r1
 80159c8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80159ca:	f895 b002 	ldrb.w	fp, [r5, #2]
 80159ce:	f8b6 c000 	ldrh.w	ip, [r6]
 80159d2:	78be      	ldrb	r6, [r7, #2]
 80159d4:	f814 9009 	ldrb.w	r9, [r4, r9]
 80159d8:	011b      	lsls	r3, r3, #4
 80159da:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80159de:	b289      	uxth	r1, r1
 80159e0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80159e4:	eba3 0308 	sub.w	r3, r3, r8
 80159e8:	b29b      	uxth	r3, r3
 80159ea:	ebae 0e01 	sub.w	lr, lr, r1
 80159ee:	fa1f fe8e 	uxth.w	lr, lr
 80159f2:	435e      	muls	r6, r3
 80159f4:	fb0e 660b 	mla	r6, lr, fp, r6
 80159f8:	f892 b002 	ldrb.w	fp, [r2, #2]
 80159fc:	9310      	str	r3, [sp, #64]	; 0x40
 80159fe:	fb01 660b 	mla	r6, r1, fp, r6
 8015a02:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015a06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015a08:	fb08 660b 	mla	r6, r8, fp, r6
 8015a0c:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8015a10:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015a14:	fb1b fb03 	smulbb	fp, fp, r3
 8015a18:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015a1c:	fb06 b60a 	mla	r6, r6, sl, fp
 8015a20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015a22:	f895 b001 	ldrb.w	fp, [r5, #1]
 8015a26:	787d      	ldrb	r5, [r7, #1]
 8015a28:	783f      	ldrb	r7, [r7, #0]
 8015a2a:	435d      	muls	r5, r3
 8015a2c:	fb0e 550b 	mla	r5, lr, fp, r5
 8015a30:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015a34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015a36:	fb01 550b 	mla	r5, r1, fp, r5
 8015a3a:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015a3e:	fb08 550b 	mla	r5, r8, fp, r5
 8015a42:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015a46:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015a4a:	fb1b fb03 	smulbb	fp, fp, r3
 8015a4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015a50:	437b      	muls	r3, r7
 8015a52:	7817      	ldrb	r7, [r2, #0]
 8015a54:	fb0e 3309 	mla	r3, lr, r9, r3
 8015a58:	fb01 3307 	mla	r3, r1, r7, r3
 8015a5c:	7807      	ldrb	r7, [r0, #0]
 8015a5e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015a62:	fb08 3707 	mla	r7, r8, r7, r3
 8015a66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015a68:	fa5f fc8c 	uxtb.w	ip, ip
 8015a6c:	fb1c fc03 	smulbb	ip, ip, r3
 8015a70:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8015a74:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015a78:	fb05 b50a 	mla	r5, r5, sl, fp
 8015a7c:	fb07 c70a 	mla	r7, r7, sl, ip
 8015a80:	b2b6      	uxth	r6, r6
 8015a82:	b2ad      	uxth	r5, r5
 8015a84:	b2bf      	uxth	r7, r7
 8015a86:	1c73      	adds	r3, r6, #1
 8015a88:	1c7a      	adds	r2, r7, #1
 8015a8a:	f105 0b01 	add.w	fp, r5, #1
 8015a8e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8015a92:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8015a96:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8015a9a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015a9e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015aa2:	096d      	lsrs	r5, r5, #5
 8015aa4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015aa6:	4316      	orrs	r6, r2
 8015aa8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015aac:	432e      	orrs	r6, r5
 8015aae:	f823 6b02 	strh.w	r6, [r3], #2
 8015ab2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015ab4:	930c      	str	r3, [sp, #48]	; 0x30
 8015ab6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015ab8:	4413      	add	r3, r2
 8015aba:	9327      	str	r3, [sp, #156]	; 0x9c
 8015abc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015abe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015ac0:	4413      	add	r3, r2
 8015ac2:	9328      	str	r3, [sp, #160]	; 0xa0
 8015ac4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015ac6:	3b01      	subs	r3, #1
 8015ac8:	9311      	str	r3, [sp, #68]	; 0x44
 8015aca:	e6db      	b.n	8015884 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8015acc:	b149      	cbz	r1, 8015ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8015ace:	5cb2      	ldrb	r2, [r6, r2]
 8015ad0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015ad4:	4422      	add	r2, r4
 8015ad6:	4628      	mov	r0, r5
 8015ad8:	462f      	mov	r7, r5
 8015ada:	e771      	b.n	80159c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8015adc:	4628      	mov	r0, r5
 8015ade:	462a      	mov	r2, r5
 8015ae0:	e76e      	b.n	80159c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8015ae2:	4628      	mov	r0, r5
 8015ae4:	462a      	mov	r2, r5
 8015ae6:	e7f7      	b.n	8015ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8015ae8:	b015      	add	sp, #84	; 0x54
 8015aea:	ecbd 8b08 	vpop	{d8-d11}
 8015aee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8015af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015af8:	880e      	ldrh	r6, [r1, #0]
 8015afa:	b085      	sub	sp, #20
 8015afc:	0230      	lsls	r0, r6, #8
 8015afe:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8015b02:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8015b06:	0170      	lsls	r0, r6, #5
 8015b08:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015b0c:	9101      	str	r1, [sp, #4]
 8015b0e:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8015b12:	00f6      	lsls	r6, r6, #3
 8015b14:	ea4b 0000 	orr.w	r0, fp, r0
 8015b18:	b2f6      	uxtb	r6, r6
 8015b1a:	4691      	mov	r9, r2
 8015b1c:	fb05 7a0c 	mla	sl, r5, ip, r7
 8015b20:	4306      	orrs	r6, r0
 8015b22:	2d00      	cmp	r5, #0
 8015b24:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015b28:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8015b2c:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8015b30:	9603      	str	r6, [sp, #12]
 8015b32:	eb09 0e0a 	add.w	lr, r9, sl
 8015b36:	db42      	blt.n	8015bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8015b38:	45a8      	cmp	r8, r5
 8015b3a:	dd40      	ble.n	8015bbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8015b3c:	2f00      	cmp	r7, #0
 8015b3e:	db3c      	blt.n	8015bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8015b40:	45bc      	cmp	ip, r7
 8015b42:	dd3a      	ble.n	8015bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8015b44:	f819 600a 	ldrb.w	r6, [r9, sl]
 8015b48:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015b4c:	441e      	add	r6, r3
 8015b4e:	1c78      	adds	r0, r7, #1
 8015b50:	d438      	bmi.n	8015bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015b52:	4584      	cmp	ip, r0
 8015b54:	dd36      	ble.n	8015bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015b56:	b3aa      	cbz	r2, 8015bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015b58:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015b5c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015b60:	4418      	add	r0, r3
 8015b62:	3501      	adds	r5, #1
 8015b64:	d432      	bmi.n	8015bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015b66:	45a8      	cmp	r8, r5
 8015b68:	dd30      	ble.n	8015bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015b6a:	b37c      	cbz	r4, 8015bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015b6c:	2f00      	cmp	r7, #0
 8015b6e:	db2b      	blt.n	8015bc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8015b70:	45bc      	cmp	ip, r7
 8015b72:	dd29      	ble.n	8015bc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8015b74:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8015b78:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015b7c:	441d      	add	r5, r3
 8015b7e:	3701      	adds	r7, #1
 8015b80:	d427      	bmi.n	8015bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015b82:	45bc      	cmp	ip, r7
 8015b84:	dd25      	ble.n	8015bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015b86:	b322      	cbz	r2, 8015bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015b88:	44f4      	add	ip, lr
 8015b8a:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8015b8e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015b92:	443b      	add	r3, r7
 8015b94:	781f      	ldrb	r7, [r3, #0]
 8015b96:	f896 9000 	ldrb.w	r9, [r6]
 8015b9a:	f890 a000 	ldrb.w	sl, [r0]
 8015b9e:	f895 8000 	ldrb.w	r8, [r5]
 8015ba2:	2a0f      	cmp	r2, #15
 8015ba4:	4639      	mov	r1, r7
 8015ba6:	d801      	bhi.n	8015bac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 8015ba8:	2c0f      	cmp	r4, #15
 8015baa:	d914      	bls.n	8015bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 8015bac:	4b2c      	ldr	r3, [pc, #176]	; (8015c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8015bae:	4a2d      	ldr	r2, [pc, #180]	; (8015c64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8015bb0:	482d      	ldr	r0, [pc, #180]	; (8015c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 8015bb2:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8015bb6:	f005 ffb1 	bl	801bb1c <__assert_func>
 8015bba:	ae03      	add	r6, sp, #12
 8015bbc:	e7c7      	b.n	8015b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 8015bbe:	a803      	add	r0, sp, #12
 8015bc0:	4606      	mov	r6, r0
 8015bc2:	e7ce      	b.n	8015b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015bc4:	a803      	add	r0, sp, #12
 8015bc6:	e7cc      	b.n	8015b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015bc8:	ad03      	add	r5, sp, #12
 8015bca:	e7d8      	b.n	8015b7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 8015bcc:	ab03      	add	r3, sp, #12
 8015bce:	461d      	mov	r5, r3
 8015bd0:	e7e0      	b.n	8015b94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8015bd2:	ab03      	add	r3, sp, #12
 8015bd4:	e7de      	b.n	8015b94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8015bd6:	b292      	uxth	r2, r2
 8015bd8:	b2a4      	uxth	r4, r4
 8015bda:	fb02 fe04 	mul.w	lr, r2, r4
 8015bde:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8015be2:	0112      	lsls	r2, r2, #4
 8015be4:	b2a4      	uxth	r4, r4
 8015be6:	f890 c002 	ldrb.w	ip, [r0, #2]
 8015bea:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015bee:	7840      	ldrb	r0, [r0, #1]
 8015bf0:	7876      	ldrb	r6, [r6, #1]
 8015bf2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8015bf6:	eba2 020e 	sub.w	r2, r2, lr
 8015bfa:	b292      	uxth	r2, r2
 8015bfc:	1b3f      	subs	r7, r7, r4
 8015bfe:	b2bf      	uxth	r7, r7
 8015c00:	fb02 fc0c 	mul.w	ip, r2, ip
 8015c04:	fb07 cc0b 	mla	ip, r7, fp, ip
 8015c08:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015c0c:	fb04 cc0b 	mla	ip, r4, fp, ip
 8015c10:	f893 b002 	ldrb.w	fp, [r3, #2]
 8015c14:	785b      	ldrb	r3, [r3, #1]
 8015c16:	fb0e cc0b 	mla	ip, lr, fp, ip
 8015c1a:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8015c1e:	fb02 fc0a 	mul.w	ip, r2, sl
 8015c22:	4342      	muls	r2, r0
 8015c24:	7868      	ldrb	r0, [r5, #1]
 8015c26:	fb07 cc09 	mla	ip, r7, r9, ip
 8015c2a:	fb07 2206 	mla	r2, r7, r6, r2
 8015c2e:	fb04 cc08 	mla	ip, r4, r8, ip
 8015c32:	fb04 2400 	mla	r4, r4, r0, r2
 8015c36:	fb0e cc01 	mla	ip, lr, r1, ip
 8015c3a:	fb0e 4e03 	mla	lr, lr, r3, r4
 8015c3e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015c42:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015c46:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015c4a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8015c4e:	9b01      	ldr	r3, [sp, #4]
 8015c50:	ea4c 0c0e 	orr.w	ip, ip, lr
 8015c54:	f8a3 c000 	strh.w	ip, [r3]
 8015c58:	b005      	add	sp, #20
 8015c5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c5e:	bf00      	nop
 8015c60:	0802062e 	.word	0x0802062e
 8015c64:	08020bfe 	.word	0x08020bfe
 8015c68:	080206b2 	.word	0x080206b2

08015c6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015c6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c70:	ed2d 8b08 	vpush	{d8-d11}
 8015c74:	b08f      	sub	sp, #60	; 0x3c
 8015c76:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8015c7a:	920c      	str	r2, [sp, #48]	; 0x30
 8015c7c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8015c7e:	910a      	str	r1, [sp, #40]	; 0x28
 8015c80:	9306      	str	r3, [sp, #24]
 8015c82:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8015c86:	900d      	str	r0, [sp, #52]	; 0x34
 8015c88:	6850      	ldr	r0, [r2, #4]
 8015c8a:	6812      	ldr	r2, [r2, #0]
 8015c8c:	fb00 1303 	mla	r3, r0, r3, r1
 8015c90:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015c94:	9307      	str	r3, [sp, #28]
 8015c96:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015c98:	681b      	ldr	r3, [r3, #0]
 8015c9a:	9308      	str	r3, [sp, #32]
 8015c9c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015c9e:	685c      	ldr	r4, [r3, #4]
 8015ca0:	eeb0 aa40 	vmov.f32	s20, s0
 8015ca4:	eef0 9a60 	vmov.f32	s19, s1
 8015ca8:	eeb0 9a41 	vmov.f32	s18, s2
 8015cac:	eeb0 8a62 	vmov.f32	s16, s5
 8015cb0:	eef0 8a43 	vmov.f32	s17, s6
 8015cb4:	eef0 ba44 	vmov.f32	s23, s8
 8015cb8:	eeb0 ba64 	vmov.f32	s22, s9
 8015cbc:	eef0 aa45 	vmov.f32	s21, s10
 8015cc0:	3404      	adds	r4, #4
 8015cc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015cc4:	2b00      	cmp	r3, #0
 8015cc6:	dc03      	bgt.n	8015cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015cc8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015cca:	2b00      	cmp	r3, #0
 8015ccc:	f340 81d6 	ble.w	801607c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8015cd0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015cd2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015cd6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015cda:	1e48      	subs	r0, r1, #1
 8015cdc:	1e56      	subs	r6, r2, #1
 8015cde:	9b06      	ldr	r3, [sp, #24]
 8015ce0:	2b00      	cmp	r3, #0
 8015ce2:	f340 80b7 	ble.w	8015e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015ce6:	ea5f 472b 	movs.w	r7, fp, asr #16
 8015cea:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015cee:	d406      	bmi.n	8015cfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015cf0:	4287      	cmp	r7, r0
 8015cf2:	da04      	bge.n	8015cfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015cf4:	2b00      	cmp	r3, #0
 8015cf6:	db02      	blt.n	8015cfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015cf8:	42b3      	cmp	r3, r6
 8015cfa:	f2c0 80ac 	blt.w	8015e56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8015cfe:	3701      	adds	r7, #1
 8015d00:	f100 809d 	bmi.w	8015e3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015d04:	42b9      	cmp	r1, r7
 8015d06:	f2c0 809a 	blt.w	8015e3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015d0a:	3301      	adds	r3, #1
 8015d0c:	f100 8097 	bmi.w	8015e3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015d10:	429a      	cmp	r2, r3
 8015d12:	f2c0 8094 	blt.w	8015e3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015d16:	9b06      	ldr	r3, [sp, #24]
 8015d18:	930b      	str	r3, [sp, #44]	; 0x2c
 8015d1a:	9b07      	ldr	r3, [sp, #28]
 8015d1c:	9309      	str	r3, [sp, #36]	; 0x24
 8015d1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015d20:	2b00      	cmp	r3, #0
 8015d22:	f340 80b5 	ble.w	8015e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8015d26:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015d28:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015d2a:	68c7      	ldr	r7, [r0, #12]
 8015d2c:	6892      	ldr	r2, [r2, #8]
 8015d2e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8015d32:	ea4f 4625 	mov.w	r6, r5, asr #16
 8015d36:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8015d3a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015d3e:	f100 80fb 	bmi.w	8015f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015d42:	f102 3cff 	add.w	ip, r2, #4294967295
 8015d46:	4560      	cmp	r0, ip
 8015d48:	f280 80f6 	bge.w	8015f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015d4c:	2e00      	cmp	r6, #0
 8015d4e:	f2c0 80f3 	blt.w	8015f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015d52:	f107 3cff 	add.w	ip, r7, #4294967295
 8015d56:	4566      	cmp	r6, ip
 8015d58:	f280 80ee 	bge.w	8015f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015d5c:	b212      	sxth	r2, r2
 8015d5e:	fb06 0002 	mla	r0, r6, r2, r0
 8015d62:	9e08      	ldr	r6, [sp, #32]
 8015d64:	1837      	adds	r7, r6, r0
 8015d66:	5c30      	ldrb	r0, [r6, r0]
 8015d68:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8015d6c:	eb04 0c08 	add.w	ip, r4, r8
 8015d70:	2b00      	cmp	r3, #0
 8015d72:	f000 80d3 	beq.w	8015f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8015d76:	787e      	ldrb	r6, [r7, #1]
 8015d78:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015d7c:	4426      	add	r6, r4
 8015d7e:	2900      	cmp	r1, #0
 8015d80:	f000 80d4 	beq.w	8015f2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8015d84:	18b8      	adds	r0, r7, r2
 8015d86:	5cba      	ldrb	r2, [r7, r2]
 8015d88:	7840      	ldrb	r0, [r0, #1]
 8015d8a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015d8e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015d92:	4422      	add	r2, r4
 8015d94:	4420      	add	r0, r4
 8015d96:	b29b      	uxth	r3, r3
 8015d98:	b289      	uxth	r1, r1
 8015d9a:	fb03 f901 	mul.w	r9, r3, r1
 8015d9e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015da2:	011b      	lsls	r3, r3, #4
 8015da4:	b289      	uxth	r1, r1
 8015da6:	78b7      	ldrb	r7, [r6, #2]
 8015da8:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015dac:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015db0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015db4:	eba3 0309 	sub.w	r3, r3, r9
 8015db8:	b29b      	uxth	r3, r3
 8015dba:	ebae 0e01 	sub.w	lr, lr, r1
 8015dbe:	fa1f fe8e 	uxth.w	lr, lr
 8015dc2:	435f      	muls	r7, r3
 8015dc4:	fb0e 770a 	mla	r7, lr, sl, r7
 8015dc8:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015dcc:	fb01 770a 	mla	r7, r1, sl, r7
 8015dd0:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015dd4:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015dd8:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015ddc:	f896 8000 	ldrb.w	r8, [r6]
 8015de0:	7876      	ldrb	r6, [r6, #1]
 8015de2:	fb03 f808 	mul.w	r8, r3, r8
 8015de6:	fb0e 8807 	mla	r8, lr, r7, r8
 8015dea:	7817      	ldrb	r7, [r2, #0]
 8015dec:	fb01 8807 	mla	r8, r1, r7, r8
 8015df0:	7807      	ldrb	r7, [r0, #0]
 8015df2:	fb09 8707 	mla	r7, r9, r7, r8
 8015df6:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015dfa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015dfe:	ea47 070a 	orr.w	r7, r7, sl
 8015e02:	4373      	muls	r3, r6
 8015e04:	f892 a001 	ldrb.w	sl, [r2, #1]
 8015e08:	fb0e 330c 	mla	r3, lr, ip, r3
 8015e0c:	fb01 310a 	mla	r1, r1, sl, r3
 8015e10:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015e14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015e16:	fb09 1a0a 	mla	sl, r9, sl, r1
 8015e1a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015e1e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015e22:	ea47 070a 	orr.w	r7, r7, sl
 8015e26:	801f      	strh	r7, [r3, #0]
 8015e28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015e2a:	3302      	adds	r3, #2
 8015e2c:	9309      	str	r3, [sp, #36]	; 0x24
 8015e2e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015e30:	449b      	add	fp, r3
 8015e32:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015e34:	441d      	add	r5, r3
 8015e36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015e38:	3b01      	subs	r3, #1
 8015e3a:	930b      	str	r3, [sp, #44]	; 0x2c
 8015e3c:	e76f      	b.n	8015d1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015e3e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015e40:	449b      	add	fp, r3
 8015e42:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015e44:	441d      	add	r5, r3
 8015e46:	9b06      	ldr	r3, [sp, #24]
 8015e48:	3b01      	subs	r3, #1
 8015e4a:	9306      	str	r3, [sp, #24]
 8015e4c:	9b07      	ldr	r3, [sp, #28]
 8015e4e:	3302      	adds	r3, #2
 8015e50:	9307      	str	r3, [sp, #28]
 8015e52:	e744      	b.n	8015cde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015e54:	d023      	beq.n	8015e9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8015e56:	9b06      	ldr	r3, [sp, #24]
 8015e58:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8015e5a:	3b01      	subs	r3, #1
 8015e5c:	fb00 b003 	mla	r0, r0, r3, fp
 8015e60:	1400      	asrs	r0, r0, #16
 8015e62:	f53f af58 	bmi.w	8015d16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015e66:	3901      	subs	r1, #1
 8015e68:	4288      	cmp	r0, r1
 8015e6a:	f6bf af54 	bge.w	8015d16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015e6e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8015e70:	fb01 5303 	mla	r3, r1, r3, r5
 8015e74:	141b      	asrs	r3, r3, #16
 8015e76:	f53f af4e 	bmi.w	8015d16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015e7a:	3a01      	subs	r2, #1
 8015e7c:	4293      	cmp	r3, r2
 8015e7e:	f6bf af4a 	bge.w	8015d16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015e82:	9b06      	ldr	r3, [sp, #24]
 8015e84:	9309      	str	r3, [sp, #36]	; 0x24
 8015e86:	9b07      	ldr	r3, [sp, #28]
 8015e88:	930b      	str	r3, [sp, #44]	; 0x2c
 8015e8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015e8c:	2b00      	cmp	r3, #0
 8015e8e:	dc70      	bgt.n	8015f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8015e90:	9b06      	ldr	r3, [sp, #24]
 8015e92:	9a07      	ldr	r2, [sp, #28]
 8015e94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015e98:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015e9c:	9307      	str	r3, [sp, #28]
 8015e9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015ea0:	2b00      	cmp	r3, #0
 8015ea2:	f340 80eb 	ble.w	801607c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8015ea6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015eaa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015eae:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015eb2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015eb4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015eb8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015ebc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015ec0:	eef0 6a48 	vmov.f32	s13, s16
 8015ec4:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015ec8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015ecc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015ed0:	ee16 ba90 	vmov	fp, s13
 8015ed4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015ed8:	eef0 6a68 	vmov.f32	s13, s17
 8015edc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015ee0:	ee18 2a10 	vmov	r2, s16
 8015ee4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015ee8:	fb92 f3f3 	sdiv	r3, r2, r3
 8015eec:	ee18 2a90 	vmov	r2, s17
 8015ef0:	9323      	str	r3, [sp, #140]	; 0x8c
 8015ef2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015ef4:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ef8:	9324      	str	r3, [sp, #144]	; 0x90
 8015efa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015efc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015efe:	3b01      	subs	r3, #1
 8015f00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f04:	930a      	str	r3, [sp, #40]	; 0x28
 8015f06:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015f08:	bf08      	it	eq
 8015f0a:	4613      	moveq	r3, r2
 8015f0c:	ee16 5a90 	vmov	r5, s13
 8015f10:	9306      	str	r3, [sp, #24]
 8015f12:	eef0 8a67 	vmov.f32	s17, s15
 8015f16:	eeb0 8a47 	vmov.f32	s16, s14
 8015f1a:	e6d2      	b.n	8015cc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8015f1c:	b149      	cbz	r1, 8015f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8015f1e:	5cba      	ldrb	r2, [r7, r2]
 8015f20:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015f24:	4422      	add	r2, r4
 8015f26:	4660      	mov	r0, ip
 8015f28:	4666      	mov	r6, ip
 8015f2a:	e734      	b.n	8015d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8015f2c:	4660      	mov	r0, ip
 8015f2e:	4662      	mov	r2, ip
 8015f30:	e731      	b.n	8015d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8015f32:	4660      	mov	r0, ip
 8015f34:	4662      	mov	r2, ip
 8015f36:	e7f7      	b.n	8015f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8015f38:	f110 0c01 	adds.w	ip, r0, #1
 8015f3c:	f53f af74 	bmi.w	8015e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015f40:	4562      	cmp	r2, ip
 8015f42:	f6ff af71 	blt.w	8015e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015f46:	f116 0c01 	adds.w	ip, r6, #1
 8015f4a:	f53f af6d 	bmi.w	8015e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015f4e:	4567      	cmp	r7, ip
 8015f50:	f6ff af6a 	blt.w	8015e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015f54:	b23f      	sxth	r7, r7
 8015f56:	b212      	sxth	r2, r2
 8015f58:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8015f5c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8015f60:	9200      	str	r2, [sp, #0]
 8015f62:	9701      	str	r7, [sp, #4]
 8015f64:	4623      	mov	r3, r4
 8015f66:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8015f6a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8015f6c:	f7ff fdc2 	bl	8015af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8015f70:	e75a      	b.n	8015e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015f72:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015f74:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015f78:	ea4f 462b 	mov.w	r6, fp, asr #16
 8015f7c:	1428      	asrs	r0, r5, #16
 8015f7e:	fb02 6000 	mla	r0, r2, r0, r6
 8015f82:	9e08      	ldr	r6, [sp, #32]
 8015f84:	f816 8000 	ldrb.w	r8, [r6, r0]
 8015f88:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8015f8c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015f90:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015f94:	1837      	adds	r7, r6, r0
 8015f96:	eb04 0c08 	add.w	ip, r4, r8
 8015f9a:	2b00      	cmp	r3, #0
 8015f9c:	d060      	beq.n	8016060 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8015f9e:	787e      	ldrb	r6, [r7, #1]
 8015fa0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015fa4:	4426      	add	r6, r4
 8015fa6:	2900      	cmp	r1, #0
 8015fa8:	d062      	beq.n	8016070 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8015faa:	18b8      	adds	r0, r7, r2
 8015fac:	5cba      	ldrb	r2, [r7, r2]
 8015fae:	7840      	ldrb	r0, [r0, #1]
 8015fb0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015fb4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015fb8:	4422      	add	r2, r4
 8015fba:	4420      	add	r0, r4
 8015fbc:	b29b      	uxth	r3, r3
 8015fbe:	b289      	uxth	r1, r1
 8015fc0:	fb03 f901 	mul.w	r9, r3, r1
 8015fc4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015fc8:	011b      	lsls	r3, r3, #4
 8015fca:	b289      	uxth	r1, r1
 8015fcc:	78b7      	ldrb	r7, [r6, #2]
 8015fce:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015fd2:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015fd6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015fda:	eba3 0309 	sub.w	r3, r3, r9
 8015fde:	b29b      	uxth	r3, r3
 8015fe0:	ebae 0e01 	sub.w	lr, lr, r1
 8015fe4:	fa1f fe8e 	uxth.w	lr, lr
 8015fe8:	435f      	muls	r7, r3
 8015fea:	fb0e 770a 	mla	r7, lr, sl, r7
 8015fee:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015ff2:	fb01 770a 	mla	r7, r1, sl, r7
 8015ff6:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015ffa:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015ffe:	f814 7008 	ldrb.w	r7, [r4, r8]
 8016002:	f896 8000 	ldrb.w	r8, [r6]
 8016006:	7876      	ldrb	r6, [r6, #1]
 8016008:	fb03 f808 	mul.w	r8, r3, r8
 801600c:	fb0e 8807 	mla	r8, lr, r7, r8
 8016010:	7817      	ldrb	r7, [r2, #0]
 8016012:	fb01 8807 	mla	r8, r1, r7, r8
 8016016:	7807      	ldrb	r7, [r0, #0]
 8016018:	fb09 8707 	mla	r7, r9, r7, r8
 801601c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8016020:	4373      	muls	r3, r6
 8016022:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016026:	7856      	ldrb	r6, [r2, #1]
 8016028:	ea47 070a 	orr.w	r7, r7, sl
 801602c:	fb0e 330c 	mla	r3, lr, ip, r3
 8016030:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016034:	fb01 3306 	mla	r3, r1, r6, r3
 8016038:	fb09 3a0a 	mla	sl, r9, sl, r3
 801603c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016040:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016042:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016046:	ea47 070a 	orr.w	r7, r7, sl
 801604a:	f823 7b02 	strh.w	r7, [r3], #2
 801604e:	930b      	str	r3, [sp, #44]	; 0x2c
 8016050:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8016052:	449b      	add	fp, r3
 8016054:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016056:	441d      	add	r5, r3
 8016058:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801605a:	3b01      	subs	r3, #1
 801605c:	9309      	str	r3, [sp, #36]	; 0x24
 801605e:	e714      	b.n	8015e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8016060:	b149      	cbz	r1, 8016076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8016062:	5cba      	ldrb	r2, [r7, r2]
 8016064:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016068:	4422      	add	r2, r4
 801606a:	4660      	mov	r0, ip
 801606c:	4666      	mov	r6, ip
 801606e:	e7a5      	b.n	8015fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8016070:	4660      	mov	r0, ip
 8016072:	4662      	mov	r2, ip
 8016074:	e7a2      	b.n	8015fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8016076:	4660      	mov	r0, ip
 8016078:	4662      	mov	r2, ip
 801607a:	e7f7      	b.n	801606c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 801607c:	b00f      	add	sp, #60	; 0x3c
 801607e:	ecbd 8b08 	vpop	{d8-d11}
 8016082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08016088 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8016088:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801608c:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 8016090:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8016094:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8016098:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801609c:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 80160a0:	fb04 560c 	mla	r6, r4, ip, r5
 80160a4:	2c00      	cmp	r4, #0
 80160a6:	eb02 0e06 	add.w	lr, r2, r6
 80160aa:	db3d      	blt.n	8016128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 80160ac:	45a0      	cmp	r8, r4
 80160ae:	dd3b      	ble.n	8016128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 80160b0:	2d00      	cmp	r5, #0
 80160b2:	db37      	blt.n	8016124 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 80160b4:	45ac      	cmp	ip, r5
 80160b6:	dd35      	ble.n	8016124 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 80160b8:	5d92      	ldrb	r2, [r2, r6]
 80160ba:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80160be:	1c6e      	adds	r6, r5, #1
 80160c0:	d435      	bmi.n	801612e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80160c2:	45b4      	cmp	ip, r6
 80160c4:	dd33      	ble.n	801612e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80160c6:	b3a0      	cbz	r0, 8016132 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 80160c8:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80160cc:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 80160d0:	3401      	adds	r4, #1
 80160d2:	d432      	bmi.n	801613a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 80160d4:	45a0      	cmp	r8, r4
 80160d6:	dd30      	ble.n	801613a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 80160d8:	b397      	cbz	r7, 8016140 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 80160da:	2d00      	cmp	r5, #0
 80160dc:	db2b      	blt.n	8016136 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 80160de:	45ac      	cmp	ip, r5
 80160e0:	dd29      	ble.n	8016136 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 80160e2:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80160e6:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 80160ea:	3501      	adds	r5, #1
 80160ec:	d42b      	bmi.n	8016146 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80160ee:	45ac      	cmp	ip, r5
 80160f0:	dd29      	ble.n	8016146 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80160f2:	b350      	cbz	r0, 801614a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 80160f4:	44f4      	add	ip, lr
 80160f6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80160fa:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80160fe:	280f      	cmp	r0, #15
 8016100:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016104:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016108:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801610c:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8016110:	d801      	bhi.n	8016116 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 8016112:	2f0f      	cmp	r7, #15
 8016114:	d91b      	bls.n	801614e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 8016116:	4b8d      	ldr	r3, [pc, #564]	; (801634c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8016118:	4a8d      	ldr	r2, [pc, #564]	; (8016350 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 801611a:	488e      	ldr	r0, [pc, #568]	; (8016354 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 801611c:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8016120:	f005 fcfc 	bl	801bb1c <__assert_func>
 8016124:	2200      	movs	r2, #0
 8016126:	e7ca      	b.n	80160be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 8016128:	2600      	movs	r6, #0
 801612a:	4632      	mov	r2, r6
 801612c:	e7d0      	b.n	80160d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801612e:	2600      	movs	r6, #0
 8016130:	e7ce      	b.n	80160d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8016132:	4606      	mov	r6, r0
 8016134:	e7cc      	b.n	80160d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8016136:	2400      	movs	r4, #0
 8016138:	e7d7      	b.n	80160ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 801613a:	2300      	movs	r3, #0
 801613c:	461c      	mov	r4, r3
 801613e:	e7de      	b.n	80160fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8016140:	463b      	mov	r3, r7
 8016142:	463c      	mov	r4, r7
 8016144:	e7db      	b.n	80160fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8016146:	2300      	movs	r3, #0
 8016148:	e7d9      	b.n	80160fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801614a:	4603      	mov	r3, r0
 801614c:	e7d7      	b.n	80160fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801614e:	b280      	uxth	r0, r0
 8016150:	b2bf      	uxth	r7, r7
 8016152:	fb07 fe00 	mul.w	lr, r7, r0
 8016156:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801615a:	0100      	lsls	r0, r0, #4
 801615c:	eba0 0c0e 	sub.w	ip, r0, lr
 8016160:	b2bf      	uxth	r7, r7
 8016162:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8016166:	fa1f fc8c 	uxth.w	ip, ip
 801616a:	1bed      	subs	r5, r5, r7
 801616c:	b2ad      	uxth	r5, r5
 801616e:	fb0a f00c 	mul.w	r0, sl, ip
 8016172:	fb0b 0005 	mla	r0, fp, r5, r0
 8016176:	fb07 0009 	mla	r0, r7, r9, r0
 801617a:	fb0e 0008 	mla	r0, lr, r8, r0
 801617e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016182:	9001      	str	r0, [sp, #4]
 8016184:	2800      	cmp	r0, #0
 8016186:	f000 80de 	beq.w	8016346 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 801618a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801618e:	d018      	beq.n	80161c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 8016190:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016194:	fb0b f000 	mul.w	r0, fp, r0
 8016198:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801619c:	fb0b fb02 	mul.w	fp, fp, r2
 80161a0:	0a02      	lsrs	r2, r0, #8
 80161a2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80161a6:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80161aa:	4402      	add	r2, r0
 80161ac:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80161b0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80161b4:	0a12      	lsrs	r2, r2, #8
 80161b6:	0a00      	lsrs	r0, r0, #8
 80161b8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80161bc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80161c0:	4302      	orrs	r2, r0
 80161c2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80161c6:	d01a      	beq.n	80161fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 80161c8:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 80161cc:	fb0a f000 	mul.w	r0, sl, r0
 80161d0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80161d4:	fb0a fa06 	mul.w	sl, sl, r6
 80161d8:	0a06      	lsrs	r6, r0, #8
 80161da:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80161de:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80161e2:	4406      	add	r6, r0
 80161e4:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80161e8:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 80161ec:	0a36      	lsrs	r6, r6, #8
 80161ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80161f2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80161f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80161fa:	ea46 060a 	orr.w	r6, r6, sl
 80161fe:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016202:	d01b      	beq.n	801623c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 8016204:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8016208:	fb09 fa0a 	mul.w	sl, r9, sl
 801620c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016210:	fb09 f004 	mul.w	r0, r9, r4
 8016214:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8016218:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801621c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016220:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8016224:	4454      	add	r4, sl
 8016226:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801622a:	0a24      	lsrs	r4, r4, #8
 801622c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016230:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016234:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016238:	ea44 0409 	orr.w	r4, r4, r9
 801623c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016240:	d01b      	beq.n	801627a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 8016242:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8016246:	fb08 f909 	mul.w	r9, r8, r9
 801624a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801624e:	fb08 f003 	mul.w	r0, r8, r3
 8016252:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8016256:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801625a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801625e:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8016262:	444b      	add	r3, r9
 8016264:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8016268:	0a1b      	lsrs	r3, r3, #8
 801626a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801626e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016272:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016276:	ea43 0308 	orr.w	r3, r3, r8
 801627a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801627e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016282:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8016286:	fb0c f808 	mul.w	r8, ip, r8
 801628a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801628e:	fb0c f606 	mul.w	r6, ip, r6
 8016292:	fb05 8909 	mla	r9, r5, r9, r8
 8016296:	fb05 6502 	mla	r5, r5, r2, r6
 801629a:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801629e:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80162a2:	9a01      	ldr	r2, [sp, #4]
 80162a4:	8808      	ldrh	r0, [r1, #0]
 80162a6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80162aa:	fb07 9908 	mla	r9, r7, r8, r9
 80162ae:	fb07 5704 	mla	r7, r7, r4, r5
 80162b2:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 80162b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80162ba:	b2b6      	uxth	r6, r6
 80162bc:	fb0e 9808 	mla	r8, lr, r8, r9
 80162c0:	fb0e 7e03 	mla	lr, lr, r3, r7
 80162c4:	4372      	muls	r2, r6
 80162c6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80162ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80162ce:	1c53      	adds	r3, r2, #1
 80162d0:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 80162d4:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80162d8:	ea48 0e0e 	orr.w	lr, r8, lr
 80162dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80162e0:	1205      	asrs	r5, r0, #8
 80162e2:	ea4f 421e 	mov.w	r2, lr, lsr #16
 80162e6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80162ea:	b2db      	uxtb	r3, r3
 80162ec:	fb12 f206 	smulbb	r2, r2, r6
 80162f0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80162f4:	fb05 2503 	mla	r5, r5, r3, r2
 80162f8:	f3ce 2407 	ubfx	r4, lr, #8, #8
 80162fc:	10c2      	asrs	r2, r0, #3
 80162fe:	fa5f fe8e 	uxtb.w	lr, lr
 8016302:	00c0      	lsls	r0, r0, #3
 8016304:	fb14 f406 	smulbb	r4, r4, r6
 8016308:	b2c0      	uxtb	r0, r0
 801630a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801630e:	fb1e fe06 	smulbb	lr, lr, r6
 8016312:	fb02 4203 	mla	r2, r2, r3, r4
 8016316:	b2ad      	uxth	r5, r5
 8016318:	fb00 e303 	mla	r3, r0, r3, lr
 801631c:	b298      	uxth	r0, r3
 801631e:	b294      	uxth	r4, r2
 8016320:	1c6b      	adds	r3, r5, #1
 8016322:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8016326:	1c62      	adds	r2, r4, #1
 8016328:	1c43      	adds	r3, r0, #1
 801632a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801632e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8016332:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8016336:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801633a:	0952      	lsrs	r2, r2, #5
 801633c:	432b      	orrs	r3, r5
 801633e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016342:	4313      	orrs	r3, r2
 8016344:	800b      	strh	r3, [r1, #0]
 8016346:	b003      	add	sp, #12
 8016348:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801634c:	0802062e 	.word	0x0802062e
 8016350:	08020bfe 	.word	0x08020bfe
 8016354:	080206b2 	.word	0x080206b2

08016358 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801635c:	ed2d 8b08 	vpush	{d8-d11}
 8016360:	b09f      	sub	sp, #124	; 0x7c
 8016362:	eeb0 aa40 	vmov.f32	s20, s0
 8016366:	921b      	str	r2, [sp, #108]	; 0x6c
 8016368:	9309      	str	r3, [sp, #36]	; 0x24
 801636a:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 801636c:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8016370:	931c      	str	r3, [sp, #112]	; 0x70
 8016372:	9119      	str	r1, [sp, #100]	; 0x64
 8016374:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8016378:	901d      	str	r0, [sp, #116]	; 0x74
 801637a:	6850      	ldr	r0, [r2, #4]
 801637c:	6812      	ldr	r2, [r2, #0]
 801637e:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8016380:	fb00 1303 	mla	r3, r0, r3, r1
 8016384:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016388:	930c      	str	r3, [sp, #48]	; 0x30
 801638a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801638c:	681b      	ldr	r3, [r3, #0]
 801638e:	9312      	str	r3, [sp, #72]	; 0x48
 8016390:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016392:	685e      	ldr	r6, [r3, #4]
 8016394:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8016398:	930d      	str	r3, [sp, #52]	; 0x34
 801639a:	eef0 9a60 	vmov.f32	s19, s1
 801639e:	eeb0 9a41 	vmov.f32	s18, s2
 80163a2:	eeb0 8a62 	vmov.f32	s16, s5
 80163a6:	eef0 8a43 	vmov.f32	s17, s6
 80163aa:	eef0 ba44 	vmov.f32	s23, s8
 80163ae:	eeb0 ba64 	vmov.f32	s22, s9
 80163b2:	eef0 aa45 	vmov.f32	s21, s10
 80163b6:	3604      	adds	r6, #4
 80163b8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80163ba:	2b00      	cmp	r3, #0
 80163bc:	dc03      	bgt.n	80163c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80163be:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80163c0:	2b00      	cmp	r3, #0
 80163c2:	f340 8388 	ble.w	8016ad6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80163c6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80163c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80163cc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80163d0:	1e48      	subs	r0, r1, #1
 80163d2:	1e57      	subs	r7, r2, #1
 80163d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80163d6:	2b00      	cmp	r3, #0
 80163d8:	f340 8195 	ble.w	8016706 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80163dc:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80163de:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80163e2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80163e6:	d406      	bmi.n	80163f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80163e8:	4584      	cmp	ip, r0
 80163ea:	da04      	bge.n	80163f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80163ec:	2b00      	cmp	r3, #0
 80163ee:	db02      	blt.n	80163f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80163f0:	42bb      	cmp	r3, r7
 80163f2:	f2c0 8189 	blt.w	8016708 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80163f6:	f11c 0c01 	adds.w	ip, ip, #1
 80163fa:	f100 8177 	bmi.w	80166ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80163fe:	4561      	cmp	r1, ip
 8016400:	f2c0 8174 	blt.w	80166ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8016404:	3301      	adds	r3, #1
 8016406:	f100 8171 	bmi.w	80166ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801640a:	429a      	cmp	r2, r3
 801640c:	f2c0 816e 	blt.w	80166ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8016410:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016412:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8016414:	931a      	str	r3, [sp, #104]	; 0x68
 8016416:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8016418:	2b00      	cmp	r3, #0
 801641a:	f340 8193 	ble.w	8016744 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801641e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8016420:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016424:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016426:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801642a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801642c:	141b      	asrs	r3, r3, #16
 801642e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016432:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016436:	f100 81d6 	bmi.w	80167e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801643a:	f100 38ff 	add.w	r8, r0, #4294967295
 801643e:	4543      	cmp	r3, r8
 8016440:	f280 81d1 	bge.w	80167e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8016444:	f1bc 0f00 	cmp.w	ip, #0
 8016448:	f2c0 81cd 	blt.w	80167e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801644c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8016450:	45c4      	cmp	ip, r8
 8016452:	f280 81c8 	bge.w	80167e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8016456:	b200      	sxth	r0, r0
 8016458:	fb0c 3300 	mla	r3, ip, r0, r3
 801645c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801645e:	eb04 0803 	add.w	r8, r4, r3
 8016462:	5ce3      	ldrb	r3, [r4, r3]
 8016464:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016468:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801646c:	2a00      	cmp	r2, #0
 801646e:	f000 81af 	beq.w	80167d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016472:	f898 c001 	ldrb.w	ip, [r8, #1]
 8016476:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801647a:	940e      	str	r4, [sp, #56]	; 0x38
 801647c:	0e24      	lsrs	r4, r4, #24
 801647e:	9415      	str	r4, [sp, #84]	; 0x54
 8016480:	b179      	cbz	r1, 80164a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8016482:	eb08 0c00 	add.w	ip, r8, r0
 8016486:	f818 0000 	ldrb.w	r0, [r8, r0]
 801648a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801648e:	900a      	str	r0, [sp, #40]	; 0x28
 8016490:	0e00      	lsrs	r0, r0, #24
 8016492:	9013      	str	r0, [sp, #76]	; 0x4c
 8016494:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8016498:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801649c:	900f      	str	r0, [sp, #60]	; 0x3c
 801649e:	0e00      	lsrs	r0, r0, #24
 80164a0:	9016      	str	r0, [sp, #88]	; 0x58
 80164a2:	b292      	uxth	r2, r2
 80164a4:	b289      	uxth	r1, r1
 80164a6:	fb02 f901 	mul.w	r9, r2, r1
 80164aa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80164ae:	0112      	lsls	r2, r2, #4
 80164b0:	eba2 0809 	sub.w	r8, r2, r9
 80164b4:	b289      	uxth	r1, r1
 80164b6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80164ba:	9815      	ldr	r0, [sp, #84]	; 0x54
 80164bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80164be:	fa1f f888 	uxth.w	r8, r8
 80164c2:	1a52      	subs	r2, r2, r1
 80164c4:	b292      	uxth	r2, r2
 80164c6:	fb08 f000 	mul.w	r0, r8, r0
 80164ca:	fb02 000e 	mla	r0, r2, lr, r0
 80164ce:	fb01 0004 	mla	r0, r1, r4, r0
 80164d2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80164d4:	fb09 0004 	mla	r0, r9, r4, r0
 80164d8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80164dc:	2800      	cmp	r0, #0
 80164de:	f000 80fa 	beq.w	80166d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80164e2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80164e6:	d01b      	beq.n	8016520 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80164e8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80164ec:	fb0e fa0a 	mul.w	sl, lr, sl
 80164f0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80164f4:	fb0e fe03 	mul.w	lr, lr, r3
 80164f8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80164fc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016500:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016504:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8016508:	4453      	add	r3, sl
 801650a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801650e:	0a1b      	lsrs	r3, r3, #8
 8016510:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016514:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016518:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801651c:	ea43 030c 	orr.w	r3, r3, ip
 8016520:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016522:	2cff      	cmp	r4, #255	; 0xff
 8016524:	d021      	beq.n	801656a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8016526:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016528:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801652c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801652e:	fb04 fb0b 	mul.w	fp, r4, fp
 8016532:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016534:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016538:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801653a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801653e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016542:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016546:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801654a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801654e:	44de      	add	lr, fp
 8016550:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016554:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016558:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801655c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016560:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016564:	ea4e 040a 	orr.w	r4, lr, sl
 8016568:	940e      	str	r4, [sp, #56]	; 0x38
 801656a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801656c:	2cff      	cmp	r4, #255	; 0xff
 801656e:	d021      	beq.n	80165b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8016570:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016572:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016576:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016578:	fb04 fb0b 	mul.w	fp, r4, fp
 801657c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801657e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016582:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016584:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016588:	fb04 fa0a 	mul.w	sl, r4, sl
 801658c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016590:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016594:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016598:	44de      	add	lr, fp
 801659a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801659e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80165a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80165a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80165aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80165ae:	ea4e 040a 	orr.w	r4, lr, sl
 80165b2:	940a      	str	r4, [sp, #40]	; 0x28
 80165b4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80165b6:	2cff      	cmp	r4, #255	; 0xff
 80165b8:	d021      	beq.n	80165fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80165ba:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80165bc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80165c0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80165c2:	fb04 fb0b 	mul.w	fp, r4, fp
 80165c6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80165c8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80165cc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80165ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80165d2:	fb04 fa0a 	mul.w	sl, r4, sl
 80165d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80165da:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80165de:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80165e2:	44de      	add	lr, fp
 80165e4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80165e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80165ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80165f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80165f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80165f8:	ea4e 040a 	orr.w	r4, lr, sl
 80165fc:	940f      	str	r4, [sp, #60]	; 0x3c
 80165fe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016600:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016604:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016606:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801660a:	fb08 fc0c 	mul.w	ip, r8, ip
 801660e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016612:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016616:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016618:	fb01 cc0e 	mla	ip, r1, lr, ip
 801661c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016620:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016622:	fb09 cc0e 	mla	ip, r9, lr, ip
 8016626:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801662a:	fb08 f80e 	mul.w	r8, r8, lr
 801662e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016632:	fb02 8303 	mla	r3, r2, r3, r8
 8016636:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016638:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801663a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801663e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016640:	fb01 330a 	mla	r3, r1, sl, r3
 8016644:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8016648:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801664a:	fb09 3901 	mla	r9, r9, r1, r3
 801664e:	4342      	muls	r2, r0
 8016650:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016654:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016658:	883b      	ldrh	r3, [r7, #0]
 801665a:	1c50      	adds	r0, r2, #1
 801665c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016660:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016664:	ea4c 0c09 	orr.w	ip, ip, r9
 8016668:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801666c:	1219      	asrs	r1, r3, #8
 801666e:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8016672:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8016676:	b2c0      	uxtb	r0, r0
 8016678:	fb12 f204 	smulbb	r2, r2, r4
 801667c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016680:	fb01 2100 	mla	r1, r1, r0, r2
 8016684:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8016688:	10da      	asrs	r2, r3, #3
 801668a:	fa5f fc8c 	uxtb.w	ip, ip
 801668e:	00db      	lsls	r3, r3, #3
 8016690:	fb1c fc04 	smulbb	ip, ip, r4
 8016694:	b2db      	uxtb	r3, r3
 8016696:	b289      	uxth	r1, r1
 8016698:	fb03 c300 	mla	r3, r3, r0, ip
 801669c:	fa1f fc83 	uxth.w	ip, r3
 80166a0:	1c4b      	adds	r3, r1, #1
 80166a2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80166a6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80166aa:	fb1e fe04 	smulbb	lr, lr, r4
 80166ae:	f10c 0301 	add.w	r3, ip, #1
 80166b2:	fb02 e200 	mla	r2, r2, r0, lr
 80166b6:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80166ba:	b292      	uxth	r2, r2
 80166bc:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80166c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80166c4:	430b      	orrs	r3, r1
 80166c6:	1c51      	adds	r1, r2, #1
 80166c8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80166cc:	0952      	lsrs	r2, r2, #5
 80166ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80166d2:	4313      	orrs	r3, r2
 80166d4:	803b      	strh	r3, [r7, #0]
 80166d6:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80166d8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80166da:	441a      	add	r2, r3
 80166dc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80166de:	9231      	str	r2, [sp, #196]	; 0xc4
 80166e0:	441d      	add	r5, r3
 80166e2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80166e4:	3b01      	subs	r3, #1
 80166e6:	3702      	adds	r7, #2
 80166e8:	931a      	str	r3, [sp, #104]	; 0x68
 80166ea:	e694      	b.n	8016416 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80166ec:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80166ee:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80166f0:	441c      	add	r4, r3
 80166f2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80166f4:	9431      	str	r4, [sp, #196]	; 0xc4
 80166f6:	441d      	add	r5, r3
 80166f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80166fa:	3b01      	subs	r3, #1
 80166fc:	9309      	str	r3, [sp, #36]	; 0x24
 80166fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016700:	3302      	adds	r3, #2
 8016702:	930c      	str	r3, [sp, #48]	; 0x30
 8016704:	e666      	b.n	80163d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016706:	d024      	beq.n	8016752 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8016708:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801670a:	9833      	ldr	r0, [sp, #204]	; 0xcc
 801670c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801670e:	3b01      	subs	r3, #1
 8016710:	fb00 4003 	mla	r0, r0, r3, r4
 8016714:	1400      	asrs	r0, r0, #16
 8016716:	f53f ae7b 	bmi.w	8016410 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801671a:	3901      	subs	r1, #1
 801671c:	4288      	cmp	r0, r1
 801671e:	f6bf ae77 	bge.w	8016410 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016722:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8016724:	fb01 5303 	mla	r3, r1, r3, r5
 8016728:	141b      	asrs	r3, r3, #16
 801672a:	f53f ae71 	bmi.w	8016410 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801672e:	3a01      	subs	r2, #1
 8016730:	4293      	cmp	r3, r2
 8016732:	f6bf ae6d 	bge.w	8016410 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016736:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801673a:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801673e:	f1bb 0f00 	cmp.w	fp, #0
 8016742:	dc70      	bgt.n	8016826 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 8016744:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016746:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801674a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801674c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016750:	930c      	str	r3, [sp, #48]	; 0x30
 8016752:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016754:	2b00      	cmp	r3, #0
 8016756:	f340 81be 	ble.w	8016ad6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801675a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801675e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016762:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016766:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016768:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801676c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016770:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016774:	eef0 6a48 	vmov.f32	s13, s16
 8016778:	ee69 7a27 	vmul.f32	s15, s18, s15
 801677c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016780:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016784:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8016788:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801678c:	eef0 6a68 	vmov.f32	s13, s17
 8016790:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016794:	ee18 2a10 	vmov	r2, s16
 8016798:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801679c:	fb92 f3f3 	sdiv	r3, r2, r3
 80167a0:	ee18 2a90 	vmov	r2, s17
 80167a4:	9333      	str	r3, [sp, #204]	; 0xcc
 80167a6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80167a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80167ac:	9334      	str	r3, [sp, #208]	; 0xd0
 80167ae:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80167b0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80167b2:	3b01      	subs	r3, #1
 80167b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80167b8:	9319      	str	r3, [sp, #100]	; 0x64
 80167ba:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80167bc:	bf08      	it	eq
 80167be:	4613      	moveq	r3, r2
 80167c0:	ee16 5a90 	vmov	r5, s13
 80167c4:	9309      	str	r3, [sp, #36]	; 0x24
 80167c6:	eef0 8a67 	vmov.f32	s17, s15
 80167ca:	eeb0 8a47 	vmov.f32	s16, s14
 80167ce:	e5f3      	b.n	80163b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80167d0:	2900      	cmp	r1, #0
 80167d2:	f43f ae66 	beq.w	80164a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80167d6:	f818 0000 	ldrb.w	r0, [r8, r0]
 80167da:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80167de:	900a      	str	r0, [sp, #40]	; 0x28
 80167e0:	0e00      	lsrs	r0, r0, #24
 80167e2:	9013      	str	r0, [sp, #76]	; 0x4c
 80167e4:	e65d      	b.n	80164a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80167e6:	f113 0801 	adds.w	r8, r3, #1
 80167ea:	f53f af74 	bmi.w	80166d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80167ee:	4540      	cmp	r0, r8
 80167f0:	f6ff af71 	blt.w	80166d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80167f4:	f11c 0801 	adds.w	r8, ip, #1
 80167f8:	f53f af6d 	bmi.w	80166d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80167fc:	45c6      	cmp	lr, r8
 80167fe:	f6ff af6a 	blt.w	80166d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016802:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8016804:	9302      	str	r3, [sp, #8]
 8016806:	b200      	sxth	r0, r0
 8016808:	fa0f f38e 	sxth.w	r3, lr
 801680c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8016810:	e9cd c203 	strd	ip, r2, [sp, #12]
 8016814:	9301      	str	r3, [sp, #4]
 8016816:	9000      	str	r0, [sp, #0]
 8016818:	4633      	mov	r3, r6
 801681a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801681c:	981d      	ldr	r0, [sp, #116]	; 0x74
 801681e:	4639      	mov	r1, r7
 8016820:	f7ff fc32 	bl	8016088 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8016824:	e757      	b.n	80166d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016826:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8016828:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801682a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801682e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016830:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016834:	1427      	asrs	r7, r4, #16
 8016836:	142b      	asrs	r3, r5, #16
 8016838:	fb01 7303 	mla	r3, r1, r3, r7
 801683c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801683e:	18e7      	adds	r7, r4, r3
 8016840:	5ce3      	ldrb	r3, [r4, r3]
 8016842:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016846:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801684a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801684e:	2a00      	cmp	r2, #0
 8016850:	f000 8137 	beq.w	8016ac2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8016854:	f897 e001 	ldrb.w	lr, [r7, #1]
 8016858:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801685c:	9410      	str	r4, [sp, #64]	; 0x40
 801685e:	0e24      	lsrs	r4, r4, #24
 8016860:	9417      	str	r4, [sp, #92]	; 0x5c
 8016862:	b170      	cbz	r0, 8016882 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8016864:	eb07 0e01 	add.w	lr, r7, r1
 8016868:	5c79      	ldrb	r1, [r7, r1]
 801686a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801686e:	910b      	str	r1, [sp, #44]	; 0x2c
 8016870:	0e09      	lsrs	r1, r1, #24
 8016872:	9114      	str	r1, [sp, #80]	; 0x50
 8016874:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016878:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801687c:	9111      	str	r1, [sp, #68]	; 0x44
 801687e:	0e09      	lsrs	r1, r1, #24
 8016880:	9118      	str	r1, [sp, #96]	; 0x60
 8016882:	b292      	uxth	r2, r2
 8016884:	b280      	uxth	r0, r0
 8016886:	fb02 f800 	mul.w	r8, r2, r0
 801688a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801688e:	0112      	lsls	r2, r2, #4
 8016890:	eba2 0e08 	sub.w	lr, r2, r8
 8016894:	b280      	uxth	r0, r0
 8016896:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801689a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801689c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801689e:	fa1f fe8e 	uxth.w	lr, lr
 80168a2:	1a12      	subs	r2, r2, r0
 80168a4:	b292      	uxth	r2, r2
 80168a6:	fb0e f101 	mul.w	r1, lr, r1
 80168aa:	fb02 110c 	mla	r1, r2, ip, r1
 80168ae:	fb00 1104 	mla	r1, r0, r4, r1
 80168b2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80168b4:	fb08 1104 	mla	r1, r8, r4, r1
 80168b8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80168bc:	2900      	cmp	r1, #0
 80168be:	f000 80f5 	beq.w	8016aac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 80168c2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80168c6:	d019      	beq.n	80168fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80168c8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80168cc:	fb0c fa0a 	mul.w	sl, ip, sl
 80168d0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80168d4:	fb0c fc03 	mul.w	ip, ip, r3
 80168d8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80168dc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80168e0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80168e4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80168e8:	4453      	add	r3, sl
 80168ea:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80168ee:	0a1b      	lsrs	r3, r3, #8
 80168f0:	0a3f      	lsrs	r7, r7, #8
 80168f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80168f6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80168fa:	433b      	orrs	r3, r7
 80168fc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80168fe:	2cff      	cmp	r4, #255	; 0xff
 8016900:	d020      	beq.n	8016944 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8016902:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016904:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016908:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801690a:	4367      	muls	r7, r4
 801690c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801690e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016912:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016914:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016918:	fb04 fa0a 	mul.w	sl, r4, sl
 801691c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016920:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016924:	44bc      	add	ip, r7
 8016926:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801692a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801692e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016932:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016936:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801693a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801693e:	ea4c 040a 	orr.w	r4, ip, sl
 8016942:	9410      	str	r4, [sp, #64]	; 0x40
 8016944:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016946:	2cff      	cmp	r4, #255	; 0xff
 8016948:	d020      	beq.n	801698c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801694a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801694c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016950:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016952:	4367      	muls	r7, r4
 8016954:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016956:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801695a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801695c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016960:	fb04 fa0a 	mul.w	sl, r4, sl
 8016964:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016968:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801696c:	44bc      	add	ip, r7
 801696e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016972:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016976:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801697a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801697e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016982:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016986:	ea4c 040a 	orr.w	r4, ip, sl
 801698a:	940b      	str	r4, [sp, #44]	; 0x2c
 801698c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801698e:	2cff      	cmp	r4, #255	; 0xff
 8016990:	d020      	beq.n	80169d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 8016992:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016994:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016998:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801699a:	4367      	muls	r7, r4
 801699c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801699e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80169a2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80169a4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80169a8:	fb04 fa0a 	mul.w	sl, r4, sl
 80169ac:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80169b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80169b4:	44bc      	add	ip, r7
 80169b6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80169ba:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80169be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80169c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80169c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80169ca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80169ce:	ea4c 040a 	orr.w	r4, ip, sl
 80169d2:	9411      	str	r4, [sp, #68]	; 0x44
 80169d4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80169d6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80169da:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80169dc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80169e0:	fb0e f707 	mul.w	r7, lr, r7
 80169e4:	fb02 770c 	mla	r7, r2, ip, r7
 80169e8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80169ec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80169ee:	fb00 770c 	mla	r7, r0, ip, r7
 80169f2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80169f6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80169f8:	fb08 770c 	mla	r7, r8, ip, r7
 80169fc:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016a00:	fb0e fe0c 	mul.w	lr, lr, ip
 8016a04:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016a08:	fb02 e303 	mla	r3, r2, r3, lr
 8016a0c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016a0e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016a10:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016a14:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016a16:	fb00 330a 	mla	r3, r0, sl, r3
 8016a1a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016a1e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8016a22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016a24:	f8b9 0000 	ldrh.w	r0, [r9]
 8016a28:	434b      	muls	r3, r1
 8016a2a:	0a3f      	lsrs	r7, r7, #8
 8016a2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016a30:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016a34:	1c59      	adds	r1, r3, #1
 8016a36:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016a3a:	ea47 070c 	orr.w	r7, r7, ip
 8016a3e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8016a42:	1202      	asrs	r2, r0, #8
 8016a44:	0c3b      	lsrs	r3, r7, #16
 8016a46:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8016a4a:	b2c9      	uxtb	r1, r1
 8016a4c:	fb13 f304 	smulbb	r3, r3, r4
 8016a50:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016a54:	fb02 3201 	mla	r2, r2, r1, r3
 8016a58:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8016a5c:	10c3      	asrs	r3, r0, #3
 8016a5e:	b2ff      	uxtb	r7, r7
 8016a60:	00c0      	lsls	r0, r0, #3
 8016a62:	b292      	uxth	r2, r2
 8016a64:	fb1c fc04 	smulbb	ip, ip, r4
 8016a68:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8016a6c:	b2c0      	uxtb	r0, r0
 8016a6e:	fb17 f704 	smulbb	r7, r7, r4
 8016a72:	fb03 c301 	mla	r3, r3, r1, ip
 8016a76:	fb00 7001 	mla	r0, r0, r1, r7
 8016a7a:	f102 0c01 	add.w	ip, r2, #1
 8016a7e:	b280      	uxth	r0, r0
 8016a80:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016a84:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8016a88:	1c42      	adds	r2, r0, #1
 8016a8a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8016a8e:	b29b      	uxth	r3, r3
 8016a90:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016a94:	ea42 020c 	orr.w	r2, r2, ip
 8016a98:	f103 0c01 	add.w	ip, r3, #1
 8016a9c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8016aa0:	095b      	lsrs	r3, r3, #5
 8016aa2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016aa6:	431a      	orrs	r2, r3
 8016aa8:	f8a9 2000 	strh.w	r2, [r9]
 8016aac:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016aae:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8016ab0:	441a      	add	r2, r3
 8016ab2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016ab4:	9231      	str	r2, [sp, #196]	; 0xc4
 8016ab6:	f109 0902 	add.w	r9, r9, #2
 8016aba:	441d      	add	r5, r3
 8016abc:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016ac0:	e63d      	b.n	801673e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8016ac2:	2800      	cmp	r0, #0
 8016ac4:	f43f aedd 	beq.w	8016882 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8016ac8:	5c79      	ldrb	r1, [r7, r1]
 8016aca:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016ace:	910b      	str	r1, [sp, #44]	; 0x2c
 8016ad0:	0e09      	lsrs	r1, r1, #24
 8016ad2:	9114      	str	r1, [sp, #80]	; 0x50
 8016ad4:	e6d5      	b.n	8016882 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8016ad6:	b01f      	add	sp, #124	; 0x7c
 8016ad8:	ecbd 8b08 	vpop	{d8-d11}
 8016adc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016ae0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8016ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ae4:	880e      	ldrh	r6, [r1, #0]
 8016ae6:	b085      	sub	sp, #20
 8016ae8:	ea4f 2826 	mov.w	r8, r6, asr #8
 8016aec:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8016af0:	4691      	mov	r9, r2
 8016af2:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016af6:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 8016afa:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8016afe:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8016b02:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8016b06:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8016b0a:	9200      	str	r2, [sp, #0]
 8016b0c:	00f6      	lsls	r6, r6, #3
 8016b0e:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8016b12:	9201      	str	r2, [sp, #4]
 8016b14:	2c00      	cmp	r4, #0
 8016b16:	b2f2      	uxtb	r2, r6
 8016b18:	fb04 560c 	mla	r6, r4, ip, r5
 8016b1c:	9202      	str	r2, [sp, #8]
 8016b1e:	eb09 0806 	add.w	r8, r9, r6
 8016b22:	db3f      	blt.n	8016ba4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8016b24:	45a6      	cmp	lr, r4
 8016b26:	dd3d      	ble.n	8016ba4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8016b28:	2d00      	cmp	r5, #0
 8016b2a:	db39      	blt.n	8016ba0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8016b2c:	45ac      	cmp	ip, r5
 8016b2e:	dd37      	ble.n	8016ba0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8016b30:	f819 2006 	ldrb.w	r2, [r9, r6]
 8016b34:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016b38:	1c6e      	adds	r6, r5, #1
 8016b3a:	d436      	bmi.n	8016baa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8016b3c:	45b4      	cmp	ip, r6
 8016b3e:	dd34      	ble.n	8016baa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8016b40:	b3a8      	cbz	r0, 8016bae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8016b42:	f898 6001 	ldrb.w	r6, [r8, #1]
 8016b46:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8016b4a:	3401      	adds	r4, #1
 8016b4c:	d433      	bmi.n	8016bb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016b4e:	45a6      	cmp	lr, r4
 8016b50:	dd31      	ble.n	8016bb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016b52:	b39f      	cbz	r7, 8016bbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8016b54:	2d00      	cmp	r5, #0
 8016b56:	eb08 0e0c 	add.w	lr, r8, ip
 8016b5a:	db2a      	blt.n	8016bb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8016b5c:	45ac      	cmp	ip, r5
 8016b5e:	dd28      	ble.n	8016bb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8016b60:	f818 400c 	ldrb.w	r4, [r8, ip]
 8016b64:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8016b68:	3501      	adds	r5, #1
 8016b6a:	d42a      	bmi.n	8016bc2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016b6c:	45ac      	cmp	ip, r5
 8016b6e:	dd28      	ble.n	8016bc2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016b70:	b348      	cbz	r0, 8016bc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8016b72:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8016b76:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8016b7a:	280f      	cmp	r0, #15
 8016b7c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016b80:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016b84:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016b88:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8016b8c:	d801      	bhi.n	8016b92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 8016b8e:	2f0f      	cmp	r7, #15
 8016b90:	d91b      	bls.n	8016bca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 8016b92:	4b7d      	ldr	r3, [pc, #500]	; (8016d88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8016b94:	4a7d      	ldr	r2, [pc, #500]	; (8016d8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8016b96:	487e      	ldr	r0, [pc, #504]	; (8016d90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8016b98:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8016b9c:	f004 ffbe 	bl	801bb1c <__assert_func>
 8016ba0:	2200      	movs	r2, #0
 8016ba2:	e7c9      	b.n	8016b38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8016ba4:	2600      	movs	r6, #0
 8016ba6:	4632      	mov	r2, r6
 8016ba8:	e7cf      	b.n	8016b4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016baa:	2600      	movs	r6, #0
 8016bac:	e7cd      	b.n	8016b4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016bae:	4606      	mov	r6, r0
 8016bb0:	e7cb      	b.n	8016b4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016bb2:	2400      	movs	r4, #0
 8016bb4:	e7d8      	b.n	8016b68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 8016bb6:	2300      	movs	r3, #0
 8016bb8:	461c      	mov	r4, r3
 8016bba:	e7de      	b.n	8016b7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016bbc:	463b      	mov	r3, r7
 8016bbe:	463c      	mov	r4, r7
 8016bc0:	e7db      	b.n	8016b7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016bc2:	2300      	movs	r3, #0
 8016bc4:	e7d9      	b.n	8016b7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016bc6:	4603      	mov	r3, r0
 8016bc8:	e7d7      	b.n	8016b7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016bca:	b280      	uxth	r0, r0
 8016bcc:	b2bf      	uxth	r7, r7
 8016bce:	fb00 fe07 	mul.w	lr, r0, r7
 8016bd2:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8016bd6:	0100      	lsls	r0, r0, #4
 8016bd8:	eba0 0c0e 	sub.w	ip, r0, lr
 8016bdc:	b2bf      	uxth	r7, r7
 8016bde:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8016be2:	fa1f fc8c 	uxth.w	ip, ip
 8016be6:	1bed      	subs	r5, r5, r7
 8016be8:	b2ad      	uxth	r5, r5
 8016bea:	fb0c f00a 	mul.w	r0, ip, sl
 8016bee:	fb05 000b 	mla	r0, r5, fp, r0
 8016bf2:	fb07 0009 	mla	r0, r7, r9, r0
 8016bf6:	fb0e 0008 	mla	r0, lr, r8, r0
 8016bfa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016bfe:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016c02:	9003      	str	r0, [sp, #12]
 8016c04:	d018      	beq.n	8016c38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8016c06:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016c0a:	fb0b f000 	mul.w	r0, fp, r0
 8016c0e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016c12:	fb0b fb02 	mul.w	fp, fp, r2
 8016c16:	0a02      	lsrs	r2, r0, #8
 8016c18:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016c1c:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8016c20:	4402      	add	r2, r0
 8016c22:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8016c26:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016c2a:	0a12      	lsrs	r2, r2, #8
 8016c2c:	0a00      	lsrs	r0, r0, #8
 8016c2e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016c32:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016c36:	4302      	orrs	r2, r0
 8016c38:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016c3c:	d019      	beq.n	8016c72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8016c3e:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016c42:	fb0a fb0b 	mul.w	fp, sl, fp
 8016c46:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016c4a:	fb0a fa06 	mul.w	sl, sl, r6
 8016c4e:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8016c52:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016c56:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016c5a:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8016c5e:	445e      	add	r6, fp
 8016c60:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8016c64:	0a36      	lsrs	r6, r6, #8
 8016c66:	0a00      	lsrs	r0, r0, #8
 8016c68:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016c6c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016c70:	4306      	orrs	r6, r0
 8016c72:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016c76:	d019      	beq.n	8016cac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8016c78:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8016c7c:	fb09 fa0a 	mul.w	sl, r9, sl
 8016c80:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016c84:	fb09 f904 	mul.w	r9, r9, r4
 8016c88:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8016c8c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016c90:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016c94:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8016c98:	4454      	add	r4, sl
 8016c9a:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8016c9e:	0a24      	lsrs	r4, r4, #8
 8016ca0:	0a00      	lsrs	r0, r0, #8
 8016ca2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016ca6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016caa:	4304      	orrs	r4, r0
 8016cac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016cb0:	d019      	beq.n	8016ce6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8016cb2:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8016cb6:	fb08 f909 	mul.w	r9, r8, r9
 8016cba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016cbe:	fb08 f803 	mul.w	r8, r8, r3
 8016cc2:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8016cc6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016cca:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8016cce:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8016cd2:	444b      	add	r3, r9
 8016cd4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8016cd8:	0a1b      	lsrs	r3, r3, #8
 8016cda:	0a00      	lsrs	r0, r0, #8
 8016cdc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016ce0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016ce4:	4303      	orrs	r3, r0
 8016ce6:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016cea:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016cee:	fb0c f808 	mul.w	r8, ip, r8
 8016cf2:	fb05 8800 	mla	r8, r5, r0, r8
 8016cf6:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8016cfa:	fb07 8800 	mla	r8, r7, r0, r8
 8016cfe:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8016d02:	fb0e 8000 	mla	r0, lr, r0, r8
 8016d06:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016d0a:	fb0c f606 	mul.w	r6, ip, r6
 8016d0e:	0a00      	lsrs	r0, r0, #8
 8016d10:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016d14:	fb05 6202 	mla	r2, r5, r2, r6
 8016d18:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8016d1c:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8016d20:	fb07 2700 	mla	r7, r7, r0, r2
 8016d24:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8016d28:	9b03      	ldr	r3, [sp, #12]
 8016d2a:	9d00      	ldr	r5, [sp, #0]
 8016d2c:	9a02      	ldr	r2, [sp, #8]
 8016d2e:	fb0e 7000 	mla	r0, lr, r0, r7
 8016d32:	43dc      	mvns	r4, r3
 8016d34:	9b01      	ldr	r3, [sp, #4]
 8016d36:	b2e4      	uxtb	r4, r4
 8016d38:	0a00      	lsrs	r0, r0, #8
 8016d3a:	4363      	muls	r3, r4
 8016d3c:	4365      	muls	r5, r4
 8016d3e:	4362      	muls	r2, r4
 8016d40:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016d44:	ea48 0000 	orr.w	r0, r8, r0
 8016d48:	4614      	mov	r4, r2
 8016d4a:	1c5e      	adds	r6, r3, #1
 8016d4c:	1c6a      	adds	r2, r5, #1
 8016d4e:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8016d52:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016d56:	0a03      	lsrs	r3, r0, #8
 8016d58:	0c02      	lsrs	r2, r0, #16
 8016d5a:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8016d5e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8016d62:	00db      	lsls	r3, r3, #3
 8016d64:	0212      	lsls	r2, r2, #8
 8016d66:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8016d6a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016d6e:	4313      	orrs	r3, r2
 8016d70:	1c62      	adds	r2, r4, #1
 8016d72:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8016d76:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8016d7a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016d7e:	4318      	orrs	r0, r3
 8016d80:	8008      	strh	r0, [r1, #0]
 8016d82:	b005      	add	sp, #20
 8016d84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d88:	0802062e 	.word	0x0802062e
 8016d8c:	08020bfe 	.word	0x08020bfe
 8016d90:	080206b2 	.word	0x080206b2

08016d94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d98:	ed2d 8b08 	vpush	{d8-d11}
 8016d9c:	b09b      	sub	sp, #108	; 0x6c
 8016d9e:	eeb0 aa40 	vmov.f32	s20, s0
 8016da2:	9218      	str	r2, [sp, #96]	; 0x60
 8016da4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8016da6:	9116      	str	r1, [sp, #88]	; 0x58
 8016da8:	9307      	str	r3, [sp, #28]
 8016daa:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8016dae:	9019      	str	r0, [sp, #100]	; 0x64
 8016db0:	6850      	ldr	r0, [r2, #4]
 8016db2:	6812      	ldr	r2, [r2, #0]
 8016db4:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8016db6:	fb00 1303 	mla	r3, r0, r3, r1
 8016dba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016dbe:	930a      	str	r3, [sp, #40]	; 0x28
 8016dc0:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016dc2:	681b      	ldr	r3, [r3, #0]
 8016dc4:	930f      	str	r3, [sp, #60]	; 0x3c
 8016dc6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016dc8:	685e      	ldr	r6, [r3, #4]
 8016dca:	eef0 9a60 	vmov.f32	s19, s1
 8016dce:	eeb0 9a41 	vmov.f32	s18, s2
 8016dd2:	eeb0 8a62 	vmov.f32	s16, s5
 8016dd6:	eef0 8a43 	vmov.f32	s17, s6
 8016dda:	eef0 ba44 	vmov.f32	s23, s8
 8016dde:	eeb0 ba64 	vmov.f32	s22, s9
 8016de2:	eef0 aa45 	vmov.f32	s21, s10
 8016de6:	3604      	adds	r6, #4
 8016de8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016dea:	2b00      	cmp	r3, #0
 8016dec:	dc03      	bgt.n	8016df6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8016dee:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016df0:	2b00      	cmp	r3, #0
 8016df2:	f340 8373 	ble.w	80174dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8016df6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016df8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016dfc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016e00:	1e48      	subs	r0, r1, #1
 8016e02:	1e57      	subs	r7, r2, #1
 8016e04:	9b07      	ldr	r3, [sp, #28]
 8016e06:	2b00      	cmp	r3, #0
 8016e08:	f340 8190 	ble.w	801712c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8016e0c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016e0e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8016e12:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016e16:	d406      	bmi.n	8016e26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016e18:	4584      	cmp	ip, r0
 8016e1a:	da04      	bge.n	8016e26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016e1c:	2b00      	cmp	r3, #0
 8016e1e:	db02      	blt.n	8016e26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016e20:	42bb      	cmp	r3, r7
 8016e22:	f2c0 8184 	blt.w	801712e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8016e26:	f11c 0c01 	adds.w	ip, ip, #1
 8016e2a:	f100 8172 	bmi.w	8017112 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016e2e:	4561      	cmp	r1, ip
 8016e30:	f2c0 816f 	blt.w	8017112 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016e34:	3301      	adds	r3, #1
 8016e36:	f100 816c 	bmi.w	8017112 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016e3a:	429a      	cmp	r2, r3
 8016e3c:	f2c0 8169 	blt.w	8017112 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016e40:	9b07      	ldr	r3, [sp, #28]
 8016e42:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016e44:	9317      	str	r3, [sp, #92]	; 0x5c
 8016e46:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016e48:	2b00      	cmp	r3, #0
 8016e4a:	f340 818e 	ble.w	801716a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8016e4e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016e50:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016e54:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016e56:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8016e5a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016e5c:	141b      	asrs	r3, r3, #16
 8016e5e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016e62:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016e66:	f100 81d1 	bmi.w	801720c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016e6a:	f101 38ff 	add.w	r8, r1, #4294967295
 8016e6e:	4543      	cmp	r3, r8
 8016e70:	f280 81cc 	bge.w	801720c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016e74:	f1bc 0f00 	cmp.w	ip, #0
 8016e78:	f2c0 81c8 	blt.w	801720c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016e7c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8016e80:	45c4      	cmp	ip, r8
 8016e82:	f280 81c3 	bge.w	801720c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016e86:	b209      	sxth	r1, r1
 8016e88:	fb0c 3301 	mla	r3, ip, r1, r3
 8016e8c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016e8e:	eb04 0803 	add.w	r8, r4, r3
 8016e92:	5ce3      	ldrb	r3, [r4, r3]
 8016e94:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016e98:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8016e9c:	2a00      	cmp	r2, #0
 8016e9e:	f000 81aa 	beq.w	80171f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8016ea2:	f898 c001 	ldrb.w	ip, [r8, #1]
 8016ea6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8016eaa:	940b      	str	r4, [sp, #44]	; 0x2c
 8016eac:	0e24      	lsrs	r4, r4, #24
 8016eae:	9412      	str	r4, [sp, #72]	; 0x48
 8016eb0:	b178      	cbz	r0, 8016ed2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016eb2:	eb08 0c01 	add.w	ip, r8, r1
 8016eb6:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016eba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016ebe:	9108      	str	r1, [sp, #32]
 8016ec0:	0e09      	lsrs	r1, r1, #24
 8016ec2:	9110      	str	r1, [sp, #64]	; 0x40
 8016ec4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8016ec8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016ecc:	910c      	str	r1, [sp, #48]	; 0x30
 8016ece:	0e09      	lsrs	r1, r1, #24
 8016ed0:	9113      	str	r1, [sp, #76]	; 0x4c
 8016ed2:	b292      	uxth	r2, r2
 8016ed4:	b280      	uxth	r0, r0
 8016ed6:	fb02 f900 	mul.w	r9, r2, r0
 8016eda:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8016ede:	0112      	lsls	r2, r2, #4
 8016ee0:	eba2 0809 	sub.w	r8, r2, r9
 8016ee4:	b280      	uxth	r0, r0
 8016ee6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016eea:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016eec:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016eee:	fa1f f888 	uxth.w	r8, r8
 8016ef2:	1a12      	subs	r2, r2, r0
 8016ef4:	b292      	uxth	r2, r2
 8016ef6:	fb08 f101 	mul.w	r1, r8, r1
 8016efa:	fb02 110e 	mla	r1, r2, lr, r1
 8016efe:	fb00 1104 	mla	r1, r0, r4, r1
 8016f02:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016f04:	fb09 1104 	mla	r1, r9, r4, r1
 8016f08:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016f0c:	2900      	cmp	r1, #0
 8016f0e:	f000 80f5 	beq.w	80170fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016f12:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016f16:	d01b      	beq.n	8016f50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016f18:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016f1c:	fb0e fa0a 	mul.w	sl, lr, sl
 8016f20:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016f24:	fb0e fe03 	mul.w	lr, lr, r3
 8016f28:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016f2c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016f30:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016f34:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8016f38:	4453      	add	r3, sl
 8016f3a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016f3e:	0a1b      	lsrs	r3, r3, #8
 8016f40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016f44:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016f48:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016f4c:	ea43 030c 	orr.w	r3, r3, ip
 8016f50:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016f52:	2cff      	cmp	r4, #255	; 0xff
 8016f54:	d021      	beq.n	8016f9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8016f56:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016f58:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016f5c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016f5e:	fb04 fb0b 	mul.w	fp, r4, fp
 8016f62:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016f64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016f68:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016f6a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016f6e:	fb04 fa0a 	mul.w	sl, r4, sl
 8016f72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f76:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016f7a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016f7e:	44de      	add	lr, fp
 8016f80:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016f84:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016f88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016f8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016f94:	ea4e 040a 	orr.w	r4, lr, sl
 8016f98:	940b      	str	r4, [sp, #44]	; 0x2c
 8016f9a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016f9c:	2cff      	cmp	r4, #255	; 0xff
 8016f9e:	d021      	beq.n	8016fe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016fa0:	9c08      	ldr	r4, [sp, #32]
 8016fa2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016fa6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016fa8:	fb04 fb0b 	mul.w	fp, r4, fp
 8016fac:	9c08      	ldr	r4, [sp, #32]
 8016fae:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016fb2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016fb4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016fb8:	fb04 fa0a 	mul.w	sl, r4, sl
 8016fbc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016fc0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016fc4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016fc8:	44de      	add	lr, fp
 8016fca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016fce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016fd2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016fd6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016fda:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016fde:	ea4e 040a 	orr.w	r4, lr, sl
 8016fe2:	9408      	str	r4, [sp, #32]
 8016fe4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016fe6:	2cff      	cmp	r4, #255	; 0xff
 8016fe8:	d021      	beq.n	801702e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016fea:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016fec:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016ff0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016ff2:	fb04 fb0b 	mul.w	fp, r4, fp
 8016ff6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016ff8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016ffc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016ffe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017002:	fb04 fa0a 	mul.w	sl, r4, sl
 8017006:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801700a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801700e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017012:	44de      	add	lr, fp
 8017014:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017018:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801701c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017020:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017024:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017028:	ea4e 040a 	orr.w	r4, lr, sl
 801702c:	940c      	str	r4, [sp, #48]	; 0x30
 801702e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017030:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017034:	9c08      	ldr	r4, [sp, #32]
 8017036:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801703a:	fb08 fc0c 	mul.w	ip, r8, ip
 801703e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8017042:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017046:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017048:	fb00 cc0e 	mla	ip, r0, lr, ip
 801704c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017050:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017052:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017056:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801705a:	fb08 f80e 	mul.w	r8, r8, lr
 801705e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017062:	fb02 8303 	mla	r3, r2, r3, r8
 8017066:	9a08      	ldr	r2, [sp, #32]
 8017068:	f8b7 8000 	ldrh.w	r8, [r7]
 801706c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8017070:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017072:	fb00 330a 	mla	r3, r0, sl, r3
 8017076:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801707a:	fb09 3900 	mla	r9, r9, r0, r3
 801707e:	43c9      	mvns	r1, r1
 8017080:	ea4f 2228 	mov.w	r2, r8, asr #8
 8017084:	fa5f fe81 	uxtb.w	lr, r1
 8017088:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801708c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017090:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017094:	fb02 f20e 	mul.w	r2, r2, lr
 8017098:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801709c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80170a0:	ea4c 0c09 	orr.w	ip, ip, r9
 80170a4:	1c53      	adds	r3, r2, #1
 80170a6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80170aa:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80170ae:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80170b2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80170b6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80170ba:	4a63      	ldr	r2, [pc, #396]	; (8017248 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 80170bc:	fb00 f00e 	mul.w	r0, r0, lr
 80170c0:	b2db      	uxtb	r3, r3
 80170c2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 80170c6:	1c43      	adds	r3, r0, #1
 80170c8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80170cc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80170d0:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80170d4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80170d8:	b2c9      	uxtb	r1, r1
 80170da:	00db      	lsls	r3, r3, #3
 80170dc:	fb01 f10e 	mul.w	r1, r1, lr
 80170e0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80170e4:	4313      	orrs	r3, r2
 80170e6:	1c4a      	adds	r2, r1, #1
 80170e8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80170ec:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80170f0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80170f4:	ea4c 0c03 	orr.w	ip, ip, r3
 80170f8:	f8a7 c000 	strh.w	ip, [r7]
 80170fc:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80170fe:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017100:	441a      	add	r2, r3
 8017102:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017104:	922d      	str	r2, [sp, #180]	; 0xb4
 8017106:	441d      	add	r5, r3
 8017108:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801710a:	3b01      	subs	r3, #1
 801710c:	3702      	adds	r7, #2
 801710e:	9317      	str	r3, [sp, #92]	; 0x5c
 8017110:	e699      	b.n	8016e46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017112:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8017114:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8017116:	441c      	add	r4, r3
 8017118:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801711a:	942d      	str	r4, [sp, #180]	; 0xb4
 801711c:	441d      	add	r5, r3
 801711e:	9b07      	ldr	r3, [sp, #28]
 8017120:	3b01      	subs	r3, #1
 8017122:	9307      	str	r3, [sp, #28]
 8017124:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017126:	3302      	adds	r3, #2
 8017128:	930a      	str	r3, [sp, #40]	; 0x28
 801712a:	e66b      	b.n	8016e04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801712c:	d024      	beq.n	8017178 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801712e:	9b07      	ldr	r3, [sp, #28]
 8017130:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8017132:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8017134:	3b01      	subs	r3, #1
 8017136:	fb00 4003 	mla	r0, r0, r3, r4
 801713a:	1400      	asrs	r0, r0, #16
 801713c:	f53f ae80 	bmi.w	8016e40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8017140:	3901      	subs	r1, #1
 8017142:	4288      	cmp	r0, r1
 8017144:	f6bf ae7c 	bge.w	8016e40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8017148:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801714a:	fb01 5303 	mla	r3, r1, r3, r5
 801714e:	141b      	asrs	r3, r3, #16
 8017150:	f53f ae76 	bmi.w	8016e40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8017154:	3a01      	subs	r2, #1
 8017156:	4293      	cmp	r3, r2
 8017158:	f6bf ae72 	bge.w	8016e40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801715c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8017160:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8017164:	f1bb 0f00 	cmp.w	fp, #0
 8017168:	dc70      	bgt.n	801724c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 801716a:	9b07      	ldr	r3, [sp, #28]
 801716c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017170:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017172:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017176:	930a      	str	r3, [sp, #40]	; 0x28
 8017178:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801717a:	2b00      	cmp	r3, #0
 801717c:	f340 81ae 	ble.w	80174dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8017180:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017184:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017188:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801718c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801718e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017192:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017196:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801719a:	eef0 6a48 	vmov.f32	s13, s16
 801719e:	ee69 7a27 	vmul.f32	s15, s18, s15
 80171a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80171a6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80171aa:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 80171ae:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80171b2:	eef0 6a68 	vmov.f32	s13, s17
 80171b6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80171ba:	ee18 2a10 	vmov	r2, s16
 80171be:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80171c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80171c6:	ee18 2a90 	vmov	r2, s17
 80171ca:	932f      	str	r3, [sp, #188]	; 0xbc
 80171cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80171ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80171d2:	9330      	str	r3, [sp, #192]	; 0xc0
 80171d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80171d6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80171d8:	3b01      	subs	r3, #1
 80171da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80171de:	9316      	str	r3, [sp, #88]	; 0x58
 80171e0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80171e2:	bf08      	it	eq
 80171e4:	4613      	moveq	r3, r2
 80171e6:	ee16 5a90 	vmov	r5, s13
 80171ea:	9307      	str	r3, [sp, #28]
 80171ec:	eef0 8a67 	vmov.f32	s17, s15
 80171f0:	eeb0 8a47 	vmov.f32	s16, s14
 80171f4:	e5f8      	b.n	8016de8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80171f6:	2800      	cmp	r0, #0
 80171f8:	f43f ae6b 	beq.w	8016ed2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80171fc:	f818 1001 	ldrb.w	r1, [r8, r1]
 8017200:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017204:	9108      	str	r1, [sp, #32]
 8017206:	0e09      	lsrs	r1, r1, #24
 8017208:	9110      	str	r1, [sp, #64]	; 0x40
 801720a:	e662      	b.n	8016ed2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801720c:	f113 0801 	adds.w	r8, r3, #1
 8017210:	f53f af74 	bmi.w	80170fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017214:	4541      	cmp	r1, r8
 8017216:	f6ff af71 	blt.w	80170fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801721a:	f11c 0801 	adds.w	r8, ip, #1
 801721e:	f53f af6d 	bmi.w	80170fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017222:	45c6      	cmp	lr, r8
 8017224:	f6ff af6a 	blt.w	80170fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017228:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801722c:	b209      	sxth	r1, r1
 801722e:	fa0f f38e 	sxth.w	r3, lr
 8017232:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8017236:	9301      	str	r3, [sp, #4]
 8017238:	9100      	str	r1, [sp, #0]
 801723a:	4633      	mov	r3, r6
 801723c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801723e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8017240:	4639      	mov	r1, r7
 8017242:	f7ff fc4d 	bl	8016ae0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8017246:	e759      	b.n	80170fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017248:	fffff800 	.word	0xfffff800
 801724c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801724e:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8017250:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017254:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017256:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801725a:	1427      	asrs	r7, r4, #16
 801725c:	142b      	asrs	r3, r5, #16
 801725e:	fb01 7303 	mla	r3, r1, r3, r7
 8017262:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017264:	18e7      	adds	r7, r4, r3
 8017266:	5ce3      	ldrb	r3, [r4, r3]
 8017268:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801726c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017270:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8017274:	2a00      	cmp	r2, #0
 8017276:	f000 8127 	beq.w	80174c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801727a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801727e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8017282:	940d      	str	r4, [sp, #52]	; 0x34
 8017284:	0e24      	lsrs	r4, r4, #24
 8017286:	9414      	str	r4, [sp, #80]	; 0x50
 8017288:	b170      	cbz	r0, 80172a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801728a:	eb07 0e01 	add.w	lr, r7, r1
 801728e:	5c79      	ldrb	r1, [r7, r1]
 8017290:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017294:	9109      	str	r1, [sp, #36]	; 0x24
 8017296:	0e09      	lsrs	r1, r1, #24
 8017298:	9111      	str	r1, [sp, #68]	; 0x44
 801729a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801729e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80172a2:	910e      	str	r1, [sp, #56]	; 0x38
 80172a4:	0e09      	lsrs	r1, r1, #24
 80172a6:	9115      	str	r1, [sp, #84]	; 0x54
 80172a8:	b292      	uxth	r2, r2
 80172aa:	b280      	uxth	r0, r0
 80172ac:	fb02 f800 	mul.w	r8, r2, r0
 80172b0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80172b4:	0112      	lsls	r2, r2, #4
 80172b6:	eba2 0e08 	sub.w	lr, r2, r8
 80172ba:	b280      	uxth	r0, r0
 80172bc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80172c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80172c2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80172c4:	fa1f fe8e 	uxth.w	lr, lr
 80172c8:	1a09      	subs	r1, r1, r0
 80172ca:	b289      	uxth	r1, r1
 80172cc:	fb0e f202 	mul.w	r2, lr, r2
 80172d0:	fb01 220c 	mla	r2, r1, ip, r2
 80172d4:	fb00 2204 	mla	r2, r0, r4, r2
 80172d8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80172da:	fb08 2204 	mla	r2, r8, r4, r2
 80172de:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80172e2:	2a00      	cmp	r2, #0
 80172e4:	f000 80e5 	beq.w	80174b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80172e8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80172ec:	d019      	beq.n	8017322 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 80172ee:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80172f2:	fb0c fa0a 	mul.w	sl, ip, sl
 80172f6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80172fa:	fb0c fc03 	mul.w	ip, ip, r3
 80172fe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017302:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017306:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801730a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801730e:	4453      	add	r3, sl
 8017310:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017314:	0a1b      	lsrs	r3, r3, #8
 8017316:	0a3f      	lsrs	r7, r7, #8
 8017318:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801731c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8017320:	433b      	orrs	r3, r7
 8017322:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017324:	2cff      	cmp	r4, #255	; 0xff
 8017326:	d020      	beq.n	801736a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8017328:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801732a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801732e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017330:	4367      	muls	r7, r4
 8017332:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017334:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017338:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801733a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801733e:	fb04 fa0a 	mul.w	sl, r4, sl
 8017342:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017346:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801734a:	44bc      	add	ip, r7
 801734c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017350:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017354:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017358:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801735c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017360:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017364:	ea4c 040a 	orr.w	r4, ip, sl
 8017368:	940d      	str	r4, [sp, #52]	; 0x34
 801736a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801736c:	2cff      	cmp	r4, #255	; 0xff
 801736e:	d020      	beq.n	80173b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 8017370:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017372:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017376:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017378:	4367      	muls	r7, r4
 801737a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801737c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017380:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017382:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017386:	fb04 fa0a 	mul.w	sl, r4, sl
 801738a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801738e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017392:	44bc      	add	ip, r7
 8017394:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017398:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801739c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80173a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80173a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80173a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80173ac:	ea4c 040a 	orr.w	r4, ip, sl
 80173b0:	9409      	str	r4, [sp, #36]	; 0x24
 80173b2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80173b4:	2cff      	cmp	r4, #255	; 0xff
 80173b6:	d020      	beq.n	80173fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 80173b8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80173ba:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80173be:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80173c0:	4367      	muls	r7, r4
 80173c2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80173c4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80173c8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80173ca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80173ce:	fb04 fa0a 	mul.w	sl, r4, sl
 80173d2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80173d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80173da:	44bc      	add	ip, r7
 80173dc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80173e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80173e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80173e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80173ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80173f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80173f4:	ea4c 040a 	orr.w	r4, ip, sl
 80173f8:	940e      	str	r4, [sp, #56]	; 0x38
 80173fa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80173fc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017400:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017402:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8017406:	fb0e f707 	mul.w	r7, lr, r7
 801740a:	fb01 770c 	mla	r7, r1, ip, r7
 801740e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017412:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017414:	fb00 770c 	mla	r7, r0, ip, r7
 8017418:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801741c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801741e:	fb08 770c 	mla	r7, r8, ip, r7
 8017422:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8017426:	fb0e fe0c 	mul.w	lr, lr, ip
 801742a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801742e:	fb01 e303 	mla	r3, r1, r3, lr
 8017432:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017434:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8017438:	990e      	ldr	r1, [sp, #56]	; 0x38
 801743a:	fb00 330a 	mla	r3, r0, sl, r3
 801743e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8017442:	fb08 3c0c 	mla	ip, r8, ip, r3
 8017446:	f8b9 3000 	ldrh.w	r3, [r9]
 801744a:	43d2      	mvns	r2, r2
 801744c:	1218      	asrs	r0, r3, #8
 801744e:	b2d2      	uxtb	r2, r2
 8017450:	10d9      	asrs	r1, r3, #3
 8017452:	0a3f      	lsrs	r7, r7, #8
 8017454:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017458:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801745c:	00db      	lsls	r3, r3, #3
 801745e:	4350      	muls	r0, r2
 8017460:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017464:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017468:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801746c:	b2db      	uxtb	r3, r3
 801746e:	ea47 070c 	orr.w	r7, r7, ip
 8017472:	4351      	muls	r1, r2
 8017474:	4353      	muls	r3, r2
 8017476:	1c42      	adds	r2, r0, #1
 8017478:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801747c:	0c3a      	lsrs	r2, r7, #16
 801747e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017482:	4a19      	ldr	r2, [pc, #100]	; (80174e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 8017484:	b2c0      	uxtb	r0, r0
 8017486:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801748a:	1c4a      	adds	r2, r1, #1
 801748c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017490:	0a3a      	lsrs	r2, r7, #8
 8017492:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017496:	00c9      	lsls	r1, r1, #3
 8017498:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801749c:	4301      	orrs	r1, r0
 801749e:	1c58      	adds	r0, r3, #1
 80174a0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80174a4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80174a8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80174ac:	4308      	orrs	r0, r1
 80174ae:	f8a9 0000 	strh.w	r0, [r9]
 80174b2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80174b4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80174b6:	441a      	add	r2, r3
 80174b8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80174ba:	922d      	str	r2, [sp, #180]	; 0xb4
 80174bc:	f109 0902 	add.w	r9, r9, #2
 80174c0:	441d      	add	r5, r3
 80174c2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80174c6:	e64d      	b.n	8017164 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80174c8:	2800      	cmp	r0, #0
 80174ca:	f43f aeed 	beq.w	80172a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80174ce:	5c79      	ldrb	r1, [r7, r1]
 80174d0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80174d4:	9109      	str	r1, [sp, #36]	; 0x24
 80174d6:	0e09      	lsrs	r1, r1, #24
 80174d8:	9111      	str	r1, [sp, #68]	; 0x44
 80174da:	e6e5      	b.n	80172a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80174dc:	b01b      	add	sp, #108	; 0x6c
 80174de:	ecbd 8b08 	vpop	{d8-d11}
 80174e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80174e6:	bf00      	nop
 80174e8:	fffff800 	.word	0xfffff800

080174ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80174ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174f0:	b085      	sub	sp, #20
 80174f2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80174f6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80174fa:	9103      	str	r1, [sp, #12]
 80174fc:	fb05 7106 	mla	r1, r5, r6, r7
 8017500:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8017504:	2d00      	cmp	r5, #0
 8017506:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801750a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801750e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8017512:	9401      	str	r4, [sp, #4]
 8017514:	eb03 0901 	add.w	r9, r3, r1
 8017518:	f2c0 80c0 	blt.w	801769c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801751c:	45a8      	cmp	r8, r5
 801751e:	f340 80bd 	ble.w	801769c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8017522:	2f00      	cmp	r7, #0
 8017524:	f2c0 80b6 	blt.w	8017694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8017528:	42be      	cmp	r6, r7
 801752a:	f340 80b3 	ble.w	8017694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801752e:	f813 c001 	ldrb.w	ip, [r3, r1]
 8017532:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8017536:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801753a:	d019      	beq.n	8017570 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 801753c:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8017540:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017544:	435a      	muls	r2, r3
 8017546:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801754a:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801754e:	fb0c f403 	mul.w	r4, ip, r3
 8017552:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8017556:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801755a:	441a      	add	r2, r3
 801755c:	f104 0320 	add.w	r3, r4, #32
 8017560:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8017564:	0a1b      	lsrs	r3, r3, #8
 8017566:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801756a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801756e:	4319      	orrs	r1, r3
 8017570:	b289      	uxth	r1, r1
 8017572:	1c7b      	adds	r3, r7, #1
 8017574:	f100 8097 	bmi.w	80176a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8017578:	429e      	cmp	r6, r3
 801757a:	f340 8094 	ble.w	80176a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801757e:	2800      	cmp	r0, #0
 8017580:	f000 8094 	beq.w	80176ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 8017584:	f899 4001 	ldrb.w	r4, [r9, #1]
 8017588:	9b01      	ldr	r3, [sp, #4]
 801758a:	2cff      	cmp	r4, #255	; 0xff
 801758c:	885b      	ldrh	r3, [r3, #2]
 801758e:	d01b      	beq.n	80175c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 8017590:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8017594:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017598:	fb0a f202 	mul.w	r2, sl, r2
 801759c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80175a0:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80175a4:	fb04 fa03 	mul.w	sl, r4, r3
 80175a8:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80175ac:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80175b0:	441a      	add	r2, r3
 80175b2:	f10a 0320 	add.w	r3, sl, #32
 80175b6:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80175ba:	0a1b      	lsrs	r3, r3, #8
 80175bc:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80175c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80175c4:	ea4b 0303 	orr.w	r3, fp, r3
 80175c8:	b29b      	uxth	r3, r3
 80175ca:	3501      	adds	r5, #1
 80175cc:	d474      	bmi.n	80176b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80175ce:	45a8      	cmp	r8, r5
 80175d0:	dd72      	ble.n	80176b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80175d2:	f1be 0f00 	cmp.w	lr, #0
 80175d6:	f000 8120 	beq.w	801781a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 80175da:	2f00      	cmp	r7, #0
 80175dc:	db69      	blt.n	80176b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80175de:	42be      	cmp	r6, r7
 80175e0:	dd67      	ble.n	80176b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80175e2:	f819 5006 	ldrb.w	r5, [r9, r6]
 80175e6:	9a01      	ldr	r2, [sp, #4]
 80175e8:	2dff      	cmp	r5, #255	; 0xff
 80175ea:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 80175ee:	d01c      	beq.n	801762a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 80175f0:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 80175f4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80175f8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80175fc:	fb05 fa0b 	mul.w	sl, r5, fp
 8017600:	fb08 f802 	mul.w	r8, r8, r2
 8017604:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017608:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801760c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017610:	4490      	add	r8, r2
 8017612:	f10a 0220 	add.w	r2, sl, #32
 8017616:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801761a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801761e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8017622:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017626:	ea4b 0b0a 	orr.w	fp, fp, sl
 801762a:	fa1f fb8b 	uxth.w	fp, fp
 801762e:	3701      	adds	r7, #1
 8017630:	d447      	bmi.n	80176c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8017632:	42be      	cmp	r6, r7
 8017634:	dd45      	ble.n	80176c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8017636:	2800      	cmp	r0, #0
 8017638:	d046      	beq.n	80176c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 801763a:	3601      	adds	r6, #1
 801763c:	9a01      	ldr	r2, [sp, #4]
 801763e:	f819 7006 	ldrb.w	r7, [r9, r6]
 8017642:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8017646:	2fff      	cmp	r7, #255	; 0xff
 8017648:	d01a      	beq.n	8017680 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 801764a:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801764e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8017652:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017656:	fb07 f902 	mul.w	r9, r7, r2
 801765a:	fb08 f806 	mul.w	r8, r8, r6
 801765e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8017662:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8017666:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801766a:	44b0      	add	r8, r6
 801766c:	f109 0620 	add.w	r6, r9, #32
 8017670:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8017674:	0a36      	lsrs	r6, r6, #8
 8017676:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801767a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801767e:	4332      	orrs	r2, r6
 8017680:	b292      	uxth	r2, r2
 8017682:	280f      	cmp	r0, #15
 8017684:	d922      	bls.n	80176cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8017686:	4b69      	ldr	r3, [pc, #420]	; (801782c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 8017688:	4a69      	ldr	r2, [pc, #420]	; (8017830 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 801768a:	486a      	ldr	r0, [pc, #424]	; (8017834 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 801768c:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8017690:	f004 fa44 	bl	801bb1c <__assert_func>
 8017694:	f04f 0c00 	mov.w	ip, #0
 8017698:	4661      	mov	r1, ip
 801769a:	e76a      	b.n	8017572 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 801769c:	2400      	movs	r4, #0
 801769e:	46a4      	mov	ip, r4
 80176a0:	4623      	mov	r3, r4
 80176a2:	4621      	mov	r1, r4
 80176a4:	e791      	b.n	80175ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80176a6:	2400      	movs	r4, #0
 80176a8:	4623      	mov	r3, r4
 80176aa:	e78e      	b.n	80175ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80176ac:	4604      	mov	r4, r0
 80176ae:	4603      	mov	r3, r0
 80176b0:	e78b      	b.n	80175ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80176b2:	2500      	movs	r5, #0
 80176b4:	46ab      	mov	fp, r5
 80176b6:	e7ba      	b.n	801762e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 80176b8:	2700      	movs	r7, #0
 80176ba:	463d      	mov	r5, r7
 80176bc:	463a      	mov	r2, r7
 80176be:	46bb      	mov	fp, r7
 80176c0:	e7df      	b.n	8017682 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80176c2:	2700      	movs	r7, #0
 80176c4:	463a      	mov	r2, r7
 80176c6:	e7dc      	b.n	8017682 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80176c8:	4607      	mov	r7, r0
 80176ca:	4602      	mov	r2, r0
 80176cc:	f1be 0f0f 	cmp.w	lr, #15
 80176d0:	d8d9      	bhi.n	8017686 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80176d2:	b286      	uxth	r6, r0
 80176d4:	fa1f f98e 	uxth.w	r9, lr
 80176d8:	fb06 f809 	mul.w	r8, r6, r9
 80176dc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80176e0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80176e4:	0136      	lsls	r6, r6, #4
 80176e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80176ea:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80176ee:	9601      	str	r6, [sp, #4]
 80176f0:	ea4a 0101 	orr.w	r1, sl, r1
 80176f4:	fa1f f689 	uxth.w	r6, r9
 80176f8:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80176fc:	fb10 f90e 	smulbb	r9, r0, lr
 8017700:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8017704:	9602      	str	r6, [sp, #8]
 8017706:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801770a:	460e      	mov	r6, r1
 801770c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017710:	f1ce 0110 	rsb	r1, lr, #16
 8017714:	1a09      	subs	r1, r1, r0
 8017716:	ea4a 0303 	orr.w	r3, sl, r3
 801771a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801771e:	4343      	muls	r3, r0
 8017720:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8017724:	9801      	ldr	r0, [sp, #4]
 8017726:	fb01 3106 	mla	r1, r1, r6, r3
 801772a:	9e02      	ldr	r6, [sp, #8]
 801772c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8017730:	1b80      	subs	r0, r0, r6
 8017732:	9e01      	ldr	r6, [sp, #4]
 8017734:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017738:	eba6 0608 	sub.w	r6, r6, r8
 801773c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017740:	b2b6      	uxth	r6, r6
 8017742:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017746:	ea4a 0202 	orr.w	r2, sl, r2
 801774a:	b280      	uxth	r0, r0
 801774c:	4374      	muls	r4, r6
 801774e:	fb09 1302 	mla	r3, r9, r2, r1
 8017752:	fb0c 4400 	mla	r4, ip, r0, r4
 8017756:	9a03      	ldr	r2, [sp, #12]
 8017758:	9802      	ldr	r0, [sp, #8]
 801775a:	8811      	ldrh	r1, [r2, #0]
 801775c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8017760:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8017764:	fb00 4505 	mla	r5, r0, r5, r4
 8017768:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801776c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017770:	fb08 5707 	mla	r7, r8, r7, r5
 8017774:	ea4a 0b0b 	orr.w	fp, sl, fp
 8017778:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801777c:	b292      	uxth	r2, r2
 801777e:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8017782:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8017786:	4357      	muls	r7, r2
 8017788:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801778c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017790:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017794:	f107 0801 	add.w	r8, r7, #1
 8017798:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801779c:	ea43 0e0e 	orr.w	lr, r3, lr
 80177a0:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80177a4:	fa1f f38e 	uxth.w	r3, lr
 80177a8:	1208      	asrs	r0, r1, #8
 80177aa:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80177ae:	b2ff      	uxtb	r7, r7
 80177b0:	121c      	asrs	r4, r3, #8
 80177b2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80177b6:	fb10 f007 	smulbb	r0, r0, r7
 80177ba:	10cd      	asrs	r5, r1, #3
 80177bc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80177c0:	fb04 0402 	mla	r4, r4, r2, r0
 80177c4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80177c8:	10d8      	asrs	r0, r3, #3
 80177ca:	fb15 f507 	smulbb	r5, r5, r7
 80177ce:	00db      	lsls	r3, r3, #3
 80177d0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80177d4:	fb00 5002 	mla	r0, r0, r2, r5
 80177d8:	b2dd      	uxtb	r5, r3
 80177da:	00cb      	lsls	r3, r1, #3
 80177dc:	b2db      	uxtb	r3, r3
 80177de:	fb13 f307 	smulbb	r3, r3, r7
 80177e2:	fb05 3202 	mla	r2, r5, r2, r3
 80177e6:	b2a4      	uxth	r4, r4
 80177e8:	b292      	uxth	r2, r2
 80177ea:	1c63      	adds	r3, r4, #1
 80177ec:	b280      	uxth	r0, r0
 80177ee:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80177f2:	1c53      	adds	r3, r2, #1
 80177f4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80177f8:	1c42      	adds	r2, r0, #1
 80177fa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80177fe:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017802:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017806:	0940      	lsrs	r0, r0, #5
 8017808:	4323      	orrs	r3, r4
 801780a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801780e:	9a03      	ldr	r2, [sp, #12]
 8017810:	4303      	orrs	r3, r0
 8017812:	8013      	strh	r3, [r2, #0]
 8017814:	b005      	add	sp, #20
 8017816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801781a:	280f      	cmp	r0, #15
 801781c:	f63f af33 	bhi.w	8017686 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8017820:	4677      	mov	r7, lr
 8017822:	4675      	mov	r5, lr
 8017824:	4672      	mov	r2, lr
 8017826:	46f3      	mov	fp, lr
 8017828:	e753      	b.n	80176d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 801782a:	bf00      	nop
 801782c:	0802062e 	.word	0x0802062e
 8017830:	08020bfe 	.word	0x08020bfe
 8017834:	080206b2 	.word	0x080206b2

08017838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801783c:	ed2d 8b08 	vpush	{d8-d11}
 8017840:	b097      	sub	sp, #92	; 0x5c
 8017842:	eeb0 aa40 	vmov.f32	s20, s0
 8017846:	9214      	str	r2, [sp, #80]	; 0x50
 8017848:	9308      	str	r3, [sp, #32]
 801784a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801784c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017850:	9312      	str	r3, [sp, #72]	; 0x48
 8017852:	9111      	str	r1, [sp, #68]	; 0x44
 8017854:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8017858:	9015      	str	r0, [sp, #84]	; 0x54
 801785a:	6850      	ldr	r0, [r2, #4]
 801785c:	6812      	ldr	r2, [r2, #0]
 801785e:	fb00 1303 	mla	r3, r0, r3, r1
 8017862:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017866:	9309      	str	r3, [sp, #36]	; 0x24
 8017868:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801786a:	681b      	ldr	r3, [r3, #0]
 801786c:	930b      	str	r3, [sp, #44]	; 0x2c
 801786e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017870:	685b      	ldr	r3, [r3, #4]
 8017872:	930c      	str	r3, [sp, #48]	; 0x30
 8017874:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8017878:	930a      	str	r3, [sp, #40]	; 0x28
 801787a:	eef0 9a60 	vmov.f32	s19, s1
 801787e:	eeb0 9a41 	vmov.f32	s18, s2
 8017882:	eeb0 8a62 	vmov.f32	s16, s5
 8017886:	eef0 8a43 	vmov.f32	s17, s6
 801788a:	eef0 ba44 	vmov.f32	s23, s8
 801788e:	eeb0 ba64 	vmov.f32	s22, s9
 8017892:	eef0 aa45 	vmov.f32	s21, s10
 8017896:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017898:	2b00      	cmp	r3, #0
 801789a:	dc03      	bgt.n	80178a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801789c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801789e:	2b00      	cmp	r3, #0
 80178a0:	f340 83cb 	ble.w	801803a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 80178a4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80178a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80178aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80178ae:	1e48      	subs	r0, r1, #1
 80178b0:	1e55      	subs	r5, r2, #1
 80178b2:	9b08      	ldr	r3, [sp, #32]
 80178b4:	2b00      	cmp	r3, #0
 80178b6:	f340 81a3 	ble.w	8017c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80178ba:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80178bc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80178be:	1436      	asrs	r6, r6, #16
 80178c0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80178c4:	d406      	bmi.n	80178d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80178c6:	4286      	cmp	r6, r0
 80178c8:	da04      	bge.n	80178d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80178ca:	2b00      	cmp	r3, #0
 80178cc:	db02      	blt.n	80178d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80178ce:	42ab      	cmp	r3, r5
 80178d0:	f2c0 8197 	blt.w	8017c02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80178d4:	3601      	adds	r6, #1
 80178d6:	f100 8184 	bmi.w	8017be2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80178da:	42b1      	cmp	r1, r6
 80178dc:	f2c0 8181 	blt.w	8017be2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80178e0:	3301      	adds	r3, #1
 80178e2:	f100 817e 	bmi.w	8017be2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80178e6:	429a      	cmp	r2, r3
 80178e8:	f2c0 817b 	blt.w	8017be2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80178ec:	9b08      	ldr	r3, [sp, #32]
 80178ee:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80178f0:	9313      	str	r3, [sp, #76]	; 0x4c
 80178f2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80178f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80178f8:	2b00      	cmp	r3, #0
 80178fa:	f340 81a4 	ble.w	8017c46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80178fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017900:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8017902:	1418      	asrs	r0, r3, #16
 8017904:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017906:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801790a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801790c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017910:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017912:	142d      	asrs	r5, r5, #16
 8017914:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8017918:	f100 81f8 	bmi.w	8017d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801791c:	f102 3eff 	add.w	lr, r2, #4294967295
 8017920:	4575      	cmp	r5, lr
 8017922:	f280 81f3 	bge.w	8017d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017926:	2800      	cmp	r0, #0
 8017928:	f2c0 81f0 	blt.w	8017d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801792c:	f103 3eff 	add.w	lr, r3, #4294967295
 8017930:	4570      	cmp	r0, lr
 8017932:	f280 81eb 	bge.w	8017d0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017936:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017938:	b212      	sxth	r2, r2
 801793a:	fb00 5002 	mla	r0, r0, r2, r5
 801793e:	fa1f fe81 	uxth.w	lr, r1
 8017942:	eb03 0a00 	add.w	sl, r3, r0
 8017946:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801794a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801794e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017952:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8017956:	b29b      	uxth	r3, r3
 8017958:	f1bc 0f00 	cmp.w	ip, #0
 801795c:	f000 81b9 	beq.w	8017cd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8017960:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017964:	940d      	str	r4, [sp, #52]	; 0x34
 8017966:	eb0a 0b02 	add.w	fp, sl, r2
 801796a:	fa1f fa8c 	uxth.w	sl, ip
 801796e:	fb0a fe0e 	mul.w	lr, sl, lr
 8017972:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017976:	fa1f fa8a 	uxth.w	sl, sl
 801797a:	eba5 050e 	sub.w	r5, r5, lr
 801797e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017982:	940e      	str	r4, [sp, #56]	; 0x38
 8017984:	eba3 030a 	sub.w	r3, r3, sl
 8017988:	b2ad      	uxth	r5, r5
 801798a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801798c:	b29b      	uxth	r3, r3
 801798e:	fb08 f505 	mul.w	r5, r8, r5
 8017992:	fb09 5303 	mla	r3, r9, r3, r5
 8017996:	fb0a 3304 	mla	r3, sl, r4, r3
 801799a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801799c:	fb0e 3304 	mla	r3, lr, r4, r3
 80179a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80179a4:	2b00      	cmp	r3, #0
 80179a6:	f000 810f 	beq.w	8017bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80179aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80179ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80179b0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80179b4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80179b8:	f000 8190 	beq.w	8017cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 80179bc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80179c0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80179c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80179c8:	fb09 f000 	mul.w	r0, r9, r0
 80179cc:	fb0a fe0e 	mul.w	lr, sl, lr
 80179d0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80179d4:	f100 0b20 	add.w	fp, r0, #32
 80179d8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80179dc:	44ce      	add	lr, r9
 80179de:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80179e2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80179e6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80179ea:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80179ee:	ea4e 0909 	orr.w	r9, lr, r9
 80179f2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80179f6:	8868      	ldrh	r0, [r5, #2]
 80179f8:	d019      	beq.n	8017a2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80179fa:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80179fe:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017a02:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017a06:	fb08 f800 	mul.w	r8, r8, r0
 8017a0a:	fb0a fe0e 	mul.w	lr, sl, lr
 8017a0e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8017a12:	f108 0b20 	add.w	fp, r8, #32
 8017a16:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017a1a:	4486      	add	lr, r0
 8017a1c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8017a20:	0a00      	lsrs	r0, r0, #8
 8017a22:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017a26:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017a2a:	ea4e 0000 	orr.w	r0, lr, r0
 8017a2e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017a32:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8017a36:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017a3a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017a3e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017a42:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017a46:	ea4e 0909 	orr.w	r9, lr, r9
 8017a4a:	ea4a 0000 	orr.w	r0, sl, r0
 8017a4e:	f1bc 0f00 	cmp.w	ip, #0
 8017a52:	f000 8145 	beq.w	8017ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8017a56:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8017a5a:	3a01      	subs	r2, #1
 8017a5c:	0052      	lsls	r2, r2, #1
 8017a5e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017a60:	3202      	adds	r2, #2
 8017a62:	2cff      	cmp	r4, #255	; 0xff
 8017a64:	eb05 0e02 	add.w	lr, r5, r2
 8017a68:	5aaa      	ldrh	r2, [r5, r2]
 8017a6a:	d018      	beq.n	8017a9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8017a6c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8017a70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017a74:	fb04 fa02 	mul.w	sl, r4, r2
 8017a78:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017a7c:	fb08 f805 	mul.w	r8, r8, r5
 8017a80:	f10a 0520 	add.w	r5, sl, #32
 8017a84:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8017a88:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8017a8c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017a90:	4442      	add	r2, r8
 8017a92:	0a2d      	lsrs	r5, r5, #8
 8017a94:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8017a98:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017a9c:	432a      	orrs	r2, r5
 8017a9e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017aa0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8017aa4:	2cff      	cmp	r4, #255	; 0xff
 8017aa6:	d01a      	beq.n	8017ade <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8017aa8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8017aac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017ab0:	fb04 fa05 	mul.w	sl, r4, r5
 8017ab4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017ab8:	fb08 f80e 	mul.w	r8, r8, lr
 8017abc:	f10a 0e20 	add.w	lr, sl, #32
 8017ac0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8017ac4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8017ac8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017acc:	4445      	add	r5, r8
 8017ace:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017ad2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8017ad6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8017ada:	ea45 050e 	orr.w	r5, r5, lr
 8017ade:	fb1c fe01 	smulbb	lr, ip, r1
 8017ae2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8017ae6:	f1cc 0810 	rsb	r8, ip, #16
 8017aea:	eba8 0801 	sub.w	r8, r8, r1
 8017aee:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017af2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8017af6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8017afa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8017afe:	4341      	muls	r1, r0
 8017b00:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017b04:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017b08:	ea4a 0202 	orr.w	r2, sl, r2
 8017b0c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8017b10:	fb09 1108 	mla	r1, r9, r8, r1
 8017b14:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017b18:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8017b1c:	fb0c 1102 	mla	r1, ip, r2, r1
 8017b20:	ea4b 0505 	orr.w	r5, fp, r5
 8017b24:	fb0e 1e05 	mla	lr, lr, r5, r1
 8017b28:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8017b2c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017b30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017b34:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017b38:	ea42 0e0e 	orr.w	lr, r2, lr
 8017b3c:	fa1f f28e 	uxth.w	r2, lr
 8017b40:	2bff      	cmp	r3, #255	; 0xff
 8017b42:	d103      	bne.n	8017b4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8017b44:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017b46:	29ff      	cmp	r1, #255	; 0xff
 8017b48:	f000 80de 	beq.w	8017d08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8017b4c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017b4e:	8838      	ldrh	r0, [r7, #0]
 8017b50:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017b52:	434b      	muls	r3, r1
 8017b54:	f103 0c01 	add.w	ip, r3, #1
 8017b58:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8017b5c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017b60:	fa5f fc83 	uxtb.w	ip, r3
 8017b64:	1203      	asrs	r3, r0, #8
 8017b66:	1215      	asrs	r5, r2, #8
 8017b68:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017b6c:	fb13 f30c 	smulbb	r3, r3, ip
 8017b70:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017b74:	fb05 3501 	mla	r5, r5, r1, r3
 8017b78:	10c3      	asrs	r3, r0, #3
 8017b7a:	10d1      	asrs	r1, r2, #3
 8017b7c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017b80:	fb13 f30c 	smulbb	r3, r3, ip
 8017b84:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017b88:	fb01 3104 	mla	r1, r1, r4, r3
 8017b8c:	00c3      	lsls	r3, r0, #3
 8017b8e:	00d2      	lsls	r2, r2, #3
 8017b90:	b2db      	uxtb	r3, r3
 8017b92:	b2d2      	uxtb	r2, r2
 8017b94:	fb13 f30c 	smulbb	r3, r3, ip
 8017b98:	b2ad      	uxth	r5, r5
 8017b9a:	fb02 3304 	mla	r3, r2, r4, r3
 8017b9e:	b29a      	uxth	r2, r3
 8017ba0:	1c6b      	adds	r3, r5, #1
 8017ba2:	b289      	uxth	r1, r1
 8017ba4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017ba8:	1c53      	adds	r3, r2, #1
 8017baa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017bae:	1c4a      	adds	r2, r1, #1
 8017bb0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017bb4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017bb8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017bbc:	0949      	lsrs	r1, r1, #5
 8017bbe:	432b      	orrs	r3, r5
 8017bc0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017bc4:	430b      	orrs	r3, r1
 8017bc6:	803b      	strh	r3, [r7, #0]
 8017bc8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017bca:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017bcc:	4413      	add	r3, r2
 8017bce:	9329      	str	r3, [sp, #164]	; 0xa4
 8017bd0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017bd2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017bd4:	441a      	add	r2, r3
 8017bd6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017bd8:	922a      	str	r2, [sp, #168]	; 0xa8
 8017bda:	3b01      	subs	r3, #1
 8017bdc:	3702      	adds	r7, #2
 8017bde:	9313      	str	r3, [sp, #76]	; 0x4c
 8017be0:	e689      	b.n	80178f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8017be2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017be4:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8017be6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8017be8:	4433      	add	r3, r6
 8017bea:	9329      	str	r3, [sp, #164]	; 0xa4
 8017bec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017bee:	441c      	add	r4, r3
 8017bf0:	9b08      	ldr	r3, [sp, #32]
 8017bf2:	942a      	str	r4, [sp, #168]	; 0xa8
 8017bf4:	3b01      	subs	r3, #1
 8017bf6:	9308      	str	r3, [sp, #32]
 8017bf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017bfa:	3302      	adds	r3, #2
 8017bfc:	9309      	str	r3, [sp, #36]	; 0x24
 8017bfe:	e658      	b.n	80178b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017c00:	d028      	beq.n	8017c54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8017c02:	9b08      	ldr	r3, [sp, #32]
 8017c04:	982b      	ldr	r0, [sp, #172]	; 0xac
 8017c06:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8017c08:	3b01      	subs	r3, #1
 8017c0a:	fb00 5003 	mla	r0, r0, r3, r5
 8017c0e:	1400      	asrs	r0, r0, #16
 8017c10:	f53f ae6c 	bmi.w	80178ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017c14:	3901      	subs	r1, #1
 8017c16:	4288      	cmp	r0, r1
 8017c18:	f6bf ae68 	bge.w	80178ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017c1c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8017c1e:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8017c20:	fb01 0303 	mla	r3, r1, r3, r0
 8017c24:	141b      	asrs	r3, r3, #16
 8017c26:	f53f ae61 	bmi.w	80178ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017c2a:	3a01      	subs	r2, #1
 8017c2c:	4293      	cmp	r3, r2
 8017c2e:	f6bf ae5d 	bge.w	80178ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017c32:	9b08      	ldr	r3, [sp, #32]
 8017c34:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8017c38:	9313      	str	r3, [sp, #76]	; 0x4c
 8017c3a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017c3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017c40:	2b00      	cmp	r3, #0
 8017c42:	f300 8082 	bgt.w	8017d4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8017c46:	9b08      	ldr	r3, [sp, #32]
 8017c48:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017c4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017c4e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017c52:	9309      	str	r3, [sp, #36]	; 0x24
 8017c54:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017c56:	2b00      	cmp	r3, #0
 8017c58:	f340 81ef 	ble.w	801803a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8017c5c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017c60:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017c64:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017c68:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017c6a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017c6e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017c72:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017c76:	eef0 6a48 	vmov.f32	s13, s16
 8017c7a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017c7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017c82:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017c86:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8017c8a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017c8e:	eef0 6a68 	vmov.f32	s13, s17
 8017c92:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017c96:	ee18 2a10 	vmov	r2, s16
 8017c9a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017c9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017ca2:	ee18 2a90 	vmov	r2, s17
 8017ca6:	932b      	str	r3, [sp, #172]	; 0xac
 8017ca8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017caa:	fb92 f3f3 	sdiv	r3, r2, r3
 8017cae:	932c      	str	r3, [sp, #176]	; 0xb0
 8017cb0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017cb2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017cb4:	3b01      	subs	r3, #1
 8017cb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017cba:	9311      	str	r3, [sp, #68]	; 0x44
 8017cbc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017cbe:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8017cc2:	bf08      	it	eq
 8017cc4:	4613      	moveq	r3, r2
 8017cc6:	9308      	str	r3, [sp, #32]
 8017cc8:	eef0 8a67 	vmov.f32	s17, s15
 8017ccc:	eeb0 8a47 	vmov.f32	s16, s14
 8017cd0:	e5e1      	b.n	8017896 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017cd2:	fb08 f505 	mul.w	r5, r8, r5
 8017cd6:	fb09 5303 	mla	r3, r9, r3, r5
 8017cda:	e661      	b.n	80179a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8017cdc:	4681      	mov	r9, r0
 8017cde:	e688      	b.n	80179f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8017ce0:	f1c1 0210 	rsb	r2, r1, #16
 8017ce4:	4341      	muls	r1, r0
 8017ce6:	fb09 1902 	mla	r9, r9, r2, r1
 8017cea:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017cee:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017cf2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017cf6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017cfa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017cfe:	ea42 0909 	orr.w	r9, r2, r9
 8017d02:	fa1f f289 	uxth.w	r2, r9
 8017d06:	e71b      	b.n	8017b40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8017d08:	803a      	strh	r2, [r7, #0]
 8017d0a:	e75d      	b.n	8017bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017d0c:	f115 0e01 	adds.w	lr, r5, #1
 8017d10:	f53f af5a 	bmi.w	8017bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017d14:	4572      	cmp	r2, lr
 8017d16:	f6ff af57 	blt.w	8017bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017d1a:	f110 0e01 	adds.w	lr, r0, #1
 8017d1e:	f53f af53 	bmi.w	8017bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017d22:	4573      	cmp	r3, lr
 8017d24:	f6ff af50 	blt.w	8017bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017d28:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017d2a:	9502      	str	r5, [sp, #8]
 8017d2c:	b21b      	sxth	r3, r3
 8017d2e:	b212      	sxth	r2, r2
 8017d30:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8017d34:	9301      	str	r3, [sp, #4]
 8017d36:	9200      	str	r2, [sp, #0]
 8017d38:	e9cd c405 	strd	ip, r4, [sp, #20]
 8017d3c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8017d40:	4639      	mov	r1, r7
 8017d42:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017d44:	f7ff fbd2 	bl	80174ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8017d48:	e73e      	b.n	8017bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017d4a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017d4c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017d50:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017d52:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8017d56:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017d58:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017d5c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017d5e:	141f      	asrs	r7, r3, #16
 8017d60:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017d62:	141b      	asrs	r3, r3, #16
 8017d64:	fb01 3707 	mla	r7, r1, r7, r3
 8017d68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017d6a:	fa1f fc82 	uxth.w	ip, r2
 8017d6e:	eb03 0a07 	add.w	sl, r3, r7
 8017d72:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8017d76:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017d7a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017d7e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017d82:	b29b      	uxth	r3, r3
 8017d84:	2d00      	cmp	r5, #0
 8017d86:	f000 813d 	beq.w	8018004 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8017d8a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8017d8e:	940f      	str	r4, [sp, #60]	; 0x3c
 8017d90:	eb0a 0b01 	add.w	fp, sl, r1
 8017d94:	fa1f fa85 	uxth.w	sl, r5
 8017d98:	fb0a fc0c 	mul.w	ip, sl, ip
 8017d9c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017da0:	fa1f fa8a 	uxth.w	sl, sl
 8017da4:	eba0 000c 	sub.w	r0, r0, ip
 8017da8:	eba3 030a 	sub.w	r3, r3, sl
 8017dac:	b280      	uxth	r0, r0
 8017dae:	fb08 f000 	mul.w	r0, r8, r0
 8017db2:	b29b      	uxth	r3, r3
 8017db4:	fb09 0303 	mla	r3, r9, r3, r0
 8017db8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017dba:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017dbe:	9410      	str	r4, [sp, #64]	; 0x40
 8017dc0:	fb0a 3300 	mla	r3, sl, r0, r3
 8017dc4:	fb0c 3304 	mla	r3, ip, r4, r3
 8017dc8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017dcc:	2b00      	cmp	r3, #0
 8017dce:	f000 810b 	beq.w	8017fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8017dd2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017dd4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017dd6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017dda:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8017dde:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017de2:	f000 8114 	beq.w	801800e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8017de6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017dea:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017dee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017df2:	fb09 f707 	mul.w	r7, r9, r7
 8017df6:	fb0a fc0c 	mul.w	ip, sl, ip
 8017dfa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017dfe:	f107 0b20 	add.w	fp, r7, #32
 8017e02:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017e06:	44cc      	add	ip, r9
 8017e08:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017e0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017e10:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017e14:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017e18:	ea4c 0909 	orr.w	r9, ip, r9
 8017e1c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017e20:	8847      	ldrh	r7, [r0, #2]
 8017e22:	d019      	beq.n	8017e58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8017e24:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017e28:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017e2c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017e30:	fb08 f807 	mul.w	r8, r8, r7
 8017e34:	fb0a fc0c 	mul.w	ip, sl, ip
 8017e38:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017e3c:	f108 0b20 	add.w	fp, r8, #32
 8017e40:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017e44:	44bc      	add	ip, r7
 8017e46:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8017e4a:	0a3f      	lsrs	r7, r7, #8
 8017e4c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017e50:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017e54:	ea4c 0707 	orr.w	r7, ip, r7
 8017e58:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8017e5c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017e60:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017e64:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017e68:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017e6c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017e70:	ea4c 0909 	orr.w	r9, ip, r9
 8017e74:	ea4a 0707 	orr.w	r7, sl, r7
 8017e78:	2d00      	cmp	r5, #0
 8017e7a:	f000 80ca 	beq.w	8018012 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8017e7e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8017e82:	3901      	subs	r1, #1
 8017e84:	0049      	lsls	r1, r1, #1
 8017e86:	3102      	adds	r1, #2
 8017e88:	eb00 0c01 	add.w	ip, r0, r1
 8017e8c:	5a41      	ldrh	r1, [r0, r1]
 8017e8e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017e90:	28ff      	cmp	r0, #255	; 0xff
 8017e92:	d019      	beq.n	8017ec8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8017e94:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017e96:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8017e9a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017e9e:	fb04 fa01 	mul.w	sl, r4, r1
 8017ea2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017ea6:	fb08 f800 	mul.w	r8, r8, r0
 8017eaa:	f10a 0020 	add.w	r0, sl, #32
 8017eae:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8017eb2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8017eb6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017eba:	4441      	add	r1, r8
 8017ebc:	0a00      	lsrs	r0, r0, #8
 8017ebe:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017ec2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017ec6:	4301      	orrs	r1, r0
 8017ec8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017eca:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8017ece:	2cff      	cmp	r4, #255	; 0xff
 8017ed0:	d01a      	beq.n	8017f08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8017ed2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8017ed6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017eda:	fb04 fa00 	mul.w	sl, r4, r0
 8017ede:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017ee2:	fb08 f80c 	mul.w	r8, r8, ip
 8017ee6:	f10a 0c20 	add.w	ip, sl, #32
 8017eea:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8017eee:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8017ef2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017ef6:	4440      	add	r0, r8
 8017ef8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017efc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017f00:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017f04:	ea40 000c 	orr.w	r0, r0, ip
 8017f08:	fb15 fc02 	smulbb	ip, r5, r2
 8017f0c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017f10:	f1c5 0810 	rsb	r8, r5, #16
 8017f14:	eba8 0802 	sub.w	r8, r8, r2
 8017f18:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017f1c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8017f20:	437a      	muls	r2, r7
 8017f22:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8017f26:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8017f2a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017f2e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017f32:	fb09 2208 	mla	r2, r9, r8, r2
 8017f36:	ea4a 0101 	orr.w	r1, sl, r1
 8017f3a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8017f3e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017f42:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017f46:	fb05 2201 	mla	r2, r5, r1, r2
 8017f4a:	ea4b 0000 	orr.w	r0, fp, r0
 8017f4e:	fb0c 2200 	mla	r2, ip, r0, r2
 8017f52:	0d57      	lsrs	r7, r2, #21
 8017f54:	0952      	lsrs	r2, r2, #5
 8017f56:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017f5a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017f5e:	433a      	orrs	r2, r7
 8017f60:	2bff      	cmp	r3, #255	; 0xff
 8017f62:	b292      	uxth	r2, r2
 8017f64:	d102      	bne.n	8017f6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8017f66:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017f68:	29ff      	cmp	r1, #255	; 0xff
 8017f6a:	d063      	beq.n	8018034 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8017f6c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017f6e:	f8be 1000 	ldrh.w	r1, [lr]
 8017f72:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017f74:	4343      	muls	r3, r0
 8017f76:	1c58      	adds	r0, r3, #1
 8017f78:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8017f7c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017f80:	1208      	asrs	r0, r1, #8
 8017f82:	b2db      	uxtb	r3, r3
 8017f84:	1215      	asrs	r5, r2, #8
 8017f86:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017f8a:	fb10 f003 	smulbb	r0, r0, r3
 8017f8e:	10cf      	asrs	r7, r1, #3
 8017f90:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017f94:	00c9      	lsls	r1, r1, #3
 8017f96:	fb05 0504 	mla	r5, r5, r4, r0
 8017f9a:	b2c9      	uxtb	r1, r1
 8017f9c:	10d0      	asrs	r0, r2, #3
 8017f9e:	00d2      	lsls	r2, r2, #3
 8017fa0:	fb11 f103 	smulbb	r1, r1, r3
 8017fa4:	b2d2      	uxtb	r2, r2
 8017fa6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017faa:	fb02 1204 	mla	r2, r2, r4, r1
 8017fae:	fb17 f703 	smulbb	r7, r7, r3
 8017fb2:	b2ad      	uxth	r5, r5
 8017fb4:	b292      	uxth	r2, r2
 8017fb6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017fba:	fb00 7004 	mla	r0, r0, r4, r7
 8017fbe:	1c6b      	adds	r3, r5, #1
 8017fc0:	1c57      	adds	r7, r2, #1
 8017fc2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017fc6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017fca:	b280      	uxth	r0, r0
 8017fcc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017fd0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017fd4:	433d      	orrs	r5, r7
 8017fd6:	1c47      	adds	r7, r0, #1
 8017fd8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8017fdc:	097f      	lsrs	r7, r7, #5
 8017fde:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017fe2:	433d      	orrs	r5, r7
 8017fe4:	f8ae 5000 	strh.w	r5, [lr]
 8017fe8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017fea:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017fec:	4413      	add	r3, r2
 8017fee:	9329      	str	r3, [sp, #164]	; 0xa4
 8017ff0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017ff2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017ff4:	441a      	add	r2, r3
 8017ff6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017ff8:	922a      	str	r2, [sp, #168]	; 0xa8
 8017ffa:	3b01      	subs	r3, #1
 8017ffc:	f10e 0e02 	add.w	lr, lr, #2
 8018000:	9313      	str	r3, [sp, #76]	; 0x4c
 8018002:	e61c      	b.n	8017c3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8018004:	fb08 f000 	mul.w	r0, r8, r0
 8018008:	fb09 0303 	mla	r3, r9, r3, r0
 801800c:	e6dc      	b.n	8017dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 801800e:	46b9      	mov	r9, r7
 8018010:	e704      	b.n	8017e1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8018012:	f1c2 0110 	rsb	r1, r2, #16
 8018016:	437a      	muls	r2, r7
 8018018:	fb09 2901 	mla	r9, r9, r1, r2
 801801c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018020:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018024:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8018028:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801802c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018030:	4302      	orrs	r2, r0
 8018032:	e795      	b.n	8017f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8018034:	f8ae 2000 	strh.w	r2, [lr]
 8018038:	e7d6      	b.n	8017fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 801803a:	b017      	add	sp, #92	; 0x5c
 801803c:	ecbd 8b08 	vpop	{d8-d11}
 8018040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8018044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018048:	b085      	sub	sp, #20
 801804a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801804e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8018052:	9103      	str	r1, [sp, #12]
 8018054:	fb05 7106 	mla	r1, r5, r6, r7
 8018058:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 801805c:	2d00      	cmp	r5, #0
 801805e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8018062:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8018066:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801806a:	9401      	str	r4, [sp, #4]
 801806c:	eb02 0901 	add.w	r9, r2, r1
 8018070:	f2c0 80c0 	blt.w	80181f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8018074:	45a8      	cmp	r8, r5
 8018076:	f340 80bd 	ble.w	80181f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801807a:	2f00      	cmp	r7, #0
 801807c:	f2c0 80b6 	blt.w	80181ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8018080:	42be      	cmp	r6, r7
 8018082:	f340 80b3 	ble.w	80181ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8018086:	f812 c001 	ldrb.w	ip, [r2, r1]
 801808a:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 801808e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018092:	d019      	beq.n	80180c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8018094:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8018098:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801809c:	435a      	muls	r2, r3
 801809e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80180a2:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80180a6:	fb0c f403 	mul.w	r4, ip, r3
 80180aa:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80180ae:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80180b2:	441a      	add	r2, r3
 80180b4:	f104 0320 	add.w	r3, r4, #32
 80180b8:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80180bc:	0a1b      	lsrs	r3, r3, #8
 80180be:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80180c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80180c6:	4319      	orrs	r1, r3
 80180c8:	b289      	uxth	r1, r1
 80180ca:	1c7b      	adds	r3, r7, #1
 80180cc:	f100 8097 	bmi.w	80181fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 80180d0:	429e      	cmp	r6, r3
 80180d2:	f340 8094 	ble.w	80181fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 80180d6:	2800      	cmp	r0, #0
 80180d8:	f000 8094 	beq.w	8018204 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 80180dc:	f899 4001 	ldrb.w	r4, [r9, #1]
 80180e0:	9b01      	ldr	r3, [sp, #4]
 80180e2:	2cff      	cmp	r4, #255	; 0xff
 80180e4:	885b      	ldrh	r3, [r3, #2]
 80180e6:	d01b      	beq.n	8018120 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 80180e8:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80180ec:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80180f0:	fb0a f202 	mul.w	r2, sl, r2
 80180f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80180f8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80180fc:	fb04 fa03 	mul.w	sl, r4, r3
 8018100:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8018104:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8018108:	441a      	add	r2, r3
 801810a:	f10a 0320 	add.w	r3, sl, #32
 801810e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018112:	0a1b      	lsrs	r3, r3, #8
 8018114:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8018118:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801811c:	ea4b 0303 	orr.w	r3, fp, r3
 8018120:	b29b      	uxth	r3, r3
 8018122:	3501      	adds	r5, #1
 8018124:	d474      	bmi.n	8018210 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8018126:	45a8      	cmp	r8, r5
 8018128:	dd72      	ble.n	8018210 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801812a:	f1be 0f00 	cmp.w	lr, #0
 801812e:	f000 8110 	beq.w	8018352 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 8018132:	2f00      	cmp	r7, #0
 8018134:	db69      	blt.n	801820a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8018136:	42be      	cmp	r6, r7
 8018138:	dd67      	ble.n	801820a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801813a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801813e:	9a01      	ldr	r2, [sp, #4]
 8018140:	2dff      	cmp	r5, #255	; 0xff
 8018142:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8018146:	d01c      	beq.n	8018182 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8018148:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801814c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018150:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018154:	fb05 fa0b 	mul.w	sl, r5, fp
 8018158:	fb08 f802 	mul.w	r8, r8, r2
 801815c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018160:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8018164:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018168:	4490      	add	r8, r2
 801816a:	f10a 0220 	add.w	r2, sl, #32
 801816e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8018172:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018176:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801817a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801817e:	ea4b 0b0a 	orr.w	fp, fp, sl
 8018182:	fa1f fb8b 	uxth.w	fp, fp
 8018186:	3701      	adds	r7, #1
 8018188:	d447      	bmi.n	801821a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801818a:	42be      	cmp	r6, r7
 801818c:	dd45      	ble.n	801821a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801818e:	2800      	cmp	r0, #0
 8018190:	d046      	beq.n	8018220 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8018192:	3601      	adds	r6, #1
 8018194:	9a01      	ldr	r2, [sp, #4]
 8018196:	f819 7006 	ldrb.w	r7, [r9, r6]
 801819a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801819e:	2fff      	cmp	r7, #255	; 0xff
 80181a0:	d01a      	beq.n	80181d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 80181a2:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 80181a6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80181aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80181ae:	fb07 f902 	mul.w	r9, r7, r2
 80181b2:	fb08 f806 	mul.w	r8, r8, r6
 80181b6:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80181ba:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 80181be:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80181c2:	44b0      	add	r8, r6
 80181c4:	f109 0620 	add.w	r6, r9, #32
 80181c8:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80181cc:	0a36      	lsrs	r6, r6, #8
 80181ce:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80181d2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80181d6:	4332      	orrs	r2, r6
 80181d8:	b292      	uxth	r2, r2
 80181da:	280f      	cmp	r0, #15
 80181dc:	d922      	bls.n	8018224 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 80181de:	4b61      	ldr	r3, [pc, #388]	; (8018364 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 80181e0:	4a61      	ldr	r2, [pc, #388]	; (8018368 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 80181e2:	4862      	ldr	r0, [pc, #392]	; (801836c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 80181e4:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 80181e8:	f003 fc98 	bl	801bb1c <__assert_func>
 80181ec:	f04f 0c00 	mov.w	ip, #0
 80181f0:	4661      	mov	r1, ip
 80181f2:	e76a      	b.n	80180ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80181f4:	2400      	movs	r4, #0
 80181f6:	46a4      	mov	ip, r4
 80181f8:	4623      	mov	r3, r4
 80181fa:	4621      	mov	r1, r4
 80181fc:	e791      	b.n	8018122 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 80181fe:	2400      	movs	r4, #0
 8018200:	4623      	mov	r3, r4
 8018202:	e78e      	b.n	8018122 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8018204:	4604      	mov	r4, r0
 8018206:	4603      	mov	r3, r0
 8018208:	e78b      	b.n	8018122 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801820a:	2500      	movs	r5, #0
 801820c:	46ab      	mov	fp, r5
 801820e:	e7ba      	b.n	8018186 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8018210:	2700      	movs	r7, #0
 8018212:	463d      	mov	r5, r7
 8018214:	463a      	mov	r2, r7
 8018216:	46bb      	mov	fp, r7
 8018218:	e7df      	b.n	80181da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801821a:	2700      	movs	r7, #0
 801821c:	463a      	mov	r2, r7
 801821e:	e7dc      	b.n	80181da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8018220:	4607      	mov	r7, r0
 8018222:	4602      	mov	r2, r0
 8018224:	f1be 0f0f 	cmp.w	lr, #15
 8018228:	d8d9      	bhi.n	80181de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801822a:	b286      	uxth	r6, r0
 801822c:	fa1f f98e 	uxth.w	r9, lr
 8018230:	fb06 f809 	mul.w	r8, r6, r9
 8018234:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018238:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801823c:	0136      	lsls	r6, r6, #4
 801823e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018242:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018246:	9601      	str	r6, [sp, #4]
 8018248:	ea4a 0101 	orr.w	r1, sl, r1
 801824c:	fa1f f689 	uxth.w	r6, r9
 8018250:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8018254:	fb10 f90e 	smulbb	r9, r0, lr
 8018258:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801825c:	9602      	str	r6, [sp, #8]
 801825e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018262:	460e      	mov	r6, r1
 8018264:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018268:	f1ce 0110 	rsb	r1, lr, #16
 801826c:	1a09      	subs	r1, r1, r0
 801826e:	ea4a 0303 	orr.w	r3, sl, r3
 8018272:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8018276:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801827a:	4343      	muls	r3, r0
 801827c:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8018280:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018284:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018288:	fb01 3106 	mla	r1, r1, r6, r3
 801828c:	ea4a 0202 	orr.w	r2, sl, r2
 8018290:	fb09 1302 	mla	r3, r9, r2, r1
 8018294:	9a03      	ldr	r2, [sp, #12]
 8018296:	9802      	ldr	r0, [sp, #8]
 8018298:	8811      	ldrh	r1, [r2, #0]
 801829a:	9a01      	ldr	r2, [sp, #4]
 801829c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80182a0:	1a12      	subs	r2, r2, r0
 80182a2:	9801      	ldr	r0, [sp, #4]
 80182a4:	eba0 0608 	sub.w	r6, r0, r8
 80182a8:	b2b6      	uxth	r6, r6
 80182aa:	b292      	uxth	r2, r2
 80182ac:	4374      	muls	r4, r6
 80182ae:	fb0c 4402 	mla	r4, ip, r2, r4
 80182b2:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80182b6:	9a02      	ldr	r2, [sp, #8]
 80182b8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80182bc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80182c0:	fb02 4505 	mla	r5, r2, r5, r4
 80182c4:	ea4a 0b0b 	orr.w	fp, sl, fp
 80182c8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80182cc:	fb0e 3e0b 	mla	lr, lr, fp, r3
 80182d0:	fb08 5707 	mla	r7, r8, r7, r5
 80182d4:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80182d8:	120a      	asrs	r2, r1, #8
 80182da:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80182de:	ea6f 2727 	mvn.w	r7, r7, asr #8
 80182e2:	b2ff      	uxtb	r7, r7
 80182e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80182e8:	10c8      	asrs	r0, r1, #3
 80182ea:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80182ee:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80182f2:	00c9      	lsls	r1, r1, #3
 80182f4:	437a      	muls	r2, r7
 80182f6:	ea43 0e0e 	orr.w	lr, r3, lr
 80182fa:	b2c9      	uxtb	r1, r1
 80182fc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018300:	fa1f f38e 	uxth.w	r3, lr
 8018304:	4378      	muls	r0, r7
 8018306:	434f      	muls	r7, r1
 8018308:	1c51      	adds	r1, r2, #1
 801830a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801830e:	121a      	asrs	r2, r3, #8
 8018310:	f022 0207 	bic.w	r2, r2, #7
 8018314:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8018318:	1c41      	adds	r1, r0, #1
 801831a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801831e:	10d9      	asrs	r1, r3, #3
 8018320:	f021 0103 	bic.w	r1, r1, #3
 8018324:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8018328:	0212      	lsls	r2, r2, #8
 801832a:	00c9      	lsls	r1, r1, #3
 801832c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018330:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8018334:	430a      	orrs	r2, r1
 8018336:	1c79      	adds	r1, r7, #1
 8018338:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801833c:	00db      	lsls	r3, r3, #3
 801833e:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8018342:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8018346:	4313      	orrs	r3, r2
 8018348:	9a03      	ldr	r2, [sp, #12]
 801834a:	8013      	strh	r3, [r2, #0]
 801834c:	b005      	add	sp, #20
 801834e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018352:	280f      	cmp	r0, #15
 8018354:	f63f af43 	bhi.w	80181de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8018358:	4677      	mov	r7, lr
 801835a:	4675      	mov	r5, lr
 801835c:	4672      	mov	r2, lr
 801835e:	46f3      	mov	fp, lr
 8018360:	e763      	b.n	801822a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8018362:	bf00      	nop
 8018364:	0802062e 	.word	0x0802062e
 8018368:	08020bfe 	.word	0x08020bfe
 801836c:	080206b2 	.word	0x080206b2

08018370 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018374:	ed2d 8b08 	vpush	{d8-d11}
 8018378:	b093      	sub	sp, #76	; 0x4c
 801837a:	eeb0 aa40 	vmov.f32	s20, s0
 801837e:	9210      	str	r2, [sp, #64]	; 0x40
 8018380:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018382:	910e      	str	r1, [sp, #56]	; 0x38
 8018384:	9306      	str	r3, [sp, #24]
 8018386:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801838a:	9011      	str	r0, [sp, #68]	; 0x44
 801838c:	6850      	ldr	r0, [r2, #4]
 801838e:	6812      	ldr	r2, [r2, #0]
 8018390:	fb00 1303 	mla	r3, r0, r3, r1
 8018394:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018398:	9307      	str	r3, [sp, #28]
 801839a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801839c:	681b      	ldr	r3, [r3, #0]
 801839e:	9308      	str	r3, [sp, #32]
 80183a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80183a2:	685b      	ldr	r3, [r3, #4]
 80183a4:	9309      	str	r3, [sp, #36]	; 0x24
 80183a6:	eef0 9a60 	vmov.f32	s19, s1
 80183aa:	eeb0 9a41 	vmov.f32	s18, s2
 80183ae:	eeb0 8a62 	vmov.f32	s16, s5
 80183b2:	eef0 8a43 	vmov.f32	s17, s6
 80183b6:	eef0 ba44 	vmov.f32	s23, s8
 80183ba:	eeb0 ba64 	vmov.f32	s22, s9
 80183be:	eef0 aa45 	vmov.f32	s21, s10
 80183c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80183c4:	2b00      	cmp	r3, #0
 80183c6:	dc03      	bgt.n	80183d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80183c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80183ca:	2b00      	cmp	r3, #0
 80183cc:	f340 83b4 	ble.w	8018b38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 80183d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80183d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80183d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80183da:	1e48      	subs	r0, r1, #1
 80183dc:	1e55      	subs	r5, r2, #1
 80183de:	9b06      	ldr	r3, [sp, #24]
 80183e0:	2b00      	cmp	r3, #0
 80183e2:	f340 8163 	ble.w	80186ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 80183e6:	9e25      	ldr	r6, [sp, #148]	; 0x94
 80183e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80183ea:	1436      	asrs	r6, r6, #16
 80183ec:	ea4f 4323 	mov.w	r3, r3, asr #16
 80183f0:	d406      	bmi.n	8018400 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80183f2:	4286      	cmp	r6, r0
 80183f4:	da04      	bge.n	8018400 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80183f6:	2b00      	cmp	r3, #0
 80183f8:	db02      	blt.n	8018400 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80183fa:	42ab      	cmp	r3, r5
 80183fc:	f2c0 8157 	blt.w	80186ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018400:	3601      	adds	r6, #1
 8018402:	f100 8144 	bmi.w	801868e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8018406:	42b1      	cmp	r1, r6
 8018408:	f2c0 8141 	blt.w	801868e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801840c:	3301      	adds	r3, #1
 801840e:	f100 813e 	bmi.w	801868e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8018412:	429a      	cmp	r2, r3
 8018414:	f2c0 813b 	blt.w	801868e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8018418:	9b06      	ldr	r3, [sp, #24]
 801841a:	9f07      	ldr	r7, [sp, #28]
 801841c:	930f      	str	r3, [sp, #60]	; 0x3c
 801841e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018422:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018424:	2b00      	cmp	r3, #0
 8018426:	f340 8164 	ble.w	80186f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 801842a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801842c:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801842e:	1418      	asrs	r0, r3, #16
 8018430:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018432:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8018436:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018438:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801843c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801843e:	142d      	asrs	r5, r5, #16
 8018440:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8018444:	f100 81ee 	bmi.w	8018824 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018448:	f102 3eff 	add.w	lr, r2, #4294967295
 801844c:	4575      	cmp	r5, lr
 801844e:	f280 81e9 	bge.w	8018824 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018452:	2800      	cmp	r0, #0
 8018454:	f2c0 81e6 	blt.w	8018824 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018458:	f103 3eff 	add.w	lr, r3, #4294967295
 801845c:	4570      	cmp	r0, lr
 801845e:	f280 81e1 	bge.w	8018824 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018462:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018464:	b212      	sxth	r2, r2
 8018466:	fb00 5002 	mla	r0, r0, r2, r5
 801846a:	fa1f fe81 	uxth.w	lr, r1
 801846e:	eb03 0a00 	add.w	sl, r3, r0
 8018472:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8018476:	f813 9000 	ldrb.w	r9, [r3, r0]
 801847a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801847e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8018482:	b29b      	uxth	r3, r3
 8018484:	f1bc 0f00 	cmp.w	ip, #0
 8018488:	f000 8179 	beq.w	801877e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 801848c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8018490:	940a      	str	r4, [sp, #40]	; 0x28
 8018492:	eb0a 0b02 	add.w	fp, sl, r2
 8018496:	fa1f fa8c 	uxth.w	sl, ip
 801849a:	fb0a fe0e 	mul.w	lr, sl, lr
 801849e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80184a2:	fa1f fa8a 	uxth.w	sl, sl
 80184a6:	eba5 050e 	sub.w	r5, r5, lr
 80184aa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80184ae:	940b      	str	r4, [sp, #44]	; 0x2c
 80184b0:	eba3 030a 	sub.w	r3, r3, sl
 80184b4:	b2ad      	uxth	r5, r5
 80184b6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80184b8:	b29b      	uxth	r3, r3
 80184ba:	fb08 f505 	mul.w	r5, r8, r5
 80184be:	fb09 5303 	mla	r3, r9, r3, r5
 80184c2:	fb0a 3304 	mla	r3, sl, r4, r3
 80184c6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80184c8:	fb0e 3304 	mla	r3, lr, r4, r3
 80184cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80184d0:	2b00      	cmp	r3, #0
 80184d2:	f000 80cf 	beq.w	8018674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80184d6:	9c08      	ldr	r4, [sp, #32]
 80184d8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80184dc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80184e0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80184e4:	f000 8150 	beq.w	8018788 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 80184e8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80184ec:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80184f0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80184f4:	fb09 f000 	mul.w	r0, r9, r0
 80184f8:	fb0a fe0e 	mul.w	lr, sl, lr
 80184fc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8018500:	f100 0b20 	add.w	fp, r0, #32
 8018504:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018508:	44ce      	add	lr, r9
 801850a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801850e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018512:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018516:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801851a:	ea4e 0909 	orr.w	r9, lr, r9
 801851e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018522:	8868      	ldrh	r0, [r5, #2]
 8018524:	d019      	beq.n	801855a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8018526:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801852a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801852e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018532:	fb08 f800 	mul.w	r8, r8, r0
 8018536:	fb0a fe0e 	mul.w	lr, sl, lr
 801853a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801853e:	f108 0b20 	add.w	fp, r8, #32
 8018542:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018546:	4486      	add	lr, r0
 8018548:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801854c:	0a00      	lsrs	r0, r0, #8
 801854e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018552:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018556:	ea4e 0000 	orr.w	r0, lr, r0
 801855a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801855e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8018562:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018566:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801856a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801856e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018572:	ea4e 0909 	orr.w	r9, lr, r9
 8018576:	ea4a 0000 	orr.w	r0, sl, r0
 801857a:	f1bc 0f00 	cmp.w	ip, #0
 801857e:	f000 8105 	beq.w	801878c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8018582:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8018586:	3a01      	subs	r2, #1
 8018588:	0052      	lsls	r2, r2, #1
 801858a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801858c:	3202      	adds	r2, #2
 801858e:	2cff      	cmp	r4, #255	; 0xff
 8018590:	eb05 0e02 	add.w	lr, r5, r2
 8018594:	5aaa      	ldrh	r2, [r5, r2]
 8018596:	d018      	beq.n	80185ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8018598:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801859c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80185a0:	fb04 fa02 	mul.w	sl, r4, r2
 80185a4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80185a8:	fb08 f805 	mul.w	r8, r8, r5
 80185ac:	f10a 0520 	add.w	r5, sl, #32
 80185b0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80185b4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80185b8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80185bc:	4442      	add	r2, r8
 80185be:	0a2d      	lsrs	r5, r5, #8
 80185c0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80185c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80185c8:	432a      	orrs	r2, r5
 80185ca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80185cc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80185d0:	2cff      	cmp	r4, #255	; 0xff
 80185d2:	d01a      	beq.n	801860a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80185d4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80185d8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80185dc:	fb04 fa05 	mul.w	sl, r4, r5
 80185e0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80185e4:	fb08 f80e 	mul.w	r8, r8, lr
 80185e8:	f10a 0e20 	add.w	lr, sl, #32
 80185ec:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80185f0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80185f4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80185f8:	4445      	add	r5, r8
 80185fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80185fe:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8018602:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8018606:	ea45 050e 	orr.w	r5, r5, lr
 801860a:	fb1c fe01 	smulbb	lr, ip, r1
 801860e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8018612:	f1cc 0810 	rsb	r8, ip, #16
 8018616:	eba8 0801 	sub.w	r8, r8, r1
 801861a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801861e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8018622:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8018626:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801862a:	4341      	muls	r1, r0
 801862c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018630:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018634:	ea4a 0202 	orr.w	r2, sl, r2
 8018638:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801863c:	fb09 1108 	mla	r1, r9, r8, r1
 8018640:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018644:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018648:	fb0c 1102 	mla	r1, ip, r2, r1
 801864c:	ea4b 0505 	orr.w	r5, fp, r5
 8018650:	fb0e 1e05 	mla	lr, lr, r5, r1
 8018654:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8018658:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801865c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018660:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018664:	ea42 0e0e 	orr.w	lr, r2, lr
 8018668:	fa1f f28e 	uxth.w	r2, lr
 801866c:	2bff      	cmp	r3, #255	; 0xff
 801866e:	f040 80a1 	bne.w	80187b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 8018672:	803a      	strh	r2, [r7, #0]
 8018674:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018676:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8018678:	4413      	add	r3, r2
 801867a:	9325      	str	r3, [sp, #148]	; 0x94
 801867c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801867e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018680:	441a      	add	r2, r3
 8018682:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018684:	9226      	str	r2, [sp, #152]	; 0x98
 8018686:	3b01      	subs	r3, #1
 8018688:	3702      	adds	r7, #2
 801868a:	930f      	str	r3, [sp, #60]	; 0x3c
 801868c:	e6c9      	b.n	8018422 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801868e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018690:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8018692:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8018694:	4433      	add	r3, r6
 8018696:	9325      	str	r3, [sp, #148]	; 0x94
 8018698:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801869a:	441c      	add	r4, r3
 801869c:	9b06      	ldr	r3, [sp, #24]
 801869e:	9426      	str	r4, [sp, #152]	; 0x98
 80186a0:	3b01      	subs	r3, #1
 80186a2:	9306      	str	r3, [sp, #24]
 80186a4:	9b07      	ldr	r3, [sp, #28]
 80186a6:	3302      	adds	r3, #2
 80186a8:	9307      	str	r3, [sp, #28]
 80186aa:	e698      	b.n	80183de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80186ac:	d028      	beq.n	8018700 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80186ae:	9b06      	ldr	r3, [sp, #24]
 80186b0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80186b2:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80186b4:	3b01      	subs	r3, #1
 80186b6:	fb00 5003 	mla	r0, r0, r3, r5
 80186ba:	1400      	asrs	r0, r0, #16
 80186bc:	f53f aeac 	bmi.w	8018418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80186c0:	3901      	subs	r1, #1
 80186c2:	4288      	cmp	r0, r1
 80186c4:	f6bf aea8 	bge.w	8018418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80186c8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80186ca:	9826      	ldr	r0, [sp, #152]	; 0x98
 80186cc:	fb01 0303 	mla	r3, r1, r3, r0
 80186d0:	141b      	asrs	r3, r3, #16
 80186d2:	f53f aea1 	bmi.w	8018418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80186d6:	3a01      	subs	r2, #1
 80186d8:	4293      	cmp	r3, r2
 80186da:	f6bf ae9d 	bge.w	8018418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80186de:	9b06      	ldr	r3, [sp, #24]
 80186e0:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80186e4:	930f      	str	r3, [sp, #60]	; 0x3c
 80186e6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80186ea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80186ec:	2b00      	cmp	r3, #0
 80186ee:	f300 80b6 	bgt.w	801885e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80186f2:	9b06      	ldr	r3, [sp, #24]
 80186f4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80186f8:	9b07      	ldr	r3, [sp, #28]
 80186fa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80186fe:	9307      	str	r3, [sp, #28]
 8018700:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018702:	2b00      	cmp	r3, #0
 8018704:	f340 8218 	ble.w	8018b38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8018708:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801870c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018710:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018714:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018716:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801871a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801871e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018722:	eef0 6a48 	vmov.f32	s13, s16
 8018726:	ee69 7a27 	vmul.f32	s15, s18, s15
 801872a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801872e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018732:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8018736:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801873a:	eef0 6a68 	vmov.f32	s13, s17
 801873e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018742:	ee18 2a10 	vmov	r2, s16
 8018746:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801874a:	fb92 f3f3 	sdiv	r3, r2, r3
 801874e:	ee18 2a90 	vmov	r2, s17
 8018752:	9327      	str	r3, [sp, #156]	; 0x9c
 8018754:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018756:	fb92 f3f3 	sdiv	r3, r2, r3
 801875a:	9328      	str	r3, [sp, #160]	; 0xa0
 801875c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801875e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018760:	3b01      	subs	r3, #1
 8018762:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018766:	930e      	str	r3, [sp, #56]	; 0x38
 8018768:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801876a:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 801876e:	bf08      	it	eq
 8018770:	4613      	moveq	r3, r2
 8018772:	9306      	str	r3, [sp, #24]
 8018774:	eef0 8a67 	vmov.f32	s17, s15
 8018778:	eeb0 8a47 	vmov.f32	s16, s14
 801877c:	e621      	b.n	80183c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801877e:	fb08 f505 	mul.w	r5, r8, r5
 8018782:	fb09 5303 	mla	r3, r9, r3, r5
 8018786:	e6a1      	b.n	80184cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8018788:	4681      	mov	r9, r0
 801878a:	e6c8      	b.n	801851e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801878c:	f1c1 0210 	rsb	r2, r1, #16
 8018790:	4341      	muls	r1, r0
 8018792:	fb09 1902 	mla	r9, r9, r2, r1
 8018796:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801879a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801879e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80187a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80187a6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80187aa:	ea42 0909 	orr.w	r9, r2, r9
 80187ae:	fa1f f289 	uxth.w	r2, r9
 80187b2:	e75b      	b.n	801866c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80187b4:	f8b7 c000 	ldrh.w	ip, [r7]
 80187b8:	43db      	mvns	r3, r3
 80187ba:	ea4f 202c 	mov.w	r0, ip, asr #8
 80187be:	fa5f fe83 	uxtb.w	lr, r3
 80187c2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80187c6:	fb00 f00e 	mul.w	r0, r0, lr
 80187ca:	1c41      	adds	r1, r0, #1
 80187cc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80187d0:	1211      	asrs	r1, r2, #8
 80187d2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80187d6:	f021 0107 	bic.w	r1, r1, #7
 80187da:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80187de:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80187e2:	48d8      	ldr	r0, [pc, #864]	; (8018b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 80187e4:	fb05 f50e 	mul.w	r5, r5, lr
 80187e8:	b2c9      	uxtb	r1, r1
 80187ea:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80187ee:	1c69      	adds	r1, r5, #1
 80187f0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80187f4:	10d1      	asrs	r1, r2, #3
 80187f6:	f021 0103 	bic.w	r1, r1, #3
 80187fa:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80187fe:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018802:	b2db      	uxtb	r3, r3
 8018804:	00c9      	lsls	r1, r1, #3
 8018806:	fb03 f30e 	mul.w	r3, r3, lr
 801880a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801880e:	4301      	orrs	r1, r0
 8018810:	1c58      	adds	r0, r3, #1
 8018812:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8018816:	00d2      	lsls	r2, r2, #3
 8018818:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801881c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018820:	430a      	orrs	r2, r1
 8018822:	e726      	b.n	8018672 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018824:	f115 0e01 	adds.w	lr, r5, #1
 8018828:	f53f af24 	bmi.w	8018674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801882c:	4572      	cmp	r2, lr
 801882e:	f6ff af21 	blt.w	8018674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8018832:	f110 0e01 	adds.w	lr, r0, #1
 8018836:	f53f af1d 	bmi.w	8018674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801883a:	4573      	cmp	r3, lr
 801883c:	f6ff af1a 	blt.w	8018674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8018840:	b21b      	sxth	r3, r3
 8018842:	b212      	sxth	r2, r2
 8018844:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8018848:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801884c:	9301      	str	r3, [sp, #4]
 801884e:	9200      	str	r2, [sp, #0]
 8018850:	4639      	mov	r1, r7
 8018852:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8018856:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018858:	f7ff fbf4 	bl	8018044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801885c:	e70a      	b.n	8018674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801885e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018860:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018864:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018866:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801886a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801886c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018870:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018872:	141f      	asrs	r7, r3, #16
 8018874:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018876:	141b      	asrs	r3, r3, #16
 8018878:	fb01 3707 	mla	r7, r1, r7, r3
 801887c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801887e:	fa1f fc82 	uxth.w	ip, r2
 8018882:	eb03 0a07 	add.w	sl, r3, r7
 8018886:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801888a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801888e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018892:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8018896:	b29b      	uxth	r3, r3
 8018898:	2d00      	cmp	r5, #0
 801889a:	f000 80fe 	beq.w	8018a9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 801889e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80188a2:	940c      	str	r4, [sp, #48]	; 0x30
 80188a4:	eb0a 0b01 	add.w	fp, sl, r1
 80188a8:	fa1f fa85 	uxth.w	sl, r5
 80188ac:	fb0a fc0c 	mul.w	ip, sl, ip
 80188b0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80188b4:	fa1f fa8a 	uxth.w	sl, sl
 80188b8:	eba0 000c 	sub.w	r0, r0, ip
 80188bc:	eba3 030a 	sub.w	r3, r3, sl
 80188c0:	b280      	uxth	r0, r0
 80188c2:	fb08 f000 	mul.w	r0, r8, r0
 80188c6:	b29b      	uxth	r3, r3
 80188c8:	fb09 0303 	mla	r3, r9, r3, r0
 80188cc:	980c      	ldr	r0, [sp, #48]	; 0x30
 80188ce:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80188d2:	940d      	str	r4, [sp, #52]	; 0x34
 80188d4:	fb0a 3300 	mla	r3, sl, r0, r3
 80188d8:	fb0c 3304 	mla	r3, ip, r4, r3
 80188dc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80188e0:	2b00      	cmp	r3, #0
 80188e2:	f000 80cc 	beq.w	8018a7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 80188e6:	9808      	ldr	r0, [sp, #32]
 80188e8:	9c08      	ldr	r4, [sp, #32]
 80188ea:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80188ee:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80188f2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80188f6:	f000 80d5 	beq.w	8018aa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80188fa:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80188fe:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018902:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018906:	fb09 f707 	mul.w	r7, r9, r7
 801890a:	fb0a fc0c 	mul.w	ip, sl, ip
 801890e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8018912:	f107 0b20 	add.w	fp, r7, #32
 8018916:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801891a:	44cc      	add	ip, r9
 801891c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018920:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018924:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018928:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801892c:	ea4c 0909 	orr.w	r9, ip, r9
 8018930:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018934:	8847      	ldrh	r7, [r0, #2]
 8018936:	d019      	beq.n	801896c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8018938:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801893c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018940:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018944:	fb08 f807 	mul.w	r8, r8, r7
 8018948:	fb0a fc0c 	mul.w	ip, sl, ip
 801894c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8018950:	f108 0b20 	add.w	fp, r8, #32
 8018954:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018958:	44bc      	add	ip, r7
 801895a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801895e:	0a3f      	lsrs	r7, r7, #8
 8018960:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018964:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018968:	ea4c 0707 	orr.w	r7, ip, r7
 801896c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018970:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8018974:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018978:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801897c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018980:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018984:	ea4c 0909 	orr.w	r9, ip, r9
 8018988:	ea4a 0707 	orr.w	r7, sl, r7
 801898c:	2d00      	cmp	r5, #0
 801898e:	f000 808b 	beq.w	8018aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 8018992:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018996:	3901      	subs	r1, #1
 8018998:	0049      	lsls	r1, r1, #1
 801899a:	3102      	adds	r1, #2
 801899c:	eb00 0c01 	add.w	ip, r0, r1
 80189a0:	5a41      	ldrh	r1, [r0, r1]
 80189a2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80189a4:	28ff      	cmp	r0, #255	; 0xff
 80189a6:	d019      	beq.n	80189dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80189a8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80189aa:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80189ae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80189b2:	fb04 fa01 	mul.w	sl, r4, r1
 80189b6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80189ba:	fb08 f800 	mul.w	r8, r8, r0
 80189be:	f10a 0020 	add.w	r0, sl, #32
 80189c2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80189c6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80189ca:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80189ce:	4441      	add	r1, r8
 80189d0:	0a00      	lsrs	r0, r0, #8
 80189d2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80189d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80189da:	4301      	orrs	r1, r0
 80189dc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80189de:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80189e2:	2cff      	cmp	r4, #255	; 0xff
 80189e4:	d01a      	beq.n	8018a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80189e6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80189ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80189ee:	fb04 fa00 	mul.w	sl, r4, r0
 80189f2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80189f6:	fb08 f80c 	mul.w	r8, r8, ip
 80189fa:	f10a 0c20 	add.w	ip, sl, #32
 80189fe:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8018a02:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8018a06:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018a0a:	4440      	add	r0, r8
 8018a0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018a10:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8018a14:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018a18:	ea40 000c 	orr.w	r0, r0, ip
 8018a1c:	fb15 fc02 	smulbb	ip, r5, r2
 8018a20:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8018a24:	f1c5 0810 	rsb	r8, r5, #16
 8018a28:	eba8 0802 	sub.w	r8, r8, r2
 8018a2c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018a30:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8018a34:	437a      	muls	r2, r7
 8018a36:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018a3a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8018a3e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018a42:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018a46:	fb09 2208 	mla	r2, r9, r8, r2
 8018a4a:	ea4a 0101 	orr.w	r1, sl, r1
 8018a4e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8018a52:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018a56:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018a5a:	fb05 2201 	mla	r2, r5, r1, r2
 8018a5e:	ea4b 0000 	orr.w	r0, fp, r0
 8018a62:	fb0c 2200 	mla	r2, ip, r0, r2
 8018a66:	0d57      	lsrs	r7, r2, #21
 8018a68:	0952      	lsrs	r2, r2, #5
 8018a6a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018a6e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018a72:	433a      	orrs	r2, r7
 8018a74:	2bff      	cmp	r3, #255	; 0xff
 8018a76:	b292      	uxth	r2, r2
 8018a78:	d127      	bne.n	8018aca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8018a7a:	f8ae 2000 	strh.w	r2, [lr]
 8018a7e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018a80:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8018a82:	4413      	add	r3, r2
 8018a84:	9325      	str	r3, [sp, #148]	; 0x94
 8018a86:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8018a88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018a8a:	441a      	add	r2, r3
 8018a8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018a8e:	9226      	str	r2, [sp, #152]	; 0x98
 8018a90:	3b01      	subs	r3, #1
 8018a92:	f10e 0e02 	add.w	lr, lr, #2
 8018a96:	930f      	str	r3, [sp, #60]	; 0x3c
 8018a98:	e627      	b.n	80186ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8018a9a:	fb08 f000 	mul.w	r0, r8, r0
 8018a9e:	fb09 0303 	mla	r3, r9, r3, r0
 8018aa2:	e71b      	b.n	80188dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8018aa4:	46b9      	mov	r9, r7
 8018aa6:	e743      	b.n	8018930 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8018aa8:	f1c2 0110 	rsb	r1, r2, #16
 8018aac:	437a      	muls	r2, r7
 8018aae:	fb09 2901 	mla	r9, r9, r1, r2
 8018ab2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018ab6:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018aba:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8018abe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018ac2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018ac6:	4302      	orrs	r2, r0
 8018ac8:	e7d4      	b.n	8018a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8018aca:	f8be 7000 	ldrh.w	r7, [lr]
 8018ace:	4c1d      	ldr	r4, [pc, #116]	; (8018b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8018ad0:	43db      	mvns	r3, r3
 8018ad2:	1238      	asrs	r0, r7, #8
 8018ad4:	fa5f fc83 	uxtb.w	ip, r3
 8018ad8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018adc:	10fd      	asrs	r5, r7, #3
 8018ade:	fb00 f00c 	mul.w	r0, r0, ip
 8018ae2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018ae6:	fb05 f10c 	mul.w	r1, r5, ip
 8018aea:	1c45      	adds	r5, r0, #1
 8018aec:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018af0:	1215      	asrs	r5, r2, #8
 8018af2:	f025 0507 	bic.w	r5, r5, #7
 8018af6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018afa:	1c4d      	adds	r5, r1, #1
 8018afc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8018b00:	10d1      	asrs	r1, r2, #3
 8018b02:	f021 0103 	bic.w	r1, r1, #3
 8018b06:	00fb      	lsls	r3, r7, #3
 8018b08:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018b0c:	b2db      	uxtb	r3, r3
 8018b0e:	b2c0      	uxtb	r0, r0
 8018b10:	00c9      	lsls	r1, r1, #3
 8018b12:	fb03 f30c 	mul.w	r3, r3, ip
 8018b16:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018b1a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8018b1e:	4308      	orrs	r0, r1
 8018b20:	1c59      	adds	r1, r3, #1
 8018b22:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018b26:	00d2      	lsls	r2, r2, #3
 8018b28:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018b2c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8018b30:	4318      	orrs	r0, r3
 8018b32:	f8ae 0000 	strh.w	r0, [lr]
 8018b36:	e7a2      	b.n	8018a7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8018b38:	b013      	add	sp, #76	; 0x4c
 8018b3a:	ecbd 8b08 	vpop	{d8-d11}
 8018b3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b42:	bf00      	nop
 8018b44:	fffff800 	.word	0xfffff800

08018b48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8018b48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018b4c:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8018b50:	fb0c 4e03 	mla	lr, ip, r3, r4
 8018b54:	f1bc 0f00 	cmp.w	ip, #0
 8018b58:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8018b5c:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8018b60:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8018b64:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8018b68:	8808      	ldrh	r0, [r1, #0]
 8018b6a:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8018b6e:	db2f      	blt.n	8018bd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018b70:	45e2      	cmp	sl, ip
 8018b72:	dd2d      	ble.n	8018bd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018b74:	2c00      	cmp	r4, #0
 8018b76:	db29      	blt.n	8018bcc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018b78:	42a3      	cmp	r3, r4
 8018b7a:	dd27      	ble.n	8018bcc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018b7c:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8018b80:	1c62      	adds	r2, r4, #1
 8018b82:	d428      	bmi.n	8018bd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018b84:	4293      	cmp	r3, r2
 8018b86:	dd26      	ble.n	8018bd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018b88:	b32f      	cbz	r7, 8018bd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018b8a:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8018b8e:	f11c 0c01 	adds.w	ip, ip, #1
 8018b92:	d424      	bmi.n	8018bde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018b94:	45e2      	cmp	sl, ip
 8018b96:	dd22      	ble.n	8018bde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018b98:	2e00      	cmp	r6, #0
 8018b9a:	f000 809d 	beq.w	8018cd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 8018b9e:	2c00      	cmp	r4, #0
 8018ba0:	db1b      	blt.n	8018bda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018ba2:	42a3      	cmp	r3, r4
 8018ba4:	dd19      	ble.n	8018bda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018ba6:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8018baa:	3401      	adds	r4, #1
 8018bac:	d41a      	bmi.n	8018be4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018bae:	42a3      	cmp	r3, r4
 8018bb0:	dd18      	ble.n	8018be4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018bb2:	b1cf      	cbz	r7, 8018be8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8018bb4:	3301      	adds	r3, #1
 8018bb6:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8018bba:	2f0f      	cmp	r7, #15
 8018bbc:	d915      	bls.n	8018bea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8018bbe:	4b49      	ldr	r3, [pc, #292]	; (8018ce4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8018bc0:	4a49      	ldr	r2, [pc, #292]	; (8018ce8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8018bc2:	484a      	ldr	r0, [pc, #296]	; (8018cec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8018bc4:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8018bc8:	f002 ffa8 	bl	801bb1c <__assert_func>
 8018bcc:	4681      	mov	r9, r0
 8018bce:	e7d7      	b.n	8018b80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8018bd0:	4686      	mov	lr, r0
 8018bd2:	4681      	mov	r9, r0
 8018bd4:	e7db      	b.n	8018b8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018bd6:	4686      	mov	lr, r0
 8018bd8:	e7d9      	b.n	8018b8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018bda:	4684      	mov	ip, r0
 8018bdc:	e7e5      	b.n	8018baa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8018bde:	4603      	mov	r3, r0
 8018be0:	4684      	mov	ip, r0
 8018be2:	e7ea      	b.n	8018bba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018be4:	4603      	mov	r3, r0
 8018be6:	e7e8      	b.n	8018bba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018be8:	4603      	mov	r3, r0
 8018bea:	2e0f      	cmp	r6, #15
 8018bec:	d8e7      	bhi.n	8018bbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018bee:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8018bf2:	fb17 f806 	smulbb	r8, r7, r6
 8018bf6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018bfa:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8018bfe:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018c02:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8018c06:	ea44 0909 	orr.w	r9, r4, r9
 8018c0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018c0e:	f1c6 0410 	rsb	r4, r6, #16
 8018c12:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018c16:	1be4      	subs	r4, r4, r7
 8018c18:	041a      	lsls	r2, r3, #16
 8018c1a:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8018c1e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018c22:	fb07 fe0e 	mul.w	lr, r7, lr
 8018c26:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018c2a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8018c2e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018c32:	fb04 e409 	mla	r4, r4, r9, lr
 8018c36:	4313      	orrs	r3, r2
 8018c38:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8018c3c:	fb08 4303 	mla	r3, r8, r3, r4
 8018c40:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018c44:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8018c48:	4322      	orrs	r2, r4
 8018c4a:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8018c4e:	fb06 3202 	mla	r2, r6, r2, r3
 8018c52:	0d53      	lsrs	r3, r2, #21
 8018c54:	0952      	lsrs	r2, r2, #5
 8018c56:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018c5a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018c5e:	431a      	orrs	r2, r3
 8018c60:	b293      	uxth	r3, r2
 8018c62:	b2af      	uxth	r7, r5
 8018c64:	1202      	asrs	r2, r0, #8
 8018c66:	43ed      	mvns	r5, r5
 8018c68:	b2ed      	uxtb	r5, r5
 8018c6a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018c6e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018c72:	fb12 f205 	smulbb	r2, r2, r5
 8018c76:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018c7a:	fb0c 2c07 	mla	ip, ip, r7, r2
 8018c7e:	00dc      	lsls	r4, r3, #3
 8018c80:	10da      	asrs	r2, r3, #3
 8018c82:	10c6      	asrs	r6, r0, #3
 8018c84:	00c3      	lsls	r3, r0, #3
 8018c86:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018c8a:	b2db      	uxtb	r3, r3
 8018c8c:	fb16 f605 	smulbb	r6, r6, r5
 8018c90:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018c94:	b2e4      	uxtb	r4, r4
 8018c96:	fb13 f305 	smulbb	r3, r3, r5
 8018c9a:	fa1f fc8c 	uxth.w	ip, ip
 8018c9e:	fb02 6207 	mla	r2, r2, r7, r6
 8018ca2:	fb04 3307 	mla	r3, r4, r7, r3
 8018ca6:	b296      	uxth	r6, r2
 8018ca8:	b29a      	uxth	r2, r3
 8018caa:	f10c 0301 	add.w	r3, ip, #1
 8018cae:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018cb2:	1c53      	adds	r3, r2, #1
 8018cb4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018cb8:	1c72      	adds	r2, r6, #1
 8018cba:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8018cbe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018cc2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018cc6:	0952      	lsrs	r2, r2, #5
 8018cc8:	ea43 030c 	orr.w	r3, r3, ip
 8018ccc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018cd0:	4313      	orrs	r3, r2
 8018cd2:	800b      	strh	r3, [r1, #0]
 8018cd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018cd8:	2f0f      	cmp	r7, #15
 8018cda:	f63f af70 	bhi.w	8018bbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018cde:	4603      	mov	r3, r0
 8018ce0:	4684      	mov	ip, r0
 8018ce2:	e784      	b.n	8018bee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8018ce4:	0802062e 	.word	0x0802062e
 8018ce8:	08020ca7 	.word	0x08020ca7
 8018cec:	080206b2 	.word	0x080206b2

08018cf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018cf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018cf4:	ed2d 8b08 	vpush	{d8-d11}
 8018cf8:	b093      	sub	sp, #76	; 0x4c
 8018cfa:	461d      	mov	r5, r3
 8018cfc:	9210      	str	r2, [sp, #64]	; 0x40
 8018cfe:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018d00:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8018d04:	920b      	str	r2, [sp, #44]	; 0x2c
 8018d06:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8018d0a:	910a      	str	r1, [sp, #40]	; 0x28
 8018d0c:	6859      	ldr	r1, [r3, #4]
 8018d0e:	681b      	ldr	r3, [r3, #0]
 8018d10:	9011      	str	r0, [sp, #68]	; 0x44
 8018d12:	fb01 2707 	mla	r7, r1, r7, r2
 8018d16:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8018d1a:	9307      	str	r3, [sp, #28]
 8018d1c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018d1e:	681b      	ldr	r3, [r3, #0]
 8018d20:	9309      	str	r3, [sp, #36]	; 0x24
 8018d22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018d24:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8018d28:	43db      	mvns	r3, r3
 8018d2a:	b2db      	uxtb	r3, r3
 8018d2c:	eeb0 aa40 	vmov.f32	s20, s0
 8018d30:	eef0 9a60 	vmov.f32	s19, s1
 8018d34:	eeb0 9a41 	vmov.f32	s18, s2
 8018d38:	eeb0 8a62 	vmov.f32	s16, s5
 8018d3c:	eef0 8a43 	vmov.f32	s17, s6
 8018d40:	eef0 ba44 	vmov.f32	s23, s8
 8018d44:	eeb0 ba64 	vmov.f32	s22, s9
 8018d48:	eef0 aa45 	vmov.f32	s21, s10
 8018d4c:	9308      	str	r3, [sp, #32]
 8018d4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018d50:	2b00      	cmp	r3, #0
 8018d52:	dc03      	bgt.n	8018d5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018d54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d56:	2b00      	cmp	r3, #0
 8018d58:	f340 8203 	ble.w	8019162 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8018d5c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018d5e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018d62:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018d66:	1e48      	subs	r0, r1, #1
 8018d68:	f102 3cff 	add.w	ip, r2, #4294967295
 8018d6c:	2d00      	cmp	r5, #0
 8018d6e:	f340 80da 	ble.w	8018f26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018d72:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018d76:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018d7a:	d406      	bmi.n	8018d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018d7c:	4586      	cmp	lr, r0
 8018d7e:	da04      	bge.n	8018d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018d80:	2b00      	cmp	r3, #0
 8018d82:	db02      	blt.n	8018d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018d84:	4563      	cmp	r3, ip
 8018d86:	f2c0 80cf 	blt.w	8018f28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8018d8a:	f11e 0e01 	adds.w	lr, lr, #1
 8018d8e:	f100 80c1 	bmi.w	8018f14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018d92:	4571      	cmp	r1, lr
 8018d94:	f2c0 80be 	blt.w	8018f14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018d98:	3301      	adds	r3, #1
 8018d9a:	f100 80bb 	bmi.w	8018f14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018d9e:	429a      	cmp	r2, r3
 8018da0:	f2c0 80b8 	blt.w	8018f14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018da4:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8018da8:	46a9      	mov	r9, r5
 8018daa:	f1b9 0f00 	cmp.w	r9, #0
 8018dae:	f340 80d8 	ble.w	8018f62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8018db2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018db4:	1421      	asrs	r1, r4, #16
 8018db6:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018dba:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018dbe:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018dc2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8018dc6:	f100 8111 	bmi.w	8018fec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018dca:	f10e 3aff 	add.w	sl, lr, #4294967295
 8018dce:	4551      	cmp	r1, sl
 8018dd0:	f280 810c 	bge.w	8018fec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018dd4:	2800      	cmp	r0, #0
 8018dd6:	f2c0 8109 	blt.w	8018fec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018dda:	f103 3aff 	add.w	sl, r3, #4294967295
 8018dde:	4550      	cmp	r0, sl
 8018de0:	f280 8104 	bge.w	8018fec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018de4:	fa0f f38e 	sxth.w	r3, lr
 8018de8:	fb00 1103 	mla	r1, r0, r3, r1
 8018dec:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018dee:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8018df2:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8018df6:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8018dfa:	f1bc 0f00 	cmp.w	ip, #0
 8018dfe:	d007      	beq.n	8018e10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8018e00:	005b      	lsls	r3, r3, #1
 8018e02:	eb0a 0003 	add.w	r0, sl, r3
 8018e06:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8018e0a:	930c      	str	r3, [sp, #48]	; 0x30
 8018e0c:	8843      	ldrh	r3, [r0, #2]
 8018e0e:	930d      	str	r3, [sp, #52]	; 0x34
 8018e10:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8018e14:	fb12 f30c 	smulbb	r3, r2, ip
 8018e18:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018e1c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018e20:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018e24:	10db      	asrs	r3, r3, #3
 8018e26:	ea40 000e 	orr.w	r0, r0, lr
 8018e2a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018e2e:	f1cc 0e10 	rsb	lr, ip, #16
 8018e32:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018e36:	ebae 0e02 	sub.w	lr, lr, r2
 8018e3a:	ea4a 0101 	orr.w	r1, sl, r1
 8018e3e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018e42:	4351      	muls	r1, r2
 8018e44:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018e46:	9f08      	ldr	r7, [sp, #32]
 8018e48:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018e4c:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018e50:	0410      	lsls	r0, r2, #16
 8018e52:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018e56:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018e5a:	4310      	orrs	r0, r2
 8018e5c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018e5e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018e60:	0412      	lsls	r2, r2, #16
 8018e62:	fb03 e000 	mla	r0, r3, r0, lr
 8018e66:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018e6a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018e6e:	ea42 020e 	orr.w	r2, r2, lr
 8018e72:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8018e76:	fb03 0302 	mla	r3, r3, r2, r0
 8018e7a:	0d5a      	lsrs	r2, r3, #21
 8018e7c:	095b      	lsrs	r3, r3, #5
 8018e7e:	f8b8 0000 	ldrh.w	r0, [r8]
 8018e82:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018e86:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018e8a:	4313      	orrs	r3, r2
 8018e8c:	b29b      	uxth	r3, r3
 8018e8e:	1201      	asrs	r1, r0, #8
 8018e90:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018e94:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018e98:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018e9c:	fb11 f107 	smulbb	r1, r1, r7
 8018ea0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8018ea4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018ea8:	00c0      	lsls	r0, r0, #3
 8018eaa:	fb0c 1c02 	mla	ip, ip, r2, r1
 8018eae:	b2c0      	uxtb	r0, r0
 8018eb0:	10d9      	asrs	r1, r3, #3
 8018eb2:	00db      	lsls	r3, r3, #3
 8018eb4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018eb8:	b2db      	uxtb	r3, r3
 8018eba:	fb10 f007 	smulbb	r0, r0, r7
 8018ebe:	fa1f fc8c 	uxth.w	ip, ip
 8018ec2:	fb03 0302 	mla	r3, r3, r2, r0
 8018ec6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018eca:	fb1e fe07 	smulbb	lr, lr, r7
 8018ece:	fb01 e102 	mla	r1, r1, r2, lr
 8018ed2:	b29a      	uxth	r2, r3
 8018ed4:	f10c 0301 	add.w	r3, ip, #1
 8018ed8:	b289      	uxth	r1, r1
 8018eda:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018ede:	1c53      	adds	r3, r2, #1
 8018ee0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018ee4:	1c4a      	adds	r2, r1, #1
 8018ee6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018eea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018eee:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018ef2:	0949      	lsrs	r1, r1, #5
 8018ef4:	ea43 030c 	orr.w	r3, r3, ip
 8018ef8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018efc:	430b      	orrs	r3, r1
 8018efe:	f8a8 3000 	strh.w	r3, [r8]
 8018f02:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018f04:	441c      	add	r4, r3
 8018f06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f08:	f108 0802 	add.w	r8, r8, #2
 8018f0c:	441e      	add	r6, r3
 8018f0e:	f109 39ff 	add.w	r9, r9, #4294967295
 8018f12:	e74a      	b.n	8018daa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8018f14:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018f16:	441c      	add	r4, r3
 8018f18:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f1a:	441e      	add	r6, r3
 8018f1c:	9b07      	ldr	r3, [sp, #28]
 8018f1e:	3302      	adds	r3, #2
 8018f20:	3d01      	subs	r5, #1
 8018f22:	9307      	str	r3, [sp, #28]
 8018f24:	e722      	b.n	8018d6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018f26:	d022      	beq.n	8018f6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8018f28:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018f2a:	1e6b      	subs	r3, r5, #1
 8018f2c:	fb00 4003 	mla	r0, r0, r3, r4
 8018f30:	1400      	asrs	r0, r0, #16
 8018f32:	f53f af37 	bmi.w	8018da4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018f36:	3901      	subs	r1, #1
 8018f38:	4288      	cmp	r0, r1
 8018f3a:	f6bf af33 	bge.w	8018da4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018f3e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018f40:	fb01 6303 	mla	r3, r1, r3, r6
 8018f44:	141b      	asrs	r3, r3, #16
 8018f46:	f53f af2d 	bmi.w	8018da4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018f4a:	3a01      	subs	r2, #1
 8018f4c:	4293      	cmp	r3, r2
 8018f4e:	f6bf af29 	bge.w	8018da4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018f52:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8018f56:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8018f5a:	46a8      	mov	r8, r5
 8018f5c:	f1b8 0f00 	cmp.w	r8, #0
 8018f60:	dc5e      	bgt.n	8019020 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8018f62:	9b07      	ldr	r3, [sp, #28]
 8018f64:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018f68:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018f6c:	9307      	str	r3, [sp, #28]
 8018f6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018f70:	2b00      	cmp	r3, #0
 8018f72:	f340 80f6 	ble.w	8019162 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8018f76:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018f7a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018f7e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018f82:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018f84:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018f88:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018f8c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018f90:	eef0 6a48 	vmov.f32	s13, s16
 8018f94:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018f98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f9c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018fa0:	ee16 4a90 	vmov	r4, s13
 8018fa4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018fa8:	eef0 6a68 	vmov.f32	s13, s17
 8018fac:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018fb0:	ee18 2a10 	vmov	r2, s16
 8018fb4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018fb8:	fb92 f3f3 	sdiv	r3, r2, r3
 8018fbc:	ee18 2a90 	vmov	r2, s17
 8018fc0:	9327      	str	r3, [sp, #156]	; 0x9c
 8018fc2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018fc4:	fb92 f3f3 	sdiv	r3, r2, r3
 8018fc8:	9328      	str	r3, [sp, #160]	; 0xa0
 8018fca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018fcc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018fce:	3b01      	subs	r3, #1
 8018fd0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018fd4:	930a      	str	r3, [sp, #40]	; 0x28
 8018fd6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018fd8:	ee16 6a90 	vmov	r6, s13
 8018fdc:	bf14      	ite	ne
 8018fde:	461d      	movne	r5, r3
 8018fe0:	4615      	moveq	r5, r2
 8018fe2:	eef0 8a67 	vmov.f32	s17, s15
 8018fe6:	eeb0 8a47 	vmov.f32	s16, s14
 8018fea:	e6b0      	b.n	8018d4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018fec:	f111 0a01 	adds.w	sl, r1, #1
 8018ff0:	d487      	bmi.n	8018f02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018ff2:	45d6      	cmp	lr, sl
 8018ff4:	db85      	blt.n	8018f02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018ff6:	f110 0a01 	adds.w	sl, r0, #1
 8018ffa:	d482      	bmi.n	8018f02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018ffc:	4553      	cmp	r3, sl
 8018ffe:	db80      	blt.n	8018f02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019000:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8019002:	9101      	str	r1, [sp, #4]
 8019004:	b21b      	sxth	r3, r3
 8019006:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801900a:	9300      	str	r3, [sp, #0]
 801900c:	e9cd c704 	strd	ip, r7, [sp, #16]
 8019010:	fa0f f38e 	sxth.w	r3, lr
 8019014:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019016:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019018:	4641      	mov	r1, r8
 801901a:	f7ff fd95 	bl	8018b48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801901e:	e770      	b.n	8018f02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019020:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019022:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8019024:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019028:	1430      	asrs	r0, r6, #16
 801902a:	1423      	asrs	r3, r4, #16
 801902c:	fb01 3000 	mla	r0, r1, r0, r3
 8019030:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019032:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8019036:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801903a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801903e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019042:	8858      	ldrh	r0, [r3, #2]
 8019044:	f1be 0f00 	cmp.w	lr, #0
 8019048:	d00b      	beq.n	8019062 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801904a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801904e:	3901      	subs	r1, #1
 8019050:	0049      	lsls	r1, r1, #1
 8019052:	3102      	adds	r1, #2
 8019054:	eb03 0b01 	add.w	fp, r3, r1
 8019058:	5a5b      	ldrh	r3, [r3, r1]
 801905a:	930e      	str	r3, [sp, #56]	; 0x38
 801905c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8019060:	930f      	str	r3, [sp, #60]	; 0x3c
 8019062:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8019066:	fb12 f30e 	smulbb	r3, r2, lr
 801906a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801906e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019072:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8019076:	10db      	asrs	r3, r3, #3
 8019078:	ea41 010c 	orr.w	r1, r1, ip
 801907c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019080:	f1ce 0c10 	rsb	ip, lr, #16
 8019084:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019088:	ebac 0c02 	sub.w	ip, ip, r2
 801908c:	ea4b 0000 	orr.w	r0, fp, r0
 8019090:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019094:	4350      	muls	r0, r2
 8019096:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019098:	9f08      	ldr	r7, [sp, #32]
 801909a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801909e:	fb0c 0c01 	mla	ip, ip, r1, r0
 80190a2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80190a6:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80190aa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80190ac:	980e      	ldr	r0, [sp, #56]	; 0x38
 80190ae:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80190b2:	0412      	lsls	r2, r2, #16
 80190b4:	ea4b 0101 	orr.w	r1, fp, r1
 80190b8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80190bc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80190c0:	fb03 c101 	mla	r1, r3, r1, ip
 80190c4:	4302      	orrs	r2, r0
 80190c6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80190ca:	fb03 1202 	mla	r2, r3, r2, r1
 80190ce:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80190d2:	0952      	lsrs	r2, r2, #5
 80190d4:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80190d8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80190dc:	f8b9 2000 	ldrh.w	r2, [r9]
 80190e0:	ea4b 0303 	orr.w	r3, fp, r3
 80190e4:	b29b      	uxth	r3, r3
 80190e6:	1211      	asrs	r1, r2, #8
 80190e8:	1218      	asrs	r0, r3, #8
 80190ea:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80190ee:	fb11 f107 	smulbb	r1, r1, r7
 80190f2:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80190f6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80190fa:	00d2      	lsls	r2, r2, #3
 80190fc:	fb00 100a 	mla	r0, r0, sl, r1
 8019100:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019104:	10d9      	asrs	r1, r3, #3
 8019106:	b2d2      	uxtb	r2, r2
 8019108:	00db      	lsls	r3, r3, #3
 801910a:	fb1c fc07 	smulbb	ip, ip, r7
 801910e:	fb12 f207 	smulbb	r2, r2, r7
 8019112:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019116:	b2db      	uxtb	r3, r3
 8019118:	b280      	uxth	r0, r0
 801911a:	fb01 c10a 	mla	r1, r1, sl, ip
 801911e:	fb03 230a 	mla	r3, r3, sl, r2
 8019122:	b29b      	uxth	r3, r3
 8019124:	b289      	uxth	r1, r1
 8019126:	1c42      	adds	r2, r0, #1
 8019128:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801912c:	f101 0c01 	add.w	ip, r1, #1
 8019130:	1c5a      	adds	r2, r3, #1
 8019132:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019136:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801913a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801913c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019140:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019144:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019148:	4310      	orrs	r0, r2
 801914a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801914e:	441c      	add	r4, r3
 8019150:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019152:	ea40 000c 	orr.w	r0, r0, ip
 8019156:	f829 0b02 	strh.w	r0, [r9], #2
 801915a:	441e      	add	r6, r3
 801915c:	f108 38ff 	add.w	r8, r8, #4294967295
 8019160:	e6fc      	b.n	8018f5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8019162:	b013      	add	sp, #76	; 0x4c
 8019164:	ecbd 8b08 	vpop	{d8-d11}
 8019168:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801916c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801916c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019170:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8019174:	fb06 5c03 	mla	ip, r6, r3, r5
 8019178:	2e00      	cmp	r6, #0
 801917a:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 801917e:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8019182:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8019186:	8808      	ldrh	r0, [r1, #0]
 8019188:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801918c:	db2e      	blt.n	80191ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801918e:	45b0      	cmp	r8, r6
 8019190:	dd2c      	ble.n	80191ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8019192:	2d00      	cmp	r5, #0
 8019194:	db28      	blt.n	80191e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8019196:	42ab      	cmp	r3, r5
 8019198:	dd26      	ble.n	80191e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801919a:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 801919e:	1c6a      	adds	r2, r5, #1
 80191a0:	d427      	bmi.n	80191f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80191a2:	4293      	cmp	r3, r2
 80191a4:	dd25      	ble.n	80191f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80191a6:	b324      	cbz	r4, 80191f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80191a8:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80191ac:	3601      	adds	r6, #1
 80191ae:	d424      	bmi.n	80191fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80191b0:	45b0      	cmp	r8, r6
 80191b2:	dd22      	ble.n	80191fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80191b4:	b31f      	cbz	r7, 80191fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 80191b6:	2d00      	cmp	r5, #0
 80191b8:	db1d      	blt.n	80191f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80191ba:	42ab      	cmp	r3, r5
 80191bc:	dd1b      	ble.n	80191f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80191be:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 80191c2:	3501      	adds	r5, #1
 80191c4:	d405      	bmi.n	80191d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80191c6:	42ab      	cmp	r3, r5
 80191c8:	dd03      	ble.n	80191d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80191ca:	b124      	cbz	r4, 80191d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 80191cc:	3301      	adds	r3, #1
 80191ce:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 80191d2:	2c0f      	cmp	r4, #15
 80191d4:	d801      	bhi.n	80191da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80191d6:	2f0f      	cmp	r7, #15
 80191d8:	d914      	bls.n	8019204 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 80191da:	4b27      	ldr	r3, [pc, #156]	; (8019278 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 80191dc:	4a27      	ldr	r2, [pc, #156]	; (801927c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 80191de:	4828      	ldr	r0, [pc, #160]	; (8019280 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 80191e0:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 80191e4:	f002 fc9a 	bl	801bb1c <__assert_func>
 80191e8:	4684      	mov	ip, r0
 80191ea:	e7d8      	b.n	801919e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 80191ec:	4602      	mov	r2, r0
 80191ee:	4684      	mov	ip, r0
 80191f0:	e7dc      	b.n	80191ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80191f2:	4602      	mov	r2, r0
 80191f4:	e7da      	b.n	80191ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80191f6:	4606      	mov	r6, r0
 80191f8:	e7e3      	b.n	80191c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 80191fa:	4606      	mov	r6, r0
 80191fc:	e7e9      	b.n	80191d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80191fe:	2c0f      	cmp	r4, #15
 8019200:	d8eb      	bhi.n	80191da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8019202:	4606      	mov	r6, r0
 8019204:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8019208:	fb14 f307 	smulbb	r3, r4, r7
 801920c:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8019210:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8019214:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019218:	10db      	asrs	r3, r3, #3
 801921a:	ea45 0c0c 	orr.w	ip, r5, ip
 801921e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019222:	f1c7 0510 	rsb	r5, r7, #16
 8019226:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801922a:	1b2d      	subs	r5, r5, r4
 801922c:	ea4e 0202 	orr.w	r2, lr, r2
 8019230:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8019234:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019238:	4354      	muls	r4, r2
 801923a:	fb05 450c 	mla	r5, r5, ip, r4
 801923e:	0404      	lsls	r4, r0, #16
 8019240:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019244:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019248:	4320      	orrs	r0, r4
 801924a:	fb03 5400 	mla	r4, r3, r0, r5
 801924e:	0430      	lsls	r0, r6, #16
 8019250:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019254:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8019258:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 801925c:	4330      	orrs	r0, r6
 801925e:	fb07 4000 	mla	r0, r7, r0, r4
 8019262:	0d43      	lsrs	r3, r0, #21
 8019264:	0940      	lsrs	r0, r0, #5
 8019266:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801926a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801926e:	4318      	orrs	r0, r3
 8019270:	8008      	strh	r0, [r1, #0]
 8019272:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019276:	bf00      	nop
 8019278:	0802062e 	.word	0x0802062e
 801927c:	08020ca7 	.word	0x08020ca7
 8019280:	080206b2 	.word	0x080206b2

08019284 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019288:	ed2d 8b08 	vpush	{d8-d11}
 801928c:	b08f      	sub	sp, #60	; 0x3c
 801928e:	461d      	mov	r5, r3
 8019290:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019292:	920c      	str	r2, [sp, #48]	; 0x30
 8019294:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8019298:	9107      	str	r1, [sp, #28]
 801929a:	6859      	ldr	r1, [r3, #4]
 801929c:	681b      	ldr	r3, [r3, #0]
 801929e:	900d      	str	r0, [sp, #52]	; 0x34
 80192a0:	fb01 2707 	mla	r7, r1, r7, r2
 80192a4:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80192a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80192aa:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80192ae:	f8d3 8000 	ldr.w	r8, [r3]
 80192b2:	eeb0 aa40 	vmov.f32	s20, s0
 80192b6:	eef0 9a60 	vmov.f32	s19, s1
 80192ba:	eeb0 9a41 	vmov.f32	s18, s2
 80192be:	eeb0 8a62 	vmov.f32	s16, s5
 80192c2:	eef0 8a43 	vmov.f32	s17, s6
 80192c6:	eef0 ba44 	vmov.f32	s23, s8
 80192ca:	eeb0 ba64 	vmov.f32	s22, s9
 80192ce:	eef0 aa45 	vmov.f32	s21, s10
 80192d2:	9b07      	ldr	r3, [sp, #28]
 80192d4:	2b00      	cmp	r3, #0
 80192d6:	dc03      	bgt.n	80192e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80192d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80192da:	2b00      	cmp	r3, #0
 80192dc:	f340 8181 	ble.w	80195e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80192e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80192e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80192e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80192ea:	1e48      	subs	r0, r1, #1
 80192ec:	f102 3cff 	add.w	ip, r2, #4294967295
 80192f0:	2d00      	cmp	r5, #0
 80192f2:	f340 809b 	ble.w	801942c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 80192f6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80192fa:	ea4f 4326 	mov.w	r3, r6, asr #16
 80192fe:	d406      	bmi.n	801930e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019300:	4586      	cmp	lr, r0
 8019302:	da04      	bge.n	801930e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019304:	2b00      	cmp	r3, #0
 8019306:	db02      	blt.n	801930e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019308:	4563      	cmp	r3, ip
 801930a:	f2c0 8090 	blt.w	801942e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801930e:	f11e 0e01 	adds.w	lr, lr, #1
 8019312:	f100 8084 	bmi.w	801941e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019316:	4571      	cmp	r1, lr
 8019318:	f2c0 8081 	blt.w	801941e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801931c:	3301      	adds	r3, #1
 801931e:	d47e      	bmi.n	801941e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019320:	429a      	cmp	r2, r3
 8019322:	db7c      	blt.n	801941e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019324:	46aa      	mov	sl, r5
 8019326:	46b9      	mov	r9, r7
 8019328:	f1ba 0f00 	cmp.w	sl, #0
 801932c:	f340 8099 	ble.w	8019462 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8019330:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019332:	1421      	asrs	r1, r4, #16
 8019334:	ea4f 4026 	mov.w	r0, r6, asr #16
 8019338:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801933c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019340:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8019344:	f100 80d0 	bmi.w	80194e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8019348:	f10e 3bff 	add.w	fp, lr, #4294967295
 801934c:	4559      	cmp	r1, fp
 801934e:	f280 80cb 	bge.w	80194e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8019352:	2800      	cmp	r0, #0
 8019354:	f2c0 80c8 	blt.w	80194e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8019358:	f103 3bff 	add.w	fp, r3, #4294967295
 801935c:	4558      	cmp	r0, fp
 801935e:	f280 80c3 	bge.w	80194e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8019362:	fa0f fe8e 	sxth.w	lr, lr
 8019366:	fb00 110e 	mla	r1, r0, lr, r1
 801936a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801936e:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8019372:	8841      	ldrh	r1, [r0, #2]
 8019374:	f1bc 0f00 	cmp.w	ip, #0
 8019378:	d00b      	beq.n	8019392 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801937a:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801937e:	3b01      	subs	r3, #1
 8019380:	005b      	lsls	r3, r3, #1
 8019382:	3302      	adds	r3, #2
 8019384:	eb00 0e03 	add.w	lr, r0, r3
 8019388:	5ac3      	ldrh	r3, [r0, r3]
 801938a:	9308      	str	r3, [sp, #32]
 801938c:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8019390:	9309      	str	r3, [sp, #36]	; 0x24
 8019392:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8019396:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801939a:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801939e:	ea40 000b 	orr.w	r0, r0, fp
 80193a2:	fb12 f30c 	smulbb	r3, r2, ip
 80193a6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80193aa:	10db      	asrs	r3, r3, #3
 80193ac:	f1cc 0e10 	rsb	lr, ip, #16
 80193b0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80193b4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80193b8:	ebae 0e02 	sub.w	lr, lr, r2
 80193bc:	ea4b 0101 	orr.w	r1, fp, r1
 80193c0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80193c4:	4351      	muls	r1, r2
 80193c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80193c8:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80193cc:	fb0e 1e00 	mla	lr, lr, r0, r1
 80193d0:	0410      	lsls	r0, r2, #16
 80193d2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80193d6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80193da:	4310      	orrs	r0, r2
 80193dc:	9a08      	ldr	r2, [sp, #32]
 80193de:	9908      	ldr	r1, [sp, #32]
 80193e0:	0412      	lsls	r2, r2, #16
 80193e2:	fb03 e000 	mla	r0, r3, r0, lr
 80193e6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80193ea:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80193ee:	ea42 020e 	orr.w	r2, r2, lr
 80193f2:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80193f6:	fb03 0302 	mla	r3, r3, r2, r0
 80193fa:	0d5a      	lsrs	r2, r3, #21
 80193fc:	095b      	lsrs	r3, r3, #5
 80193fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019402:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019406:	4313      	orrs	r3, r2
 8019408:	f8a9 3000 	strh.w	r3, [r9]
 801940c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801940e:	441c      	add	r4, r3
 8019410:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019412:	f109 0902 	add.w	r9, r9, #2
 8019416:	441e      	add	r6, r3
 8019418:	f10a 3aff 	add.w	sl, sl, #4294967295
 801941c:	e784      	b.n	8019328 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801941e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019420:	441c      	add	r4, r3
 8019422:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019424:	3d01      	subs	r5, #1
 8019426:	441e      	add	r6, r3
 8019428:	3702      	adds	r7, #2
 801942a:	e761      	b.n	80192f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801942c:	d01d      	beq.n	801946a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801942e:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8019430:	1e6b      	subs	r3, r5, #1
 8019432:	fb00 4003 	mla	r0, r0, r3, r4
 8019436:	1400      	asrs	r0, r0, #16
 8019438:	f53f af74 	bmi.w	8019324 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801943c:	3901      	subs	r1, #1
 801943e:	4288      	cmp	r0, r1
 8019440:	f6bf af70 	bge.w	8019324 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019444:	9924      	ldr	r1, [sp, #144]	; 0x90
 8019446:	fb01 6303 	mla	r3, r1, r3, r6
 801944a:	141b      	asrs	r3, r3, #16
 801944c:	f53f af6a 	bmi.w	8019324 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019450:	3a01      	subs	r2, #1
 8019452:	4293      	cmp	r3, r2
 8019454:	f6bf af66 	bge.w	8019324 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019458:	46a9      	mov	r9, r5
 801945a:	46ba      	mov	sl, r7
 801945c:	f1b9 0f00 	cmp.w	r9, #0
 8019460:	dc5a      	bgt.n	8019518 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019462:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8019466:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801946a:	9b07      	ldr	r3, [sp, #28]
 801946c:	2b00      	cmp	r3, #0
 801946e:	f340 80b8 	ble.w	80195e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8019472:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019476:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801947a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801947e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019480:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019484:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019488:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801948c:	eef0 6a48 	vmov.f32	s13, s16
 8019490:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019494:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019498:	ee37 8a48 	vsub.f32	s16, s14, s16
 801949c:	ee16 4a90 	vmov	r4, s13
 80194a0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80194a4:	eef0 6a68 	vmov.f32	s13, s17
 80194a8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80194ac:	ee18 2a10 	vmov	r2, s16
 80194b0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80194b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80194b8:	ee18 2a90 	vmov	r2, s17
 80194bc:	9323      	str	r3, [sp, #140]	; 0x8c
 80194be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80194c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80194c4:	9324      	str	r3, [sp, #144]	; 0x90
 80194c6:	9b07      	ldr	r3, [sp, #28]
 80194c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80194ca:	3b01      	subs	r3, #1
 80194cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80194d0:	9307      	str	r3, [sp, #28]
 80194d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80194d4:	ee16 6a90 	vmov	r6, s13
 80194d8:	bf14      	ite	ne
 80194da:	461d      	movne	r5, r3
 80194dc:	4615      	moveq	r5, r2
 80194de:	eef0 8a67 	vmov.f32	s17, s15
 80194e2:	eeb0 8a47 	vmov.f32	s16, s14
 80194e6:	e6f4      	b.n	80192d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80194e8:	f111 0b01 	adds.w	fp, r1, #1
 80194ec:	d48e      	bmi.n	801940c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80194ee:	45de      	cmp	lr, fp
 80194f0:	db8c      	blt.n	801940c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80194f2:	f110 0b01 	adds.w	fp, r0, #1
 80194f6:	d489      	bmi.n	801940c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80194f8:	455b      	cmp	r3, fp
 80194fa:	db87      	blt.n	801940c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80194fc:	b21b      	sxth	r3, r3
 80194fe:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8019502:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8019506:	9300      	str	r3, [sp, #0]
 8019508:	4642      	mov	r2, r8
 801950a:	fa0f f38e 	sxth.w	r3, lr
 801950e:	4649      	mov	r1, r9
 8019510:	980d      	ldr	r0, [sp, #52]	; 0x34
 8019512:	f7ff fe2b 	bl	801916c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8019516:	e779      	b.n	801940c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019518:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801951a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801951e:	1420      	asrs	r0, r4, #16
 8019520:	1431      	asrs	r1, r6, #16
 8019522:	fb03 0101 	mla	r1, r3, r1, r0
 8019526:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801952a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801952e:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8019532:	8841      	ldrh	r1, [r0, #2]
 8019534:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019538:	f1be 0f00 	cmp.w	lr, #0
 801953c:	d00b      	beq.n	8019556 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801953e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8019542:	3b01      	subs	r3, #1
 8019544:	005b      	lsls	r3, r3, #1
 8019546:	3302      	adds	r3, #2
 8019548:	eb00 0b03 	add.w	fp, r0, r3
 801954c:	5ac3      	ldrh	r3, [r0, r3]
 801954e:	930a      	str	r3, [sp, #40]	; 0x28
 8019550:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8019554:	930b      	str	r3, [sp, #44]	; 0x2c
 8019556:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801955a:	fb12 f30e 	smulbb	r3, r2, lr
 801955e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019562:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019566:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801956a:	10db      	asrs	r3, r3, #3
 801956c:	ea40 000c 	orr.w	r0, r0, ip
 8019570:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019574:	f1ce 0c10 	rsb	ip, lr, #16
 8019578:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801957c:	ebac 0c02 	sub.w	ip, ip, r2
 8019580:	ea4b 0101 	orr.w	r1, fp, r1
 8019584:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019588:	4351      	muls	r1, r2
 801958a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801958c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8019590:	fb0c 1c00 	mla	ip, ip, r0, r1
 8019594:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8019598:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801959c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801959e:	990a      	ldr	r1, [sp, #40]	; 0x28
 80195a0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80195a4:	0412      	lsls	r2, r2, #16
 80195a6:	ea4b 0000 	orr.w	r0, fp, r0
 80195aa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80195ae:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80195b2:	fb03 c000 	mla	r0, r3, r0, ip
 80195b6:	ea42 0b0b 	orr.w	fp, r2, fp
 80195ba:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80195be:	fb03 000b 	mla	r0, r3, fp, r0
 80195c2:	0d43      	lsrs	r3, r0, #21
 80195c4:	0940      	lsrs	r0, r0, #5
 80195c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80195ca:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80195ce:	4318      	orrs	r0, r3
 80195d0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80195d2:	f82a 0b02 	strh.w	r0, [sl], #2
 80195d6:	441c      	add	r4, r3
 80195d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80195da:	f109 39ff 	add.w	r9, r9, #4294967295
 80195de:	441e      	add	r6, r3
 80195e0:	e73c      	b.n	801945c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80195e2:	b00f      	add	sp, #60	; 0x3c
 80195e4:	ecbd 8b08 	vpop	{d8-d11}
 80195e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080195ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80195ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80195f0:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 80195f4:	fb04 5603 	mla	r6, r4, r3, r5
 80195f8:	2c00      	cmp	r4, #0
 80195fa:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80195fe:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8019602:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8019606:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801960a:	db36      	blt.n	801967a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 801960c:	45a6      	cmp	lr, r4
 801960e:	dd34      	ble.n	801967a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8019610:	2d00      	cmp	r5, #0
 8019612:	db30      	blt.n	8019676 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8019614:	42ab      	cmp	r3, r5
 8019616:	dd2e      	ble.n	8019676 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8019618:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801961c:	1c6e      	adds	r6, r5, #1
 801961e:	d42f      	bmi.n	8019680 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8019620:	42b3      	cmp	r3, r6
 8019622:	dd2d      	ble.n	8019680 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8019624:	b370      	cbz	r0, 8019684 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8019626:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801962a:	3401      	adds	r4, #1
 801962c:	d42e      	bmi.n	801968c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 801962e:	45a6      	cmp	lr, r4
 8019630:	dd2c      	ble.n	801968c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 8019632:	b377      	cbz	r7, 8019692 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 8019634:	2d00      	cmp	r5, #0
 8019636:	db27      	blt.n	8019688 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8019638:	42ab      	cmp	r3, r5
 801963a:	dd25      	ble.n	8019688 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801963c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8019640:	3501      	adds	r5, #1
 8019642:	d429      	bmi.n	8019698 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 8019644:	42ab      	cmp	r3, r5
 8019646:	dd27      	ble.n	8019698 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 8019648:	b340      	cbz	r0, 801969c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 801964a:	3301      	adds	r3, #1
 801964c:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8019650:	280f      	cmp	r0, #15
 8019652:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019656:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801965a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801965e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8019662:	d801      	bhi.n	8019668 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 8019664:	2f0f      	cmp	r7, #15
 8019666:	d91b      	bls.n	80196a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8019668:	4b8d      	ldr	r3, [pc, #564]	; (80198a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 801966a:	4a8e      	ldr	r2, [pc, #568]	; (80198a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 801966c:	488e      	ldr	r0, [pc, #568]	; (80198a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 801966e:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8019672:	f002 fa53 	bl	801bb1c <__assert_func>
 8019676:	2200      	movs	r2, #0
 8019678:	e7d0      	b.n	801961c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 801967a:	2600      	movs	r6, #0
 801967c:	4632      	mov	r2, r6
 801967e:	e7d4      	b.n	801962a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8019680:	2600      	movs	r6, #0
 8019682:	e7d2      	b.n	801962a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8019684:	4606      	mov	r6, r0
 8019686:	e7d0      	b.n	801962a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8019688:	2400      	movs	r4, #0
 801968a:	e7d9      	b.n	8019640 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 801968c:	2300      	movs	r3, #0
 801968e:	461c      	mov	r4, r3
 8019690:	e7de      	b.n	8019650 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8019692:	463b      	mov	r3, r7
 8019694:	463c      	mov	r4, r7
 8019696:	e7db      	b.n	8019650 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8019698:	2300      	movs	r3, #0
 801969a:	e7d9      	b.n	8019650 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801969c:	4603      	mov	r3, r0
 801969e:	e7d7      	b.n	8019650 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80196a0:	b280      	uxth	r0, r0
 80196a2:	b2bf      	uxth	r7, r7
 80196a4:	fb07 fe00 	mul.w	lr, r7, r0
 80196a8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80196ac:	0100      	lsls	r0, r0, #4
 80196ae:	eba0 0c0e 	sub.w	ip, r0, lr
 80196b2:	b2bf      	uxth	r7, r7
 80196b4:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80196b8:	fa1f fc8c 	uxth.w	ip, ip
 80196bc:	1bed      	subs	r5, r5, r7
 80196be:	b2ad      	uxth	r5, r5
 80196c0:	fb0a f00c 	mul.w	r0, sl, ip
 80196c4:	fb0b 0005 	mla	r0, fp, r5, r0
 80196c8:	fb07 0009 	mla	r0, r7, r9, r0
 80196cc:	fb0e 0008 	mla	r0, lr, r8, r0
 80196d0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80196d4:	9001      	str	r0, [sp, #4]
 80196d6:	2800      	cmp	r0, #0
 80196d8:	f000 80de 	beq.w	8019898 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 80196dc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80196e0:	d018      	beq.n	8019714 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 80196e2:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80196e6:	fb0b f000 	mul.w	r0, fp, r0
 80196ea:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80196ee:	fb0b fb02 	mul.w	fp, fp, r2
 80196f2:	0a02      	lsrs	r2, r0, #8
 80196f4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80196f8:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80196fc:	4402      	add	r2, r0
 80196fe:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8019702:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019706:	0a12      	lsrs	r2, r2, #8
 8019708:	0a00      	lsrs	r0, r0, #8
 801970a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801970e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019712:	4302      	orrs	r2, r0
 8019714:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019718:	d01a      	beq.n	8019750 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 801971a:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801971e:	fb0a f000 	mul.w	r0, sl, r0
 8019722:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019726:	fb0a fa06 	mul.w	sl, sl, r6
 801972a:	0a06      	lsrs	r6, r0, #8
 801972c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019730:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019734:	4406      	add	r6, r0
 8019736:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801973a:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801973e:	0a36      	lsrs	r6, r6, #8
 8019740:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019744:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019748:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801974c:	ea46 060a 	orr.w	r6, r6, sl
 8019750:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019754:	d01b      	beq.n	801978e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 8019756:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801975a:	fb09 fa0a 	mul.w	sl, r9, sl
 801975e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019762:	fb09 f004 	mul.w	r0, r9, r4
 8019766:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801976a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801976e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019772:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8019776:	4454      	add	r4, sl
 8019778:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801977c:	0a24      	lsrs	r4, r4, #8
 801977e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019782:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019786:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801978a:	ea44 0409 	orr.w	r4, r4, r9
 801978e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019792:	d01b      	beq.n	80197cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 8019794:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8019798:	fb08 f909 	mul.w	r9, r8, r9
 801979c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80197a0:	fb08 f003 	mul.w	r0, r8, r3
 80197a4:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80197a8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80197ac:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80197b0:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80197b4:	444b      	add	r3, r9
 80197b6:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 80197ba:	0a1b      	lsrs	r3, r3, #8
 80197bc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80197c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80197c4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80197c8:	ea43 0308 	orr.w	r3, r3, r8
 80197cc:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80197d0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80197d4:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 80197d8:	fb0c f808 	mul.w	r8, ip, r8
 80197dc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80197e0:	fb0c f606 	mul.w	r6, ip, r6
 80197e4:	fb05 8909 	mla	r9, r5, r9, r8
 80197e8:	fb05 6502 	mla	r5, r5, r2, r6
 80197ec:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80197f0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80197f4:	9a01      	ldr	r2, [sp, #4]
 80197f6:	8808      	ldrh	r0, [r1, #0]
 80197f8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80197fc:	fb07 9908 	mla	r9, r7, r8, r9
 8019800:	fb07 5704 	mla	r7, r7, r4, r5
 8019804:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8019808:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801980c:	b2b6      	uxth	r6, r6
 801980e:	fb0e 9808 	mla	r8, lr, r8, r9
 8019812:	fb0e 7e03 	mla	lr, lr, r3, r7
 8019816:	4372      	muls	r2, r6
 8019818:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801981c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019820:	1c53      	adds	r3, r2, #1
 8019822:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8019826:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801982a:	ea48 0e0e 	orr.w	lr, r8, lr
 801982e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019832:	1205      	asrs	r5, r0, #8
 8019834:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8019838:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801983c:	b2db      	uxtb	r3, r3
 801983e:	fb12 f206 	smulbb	r2, r2, r6
 8019842:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019846:	fb05 2503 	mla	r5, r5, r3, r2
 801984a:	f3ce 2407 	ubfx	r4, lr, #8, #8
 801984e:	10c2      	asrs	r2, r0, #3
 8019850:	fa5f fe8e 	uxtb.w	lr, lr
 8019854:	00c0      	lsls	r0, r0, #3
 8019856:	fb14 f406 	smulbb	r4, r4, r6
 801985a:	b2c0      	uxtb	r0, r0
 801985c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019860:	fb1e fe06 	smulbb	lr, lr, r6
 8019864:	fb02 4203 	mla	r2, r2, r3, r4
 8019868:	b2ad      	uxth	r5, r5
 801986a:	fb00 e303 	mla	r3, r0, r3, lr
 801986e:	b298      	uxth	r0, r3
 8019870:	b294      	uxth	r4, r2
 8019872:	1c6b      	adds	r3, r5, #1
 8019874:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019878:	1c62      	adds	r2, r4, #1
 801987a:	1c43      	adds	r3, r0, #1
 801987c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019880:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019884:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019888:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801988c:	0952      	lsrs	r2, r2, #5
 801988e:	432b      	orrs	r3, r5
 8019890:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019894:	4313      	orrs	r3, r2
 8019896:	800b      	strh	r3, [r1, #0]
 8019898:	b003      	add	sp, #12
 801989a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801989e:	bf00      	nop
 80198a0:	0802062e 	.word	0x0802062e
 80198a4:	08020bfe 	.word	0x08020bfe
 80198a8:	080206b2 	.word	0x080206b2

080198ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80198ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80198b0:	ed2d 8b08 	vpush	{d8-d11}
 80198b4:	b09d      	sub	sp, #116	; 0x74
 80198b6:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 80198ba:	9219      	str	r2, [sp, #100]	; 0x64
 80198bc:	9307      	str	r3, [sp, #28]
 80198be:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 80198c0:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80198c4:	931a      	str	r3, [sp, #104]	; 0x68
 80198c6:	9117      	str	r1, [sp, #92]	; 0x5c
 80198c8:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 80198cc:	901b      	str	r0, [sp, #108]	; 0x6c
 80198ce:	6850      	ldr	r0, [r2, #4]
 80198d0:	6812      	ldr	r2, [r2, #0]
 80198d2:	fb00 1303 	mla	r3, r0, r3, r1
 80198d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80198da:	930a      	str	r3, [sp, #40]	; 0x28
 80198dc:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80198de:	681b      	ldr	r3, [r3, #0]
 80198e0:	9310      	str	r3, [sp, #64]	; 0x40
 80198e2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80198e6:	930b      	str	r3, [sp, #44]	; 0x2c
 80198e8:	eeb0 aa40 	vmov.f32	s20, s0
 80198ec:	eef0 9a60 	vmov.f32	s19, s1
 80198f0:	eeb0 9a41 	vmov.f32	s18, s2
 80198f4:	eeb0 8a62 	vmov.f32	s16, s5
 80198f8:	eef0 8a43 	vmov.f32	s17, s6
 80198fc:	eef0 ba44 	vmov.f32	s23, s8
 8019900:	eeb0 ba64 	vmov.f32	s22, s9
 8019904:	eef0 aa45 	vmov.f32	s21, s10
 8019908:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801990a:	2b00      	cmp	r3, #0
 801990c:	dc03      	bgt.n	8019916 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801990e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019910:	2b00      	cmp	r3, #0
 8019912:	f340 8375 	ble.w	801a000 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8019916:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019918:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801991c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019920:	1e48      	subs	r0, r1, #1
 8019922:	1e57      	subs	r7, r2, #1
 8019924:	9b07      	ldr	r3, [sp, #28]
 8019926:	2b00      	cmp	r3, #0
 8019928:	f340 818e 	ble.w	8019c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801992c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019930:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019934:	d406      	bmi.n	8019944 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019936:	4584      	cmp	ip, r0
 8019938:	da04      	bge.n	8019944 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801993a:	2b00      	cmp	r3, #0
 801993c:	db02      	blt.n	8019944 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801993e:	42bb      	cmp	r3, r7
 8019940:	f2c0 8183 	blt.w	8019c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8019944:	f11c 0c01 	adds.w	ip, ip, #1
 8019948:	f100 8173 	bmi.w	8019c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801994c:	4561      	cmp	r1, ip
 801994e:	f2c0 8170 	blt.w	8019c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019952:	3301      	adds	r3, #1
 8019954:	f100 816d 	bmi.w	8019c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019958:	429a      	cmp	r2, r3
 801995a:	f2c0 816a 	blt.w	8019c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801995e:	9b07      	ldr	r3, [sp, #28]
 8019960:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019962:	9318      	str	r3, [sp, #96]	; 0x60
 8019964:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019966:	2b00      	cmp	r3, #0
 8019968:	f340 818c 	ble.w	8019c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 801996c:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801996e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019970:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019974:	689b      	ldr	r3, [r3, #8]
 8019976:	1422      	asrs	r2, r4, #16
 8019978:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801997c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019980:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019984:	f100 81cd 	bmi.w	8019d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019988:	f103 38ff 	add.w	r8, r3, #4294967295
 801998c:	4542      	cmp	r2, r8
 801998e:	f280 81c8 	bge.w	8019d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019992:	f1bc 0f00 	cmp.w	ip, #0
 8019996:	f2c0 81c4 	blt.w	8019d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801999a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801999e:	45c4      	cmp	ip, r8
 80199a0:	f280 81bf 	bge.w	8019d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80199a4:	b21b      	sxth	r3, r3
 80199a6:	fb0c 2203 	mla	r2, ip, r3, r2
 80199aa:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80199ac:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80199b0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80199b4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80199b8:	2800      	cmp	r0, #0
 80199ba:	f000 81a9 	beq.w	8019d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 80199be:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80199c2:	950c      	str	r5, [sp, #48]	; 0x30
 80199c4:	0e2d      	lsrs	r5, r5, #24
 80199c6:	9513      	str	r5, [sp, #76]	; 0x4c
 80199c8:	b181      	cbz	r1, 80199ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80199ca:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80199ce:	3b01      	subs	r3, #1
 80199d0:	009b      	lsls	r3, r3, #2
 80199d2:	3304      	adds	r3, #4
 80199d4:	eb08 0c03 	add.w	ip, r8, r3
 80199d8:	f858 3003 	ldr.w	r3, [r8, r3]
 80199dc:	9308      	str	r3, [sp, #32]
 80199de:	0e1b      	lsrs	r3, r3, #24
 80199e0:	9311      	str	r3, [sp, #68]	; 0x44
 80199e2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80199e6:	930d      	str	r3, [sp, #52]	; 0x34
 80199e8:	0e1b      	lsrs	r3, r3, #24
 80199ea:	9314      	str	r3, [sp, #80]	; 0x50
 80199ec:	b280      	uxth	r0, r0
 80199ee:	b289      	uxth	r1, r1
 80199f0:	fb00 f901 	mul.w	r9, r0, r1
 80199f4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80199f8:	0100      	lsls	r0, r0, #4
 80199fa:	eba0 0809 	sub.w	r8, r0, r9
 80199fe:	b289      	uxth	r1, r1
 8019a00:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019a04:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019a06:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019a08:	fa1f f888 	uxth.w	r8, r8
 8019a0c:	1a5b      	subs	r3, r3, r1
 8019a0e:	b29b      	uxth	r3, r3
 8019a10:	fb08 f000 	mul.w	r0, r8, r0
 8019a14:	fb03 000e 	mla	r0, r3, lr, r0
 8019a18:	fb01 0005 	mla	r0, r1, r5, r0
 8019a1c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019a1e:	fb09 0005 	mla	r0, r9, r5, r0
 8019a22:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019a26:	2800      	cmp	r0, #0
 8019a28:	f000 80fa 	beq.w	8019c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019a2c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019a30:	d01b      	beq.n	8019a6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8019a32:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8019a36:	fb0e fa0a 	mul.w	sl, lr, sl
 8019a3a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019a3e:	fb0e fe02 	mul.w	lr, lr, r2
 8019a42:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8019a46:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019a4a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019a4e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019a52:	4452      	add	r2, sl
 8019a54:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019a58:	0a12      	lsrs	r2, r2, #8
 8019a5a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019a5e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019a62:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019a66:	ea42 020c 	orr.w	r2, r2, ip
 8019a6a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019a6c:	2dff      	cmp	r5, #255	; 0xff
 8019a6e:	d021      	beq.n	8019ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8019a70:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019a72:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019a76:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019a78:	fb05 fb0b 	mul.w	fp, r5, fp
 8019a7c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019a7e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019a82:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019a84:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019a88:	fb05 fa0a 	mul.w	sl, r5, sl
 8019a8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a90:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019a94:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019a98:	44de      	add	lr, fp
 8019a9a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019a9e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019aa2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019aa6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019aaa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019aae:	ea4e 050a 	orr.w	r5, lr, sl
 8019ab2:	950c      	str	r5, [sp, #48]	; 0x30
 8019ab4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019ab6:	2dff      	cmp	r5, #255	; 0xff
 8019ab8:	d021      	beq.n	8019afe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019aba:	9d08      	ldr	r5, [sp, #32]
 8019abc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019ac0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019ac2:	fb05 fb0b 	mul.w	fp, r5, fp
 8019ac6:	9d08      	ldr	r5, [sp, #32]
 8019ac8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019acc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019ace:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019ad2:	fb05 fa0a 	mul.w	sl, r5, sl
 8019ad6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019ada:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019ade:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019ae2:	44de      	add	lr, fp
 8019ae4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019ae8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019aec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019af0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019af4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019af8:	ea4e 050a 	orr.w	r5, lr, sl
 8019afc:	9508      	str	r5, [sp, #32]
 8019afe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019b00:	2dff      	cmp	r5, #255	; 0xff
 8019b02:	d021      	beq.n	8019b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8019b04:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019b06:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019b0a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019b0c:	fb05 fb0b 	mul.w	fp, r5, fp
 8019b10:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019b12:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019b16:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019b18:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019b1c:	fb05 fa0a 	mul.w	sl, r5, sl
 8019b20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019b24:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019b28:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019b2c:	44de      	add	lr, fp
 8019b2e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019b32:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019b36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019b3a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019b3e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019b42:	ea4e 050a 	orr.w	r5, lr, sl
 8019b46:	950d      	str	r5, [sp, #52]	; 0x34
 8019b48:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019b4a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019b4e:	9d08      	ldr	r5, [sp, #32]
 8019b50:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8019b54:	fb08 fc0c 	mul.w	ip, r8, ip
 8019b58:	fb03 cc0e 	mla	ip, r3, lr, ip
 8019b5c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019b60:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019b62:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019b66:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019b6a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019b6c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019b70:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019b74:	fb08 f80e 	mul.w	r8, r8, lr
 8019b78:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019b7c:	fb03 8202 	mla	r2, r3, r2, r8
 8019b80:	9b08      	ldr	r3, [sp, #32]
 8019b82:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019b84:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8019b88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019b8a:	fb01 220a 	mla	r2, r1, sl, r2
 8019b8e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8019b92:	fb09 2901 	mla	r9, r9, r1, r2
 8019b96:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019b98:	883b      	ldrh	r3, [r7, #0]
 8019b9a:	4342      	muls	r2, r0
 8019b9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019ba0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019ba4:	1c50      	adds	r0, r2, #1
 8019ba6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019baa:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019bae:	ea4c 0c09 	orr.w	ip, ip, r9
 8019bb2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019bb6:	1219      	asrs	r1, r3, #8
 8019bb8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8019bbc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019bc0:	b2c0      	uxtb	r0, r0
 8019bc2:	fb12 f205 	smulbb	r2, r2, r5
 8019bc6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019bca:	fb01 2100 	mla	r1, r1, r0, r2
 8019bce:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8019bd2:	10da      	asrs	r2, r3, #3
 8019bd4:	fa5f fc8c 	uxtb.w	ip, ip
 8019bd8:	00db      	lsls	r3, r3, #3
 8019bda:	fb1c fc05 	smulbb	ip, ip, r5
 8019bde:	b2db      	uxtb	r3, r3
 8019be0:	b289      	uxth	r1, r1
 8019be2:	fb03 c300 	mla	r3, r3, r0, ip
 8019be6:	fa1f fc83 	uxth.w	ip, r3
 8019bea:	1c4b      	adds	r3, r1, #1
 8019bec:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019bf0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019bf4:	fb1e fe05 	smulbb	lr, lr, r5
 8019bf8:	f10c 0301 	add.w	r3, ip, #1
 8019bfc:	fb02 e200 	mla	r2, r2, r0, lr
 8019c00:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8019c04:	b292      	uxth	r2, r2
 8019c06:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8019c0a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019c0e:	430b      	orrs	r3, r1
 8019c10:	1c51      	adds	r1, r2, #1
 8019c12:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019c16:	0952      	lsrs	r2, r2, #5
 8019c18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019c1c:	4313      	orrs	r3, r2
 8019c1e:	803b      	strh	r3, [r7, #0]
 8019c20:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019c22:	441c      	add	r4, r3
 8019c24:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019c26:	441e      	add	r6, r3
 8019c28:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019c2a:	3b01      	subs	r3, #1
 8019c2c:	3702      	adds	r7, #2
 8019c2e:	9318      	str	r3, [sp, #96]	; 0x60
 8019c30:	e698      	b.n	8019964 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019c32:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019c34:	441c      	add	r4, r3
 8019c36:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019c38:	441e      	add	r6, r3
 8019c3a:	9b07      	ldr	r3, [sp, #28]
 8019c3c:	3b01      	subs	r3, #1
 8019c3e:	9307      	str	r3, [sp, #28]
 8019c40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019c42:	3302      	adds	r3, #2
 8019c44:	930a      	str	r3, [sp, #40]	; 0x28
 8019c46:	e66d      	b.n	8019924 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019c48:	d023      	beq.n	8019c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8019c4a:	9b07      	ldr	r3, [sp, #28]
 8019c4c:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8019c4e:	3b01      	subs	r3, #1
 8019c50:	fb00 4003 	mla	r0, r0, r3, r4
 8019c54:	1400      	asrs	r0, r0, #16
 8019c56:	f53f ae82 	bmi.w	801995e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019c5a:	3901      	subs	r1, #1
 8019c5c:	4288      	cmp	r0, r1
 8019c5e:	f6bf ae7e 	bge.w	801995e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019c62:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8019c64:	fb01 6303 	mla	r3, r1, r3, r6
 8019c68:	141b      	asrs	r3, r3, #16
 8019c6a:	f53f ae78 	bmi.w	801995e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019c6e:	3a01      	subs	r2, #1
 8019c70:	4293      	cmp	r3, r2
 8019c72:	f6bf ae74 	bge.w	801995e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019c76:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019c7a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8019c7e:	f1bb 0f00 	cmp.w	fp, #0
 8019c82:	dc6c      	bgt.n	8019d5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8019c84:	9b07      	ldr	r3, [sp, #28]
 8019c86:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019c8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019c8c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019c90:	930a      	str	r3, [sp, #40]	; 0x28
 8019c92:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019c94:	2b00      	cmp	r3, #0
 8019c96:	f340 81b3 	ble.w	801a000 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8019c9a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019c9e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019ca2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019ca6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019ca8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019cac:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019cb0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019cb4:	eef0 6a48 	vmov.f32	s13, s16
 8019cb8:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019cbc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019cc0:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019cc4:	ee16 4a90 	vmov	r4, s13
 8019cc8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019ccc:	eef0 6a68 	vmov.f32	s13, s17
 8019cd0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019cd4:	ee18 2a10 	vmov	r2, s16
 8019cd8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019cdc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ce0:	ee18 2a90 	vmov	r2, s17
 8019ce4:	9331      	str	r3, [sp, #196]	; 0xc4
 8019ce6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019ce8:	fb92 f3f3 	sdiv	r3, r2, r3
 8019cec:	9332      	str	r3, [sp, #200]	; 0xc8
 8019cee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019cf0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8019cf2:	3b01      	subs	r3, #1
 8019cf4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019cf8:	9317      	str	r3, [sp, #92]	; 0x5c
 8019cfa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019cfc:	bf08      	it	eq
 8019cfe:	4613      	moveq	r3, r2
 8019d00:	ee16 6a90 	vmov	r6, s13
 8019d04:	9307      	str	r3, [sp, #28]
 8019d06:	eef0 8a67 	vmov.f32	s17, s15
 8019d0a:	eeb0 8a47 	vmov.f32	s16, s14
 8019d0e:	e5fb      	b.n	8019908 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019d10:	2900      	cmp	r1, #0
 8019d12:	f43f ae6b 	beq.w	80199ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019d16:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8019d1a:	9308      	str	r3, [sp, #32]
 8019d1c:	0e1b      	lsrs	r3, r3, #24
 8019d1e:	9311      	str	r3, [sp, #68]	; 0x44
 8019d20:	e664      	b.n	80199ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019d22:	f112 0801 	adds.w	r8, r2, #1
 8019d26:	f53f af7b 	bmi.w	8019c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019d2a:	4543      	cmp	r3, r8
 8019d2c:	f6ff af78 	blt.w	8019c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019d30:	f11c 0801 	adds.w	r8, ip, #1
 8019d34:	f53f af74 	bmi.w	8019c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019d38:	45c6      	cmp	lr, r8
 8019d3a:	f6ff af71 	blt.w	8019c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019d3e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8019d40:	9201      	str	r2, [sp, #4]
 8019d42:	fa0f f28e 	sxth.w	r2, lr
 8019d46:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8019d4a:	e9cd c002 	strd	ip, r0, [sp, #8]
 8019d4e:	9200      	str	r2, [sp, #0]
 8019d50:	b21b      	sxth	r3, r3
 8019d52:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019d54:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8019d56:	4639      	mov	r1, r7
 8019d58:	f7ff fc48 	bl	80195ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8019d5c:	e760      	b.n	8019c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019d5e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019d60:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019d62:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019d66:	1427      	asrs	r7, r4, #16
 8019d68:	1433      	asrs	r3, r6, #16
 8019d6a:	fb01 7303 	mla	r3, r1, r3, r7
 8019d6e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8019d72:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8019d76:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019d7a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019d7e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019d82:	2a00      	cmp	r2, #0
 8019d84:	f000 8133 	beq.w	8019fee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8019d88:	687d      	ldr	r5, [r7, #4]
 8019d8a:	950e      	str	r5, [sp, #56]	; 0x38
 8019d8c:	0e2d      	lsrs	r5, r5, #24
 8019d8e:	9515      	str	r5, [sp, #84]	; 0x54
 8019d90:	b178      	cbz	r0, 8019db2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019d92:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8019d96:	3901      	subs	r1, #1
 8019d98:	0089      	lsls	r1, r1, #2
 8019d9a:	3104      	adds	r1, #4
 8019d9c:	eb07 0e01 	add.w	lr, r7, r1
 8019da0:	5879      	ldr	r1, [r7, r1]
 8019da2:	9109      	str	r1, [sp, #36]	; 0x24
 8019da4:	0e09      	lsrs	r1, r1, #24
 8019da6:	9112      	str	r1, [sp, #72]	; 0x48
 8019da8:	f8de 1004 	ldr.w	r1, [lr, #4]
 8019dac:	910f      	str	r1, [sp, #60]	; 0x3c
 8019dae:	0e09      	lsrs	r1, r1, #24
 8019db0:	9116      	str	r1, [sp, #88]	; 0x58
 8019db2:	b292      	uxth	r2, r2
 8019db4:	b280      	uxth	r0, r0
 8019db6:	fb02 f800 	mul.w	r8, r2, r0
 8019dba:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8019dbe:	0112      	lsls	r2, r2, #4
 8019dc0:	eba2 0e08 	sub.w	lr, r2, r8
 8019dc4:	b280      	uxth	r0, r0
 8019dc6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019dca:	9915      	ldr	r1, [sp, #84]	; 0x54
 8019dcc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019dce:	fa1f fe8e 	uxth.w	lr, lr
 8019dd2:	1a12      	subs	r2, r2, r0
 8019dd4:	b292      	uxth	r2, r2
 8019dd6:	fb0e f101 	mul.w	r1, lr, r1
 8019dda:	fb02 110c 	mla	r1, r2, ip, r1
 8019dde:	fb00 1105 	mla	r1, r0, r5, r1
 8019de2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019de4:	fb08 1105 	mla	r1, r8, r5, r1
 8019de8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019dec:	2900      	cmp	r1, #0
 8019dee:	f000 80f5 	beq.w	8019fdc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8019df2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019df6:	d019      	beq.n	8019e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8019df8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019dfc:	fb0c fa0a 	mul.w	sl, ip, sl
 8019e00:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019e04:	fb0c fc03 	mul.w	ip, ip, r3
 8019e08:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019e0c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019e10:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019e14:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019e18:	4453      	add	r3, sl
 8019e1a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019e1e:	0a1b      	lsrs	r3, r3, #8
 8019e20:	0a3f      	lsrs	r7, r7, #8
 8019e22:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019e26:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019e2a:	433b      	orrs	r3, r7
 8019e2c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019e2e:	2dff      	cmp	r5, #255	; 0xff
 8019e30:	d020      	beq.n	8019e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8019e32:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019e34:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019e38:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019e3a:	436f      	muls	r7, r5
 8019e3c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019e3e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019e42:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019e44:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019e48:	fb05 fa0a 	mul.w	sl, r5, sl
 8019e4c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019e50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019e54:	44bc      	add	ip, r7
 8019e56:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019e5a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019e5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019e62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019e66:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019e6a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019e6e:	ea4c 050a 	orr.w	r5, ip, sl
 8019e72:	950e      	str	r5, [sp, #56]	; 0x38
 8019e74:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019e76:	2dff      	cmp	r5, #255	; 0xff
 8019e78:	d020      	beq.n	8019ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8019e7a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019e7c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019e80:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019e82:	436f      	muls	r7, r5
 8019e84:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019e86:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019e8a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019e8c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019e90:	fb05 fa0a 	mul.w	sl, r5, sl
 8019e94:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019e98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019e9c:	44bc      	add	ip, r7
 8019e9e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019ea2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019ea6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019eaa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019eae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019eb2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019eb6:	ea4c 050a 	orr.w	r5, ip, sl
 8019eba:	9509      	str	r5, [sp, #36]	; 0x24
 8019ebc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019ebe:	2dff      	cmp	r5, #255	; 0xff
 8019ec0:	d020      	beq.n	8019f04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8019ec2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019ec4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019ec8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019eca:	436f      	muls	r7, r5
 8019ecc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019ece:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019ed2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019ed4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019ed8:	fb05 fa0a 	mul.w	sl, r5, sl
 8019edc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019ee0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019ee4:	44bc      	add	ip, r7
 8019ee6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019eea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019eee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019ef2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019ef6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019efa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019efe:	ea4c 050a 	orr.w	r5, ip, sl
 8019f02:	950f      	str	r5, [sp, #60]	; 0x3c
 8019f04:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019f06:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019f0a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019f0c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019f10:	fb0e f707 	mul.w	r7, lr, r7
 8019f14:	fb02 770c 	mla	r7, r2, ip, r7
 8019f18:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019f1c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019f1e:	fb00 770c 	mla	r7, r0, ip, r7
 8019f22:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019f26:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019f28:	fb08 770c 	mla	r7, r8, ip, r7
 8019f2c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8019f30:	fb0e fe0c 	mul.w	lr, lr, ip
 8019f34:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019f38:	fb02 e303 	mla	r3, r2, r3, lr
 8019f3c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019f3e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019f40:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019f44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019f46:	fb00 330a 	mla	r3, r0, sl, r3
 8019f4a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8019f4e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019f52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019f54:	f8b9 0000 	ldrh.w	r0, [r9]
 8019f58:	4359      	muls	r1, r3
 8019f5a:	0a3f      	lsrs	r7, r7, #8
 8019f5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019f60:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019f64:	1c4b      	adds	r3, r1, #1
 8019f66:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019f6a:	ea47 070c 	orr.w	r7, r7, ip
 8019f6e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019f72:	1202      	asrs	r2, r0, #8
 8019f74:	0c3b      	lsrs	r3, r7, #16
 8019f76:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019f7a:	b2c9      	uxtb	r1, r1
 8019f7c:	fb13 f305 	smulbb	r3, r3, r5
 8019f80:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019f84:	fb02 3201 	mla	r2, r2, r1, r3
 8019f88:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8019f8c:	10c3      	asrs	r3, r0, #3
 8019f8e:	b2ff      	uxtb	r7, r7
 8019f90:	00c0      	lsls	r0, r0, #3
 8019f92:	b2c0      	uxtb	r0, r0
 8019f94:	fb17 f705 	smulbb	r7, r7, r5
 8019f98:	fb00 7001 	mla	r0, r0, r1, r7
 8019f9c:	b292      	uxth	r2, r2
 8019f9e:	fb1c fc05 	smulbb	ip, ip, r5
 8019fa2:	b280      	uxth	r0, r0
 8019fa4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019fa8:	fb03 c301 	mla	r3, r3, r1, ip
 8019fac:	1c51      	adds	r1, r2, #1
 8019fae:	f100 0c01 	add.w	ip, r0, #1
 8019fb2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019fb6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8019fba:	b29b      	uxth	r3, r3
 8019fbc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019fc0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019fc4:	ea4c 0202 	orr.w	r2, ip, r2
 8019fc8:	f103 0c01 	add.w	ip, r3, #1
 8019fcc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8019fd0:	095b      	lsrs	r3, r3, #5
 8019fd2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019fd6:	431a      	orrs	r2, r3
 8019fd8:	f8a9 2000 	strh.w	r2, [r9]
 8019fdc:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019fde:	441c      	add	r4, r3
 8019fe0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019fe2:	f109 0902 	add.w	r9, r9, #2
 8019fe6:	441e      	add	r6, r3
 8019fe8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019fec:	e647      	b.n	8019c7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 8019fee:	2800      	cmp	r0, #0
 8019ff0:	f43f aedf 	beq.w	8019db2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019ff4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8019ff8:	9109      	str	r1, [sp, #36]	; 0x24
 8019ffa:	0e09      	lsrs	r1, r1, #24
 8019ffc:	9112      	str	r1, [sp, #72]	; 0x48
 8019ffe:	e6d8      	b.n	8019db2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a000:	b01d      	add	sp, #116	; 0x74
 801a002:	ecbd 8b08 	vpop	{d8-d11}
 801a006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a00c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801a00c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a010:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801a014:	fb04 5603 	mla	r6, r4, r3, r5
 801a018:	2c00      	cmp	r4, #0
 801a01a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a01e:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801a022:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801a026:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801a02a:	db37      	blt.n	801a09c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 801a02c:	45a6      	cmp	lr, r4
 801a02e:	dd35      	ble.n	801a09c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 801a030:	2d00      	cmp	r5, #0
 801a032:	db31      	blt.n	801a098 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801a034:	42ab      	cmp	r3, r5
 801a036:	dd2f      	ble.n	801a098 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801a038:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801a03c:	1c6e      	adds	r6, r5, #1
 801a03e:	d430      	bmi.n	801a0a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 801a040:	42b3      	cmp	r3, r6
 801a042:	dd2e      	ble.n	801a0a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 801a044:	b378      	cbz	r0, 801a0a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 801a046:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801a04a:	3401      	adds	r4, #1
 801a04c:	d42f      	bmi.n	801a0ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 801a04e:	45a6      	cmp	lr, r4
 801a050:	dd2d      	ble.n	801a0ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 801a052:	b37f      	cbz	r7, 801a0b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 801a054:	2d00      	cmp	r5, #0
 801a056:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 801a05a:	db26      	blt.n	801a0aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801a05c:	42ab      	cmp	r3, r5
 801a05e:	dd24      	ble.n	801a0aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801a060:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801a064:	3501      	adds	r5, #1
 801a066:	d428      	bmi.n	801a0ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801a068:	42ab      	cmp	r3, r5
 801a06a:	dd26      	ble.n	801a0ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801a06c:	b338      	cbz	r0, 801a0be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 801a06e:	f8de 3004 	ldr.w	r3, [lr, #4]
 801a072:	280f      	cmp	r0, #15
 801a074:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801a078:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801a07c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a080:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801a084:	d801      	bhi.n	801a08a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 801a086:	2f0f      	cmp	r7, #15
 801a088:	d91b      	bls.n	801a0c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 801a08a:	4b87      	ldr	r3, [pc, #540]	; (801a2a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801a08c:	4a87      	ldr	r2, [pc, #540]	; (801a2ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801a08e:	4888      	ldr	r0, [pc, #544]	; (801a2b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 801a090:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801a094:	f001 fd42 	bl	801bb1c <__assert_func>
 801a098:	2200      	movs	r2, #0
 801a09a:	e7cf      	b.n	801a03c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 801a09c:	2600      	movs	r6, #0
 801a09e:	4632      	mov	r2, r6
 801a0a0:	e7d3      	b.n	801a04a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801a0a2:	2600      	movs	r6, #0
 801a0a4:	e7d1      	b.n	801a04a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801a0a6:	4606      	mov	r6, r0
 801a0a8:	e7cf      	b.n	801a04a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801a0aa:	2400      	movs	r4, #0
 801a0ac:	e7da      	b.n	801a064 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 801a0ae:	2300      	movs	r3, #0
 801a0b0:	461c      	mov	r4, r3
 801a0b2:	e7de      	b.n	801a072 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a0b4:	463b      	mov	r3, r7
 801a0b6:	463c      	mov	r4, r7
 801a0b8:	e7db      	b.n	801a072 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a0ba:	2300      	movs	r3, #0
 801a0bc:	e7d9      	b.n	801a072 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a0be:	4603      	mov	r3, r0
 801a0c0:	e7d7      	b.n	801a072 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a0c2:	b280      	uxth	r0, r0
 801a0c4:	b2bf      	uxth	r7, r7
 801a0c6:	fb07 fe00 	mul.w	lr, r7, r0
 801a0ca:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801a0ce:	0100      	lsls	r0, r0, #4
 801a0d0:	eba0 0c0e 	sub.w	ip, r0, lr
 801a0d4:	b2bf      	uxth	r7, r7
 801a0d6:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801a0da:	fa1f fc8c 	uxth.w	ip, ip
 801a0de:	1bed      	subs	r5, r5, r7
 801a0e0:	b2ad      	uxth	r5, r5
 801a0e2:	fb0c f00a 	mul.w	r0, ip, sl
 801a0e6:	fb0b 0005 	mla	r0, fp, r5, r0
 801a0ea:	fb07 0009 	mla	r0, r7, r9, r0
 801a0ee:	fb0e 0008 	mla	r0, lr, r8, r0
 801a0f2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a0f6:	9001      	str	r0, [sp, #4]
 801a0f8:	2800      	cmp	r0, #0
 801a0fa:	f000 80d1 	beq.w	801a2a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 801a0fe:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a102:	d018      	beq.n	801a136 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 801a104:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a108:	fb0b f000 	mul.w	r0, fp, r0
 801a10c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a110:	fb0b fb02 	mul.w	fp, fp, r2
 801a114:	0a02      	lsrs	r2, r0, #8
 801a116:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a11a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a11e:	4402      	add	r2, r0
 801a120:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801a124:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801a128:	0a12      	lsrs	r2, r2, #8
 801a12a:	0a00      	lsrs	r0, r0, #8
 801a12c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a130:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a134:	4302      	orrs	r2, r0
 801a136:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a13a:	d01a      	beq.n	801a172 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 801a13c:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801a140:	fb0a f000 	mul.w	r0, sl, r0
 801a144:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a148:	fb0a fa06 	mul.w	sl, sl, r6
 801a14c:	0a06      	lsrs	r6, r0, #8
 801a14e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a152:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a156:	4406      	add	r6, r0
 801a158:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801a15c:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801a160:	0a36      	lsrs	r6, r6, #8
 801a162:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a166:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a16a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a16e:	ea46 060a 	orr.w	r6, r6, sl
 801a172:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a176:	d01b      	beq.n	801a1b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 801a178:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801a17c:	fb09 fa0a 	mul.w	sl, r9, sl
 801a180:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a184:	fb09 f004 	mul.w	r0, r9, r4
 801a188:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801a18c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a190:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a194:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801a198:	4454      	add	r4, sl
 801a19a:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801a19e:	0a24      	lsrs	r4, r4, #8
 801a1a0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a1a4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a1a8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a1ac:	ea44 0409 	orr.w	r4, r4, r9
 801a1b0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a1b4:	d01b      	beq.n	801a1ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 801a1b6:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801a1ba:	fb08 f909 	mul.w	r9, r8, r9
 801a1be:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a1c2:	fb08 f003 	mul.w	r0, r8, r3
 801a1c6:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801a1ca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a1ce:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801a1d2:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801a1d6:	444b      	add	r3, r9
 801a1d8:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801a1dc:	0a1b      	lsrs	r3, r3, #8
 801a1de:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a1e2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a1e6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a1ea:	ea43 0308 	orr.w	r3, r3, r8
 801a1ee:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a1f2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a1f6:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801a1fa:	fb0c f808 	mul.w	r8, ip, r8
 801a1fe:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a202:	fb0c f606 	mul.w	r6, ip, r6
 801a206:	fb05 8909 	mla	r9, r5, r9, r8
 801a20a:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801a20e:	fb05 6502 	mla	r5, r5, r2, r6
 801a212:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a216:	fb07 9908 	mla	r9, r7, r8, r9
 801a21a:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801a21e:	fb07 5704 	mla	r7, r7, r4, r5
 801a222:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a226:	8808      	ldrh	r0, [r1, #0]
 801a228:	fb0e 9808 	mla	r8, lr, r8, r9
 801a22c:	fb0e 7e03 	mla	lr, lr, r3, r7
 801a230:	9b01      	ldr	r3, [sp, #4]
 801a232:	43da      	mvns	r2, r3
 801a234:	1203      	asrs	r3, r0, #8
 801a236:	b2d2      	uxtb	r2, r2
 801a238:	10c4      	asrs	r4, r0, #3
 801a23a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a23e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a242:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801a246:	00c0      	lsls	r0, r0, #3
 801a248:	4353      	muls	r3, r2
 801a24a:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801a24e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a252:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801a256:	b2c0      	uxtb	r0, r0
 801a258:	ea48 0e0e 	orr.w	lr, r8, lr
 801a25c:	4354      	muls	r4, r2
 801a25e:	4350      	muls	r0, r2
 801a260:	1c5a      	adds	r2, r3, #1
 801a262:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a266:	ea4f 431e 	mov.w	r3, lr, lsr #16
 801a26a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a26e:	1c62      	adds	r2, r4, #1
 801a270:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801a274:	ea4f 221e 	mov.w	r2, lr, lsr #8
 801a278:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a27c:	021b      	lsls	r3, r3, #8
 801a27e:	00d2      	lsls	r2, r2, #3
 801a280:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a284:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801a288:	4313      	orrs	r3, r2
 801a28a:	1c42      	adds	r2, r0, #1
 801a28c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a290:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 801a294:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 801a298:	ea4e 0e03 	orr.w	lr, lr, r3
 801a29c:	f8a1 e000 	strh.w	lr, [r1]
 801a2a0:	b003      	add	sp, #12
 801a2a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a2a6:	bf00      	nop
 801a2a8:	0802062e 	.word	0x0802062e
 801a2ac:	08020bfe 	.word	0x08020bfe
 801a2b0:	080206b2 	.word	0x080206b2

0801a2b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a2b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2b8:	ed2d 8b08 	vpush	{d8-d11}
 801a2bc:	b09b      	sub	sp, #108	; 0x6c
 801a2be:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801a2c2:	9218      	str	r2, [sp, #96]	; 0x60
 801a2c4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801a2c6:	9116      	str	r1, [sp, #88]	; 0x58
 801a2c8:	9307      	str	r3, [sp, #28]
 801a2ca:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801a2ce:	9019      	str	r0, [sp, #100]	; 0x64
 801a2d0:	6850      	ldr	r0, [r2, #4]
 801a2d2:	6812      	ldr	r2, [r2, #0]
 801a2d4:	fb00 1303 	mla	r3, r0, r3, r1
 801a2d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a2dc:	930a      	str	r3, [sp, #40]	; 0x28
 801a2de:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a2e0:	681b      	ldr	r3, [r3, #0]
 801a2e2:	930f      	str	r3, [sp, #60]	; 0x3c
 801a2e4:	eeb0 aa40 	vmov.f32	s20, s0
 801a2e8:	eef0 9a60 	vmov.f32	s19, s1
 801a2ec:	eeb0 9a41 	vmov.f32	s18, s2
 801a2f0:	eeb0 8a62 	vmov.f32	s16, s5
 801a2f4:	eef0 8a43 	vmov.f32	s17, s6
 801a2f8:	eef0 ba44 	vmov.f32	s23, s8
 801a2fc:	eeb0 ba64 	vmov.f32	s22, s9
 801a300:	eef0 aa45 	vmov.f32	s21, s10
 801a304:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a306:	2b00      	cmp	r3, #0
 801a308:	dc03      	bgt.n	801a312 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a30a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a30c:	2b00      	cmp	r3, #0
 801a30e:	f340 8386 	ble.w	801aa1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801a312:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a314:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a318:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a31c:	1e48      	subs	r0, r1, #1
 801a31e:	1e57      	subs	r7, r2, #1
 801a320:	9b07      	ldr	r3, [sp, #28]
 801a322:	2b00      	cmp	r3, #0
 801a324:	f340 8166 	ble.w	801a5f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 801a328:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a32c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a330:	d406      	bmi.n	801a340 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a332:	4584      	cmp	ip, r0
 801a334:	da04      	bge.n	801a340 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a336:	2b00      	cmp	r3, #0
 801a338:	db02      	blt.n	801a340 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a33a:	42bb      	cmp	r3, r7
 801a33c:	f2c0 815b 	blt.w	801a5f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801a340:	f11c 0c01 	adds.w	ip, ip, #1
 801a344:	f100 814b 	bmi.w	801a5de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a348:	4561      	cmp	r1, ip
 801a34a:	f2c0 8148 	blt.w	801a5de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a34e:	3301      	adds	r3, #1
 801a350:	f100 8145 	bmi.w	801a5de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a354:	429a      	cmp	r2, r3
 801a356:	f2c0 8142 	blt.w	801a5de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a35a:	9b07      	ldr	r3, [sp, #28]
 801a35c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a35e:	9317      	str	r3, [sp, #92]	; 0x5c
 801a360:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a362:	2b00      	cmp	r3, #0
 801a364:	f340 8165 	ble.w	801a632 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a368:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801a36a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a36c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a370:	689b      	ldr	r3, [r3, #8]
 801a372:	1422      	asrs	r2, r4, #16
 801a374:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a378:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a37c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a380:	f100 81d5 	bmi.w	801a72e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a384:	f103 38ff 	add.w	r8, r3, #4294967295
 801a388:	4542      	cmp	r2, r8
 801a38a:	f280 81d0 	bge.w	801a72e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a38e:	f1bc 0f00 	cmp.w	ip, #0
 801a392:	f2c0 81cc 	blt.w	801a72e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a396:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a39a:	45c4      	cmp	ip, r8
 801a39c:	f280 81c7 	bge.w	801a72e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a3a0:	b21b      	sxth	r3, r3
 801a3a2:	fb0c 2203 	mla	r2, ip, r3, r2
 801a3a6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a3a8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801a3ac:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801a3b0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801a3b4:	2900      	cmp	r1, #0
 801a3b6:	f000 8182 	beq.w	801a6be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 801a3ba:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801a3be:	950b      	str	r5, [sp, #44]	; 0x2c
 801a3c0:	0e2d      	lsrs	r5, r5, #24
 801a3c2:	9512      	str	r5, [sp, #72]	; 0x48
 801a3c4:	b180      	cbz	r0, 801a3e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a3c6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801a3ca:	3b01      	subs	r3, #1
 801a3cc:	009b      	lsls	r3, r3, #2
 801a3ce:	3304      	adds	r3, #4
 801a3d0:	eb08 0c03 	add.w	ip, r8, r3
 801a3d4:	f858 3003 	ldr.w	r3, [r8, r3]
 801a3d8:	9308      	str	r3, [sp, #32]
 801a3da:	0e1b      	lsrs	r3, r3, #24
 801a3dc:	9310      	str	r3, [sp, #64]	; 0x40
 801a3de:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801a3e2:	930c      	str	r3, [sp, #48]	; 0x30
 801a3e4:	0e1b      	lsrs	r3, r3, #24
 801a3e6:	9313      	str	r3, [sp, #76]	; 0x4c
 801a3e8:	b289      	uxth	r1, r1
 801a3ea:	b280      	uxth	r0, r0
 801a3ec:	fb01 f900 	mul.w	r9, r1, r0
 801a3f0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a3f4:	0109      	lsls	r1, r1, #4
 801a3f6:	eba1 0809 	sub.w	r8, r1, r9
 801a3fa:	b280      	uxth	r0, r0
 801a3fc:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801a400:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a402:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a404:	fa1f f888 	uxth.w	r8, r8
 801a408:	1a09      	subs	r1, r1, r0
 801a40a:	b289      	uxth	r1, r1
 801a40c:	fb08 f303 	mul.w	r3, r8, r3
 801a410:	fb01 330e 	mla	r3, r1, lr, r3
 801a414:	fb00 3305 	mla	r3, r0, r5, r3
 801a418:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a41a:	fb09 3305 	mla	r3, r9, r5, r3
 801a41e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a422:	2b00      	cmp	r3, #0
 801a424:	f000 80d2 	beq.w	801a5cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a428:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a42c:	d01b      	beq.n	801a466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801a42e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801a432:	fb0e fa0a 	mul.w	sl, lr, sl
 801a436:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a43a:	fb0e fe02 	mul.w	lr, lr, r2
 801a43e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801a442:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a446:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a44a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a44e:	4452      	add	r2, sl
 801a450:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a454:	0a12      	lsrs	r2, r2, #8
 801a456:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a45a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a45e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a462:	ea42 020c 	orr.w	r2, r2, ip
 801a466:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a468:	2dff      	cmp	r5, #255	; 0xff
 801a46a:	d021      	beq.n	801a4b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801a46c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a46e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a472:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a474:	fb05 fb0b 	mul.w	fp, r5, fp
 801a478:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a47a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a47e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a480:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a484:	fb05 fa0a 	mul.w	sl, r5, sl
 801a488:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a48c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a490:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a494:	44de      	add	lr, fp
 801a496:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a49a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a49e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a4a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a4a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a4aa:	ea4e 050a 	orr.w	r5, lr, sl
 801a4ae:	950b      	str	r5, [sp, #44]	; 0x2c
 801a4b0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a4b2:	2dff      	cmp	r5, #255	; 0xff
 801a4b4:	d021      	beq.n	801a4fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a4b6:	9d08      	ldr	r5, [sp, #32]
 801a4b8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a4bc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a4be:	fb05 fb0b 	mul.w	fp, r5, fp
 801a4c2:	9d08      	ldr	r5, [sp, #32]
 801a4c4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a4c8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a4ca:	fb05 fa0e 	mul.w	sl, r5, lr
 801a4ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a4d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a4d6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a4da:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a4de:	44de      	add	lr, fp
 801a4e0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a4e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a4e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a4ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a4f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a4f4:	ea4e 050a 	orr.w	r5, lr, sl
 801a4f8:	9508      	str	r5, [sp, #32]
 801a4fa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a4fc:	2dff      	cmp	r5, #255	; 0xff
 801a4fe:	d021      	beq.n	801a544 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a500:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a502:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a506:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a508:	fb05 fb0b 	mul.w	fp, r5, fp
 801a50c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a50e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a512:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a514:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a518:	fb05 fa0a 	mul.w	sl, r5, sl
 801a51c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a520:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a524:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a528:	44de      	add	lr, fp
 801a52a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a52e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a532:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a536:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a53a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a53e:	ea4e 050a 	orr.w	r5, lr, sl
 801a542:	950c      	str	r5, [sp, #48]	; 0x30
 801a544:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a546:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a54a:	9d08      	ldr	r5, [sp, #32]
 801a54c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801a550:	fb08 fc0c 	mul.w	ip, r8, ip
 801a554:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a558:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a55c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a55e:	fb00 cc0e 	mla	ip, r0, lr, ip
 801a562:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a566:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a568:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a56c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a570:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a574:	fb08 f80e 	mul.w	r8, r8, lr
 801a578:	fb01 8202 	mla	r2, r1, r2, r8
 801a57c:	9908      	ldr	r1, [sp, #32]
 801a57e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a582:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a584:	fb00 220a 	mla	r2, r0, sl, r2
 801a588:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801a58c:	fb09 2900 	mla	r9, r9, r0, r2
 801a590:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a594:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a598:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a59c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a5a0:	ea4c 0c09 	orr.w	ip, ip, r9
 801a5a4:	2bff      	cmp	r3, #255	; 0xff
 801a5a6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801a5aa:	f040 8091 	bne.w	801a6d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801a5ae:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801a5b2:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801a5b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a5ba:	f022 0207 	bic.w	r2, r2, #7
 801a5be:	431a      	orrs	r2, r3
 801a5c0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801a5c4:	ea4c 0c02 	orr.w	ip, ip, r2
 801a5c8:	f8a7 c000 	strh.w	ip, [r7]
 801a5cc:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a5ce:	441c      	add	r4, r3
 801a5d0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a5d2:	441e      	add	r6, r3
 801a5d4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a5d6:	3b01      	subs	r3, #1
 801a5d8:	3702      	adds	r7, #2
 801a5da:	9317      	str	r3, [sp, #92]	; 0x5c
 801a5dc:	e6c0      	b.n	801a360 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801a5de:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a5e0:	441c      	add	r4, r3
 801a5e2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a5e4:	441e      	add	r6, r3
 801a5e6:	9b07      	ldr	r3, [sp, #28]
 801a5e8:	3b01      	subs	r3, #1
 801a5ea:	9307      	str	r3, [sp, #28]
 801a5ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a5ee:	3302      	adds	r3, #2
 801a5f0:	930a      	str	r3, [sp, #40]	; 0x28
 801a5f2:	e695      	b.n	801a320 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a5f4:	d024      	beq.n	801a640 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801a5f6:	9b07      	ldr	r3, [sp, #28]
 801a5f8:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801a5fa:	3b01      	subs	r3, #1
 801a5fc:	fb00 4003 	mla	r0, r0, r3, r4
 801a600:	1400      	asrs	r0, r0, #16
 801a602:	f53f aeaa 	bmi.w	801a35a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a606:	3901      	subs	r1, #1
 801a608:	4288      	cmp	r0, r1
 801a60a:	f6bf aea6 	bge.w	801a35a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a60e:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801a610:	fb01 6303 	mla	r3, r1, r3, r6
 801a614:	141b      	asrs	r3, r3, #16
 801a616:	f53f aea0 	bmi.w	801a35a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a61a:	3a01      	subs	r2, #1
 801a61c:	4293      	cmp	r3, r2
 801a61e:	f6bf ae9c 	bge.w	801a35a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a622:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a626:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801a62a:	f1bb 0f00 	cmp.w	fp, #0
 801a62e:	f300 809a 	bgt.w	801a766 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801a632:	9b07      	ldr	r3, [sp, #28]
 801a634:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a638:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a63a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a63e:	930a      	str	r3, [sp, #40]	; 0x28
 801a640:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a642:	2b00      	cmp	r3, #0
 801a644:	f340 81eb 	ble.w	801aa1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801a648:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a64c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a650:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a654:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a656:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a65a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a65e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a662:	eef0 6a48 	vmov.f32	s13, s16
 801a666:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a66a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a66e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a672:	ee16 4a90 	vmov	r4, s13
 801a676:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a67a:	eef0 6a68 	vmov.f32	s13, s17
 801a67e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a682:	ee18 2a10 	vmov	r2, s16
 801a686:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a68a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a68e:	ee18 2a90 	vmov	r2, s17
 801a692:	932f      	str	r3, [sp, #188]	; 0xbc
 801a694:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a696:	fb92 f3f3 	sdiv	r3, r2, r3
 801a69a:	9330      	str	r3, [sp, #192]	; 0xc0
 801a69c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a69e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a6a0:	3b01      	subs	r3, #1
 801a6a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a6a6:	9316      	str	r3, [sp, #88]	; 0x58
 801a6a8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a6aa:	bf08      	it	eq
 801a6ac:	4613      	moveq	r3, r2
 801a6ae:	ee16 6a90 	vmov	r6, s13
 801a6b2:	9307      	str	r3, [sp, #28]
 801a6b4:	eef0 8a67 	vmov.f32	s17, s15
 801a6b8:	eeb0 8a47 	vmov.f32	s16, s14
 801a6bc:	e622      	b.n	801a304 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a6be:	2800      	cmp	r0, #0
 801a6c0:	f43f ae92 	beq.w	801a3e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a6c4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801a6c8:	9308      	str	r3, [sp, #32]
 801a6ca:	0e1b      	lsrs	r3, r3, #24
 801a6cc:	9310      	str	r3, [sp, #64]	; 0x40
 801a6ce:	e68b      	b.n	801a3e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a6d0:	8839      	ldrh	r1, [r7, #0]
 801a6d2:	4dd5      	ldr	r5, [pc, #852]	; (801aa28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801a6d4:	43db      	mvns	r3, r3
 801a6d6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801a6da:	fa5f f883 	uxtb.w	r8, r3
 801a6de:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a6e2:	fb0e fe08 	mul.w	lr, lr, r8
 801a6e6:	10c8      	asrs	r0, r1, #3
 801a6e8:	00cb      	lsls	r3, r1, #3
 801a6ea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a6ee:	f10e 0101 	add.w	r1, lr, #1
 801a6f2:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801a6f6:	fb00 f008 	mul.w	r0, r0, r8
 801a6fa:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801a6fe:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801a702:	f100 0e01 	add.w	lr, r0, #1
 801a706:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801a70a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a70e:	b2db      	uxtb	r3, r3
 801a710:	b2c9      	uxtb	r1, r1
 801a712:	00d2      	lsls	r2, r2, #3
 801a714:	fb03 f308 	mul.w	r3, r3, r8
 801a718:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801a71c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a720:	430a      	orrs	r2, r1
 801a722:	1c59      	adds	r1, r3, #1
 801a724:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a728:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a72c:	e748      	b.n	801a5c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a72e:	f112 0801 	adds.w	r8, r2, #1
 801a732:	f53f af4b 	bmi.w	801a5cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a736:	4543      	cmp	r3, r8
 801a738:	f6ff af48 	blt.w	801a5cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a73c:	f11c 0801 	adds.w	r8, ip, #1
 801a740:	f53f af44 	bmi.w	801a5cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a744:	45c6      	cmp	lr, r8
 801a746:	f6ff af41 	blt.w	801a5cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a74a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801a74e:	fa0f f28e 	sxth.w	r2, lr
 801a752:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801a756:	9200      	str	r2, [sp, #0]
 801a758:	b21b      	sxth	r3, r3
 801a75a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a75c:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a75e:	4639      	mov	r1, r7
 801a760:	f7ff fc54 	bl	801a00c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801a764:	e732      	b.n	801a5cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a766:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a768:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a76a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801a76e:	1421      	asrs	r1, r4, #16
 801a770:	1433      	asrs	r3, r6, #16
 801a772:	fb07 1303 	mla	r3, r7, r3, r1
 801a776:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a778:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801a77c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801a780:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a784:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a788:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a78c:	2a00      	cmp	r2, #0
 801a78e:	f000 8107 	beq.w	801a9a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 801a792:	684d      	ldr	r5, [r1, #4]
 801a794:	950d      	str	r5, [sp, #52]	; 0x34
 801a796:	0e2d      	lsrs	r5, r5, #24
 801a798:	9514      	str	r5, [sp, #80]	; 0x50
 801a79a:	b178      	cbz	r0, 801a7bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801a79c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801a7a0:	3f01      	subs	r7, #1
 801a7a2:	00bf      	lsls	r7, r7, #2
 801a7a4:	3704      	adds	r7, #4
 801a7a6:	eb01 0e07 	add.w	lr, r1, r7
 801a7aa:	59c9      	ldr	r1, [r1, r7]
 801a7ac:	9109      	str	r1, [sp, #36]	; 0x24
 801a7ae:	0e09      	lsrs	r1, r1, #24
 801a7b0:	9111      	str	r1, [sp, #68]	; 0x44
 801a7b2:	f8de 1004 	ldr.w	r1, [lr, #4]
 801a7b6:	910e      	str	r1, [sp, #56]	; 0x38
 801a7b8:	0e09      	lsrs	r1, r1, #24
 801a7ba:	9115      	str	r1, [sp, #84]	; 0x54
 801a7bc:	b292      	uxth	r2, r2
 801a7be:	b280      	uxth	r0, r0
 801a7c0:	fb02 f900 	mul.w	r9, r2, r0
 801a7c4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a7c8:	0112      	lsls	r2, r2, #4
 801a7ca:	eba2 0e09 	sub.w	lr, r2, r9
 801a7ce:	b280      	uxth	r0, r0
 801a7d0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a7d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a7d6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a7d8:	fa1f fe8e 	uxth.w	lr, lr
 801a7dc:	1a09      	subs	r1, r1, r0
 801a7de:	b289      	uxth	r1, r1
 801a7e0:	fb0e f202 	mul.w	r2, lr, r2
 801a7e4:	fb01 220c 	mla	r2, r1, ip, r2
 801a7e8:	fb00 2205 	mla	r2, r0, r5, r2
 801a7ec:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a7ee:	fb09 2205 	mla	r2, r9, r5, r2
 801a7f2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a7f6:	2a00      	cmp	r2, #0
 801a7f8:	f000 80c9 	beq.w	801a98e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801a7fc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a800:	d019      	beq.n	801a836 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 801a802:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a806:	fb0c fa0a 	mul.w	sl, ip, sl
 801a80a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a80e:	fb0c fc03 	mul.w	ip, ip, r3
 801a812:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a816:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a81a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a81e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a822:	4453      	add	r3, sl
 801a824:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a828:	0a1b      	lsrs	r3, r3, #8
 801a82a:	0a3f      	lsrs	r7, r7, #8
 801a82c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a830:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a834:	433b      	orrs	r3, r7
 801a836:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a838:	2dff      	cmp	r5, #255	; 0xff
 801a83a:	d020      	beq.n	801a87e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 801a83c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a83e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a842:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a844:	436f      	muls	r7, r5
 801a846:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a848:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a84c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a84e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a852:	fb05 fa0a 	mul.w	sl, r5, sl
 801a856:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a85a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a85e:	44bc      	add	ip, r7
 801a860:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a864:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a868:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a86c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a870:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a874:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a878:	ea4c 050a 	orr.w	r5, ip, sl
 801a87c:	950d      	str	r5, [sp, #52]	; 0x34
 801a87e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a880:	2dff      	cmp	r5, #255	; 0xff
 801a882:	d020      	beq.n	801a8c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 801a884:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a886:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a88a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a88c:	436f      	muls	r7, r5
 801a88e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a890:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a894:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a896:	fb05 fa0c 	mul.w	sl, r5, ip
 801a89a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a89e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a8a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a8a6:	44bc      	add	ip, r7
 801a8a8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a8ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a8b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a8b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a8b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a8bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a8c0:	ea4c 050a 	orr.w	r5, ip, sl
 801a8c4:	9509      	str	r5, [sp, #36]	; 0x24
 801a8c6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a8c8:	2dff      	cmp	r5, #255	; 0xff
 801a8ca:	d020      	beq.n	801a90e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 801a8cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a8ce:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a8d2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a8d4:	436f      	muls	r7, r5
 801a8d6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a8d8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a8dc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a8de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a8e2:	fb05 fa0a 	mul.w	sl, r5, sl
 801a8e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a8ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a8ee:	44bc      	add	ip, r7
 801a8f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a8f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a8f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a8fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a900:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a904:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a908:	ea4c 050a 	orr.w	r5, ip, sl
 801a90c:	950e      	str	r5, [sp, #56]	; 0x38
 801a90e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a910:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a914:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a916:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a91a:	fb0e f707 	mul.w	r7, lr, r7
 801a91e:	fb01 770c 	mla	r7, r1, ip, r7
 801a922:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a926:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a928:	fb00 770c 	mla	r7, r0, ip, r7
 801a92c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a930:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a932:	fb09 770c 	mla	r7, r9, ip, r7
 801a936:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a93a:	fb0e fe0c 	mul.w	lr, lr, ip
 801a93e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a942:	fb01 e303 	mla	r3, r1, r3, lr
 801a946:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a948:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a94c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a94e:	fb00 330a 	mla	r3, r0, sl, r3
 801a952:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a956:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a95a:	0a3f      	lsrs	r7, r7, #8
 801a95c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a960:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a964:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a968:	ea47 070c 	orr.w	r7, r7, ip
 801a96c:	2aff      	cmp	r2, #255	; 0xff
 801a96e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801a972:	d11e      	bne.n	801a9b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 801a974:	097a      	lsrs	r2, r7, #5
 801a976:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801a97a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a97e:	f023 0307 	bic.w	r3, r3, #7
 801a982:	4313      	orrs	r3, r2
 801a984:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801a988:	431f      	orrs	r7, r3
 801a98a:	f8a8 7000 	strh.w	r7, [r8]
 801a98e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a990:	441c      	add	r4, r3
 801a992:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a994:	f108 0802 	add.w	r8, r8, #2
 801a998:	441e      	add	r6, r3
 801a99a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a99e:	e644      	b.n	801a62a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801a9a0:	2800      	cmp	r0, #0
 801a9a2:	f43f af0b 	beq.w	801a7bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801a9a6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801a9aa:	9109      	str	r1, [sp, #36]	; 0x24
 801a9ac:	0e09      	lsrs	r1, r1, #24
 801a9ae:	9111      	str	r1, [sp, #68]	; 0x44
 801a9b0:	e704      	b.n	801a7bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801a9b2:	f8b8 1000 	ldrh.w	r1, [r8]
 801a9b6:	43d2      	mvns	r2, r2
 801a9b8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801a9bc:	fa5f fe82 	uxtb.w	lr, r2
 801a9c0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a9c4:	fb0c fc0e 	mul.w	ip, ip, lr
 801a9c8:	10c8      	asrs	r0, r1, #3
 801a9ca:	00ca      	lsls	r2, r1, #3
 801a9cc:	f10c 0101 	add.w	r1, ip, #1
 801a9d0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801a9d4:	0c39      	lsrs	r1, r7, #16
 801a9d6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801a9da:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a9de:	4912      	ldr	r1, [pc, #72]	; (801aa28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801a9e0:	fb00 f00e 	mul.w	r0, r0, lr
 801a9e4:	fa5f fc8c 	uxtb.w	ip, ip
 801a9e8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801a9ec:	b2d2      	uxtb	r2, r2
 801a9ee:	1c41      	adds	r1, r0, #1
 801a9f0:	fb02 f20e 	mul.w	r2, r2, lr
 801a9f4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801a9f8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a9fc:	1c51      	adds	r1, r2, #1
 801a9fe:	00c0      	lsls	r0, r0, #3
 801aa00:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801aa04:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801aa08:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801aa0c:	ea4c 0c00 	orr.w	ip, ip, r0
 801aa10:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801aa14:	ea47 0c0c 	orr.w	ip, r7, ip
 801aa18:	f8a8 c000 	strh.w	ip, [r8]
 801aa1c:	e7b7      	b.n	801a98e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801aa1e:	b01b      	add	sp, #108	; 0x6c
 801aa20:	ecbd 8b08 	vpop	{d8-d11}
 801aa24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa28:	fffff800 	.word	0xfffff800

0801aa2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801aa2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801aa30:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801aa34:	2c00      	cmp	r4, #0
 801aa36:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801aa3a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801aa3e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801aa42:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801aa46:	fb04 ce03 	mla	lr, r4, r3, ip
 801aa4a:	db60      	blt.n	801ab0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801aa4c:	45a1      	cmp	r9, r4
 801aa4e:	dd5e      	ble.n	801ab0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801aa50:	f1bc 0f00 	cmp.w	ip, #0
 801aa54:	db59      	blt.n	801ab0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801aa56:	45e0      	cmp	r8, ip
 801aa58:	dd57      	ble.n	801ab0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801aa5a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801aa5e:	f01e 0f01 	tst.w	lr, #1
 801aa62:	5c16      	ldrb	r6, [r2, r0]
 801aa64:	bf0c      	ite	eq
 801aa66:	f006 060f 	andeq.w	r6, r6, #15
 801aa6a:	1136      	asrne	r6, r6, #4
 801aa6c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801aa70:	b2f6      	uxtb	r6, r6
 801aa72:	f11c 0001 	adds.w	r0, ip, #1
 801aa76:	d44d      	bmi.n	801ab14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801aa78:	4580      	cmp	r8, r0
 801aa7a:	dd4b      	ble.n	801ab14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801aa7c:	2d00      	cmp	r5, #0
 801aa7e:	d04b      	beq.n	801ab18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801aa80:	f10e 0a01 	add.w	sl, lr, #1
 801aa84:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801aa88:	f01a 0f01 	tst.w	sl, #1
 801aa8c:	5c10      	ldrb	r0, [r2, r0]
 801aa8e:	bf0c      	ite	eq
 801aa90:	f000 000f 	andeq.w	r0, r0, #15
 801aa94:	1100      	asrne	r0, r0, #4
 801aa96:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801aa9a:	b2c0      	uxtb	r0, r0
 801aa9c:	3401      	adds	r4, #1
 801aa9e:	d43f      	bmi.n	801ab20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801aaa0:	45a1      	cmp	r9, r4
 801aaa2:	dd3d      	ble.n	801ab20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801aaa4:	2f00      	cmp	r7, #0
 801aaa6:	f000 80a8 	beq.w	801abfa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 801aaaa:	f1bc 0f00 	cmp.w	ip, #0
 801aaae:	db35      	blt.n	801ab1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801aab0:	45e0      	cmp	r8, ip
 801aab2:	dd33      	ble.n	801ab1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801aab4:	eb03 090e 	add.w	r9, r3, lr
 801aab8:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801aabc:	f019 0f01 	tst.w	r9, #1
 801aac0:	5d14      	ldrb	r4, [r2, r4]
 801aac2:	bf0c      	ite	eq
 801aac4:	f004 040f 	andeq.w	r4, r4, #15
 801aac8:	1124      	asrne	r4, r4, #4
 801aaca:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801aace:	b2e4      	uxtb	r4, r4
 801aad0:	f11c 0c01 	adds.w	ip, ip, #1
 801aad4:	d427      	bmi.n	801ab26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801aad6:	45e0      	cmp	r8, ip
 801aad8:	dd25      	ble.n	801ab26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801aada:	b335      	cbz	r5, 801ab2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801aadc:	3301      	adds	r3, #1
 801aade:	449e      	add	lr, r3
 801aae0:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801aae4:	f01e 0f01 	tst.w	lr, #1
 801aae8:	5cd2      	ldrb	r2, [r2, r3]
 801aaea:	bf0c      	ite	eq
 801aaec:	f002 020f 	andeq.w	r2, r2, #15
 801aaf0:	1112      	asrne	r2, r2, #4
 801aaf2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aaf6:	b2d3      	uxtb	r3, r2
 801aaf8:	2d0f      	cmp	r5, #15
 801aafa:	d917      	bls.n	801ab2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801aafc:	4b42      	ldr	r3, [pc, #264]	; (801ac08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 801aafe:	4a43      	ldr	r2, [pc, #268]	; (801ac0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 801ab00:	4843      	ldr	r0, [pc, #268]	; (801ac10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 801ab02:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801ab06:	f001 f809 	bl	801bb1c <__assert_func>
 801ab0a:	2600      	movs	r6, #0
 801ab0c:	e7b1      	b.n	801aa72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801ab0e:	2000      	movs	r0, #0
 801ab10:	4606      	mov	r6, r0
 801ab12:	e7c3      	b.n	801aa9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801ab14:	2000      	movs	r0, #0
 801ab16:	e7c1      	b.n	801aa9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801ab18:	4628      	mov	r0, r5
 801ab1a:	e7bf      	b.n	801aa9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801ab1c:	2400      	movs	r4, #0
 801ab1e:	e7d7      	b.n	801aad0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801ab20:	2300      	movs	r3, #0
 801ab22:	461c      	mov	r4, r3
 801ab24:	e7e8      	b.n	801aaf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801ab26:	2300      	movs	r3, #0
 801ab28:	e7e6      	b.n	801aaf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801ab2a:	462b      	mov	r3, r5
 801ab2c:	2f0f      	cmp	r7, #15
 801ab2e:	d8e5      	bhi.n	801aafc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801ab30:	b2ad      	uxth	r5, r5
 801ab32:	b2bf      	uxth	r7, r7
 801ab34:	fb05 fc07 	mul.w	ip, r5, r7
 801ab38:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801ab3c:	012d      	lsls	r5, r5, #4
 801ab3e:	b2bf      	uxth	r7, r7
 801ab40:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801ab44:	eba5 050c 	sub.w	r5, r5, ip
 801ab48:	1bd2      	subs	r2, r2, r7
 801ab4a:	b2ad      	uxth	r5, r5
 801ab4c:	b292      	uxth	r2, r2
 801ab4e:	4368      	muls	r0, r5
 801ab50:	fb06 0002 	mla	r0, r6, r2, r0
 801ab54:	fb07 0404 	mla	r4, r7, r4, r0
 801ab58:	fb0c 4303 	mla	r3, ip, r3, r4
 801ab5c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ab60:	b1b3      	cbz	r3, 801ab90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801ab62:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801ab66:	435a      	muls	r2, r3
 801ab68:	1c53      	adds	r3, r2, #1
 801ab6a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ab6e:	4a29      	ldr	r2, [pc, #164]	; (801ac14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 801ab70:	121b      	asrs	r3, r3, #8
 801ab72:	6812      	ldr	r2, [r2, #0]
 801ab74:	2bff      	cmp	r3, #255	; 0xff
 801ab76:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801ab7a:	d10b      	bne.n	801ab94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 801ab7c:	4b26      	ldr	r3, [pc, #152]	; (801ac18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 801ab7e:	0950      	lsrs	r0, r2, #5
 801ab80:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ab84:	4033      	ands	r3, r6
 801ab86:	4318      	orrs	r0, r3
 801ab88:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ab8c:	4302      	orrs	r2, r0
 801ab8e:	800a      	strh	r2, [r1, #0]
 801ab90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ab94:	880d      	ldrh	r5, [r1, #0]
 801ab96:	b29f      	uxth	r7, r3
 801ab98:	122c      	asrs	r4, r5, #8
 801ab9a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801ab9e:	43db      	mvns	r3, r3
 801aba0:	b2db      	uxtb	r3, r3
 801aba2:	fb10 f007 	smulbb	r0, r0, r7
 801aba6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801abaa:	fb04 0403 	mla	r4, r4, r3, r0
 801abae:	b2f6      	uxtb	r6, r6
 801abb0:	10e8      	asrs	r0, r5, #3
 801abb2:	b2d2      	uxtb	r2, r2
 801abb4:	00ed      	lsls	r5, r5, #3
 801abb6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801abba:	fb12 f207 	smulbb	r2, r2, r7
 801abbe:	fb16 f607 	smulbb	r6, r6, r7
 801abc2:	b2ed      	uxtb	r5, r5
 801abc4:	b2a4      	uxth	r4, r4
 801abc6:	fb00 6603 	mla	r6, r0, r3, r6
 801abca:	fb05 2303 	mla	r3, r5, r3, r2
 801abce:	b29a      	uxth	r2, r3
 801abd0:	1c63      	adds	r3, r4, #1
 801abd2:	b2b0      	uxth	r0, r6
 801abd4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801abd8:	1c53      	adds	r3, r2, #1
 801abda:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801abde:	1c42      	adds	r2, r0, #1
 801abe0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801abe4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801abe8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801abec:	0940      	lsrs	r0, r0, #5
 801abee:	4323      	orrs	r3, r4
 801abf0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801abf4:	4303      	orrs	r3, r0
 801abf6:	800b      	strh	r3, [r1, #0]
 801abf8:	e7ca      	b.n	801ab90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801abfa:	2d0f      	cmp	r5, #15
 801abfc:	f63f af7e 	bhi.w	801aafc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801ac00:	463b      	mov	r3, r7
 801ac02:	463c      	mov	r4, r7
 801ac04:	e794      	b.n	801ab30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801ac06:	bf00      	nop
 801ac08:	0802062e 	.word	0x0802062e
 801ac0c:	08020bfe 	.word	0x08020bfe
 801ac10:	080206b2 	.word	0x080206b2
 801ac14:	20013510 	.word	0x20013510
 801ac18:	00fff800 	.word	0x00fff800

0801ac1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac20:	ed2d 8b08 	vpush	{d8-d11}
 801ac24:	b097      	sub	sp, #92	; 0x5c
 801ac26:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801ac2a:	9214      	str	r2, [sp, #80]	; 0x50
 801ac2c:	9309      	str	r3, [sp, #36]	; 0x24
 801ac2e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ac30:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ac34:	910d      	str	r1, [sp, #52]	; 0x34
 801ac36:	930f      	str	r3, [sp, #60]	; 0x3c
 801ac38:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ac3c:	9015      	str	r0, [sp, #84]	; 0x54
 801ac3e:	6850      	ldr	r0, [r2, #4]
 801ac40:	6812      	ldr	r2, [r2, #0]
 801ac42:	fb00 1303 	mla	r3, r0, r3, r1
 801ac46:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ac4a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac4c:	689b      	ldr	r3, [r3, #8]
 801ac4e:	3301      	adds	r3, #1
 801ac50:	f023 0301 	bic.w	r3, r3, #1
 801ac54:	930a      	str	r3, [sp, #40]	; 0x28
 801ac56:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac58:	681f      	ldr	r7, [r3, #0]
 801ac5a:	eeb0 aa40 	vmov.f32	s20, s0
 801ac5e:	eef0 9a60 	vmov.f32	s19, s1
 801ac62:	eeb0 9a41 	vmov.f32	s18, s2
 801ac66:	eeb0 8a62 	vmov.f32	s16, s5
 801ac6a:	eef0 8a43 	vmov.f32	s17, s6
 801ac6e:	eef0 ba44 	vmov.f32	s23, s8
 801ac72:	eeb0 ba64 	vmov.f32	s22, s9
 801ac76:	eef0 aa45 	vmov.f32	s21, s10
 801ac7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ac7c:	2b00      	cmp	r3, #0
 801ac7e:	dc03      	bgt.n	801ac88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ac80:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ac82:	2b00      	cmp	r3, #0
 801ac84:	f340 8287 	ble.w	801b196 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801ac88:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ac8e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ac92:	1e48      	subs	r0, r1, #1
 801ac94:	f102 3cff 	add.w	ip, r2, #4294967295
 801ac98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac9a:	2b00      	cmp	r3, #0
 801ac9c:	f340 80c4 	ble.w	801ae28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801aca0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801aca4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801aca8:	d406      	bmi.n	801acb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801acaa:	4586      	cmp	lr, r0
 801acac:	da04      	bge.n	801acb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801acae:	2b00      	cmp	r3, #0
 801acb0:	db02      	blt.n	801acb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801acb2:	4563      	cmp	r3, ip
 801acb4:	f2c0 80b9 	blt.w	801ae2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801acb8:	f11e 0e01 	adds.w	lr, lr, #1
 801acbc:	f100 80aa 	bmi.w	801ae14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801acc0:	4571      	cmp	r1, lr
 801acc2:	f2c0 80a7 	blt.w	801ae14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801acc6:	3301      	adds	r3, #1
 801acc8:	f100 80a4 	bmi.w	801ae14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801accc:	429a      	cmp	r2, r3
 801acce:	f2c0 80a1 	blt.w	801ae14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801acd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801acd4:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801acd8:	930e      	str	r3, [sp, #56]	; 0x38
 801acda:	46c8      	mov	r8, r9
 801acdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801acde:	2b00      	cmp	r3, #0
 801ace0:	f340 80c3 	ble.w	801ae6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801ace4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ace6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801acea:	1423      	asrs	r3, r4, #16
 801acec:	ea4f 4026 	mov.w	r0, r6, asr #16
 801acf0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801acf4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801acf8:	f100 814d 	bmi.w	801af96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801acfc:	f10c 3bff 	add.w	fp, ip, #4294967295
 801ad00:	455b      	cmp	r3, fp
 801ad02:	f280 8148 	bge.w	801af96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ad06:	2800      	cmp	r0, #0
 801ad08:	f2c0 8145 	blt.w	801af96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ad0c:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ad10:	4558      	cmp	r0, fp
 801ad12:	f280 8140 	bge.w	801af96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ad16:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801ad18:	fb00 3305 	mla	r3, r0, r5, r3
 801ad1c:	0858      	lsrs	r0, r3, #1
 801ad1e:	07dd      	lsls	r5, r3, #31
 801ad20:	f817 c000 	ldrb.w	ip, [r7, r0]
 801ad24:	bf54      	ite	pl
 801ad26:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ad2a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ad2e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ad32:	fa5f fc8c 	uxtb.w	ip, ip
 801ad36:	2a00      	cmp	r2, #0
 801ad38:	f000 80db 	beq.w	801aef2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801ad3c:	1c58      	adds	r0, r3, #1
 801ad3e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801ad42:	07c0      	lsls	r0, r0, #31
 801ad44:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ad48:	bf54      	ite	pl
 801ad4a:	f00e 0e0f 	andpl.w	lr, lr, #15
 801ad4e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801ad52:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ad56:	fa5f f08e 	uxtb.w	r0, lr
 801ad5a:	9010      	str	r0, [sp, #64]	; 0x40
 801ad5c:	b1c9      	cbz	r1, 801ad92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ad5e:	4453      	add	r3, sl
 801ad60:	0858      	lsrs	r0, r3, #1
 801ad62:	07dd      	lsls	r5, r3, #31
 801ad64:	5c38      	ldrb	r0, [r7, r0]
 801ad66:	bf54      	ite	pl
 801ad68:	f000 000f 	andpl.w	r0, r0, #15
 801ad6c:	1100      	asrmi	r0, r0, #4
 801ad6e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ad72:	3301      	adds	r3, #1
 801ad74:	b2c0      	uxtb	r0, r0
 801ad76:	900b      	str	r0, [sp, #44]	; 0x2c
 801ad78:	0858      	lsrs	r0, r3, #1
 801ad7a:	07dd      	lsls	r5, r3, #31
 801ad7c:	f817 e000 	ldrb.w	lr, [r7, r0]
 801ad80:	bf54      	ite	pl
 801ad82:	f00e 030f 	andpl.w	r3, lr, #15
 801ad86:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801ad8a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ad8e:	b2db      	uxtb	r3, r3
 801ad90:	9311      	str	r3, [sp, #68]	; 0x44
 801ad92:	b292      	uxth	r2, r2
 801ad94:	b289      	uxth	r1, r1
 801ad96:	fb02 f301 	mul.w	r3, r2, r1
 801ad9a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ad9e:	0112      	lsls	r2, r2, #4
 801ada0:	b289      	uxth	r1, r1
 801ada2:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801ada6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ada8:	1ad2      	subs	r2, r2, r3
 801adaa:	1a40      	subs	r0, r0, r1
 801adac:	b292      	uxth	r2, r2
 801adae:	436a      	muls	r2, r5
 801adb0:	b280      	uxth	r0, r0
 801adb2:	fb0c 2c00 	mla	ip, ip, r0, r2
 801adb6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801adb8:	fb01 c102 	mla	r1, r1, r2, ip
 801adbc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801adbe:	fb03 1302 	mla	r3, r3, r2, r1
 801adc2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801adc6:	b1db      	cbz	r3, 801ae00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801adc8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801adca:	4353      	muls	r3, r2
 801adcc:	1c5a      	adds	r2, r3, #1
 801adce:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801add2:	4ac6      	ldr	r2, [pc, #792]	; (801b0ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801add4:	121b      	asrs	r3, r3, #8
 801add6:	6812      	ldr	r2, [r2, #0]
 801add8:	2bff      	cmp	r3, #255	; 0xff
 801adda:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801adde:	f040 8099 	bne.w	801af14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 801ade2:	0953      	lsrs	r3, r2, #5
 801ade4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ade8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801adec:	f02c 0c07 	bic.w	ip, ip, #7
 801adf0:	ea43 0c0c 	orr.w	ip, r3, ip
 801adf4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801adf8:	ea4c 0202 	orr.w	r2, ip, r2
 801adfc:	f8a8 2000 	strh.w	r2, [r8]
 801ae00:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ae02:	441c      	add	r4, r3
 801ae04:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ae06:	441e      	add	r6, r3
 801ae08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ae0a:	3b01      	subs	r3, #1
 801ae0c:	f108 0802 	add.w	r8, r8, #2
 801ae10:	930e      	str	r3, [sp, #56]	; 0x38
 801ae12:	e763      	b.n	801acdc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 801ae14:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ae16:	441c      	add	r4, r3
 801ae18:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ae1a:	441e      	add	r6, r3
 801ae1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae1e:	3b01      	subs	r3, #1
 801ae20:	9309      	str	r3, [sp, #36]	; 0x24
 801ae22:	f109 0902 	add.w	r9, r9, #2
 801ae26:	e737      	b.n	801ac98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ae28:	d024      	beq.n	801ae74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801ae2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae2c:	982b      	ldr	r0, [sp, #172]	; 0xac
 801ae2e:	3b01      	subs	r3, #1
 801ae30:	fb00 4003 	mla	r0, r0, r3, r4
 801ae34:	1400      	asrs	r0, r0, #16
 801ae36:	f53f af4c 	bmi.w	801acd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801ae3a:	3901      	subs	r1, #1
 801ae3c:	4288      	cmp	r0, r1
 801ae3e:	f6bf af48 	bge.w	801acd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801ae42:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801ae44:	fb01 6303 	mla	r3, r1, r3, r6
 801ae48:	141b      	asrs	r3, r3, #16
 801ae4a:	f53f af42 	bmi.w	801acd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801ae4e:	3a01      	subs	r2, #1
 801ae50:	4293      	cmp	r3, r2
 801ae52:	f6bf af3e 	bge.w	801acd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801ae56:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801ae5a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ae5e:	930e      	str	r3, [sp, #56]	; 0x38
 801ae60:	46c8      	mov	r8, r9
 801ae62:	f1bb 0f00 	cmp.w	fp, #0
 801ae66:	f300 80b7 	bgt.w	801afd8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801ae6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae6c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ae70:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ae74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ae76:	2b00      	cmp	r3, #0
 801ae78:	f340 818d 	ble.w	801b196 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801ae7c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ae80:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ae84:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ae88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae8a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ae8e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801ae92:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801ae96:	eef0 6a48 	vmov.f32	s13, s16
 801ae9a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801ae9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aea2:	ee37 8a48 	vsub.f32	s16, s14, s16
 801aea6:	ee16 4a90 	vmov	r4, s13
 801aeaa:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801aeae:	eef0 6a68 	vmov.f32	s13, s17
 801aeb2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801aeb6:	ee18 2a10 	vmov	r2, s16
 801aeba:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801aebe:	fb92 f3f3 	sdiv	r3, r2, r3
 801aec2:	ee18 2a90 	vmov	r2, s17
 801aec6:	932b      	str	r3, [sp, #172]	; 0xac
 801aec8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801aeca:	fb92 f3f3 	sdiv	r3, r2, r3
 801aece:	932c      	str	r3, [sp, #176]	; 0xb0
 801aed0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801aed2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aed4:	3b01      	subs	r3, #1
 801aed6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aeda:	930d      	str	r3, [sp, #52]	; 0x34
 801aedc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801aede:	bf08      	it	eq
 801aee0:	4613      	moveq	r3, r2
 801aee2:	ee16 6a90 	vmov	r6, s13
 801aee6:	9309      	str	r3, [sp, #36]	; 0x24
 801aee8:	eef0 8a67 	vmov.f32	s17, s15
 801aeec:	eeb0 8a47 	vmov.f32	s16, s14
 801aef0:	e6c3      	b.n	801ac7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801aef2:	2900      	cmp	r1, #0
 801aef4:	f43f af4d 	beq.w	801ad92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801aef8:	eb0a 0003 	add.w	r0, sl, r3
 801aefc:	0843      	lsrs	r3, r0, #1
 801aefe:	07c0      	lsls	r0, r0, #31
 801af00:	5cfb      	ldrb	r3, [r7, r3]
 801af02:	bf54      	ite	pl
 801af04:	f003 030f 	andpl.w	r3, r3, #15
 801af08:	111b      	asrmi	r3, r3, #4
 801af0a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801af0e:	b2db      	uxtb	r3, r3
 801af10:	930b      	str	r3, [sp, #44]	; 0x2c
 801af12:	e73e      	b.n	801ad92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801af14:	f8b8 e000 	ldrh.w	lr, [r8]
 801af18:	fa1f fb83 	uxth.w	fp, r3
 801af1c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801af20:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801af24:	43db      	mvns	r3, r3
 801af26:	b2db      	uxtb	r3, r3
 801af28:	fb11 f10b 	smulbb	r1, r1, fp
 801af2c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801af30:	fb00 1003 	mla	r0, r0, r3, r1
 801af34:	fa5f fc8c 	uxtb.w	ip, ip
 801af38:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801af3c:	b2d2      	uxtb	r2, r2
 801af3e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801af42:	b280      	uxth	r0, r0
 801af44:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801af48:	fb1c fc0b 	smulbb	ip, ip, fp
 801af4c:	fa5f fe8e 	uxtb.w	lr, lr
 801af50:	fb12 fb0b 	smulbb	fp, r2, fp
 801af54:	fb01 cc03 	mla	ip, r1, r3, ip
 801af58:	fb0e bb03 	mla	fp, lr, r3, fp
 801af5c:	1c43      	adds	r3, r0, #1
 801af5e:	fa1f fc8c 	uxth.w	ip, ip
 801af62:	fa1f fb8b 	uxth.w	fp, fp
 801af66:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801af6a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801af6e:	f10c 0101 	add.w	r1, ip, #1
 801af72:	f10b 0001 	add.w	r0, fp, #1
 801af76:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801af7a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801af7e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801af82:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801af86:	4318      	orrs	r0, r3
 801af88:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801af8c:	ea40 000c 	orr.w	r0, r0, ip
 801af90:	f8a8 0000 	strh.w	r0, [r8]
 801af94:	e734      	b.n	801ae00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801af96:	f113 0b01 	adds.w	fp, r3, #1
 801af9a:	f53f af31 	bmi.w	801ae00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801af9e:	45dc      	cmp	ip, fp
 801afa0:	f6ff af2e 	blt.w	801ae00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801afa4:	f110 0b01 	adds.w	fp, r0, #1
 801afa8:	f53f af2a 	bmi.w	801ae00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801afac:	45de      	cmp	lr, fp
 801afae:	f6ff af27 	blt.w	801ae00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801afb2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801afb4:	9302      	str	r3, [sp, #8]
 801afb6:	fa0f f38e 	sxth.w	r3, lr
 801afba:	9301      	str	r3, [sp, #4]
 801afbc:	fa0f f38c 	sxth.w	r3, ip
 801afc0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801afc4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801afc8:	9300      	str	r3, [sp, #0]
 801afca:	463a      	mov	r2, r7
 801afcc:	4653      	mov	r3, sl
 801afce:	4641      	mov	r1, r8
 801afd0:	9815      	ldr	r0, [sp, #84]	; 0x54
 801afd2:	f7ff fd2b 	bl	801aa2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801afd6:	e713      	b.n	801ae00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801afd8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801afda:	1422      	asrs	r2, r4, #16
 801afdc:	1433      	asrs	r3, r6, #16
 801afde:	fb05 2303 	mla	r3, r5, r3, r2
 801afe2:	085a      	lsrs	r2, r3, #1
 801afe4:	07dd      	lsls	r5, r3, #31
 801afe6:	5cba      	ldrb	r2, [r7, r2]
 801afe8:	bf54      	ite	pl
 801afea:	f002 020f 	andpl.w	r2, r2, #15
 801afee:	1112      	asrmi	r2, r2, #4
 801aff0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aff4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801aff8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801affc:	b2d2      	uxtb	r2, r2
 801affe:	2900      	cmp	r1, #0
 801b000:	d076      	beq.n	801b0f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801b002:	f103 0e01 	add.w	lr, r3, #1
 801b006:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801b00a:	f01e 0f01 	tst.w	lr, #1
 801b00e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b012:	bf0c      	ite	eq
 801b014:	f00c 0c0f 	andeq.w	ip, ip, #15
 801b018:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801b01c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b020:	fa5f f58c 	uxtb.w	r5, ip
 801b024:	9512      	str	r5, [sp, #72]	; 0x48
 801b026:	b300      	cbz	r0, 801b06a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b028:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b02a:	442b      	add	r3, r5
 801b02c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b030:	07dd      	lsls	r5, r3, #31
 801b032:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b036:	bf54      	ite	pl
 801b038:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b03c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b040:	3301      	adds	r3, #1
 801b042:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b046:	fa5f f58c 	uxtb.w	r5, ip
 801b04a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b04e:	950c      	str	r5, [sp, #48]	; 0x30
 801b050:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b054:	07dd      	lsls	r5, r3, #31
 801b056:	bf54      	ite	pl
 801b058:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b05c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b060:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b064:	fa5f f38c 	uxtb.w	r3, ip
 801b068:	9313      	str	r3, [sp, #76]	; 0x4c
 801b06a:	b289      	uxth	r1, r1
 801b06c:	b280      	uxth	r0, r0
 801b06e:	fb01 f300 	mul.w	r3, r1, r0
 801b072:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801b076:	0109      	lsls	r1, r1, #4
 801b078:	b280      	uxth	r0, r0
 801b07a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801b07e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b080:	1ac9      	subs	r1, r1, r3
 801b082:	ebac 0c00 	sub.w	ip, ip, r0
 801b086:	b289      	uxth	r1, r1
 801b088:	4369      	muls	r1, r5
 801b08a:	fa1f fc8c 	uxth.w	ip, ip
 801b08e:	fb02 120c 	mla	r2, r2, ip, r1
 801b092:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b094:	fb00 2001 	mla	r0, r0, r1, r2
 801b098:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b09a:	fb03 0302 	mla	r3, r3, r2, r0
 801b09e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b0a2:	b1d3      	cbz	r3, 801b0da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801b0a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b0a6:	4353      	muls	r3, r2
 801b0a8:	1c5a      	adds	r2, r3, #1
 801b0aa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b0ae:	4a0f      	ldr	r2, [pc, #60]	; (801b0ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801b0b0:	121b      	asrs	r3, r3, #8
 801b0b2:	6812      	ldr	r2, [r2, #0]
 801b0b4:	2bff      	cmp	r3, #255	; 0xff
 801b0b6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801b0ba:	d12d      	bne.n	801b118 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 801b0bc:	0953      	lsrs	r3, r2, #5
 801b0be:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801b0c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b0c6:	f02c 0c07 	bic.w	ip, ip, #7
 801b0ca:	ea43 0c0c 	orr.w	ip, r3, ip
 801b0ce:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b0d2:	ea4c 0202 	orr.w	r2, ip, r2
 801b0d6:	f8a8 2000 	strh.w	r2, [r8]
 801b0da:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b0dc:	441c      	add	r4, r3
 801b0de:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b0e0:	f108 0802 	add.w	r8, r8, #2
 801b0e4:	441e      	add	r6, r3
 801b0e6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b0ea:	e6ba      	b.n	801ae62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801b0ec:	20013510 	.word	0x20013510
 801b0f0:	2800      	cmp	r0, #0
 801b0f2:	d0ba      	beq.n	801b06a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b0f4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b0f6:	442b      	add	r3, r5
 801b0f8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b0fc:	07db      	lsls	r3, r3, #31
 801b0fe:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b102:	bf54      	ite	pl
 801b104:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b108:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b10c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b110:	fa5f f38c 	uxtb.w	r3, ip
 801b114:	930c      	str	r3, [sp, #48]	; 0x30
 801b116:	e7a8      	b.n	801b06a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b118:	f8b8 e000 	ldrh.w	lr, [r8]
 801b11c:	fa1f fa83 	uxth.w	sl, r3
 801b120:	ea4f 202e 	mov.w	r0, lr, asr #8
 801b124:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b128:	43db      	mvns	r3, r3
 801b12a:	b2db      	uxtb	r3, r3
 801b12c:	fb11 f10a 	smulbb	r1, r1, sl
 801b130:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b134:	fb00 1003 	mla	r0, r0, r3, r1
 801b138:	b2d2      	uxtb	r2, r2
 801b13a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801b13e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b142:	fa5f fe8e 	uxtb.w	lr, lr
 801b146:	fb12 f20a 	smulbb	r2, r2, sl
 801b14a:	fb0e 2203 	mla	r2, lr, r3, r2
 801b14e:	fa5f fc8c 	uxtb.w	ip, ip
 801b152:	b280      	uxth	r0, r0
 801b154:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b158:	b292      	uxth	r2, r2
 801b15a:	fb1c fc0a 	smulbb	ip, ip, sl
 801b15e:	fb01 cc03 	mla	ip, r1, r3, ip
 801b162:	1c43      	adds	r3, r0, #1
 801b164:	1c51      	adds	r1, r2, #1
 801b166:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b16a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801b16e:	fa1f fc8c 	uxth.w	ip, ip
 801b172:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b176:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b17a:	4308      	orrs	r0, r1
 801b17c:	f10c 0101 	add.w	r1, ip, #1
 801b180:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801b184:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b188:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b18c:	ea40 000c 	orr.w	r0, r0, ip
 801b190:	f8a8 0000 	strh.w	r0, [r8]
 801b194:	e7a1      	b.n	801b0da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801b196:	b017      	add	sp, #92	; 0x5c
 801b198:	ecbd 8b08 	vpop	{d8-d11}
 801b19c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b1a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801b1a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b1a4:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801b1a8:	2c00      	cmp	r4, #0
 801b1aa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801b1ae:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801b1b2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801b1b6:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801b1ba:	fb04 ce03 	mla	lr, r4, r3, ip
 801b1be:	db60      	blt.n	801b282 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801b1c0:	45a1      	cmp	r9, r4
 801b1c2:	dd5e      	ble.n	801b282 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801b1c4:	f1bc 0f00 	cmp.w	ip, #0
 801b1c8:	db59      	blt.n	801b27e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b1ca:	45e0      	cmp	r8, ip
 801b1cc:	dd57      	ble.n	801b27e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b1ce:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801b1d2:	f01e 0f01 	tst.w	lr, #1
 801b1d6:	5c16      	ldrb	r6, [r2, r0]
 801b1d8:	bf0c      	ite	eq
 801b1da:	f006 060f 	andeq.w	r6, r6, #15
 801b1de:	1136      	asrne	r6, r6, #4
 801b1e0:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801b1e4:	b2f6      	uxtb	r6, r6
 801b1e6:	f11c 0001 	adds.w	r0, ip, #1
 801b1ea:	d44d      	bmi.n	801b288 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b1ec:	4580      	cmp	r8, r0
 801b1ee:	dd4b      	ble.n	801b288 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b1f0:	2d00      	cmp	r5, #0
 801b1f2:	d04b      	beq.n	801b28c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801b1f4:	f10e 0a01 	add.w	sl, lr, #1
 801b1f8:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801b1fc:	f01a 0f01 	tst.w	sl, #1
 801b200:	5c10      	ldrb	r0, [r2, r0]
 801b202:	bf0c      	ite	eq
 801b204:	f000 000f 	andeq.w	r0, r0, #15
 801b208:	1100      	asrne	r0, r0, #4
 801b20a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b20e:	b2c0      	uxtb	r0, r0
 801b210:	3401      	adds	r4, #1
 801b212:	d43f      	bmi.n	801b294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801b214:	45a1      	cmp	r9, r4
 801b216:	dd3d      	ble.n	801b294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801b218:	2f00      	cmp	r7, #0
 801b21a:	f000 8093 	beq.w	801b344 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801b21e:	f1bc 0f00 	cmp.w	ip, #0
 801b222:	db35      	blt.n	801b290 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801b224:	45e0      	cmp	r8, ip
 801b226:	dd33      	ble.n	801b290 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801b228:	eb03 090e 	add.w	r9, r3, lr
 801b22c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801b230:	f019 0f01 	tst.w	r9, #1
 801b234:	5d14      	ldrb	r4, [r2, r4]
 801b236:	bf0c      	ite	eq
 801b238:	f004 040f 	andeq.w	r4, r4, #15
 801b23c:	1124      	asrne	r4, r4, #4
 801b23e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801b242:	b2e4      	uxtb	r4, r4
 801b244:	f11c 0c01 	adds.w	ip, ip, #1
 801b248:	d427      	bmi.n	801b29a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801b24a:	45e0      	cmp	r8, ip
 801b24c:	dd25      	ble.n	801b29a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801b24e:	b335      	cbz	r5, 801b29e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801b250:	3301      	adds	r3, #1
 801b252:	449e      	add	lr, r3
 801b254:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801b258:	f01e 0f01 	tst.w	lr, #1
 801b25c:	5cd2      	ldrb	r2, [r2, r3]
 801b25e:	bf0c      	ite	eq
 801b260:	f002 020f 	andeq.w	r2, r2, #15
 801b264:	1112      	asrne	r2, r2, #4
 801b266:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b26a:	b2d3      	uxtb	r3, r2
 801b26c:	2d0f      	cmp	r5, #15
 801b26e:	d917      	bls.n	801b2a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801b270:	4b37      	ldr	r3, [pc, #220]	; (801b350 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 801b272:	4a38      	ldr	r2, [pc, #224]	; (801b354 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 801b274:	4838      	ldr	r0, [pc, #224]	; (801b358 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801b276:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801b27a:	f000 fc4f 	bl	801bb1c <__assert_func>
 801b27e:	2600      	movs	r6, #0
 801b280:	e7b1      	b.n	801b1e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801b282:	2000      	movs	r0, #0
 801b284:	4606      	mov	r6, r0
 801b286:	e7c3      	b.n	801b210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b288:	2000      	movs	r0, #0
 801b28a:	e7c1      	b.n	801b210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b28c:	4628      	mov	r0, r5
 801b28e:	e7bf      	b.n	801b210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b290:	2400      	movs	r4, #0
 801b292:	e7d7      	b.n	801b244 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801b294:	2300      	movs	r3, #0
 801b296:	461c      	mov	r4, r3
 801b298:	e7e8      	b.n	801b26c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801b29a:	2300      	movs	r3, #0
 801b29c:	e7e6      	b.n	801b26c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801b29e:	462b      	mov	r3, r5
 801b2a0:	2f0f      	cmp	r7, #15
 801b2a2:	d8e5      	bhi.n	801b270 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801b2a4:	b2ad      	uxth	r5, r5
 801b2a6:	b2bf      	uxth	r7, r7
 801b2a8:	fb05 fc07 	mul.w	ip, r5, r7
 801b2ac:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801b2b0:	012d      	lsls	r5, r5, #4
 801b2b2:	b2bf      	uxth	r7, r7
 801b2b4:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801b2b8:	eba5 050c 	sub.w	r5, r5, ip
 801b2bc:	1bd2      	subs	r2, r2, r7
 801b2be:	b2ad      	uxth	r5, r5
 801b2c0:	b292      	uxth	r2, r2
 801b2c2:	4368      	muls	r0, r5
 801b2c4:	fb06 0002 	mla	r0, r6, r2, r0
 801b2c8:	fb07 0404 	mla	r4, r7, r4, r0
 801b2cc:	fb0c 4303 	mla	r3, ip, r3, r4
 801b2d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b2d4:	b3a3      	cbz	r3, 801b340 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801b2d6:	4a21      	ldr	r2, [pc, #132]	; (801b35c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801b2d8:	880e      	ldrh	r6, [r1, #0]
 801b2da:	6815      	ldr	r5, [r2, #0]
 801b2dc:	1234      	asrs	r4, r6, #8
 801b2de:	b29a      	uxth	r2, r3
 801b2e0:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801b2e4:	43db      	mvns	r3, r3
 801b2e6:	b2db      	uxtb	r3, r3
 801b2e8:	fb10 f002 	smulbb	r0, r0, r2
 801b2ec:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b2f0:	fb04 0403 	mla	r4, r4, r3, r0
 801b2f4:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801b2f8:	10f0      	asrs	r0, r6, #3
 801b2fa:	b2ed      	uxtb	r5, r5
 801b2fc:	00f6      	lsls	r6, r6, #3
 801b2fe:	fb17 f702 	smulbb	r7, r7, r2
 801b302:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b306:	fb15 f202 	smulbb	r2, r5, r2
 801b30a:	b2f6      	uxtb	r6, r6
 801b30c:	b2a4      	uxth	r4, r4
 801b30e:	fb00 7003 	mla	r0, r0, r3, r7
 801b312:	fb06 2303 	mla	r3, r6, r3, r2
 801b316:	b29a      	uxth	r2, r3
 801b318:	1c63      	adds	r3, r4, #1
 801b31a:	b280      	uxth	r0, r0
 801b31c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801b320:	1c53      	adds	r3, r2, #1
 801b322:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b326:	1c42      	adds	r2, r0, #1
 801b328:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b32c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b330:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b334:	0940      	lsrs	r0, r0, #5
 801b336:	4323      	orrs	r3, r4
 801b338:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b33c:	4303      	orrs	r3, r0
 801b33e:	800b      	strh	r3, [r1, #0]
 801b340:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b344:	2d0f      	cmp	r5, #15
 801b346:	d893      	bhi.n	801b270 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801b348:	463b      	mov	r3, r7
 801b34a:	463c      	mov	r4, r7
 801b34c:	e7aa      	b.n	801b2a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801b34e:	bf00      	nop
 801b350:	0802062e 	.word	0x0802062e
 801b354:	08020bfe 	.word	0x08020bfe
 801b358:	080206b2 	.word	0x080206b2
 801b35c:	20013510 	.word	0x20013510

0801b360 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b364:	ed2d 8b08 	vpush	{d8-d11}
 801b368:	b093      	sub	sp, #76	; 0x4c
 801b36a:	461d      	mov	r5, r3
 801b36c:	920c      	str	r2, [sp, #48]	; 0x30
 801b36e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b370:	9107      	str	r1, [sp, #28]
 801b372:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b376:	9011      	str	r0, [sp, #68]	; 0x44
 801b378:	6850      	ldr	r0, [r2, #4]
 801b37a:	6812      	ldr	r2, [r2, #0]
 801b37c:	fb00 1303 	mla	r3, r0, r3, r1
 801b380:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801b384:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b386:	689b      	ldr	r3, [r3, #8]
 801b388:	3301      	adds	r3, #1
 801b38a:	f023 0301 	bic.w	r3, r3, #1
 801b38e:	9306      	str	r3, [sp, #24]
 801b390:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b392:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801b396:	681f      	ldr	r7, [r3, #0]
 801b398:	eeb0 aa40 	vmov.f32	s20, s0
 801b39c:	eef0 9a60 	vmov.f32	s19, s1
 801b3a0:	eeb0 9a41 	vmov.f32	s18, s2
 801b3a4:	eeb0 8a62 	vmov.f32	s16, s5
 801b3a8:	eef0 8a43 	vmov.f32	s17, s6
 801b3ac:	eef0 ba44 	vmov.f32	s23, s8
 801b3b0:	eeb0 ba64 	vmov.f32	s22, s9
 801b3b4:	eef0 aa45 	vmov.f32	s21, s10
 801b3b8:	9b07      	ldr	r3, [sp, #28]
 801b3ba:	2b00      	cmp	r3, #0
 801b3bc:	dc03      	bgt.n	801b3c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b3be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b3c0:	2b00      	cmp	r3, #0
 801b3c2:	f340 8267 	ble.w	801b894 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801b3c6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b3c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b3cc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b3d0:	1e48      	subs	r0, r1, #1
 801b3d2:	f102 3cff 	add.w	ip, r2, #4294967295
 801b3d6:	2d00      	cmp	r5, #0
 801b3d8:	f340 80b8 	ble.w	801b54c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801b3dc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b3e0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b3e4:	d406      	bmi.n	801b3f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b3e6:	4586      	cmp	lr, r0
 801b3e8:	da04      	bge.n	801b3f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b3ea:	2b00      	cmp	r3, #0
 801b3ec:	db02      	blt.n	801b3f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b3ee:	4563      	cmp	r3, ip
 801b3f0:	f2c0 80ad 	blt.w	801b54e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b3f4:	f11e 0e01 	adds.w	lr, lr, #1
 801b3f8:	f100 80a0 	bmi.w	801b53c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b3fc:	4571      	cmp	r1, lr
 801b3fe:	f2c0 809d 	blt.w	801b53c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b402:	3301      	adds	r3, #1
 801b404:	f100 809a 	bmi.w	801b53c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b408:	429a      	cmp	r2, r3
 801b40a:	f2c0 8097 	blt.w	801b53c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b40e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801b412:	9509      	str	r5, [sp, #36]	; 0x24
 801b414:	46c8      	mov	r8, r9
 801b416:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b418:	2b00      	cmp	r3, #0
 801b41a:	f340 80b6 	ble.w	801b58a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b41e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801b422:	9308      	str	r3, [sp, #32]
 801b424:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b426:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801b42a:	1423      	asrs	r3, r4, #16
 801b42c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b430:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b434:	f100 813e 	bmi.w	801b6b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b438:	f10c 3bff 	add.w	fp, ip, #4294967295
 801b43c:	455b      	cmp	r3, fp
 801b43e:	f280 8139 	bge.w	801b6b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b442:	2800      	cmp	r0, #0
 801b444:	f2c0 8136 	blt.w	801b6b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b448:	f10e 3bff 	add.w	fp, lr, #4294967295
 801b44c:	4558      	cmp	r0, fp
 801b44e:	f280 8131 	bge.w	801b6b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b452:	9a06      	ldr	r2, [sp, #24]
 801b454:	fb00 3302 	mla	r3, r0, r2, r3
 801b458:	0858      	lsrs	r0, r3, #1
 801b45a:	07da      	lsls	r2, r3, #31
 801b45c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801b460:	9a08      	ldr	r2, [sp, #32]
 801b462:	bf54      	ite	pl
 801b464:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b468:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b46c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b470:	fa5f fc8c 	uxtb.w	ip, ip
 801b474:	2a00      	cmp	r2, #0
 801b476:	f000 80cb 	beq.w	801b610 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801b47a:	1c58      	adds	r0, r3, #1
 801b47c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801b480:	07c0      	lsls	r0, r0, #31
 801b482:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b486:	bf54      	ite	pl
 801b488:	f00e 0e0f 	andpl.w	lr, lr, #15
 801b48c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801b490:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801b494:	fa5f fe8e 	uxtb.w	lr, lr
 801b498:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801b49c:	b1b9      	cbz	r1, 801b4ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b49e:	4453      	add	r3, sl
 801b4a0:	0858      	lsrs	r0, r3, #1
 801b4a2:	07da      	lsls	r2, r3, #31
 801b4a4:	5c38      	ldrb	r0, [r7, r0]
 801b4a6:	bf54      	ite	pl
 801b4a8:	f000 000f 	andpl.w	r0, r0, #15
 801b4ac:	1100      	asrmi	r0, r0, #4
 801b4ae:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b4b2:	b2c0      	uxtb	r0, r0
 801b4b4:	900a      	str	r0, [sp, #40]	; 0x28
 801b4b6:	1c58      	adds	r0, r3, #1
 801b4b8:	0843      	lsrs	r3, r0, #1
 801b4ba:	07c2      	lsls	r2, r0, #31
 801b4bc:	5cfb      	ldrb	r3, [r7, r3]
 801b4be:	bf54      	ite	pl
 801b4c0:	f003 030f 	andpl.w	r3, r3, #15
 801b4c4:	111b      	asrmi	r3, r3, #4
 801b4c6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b4ca:	b2db      	uxtb	r3, r3
 801b4cc:	930e      	str	r3, [sp, #56]	; 0x38
 801b4ce:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b4d2:	b289      	uxth	r1, r1
 801b4d4:	fb02 f301 	mul.w	r3, r2, r1
 801b4d8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801b4dc:	0112      	lsls	r2, r2, #4
 801b4de:	b289      	uxth	r1, r1
 801b4e0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801b4e4:	1a40      	subs	r0, r0, r1
 801b4e6:	fa1f fe80 	uxth.w	lr, r0
 801b4ea:	1ad2      	subs	r2, r2, r3
 801b4ec:	980d      	ldr	r0, [sp, #52]	; 0x34
 801b4ee:	b292      	uxth	r2, r2
 801b4f0:	4342      	muls	r2, r0
 801b4f2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801b4f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b4f8:	fb01 c102 	mla	r1, r1, r2, ip
 801b4fc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801b4fe:	fb03 1302 	mla	r3, r3, r2, r1
 801b502:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b506:	2bff      	cmp	r3, #255	; 0xff
 801b508:	f040 8093 	bne.w	801b632 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801b50c:	4bbe      	ldr	r3, [pc, #760]	; (801b808 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b50e:	681a      	ldr	r2, [r3, #0]
 801b510:	4bbe      	ldr	r3, [pc, #760]	; (801b80c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801b512:	0951      	lsrs	r1, r2, #5
 801b514:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801b518:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b51c:	430b      	orrs	r3, r1
 801b51e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b522:	4313      	orrs	r3, r2
 801b524:	f8a8 3000 	strh.w	r3, [r8]
 801b528:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b52a:	441c      	add	r4, r3
 801b52c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b52e:	441e      	add	r6, r3
 801b530:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b532:	3b01      	subs	r3, #1
 801b534:	f108 0802 	add.w	r8, r8, #2
 801b538:	9309      	str	r3, [sp, #36]	; 0x24
 801b53a:	e76c      	b.n	801b416 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801b53c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b53e:	441c      	add	r4, r3
 801b540:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b542:	3d01      	subs	r5, #1
 801b544:	441e      	add	r6, r3
 801b546:	f109 0902 	add.w	r9, r9, #2
 801b54a:	e744      	b.n	801b3d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b54c:	d021      	beq.n	801b592 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801b54e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b550:	1e6b      	subs	r3, r5, #1
 801b552:	fb00 4003 	mla	r0, r0, r3, r4
 801b556:	1400      	asrs	r0, r0, #16
 801b558:	f53f af59 	bmi.w	801b40e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b55c:	3901      	subs	r1, #1
 801b55e:	4288      	cmp	r0, r1
 801b560:	f6bf af55 	bge.w	801b40e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b564:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b566:	fb01 6303 	mla	r3, r1, r3, r6
 801b56a:	141b      	asrs	r3, r3, #16
 801b56c:	f53f af4f 	bmi.w	801b40e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b570:	3a01      	subs	r2, #1
 801b572:	4293      	cmp	r3, r2
 801b574:	f6bf af4b 	bge.w	801b40e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b578:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801b57c:	9308      	str	r3, [sp, #32]
 801b57e:	46a8      	mov	r8, r5
 801b580:	46ce      	mov	lr, r9
 801b582:	f1b8 0f00 	cmp.w	r8, #0
 801b586:	f300 80b5 	bgt.w	801b6f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801b58a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b58e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801b592:	9b07      	ldr	r3, [sp, #28]
 801b594:	2b00      	cmp	r3, #0
 801b596:	f340 817d 	ble.w	801b894 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801b59a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b59e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b5a2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b5a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b5a8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b5ac:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b5b0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b5b4:	eef0 6a48 	vmov.f32	s13, s16
 801b5b8:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b5bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b5c0:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b5c4:	ee16 4a90 	vmov	r4, s13
 801b5c8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b5cc:	eef0 6a68 	vmov.f32	s13, s17
 801b5d0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b5d4:	ee18 2a10 	vmov	r2, s16
 801b5d8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b5dc:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5e0:	ee18 2a90 	vmov	r2, s17
 801b5e4:	9327      	str	r3, [sp, #156]	; 0x9c
 801b5e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b5e8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5ec:	9328      	str	r3, [sp, #160]	; 0xa0
 801b5ee:	9b07      	ldr	r3, [sp, #28]
 801b5f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b5f2:	3b01      	subs	r3, #1
 801b5f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b5f8:	9307      	str	r3, [sp, #28]
 801b5fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b5fc:	ee16 6a90 	vmov	r6, s13
 801b600:	bf14      	ite	ne
 801b602:	461d      	movne	r5, r3
 801b604:	4615      	moveq	r5, r2
 801b606:	eef0 8a67 	vmov.f32	s17, s15
 801b60a:	eeb0 8a47 	vmov.f32	s16, s14
 801b60e:	e6d3      	b.n	801b3b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b610:	2900      	cmp	r1, #0
 801b612:	f43f af5c 	beq.w	801b4ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b616:	eb0a 0003 	add.w	r0, sl, r3
 801b61a:	0843      	lsrs	r3, r0, #1
 801b61c:	07c0      	lsls	r0, r0, #31
 801b61e:	5cfb      	ldrb	r3, [r7, r3]
 801b620:	bf54      	ite	pl
 801b622:	f003 030f 	andpl.w	r3, r3, #15
 801b626:	111b      	asrmi	r3, r3, #4
 801b628:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b62c:	b2db      	uxtb	r3, r3
 801b62e:	930a      	str	r3, [sp, #40]	; 0x28
 801b630:	e74d      	b.n	801b4ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b632:	2b00      	cmp	r3, #0
 801b634:	f43f af78 	beq.w	801b528 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b638:	4a73      	ldr	r2, [pc, #460]	; (801b808 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b63a:	f8b8 c000 	ldrh.w	ip, [r8]
 801b63e:	6810      	ldr	r0, [r2, #0]
 801b640:	fa1f fe83 	uxth.w	lr, r3
 801b644:	ea4f 212c 	mov.w	r1, ip, asr #8
 801b648:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801b64c:	43db      	mvns	r3, r3
 801b64e:	b2db      	uxtb	r3, r3
 801b650:	fb12 f20e 	smulbb	r2, r2, lr
 801b654:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b658:	fb01 2103 	mla	r1, r1, r3, r2
 801b65c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801b660:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b664:	b2c0      	uxtb	r0, r0
 801b666:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b66a:	fb1b fb0e 	smulbb	fp, fp, lr
 801b66e:	b289      	uxth	r1, r1
 801b670:	fb10 fe0e 	smulbb	lr, r0, lr
 801b674:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b678:	fa5f fc8c 	uxtb.w	ip, ip
 801b67c:	fb02 b203 	mla	r2, r2, r3, fp
 801b680:	1c48      	adds	r0, r1, #1
 801b682:	fb0c e303 	mla	r3, ip, r3, lr
 801b686:	b292      	uxth	r2, r2
 801b688:	b29b      	uxth	r3, r3
 801b68a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801b68e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801b692:	f102 0b01 	add.w	fp, r2, #1
 801b696:	1c59      	adds	r1, r3, #1
 801b698:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b69c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801b6a0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b6a4:	0952      	lsrs	r2, r2, #5
 801b6a6:	4301      	orrs	r1, r0
 801b6a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b6ac:	4311      	orrs	r1, r2
 801b6ae:	f8a8 1000 	strh.w	r1, [r8]
 801b6b2:	e739      	b.n	801b528 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b6b4:	f113 0b01 	adds.w	fp, r3, #1
 801b6b8:	f53f af36 	bmi.w	801b528 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b6bc:	45dc      	cmp	ip, fp
 801b6be:	f6ff af33 	blt.w	801b528 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b6c2:	f110 0b01 	adds.w	fp, r0, #1
 801b6c6:	f53f af2f 	bmi.w	801b528 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b6ca:	45de      	cmp	lr, fp
 801b6cc:	f6ff af2c 	blt.w	801b528 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b6d0:	9a08      	ldr	r2, [sp, #32]
 801b6d2:	9302      	str	r3, [sp, #8]
 801b6d4:	fa0f f38e 	sxth.w	r3, lr
 801b6d8:	9301      	str	r3, [sp, #4]
 801b6da:	fa0f f38c 	sxth.w	r3, ip
 801b6de:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801b6e2:	9105      	str	r1, [sp, #20]
 801b6e4:	9300      	str	r3, [sp, #0]
 801b6e6:	463a      	mov	r2, r7
 801b6e8:	4653      	mov	r3, sl
 801b6ea:	4641      	mov	r1, r8
 801b6ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b6ee:	f7ff fd57 	bl	801b1a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801b6f2:	e719      	b.n	801b528 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b6f4:	9906      	ldr	r1, [sp, #24]
 801b6f6:	1422      	asrs	r2, r4, #16
 801b6f8:	1433      	asrs	r3, r6, #16
 801b6fa:	fb01 2303 	mla	r3, r1, r3, r2
 801b6fe:	085a      	lsrs	r2, r3, #1
 801b700:	07d9      	lsls	r1, r3, #31
 801b702:	5cba      	ldrb	r2, [r7, r2]
 801b704:	bf54      	ite	pl
 801b706:	f002 020f 	andpl.w	r2, r2, #15
 801b70a:	1112      	asrmi	r2, r2, #4
 801b70c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b710:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b714:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b718:	b2d2      	uxtb	r2, r2
 801b71a:	2800      	cmp	r0, #0
 801b71c:	d062      	beq.n	801b7e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801b71e:	f103 0a01 	add.w	sl, r3, #1
 801b722:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801b726:	f01a 0f01 	tst.w	sl, #1
 801b72a:	5c79      	ldrb	r1, [r7, r1]
 801b72c:	bf0c      	ite	eq
 801b72e:	f001 010f 	andeq.w	r1, r1, #15
 801b732:	1109      	asrne	r1, r1, #4
 801b734:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b738:	b2c9      	uxtb	r1, r1
 801b73a:	910f      	str	r1, [sp, #60]	; 0x3c
 801b73c:	f1bc 0f00 	cmp.w	ip, #0
 801b740:	d019      	beq.n	801b776 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b742:	9908      	ldr	r1, [sp, #32]
 801b744:	440b      	add	r3, r1
 801b746:	0859      	lsrs	r1, r3, #1
 801b748:	f013 0f01 	tst.w	r3, #1
 801b74c:	5c79      	ldrb	r1, [r7, r1]
 801b74e:	bf0c      	ite	eq
 801b750:	f001 010f 	andeq.w	r1, r1, #15
 801b754:	1109      	asrne	r1, r1, #4
 801b756:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b75a:	b2c9      	uxtb	r1, r1
 801b75c:	3301      	adds	r3, #1
 801b75e:	910b      	str	r1, [sp, #44]	; 0x2c
 801b760:	0859      	lsrs	r1, r3, #1
 801b762:	07db      	lsls	r3, r3, #31
 801b764:	5c79      	ldrb	r1, [r7, r1]
 801b766:	bf54      	ite	pl
 801b768:	f001 010f 	andpl.w	r1, r1, #15
 801b76c:	1109      	asrmi	r1, r1, #4
 801b76e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b772:	b2c9      	uxtb	r1, r1
 801b774:	9110      	str	r1, [sp, #64]	; 0x40
 801b776:	b280      	uxth	r0, r0
 801b778:	fa1f fc8c 	uxth.w	ip, ip
 801b77c:	fb00 f30c 	mul.w	r3, r0, ip
 801b780:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801b784:	0100      	lsls	r0, r0, #4
 801b786:	fa1f fc8c 	uxth.w	ip, ip
 801b78a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801b78e:	eba1 010c 	sub.w	r1, r1, ip
 801b792:	fa1f fa81 	uxth.w	sl, r1
 801b796:	1ac0      	subs	r0, r0, r3
 801b798:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b79a:	b280      	uxth	r0, r0
 801b79c:	4348      	muls	r0, r1
 801b79e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b7a0:	fb02 020a 	mla	r2, r2, sl, r0
 801b7a4:	fb0c 2c01 	mla	ip, ip, r1, r2
 801b7a8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b7aa:	fb03 c302 	mla	r3, r3, r2, ip
 801b7ae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b7b2:	2bff      	cmp	r3, #255	; 0xff
 801b7b4:	d12c      	bne.n	801b810 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801b7b6:	4b14      	ldr	r3, [pc, #80]	; (801b808 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b7b8:	681a      	ldr	r2, [r3, #0]
 801b7ba:	4b14      	ldr	r3, [pc, #80]	; (801b80c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801b7bc:	0951      	lsrs	r1, r2, #5
 801b7be:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801b7c2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b7c6:	430b      	orrs	r3, r1
 801b7c8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b7cc:	4313      	orrs	r3, r2
 801b7ce:	f8ae 3000 	strh.w	r3, [lr]
 801b7d2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b7d4:	441c      	add	r4, r3
 801b7d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b7d8:	f10e 0e02 	add.w	lr, lr, #2
 801b7dc:	441e      	add	r6, r3
 801b7de:	f108 38ff 	add.w	r8, r8, #4294967295
 801b7e2:	e6ce      	b.n	801b582 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801b7e4:	f1bc 0f00 	cmp.w	ip, #0
 801b7e8:	d0c5      	beq.n	801b776 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b7ea:	9908      	ldr	r1, [sp, #32]
 801b7ec:	440b      	add	r3, r1
 801b7ee:	0859      	lsrs	r1, r3, #1
 801b7f0:	07db      	lsls	r3, r3, #31
 801b7f2:	5c79      	ldrb	r1, [r7, r1]
 801b7f4:	bf54      	ite	pl
 801b7f6:	f001 010f 	andpl.w	r1, r1, #15
 801b7fa:	1109      	asrmi	r1, r1, #4
 801b7fc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b800:	b2c9      	uxtb	r1, r1
 801b802:	910b      	str	r1, [sp, #44]	; 0x2c
 801b804:	e7b7      	b.n	801b776 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b806:	bf00      	nop
 801b808:	20013510 	.word	0x20013510
 801b80c:	fffff800 	.word	0xfffff800
 801b810:	2b00      	cmp	r3, #0
 801b812:	d0de      	beq.n	801b7d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801b814:	4a22      	ldr	r2, [pc, #136]	; (801b8a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 801b816:	f8be c000 	ldrh.w	ip, [lr]
 801b81a:	6810      	ldr	r0, [r2, #0]
 801b81c:	fa1f fa83 	uxth.w	sl, r3
 801b820:	ea4f 212c 	mov.w	r1, ip, asr #8
 801b824:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801b828:	43db      	mvns	r3, r3
 801b82a:	b2db      	uxtb	r3, r3
 801b82c:	fb12 f20a 	smulbb	r2, r2, sl
 801b830:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b834:	fb01 2103 	mla	r1, r1, r3, r2
 801b838:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801b83c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b840:	b2c0      	uxtb	r0, r0
 801b842:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b846:	fa5f fc8c 	uxtb.w	ip, ip
 801b84a:	fb10 f00a 	smulbb	r0, r0, sl
 801b84e:	fb0c 0003 	mla	r0, ip, r3, r0
 801b852:	b289      	uxth	r1, r1
 801b854:	fb1b fb0a 	smulbb	fp, fp, sl
 801b858:	b280      	uxth	r0, r0
 801b85a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b85e:	fb02 b203 	mla	r2, r2, r3, fp
 801b862:	1c4b      	adds	r3, r1, #1
 801b864:	f100 0b01 	add.w	fp, r0, #1
 801b868:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b86c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801b870:	b292      	uxth	r2, r2
 801b872:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801b876:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b87a:	ea4b 0101 	orr.w	r1, fp, r1
 801b87e:	f102 0b01 	add.w	fp, r2, #1
 801b882:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801b886:	0952      	lsrs	r2, r2, #5
 801b888:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b88c:	4311      	orrs	r1, r2
 801b88e:	f8ae 1000 	strh.w	r1, [lr]
 801b892:	e79e      	b.n	801b7d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801b894:	b013      	add	sp, #76	; 0x4c
 801b896:	ecbd 8b08 	vpop	{d8-d11}
 801b89a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b89e:	bf00      	nop
 801b8a0:	20013510 	.word	0x20013510

0801b8a4 <CRC_Lock>:
 801b8a4:	b530      	push	{r4, r5, lr}
 801b8a6:	4a20      	ldr	r2, [pc, #128]	; (801b928 <CRC_Lock+0x84>)
 801b8a8:	6813      	ldr	r3, [r2, #0]
 801b8aa:	f023 0301 	bic.w	r3, r3, #1
 801b8ae:	6013      	str	r3, [r2, #0]
 801b8b0:	4b1e      	ldr	r3, [pc, #120]	; (801b92c <CRC_Lock+0x88>)
 801b8b2:	681a      	ldr	r2, [r3, #0]
 801b8b4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801b8b8:	4022      	ands	r2, r4
 801b8ba:	f24c 2540 	movw	r5, #49728	; 0xc240
 801b8be:	42aa      	cmp	r2, r5
 801b8c0:	d005      	beq.n	801b8ce <CRC_Lock+0x2a>
 801b8c2:	681b      	ldr	r3, [r3, #0]
 801b8c4:	f24c 2270 	movw	r2, #49776	; 0xc270
 801b8c8:	4023      	ands	r3, r4
 801b8ca:	4293      	cmp	r3, r2
 801b8cc:	d124      	bne.n	801b918 <CRC_Lock+0x74>
 801b8ce:	4b18      	ldr	r3, [pc, #96]	; (801b930 <CRC_Lock+0x8c>)
 801b8d0:	681b      	ldr	r3, [r3, #0]
 801b8d2:	bb0b      	cbnz	r3, 801b918 <CRC_Lock+0x74>
 801b8d4:	4b17      	ldr	r3, [pc, #92]	; (801b934 <CRC_Lock+0x90>)
 801b8d6:	681a      	ldr	r2, [r3, #0]
 801b8d8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b8dc:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801b8e0:	d00d      	beq.n	801b8fe <CRC_Lock+0x5a>
 801b8e2:	681a      	ldr	r2, [r3, #0]
 801b8e4:	f240 4483 	movw	r4, #1155	; 0x483
 801b8e8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b8ec:	42a2      	cmp	r2, r4
 801b8ee:	d006      	beq.n	801b8fe <CRC_Lock+0x5a>
 801b8f0:	681b      	ldr	r3, [r3, #0]
 801b8f2:	f240 4285 	movw	r2, #1157	; 0x485
 801b8f6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b8fa:	4293      	cmp	r3, r2
 801b8fc:	d10c      	bne.n	801b918 <CRC_Lock+0x74>
 801b8fe:	4b0e      	ldr	r3, [pc, #56]	; (801b938 <CRC_Lock+0x94>)
 801b900:	2201      	movs	r2, #1
 801b902:	601a      	str	r2, [r3, #0]
 801b904:	681a      	ldr	r2, [r3, #0]
 801b906:	2a00      	cmp	r2, #0
 801b908:	d1fc      	bne.n	801b904 <CRC_Lock+0x60>
 801b90a:	4b0c      	ldr	r3, [pc, #48]	; (801b93c <CRC_Lock+0x98>)
 801b90c:	6018      	str	r0, [r3, #0]
 801b90e:	6818      	ldr	r0, [r3, #0]
 801b910:	1a43      	subs	r3, r0, r1
 801b912:	4258      	negs	r0, r3
 801b914:	4158      	adcs	r0, r3
 801b916:	bd30      	pop	{r4, r5, pc}
 801b918:	4b09      	ldr	r3, [pc, #36]	; (801b940 <CRC_Lock+0x9c>)
 801b91a:	2201      	movs	r2, #1
 801b91c:	601a      	str	r2, [r3, #0]
 801b91e:	681a      	ldr	r2, [r3, #0]
 801b920:	2a00      	cmp	r2, #0
 801b922:	d1fc      	bne.n	801b91e <CRC_Lock+0x7a>
 801b924:	4b07      	ldr	r3, [pc, #28]	; (801b944 <CRC_Lock+0xa0>)
 801b926:	e7f1      	b.n	801b90c <CRC_Lock+0x68>
 801b928:	e0002000 	.word	0xe0002000
 801b92c:	e000ed00 	.word	0xe000ed00
 801b930:	e0042000 	.word	0xe0042000
 801b934:	5c001000 	.word	0x5c001000
 801b938:	58024c08 	.word	0x58024c08
 801b93c:	58024c00 	.word	0x58024c00
 801b940:	40023008 	.word	0x40023008
 801b944:	40023000 	.word	0x40023000

0801b948 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801b948:	6101      	str	r1, [r0, #16]
 801b94a:	4770      	bx	lr

0801b94c <_ZN8touchgfx8Gestures4tickEv>:
 801b94c:	7b83      	ldrb	r3, [r0, #14]
 801b94e:	b14b      	cbz	r3, 801b964 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801b950:	8903      	ldrh	r3, [r0, #8]
 801b952:	3301      	adds	r3, #1
 801b954:	b29b      	uxth	r3, r3
 801b956:	2b07      	cmp	r3, #7
 801b958:	8103      	strh	r3, [r0, #8]
 801b95a:	bf81      	itttt	hi
 801b95c:	2300      	movhi	r3, #0
 801b95e:	8143      	strhhi	r3, [r0, #10]
 801b960:	8183      	strhhi	r3, [r0, #12]
 801b962:	7383      	strbhi	r3, [r0, #14]
 801b964:	4770      	bx	lr
	...

0801b968 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801b968:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801b96c:	4604      	mov	r4, r0
 801b96e:	8880      	ldrh	r0, [r0, #4]
 801b970:	f8ad 0006 	strh.w	r0, [sp, #6]
 801b974:	4698      	mov	r8, r3
 801b976:	eba8 0000 	sub.w	r0, r8, r0
 801b97a:	4b1c      	ldr	r3, [pc, #112]	; (801b9ec <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801b97c:	9300      	str	r3, [sp, #0]
 801b97e:	b280      	uxth	r0, r0
 801b980:	2300      	movs	r3, #0
 801b982:	f88d 3004 	strb.w	r3, [sp, #4]
 801b986:	b203      	sxth	r3, r0
 801b988:	2b00      	cmp	r3, #0
 801b98a:	bfb8      	it	lt
 801b98c:	4240      	neglt	r0, r0
 801b98e:	4617      	mov	r7, r2
 801b990:	8aa2      	ldrh	r2, [r4, #20]
 801b992:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801b996:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b99a:	bfb8      	it	lt
 801b99c:	b203      	sxthlt	r3, r0
 801b99e:	460e      	mov	r6, r1
 801b9a0:	4293      	cmp	r3, r2
 801b9a2:	88e1      	ldrh	r1, [r4, #6]
 801b9a4:	f8ad 1008 	strh.w	r1, [sp, #8]
 801b9a8:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b9ac:	dc08      	bgt.n	801b9c0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801b9ae:	1a69      	subs	r1, r5, r1
 801b9b0:	b289      	uxth	r1, r1
 801b9b2:	b20b      	sxth	r3, r1
 801b9b4:	2b00      	cmp	r3, #0
 801b9b6:	bfbc      	itt	lt
 801b9b8:	4249      	neglt	r1, r1
 801b9ba:	b20b      	sxthlt	r3, r1
 801b9bc:	429a      	cmp	r2, r3
 801b9be:	da13      	bge.n	801b9e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801b9c0:	6920      	ldr	r0, [r4, #16]
 801b9c2:	6803      	ldr	r3, [r0, #0]
 801b9c4:	4669      	mov	r1, sp
 801b9c6:	685b      	ldr	r3, [r3, #4]
 801b9c8:	4798      	blx	r3
 801b9ca:	eba8 0606 	sub.w	r6, r8, r6
 801b9ce:	2300      	movs	r3, #0
 801b9d0:	1bef      	subs	r7, r5, r7
 801b9d2:	2001      	movs	r0, #1
 801b9d4:	8123      	strh	r3, [r4, #8]
 801b9d6:	8166      	strh	r6, [r4, #10]
 801b9d8:	81a7      	strh	r7, [r4, #12]
 801b9da:	f8a4 8004 	strh.w	r8, [r4, #4]
 801b9de:	80e5      	strh	r5, [r4, #6]
 801b9e0:	73a0      	strb	r0, [r4, #14]
 801b9e2:	b004      	add	sp, #16
 801b9e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b9e8:	2000      	movs	r0, #0
 801b9ea:	e7fa      	b.n	801b9e2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801b9ec:	0801fac4 	.word	0x0801fac4

0801b9f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801b9f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b9f2:	461e      	mov	r6, r3
 801b9f4:	1e4b      	subs	r3, r1, #1
 801b9f6:	2b01      	cmp	r3, #1
 801b9f8:	b085      	sub	sp, #20
 801b9fa:	4604      	mov	r4, r0
 801b9fc:	460d      	mov	r5, r1
 801b9fe:	4617      	mov	r7, r2
 801ba00:	d84b      	bhi.n	801ba9a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801ba02:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801ba06:	1cd3      	adds	r3, r2, #3
 801ba08:	b29b      	uxth	r3, r3
 801ba0a:	2b06      	cmp	r3, #6
 801ba0c:	d916      	bls.n	801ba3c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801ba0e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801bab0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801ba12:	f8cd c004 	str.w	ip, [sp, #4]
 801ba16:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ba1a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801ba1e:	6900      	ldr	r0, [r0, #16]
 801ba20:	f8ad 100c 	strh.w	r1, [sp, #12]
 801ba24:	f04f 0c00 	mov.w	ip, #0
 801ba28:	f88d c008 	strb.w	ip, [sp, #8]
 801ba2c:	f8ad 200a 	strh.w	r2, [sp, #10]
 801ba30:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ba34:	6803      	ldr	r3, [r0, #0]
 801ba36:	a901      	add	r1, sp, #4
 801ba38:	689b      	ldr	r3, [r3, #8]
 801ba3a:	4798      	blx	r3
 801ba3c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ba40:	1cd3      	adds	r3, r2, #3
 801ba42:	b29b      	uxth	r3, r3
 801ba44:	2b06      	cmp	r3, #6
 801ba46:	d916      	bls.n	801ba76 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ba48:	f8df c064 	ldr.w	ip, [pc, #100]	; 801bab0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801ba4c:	f8cd c004 	str.w	ip, [sp, #4]
 801ba50:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ba54:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801ba58:	6920      	ldr	r0, [r4, #16]
 801ba5a:	f8ad 100c 	strh.w	r1, [sp, #12]
 801ba5e:	f04f 0c01 	mov.w	ip, #1
 801ba62:	f88d c008 	strb.w	ip, [sp, #8]
 801ba66:	f8ad 200a 	strh.w	r2, [sp, #10]
 801ba6a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ba6e:	6803      	ldr	r3, [r0, #0]
 801ba70:	a901      	add	r1, sp, #4
 801ba72:	689b      	ldr	r3, [r3, #8]
 801ba74:	4798      	blx	r3
 801ba76:	4b0d      	ldr	r3, [pc, #52]	; (801baac <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801ba78:	9301      	str	r3, [sp, #4]
 801ba7a:	6920      	ldr	r0, [r4, #16]
 801ba7c:	f88d 5008 	strb.w	r5, [sp, #8]
 801ba80:	2300      	movs	r3, #0
 801ba82:	f8ad 700a 	strh.w	r7, [sp, #10]
 801ba86:	f8ad 600c 	strh.w	r6, [sp, #12]
 801ba8a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ba8e:	6803      	ldr	r3, [r0, #0]
 801ba90:	a901      	add	r1, sp, #4
 801ba92:	681b      	ldr	r3, [r3, #0]
 801ba94:	4798      	blx	r3
 801ba96:	b005      	add	sp, #20
 801ba98:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ba9a:	2900      	cmp	r1, #0
 801ba9c:	d1eb      	bne.n	801ba76 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ba9e:	80a2      	strh	r2, [r4, #4]
 801baa0:	80c6      	strh	r6, [r0, #6]
 801baa2:	60a1      	str	r1, [r4, #8]
 801baa4:	81a1      	strh	r1, [r4, #12]
 801baa6:	73a1      	strb	r1, [r4, #14]
 801baa8:	e7e5      	b.n	801ba76 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801baaa:	bf00      	nop
 801baac:	0801fab0 	.word	0x0801fab0
 801bab0:	0801fad8 	.word	0x0801fad8

0801bab4 <__aeabi_atexit>:
 801bab4:	460b      	mov	r3, r1
 801bab6:	4601      	mov	r1, r0
 801bab8:	4618      	mov	r0, r3
 801baba:	f000 b853 	b.w	801bb64 <__cxa_atexit>

0801babe <_ZdlPvj>:
 801babe:	f000 b812 	b.w	801bae6 <_ZdlPv>

0801bac2 <__cxa_guard_acquire>:
 801bac2:	6803      	ldr	r3, [r0, #0]
 801bac4:	07db      	lsls	r3, r3, #31
 801bac6:	d406      	bmi.n	801bad6 <__cxa_guard_acquire+0x14>
 801bac8:	7843      	ldrb	r3, [r0, #1]
 801baca:	b103      	cbz	r3, 801bace <__cxa_guard_acquire+0xc>
 801bacc:	deff      	udf	#255	; 0xff
 801bace:	2301      	movs	r3, #1
 801bad0:	7043      	strb	r3, [r0, #1]
 801bad2:	4618      	mov	r0, r3
 801bad4:	4770      	bx	lr
 801bad6:	2000      	movs	r0, #0
 801bad8:	4770      	bx	lr

0801bada <__cxa_guard_release>:
 801bada:	2301      	movs	r3, #1
 801badc:	6003      	str	r3, [r0, #0]
 801bade:	4770      	bx	lr

0801bae0 <__cxa_pure_virtual>:
 801bae0:	b508      	push	{r3, lr}
 801bae2:	f000 f80f 	bl	801bb04 <_ZSt9terminatev>

0801bae6 <_ZdlPv>:
 801bae6:	f000 b88f 	b.w	801bc08 <free>

0801baea <_ZN10__cxxabiv111__terminateEPFvvE>:
 801baea:	b508      	push	{r3, lr}
 801baec:	4780      	blx	r0
 801baee:	f000 f80e 	bl	801bb0e <abort>
	...

0801baf4 <_ZSt13get_terminatev>:
 801baf4:	4b02      	ldr	r3, [pc, #8]	; (801bb00 <_ZSt13get_terminatev+0xc>)
 801baf6:	6818      	ldr	r0, [r3, #0]
 801baf8:	f3bf 8f5b 	dmb	ish
 801bafc:	4770      	bx	lr
 801bafe:	bf00      	nop
 801bb00:	200000f8 	.word	0x200000f8

0801bb04 <_ZSt9terminatev>:
 801bb04:	b508      	push	{r3, lr}
 801bb06:	f7ff fff5 	bl	801baf4 <_ZSt13get_terminatev>
 801bb0a:	f7ff ffee 	bl	801baea <_ZN10__cxxabiv111__terminateEPFvvE>

0801bb0e <abort>:
 801bb0e:	b508      	push	{r3, lr}
 801bb10:	2006      	movs	r0, #6
 801bb12:	f000 fc67 	bl	801c3e4 <raise>
 801bb16:	2001      	movs	r0, #1
 801bb18:	f7e6 fa20 	bl	8001f5c <_exit>

0801bb1c <__assert_func>:
 801bb1c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801bb1e:	4614      	mov	r4, r2
 801bb20:	461a      	mov	r2, r3
 801bb22:	4b09      	ldr	r3, [pc, #36]	; (801bb48 <__assert_func+0x2c>)
 801bb24:	681b      	ldr	r3, [r3, #0]
 801bb26:	4605      	mov	r5, r0
 801bb28:	68d8      	ldr	r0, [r3, #12]
 801bb2a:	b14c      	cbz	r4, 801bb40 <__assert_func+0x24>
 801bb2c:	4b07      	ldr	r3, [pc, #28]	; (801bb4c <__assert_func+0x30>)
 801bb2e:	9100      	str	r1, [sp, #0]
 801bb30:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801bb34:	4906      	ldr	r1, [pc, #24]	; (801bb50 <__assert_func+0x34>)
 801bb36:	462b      	mov	r3, r5
 801bb38:	f000 f828 	bl	801bb8c <fiprintf>
 801bb3c:	f7ff ffe7 	bl	801bb0e <abort>
 801bb40:	4b04      	ldr	r3, [pc, #16]	; (801bb54 <__assert_func+0x38>)
 801bb42:	461c      	mov	r4, r3
 801bb44:	e7f3      	b.n	801bb2e <__assert_func+0x12>
 801bb46:	bf00      	nop
 801bb48:	200000fc 	.word	0x200000fc
 801bb4c:	08020e39 	.word	0x08020e39
 801bb50:	08020e46 	.word	0x08020e46
 801bb54:	08020e74 	.word	0x08020e74

0801bb58 <atexit>:
 801bb58:	2300      	movs	r3, #0
 801bb5a:	4601      	mov	r1, r0
 801bb5c:	461a      	mov	r2, r3
 801bb5e:	4618      	mov	r0, r3
 801bb60:	f000 bd50 	b.w	801c604 <__register_exitproc>

0801bb64 <__cxa_atexit>:
 801bb64:	b510      	push	{r4, lr}
 801bb66:	4c05      	ldr	r4, [pc, #20]	; (801bb7c <__cxa_atexit+0x18>)
 801bb68:	4613      	mov	r3, r2
 801bb6a:	b12c      	cbz	r4, 801bb78 <__cxa_atexit+0x14>
 801bb6c:	460a      	mov	r2, r1
 801bb6e:	4601      	mov	r1, r0
 801bb70:	2002      	movs	r0, #2
 801bb72:	f000 fd47 	bl	801c604 <__register_exitproc>
 801bb76:	bd10      	pop	{r4, pc}
 801bb78:	4620      	mov	r0, r4
 801bb7a:	e7fc      	b.n	801bb76 <__cxa_atexit+0x12>
 801bb7c:	0801c605 	.word	0x0801c605

0801bb80 <__errno>:
 801bb80:	4b01      	ldr	r3, [pc, #4]	; (801bb88 <__errno+0x8>)
 801bb82:	6818      	ldr	r0, [r3, #0]
 801bb84:	4770      	bx	lr
 801bb86:	bf00      	nop
 801bb88:	200000fc 	.word	0x200000fc

0801bb8c <fiprintf>:
 801bb8c:	b40e      	push	{r1, r2, r3}
 801bb8e:	b503      	push	{r0, r1, lr}
 801bb90:	4601      	mov	r1, r0
 801bb92:	ab03      	add	r3, sp, #12
 801bb94:	4805      	ldr	r0, [pc, #20]	; (801bbac <fiprintf+0x20>)
 801bb96:	f853 2b04 	ldr.w	r2, [r3], #4
 801bb9a:	6800      	ldr	r0, [r0, #0]
 801bb9c:	9301      	str	r3, [sp, #4]
 801bb9e:	f000 f925 	bl	801bdec <_vfiprintf_r>
 801bba2:	b002      	add	sp, #8
 801bba4:	f85d eb04 	ldr.w	lr, [sp], #4
 801bba8:	b003      	add	sp, #12
 801bbaa:	4770      	bx	lr
 801bbac:	200000fc 	.word	0x200000fc

0801bbb0 <__libc_init_array>:
 801bbb0:	b570      	push	{r4, r5, r6, lr}
 801bbb2:	4d0d      	ldr	r5, [pc, #52]	; (801bbe8 <__libc_init_array+0x38>)
 801bbb4:	4c0d      	ldr	r4, [pc, #52]	; (801bbec <__libc_init_array+0x3c>)
 801bbb6:	1b64      	subs	r4, r4, r5
 801bbb8:	10a4      	asrs	r4, r4, #2
 801bbba:	2600      	movs	r6, #0
 801bbbc:	42a6      	cmp	r6, r4
 801bbbe:	d109      	bne.n	801bbd4 <__libc_init_array+0x24>
 801bbc0:	4d0b      	ldr	r5, [pc, #44]	; (801bbf0 <__libc_init_array+0x40>)
 801bbc2:	4c0c      	ldr	r4, [pc, #48]	; (801bbf4 <__libc_init_array+0x44>)
 801bbc4:	f001 f9fc 	bl	801cfc0 <_init>
 801bbc8:	1b64      	subs	r4, r4, r5
 801bbca:	10a4      	asrs	r4, r4, #2
 801bbcc:	2600      	movs	r6, #0
 801bbce:	42a6      	cmp	r6, r4
 801bbd0:	d105      	bne.n	801bbde <__libc_init_array+0x2e>
 801bbd2:	bd70      	pop	{r4, r5, r6, pc}
 801bbd4:	f855 3b04 	ldr.w	r3, [r5], #4
 801bbd8:	4798      	blx	r3
 801bbda:	3601      	adds	r6, #1
 801bbdc:	e7ee      	b.n	801bbbc <__libc_init_array+0xc>
 801bbde:	f855 3b04 	ldr.w	r3, [r5], #4
 801bbe2:	4798      	blx	r3
 801bbe4:	3601      	adds	r6, #1
 801bbe6:	e7f2      	b.n	801bbce <__libc_init_array+0x1e>
 801bbe8:	0805a45c 	.word	0x0805a45c
 801bbec:	0805a45c 	.word	0x0805a45c
 801bbf0:	0805a45c 	.word	0x0805a45c
 801bbf4:	0805a470 	.word	0x0805a470

0801bbf8 <malloc>:
 801bbf8:	4b02      	ldr	r3, [pc, #8]	; (801bc04 <malloc+0xc>)
 801bbfa:	4601      	mov	r1, r0
 801bbfc:	6818      	ldr	r0, [r3, #0]
 801bbfe:	f000 b871 	b.w	801bce4 <_malloc_r>
 801bc02:	bf00      	nop
 801bc04:	200000fc 	.word	0x200000fc

0801bc08 <free>:
 801bc08:	4b02      	ldr	r3, [pc, #8]	; (801bc14 <free+0xc>)
 801bc0a:	4601      	mov	r1, r0
 801bc0c:	6818      	ldr	r0, [r3, #0]
 801bc0e:	f000 b819 	b.w	801bc44 <_free_r>
 801bc12:	bf00      	nop
 801bc14:	200000fc 	.word	0x200000fc

0801bc18 <memcpy>:
 801bc18:	440a      	add	r2, r1
 801bc1a:	4291      	cmp	r1, r2
 801bc1c:	f100 33ff 	add.w	r3, r0, #4294967295
 801bc20:	d100      	bne.n	801bc24 <memcpy+0xc>
 801bc22:	4770      	bx	lr
 801bc24:	b510      	push	{r4, lr}
 801bc26:	f811 4b01 	ldrb.w	r4, [r1], #1
 801bc2a:	f803 4f01 	strb.w	r4, [r3, #1]!
 801bc2e:	4291      	cmp	r1, r2
 801bc30:	d1f9      	bne.n	801bc26 <memcpy+0xe>
 801bc32:	bd10      	pop	{r4, pc}

0801bc34 <memset>:
 801bc34:	4402      	add	r2, r0
 801bc36:	4603      	mov	r3, r0
 801bc38:	4293      	cmp	r3, r2
 801bc3a:	d100      	bne.n	801bc3e <memset+0xa>
 801bc3c:	4770      	bx	lr
 801bc3e:	f803 1b01 	strb.w	r1, [r3], #1
 801bc42:	e7f9      	b.n	801bc38 <memset+0x4>

0801bc44 <_free_r>:
 801bc44:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801bc46:	2900      	cmp	r1, #0
 801bc48:	d048      	beq.n	801bcdc <_free_r+0x98>
 801bc4a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801bc4e:	9001      	str	r0, [sp, #4]
 801bc50:	2b00      	cmp	r3, #0
 801bc52:	f1a1 0404 	sub.w	r4, r1, #4
 801bc56:	bfb8      	it	lt
 801bc58:	18e4      	addlt	r4, r4, r3
 801bc5a:	f000 ff6f 	bl	801cb3c <__malloc_lock>
 801bc5e:	4a20      	ldr	r2, [pc, #128]	; (801bce0 <_free_r+0x9c>)
 801bc60:	9801      	ldr	r0, [sp, #4]
 801bc62:	6813      	ldr	r3, [r2, #0]
 801bc64:	4615      	mov	r5, r2
 801bc66:	b933      	cbnz	r3, 801bc76 <_free_r+0x32>
 801bc68:	6063      	str	r3, [r4, #4]
 801bc6a:	6014      	str	r4, [r2, #0]
 801bc6c:	b003      	add	sp, #12
 801bc6e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801bc72:	f000 bf69 	b.w	801cb48 <__malloc_unlock>
 801bc76:	42a3      	cmp	r3, r4
 801bc78:	d90b      	bls.n	801bc92 <_free_r+0x4e>
 801bc7a:	6821      	ldr	r1, [r4, #0]
 801bc7c:	1862      	adds	r2, r4, r1
 801bc7e:	4293      	cmp	r3, r2
 801bc80:	bf04      	itt	eq
 801bc82:	681a      	ldreq	r2, [r3, #0]
 801bc84:	685b      	ldreq	r3, [r3, #4]
 801bc86:	6063      	str	r3, [r4, #4]
 801bc88:	bf04      	itt	eq
 801bc8a:	1852      	addeq	r2, r2, r1
 801bc8c:	6022      	streq	r2, [r4, #0]
 801bc8e:	602c      	str	r4, [r5, #0]
 801bc90:	e7ec      	b.n	801bc6c <_free_r+0x28>
 801bc92:	461a      	mov	r2, r3
 801bc94:	685b      	ldr	r3, [r3, #4]
 801bc96:	b10b      	cbz	r3, 801bc9c <_free_r+0x58>
 801bc98:	42a3      	cmp	r3, r4
 801bc9a:	d9fa      	bls.n	801bc92 <_free_r+0x4e>
 801bc9c:	6811      	ldr	r1, [r2, #0]
 801bc9e:	1855      	adds	r5, r2, r1
 801bca0:	42a5      	cmp	r5, r4
 801bca2:	d10b      	bne.n	801bcbc <_free_r+0x78>
 801bca4:	6824      	ldr	r4, [r4, #0]
 801bca6:	4421      	add	r1, r4
 801bca8:	1854      	adds	r4, r2, r1
 801bcaa:	42a3      	cmp	r3, r4
 801bcac:	6011      	str	r1, [r2, #0]
 801bcae:	d1dd      	bne.n	801bc6c <_free_r+0x28>
 801bcb0:	681c      	ldr	r4, [r3, #0]
 801bcb2:	685b      	ldr	r3, [r3, #4]
 801bcb4:	6053      	str	r3, [r2, #4]
 801bcb6:	4421      	add	r1, r4
 801bcb8:	6011      	str	r1, [r2, #0]
 801bcba:	e7d7      	b.n	801bc6c <_free_r+0x28>
 801bcbc:	d902      	bls.n	801bcc4 <_free_r+0x80>
 801bcbe:	230c      	movs	r3, #12
 801bcc0:	6003      	str	r3, [r0, #0]
 801bcc2:	e7d3      	b.n	801bc6c <_free_r+0x28>
 801bcc4:	6825      	ldr	r5, [r4, #0]
 801bcc6:	1961      	adds	r1, r4, r5
 801bcc8:	428b      	cmp	r3, r1
 801bcca:	bf04      	itt	eq
 801bccc:	6819      	ldreq	r1, [r3, #0]
 801bcce:	685b      	ldreq	r3, [r3, #4]
 801bcd0:	6063      	str	r3, [r4, #4]
 801bcd2:	bf04      	itt	eq
 801bcd4:	1949      	addeq	r1, r1, r5
 801bcd6:	6021      	streq	r1, [r4, #0]
 801bcd8:	6054      	str	r4, [r2, #4]
 801bcda:	e7c7      	b.n	801bc6c <_free_r+0x28>
 801bcdc:	b003      	add	sp, #12
 801bcde:	bd30      	pop	{r4, r5, pc}
 801bce0:	20013604 	.word	0x20013604

0801bce4 <_malloc_r>:
 801bce4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bce6:	1ccd      	adds	r5, r1, #3
 801bce8:	f025 0503 	bic.w	r5, r5, #3
 801bcec:	3508      	adds	r5, #8
 801bcee:	2d0c      	cmp	r5, #12
 801bcf0:	bf38      	it	cc
 801bcf2:	250c      	movcc	r5, #12
 801bcf4:	2d00      	cmp	r5, #0
 801bcf6:	4606      	mov	r6, r0
 801bcf8:	db01      	blt.n	801bcfe <_malloc_r+0x1a>
 801bcfa:	42a9      	cmp	r1, r5
 801bcfc:	d903      	bls.n	801bd06 <_malloc_r+0x22>
 801bcfe:	230c      	movs	r3, #12
 801bd00:	6033      	str	r3, [r6, #0]
 801bd02:	2000      	movs	r0, #0
 801bd04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801bd06:	f000 ff19 	bl	801cb3c <__malloc_lock>
 801bd0a:	4921      	ldr	r1, [pc, #132]	; (801bd90 <_malloc_r+0xac>)
 801bd0c:	680a      	ldr	r2, [r1, #0]
 801bd0e:	4614      	mov	r4, r2
 801bd10:	b99c      	cbnz	r4, 801bd3a <_malloc_r+0x56>
 801bd12:	4f20      	ldr	r7, [pc, #128]	; (801bd94 <_malloc_r+0xb0>)
 801bd14:	683b      	ldr	r3, [r7, #0]
 801bd16:	b923      	cbnz	r3, 801bd22 <_malloc_r+0x3e>
 801bd18:	4621      	mov	r1, r4
 801bd1a:	4630      	mov	r0, r6
 801bd1c:	f000 fb2a 	bl	801c374 <_sbrk_r>
 801bd20:	6038      	str	r0, [r7, #0]
 801bd22:	4629      	mov	r1, r5
 801bd24:	4630      	mov	r0, r6
 801bd26:	f000 fb25 	bl	801c374 <_sbrk_r>
 801bd2a:	1c43      	adds	r3, r0, #1
 801bd2c:	d123      	bne.n	801bd76 <_malloc_r+0x92>
 801bd2e:	230c      	movs	r3, #12
 801bd30:	6033      	str	r3, [r6, #0]
 801bd32:	4630      	mov	r0, r6
 801bd34:	f000 ff08 	bl	801cb48 <__malloc_unlock>
 801bd38:	e7e3      	b.n	801bd02 <_malloc_r+0x1e>
 801bd3a:	6823      	ldr	r3, [r4, #0]
 801bd3c:	1b5b      	subs	r3, r3, r5
 801bd3e:	d417      	bmi.n	801bd70 <_malloc_r+0x8c>
 801bd40:	2b0b      	cmp	r3, #11
 801bd42:	d903      	bls.n	801bd4c <_malloc_r+0x68>
 801bd44:	6023      	str	r3, [r4, #0]
 801bd46:	441c      	add	r4, r3
 801bd48:	6025      	str	r5, [r4, #0]
 801bd4a:	e004      	b.n	801bd56 <_malloc_r+0x72>
 801bd4c:	6863      	ldr	r3, [r4, #4]
 801bd4e:	42a2      	cmp	r2, r4
 801bd50:	bf0c      	ite	eq
 801bd52:	600b      	streq	r3, [r1, #0]
 801bd54:	6053      	strne	r3, [r2, #4]
 801bd56:	4630      	mov	r0, r6
 801bd58:	f000 fef6 	bl	801cb48 <__malloc_unlock>
 801bd5c:	f104 000b 	add.w	r0, r4, #11
 801bd60:	1d23      	adds	r3, r4, #4
 801bd62:	f020 0007 	bic.w	r0, r0, #7
 801bd66:	1ac2      	subs	r2, r0, r3
 801bd68:	d0cc      	beq.n	801bd04 <_malloc_r+0x20>
 801bd6a:	1a1b      	subs	r3, r3, r0
 801bd6c:	50a3      	str	r3, [r4, r2]
 801bd6e:	e7c9      	b.n	801bd04 <_malloc_r+0x20>
 801bd70:	4622      	mov	r2, r4
 801bd72:	6864      	ldr	r4, [r4, #4]
 801bd74:	e7cc      	b.n	801bd10 <_malloc_r+0x2c>
 801bd76:	1cc4      	adds	r4, r0, #3
 801bd78:	f024 0403 	bic.w	r4, r4, #3
 801bd7c:	42a0      	cmp	r0, r4
 801bd7e:	d0e3      	beq.n	801bd48 <_malloc_r+0x64>
 801bd80:	1a21      	subs	r1, r4, r0
 801bd82:	4630      	mov	r0, r6
 801bd84:	f000 faf6 	bl	801c374 <_sbrk_r>
 801bd88:	3001      	adds	r0, #1
 801bd8a:	d1dd      	bne.n	801bd48 <_malloc_r+0x64>
 801bd8c:	e7cf      	b.n	801bd2e <_malloc_r+0x4a>
 801bd8e:	bf00      	nop
 801bd90:	20013604 	.word	0x20013604
 801bd94:	20013608 	.word	0x20013608

0801bd98 <__sfputc_r>:
 801bd98:	6893      	ldr	r3, [r2, #8]
 801bd9a:	3b01      	subs	r3, #1
 801bd9c:	2b00      	cmp	r3, #0
 801bd9e:	b410      	push	{r4}
 801bda0:	6093      	str	r3, [r2, #8]
 801bda2:	da08      	bge.n	801bdb6 <__sfputc_r+0x1e>
 801bda4:	6994      	ldr	r4, [r2, #24]
 801bda6:	42a3      	cmp	r3, r4
 801bda8:	db01      	blt.n	801bdae <__sfputc_r+0x16>
 801bdaa:	290a      	cmp	r1, #10
 801bdac:	d103      	bne.n	801bdb6 <__sfputc_r+0x1e>
 801bdae:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bdb2:	f000 bb67 	b.w	801c484 <__swbuf_r>
 801bdb6:	6813      	ldr	r3, [r2, #0]
 801bdb8:	1c58      	adds	r0, r3, #1
 801bdba:	6010      	str	r0, [r2, #0]
 801bdbc:	7019      	strb	r1, [r3, #0]
 801bdbe:	4608      	mov	r0, r1
 801bdc0:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bdc4:	4770      	bx	lr

0801bdc6 <__sfputs_r>:
 801bdc6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bdc8:	4606      	mov	r6, r0
 801bdca:	460f      	mov	r7, r1
 801bdcc:	4614      	mov	r4, r2
 801bdce:	18d5      	adds	r5, r2, r3
 801bdd0:	42ac      	cmp	r4, r5
 801bdd2:	d101      	bne.n	801bdd8 <__sfputs_r+0x12>
 801bdd4:	2000      	movs	r0, #0
 801bdd6:	e007      	b.n	801bde8 <__sfputs_r+0x22>
 801bdd8:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bddc:	463a      	mov	r2, r7
 801bdde:	4630      	mov	r0, r6
 801bde0:	f7ff ffda 	bl	801bd98 <__sfputc_r>
 801bde4:	1c43      	adds	r3, r0, #1
 801bde6:	d1f3      	bne.n	801bdd0 <__sfputs_r+0xa>
 801bde8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801bdec <_vfiprintf_r>:
 801bdec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdf0:	460d      	mov	r5, r1
 801bdf2:	b09d      	sub	sp, #116	; 0x74
 801bdf4:	4614      	mov	r4, r2
 801bdf6:	4698      	mov	r8, r3
 801bdf8:	4606      	mov	r6, r0
 801bdfa:	b118      	cbz	r0, 801be04 <_vfiprintf_r+0x18>
 801bdfc:	6983      	ldr	r3, [r0, #24]
 801bdfe:	b90b      	cbnz	r3, 801be04 <_vfiprintf_r+0x18>
 801be00:	f000 fd7c 	bl	801c8fc <__sinit>
 801be04:	4b89      	ldr	r3, [pc, #548]	; (801c02c <_vfiprintf_r+0x240>)
 801be06:	429d      	cmp	r5, r3
 801be08:	d11b      	bne.n	801be42 <_vfiprintf_r+0x56>
 801be0a:	6875      	ldr	r5, [r6, #4]
 801be0c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801be0e:	07d9      	lsls	r1, r3, #31
 801be10:	d405      	bmi.n	801be1e <_vfiprintf_r+0x32>
 801be12:	89ab      	ldrh	r3, [r5, #12]
 801be14:	059a      	lsls	r2, r3, #22
 801be16:	d402      	bmi.n	801be1e <_vfiprintf_r+0x32>
 801be18:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801be1a:	f000 fe0d 	bl	801ca38 <__retarget_lock_acquire_recursive>
 801be1e:	89ab      	ldrh	r3, [r5, #12]
 801be20:	071b      	lsls	r3, r3, #28
 801be22:	d501      	bpl.n	801be28 <_vfiprintf_r+0x3c>
 801be24:	692b      	ldr	r3, [r5, #16]
 801be26:	b9eb      	cbnz	r3, 801be64 <_vfiprintf_r+0x78>
 801be28:	4629      	mov	r1, r5
 801be2a:	4630      	mov	r0, r6
 801be2c:	f000 fb7c 	bl	801c528 <__swsetup_r>
 801be30:	b1c0      	cbz	r0, 801be64 <_vfiprintf_r+0x78>
 801be32:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801be34:	07dc      	lsls	r4, r3, #31
 801be36:	d50e      	bpl.n	801be56 <_vfiprintf_r+0x6a>
 801be38:	f04f 30ff 	mov.w	r0, #4294967295
 801be3c:	b01d      	add	sp, #116	; 0x74
 801be3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be42:	4b7b      	ldr	r3, [pc, #492]	; (801c030 <_vfiprintf_r+0x244>)
 801be44:	429d      	cmp	r5, r3
 801be46:	d101      	bne.n	801be4c <_vfiprintf_r+0x60>
 801be48:	68b5      	ldr	r5, [r6, #8]
 801be4a:	e7df      	b.n	801be0c <_vfiprintf_r+0x20>
 801be4c:	4b79      	ldr	r3, [pc, #484]	; (801c034 <_vfiprintf_r+0x248>)
 801be4e:	429d      	cmp	r5, r3
 801be50:	bf08      	it	eq
 801be52:	68f5      	ldreq	r5, [r6, #12]
 801be54:	e7da      	b.n	801be0c <_vfiprintf_r+0x20>
 801be56:	89ab      	ldrh	r3, [r5, #12]
 801be58:	0598      	lsls	r0, r3, #22
 801be5a:	d4ed      	bmi.n	801be38 <_vfiprintf_r+0x4c>
 801be5c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801be5e:	f000 fded 	bl	801ca3c <__retarget_lock_release_recursive>
 801be62:	e7e9      	b.n	801be38 <_vfiprintf_r+0x4c>
 801be64:	2300      	movs	r3, #0
 801be66:	9309      	str	r3, [sp, #36]	; 0x24
 801be68:	2320      	movs	r3, #32
 801be6a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801be6e:	f8cd 800c 	str.w	r8, [sp, #12]
 801be72:	2330      	movs	r3, #48	; 0x30
 801be74:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801c038 <_vfiprintf_r+0x24c>
 801be78:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801be7c:	f04f 0901 	mov.w	r9, #1
 801be80:	4623      	mov	r3, r4
 801be82:	469a      	mov	sl, r3
 801be84:	f813 2b01 	ldrb.w	r2, [r3], #1
 801be88:	b10a      	cbz	r2, 801be8e <_vfiprintf_r+0xa2>
 801be8a:	2a25      	cmp	r2, #37	; 0x25
 801be8c:	d1f9      	bne.n	801be82 <_vfiprintf_r+0x96>
 801be8e:	ebba 0b04 	subs.w	fp, sl, r4
 801be92:	d00b      	beq.n	801beac <_vfiprintf_r+0xc0>
 801be94:	465b      	mov	r3, fp
 801be96:	4622      	mov	r2, r4
 801be98:	4629      	mov	r1, r5
 801be9a:	4630      	mov	r0, r6
 801be9c:	f7ff ff93 	bl	801bdc6 <__sfputs_r>
 801bea0:	3001      	adds	r0, #1
 801bea2:	f000 80aa 	beq.w	801bffa <_vfiprintf_r+0x20e>
 801bea6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bea8:	445a      	add	r2, fp
 801beaa:	9209      	str	r2, [sp, #36]	; 0x24
 801beac:	f89a 3000 	ldrb.w	r3, [sl]
 801beb0:	2b00      	cmp	r3, #0
 801beb2:	f000 80a2 	beq.w	801bffa <_vfiprintf_r+0x20e>
 801beb6:	2300      	movs	r3, #0
 801beb8:	f04f 32ff 	mov.w	r2, #4294967295
 801bebc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801bec0:	f10a 0a01 	add.w	sl, sl, #1
 801bec4:	9304      	str	r3, [sp, #16]
 801bec6:	9307      	str	r3, [sp, #28]
 801bec8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801becc:	931a      	str	r3, [sp, #104]	; 0x68
 801bece:	4654      	mov	r4, sl
 801bed0:	2205      	movs	r2, #5
 801bed2:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bed6:	4858      	ldr	r0, [pc, #352]	; (801c038 <_vfiprintf_r+0x24c>)
 801bed8:	f7e4 f992 	bl	8000200 <memchr>
 801bedc:	9a04      	ldr	r2, [sp, #16]
 801bede:	b9d8      	cbnz	r0, 801bf18 <_vfiprintf_r+0x12c>
 801bee0:	06d1      	lsls	r1, r2, #27
 801bee2:	bf44      	itt	mi
 801bee4:	2320      	movmi	r3, #32
 801bee6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801beea:	0713      	lsls	r3, r2, #28
 801beec:	bf44      	itt	mi
 801beee:	232b      	movmi	r3, #43	; 0x2b
 801bef0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801bef4:	f89a 3000 	ldrb.w	r3, [sl]
 801bef8:	2b2a      	cmp	r3, #42	; 0x2a
 801befa:	d015      	beq.n	801bf28 <_vfiprintf_r+0x13c>
 801befc:	9a07      	ldr	r2, [sp, #28]
 801befe:	4654      	mov	r4, sl
 801bf00:	2000      	movs	r0, #0
 801bf02:	f04f 0c0a 	mov.w	ip, #10
 801bf06:	4621      	mov	r1, r4
 801bf08:	f811 3b01 	ldrb.w	r3, [r1], #1
 801bf0c:	3b30      	subs	r3, #48	; 0x30
 801bf0e:	2b09      	cmp	r3, #9
 801bf10:	d94e      	bls.n	801bfb0 <_vfiprintf_r+0x1c4>
 801bf12:	b1b0      	cbz	r0, 801bf42 <_vfiprintf_r+0x156>
 801bf14:	9207      	str	r2, [sp, #28]
 801bf16:	e014      	b.n	801bf42 <_vfiprintf_r+0x156>
 801bf18:	eba0 0308 	sub.w	r3, r0, r8
 801bf1c:	fa09 f303 	lsl.w	r3, r9, r3
 801bf20:	4313      	orrs	r3, r2
 801bf22:	9304      	str	r3, [sp, #16]
 801bf24:	46a2      	mov	sl, r4
 801bf26:	e7d2      	b.n	801bece <_vfiprintf_r+0xe2>
 801bf28:	9b03      	ldr	r3, [sp, #12]
 801bf2a:	1d19      	adds	r1, r3, #4
 801bf2c:	681b      	ldr	r3, [r3, #0]
 801bf2e:	9103      	str	r1, [sp, #12]
 801bf30:	2b00      	cmp	r3, #0
 801bf32:	bfbb      	ittet	lt
 801bf34:	425b      	neglt	r3, r3
 801bf36:	f042 0202 	orrlt.w	r2, r2, #2
 801bf3a:	9307      	strge	r3, [sp, #28]
 801bf3c:	9307      	strlt	r3, [sp, #28]
 801bf3e:	bfb8      	it	lt
 801bf40:	9204      	strlt	r2, [sp, #16]
 801bf42:	7823      	ldrb	r3, [r4, #0]
 801bf44:	2b2e      	cmp	r3, #46	; 0x2e
 801bf46:	d10c      	bne.n	801bf62 <_vfiprintf_r+0x176>
 801bf48:	7863      	ldrb	r3, [r4, #1]
 801bf4a:	2b2a      	cmp	r3, #42	; 0x2a
 801bf4c:	d135      	bne.n	801bfba <_vfiprintf_r+0x1ce>
 801bf4e:	9b03      	ldr	r3, [sp, #12]
 801bf50:	1d1a      	adds	r2, r3, #4
 801bf52:	681b      	ldr	r3, [r3, #0]
 801bf54:	9203      	str	r2, [sp, #12]
 801bf56:	2b00      	cmp	r3, #0
 801bf58:	bfb8      	it	lt
 801bf5a:	f04f 33ff 	movlt.w	r3, #4294967295
 801bf5e:	3402      	adds	r4, #2
 801bf60:	9305      	str	r3, [sp, #20]
 801bf62:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801c048 <_vfiprintf_r+0x25c>
 801bf66:	7821      	ldrb	r1, [r4, #0]
 801bf68:	2203      	movs	r2, #3
 801bf6a:	4650      	mov	r0, sl
 801bf6c:	f7e4 f948 	bl	8000200 <memchr>
 801bf70:	b140      	cbz	r0, 801bf84 <_vfiprintf_r+0x198>
 801bf72:	2340      	movs	r3, #64	; 0x40
 801bf74:	eba0 000a 	sub.w	r0, r0, sl
 801bf78:	fa03 f000 	lsl.w	r0, r3, r0
 801bf7c:	9b04      	ldr	r3, [sp, #16]
 801bf7e:	4303      	orrs	r3, r0
 801bf80:	3401      	adds	r4, #1
 801bf82:	9304      	str	r3, [sp, #16]
 801bf84:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bf88:	482c      	ldr	r0, [pc, #176]	; (801c03c <_vfiprintf_r+0x250>)
 801bf8a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801bf8e:	2206      	movs	r2, #6
 801bf90:	f7e4 f936 	bl	8000200 <memchr>
 801bf94:	2800      	cmp	r0, #0
 801bf96:	d03f      	beq.n	801c018 <_vfiprintf_r+0x22c>
 801bf98:	4b29      	ldr	r3, [pc, #164]	; (801c040 <_vfiprintf_r+0x254>)
 801bf9a:	bb1b      	cbnz	r3, 801bfe4 <_vfiprintf_r+0x1f8>
 801bf9c:	9b03      	ldr	r3, [sp, #12]
 801bf9e:	3307      	adds	r3, #7
 801bfa0:	f023 0307 	bic.w	r3, r3, #7
 801bfa4:	3308      	adds	r3, #8
 801bfa6:	9303      	str	r3, [sp, #12]
 801bfa8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bfaa:	443b      	add	r3, r7
 801bfac:	9309      	str	r3, [sp, #36]	; 0x24
 801bfae:	e767      	b.n	801be80 <_vfiprintf_r+0x94>
 801bfb0:	fb0c 3202 	mla	r2, ip, r2, r3
 801bfb4:	460c      	mov	r4, r1
 801bfb6:	2001      	movs	r0, #1
 801bfb8:	e7a5      	b.n	801bf06 <_vfiprintf_r+0x11a>
 801bfba:	2300      	movs	r3, #0
 801bfbc:	3401      	adds	r4, #1
 801bfbe:	9305      	str	r3, [sp, #20]
 801bfc0:	4619      	mov	r1, r3
 801bfc2:	f04f 0c0a 	mov.w	ip, #10
 801bfc6:	4620      	mov	r0, r4
 801bfc8:	f810 2b01 	ldrb.w	r2, [r0], #1
 801bfcc:	3a30      	subs	r2, #48	; 0x30
 801bfce:	2a09      	cmp	r2, #9
 801bfd0:	d903      	bls.n	801bfda <_vfiprintf_r+0x1ee>
 801bfd2:	2b00      	cmp	r3, #0
 801bfd4:	d0c5      	beq.n	801bf62 <_vfiprintf_r+0x176>
 801bfd6:	9105      	str	r1, [sp, #20]
 801bfd8:	e7c3      	b.n	801bf62 <_vfiprintf_r+0x176>
 801bfda:	fb0c 2101 	mla	r1, ip, r1, r2
 801bfde:	4604      	mov	r4, r0
 801bfe0:	2301      	movs	r3, #1
 801bfe2:	e7f0      	b.n	801bfc6 <_vfiprintf_r+0x1da>
 801bfe4:	ab03      	add	r3, sp, #12
 801bfe6:	9300      	str	r3, [sp, #0]
 801bfe8:	462a      	mov	r2, r5
 801bfea:	4b16      	ldr	r3, [pc, #88]	; (801c044 <_vfiprintf_r+0x258>)
 801bfec:	a904      	add	r1, sp, #16
 801bfee:	4630      	mov	r0, r6
 801bff0:	f3af 8000 	nop.w
 801bff4:	4607      	mov	r7, r0
 801bff6:	1c78      	adds	r0, r7, #1
 801bff8:	d1d6      	bne.n	801bfa8 <_vfiprintf_r+0x1bc>
 801bffa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bffc:	07d9      	lsls	r1, r3, #31
 801bffe:	d405      	bmi.n	801c00c <_vfiprintf_r+0x220>
 801c000:	89ab      	ldrh	r3, [r5, #12]
 801c002:	059a      	lsls	r2, r3, #22
 801c004:	d402      	bmi.n	801c00c <_vfiprintf_r+0x220>
 801c006:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801c008:	f000 fd18 	bl	801ca3c <__retarget_lock_release_recursive>
 801c00c:	89ab      	ldrh	r3, [r5, #12]
 801c00e:	065b      	lsls	r3, r3, #25
 801c010:	f53f af12 	bmi.w	801be38 <_vfiprintf_r+0x4c>
 801c014:	9809      	ldr	r0, [sp, #36]	; 0x24
 801c016:	e711      	b.n	801be3c <_vfiprintf_r+0x50>
 801c018:	ab03      	add	r3, sp, #12
 801c01a:	9300      	str	r3, [sp, #0]
 801c01c:	462a      	mov	r2, r5
 801c01e:	4b09      	ldr	r3, [pc, #36]	; (801c044 <_vfiprintf_r+0x258>)
 801c020:	a904      	add	r1, sp, #16
 801c022:	4630      	mov	r0, r6
 801c024:	f000 f880 	bl	801c128 <_printf_i>
 801c028:	e7e4      	b.n	801bff4 <_vfiprintf_r+0x208>
 801c02a:	bf00      	nop
 801c02c:	08020ed4 	.word	0x08020ed4
 801c030:	08020ef4 	.word	0x08020ef4
 801c034:	08020eb4 	.word	0x08020eb4
 801c038:	08020e7c 	.word	0x08020e7c
 801c03c:	08020e86 	.word	0x08020e86
 801c040:	00000000 	.word	0x00000000
 801c044:	0801bdc7 	.word	0x0801bdc7
 801c048:	08020e82 	.word	0x08020e82

0801c04c <_printf_common>:
 801c04c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c050:	4616      	mov	r6, r2
 801c052:	4699      	mov	r9, r3
 801c054:	688a      	ldr	r2, [r1, #8]
 801c056:	690b      	ldr	r3, [r1, #16]
 801c058:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801c05c:	4293      	cmp	r3, r2
 801c05e:	bfb8      	it	lt
 801c060:	4613      	movlt	r3, r2
 801c062:	6033      	str	r3, [r6, #0]
 801c064:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801c068:	4607      	mov	r7, r0
 801c06a:	460c      	mov	r4, r1
 801c06c:	b10a      	cbz	r2, 801c072 <_printf_common+0x26>
 801c06e:	3301      	adds	r3, #1
 801c070:	6033      	str	r3, [r6, #0]
 801c072:	6823      	ldr	r3, [r4, #0]
 801c074:	0699      	lsls	r1, r3, #26
 801c076:	bf42      	ittt	mi
 801c078:	6833      	ldrmi	r3, [r6, #0]
 801c07a:	3302      	addmi	r3, #2
 801c07c:	6033      	strmi	r3, [r6, #0]
 801c07e:	6825      	ldr	r5, [r4, #0]
 801c080:	f015 0506 	ands.w	r5, r5, #6
 801c084:	d106      	bne.n	801c094 <_printf_common+0x48>
 801c086:	f104 0a19 	add.w	sl, r4, #25
 801c08a:	68e3      	ldr	r3, [r4, #12]
 801c08c:	6832      	ldr	r2, [r6, #0]
 801c08e:	1a9b      	subs	r3, r3, r2
 801c090:	42ab      	cmp	r3, r5
 801c092:	dc26      	bgt.n	801c0e2 <_printf_common+0x96>
 801c094:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801c098:	1e13      	subs	r3, r2, #0
 801c09a:	6822      	ldr	r2, [r4, #0]
 801c09c:	bf18      	it	ne
 801c09e:	2301      	movne	r3, #1
 801c0a0:	0692      	lsls	r2, r2, #26
 801c0a2:	d42b      	bmi.n	801c0fc <_printf_common+0xb0>
 801c0a4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801c0a8:	4649      	mov	r1, r9
 801c0aa:	4638      	mov	r0, r7
 801c0ac:	47c0      	blx	r8
 801c0ae:	3001      	adds	r0, #1
 801c0b0:	d01e      	beq.n	801c0f0 <_printf_common+0xa4>
 801c0b2:	6823      	ldr	r3, [r4, #0]
 801c0b4:	68e5      	ldr	r5, [r4, #12]
 801c0b6:	6832      	ldr	r2, [r6, #0]
 801c0b8:	f003 0306 	and.w	r3, r3, #6
 801c0bc:	2b04      	cmp	r3, #4
 801c0be:	bf08      	it	eq
 801c0c0:	1aad      	subeq	r5, r5, r2
 801c0c2:	68a3      	ldr	r3, [r4, #8]
 801c0c4:	6922      	ldr	r2, [r4, #16]
 801c0c6:	bf0c      	ite	eq
 801c0c8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801c0cc:	2500      	movne	r5, #0
 801c0ce:	4293      	cmp	r3, r2
 801c0d0:	bfc4      	itt	gt
 801c0d2:	1a9b      	subgt	r3, r3, r2
 801c0d4:	18ed      	addgt	r5, r5, r3
 801c0d6:	2600      	movs	r6, #0
 801c0d8:	341a      	adds	r4, #26
 801c0da:	42b5      	cmp	r5, r6
 801c0dc:	d11a      	bne.n	801c114 <_printf_common+0xc8>
 801c0de:	2000      	movs	r0, #0
 801c0e0:	e008      	b.n	801c0f4 <_printf_common+0xa8>
 801c0e2:	2301      	movs	r3, #1
 801c0e4:	4652      	mov	r2, sl
 801c0e6:	4649      	mov	r1, r9
 801c0e8:	4638      	mov	r0, r7
 801c0ea:	47c0      	blx	r8
 801c0ec:	3001      	adds	r0, #1
 801c0ee:	d103      	bne.n	801c0f8 <_printf_common+0xac>
 801c0f0:	f04f 30ff 	mov.w	r0, #4294967295
 801c0f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c0f8:	3501      	adds	r5, #1
 801c0fa:	e7c6      	b.n	801c08a <_printf_common+0x3e>
 801c0fc:	18e1      	adds	r1, r4, r3
 801c0fe:	1c5a      	adds	r2, r3, #1
 801c100:	2030      	movs	r0, #48	; 0x30
 801c102:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801c106:	4422      	add	r2, r4
 801c108:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801c10c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801c110:	3302      	adds	r3, #2
 801c112:	e7c7      	b.n	801c0a4 <_printf_common+0x58>
 801c114:	2301      	movs	r3, #1
 801c116:	4622      	mov	r2, r4
 801c118:	4649      	mov	r1, r9
 801c11a:	4638      	mov	r0, r7
 801c11c:	47c0      	blx	r8
 801c11e:	3001      	adds	r0, #1
 801c120:	d0e6      	beq.n	801c0f0 <_printf_common+0xa4>
 801c122:	3601      	adds	r6, #1
 801c124:	e7d9      	b.n	801c0da <_printf_common+0x8e>
	...

0801c128 <_printf_i>:
 801c128:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c12c:	460c      	mov	r4, r1
 801c12e:	4691      	mov	r9, r2
 801c130:	7e27      	ldrb	r7, [r4, #24]
 801c132:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c134:	2f78      	cmp	r7, #120	; 0x78
 801c136:	4680      	mov	r8, r0
 801c138:	469a      	mov	sl, r3
 801c13a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801c13e:	d807      	bhi.n	801c150 <_printf_i+0x28>
 801c140:	2f62      	cmp	r7, #98	; 0x62
 801c142:	d80a      	bhi.n	801c15a <_printf_i+0x32>
 801c144:	2f00      	cmp	r7, #0
 801c146:	f000 80d8 	beq.w	801c2fa <_printf_i+0x1d2>
 801c14a:	2f58      	cmp	r7, #88	; 0x58
 801c14c:	f000 80a3 	beq.w	801c296 <_printf_i+0x16e>
 801c150:	f104 0642 	add.w	r6, r4, #66	; 0x42
 801c154:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801c158:	e03a      	b.n	801c1d0 <_printf_i+0xa8>
 801c15a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801c15e:	2b15      	cmp	r3, #21
 801c160:	d8f6      	bhi.n	801c150 <_printf_i+0x28>
 801c162:	a001      	add	r0, pc, #4	; (adr r0, 801c168 <_printf_i+0x40>)
 801c164:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 801c168:	0801c1c1 	.word	0x0801c1c1
 801c16c:	0801c1d5 	.word	0x0801c1d5
 801c170:	0801c151 	.word	0x0801c151
 801c174:	0801c151 	.word	0x0801c151
 801c178:	0801c151 	.word	0x0801c151
 801c17c:	0801c151 	.word	0x0801c151
 801c180:	0801c1d5 	.word	0x0801c1d5
 801c184:	0801c151 	.word	0x0801c151
 801c188:	0801c151 	.word	0x0801c151
 801c18c:	0801c151 	.word	0x0801c151
 801c190:	0801c151 	.word	0x0801c151
 801c194:	0801c2e1 	.word	0x0801c2e1
 801c198:	0801c205 	.word	0x0801c205
 801c19c:	0801c2c3 	.word	0x0801c2c3
 801c1a0:	0801c151 	.word	0x0801c151
 801c1a4:	0801c151 	.word	0x0801c151
 801c1a8:	0801c303 	.word	0x0801c303
 801c1ac:	0801c151 	.word	0x0801c151
 801c1b0:	0801c205 	.word	0x0801c205
 801c1b4:	0801c151 	.word	0x0801c151
 801c1b8:	0801c151 	.word	0x0801c151
 801c1bc:	0801c2cb 	.word	0x0801c2cb
 801c1c0:	680b      	ldr	r3, [r1, #0]
 801c1c2:	1d1a      	adds	r2, r3, #4
 801c1c4:	681b      	ldr	r3, [r3, #0]
 801c1c6:	600a      	str	r2, [r1, #0]
 801c1c8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 801c1cc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801c1d0:	2301      	movs	r3, #1
 801c1d2:	e0a3      	b.n	801c31c <_printf_i+0x1f4>
 801c1d4:	6825      	ldr	r5, [r4, #0]
 801c1d6:	6808      	ldr	r0, [r1, #0]
 801c1d8:	062e      	lsls	r6, r5, #24
 801c1da:	f100 0304 	add.w	r3, r0, #4
 801c1de:	d50a      	bpl.n	801c1f6 <_printf_i+0xce>
 801c1e0:	6805      	ldr	r5, [r0, #0]
 801c1e2:	600b      	str	r3, [r1, #0]
 801c1e4:	2d00      	cmp	r5, #0
 801c1e6:	da03      	bge.n	801c1f0 <_printf_i+0xc8>
 801c1e8:	232d      	movs	r3, #45	; 0x2d
 801c1ea:	426d      	negs	r5, r5
 801c1ec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c1f0:	485e      	ldr	r0, [pc, #376]	; (801c36c <_printf_i+0x244>)
 801c1f2:	230a      	movs	r3, #10
 801c1f4:	e019      	b.n	801c22a <_printf_i+0x102>
 801c1f6:	f015 0f40 	tst.w	r5, #64	; 0x40
 801c1fa:	6805      	ldr	r5, [r0, #0]
 801c1fc:	600b      	str	r3, [r1, #0]
 801c1fe:	bf18      	it	ne
 801c200:	b22d      	sxthne	r5, r5
 801c202:	e7ef      	b.n	801c1e4 <_printf_i+0xbc>
 801c204:	680b      	ldr	r3, [r1, #0]
 801c206:	6825      	ldr	r5, [r4, #0]
 801c208:	1d18      	adds	r0, r3, #4
 801c20a:	6008      	str	r0, [r1, #0]
 801c20c:	0628      	lsls	r0, r5, #24
 801c20e:	d501      	bpl.n	801c214 <_printf_i+0xec>
 801c210:	681d      	ldr	r5, [r3, #0]
 801c212:	e002      	b.n	801c21a <_printf_i+0xf2>
 801c214:	0669      	lsls	r1, r5, #25
 801c216:	d5fb      	bpl.n	801c210 <_printf_i+0xe8>
 801c218:	881d      	ldrh	r5, [r3, #0]
 801c21a:	4854      	ldr	r0, [pc, #336]	; (801c36c <_printf_i+0x244>)
 801c21c:	2f6f      	cmp	r7, #111	; 0x6f
 801c21e:	bf0c      	ite	eq
 801c220:	2308      	moveq	r3, #8
 801c222:	230a      	movne	r3, #10
 801c224:	2100      	movs	r1, #0
 801c226:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801c22a:	6866      	ldr	r6, [r4, #4]
 801c22c:	60a6      	str	r6, [r4, #8]
 801c22e:	2e00      	cmp	r6, #0
 801c230:	bfa2      	ittt	ge
 801c232:	6821      	ldrge	r1, [r4, #0]
 801c234:	f021 0104 	bicge.w	r1, r1, #4
 801c238:	6021      	strge	r1, [r4, #0]
 801c23a:	b90d      	cbnz	r5, 801c240 <_printf_i+0x118>
 801c23c:	2e00      	cmp	r6, #0
 801c23e:	d04d      	beq.n	801c2dc <_printf_i+0x1b4>
 801c240:	4616      	mov	r6, r2
 801c242:	fbb5 f1f3 	udiv	r1, r5, r3
 801c246:	fb03 5711 	mls	r7, r3, r1, r5
 801c24a:	5dc7      	ldrb	r7, [r0, r7]
 801c24c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c250:	462f      	mov	r7, r5
 801c252:	42bb      	cmp	r3, r7
 801c254:	460d      	mov	r5, r1
 801c256:	d9f4      	bls.n	801c242 <_printf_i+0x11a>
 801c258:	2b08      	cmp	r3, #8
 801c25a:	d10b      	bne.n	801c274 <_printf_i+0x14c>
 801c25c:	6823      	ldr	r3, [r4, #0]
 801c25e:	07df      	lsls	r7, r3, #31
 801c260:	d508      	bpl.n	801c274 <_printf_i+0x14c>
 801c262:	6923      	ldr	r3, [r4, #16]
 801c264:	6861      	ldr	r1, [r4, #4]
 801c266:	4299      	cmp	r1, r3
 801c268:	bfde      	ittt	le
 801c26a:	2330      	movle	r3, #48	; 0x30
 801c26c:	f806 3c01 	strble.w	r3, [r6, #-1]
 801c270:	f106 36ff 	addle.w	r6, r6, #4294967295
 801c274:	1b92      	subs	r2, r2, r6
 801c276:	6122      	str	r2, [r4, #16]
 801c278:	f8cd a000 	str.w	sl, [sp]
 801c27c:	464b      	mov	r3, r9
 801c27e:	aa03      	add	r2, sp, #12
 801c280:	4621      	mov	r1, r4
 801c282:	4640      	mov	r0, r8
 801c284:	f7ff fee2 	bl	801c04c <_printf_common>
 801c288:	3001      	adds	r0, #1
 801c28a:	d14c      	bne.n	801c326 <_printf_i+0x1fe>
 801c28c:	f04f 30ff 	mov.w	r0, #4294967295
 801c290:	b004      	add	sp, #16
 801c292:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c296:	4835      	ldr	r0, [pc, #212]	; (801c36c <_printf_i+0x244>)
 801c298:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 801c29c:	6823      	ldr	r3, [r4, #0]
 801c29e:	680e      	ldr	r6, [r1, #0]
 801c2a0:	061f      	lsls	r7, r3, #24
 801c2a2:	f856 5b04 	ldr.w	r5, [r6], #4
 801c2a6:	600e      	str	r6, [r1, #0]
 801c2a8:	d514      	bpl.n	801c2d4 <_printf_i+0x1ac>
 801c2aa:	07d9      	lsls	r1, r3, #31
 801c2ac:	bf44      	itt	mi
 801c2ae:	f043 0320 	orrmi.w	r3, r3, #32
 801c2b2:	6023      	strmi	r3, [r4, #0]
 801c2b4:	b91d      	cbnz	r5, 801c2be <_printf_i+0x196>
 801c2b6:	6823      	ldr	r3, [r4, #0]
 801c2b8:	f023 0320 	bic.w	r3, r3, #32
 801c2bc:	6023      	str	r3, [r4, #0]
 801c2be:	2310      	movs	r3, #16
 801c2c0:	e7b0      	b.n	801c224 <_printf_i+0xfc>
 801c2c2:	6823      	ldr	r3, [r4, #0]
 801c2c4:	f043 0320 	orr.w	r3, r3, #32
 801c2c8:	6023      	str	r3, [r4, #0]
 801c2ca:	2378      	movs	r3, #120	; 0x78
 801c2cc:	4828      	ldr	r0, [pc, #160]	; (801c370 <_printf_i+0x248>)
 801c2ce:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801c2d2:	e7e3      	b.n	801c29c <_printf_i+0x174>
 801c2d4:	065e      	lsls	r6, r3, #25
 801c2d6:	bf48      	it	mi
 801c2d8:	b2ad      	uxthmi	r5, r5
 801c2da:	e7e6      	b.n	801c2aa <_printf_i+0x182>
 801c2dc:	4616      	mov	r6, r2
 801c2de:	e7bb      	b.n	801c258 <_printf_i+0x130>
 801c2e0:	680b      	ldr	r3, [r1, #0]
 801c2e2:	6826      	ldr	r6, [r4, #0]
 801c2e4:	6960      	ldr	r0, [r4, #20]
 801c2e6:	1d1d      	adds	r5, r3, #4
 801c2e8:	600d      	str	r5, [r1, #0]
 801c2ea:	0635      	lsls	r5, r6, #24
 801c2ec:	681b      	ldr	r3, [r3, #0]
 801c2ee:	d501      	bpl.n	801c2f4 <_printf_i+0x1cc>
 801c2f0:	6018      	str	r0, [r3, #0]
 801c2f2:	e002      	b.n	801c2fa <_printf_i+0x1d2>
 801c2f4:	0671      	lsls	r1, r6, #25
 801c2f6:	d5fb      	bpl.n	801c2f0 <_printf_i+0x1c8>
 801c2f8:	8018      	strh	r0, [r3, #0]
 801c2fa:	2300      	movs	r3, #0
 801c2fc:	6123      	str	r3, [r4, #16]
 801c2fe:	4616      	mov	r6, r2
 801c300:	e7ba      	b.n	801c278 <_printf_i+0x150>
 801c302:	680b      	ldr	r3, [r1, #0]
 801c304:	1d1a      	adds	r2, r3, #4
 801c306:	600a      	str	r2, [r1, #0]
 801c308:	681e      	ldr	r6, [r3, #0]
 801c30a:	6862      	ldr	r2, [r4, #4]
 801c30c:	2100      	movs	r1, #0
 801c30e:	4630      	mov	r0, r6
 801c310:	f7e3 ff76 	bl	8000200 <memchr>
 801c314:	b108      	cbz	r0, 801c31a <_printf_i+0x1f2>
 801c316:	1b80      	subs	r0, r0, r6
 801c318:	6060      	str	r0, [r4, #4]
 801c31a:	6863      	ldr	r3, [r4, #4]
 801c31c:	6123      	str	r3, [r4, #16]
 801c31e:	2300      	movs	r3, #0
 801c320:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c324:	e7a8      	b.n	801c278 <_printf_i+0x150>
 801c326:	6923      	ldr	r3, [r4, #16]
 801c328:	4632      	mov	r2, r6
 801c32a:	4649      	mov	r1, r9
 801c32c:	4640      	mov	r0, r8
 801c32e:	47d0      	blx	sl
 801c330:	3001      	adds	r0, #1
 801c332:	d0ab      	beq.n	801c28c <_printf_i+0x164>
 801c334:	6823      	ldr	r3, [r4, #0]
 801c336:	079b      	lsls	r3, r3, #30
 801c338:	d413      	bmi.n	801c362 <_printf_i+0x23a>
 801c33a:	68e0      	ldr	r0, [r4, #12]
 801c33c:	9b03      	ldr	r3, [sp, #12]
 801c33e:	4298      	cmp	r0, r3
 801c340:	bfb8      	it	lt
 801c342:	4618      	movlt	r0, r3
 801c344:	e7a4      	b.n	801c290 <_printf_i+0x168>
 801c346:	2301      	movs	r3, #1
 801c348:	4632      	mov	r2, r6
 801c34a:	4649      	mov	r1, r9
 801c34c:	4640      	mov	r0, r8
 801c34e:	47d0      	blx	sl
 801c350:	3001      	adds	r0, #1
 801c352:	d09b      	beq.n	801c28c <_printf_i+0x164>
 801c354:	3501      	adds	r5, #1
 801c356:	68e3      	ldr	r3, [r4, #12]
 801c358:	9903      	ldr	r1, [sp, #12]
 801c35a:	1a5b      	subs	r3, r3, r1
 801c35c:	42ab      	cmp	r3, r5
 801c35e:	dcf2      	bgt.n	801c346 <_printf_i+0x21e>
 801c360:	e7eb      	b.n	801c33a <_printf_i+0x212>
 801c362:	2500      	movs	r5, #0
 801c364:	f104 0619 	add.w	r6, r4, #25
 801c368:	e7f5      	b.n	801c356 <_printf_i+0x22e>
 801c36a:	bf00      	nop
 801c36c:	08020e8d 	.word	0x08020e8d
 801c370:	08020e9e 	.word	0x08020e9e

0801c374 <_sbrk_r>:
 801c374:	b538      	push	{r3, r4, r5, lr}
 801c376:	4d06      	ldr	r5, [pc, #24]	; (801c390 <_sbrk_r+0x1c>)
 801c378:	2300      	movs	r3, #0
 801c37a:	4604      	mov	r4, r0
 801c37c:	4608      	mov	r0, r1
 801c37e:	602b      	str	r3, [r5, #0]
 801c380:	f7e5 fe18 	bl	8001fb4 <_sbrk>
 801c384:	1c43      	adds	r3, r0, #1
 801c386:	d102      	bne.n	801c38e <_sbrk_r+0x1a>
 801c388:	682b      	ldr	r3, [r5, #0]
 801c38a:	b103      	cbz	r3, 801c38e <_sbrk_r+0x1a>
 801c38c:	6023      	str	r3, [r4, #0]
 801c38e:	bd38      	pop	{r3, r4, r5, pc}
 801c390:	20013a84 	.word	0x20013a84

0801c394 <_raise_r>:
 801c394:	291f      	cmp	r1, #31
 801c396:	b538      	push	{r3, r4, r5, lr}
 801c398:	4604      	mov	r4, r0
 801c39a:	460d      	mov	r5, r1
 801c39c:	d904      	bls.n	801c3a8 <_raise_r+0x14>
 801c39e:	2316      	movs	r3, #22
 801c3a0:	6003      	str	r3, [r0, #0]
 801c3a2:	f04f 30ff 	mov.w	r0, #4294967295
 801c3a6:	bd38      	pop	{r3, r4, r5, pc}
 801c3a8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801c3aa:	b112      	cbz	r2, 801c3b2 <_raise_r+0x1e>
 801c3ac:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801c3b0:	b94b      	cbnz	r3, 801c3c6 <_raise_r+0x32>
 801c3b2:	4620      	mov	r0, r4
 801c3b4:	f000 f830 	bl	801c418 <_getpid_r>
 801c3b8:	462a      	mov	r2, r5
 801c3ba:	4601      	mov	r1, r0
 801c3bc:	4620      	mov	r0, r4
 801c3be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c3c2:	f000 b817 	b.w	801c3f4 <_kill_r>
 801c3c6:	2b01      	cmp	r3, #1
 801c3c8:	d00a      	beq.n	801c3e0 <_raise_r+0x4c>
 801c3ca:	1c59      	adds	r1, r3, #1
 801c3cc:	d103      	bne.n	801c3d6 <_raise_r+0x42>
 801c3ce:	2316      	movs	r3, #22
 801c3d0:	6003      	str	r3, [r0, #0]
 801c3d2:	2001      	movs	r0, #1
 801c3d4:	e7e7      	b.n	801c3a6 <_raise_r+0x12>
 801c3d6:	2400      	movs	r4, #0
 801c3d8:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801c3dc:	4628      	mov	r0, r5
 801c3de:	4798      	blx	r3
 801c3e0:	2000      	movs	r0, #0
 801c3e2:	e7e0      	b.n	801c3a6 <_raise_r+0x12>

0801c3e4 <raise>:
 801c3e4:	4b02      	ldr	r3, [pc, #8]	; (801c3f0 <raise+0xc>)
 801c3e6:	4601      	mov	r1, r0
 801c3e8:	6818      	ldr	r0, [r3, #0]
 801c3ea:	f7ff bfd3 	b.w	801c394 <_raise_r>
 801c3ee:	bf00      	nop
 801c3f0:	200000fc 	.word	0x200000fc

0801c3f4 <_kill_r>:
 801c3f4:	b538      	push	{r3, r4, r5, lr}
 801c3f6:	4d07      	ldr	r5, [pc, #28]	; (801c414 <_kill_r+0x20>)
 801c3f8:	2300      	movs	r3, #0
 801c3fa:	4604      	mov	r4, r0
 801c3fc:	4608      	mov	r0, r1
 801c3fe:	4611      	mov	r1, r2
 801c400:	602b      	str	r3, [r5, #0]
 801c402:	f7e5 fda3 	bl	8001f4c <_kill>
 801c406:	1c43      	adds	r3, r0, #1
 801c408:	d102      	bne.n	801c410 <_kill_r+0x1c>
 801c40a:	682b      	ldr	r3, [r5, #0]
 801c40c:	b103      	cbz	r3, 801c410 <_kill_r+0x1c>
 801c40e:	6023      	str	r3, [r4, #0]
 801c410:	bd38      	pop	{r3, r4, r5, pc}
 801c412:	bf00      	nop
 801c414:	20013a84 	.word	0x20013a84

0801c418 <_getpid_r>:
 801c418:	f7e5 bd96 	b.w	8001f48 <_getpid>

0801c41c <siprintf>:
 801c41c:	b40e      	push	{r1, r2, r3}
 801c41e:	b500      	push	{lr}
 801c420:	b09c      	sub	sp, #112	; 0x70
 801c422:	ab1d      	add	r3, sp, #116	; 0x74
 801c424:	9002      	str	r0, [sp, #8]
 801c426:	9006      	str	r0, [sp, #24]
 801c428:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 801c42c:	4809      	ldr	r0, [pc, #36]	; (801c454 <siprintf+0x38>)
 801c42e:	9107      	str	r1, [sp, #28]
 801c430:	9104      	str	r1, [sp, #16]
 801c432:	4909      	ldr	r1, [pc, #36]	; (801c458 <siprintf+0x3c>)
 801c434:	f853 2b04 	ldr.w	r2, [r3], #4
 801c438:	9105      	str	r1, [sp, #20]
 801c43a:	6800      	ldr	r0, [r0, #0]
 801c43c:	9301      	str	r3, [sp, #4]
 801c43e:	a902      	add	r1, sp, #8
 801c440:	f000 fc0a 	bl	801cc58 <_svfiprintf_r>
 801c444:	9b02      	ldr	r3, [sp, #8]
 801c446:	2200      	movs	r2, #0
 801c448:	701a      	strb	r2, [r3, #0]
 801c44a:	b01c      	add	sp, #112	; 0x70
 801c44c:	f85d eb04 	ldr.w	lr, [sp], #4
 801c450:	b003      	add	sp, #12
 801c452:	4770      	bx	lr
 801c454:	200000fc 	.word	0x200000fc
 801c458:	ffff0208 	.word	0xffff0208

0801c45c <strncpy>:
 801c45c:	b510      	push	{r4, lr}
 801c45e:	3901      	subs	r1, #1
 801c460:	4603      	mov	r3, r0
 801c462:	b132      	cbz	r2, 801c472 <strncpy+0x16>
 801c464:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 801c468:	f803 4b01 	strb.w	r4, [r3], #1
 801c46c:	3a01      	subs	r2, #1
 801c46e:	2c00      	cmp	r4, #0
 801c470:	d1f7      	bne.n	801c462 <strncpy+0x6>
 801c472:	441a      	add	r2, r3
 801c474:	2100      	movs	r1, #0
 801c476:	4293      	cmp	r3, r2
 801c478:	d100      	bne.n	801c47c <strncpy+0x20>
 801c47a:	bd10      	pop	{r4, pc}
 801c47c:	f803 1b01 	strb.w	r1, [r3], #1
 801c480:	e7f9      	b.n	801c476 <strncpy+0x1a>
	...

0801c484 <__swbuf_r>:
 801c484:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c486:	460e      	mov	r6, r1
 801c488:	4614      	mov	r4, r2
 801c48a:	4605      	mov	r5, r0
 801c48c:	b118      	cbz	r0, 801c496 <__swbuf_r+0x12>
 801c48e:	6983      	ldr	r3, [r0, #24]
 801c490:	b90b      	cbnz	r3, 801c496 <__swbuf_r+0x12>
 801c492:	f000 fa33 	bl	801c8fc <__sinit>
 801c496:	4b21      	ldr	r3, [pc, #132]	; (801c51c <__swbuf_r+0x98>)
 801c498:	429c      	cmp	r4, r3
 801c49a:	d12b      	bne.n	801c4f4 <__swbuf_r+0x70>
 801c49c:	686c      	ldr	r4, [r5, #4]
 801c49e:	69a3      	ldr	r3, [r4, #24]
 801c4a0:	60a3      	str	r3, [r4, #8]
 801c4a2:	89a3      	ldrh	r3, [r4, #12]
 801c4a4:	071a      	lsls	r2, r3, #28
 801c4a6:	d52f      	bpl.n	801c508 <__swbuf_r+0x84>
 801c4a8:	6923      	ldr	r3, [r4, #16]
 801c4aa:	b36b      	cbz	r3, 801c508 <__swbuf_r+0x84>
 801c4ac:	6923      	ldr	r3, [r4, #16]
 801c4ae:	6820      	ldr	r0, [r4, #0]
 801c4b0:	1ac0      	subs	r0, r0, r3
 801c4b2:	6963      	ldr	r3, [r4, #20]
 801c4b4:	b2f6      	uxtb	r6, r6
 801c4b6:	4283      	cmp	r3, r0
 801c4b8:	4637      	mov	r7, r6
 801c4ba:	dc04      	bgt.n	801c4c6 <__swbuf_r+0x42>
 801c4bc:	4621      	mov	r1, r4
 801c4be:	4628      	mov	r0, r5
 801c4c0:	f000 f988 	bl	801c7d4 <_fflush_r>
 801c4c4:	bb30      	cbnz	r0, 801c514 <__swbuf_r+0x90>
 801c4c6:	68a3      	ldr	r3, [r4, #8]
 801c4c8:	3b01      	subs	r3, #1
 801c4ca:	60a3      	str	r3, [r4, #8]
 801c4cc:	6823      	ldr	r3, [r4, #0]
 801c4ce:	1c5a      	adds	r2, r3, #1
 801c4d0:	6022      	str	r2, [r4, #0]
 801c4d2:	701e      	strb	r6, [r3, #0]
 801c4d4:	6963      	ldr	r3, [r4, #20]
 801c4d6:	3001      	adds	r0, #1
 801c4d8:	4283      	cmp	r3, r0
 801c4da:	d004      	beq.n	801c4e6 <__swbuf_r+0x62>
 801c4dc:	89a3      	ldrh	r3, [r4, #12]
 801c4de:	07db      	lsls	r3, r3, #31
 801c4e0:	d506      	bpl.n	801c4f0 <__swbuf_r+0x6c>
 801c4e2:	2e0a      	cmp	r6, #10
 801c4e4:	d104      	bne.n	801c4f0 <__swbuf_r+0x6c>
 801c4e6:	4621      	mov	r1, r4
 801c4e8:	4628      	mov	r0, r5
 801c4ea:	f000 f973 	bl	801c7d4 <_fflush_r>
 801c4ee:	b988      	cbnz	r0, 801c514 <__swbuf_r+0x90>
 801c4f0:	4638      	mov	r0, r7
 801c4f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c4f4:	4b0a      	ldr	r3, [pc, #40]	; (801c520 <__swbuf_r+0x9c>)
 801c4f6:	429c      	cmp	r4, r3
 801c4f8:	d101      	bne.n	801c4fe <__swbuf_r+0x7a>
 801c4fa:	68ac      	ldr	r4, [r5, #8]
 801c4fc:	e7cf      	b.n	801c49e <__swbuf_r+0x1a>
 801c4fe:	4b09      	ldr	r3, [pc, #36]	; (801c524 <__swbuf_r+0xa0>)
 801c500:	429c      	cmp	r4, r3
 801c502:	bf08      	it	eq
 801c504:	68ec      	ldreq	r4, [r5, #12]
 801c506:	e7ca      	b.n	801c49e <__swbuf_r+0x1a>
 801c508:	4621      	mov	r1, r4
 801c50a:	4628      	mov	r0, r5
 801c50c:	f000 f80c 	bl	801c528 <__swsetup_r>
 801c510:	2800      	cmp	r0, #0
 801c512:	d0cb      	beq.n	801c4ac <__swbuf_r+0x28>
 801c514:	f04f 37ff 	mov.w	r7, #4294967295
 801c518:	e7ea      	b.n	801c4f0 <__swbuf_r+0x6c>
 801c51a:	bf00      	nop
 801c51c:	08020ed4 	.word	0x08020ed4
 801c520:	08020ef4 	.word	0x08020ef4
 801c524:	08020eb4 	.word	0x08020eb4

0801c528 <__swsetup_r>:
 801c528:	4b32      	ldr	r3, [pc, #200]	; (801c5f4 <__swsetup_r+0xcc>)
 801c52a:	b570      	push	{r4, r5, r6, lr}
 801c52c:	681d      	ldr	r5, [r3, #0]
 801c52e:	4606      	mov	r6, r0
 801c530:	460c      	mov	r4, r1
 801c532:	b125      	cbz	r5, 801c53e <__swsetup_r+0x16>
 801c534:	69ab      	ldr	r3, [r5, #24]
 801c536:	b913      	cbnz	r3, 801c53e <__swsetup_r+0x16>
 801c538:	4628      	mov	r0, r5
 801c53a:	f000 f9df 	bl	801c8fc <__sinit>
 801c53e:	4b2e      	ldr	r3, [pc, #184]	; (801c5f8 <__swsetup_r+0xd0>)
 801c540:	429c      	cmp	r4, r3
 801c542:	d10f      	bne.n	801c564 <__swsetup_r+0x3c>
 801c544:	686c      	ldr	r4, [r5, #4]
 801c546:	89a3      	ldrh	r3, [r4, #12]
 801c548:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c54c:	0719      	lsls	r1, r3, #28
 801c54e:	d42c      	bmi.n	801c5aa <__swsetup_r+0x82>
 801c550:	06dd      	lsls	r5, r3, #27
 801c552:	d411      	bmi.n	801c578 <__swsetup_r+0x50>
 801c554:	2309      	movs	r3, #9
 801c556:	6033      	str	r3, [r6, #0]
 801c558:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801c55c:	81a3      	strh	r3, [r4, #12]
 801c55e:	f04f 30ff 	mov.w	r0, #4294967295
 801c562:	e03e      	b.n	801c5e2 <__swsetup_r+0xba>
 801c564:	4b25      	ldr	r3, [pc, #148]	; (801c5fc <__swsetup_r+0xd4>)
 801c566:	429c      	cmp	r4, r3
 801c568:	d101      	bne.n	801c56e <__swsetup_r+0x46>
 801c56a:	68ac      	ldr	r4, [r5, #8]
 801c56c:	e7eb      	b.n	801c546 <__swsetup_r+0x1e>
 801c56e:	4b24      	ldr	r3, [pc, #144]	; (801c600 <__swsetup_r+0xd8>)
 801c570:	429c      	cmp	r4, r3
 801c572:	bf08      	it	eq
 801c574:	68ec      	ldreq	r4, [r5, #12]
 801c576:	e7e6      	b.n	801c546 <__swsetup_r+0x1e>
 801c578:	0758      	lsls	r0, r3, #29
 801c57a:	d512      	bpl.n	801c5a2 <__swsetup_r+0x7a>
 801c57c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c57e:	b141      	cbz	r1, 801c592 <__swsetup_r+0x6a>
 801c580:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c584:	4299      	cmp	r1, r3
 801c586:	d002      	beq.n	801c58e <__swsetup_r+0x66>
 801c588:	4630      	mov	r0, r6
 801c58a:	f7ff fb5b 	bl	801bc44 <_free_r>
 801c58e:	2300      	movs	r3, #0
 801c590:	6363      	str	r3, [r4, #52]	; 0x34
 801c592:	89a3      	ldrh	r3, [r4, #12]
 801c594:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801c598:	81a3      	strh	r3, [r4, #12]
 801c59a:	2300      	movs	r3, #0
 801c59c:	6063      	str	r3, [r4, #4]
 801c59e:	6923      	ldr	r3, [r4, #16]
 801c5a0:	6023      	str	r3, [r4, #0]
 801c5a2:	89a3      	ldrh	r3, [r4, #12]
 801c5a4:	f043 0308 	orr.w	r3, r3, #8
 801c5a8:	81a3      	strh	r3, [r4, #12]
 801c5aa:	6923      	ldr	r3, [r4, #16]
 801c5ac:	b94b      	cbnz	r3, 801c5c2 <__swsetup_r+0x9a>
 801c5ae:	89a3      	ldrh	r3, [r4, #12]
 801c5b0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801c5b4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801c5b8:	d003      	beq.n	801c5c2 <__swsetup_r+0x9a>
 801c5ba:	4621      	mov	r1, r4
 801c5bc:	4630      	mov	r0, r6
 801c5be:	f000 fa63 	bl	801ca88 <__smakebuf_r>
 801c5c2:	89a0      	ldrh	r0, [r4, #12]
 801c5c4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c5c8:	f010 0301 	ands.w	r3, r0, #1
 801c5cc:	d00a      	beq.n	801c5e4 <__swsetup_r+0xbc>
 801c5ce:	2300      	movs	r3, #0
 801c5d0:	60a3      	str	r3, [r4, #8]
 801c5d2:	6963      	ldr	r3, [r4, #20]
 801c5d4:	425b      	negs	r3, r3
 801c5d6:	61a3      	str	r3, [r4, #24]
 801c5d8:	6923      	ldr	r3, [r4, #16]
 801c5da:	b943      	cbnz	r3, 801c5ee <__swsetup_r+0xc6>
 801c5dc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801c5e0:	d1ba      	bne.n	801c558 <__swsetup_r+0x30>
 801c5e2:	bd70      	pop	{r4, r5, r6, pc}
 801c5e4:	0781      	lsls	r1, r0, #30
 801c5e6:	bf58      	it	pl
 801c5e8:	6963      	ldrpl	r3, [r4, #20]
 801c5ea:	60a3      	str	r3, [r4, #8]
 801c5ec:	e7f4      	b.n	801c5d8 <__swsetup_r+0xb0>
 801c5ee:	2000      	movs	r0, #0
 801c5f0:	e7f7      	b.n	801c5e2 <__swsetup_r+0xba>
 801c5f2:	bf00      	nop
 801c5f4:	200000fc 	.word	0x200000fc
 801c5f8:	08020ed4 	.word	0x08020ed4
 801c5fc:	08020ef4 	.word	0x08020ef4
 801c600:	08020eb4 	.word	0x08020eb4

0801c604 <__register_exitproc>:
 801c604:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c608:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801c6c4 <__register_exitproc+0xc0>
 801c60c:	4606      	mov	r6, r0
 801c60e:	f8d8 0000 	ldr.w	r0, [r8]
 801c612:	461f      	mov	r7, r3
 801c614:	460d      	mov	r5, r1
 801c616:	4691      	mov	r9, r2
 801c618:	f000 fa0e 	bl	801ca38 <__retarget_lock_acquire_recursive>
 801c61c:	4b25      	ldr	r3, [pc, #148]	; (801c6b4 <__register_exitproc+0xb0>)
 801c61e:	681c      	ldr	r4, [r3, #0]
 801c620:	b934      	cbnz	r4, 801c630 <__register_exitproc+0x2c>
 801c622:	4c25      	ldr	r4, [pc, #148]	; (801c6b8 <__register_exitproc+0xb4>)
 801c624:	601c      	str	r4, [r3, #0]
 801c626:	4b25      	ldr	r3, [pc, #148]	; (801c6bc <__register_exitproc+0xb8>)
 801c628:	b113      	cbz	r3, 801c630 <__register_exitproc+0x2c>
 801c62a:	681b      	ldr	r3, [r3, #0]
 801c62c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801c630:	6863      	ldr	r3, [r4, #4]
 801c632:	2b1f      	cmp	r3, #31
 801c634:	dd07      	ble.n	801c646 <__register_exitproc+0x42>
 801c636:	f8d8 0000 	ldr.w	r0, [r8]
 801c63a:	f000 f9ff 	bl	801ca3c <__retarget_lock_release_recursive>
 801c63e:	f04f 30ff 	mov.w	r0, #4294967295
 801c642:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c646:	b34e      	cbz	r6, 801c69c <__register_exitproc+0x98>
 801c648:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801c64c:	b988      	cbnz	r0, 801c672 <__register_exitproc+0x6e>
 801c64e:	4b1c      	ldr	r3, [pc, #112]	; (801c6c0 <__register_exitproc+0xbc>)
 801c650:	b923      	cbnz	r3, 801c65c <__register_exitproc+0x58>
 801c652:	f8d8 0000 	ldr.w	r0, [r8]
 801c656:	f000 f9f0 	bl	801ca3a <__retarget_lock_release>
 801c65a:	e7f0      	b.n	801c63e <__register_exitproc+0x3a>
 801c65c:	f44f 7084 	mov.w	r0, #264	; 0x108
 801c660:	f7ff faca 	bl	801bbf8 <malloc>
 801c664:	2800      	cmp	r0, #0
 801c666:	d0f4      	beq.n	801c652 <__register_exitproc+0x4e>
 801c668:	2300      	movs	r3, #0
 801c66a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801c66e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801c672:	6863      	ldr	r3, [r4, #4]
 801c674:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801c678:	2201      	movs	r2, #1
 801c67a:	409a      	lsls	r2, r3
 801c67c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801c680:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801c684:	4313      	orrs	r3, r2
 801c686:	2e02      	cmp	r6, #2
 801c688:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801c68c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801c690:	bf02      	ittt	eq
 801c692:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801c696:	431a      	orreq	r2, r3
 801c698:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 801c69c:	6863      	ldr	r3, [r4, #4]
 801c69e:	f8d8 0000 	ldr.w	r0, [r8]
 801c6a2:	1c5a      	adds	r2, r3, #1
 801c6a4:	3302      	adds	r3, #2
 801c6a6:	6062      	str	r2, [r4, #4]
 801c6a8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801c6ac:	f000 f9c6 	bl	801ca3c <__retarget_lock_release_recursive>
 801c6b0:	2000      	movs	r0, #0
 801c6b2:	e7c6      	b.n	801c642 <__register_exitproc+0x3e>
 801c6b4:	200137a0 	.word	0x200137a0
 801c6b8:	20013714 	.word	0x20013714
 801c6bc:	08020eb0 	.word	0x08020eb0
 801c6c0:	0801bbf9 	.word	0x0801bbf9
 801c6c4:	20000160 	.word	0x20000160

0801c6c8 <__sflush_r>:
 801c6c8:	898a      	ldrh	r2, [r1, #12]
 801c6ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c6ce:	4605      	mov	r5, r0
 801c6d0:	0710      	lsls	r0, r2, #28
 801c6d2:	460c      	mov	r4, r1
 801c6d4:	d458      	bmi.n	801c788 <__sflush_r+0xc0>
 801c6d6:	684b      	ldr	r3, [r1, #4]
 801c6d8:	2b00      	cmp	r3, #0
 801c6da:	dc05      	bgt.n	801c6e8 <__sflush_r+0x20>
 801c6dc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801c6de:	2b00      	cmp	r3, #0
 801c6e0:	dc02      	bgt.n	801c6e8 <__sflush_r+0x20>
 801c6e2:	2000      	movs	r0, #0
 801c6e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c6e8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c6ea:	2e00      	cmp	r6, #0
 801c6ec:	d0f9      	beq.n	801c6e2 <__sflush_r+0x1a>
 801c6ee:	2300      	movs	r3, #0
 801c6f0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801c6f4:	682f      	ldr	r7, [r5, #0]
 801c6f6:	602b      	str	r3, [r5, #0]
 801c6f8:	d032      	beq.n	801c760 <__sflush_r+0x98>
 801c6fa:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801c6fc:	89a3      	ldrh	r3, [r4, #12]
 801c6fe:	075a      	lsls	r2, r3, #29
 801c700:	d505      	bpl.n	801c70e <__sflush_r+0x46>
 801c702:	6863      	ldr	r3, [r4, #4]
 801c704:	1ac0      	subs	r0, r0, r3
 801c706:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801c708:	b10b      	cbz	r3, 801c70e <__sflush_r+0x46>
 801c70a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801c70c:	1ac0      	subs	r0, r0, r3
 801c70e:	2300      	movs	r3, #0
 801c710:	4602      	mov	r2, r0
 801c712:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c714:	6a21      	ldr	r1, [r4, #32]
 801c716:	4628      	mov	r0, r5
 801c718:	47b0      	blx	r6
 801c71a:	1c43      	adds	r3, r0, #1
 801c71c:	89a3      	ldrh	r3, [r4, #12]
 801c71e:	d106      	bne.n	801c72e <__sflush_r+0x66>
 801c720:	6829      	ldr	r1, [r5, #0]
 801c722:	291d      	cmp	r1, #29
 801c724:	d82c      	bhi.n	801c780 <__sflush_r+0xb8>
 801c726:	4a2a      	ldr	r2, [pc, #168]	; (801c7d0 <__sflush_r+0x108>)
 801c728:	40ca      	lsrs	r2, r1
 801c72a:	07d6      	lsls	r6, r2, #31
 801c72c:	d528      	bpl.n	801c780 <__sflush_r+0xb8>
 801c72e:	2200      	movs	r2, #0
 801c730:	6062      	str	r2, [r4, #4]
 801c732:	04d9      	lsls	r1, r3, #19
 801c734:	6922      	ldr	r2, [r4, #16]
 801c736:	6022      	str	r2, [r4, #0]
 801c738:	d504      	bpl.n	801c744 <__sflush_r+0x7c>
 801c73a:	1c42      	adds	r2, r0, #1
 801c73c:	d101      	bne.n	801c742 <__sflush_r+0x7a>
 801c73e:	682b      	ldr	r3, [r5, #0]
 801c740:	b903      	cbnz	r3, 801c744 <__sflush_r+0x7c>
 801c742:	6560      	str	r0, [r4, #84]	; 0x54
 801c744:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c746:	602f      	str	r7, [r5, #0]
 801c748:	2900      	cmp	r1, #0
 801c74a:	d0ca      	beq.n	801c6e2 <__sflush_r+0x1a>
 801c74c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c750:	4299      	cmp	r1, r3
 801c752:	d002      	beq.n	801c75a <__sflush_r+0x92>
 801c754:	4628      	mov	r0, r5
 801c756:	f7ff fa75 	bl	801bc44 <_free_r>
 801c75a:	2000      	movs	r0, #0
 801c75c:	6360      	str	r0, [r4, #52]	; 0x34
 801c75e:	e7c1      	b.n	801c6e4 <__sflush_r+0x1c>
 801c760:	6a21      	ldr	r1, [r4, #32]
 801c762:	2301      	movs	r3, #1
 801c764:	4628      	mov	r0, r5
 801c766:	47b0      	blx	r6
 801c768:	1c41      	adds	r1, r0, #1
 801c76a:	d1c7      	bne.n	801c6fc <__sflush_r+0x34>
 801c76c:	682b      	ldr	r3, [r5, #0]
 801c76e:	2b00      	cmp	r3, #0
 801c770:	d0c4      	beq.n	801c6fc <__sflush_r+0x34>
 801c772:	2b1d      	cmp	r3, #29
 801c774:	d001      	beq.n	801c77a <__sflush_r+0xb2>
 801c776:	2b16      	cmp	r3, #22
 801c778:	d101      	bne.n	801c77e <__sflush_r+0xb6>
 801c77a:	602f      	str	r7, [r5, #0]
 801c77c:	e7b1      	b.n	801c6e2 <__sflush_r+0x1a>
 801c77e:	89a3      	ldrh	r3, [r4, #12]
 801c780:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c784:	81a3      	strh	r3, [r4, #12]
 801c786:	e7ad      	b.n	801c6e4 <__sflush_r+0x1c>
 801c788:	690f      	ldr	r7, [r1, #16]
 801c78a:	2f00      	cmp	r7, #0
 801c78c:	d0a9      	beq.n	801c6e2 <__sflush_r+0x1a>
 801c78e:	0793      	lsls	r3, r2, #30
 801c790:	680e      	ldr	r6, [r1, #0]
 801c792:	bf08      	it	eq
 801c794:	694b      	ldreq	r3, [r1, #20]
 801c796:	600f      	str	r7, [r1, #0]
 801c798:	bf18      	it	ne
 801c79a:	2300      	movne	r3, #0
 801c79c:	eba6 0807 	sub.w	r8, r6, r7
 801c7a0:	608b      	str	r3, [r1, #8]
 801c7a2:	f1b8 0f00 	cmp.w	r8, #0
 801c7a6:	dd9c      	ble.n	801c6e2 <__sflush_r+0x1a>
 801c7a8:	6a21      	ldr	r1, [r4, #32]
 801c7aa:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801c7ac:	4643      	mov	r3, r8
 801c7ae:	463a      	mov	r2, r7
 801c7b0:	4628      	mov	r0, r5
 801c7b2:	47b0      	blx	r6
 801c7b4:	2800      	cmp	r0, #0
 801c7b6:	dc06      	bgt.n	801c7c6 <__sflush_r+0xfe>
 801c7b8:	89a3      	ldrh	r3, [r4, #12]
 801c7ba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c7be:	81a3      	strh	r3, [r4, #12]
 801c7c0:	f04f 30ff 	mov.w	r0, #4294967295
 801c7c4:	e78e      	b.n	801c6e4 <__sflush_r+0x1c>
 801c7c6:	4407      	add	r7, r0
 801c7c8:	eba8 0800 	sub.w	r8, r8, r0
 801c7cc:	e7e9      	b.n	801c7a2 <__sflush_r+0xda>
 801c7ce:	bf00      	nop
 801c7d0:	20400001 	.word	0x20400001

0801c7d4 <_fflush_r>:
 801c7d4:	b538      	push	{r3, r4, r5, lr}
 801c7d6:	690b      	ldr	r3, [r1, #16]
 801c7d8:	4605      	mov	r5, r0
 801c7da:	460c      	mov	r4, r1
 801c7dc:	b913      	cbnz	r3, 801c7e4 <_fflush_r+0x10>
 801c7de:	2500      	movs	r5, #0
 801c7e0:	4628      	mov	r0, r5
 801c7e2:	bd38      	pop	{r3, r4, r5, pc}
 801c7e4:	b118      	cbz	r0, 801c7ee <_fflush_r+0x1a>
 801c7e6:	6983      	ldr	r3, [r0, #24]
 801c7e8:	b90b      	cbnz	r3, 801c7ee <_fflush_r+0x1a>
 801c7ea:	f000 f887 	bl	801c8fc <__sinit>
 801c7ee:	4b14      	ldr	r3, [pc, #80]	; (801c840 <_fflush_r+0x6c>)
 801c7f0:	429c      	cmp	r4, r3
 801c7f2:	d11b      	bne.n	801c82c <_fflush_r+0x58>
 801c7f4:	686c      	ldr	r4, [r5, #4]
 801c7f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c7fa:	2b00      	cmp	r3, #0
 801c7fc:	d0ef      	beq.n	801c7de <_fflush_r+0xa>
 801c7fe:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801c800:	07d0      	lsls	r0, r2, #31
 801c802:	d404      	bmi.n	801c80e <_fflush_r+0x3a>
 801c804:	0599      	lsls	r1, r3, #22
 801c806:	d402      	bmi.n	801c80e <_fflush_r+0x3a>
 801c808:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c80a:	f000 f915 	bl	801ca38 <__retarget_lock_acquire_recursive>
 801c80e:	4628      	mov	r0, r5
 801c810:	4621      	mov	r1, r4
 801c812:	f7ff ff59 	bl	801c6c8 <__sflush_r>
 801c816:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801c818:	07da      	lsls	r2, r3, #31
 801c81a:	4605      	mov	r5, r0
 801c81c:	d4e0      	bmi.n	801c7e0 <_fflush_r+0xc>
 801c81e:	89a3      	ldrh	r3, [r4, #12]
 801c820:	059b      	lsls	r3, r3, #22
 801c822:	d4dd      	bmi.n	801c7e0 <_fflush_r+0xc>
 801c824:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c826:	f000 f909 	bl	801ca3c <__retarget_lock_release_recursive>
 801c82a:	e7d9      	b.n	801c7e0 <_fflush_r+0xc>
 801c82c:	4b05      	ldr	r3, [pc, #20]	; (801c844 <_fflush_r+0x70>)
 801c82e:	429c      	cmp	r4, r3
 801c830:	d101      	bne.n	801c836 <_fflush_r+0x62>
 801c832:	68ac      	ldr	r4, [r5, #8]
 801c834:	e7df      	b.n	801c7f6 <_fflush_r+0x22>
 801c836:	4b04      	ldr	r3, [pc, #16]	; (801c848 <_fflush_r+0x74>)
 801c838:	429c      	cmp	r4, r3
 801c83a:	bf08      	it	eq
 801c83c:	68ec      	ldreq	r4, [r5, #12]
 801c83e:	e7da      	b.n	801c7f6 <_fflush_r+0x22>
 801c840:	08020ed4 	.word	0x08020ed4
 801c844:	08020ef4 	.word	0x08020ef4
 801c848:	08020eb4 	.word	0x08020eb4

0801c84c <std>:
 801c84c:	2300      	movs	r3, #0
 801c84e:	b510      	push	{r4, lr}
 801c850:	4604      	mov	r4, r0
 801c852:	e9c0 3300 	strd	r3, r3, [r0]
 801c856:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801c85a:	6083      	str	r3, [r0, #8]
 801c85c:	8181      	strh	r1, [r0, #12]
 801c85e:	6643      	str	r3, [r0, #100]	; 0x64
 801c860:	81c2      	strh	r2, [r0, #14]
 801c862:	6183      	str	r3, [r0, #24]
 801c864:	4619      	mov	r1, r3
 801c866:	2208      	movs	r2, #8
 801c868:	305c      	adds	r0, #92	; 0x5c
 801c86a:	f7ff f9e3 	bl	801bc34 <memset>
 801c86e:	4b05      	ldr	r3, [pc, #20]	; (801c884 <std+0x38>)
 801c870:	6263      	str	r3, [r4, #36]	; 0x24
 801c872:	4b05      	ldr	r3, [pc, #20]	; (801c888 <std+0x3c>)
 801c874:	62a3      	str	r3, [r4, #40]	; 0x28
 801c876:	4b05      	ldr	r3, [pc, #20]	; (801c88c <std+0x40>)
 801c878:	62e3      	str	r3, [r4, #44]	; 0x2c
 801c87a:	4b05      	ldr	r3, [pc, #20]	; (801c890 <std+0x44>)
 801c87c:	6224      	str	r4, [r4, #32]
 801c87e:	6323      	str	r3, [r4, #48]	; 0x30
 801c880:	bd10      	pop	{r4, pc}
 801c882:	bf00      	nop
 801c884:	0801ce59 	.word	0x0801ce59
 801c888:	0801ce7b 	.word	0x0801ce7b
 801c88c:	0801ceb3 	.word	0x0801ceb3
 801c890:	0801ced7 	.word	0x0801ced7

0801c894 <_cleanup_r>:
 801c894:	4901      	ldr	r1, [pc, #4]	; (801c89c <_cleanup_r+0x8>)
 801c896:	f000 b8af 	b.w	801c9f8 <_fwalk_reent>
 801c89a:	bf00      	nop
 801c89c:	0801c7d5 	.word	0x0801c7d5

0801c8a0 <__sfmoreglue>:
 801c8a0:	b570      	push	{r4, r5, r6, lr}
 801c8a2:	1e4a      	subs	r2, r1, #1
 801c8a4:	2568      	movs	r5, #104	; 0x68
 801c8a6:	4355      	muls	r5, r2
 801c8a8:	460e      	mov	r6, r1
 801c8aa:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801c8ae:	f7ff fa19 	bl	801bce4 <_malloc_r>
 801c8b2:	4604      	mov	r4, r0
 801c8b4:	b140      	cbz	r0, 801c8c8 <__sfmoreglue+0x28>
 801c8b6:	2100      	movs	r1, #0
 801c8b8:	e9c0 1600 	strd	r1, r6, [r0]
 801c8bc:	300c      	adds	r0, #12
 801c8be:	60a0      	str	r0, [r4, #8]
 801c8c0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801c8c4:	f7ff f9b6 	bl	801bc34 <memset>
 801c8c8:	4620      	mov	r0, r4
 801c8ca:	bd70      	pop	{r4, r5, r6, pc}

0801c8cc <__sfp_lock_acquire>:
 801c8cc:	4801      	ldr	r0, [pc, #4]	; (801c8d4 <__sfp_lock_acquire+0x8>)
 801c8ce:	f000 b8b3 	b.w	801ca38 <__retarget_lock_acquire_recursive>
 801c8d2:	bf00      	nop
 801c8d4:	20013a80 	.word	0x20013a80

0801c8d8 <__sfp_lock_release>:
 801c8d8:	4801      	ldr	r0, [pc, #4]	; (801c8e0 <__sfp_lock_release+0x8>)
 801c8da:	f000 b8af 	b.w	801ca3c <__retarget_lock_release_recursive>
 801c8de:	bf00      	nop
 801c8e0:	20013a80 	.word	0x20013a80

0801c8e4 <__sinit_lock_acquire>:
 801c8e4:	4801      	ldr	r0, [pc, #4]	; (801c8ec <__sinit_lock_acquire+0x8>)
 801c8e6:	f000 b8a7 	b.w	801ca38 <__retarget_lock_acquire_recursive>
 801c8ea:	bf00      	nop
 801c8ec:	20013a7b 	.word	0x20013a7b

0801c8f0 <__sinit_lock_release>:
 801c8f0:	4801      	ldr	r0, [pc, #4]	; (801c8f8 <__sinit_lock_release+0x8>)
 801c8f2:	f000 b8a3 	b.w	801ca3c <__retarget_lock_release_recursive>
 801c8f6:	bf00      	nop
 801c8f8:	20013a7b 	.word	0x20013a7b

0801c8fc <__sinit>:
 801c8fc:	b510      	push	{r4, lr}
 801c8fe:	4604      	mov	r4, r0
 801c900:	f7ff fff0 	bl	801c8e4 <__sinit_lock_acquire>
 801c904:	69a3      	ldr	r3, [r4, #24]
 801c906:	b11b      	cbz	r3, 801c910 <__sinit+0x14>
 801c908:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c90c:	f7ff bff0 	b.w	801c8f0 <__sinit_lock_release>
 801c910:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801c914:	6523      	str	r3, [r4, #80]	; 0x50
 801c916:	4b13      	ldr	r3, [pc, #76]	; (801c964 <__sinit+0x68>)
 801c918:	4a13      	ldr	r2, [pc, #76]	; (801c968 <__sinit+0x6c>)
 801c91a:	681b      	ldr	r3, [r3, #0]
 801c91c:	62a2      	str	r2, [r4, #40]	; 0x28
 801c91e:	42a3      	cmp	r3, r4
 801c920:	bf04      	itt	eq
 801c922:	2301      	moveq	r3, #1
 801c924:	61a3      	streq	r3, [r4, #24]
 801c926:	4620      	mov	r0, r4
 801c928:	f000 f820 	bl	801c96c <__sfp>
 801c92c:	6060      	str	r0, [r4, #4]
 801c92e:	4620      	mov	r0, r4
 801c930:	f000 f81c 	bl	801c96c <__sfp>
 801c934:	60a0      	str	r0, [r4, #8]
 801c936:	4620      	mov	r0, r4
 801c938:	f000 f818 	bl	801c96c <__sfp>
 801c93c:	2200      	movs	r2, #0
 801c93e:	60e0      	str	r0, [r4, #12]
 801c940:	2104      	movs	r1, #4
 801c942:	6860      	ldr	r0, [r4, #4]
 801c944:	f7ff ff82 	bl	801c84c <std>
 801c948:	68a0      	ldr	r0, [r4, #8]
 801c94a:	2201      	movs	r2, #1
 801c94c:	2109      	movs	r1, #9
 801c94e:	f7ff ff7d 	bl	801c84c <std>
 801c952:	68e0      	ldr	r0, [r4, #12]
 801c954:	2202      	movs	r2, #2
 801c956:	2112      	movs	r1, #18
 801c958:	f7ff ff78 	bl	801c84c <std>
 801c95c:	2301      	movs	r3, #1
 801c95e:	61a3      	str	r3, [r4, #24]
 801c960:	e7d2      	b.n	801c908 <__sinit+0xc>
 801c962:	bf00      	nop
 801c964:	08020e78 	.word	0x08020e78
 801c968:	0801c895 	.word	0x0801c895

0801c96c <__sfp>:
 801c96c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c96e:	4607      	mov	r7, r0
 801c970:	f7ff ffac 	bl	801c8cc <__sfp_lock_acquire>
 801c974:	4b1e      	ldr	r3, [pc, #120]	; (801c9f0 <__sfp+0x84>)
 801c976:	681e      	ldr	r6, [r3, #0]
 801c978:	69b3      	ldr	r3, [r6, #24]
 801c97a:	b913      	cbnz	r3, 801c982 <__sfp+0x16>
 801c97c:	4630      	mov	r0, r6
 801c97e:	f7ff ffbd 	bl	801c8fc <__sinit>
 801c982:	3648      	adds	r6, #72	; 0x48
 801c984:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801c988:	3b01      	subs	r3, #1
 801c98a:	d503      	bpl.n	801c994 <__sfp+0x28>
 801c98c:	6833      	ldr	r3, [r6, #0]
 801c98e:	b30b      	cbz	r3, 801c9d4 <__sfp+0x68>
 801c990:	6836      	ldr	r6, [r6, #0]
 801c992:	e7f7      	b.n	801c984 <__sfp+0x18>
 801c994:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801c998:	b9d5      	cbnz	r5, 801c9d0 <__sfp+0x64>
 801c99a:	4b16      	ldr	r3, [pc, #88]	; (801c9f4 <__sfp+0x88>)
 801c99c:	60e3      	str	r3, [r4, #12]
 801c99e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801c9a2:	6665      	str	r5, [r4, #100]	; 0x64
 801c9a4:	f000 f847 	bl	801ca36 <__retarget_lock_init_recursive>
 801c9a8:	f7ff ff96 	bl	801c8d8 <__sfp_lock_release>
 801c9ac:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801c9b0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801c9b4:	6025      	str	r5, [r4, #0]
 801c9b6:	61a5      	str	r5, [r4, #24]
 801c9b8:	2208      	movs	r2, #8
 801c9ba:	4629      	mov	r1, r5
 801c9bc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801c9c0:	f7ff f938 	bl	801bc34 <memset>
 801c9c4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801c9c8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801c9cc:	4620      	mov	r0, r4
 801c9ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c9d0:	3468      	adds	r4, #104	; 0x68
 801c9d2:	e7d9      	b.n	801c988 <__sfp+0x1c>
 801c9d4:	2104      	movs	r1, #4
 801c9d6:	4638      	mov	r0, r7
 801c9d8:	f7ff ff62 	bl	801c8a0 <__sfmoreglue>
 801c9dc:	4604      	mov	r4, r0
 801c9de:	6030      	str	r0, [r6, #0]
 801c9e0:	2800      	cmp	r0, #0
 801c9e2:	d1d5      	bne.n	801c990 <__sfp+0x24>
 801c9e4:	f7ff ff78 	bl	801c8d8 <__sfp_lock_release>
 801c9e8:	230c      	movs	r3, #12
 801c9ea:	603b      	str	r3, [r7, #0]
 801c9ec:	e7ee      	b.n	801c9cc <__sfp+0x60>
 801c9ee:	bf00      	nop
 801c9f0:	08020e78 	.word	0x08020e78
 801c9f4:	ffff0001 	.word	0xffff0001

0801c9f8 <_fwalk_reent>:
 801c9f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c9fc:	4606      	mov	r6, r0
 801c9fe:	4688      	mov	r8, r1
 801ca00:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801ca04:	2700      	movs	r7, #0
 801ca06:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801ca0a:	f1b9 0901 	subs.w	r9, r9, #1
 801ca0e:	d505      	bpl.n	801ca1c <_fwalk_reent+0x24>
 801ca10:	6824      	ldr	r4, [r4, #0]
 801ca12:	2c00      	cmp	r4, #0
 801ca14:	d1f7      	bne.n	801ca06 <_fwalk_reent+0xe>
 801ca16:	4638      	mov	r0, r7
 801ca18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ca1c:	89ab      	ldrh	r3, [r5, #12]
 801ca1e:	2b01      	cmp	r3, #1
 801ca20:	d907      	bls.n	801ca32 <_fwalk_reent+0x3a>
 801ca22:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801ca26:	3301      	adds	r3, #1
 801ca28:	d003      	beq.n	801ca32 <_fwalk_reent+0x3a>
 801ca2a:	4629      	mov	r1, r5
 801ca2c:	4630      	mov	r0, r6
 801ca2e:	47c0      	blx	r8
 801ca30:	4307      	orrs	r7, r0
 801ca32:	3568      	adds	r5, #104	; 0x68
 801ca34:	e7e9      	b.n	801ca0a <_fwalk_reent+0x12>

0801ca36 <__retarget_lock_init_recursive>:
 801ca36:	4770      	bx	lr

0801ca38 <__retarget_lock_acquire_recursive>:
 801ca38:	4770      	bx	lr

0801ca3a <__retarget_lock_release>:
 801ca3a:	4770      	bx	lr

0801ca3c <__retarget_lock_release_recursive>:
 801ca3c:	4770      	bx	lr

0801ca3e <__swhatbuf_r>:
 801ca3e:	b570      	push	{r4, r5, r6, lr}
 801ca40:	460e      	mov	r6, r1
 801ca42:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ca46:	2900      	cmp	r1, #0
 801ca48:	b096      	sub	sp, #88	; 0x58
 801ca4a:	4614      	mov	r4, r2
 801ca4c:	461d      	mov	r5, r3
 801ca4e:	da07      	bge.n	801ca60 <__swhatbuf_r+0x22>
 801ca50:	2300      	movs	r3, #0
 801ca52:	602b      	str	r3, [r5, #0]
 801ca54:	89b3      	ldrh	r3, [r6, #12]
 801ca56:	061a      	lsls	r2, r3, #24
 801ca58:	d410      	bmi.n	801ca7c <__swhatbuf_r+0x3e>
 801ca5a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801ca5e:	e00e      	b.n	801ca7e <__swhatbuf_r+0x40>
 801ca60:	466a      	mov	r2, sp
 801ca62:	f000 fa5f 	bl	801cf24 <_fstat_r>
 801ca66:	2800      	cmp	r0, #0
 801ca68:	dbf2      	blt.n	801ca50 <__swhatbuf_r+0x12>
 801ca6a:	9a01      	ldr	r2, [sp, #4]
 801ca6c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801ca70:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801ca74:	425a      	negs	r2, r3
 801ca76:	415a      	adcs	r2, r3
 801ca78:	602a      	str	r2, [r5, #0]
 801ca7a:	e7ee      	b.n	801ca5a <__swhatbuf_r+0x1c>
 801ca7c:	2340      	movs	r3, #64	; 0x40
 801ca7e:	2000      	movs	r0, #0
 801ca80:	6023      	str	r3, [r4, #0]
 801ca82:	b016      	add	sp, #88	; 0x58
 801ca84:	bd70      	pop	{r4, r5, r6, pc}
	...

0801ca88 <__smakebuf_r>:
 801ca88:	898b      	ldrh	r3, [r1, #12]
 801ca8a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801ca8c:	079d      	lsls	r5, r3, #30
 801ca8e:	4606      	mov	r6, r0
 801ca90:	460c      	mov	r4, r1
 801ca92:	d507      	bpl.n	801caa4 <__smakebuf_r+0x1c>
 801ca94:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801ca98:	6023      	str	r3, [r4, #0]
 801ca9a:	6123      	str	r3, [r4, #16]
 801ca9c:	2301      	movs	r3, #1
 801ca9e:	6163      	str	r3, [r4, #20]
 801caa0:	b002      	add	sp, #8
 801caa2:	bd70      	pop	{r4, r5, r6, pc}
 801caa4:	ab01      	add	r3, sp, #4
 801caa6:	466a      	mov	r2, sp
 801caa8:	f7ff ffc9 	bl	801ca3e <__swhatbuf_r>
 801caac:	9900      	ldr	r1, [sp, #0]
 801caae:	4605      	mov	r5, r0
 801cab0:	4630      	mov	r0, r6
 801cab2:	f7ff f917 	bl	801bce4 <_malloc_r>
 801cab6:	b948      	cbnz	r0, 801cacc <__smakebuf_r+0x44>
 801cab8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801cabc:	059a      	lsls	r2, r3, #22
 801cabe:	d4ef      	bmi.n	801caa0 <__smakebuf_r+0x18>
 801cac0:	f023 0303 	bic.w	r3, r3, #3
 801cac4:	f043 0302 	orr.w	r3, r3, #2
 801cac8:	81a3      	strh	r3, [r4, #12]
 801caca:	e7e3      	b.n	801ca94 <__smakebuf_r+0xc>
 801cacc:	4b0d      	ldr	r3, [pc, #52]	; (801cb04 <__smakebuf_r+0x7c>)
 801cace:	62b3      	str	r3, [r6, #40]	; 0x28
 801cad0:	89a3      	ldrh	r3, [r4, #12]
 801cad2:	6020      	str	r0, [r4, #0]
 801cad4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801cad8:	81a3      	strh	r3, [r4, #12]
 801cada:	9b00      	ldr	r3, [sp, #0]
 801cadc:	6163      	str	r3, [r4, #20]
 801cade:	9b01      	ldr	r3, [sp, #4]
 801cae0:	6120      	str	r0, [r4, #16]
 801cae2:	b15b      	cbz	r3, 801cafc <__smakebuf_r+0x74>
 801cae4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801cae8:	4630      	mov	r0, r6
 801caea:	f000 fa2d 	bl	801cf48 <_isatty_r>
 801caee:	b128      	cbz	r0, 801cafc <__smakebuf_r+0x74>
 801caf0:	89a3      	ldrh	r3, [r4, #12]
 801caf2:	f023 0303 	bic.w	r3, r3, #3
 801caf6:	f043 0301 	orr.w	r3, r3, #1
 801cafa:	81a3      	strh	r3, [r4, #12]
 801cafc:	89a0      	ldrh	r0, [r4, #12]
 801cafe:	4305      	orrs	r5, r0
 801cb00:	81a5      	strh	r5, [r4, #12]
 801cb02:	e7cd      	b.n	801caa0 <__smakebuf_r+0x18>
 801cb04:	0801c895 	.word	0x0801c895

0801cb08 <memmove>:
 801cb08:	4288      	cmp	r0, r1
 801cb0a:	b510      	push	{r4, lr}
 801cb0c:	eb01 0402 	add.w	r4, r1, r2
 801cb10:	d902      	bls.n	801cb18 <memmove+0x10>
 801cb12:	4284      	cmp	r4, r0
 801cb14:	4623      	mov	r3, r4
 801cb16:	d807      	bhi.n	801cb28 <memmove+0x20>
 801cb18:	1e43      	subs	r3, r0, #1
 801cb1a:	42a1      	cmp	r1, r4
 801cb1c:	d008      	beq.n	801cb30 <memmove+0x28>
 801cb1e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801cb22:	f803 2f01 	strb.w	r2, [r3, #1]!
 801cb26:	e7f8      	b.n	801cb1a <memmove+0x12>
 801cb28:	4402      	add	r2, r0
 801cb2a:	4601      	mov	r1, r0
 801cb2c:	428a      	cmp	r2, r1
 801cb2e:	d100      	bne.n	801cb32 <memmove+0x2a>
 801cb30:	bd10      	pop	{r4, pc}
 801cb32:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801cb36:	f802 4d01 	strb.w	r4, [r2, #-1]!
 801cb3a:	e7f7      	b.n	801cb2c <memmove+0x24>

0801cb3c <__malloc_lock>:
 801cb3c:	4801      	ldr	r0, [pc, #4]	; (801cb44 <__malloc_lock+0x8>)
 801cb3e:	f7ff bf7b 	b.w	801ca38 <__retarget_lock_acquire_recursive>
 801cb42:	bf00      	nop
 801cb44:	20013a7c 	.word	0x20013a7c

0801cb48 <__malloc_unlock>:
 801cb48:	4801      	ldr	r0, [pc, #4]	; (801cb50 <__malloc_unlock+0x8>)
 801cb4a:	f7ff bf77 	b.w	801ca3c <__retarget_lock_release_recursive>
 801cb4e:	bf00      	nop
 801cb50:	20013a7c 	.word	0x20013a7c

0801cb54 <_realloc_r>:
 801cb54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cb56:	4607      	mov	r7, r0
 801cb58:	4614      	mov	r4, r2
 801cb5a:	460e      	mov	r6, r1
 801cb5c:	b921      	cbnz	r1, 801cb68 <_realloc_r+0x14>
 801cb5e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801cb62:	4611      	mov	r1, r2
 801cb64:	f7ff b8be 	b.w	801bce4 <_malloc_r>
 801cb68:	b922      	cbnz	r2, 801cb74 <_realloc_r+0x20>
 801cb6a:	f7ff f86b 	bl	801bc44 <_free_r>
 801cb6e:	4625      	mov	r5, r4
 801cb70:	4628      	mov	r0, r5
 801cb72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801cb74:	f000 fa0a 	bl	801cf8c <_malloc_usable_size_r>
 801cb78:	42a0      	cmp	r0, r4
 801cb7a:	d20f      	bcs.n	801cb9c <_realloc_r+0x48>
 801cb7c:	4621      	mov	r1, r4
 801cb7e:	4638      	mov	r0, r7
 801cb80:	f7ff f8b0 	bl	801bce4 <_malloc_r>
 801cb84:	4605      	mov	r5, r0
 801cb86:	2800      	cmp	r0, #0
 801cb88:	d0f2      	beq.n	801cb70 <_realloc_r+0x1c>
 801cb8a:	4631      	mov	r1, r6
 801cb8c:	4622      	mov	r2, r4
 801cb8e:	f7ff f843 	bl	801bc18 <memcpy>
 801cb92:	4631      	mov	r1, r6
 801cb94:	4638      	mov	r0, r7
 801cb96:	f7ff f855 	bl	801bc44 <_free_r>
 801cb9a:	e7e9      	b.n	801cb70 <_realloc_r+0x1c>
 801cb9c:	4635      	mov	r5, r6
 801cb9e:	e7e7      	b.n	801cb70 <_realloc_r+0x1c>

0801cba0 <__ssputs_r>:
 801cba0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cba4:	688e      	ldr	r6, [r1, #8]
 801cba6:	429e      	cmp	r6, r3
 801cba8:	4682      	mov	sl, r0
 801cbaa:	460c      	mov	r4, r1
 801cbac:	4690      	mov	r8, r2
 801cbae:	461f      	mov	r7, r3
 801cbb0:	d838      	bhi.n	801cc24 <__ssputs_r+0x84>
 801cbb2:	898a      	ldrh	r2, [r1, #12]
 801cbb4:	f412 6f90 	tst.w	r2, #1152	; 0x480
 801cbb8:	d032      	beq.n	801cc20 <__ssputs_r+0x80>
 801cbba:	6825      	ldr	r5, [r4, #0]
 801cbbc:	6909      	ldr	r1, [r1, #16]
 801cbbe:	eba5 0901 	sub.w	r9, r5, r1
 801cbc2:	6965      	ldr	r5, [r4, #20]
 801cbc4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801cbc8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 801cbcc:	3301      	adds	r3, #1
 801cbce:	444b      	add	r3, r9
 801cbd0:	106d      	asrs	r5, r5, #1
 801cbd2:	429d      	cmp	r5, r3
 801cbd4:	bf38      	it	cc
 801cbd6:	461d      	movcc	r5, r3
 801cbd8:	0553      	lsls	r3, r2, #21
 801cbda:	d531      	bpl.n	801cc40 <__ssputs_r+0xa0>
 801cbdc:	4629      	mov	r1, r5
 801cbde:	f7ff f881 	bl	801bce4 <_malloc_r>
 801cbe2:	4606      	mov	r6, r0
 801cbe4:	b950      	cbnz	r0, 801cbfc <__ssputs_r+0x5c>
 801cbe6:	230c      	movs	r3, #12
 801cbe8:	f8ca 3000 	str.w	r3, [sl]
 801cbec:	89a3      	ldrh	r3, [r4, #12]
 801cbee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801cbf2:	81a3      	strh	r3, [r4, #12]
 801cbf4:	f04f 30ff 	mov.w	r0, #4294967295
 801cbf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cbfc:	6921      	ldr	r1, [r4, #16]
 801cbfe:	464a      	mov	r2, r9
 801cc00:	f7ff f80a 	bl	801bc18 <memcpy>
 801cc04:	89a3      	ldrh	r3, [r4, #12]
 801cc06:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 801cc0a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801cc0e:	81a3      	strh	r3, [r4, #12]
 801cc10:	6126      	str	r6, [r4, #16]
 801cc12:	6165      	str	r5, [r4, #20]
 801cc14:	444e      	add	r6, r9
 801cc16:	eba5 0509 	sub.w	r5, r5, r9
 801cc1a:	6026      	str	r6, [r4, #0]
 801cc1c:	60a5      	str	r5, [r4, #8]
 801cc1e:	463e      	mov	r6, r7
 801cc20:	42be      	cmp	r6, r7
 801cc22:	d900      	bls.n	801cc26 <__ssputs_r+0x86>
 801cc24:	463e      	mov	r6, r7
 801cc26:	4632      	mov	r2, r6
 801cc28:	6820      	ldr	r0, [r4, #0]
 801cc2a:	4641      	mov	r1, r8
 801cc2c:	f7ff ff6c 	bl	801cb08 <memmove>
 801cc30:	68a3      	ldr	r3, [r4, #8]
 801cc32:	6822      	ldr	r2, [r4, #0]
 801cc34:	1b9b      	subs	r3, r3, r6
 801cc36:	4432      	add	r2, r6
 801cc38:	60a3      	str	r3, [r4, #8]
 801cc3a:	6022      	str	r2, [r4, #0]
 801cc3c:	2000      	movs	r0, #0
 801cc3e:	e7db      	b.n	801cbf8 <__ssputs_r+0x58>
 801cc40:	462a      	mov	r2, r5
 801cc42:	f7ff ff87 	bl	801cb54 <_realloc_r>
 801cc46:	4606      	mov	r6, r0
 801cc48:	2800      	cmp	r0, #0
 801cc4a:	d1e1      	bne.n	801cc10 <__ssputs_r+0x70>
 801cc4c:	6921      	ldr	r1, [r4, #16]
 801cc4e:	4650      	mov	r0, sl
 801cc50:	f7fe fff8 	bl	801bc44 <_free_r>
 801cc54:	e7c7      	b.n	801cbe6 <__ssputs_r+0x46>
	...

0801cc58 <_svfiprintf_r>:
 801cc58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc5c:	4698      	mov	r8, r3
 801cc5e:	898b      	ldrh	r3, [r1, #12]
 801cc60:	061b      	lsls	r3, r3, #24
 801cc62:	b09d      	sub	sp, #116	; 0x74
 801cc64:	4607      	mov	r7, r0
 801cc66:	460d      	mov	r5, r1
 801cc68:	4614      	mov	r4, r2
 801cc6a:	d50e      	bpl.n	801cc8a <_svfiprintf_r+0x32>
 801cc6c:	690b      	ldr	r3, [r1, #16]
 801cc6e:	b963      	cbnz	r3, 801cc8a <_svfiprintf_r+0x32>
 801cc70:	2140      	movs	r1, #64	; 0x40
 801cc72:	f7ff f837 	bl	801bce4 <_malloc_r>
 801cc76:	6028      	str	r0, [r5, #0]
 801cc78:	6128      	str	r0, [r5, #16]
 801cc7a:	b920      	cbnz	r0, 801cc86 <_svfiprintf_r+0x2e>
 801cc7c:	230c      	movs	r3, #12
 801cc7e:	603b      	str	r3, [r7, #0]
 801cc80:	f04f 30ff 	mov.w	r0, #4294967295
 801cc84:	e0d1      	b.n	801ce2a <_svfiprintf_r+0x1d2>
 801cc86:	2340      	movs	r3, #64	; 0x40
 801cc88:	616b      	str	r3, [r5, #20]
 801cc8a:	2300      	movs	r3, #0
 801cc8c:	9309      	str	r3, [sp, #36]	; 0x24
 801cc8e:	2320      	movs	r3, #32
 801cc90:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801cc94:	f8cd 800c 	str.w	r8, [sp, #12]
 801cc98:	2330      	movs	r3, #48	; 0x30
 801cc9a:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 801ce44 <_svfiprintf_r+0x1ec>
 801cc9e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801cca2:	f04f 0901 	mov.w	r9, #1
 801cca6:	4623      	mov	r3, r4
 801cca8:	469a      	mov	sl, r3
 801ccaa:	f813 2b01 	ldrb.w	r2, [r3], #1
 801ccae:	b10a      	cbz	r2, 801ccb4 <_svfiprintf_r+0x5c>
 801ccb0:	2a25      	cmp	r2, #37	; 0x25
 801ccb2:	d1f9      	bne.n	801cca8 <_svfiprintf_r+0x50>
 801ccb4:	ebba 0b04 	subs.w	fp, sl, r4
 801ccb8:	d00b      	beq.n	801ccd2 <_svfiprintf_r+0x7a>
 801ccba:	465b      	mov	r3, fp
 801ccbc:	4622      	mov	r2, r4
 801ccbe:	4629      	mov	r1, r5
 801ccc0:	4638      	mov	r0, r7
 801ccc2:	f7ff ff6d 	bl	801cba0 <__ssputs_r>
 801ccc6:	3001      	adds	r0, #1
 801ccc8:	f000 80aa 	beq.w	801ce20 <_svfiprintf_r+0x1c8>
 801cccc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ccce:	445a      	add	r2, fp
 801ccd0:	9209      	str	r2, [sp, #36]	; 0x24
 801ccd2:	f89a 3000 	ldrb.w	r3, [sl]
 801ccd6:	2b00      	cmp	r3, #0
 801ccd8:	f000 80a2 	beq.w	801ce20 <_svfiprintf_r+0x1c8>
 801ccdc:	2300      	movs	r3, #0
 801ccde:	f04f 32ff 	mov.w	r2, #4294967295
 801cce2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801cce6:	f10a 0a01 	add.w	sl, sl, #1
 801ccea:	9304      	str	r3, [sp, #16]
 801ccec:	9307      	str	r3, [sp, #28]
 801ccee:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801ccf2:	931a      	str	r3, [sp, #104]	; 0x68
 801ccf4:	4654      	mov	r4, sl
 801ccf6:	2205      	movs	r2, #5
 801ccf8:	f814 1b01 	ldrb.w	r1, [r4], #1
 801ccfc:	4851      	ldr	r0, [pc, #324]	; (801ce44 <_svfiprintf_r+0x1ec>)
 801ccfe:	f7e3 fa7f 	bl	8000200 <memchr>
 801cd02:	9a04      	ldr	r2, [sp, #16]
 801cd04:	b9d8      	cbnz	r0, 801cd3e <_svfiprintf_r+0xe6>
 801cd06:	06d0      	lsls	r0, r2, #27
 801cd08:	bf44      	itt	mi
 801cd0a:	2320      	movmi	r3, #32
 801cd0c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801cd10:	0711      	lsls	r1, r2, #28
 801cd12:	bf44      	itt	mi
 801cd14:	232b      	movmi	r3, #43	; 0x2b
 801cd16:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801cd1a:	f89a 3000 	ldrb.w	r3, [sl]
 801cd1e:	2b2a      	cmp	r3, #42	; 0x2a
 801cd20:	d015      	beq.n	801cd4e <_svfiprintf_r+0xf6>
 801cd22:	9a07      	ldr	r2, [sp, #28]
 801cd24:	4654      	mov	r4, sl
 801cd26:	2000      	movs	r0, #0
 801cd28:	f04f 0c0a 	mov.w	ip, #10
 801cd2c:	4621      	mov	r1, r4
 801cd2e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801cd32:	3b30      	subs	r3, #48	; 0x30
 801cd34:	2b09      	cmp	r3, #9
 801cd36:	d94e      	bls.n	801cdd6 <_svfiprintf_r+0x17e>
 801cd38:	b1b0      	cbz	r0, 801cd68 <_svfiprintf_r+0x110>
 801cd3a:	9207      	str	r2, [sp, #28]
 801cd3c:	e014      	b.n	801cd68 <_svfiprintf_r+0x110>
 801cd3e:	eba0 0308 	sub.w	r3, r0, r8
 801cd42:	fa09 f303 	lsl.w	r3, r9, r3
 801cd46:	4313      	orrs	r3, r2
 801cd48:	9304      	str	r3, [sp, #16]
 801cd4a:	46a2      	mov	sl, r4
 801cd4c:	e7d2      	b.n	801ccf4 <_svfiprintf_r+0x9c>
 801cd4e:	9b03      	ldr	r3, [sp, #12]
 801cd50:	1d19      	adds	r1, r3, #4
 801cd52:	681b      	ldr	r3, [r3, #0]
 801cd54:	9103      	str	r1, [sp, #12]
 801cd56:	2b00      	cmp	r3, #0
 801cd58:	bfbb      	ittet	lt
 801cd5a:	425b      	neglt	r3, r3
 801cd5c:	f042 0202 	orrlt.w	r2, r2, #2
 801cd60:	9307      	strge	r3, [sp, #28]
 801cd62:	9307      	strlt	r3, [sp, #28]
 801cd64:	bfb8      	it	lt
 801cd66:	9204      	strlt	r2, [sp, #16]
 801cd68:	7823      	ldrb	r3, [r4, #0]
 801cd6a:	2b2e      	cmp	r3, #46	; 0x2e
 801cd6c:	d10c      	bne.n	801cd88 <_svfiprintf_r+0x130>
 801cd6e:	7863      	ldrb	r3, [r4, #1]
 801cd70:	2b2a      	cmp	r3, #42	; 0x2a
 801cd72:	d135      	bne.n	801cde0 <_svfiprintf_r+0x188>
 801cd74:	9b03      	ldr	r3, [sp, #12]
 801cd76:	1d1a      	adds	r2, r3, #4
 801cd78:	681b      	ldr	r3, [r3, #0]
 801cd7a:	9203      	str	r2, [sp, #12]
 801cd7c:	2b00      	cmp	r3, #0
 801cd7e:	bfb8      	it	lt
 801cd80:	f04f 33ff 	movlt.w	r3, #4294967295
 801cd84:	3402      	adds	r4, #2
 801cd86:	9305      	str	r3, [sp, #20]
 801cd88:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 801ce54 <_svfiprintf_r+0x1fc>
 801cd8c:	7821      	ldrb	r1, [r4, #0]
 801cd8e:	2203      	movs	r2, #3
 801cd90:	4650      	mov	r0, sl
 801cd92:	f7e3 fa35 	bl	8000200 <memchr>
 801cd96:	b140      	cbz	r0, 801cdaa <_svfiprintf_r+0x152>
 801cd98:	2340      	movs	r3, #64	; 0x40
 801cd9a:	eba0 000a 	sub.w	r0, r0, sl
 801cd9e:	fa03 f000 	lsl.w	r0, r3, r0
 801cda2:	9b04      	ldr	r3, [sp, #16]
 801cda4:	4303      	orrs	r3, r0
 801cda6:	3401      	adds	r4, #1
 801cda8:	9304      	str	r3, [sp, #16]
 801cdaa:	f814 1b01 	ldrb.w	r1, [r4], #1
 801cdae:	4826      	ldr	r0, [pc, #152]	; (801ce48 <_svfiprintf_r+0x1f0>)
 801cdb0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801cdb4:	2206      	movs	r2, #6
 801cdb6:	f7e3 fa23 	bl	8000200 <memchr>
 801cdba:	2800      	cmp	r0, #0
 801cdbc:	d038      	beq.n	801ce30 <_svfiprintf_r+0x1d8>
 801cdbe:	4b23      	ldr	r3, [pc, #140]	; (801ce4c <_svfiprintf_r+0x1f4>)
 801cdc0:	bb1b      	cbnz	r3, 801ce0a <_svfiprintf_r+0x1b2>
 801cdc2:	9b03      	ldr	r3, [sp, #12]
 801cdc4:	3307      	adds	r3, #7
 801cdc6:	f023 0307 	bic.w	r3, r3, #7
 801cdca:	3308      	adds	r3, #8
 801cdcc:	9303      	str	r3, [sp, #12]
 801cdce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cdd0:	4433      	add	r3, r6
 801cdd2:	9309      	str	r3, [sp, #36]	; 0x24
 801cdd4:	e767      	b.n	801cca6 <_svfiprintf_r+0x4e>
 801cdd6:	fb0c 3202 	mla	r2, ip, r2, r3
 801cdda:	460c      	mov	r4, r1
 801cddc:	2001      	movs	r0, #1
 801cdde:	e7a5      	b.n	801cd2c <_svfiprintf_r+0xd4>
 801cde0:	2300      	movs	r3, #0
 801cde2:	3401      	adds	r4, #1
 801cde4:	9305      	str	r3, [sp, #20]
 801cde6:	4619      	mov	r1, r3
 801cde8:	f04f 0c0a 	mov.w	ip, #10
 801cdec:	4620      	mov	r0, r4
 801cdee:	f810 2b01 	ldrb.w	r2, [r0], #1
 801cdf2:	3a30      	subs	r2, #48	; 0x30
 801cdf4:	2a09      	cmp	r2, #9
 801cdf6:	d903      	bls.n	801ce00 <_svfiprintf_r+0x1a8>
 801cdf8:	2b00      	cmp	r3, #0
 801cdfa:	d0c5      	beq.n	801cd88 <_svfiprintf_r+0x130>
 801cdfc:	9105      	str	r1, [sp, #20]
 801cdfe:	e7c3      	b.n	801cd88 <_svfiprintf_r+0x130>
 801ce00:	fb0c 2101 	mla	r1, ip, r1, r2
 801ce04:	4604      	mov	r4, r0
 801ce06:	2301      	movs	r3, #1
 801ce08:	e7f0      	b.n	801cdec <_svfiprintf_r+0x194>
 801ce0a:	ab03      	add	r3, sp, #12
 801ce0c:	9300      	str	r3, [sp, #0]
 801ce0e:	462a      	mov	r2, r5
 801ce10:	4b0f      	ldr	r3, [pc, #60]	; (801ce50 <_svfiprintf_r+0x1f8>)
 801ce12:	a904      	add	r1, sp, #16
 801ce14:	4638      	mov	r0, r7
 801ce16:	f3af 8000 	nop.w
 801ce1a:	1c42      	adds	r2, r0, #1
 801ce1c:	4606      	mov	r6, r0
 801ce1e:	d1d6      	bne.n	801cdce <_svfiprintf_r+0x176>
 801ce20:	89ab      	ldrh	r3, [r5, #12]
 801ce22:	065b      	lsls	r3, r3, #25
 801ce24:	f53f af2c 	bmi.w	801cc80 <_svfiprintf_r+0x28>
 801ce28:	9809      	ldr	r0, [sp, #36]	; 0x24
 801ce2a:	b01d      	add	sp, #116	; 0x74
 801ce2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce30:	ab03      	add	r3, sp, #12
 801ce32:	9300      	str	r3, [sp, #0]
 801ce34:	462a      	mov	r2, r5
 801ce36:	4b06      	ldr	r3, [pc, #24]	; (801ce50 <_svfiprintf_r+0x1f8>)
 801ce38:	a904      	add	r1, sp, #16
 801ce3a:	4638      	mov	r0, r7
 801ce3c:	f7ff f974 	bl	801c128 <_printf_i>
 801ce40:	e7eb      	b.n	801ce1a <_svfiprintf_r+0x1c2>
 801ce42:	bf00      	nop
 801ce44:	08020e7c 	.word	0x08020e7c
 801ce48:	08020e86 	.word	0x08020e86
 801ce4c:	00000000 	.word	0x00000000
 801ce50:	0801cba1 	.word	0x0801cba1
 801ce54:	08020e82 	.word	0x08020e82

0801ce58 <__sread>:
 801ce58:	b510      	push	{r4, lr}
 801ce5a:	460c      	mov	r4, r1
 801ce5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ce60:	f000 f89c 	bl	801cf9c <_read_r>
 801ce64:	2800      	cmp	r0, #0
 801ce66:	bfab      	itete	ge
 801ce68:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801ce6a:	89a3      	ldrhlt	r3, [r4, #12]
 801ce6c:	181b      	addge	r3, r3, r0
 801ce6e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801ce72:	bfac      	ite	ge
 801ce74:	6563      	strge	r3, [r4, #84]	; 0x54
 801ce76:	81a3      	strhlt	r3, [r4, #12]
 801ce78:	bd10      	pop	{r4, pc}

0801ce7a <__swrite>:
 801ce7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ce7e:	461f      	mov	r7, r3
 801ce80:	898b      	ldrh	r3, [r1, #12]
 801ce82:	05db      	lsls	r3, r3, #23
 801ce84:	4605      	mov	r5, r0
 801ce86:	460c      	mov	r4, r1
 801ce88:	4616      	mov	r6, r2
 801ce8a:	d505      	bpl.n	801ce98 <__swrite+0x1e>
 801ce8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ce90:	2302      	movs	r3, #2
 801ce92:	2200      	movs	r2, #0
 801ce94:	f000 f868 	bl	801cf68 <_lseek_r>
 801ce98:	89a3      	ldrh	r3, [r4, #12]
 801ce9a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801ce9e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801cea2:	81a3      	strh	r3, [r4, #12]
 801cea4:	4632      	mov	r2, r6
 801cea6:	463b      	mov	r3, r7
 801cea8:	4628      	mov	r0, r5
 801ceaa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ceae:	f000 b817 	b.w	801cee0 <_write_r>

0801ceb2 <__sseek>:
 801ceb2:	b510      	push	{r4, lr}
 801ceb4:	460c      	mov	r4, r1
 801ceb6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ceba:	f000 f855 	bl	801cf68 <_lseek_r>
 801cebe:	1c43      	adds	r3, r0, #1
 801cec0:	89a3      	ldrh	r3, [r4, #12]
 801cec2:	bf15      	itete	ne
 801cec4:	6560      	strne	r0, [r4, #84]	; 0x54
 801cec6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801ceca:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801cece:	81a3      	strheq	r3, [r4, #12]
 801ced0:	bf18      	it	ne
 801ced2:	81a3      	strhne	r3, [r4, #12]
 801ced4:	bd10      	pop	{r4, pc}

0801ced6 <__sclose>:
 801ced6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ceda:	f000 b813 	b.w	801cf04 <_close_r>
	...

0801cee0 <_write_r>:
 801cee0:	b538      	push	{r3, r4, r5, lr}
 801cee2:	4d07      	ldr	r5, [pc, #28]	; (801cf00 <_write_r+0x20>)
 801cee4:	4604      	mov	r4, r0
 801cee6:	4608      	mov	r0, r1
 801cee8:	4611      	mov	r1, r2
 801ceea:	2200      	movs	r2, #0
 801ceec:	602a      	str	r2, [r5, #0]
 801ceee:	461a      	mov	r2, r3
 801cef0:	f7e5 f847 	bl	8001f82 <_write>
 801cef4:	1c43      	adds	r3, r0, #1
 801cef6:	d102      	bne.n	801cefe <_write_r+0x1e>
 801cef8:	682b      	ldr	r3, [r5, #0]
 801cefa:	b103      	cbz	r3, 801cefe <_write_r+0x1e>
 801cefc:	6023      	str	r3, [r4, #0]
 801cefe:	bd38      	pop	{r3, r4, r5, pc}
 801cf00:	20013a84 	.word	0x20013a84

0801cf04 <_close_r>:
 801cf04:	b538      	push	{r3, r4, r5, lr}
 801cf06:	4d06      	ldr	r5, [pc, #24]	; (801cf20 <_close_r+0x1c>)
 801cf08:	2300      	movs	r3, #0
 801cf0a:	4604      	mov	r4, r0
 801cf0c:	4608      	mov	r0, r1
 801cf0e:	602b      	str	r3, [r5, #0]
 801cf10:	f7e5 f844 	bl	8001f9c <_close>
 801cf14:	1c43      	adds	r3, r0, #1
 801cf16:	d102      	bne.n	801cf1e <_close_r+0x1a>
 801cf18:	682b      	ldr	r3, [r5, #0]
 801cf1a:	b103      	cbz	r3, 801cf1e <_close_r+0x1a>
 801cf1c:	6023      	str	r3, [r4, #0]
 801cf1e:	bd38      	pop	{r3, r4, r5, pc}
 801cf20:	20013a84 	.word	0x20013a84

0801cf24 <_fstat_r>:
 801cf24:	b538      	push	{r3, r4, r5, lr}
 801cf26:	4d07      	ldr	r5, [pc, #28]	; (801cf44 <_fstat_r+0x20>)
 801cf28:	2300      	movs	r3, #0
 801cf2a:	4604      	mov	r4, r0
 801cf2c:	4608      	mov	r0, r1
 801cf2e:	4611      	mov	r1, r2
 801cf30:	602b      	str	r3, [r5, #0]
 801cf32:	f7e5 f836 	bl	8001fa2 <_fstat>
 801cf36:	1c43      	adds	r3, r0, #1
 801cf38:	d102      	bne.n	801cf40 <_fstat_r+0x1c>
 801cf3a:	682b      	ldr	r3, [r5, #0]
 801cf3c:	b103      	cbz	r3, 801cf40 <_fstat_r+0x1c>
 801cf3e:	6023      	str	r3, [r4, #0]
 801cf40:	bd38      	pop	{r3, r4, r5, pc}
 801cf42:	bf00      	nop
 801cf44:	20013a84 	.word	0x20013a84

0801cf48 <_isatty_r>:
 801cf48:	b538      	push	{r3, r4, r5, lr}
 801cf4a:	4d06      	ldr	r5, [pc, #24]	; (801cf64 <_isatty_r+0x1c>)
 801cf4c:	2300      	movs	r3, #0
 801cf4e:	4604      	mov	r4, r0
 801cf50:	4608      	mov	r0, r1
 801cf52:	602b      	str	r3, [r5, #0]
 801cf54:	f7e5 f82a 	bl	8001fac <_isatty>
 801cf58:	1c43      	adds	r3, r0, #1
 801cf5a:	d102      	bne.n	801cf62 <_isatty_r+0x1a>
 801cf5c:	682b      	ldr	r3, [r5, #0]
 801cf5e:	b103      	cbz	r3, 801cf62 <_isatty_r+0x1a>
 801cf60:	6023      	str	r3, [r4, #0]
 801cf62:	bd38      	pop	{r3, r4, r5, pc}
 801cf64:	20013a84 	.word	0x20013a84

0801cf68 <_lseek_r>:
 801cf68:	b538      	push	{r3, r4, r5, lr}
 801cf6a:	4d07      	ldr	r5, [pc, #28]	; (801cf88 <_lseek_r+0x20>)
 801cf6c:	4604      	mov	r4, r0
 801cf6e:	4608      	mov	r0, r1
 801cf70:	4611      	mov	r1, r2
 801cf72:	2200      	movs	r2, #0
 801cf74:	602a      	str	r2, [r5, #0]
 801cf76:	461a      	mov	r2, r3
 801cf78:	f7e5 f81a 	bl	8001fb0 <_lseek>
 801cf7c:	1c43      	adds	r3, r0, #1
 801cf7e:	d102      	bne.n	801cf86 <_lseek_r+0x1e>
 801cf80:	682b      	ldr	r3, [r5, #0]
 801cf82:	b103      	cbz	r3, 801cf86 <_lseek_r+0x1e>
 801cf84:	6023      	str	r3, [r4, #0]
 801cf86:	bd38      	pop	{r3, r4, r5, pc}
 801cf88:	20013a84 	.word	0x20013a84

0801cf8c <_malloc_usable_size_r>:
 801cf8c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801cf90:	1f18      	subs	r0, r3, #4
 801cf92:	2b00      	cmp	r3, #0
 801cf94:	bfbc      	itt	lt
 801cf96:	580b      	ldrlt	r3, [r1, r0]
 801cf98:	18c0      	addlt	r0, r0, r3
 801cf9a:	4770      	bx	lr

0801cf9c <_read_r>:
 801cf9c:	b538      	push	{r3, r4, r5, lr}
 801cf9e:	4d07      	ldr	r5, [pc, #28]	; (801cfbc <_read_r+0x20>)
 801cfa0:	4604      	mov	r4, r0
 801cfa2:	4608      	mov	r0, r1
 801cfa4:	4611      	mov	r1, r2
 801cfa6:	2200      	movs	r2, #0
 801cfa8:	602a      	str	r2, [r5, #0]
 801cfaa:	461a      	mov	r2, r3
 801cfac:	f7e4 ffdc 	bl	8001f68 <_read>
 801cfb0:	1c43      	adds	r3, r0, #1
 801cfb2:	d102      	bne.n	801cfba <_read_r+0x1e>
 801cfb4:	682b      	ldr	r3, [r5, #0]
 801cfb6:	b103      	cbz	r3, 801cfba <_read_r+0x1e>
 801cfb8:	6023      	str	r3, [r4, #0]
 801cfba:	bd38      	pop	{r3, r4, r5, pc}
 801cfbc:	20013a84 	.word	0x20013a84

0801cfc0 <_init>:
 801cfc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cfc2:	bf00      	nop
 801cfc4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801cfc6:	bc08      	pop	{r3}
 801cfc8:	469e      	mov	lr, r3
 801cfca:	4770      	bx	lr

0801cfcc <_fini>:
 801cfcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cfce:	bf00      	nop
 801cfd0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801cfd2:	bc08      	pop	{r3}
 801cfd4:	469e      	mov	lr, r3
 801cfd6:	4770      	bx	lr
